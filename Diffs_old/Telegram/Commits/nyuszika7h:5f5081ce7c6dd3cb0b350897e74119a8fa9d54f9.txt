diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 4a528b636..f03b80e75 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -5,19 +5,20 @@ repositories {
 }
 
 dependencies {
-    compile 'com.android.support:support-v4:23.0.+'
+    compile 'com.android.support:support-v4:23.1.+'
     compile 'com.google.android.gms:play-services:3.2.+'
     //compile 'com.google.android.gms:play-services:7.5.0'
     compile 'net.hockeyapp.android:HockeySDK:3.5.+'
     compile 'com.googlecode.mp4parser:isoparser:1.0.+'
     compile 'org.apache.httpcomponents:httpmime:4.2.1'
-    //compile 'com.android.support:multidex:1.0.1'
 }
 
 android {
-    compileSdkVersion 22
+    compileSdkVersion 23
     buildToolsVersion '23.0.1'
 
+    useLibrary 'org.apache.http.legacy'
+
     packagingOptions {
         exclude 'META-INF/NOTICE.txt'
         exclude 'META-INF/LICENSE.txt'
@@ -87,9 +88,8 @@ android {
     defaultConfig {
         applicationId "org.telegram.plus"
         minSdkVersion 8
-        targetSdkVersion 22
-        versionCode 632
-        versionName "3.2.2.2"
-        //multiDexEnabled true
+        targetSdkVersion 23
+        versionCode 655
+        versionName "3.2.6.0"
     }
 }
diff --git a/TMessagesProj/config/release/AndroidManifest.xml b/TMessagesProj/config/release/AndroidManifest.xml
index 77f154e4d..4d673eb94 100644
--- a/TMessagesProj/config/release/AndroidManifest.xml
+++ b/TMessagesProj/config/release/AndroidManifest.xml
@@ -34,7 +34,7 @@
         <activity android:name="net.hockeyapp.android.UpdateActivity" />
 
         <receiver
-            android:name="org.telegram.messenger.GcmBroadcastReceiver"
+            android:name=".GcmBroadcastReceiver"
             android:permission="com.google.android.c2dm.permission.SEND" >
             <intent-filter>
                 <action android:name="com.google.android.c2dm.intent.RECEIVE" />
diff --git a/TMessagesProj/jni/Android.mk b/TMessagesProj/jni/Android.mk
index bd054413d..7953965a6 100644
--- a/TMessagesProj/jni/Android.mk
+++ b/TMessagesProj/jni/Android.mk
@@ -187,7 +187,7 @@ include $(CLEAR_VARS)
 LOCAL_PRELINK_MODULE := false
 LOCAL_STATIC_LIBRARIES := webp sqlite tgnet breakpad
 
-LOCAL_MODULE 	:= tmessages.12
+LOCAL_MODULE 	:= tmessages.14
 LOCAL_CFLAGS 	:= -w -std=c11 -Os -DNULL=0 -DSOCKLEN_T=socklen_t -DLOCALE_NOT_USED -D_LARGEFILE_SOURCE=1 -D_FILE_OFFSET_BITS=64
 LOCAL_CFLAGS 	+= -Drestrict='' -D__EMX__ -DOPUS_BUILD -DFIXED_POINT -DUSE_ALLOCA -DHAVE_LRINT -DHAVE_LRINTF -fno-math-errno
 LOCAL_CFLAGS 	+= -DANDROID_NDK -DDISABLE_IMPORTGL -fno-strict-aliasing -fprefetch-loop-arrays -DAVOID_TABLES -DANDROID_TILE_BASED_DECODE -DANDROID_ARMV6_IDCT -ffast-math
diff --git a/TMessagesProj/jni/image.c b/TMessagesProj/jni/image.c
index a2cc1dfb8..5445075b7 100644
--- a/TMessagesProj/jni/image.c
+++ b/TMessagesProj/jni/image.c
@@ -16,11 +16,6 @@ jfieldID jclass_Options_inJustDecodeBounds;
 jfieldID jclass_Options_outHeight;
 jfieldID jclass_Options_outWidth;
 
-jclass jclass_Bitmap;
-jmethodID jclass_Bitmap_createBitmap;
-jclass jclass_Config;
-jfieldID jclass_Config_ARGB_8888;
-
 const uint32_t PGPhotoEnhanceHistogramBins = 256;
 const uint32_t PGPhotoEnhanceSegments = 4;
 
@@ -58,24 +53,6 @@ jint imageOnJNILoad(JavaVM *vm, void *reserved, JNIEnv *env) {
         return -1;
     }
     
-    jclass_Bitmap = createGlobarRef(env, (*env)->FindClass(env, "android/graphics/Bitmap"));
-    if (jclass_Bitmap == 0) {
-        return -1;
-    }
-    jclass_Bitmap_createBitmap = (*env)->GetStaticMethodID(env, jclass_Bitmap, "createBitmap", "(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;");
-    if (jclass_Bitmap_createBitmap == 0) {
-        return -1;
-    }
-    
-    jclass_Config = createGlobarRef(env, (*env)->FindClass(env, "android/graphics/Bitmap$Config"));
-    if (jclass_Config == 0) {
-        return -1;
-    }
-    jclass_Config_ARGB_8888 = (*env)->GetStaticFieldID(env, jclass_Config, "ARGB_8888", "Landroid/graphics/Bitmap$Config;");
-    if (jclass_Config_ARGB_8888 == 0) {
-        return -1;
-    }
-    
     return JNI_VERSION_1_6;
 }
 
@@ -511,7 +488,7 @@ JNIEXPORT void Java_org_telegram_messenger_Utilities_loadBitmap(JNIEnv *env, jcl
     }
 }
 
-JNIEXPORT jobject Java_org_telegram_messenger_Utilities_loadWebpImage(JNIEnv *env, jclass class, jobject buffer, int len, jobject options) {
+JNIEXPORT jboolean Java_org_telegram_messenger_Utilities_loadWebpImage(JNIEnv *env, jclass class, jobject outputBitmap, jobject buffer, jint len, jobject options, jboolean unpin) {
     if (!buffer) {
         (*env)->ThrowNew(env, jclass_NullPointerException, "Input buffer can not be null");
         return 0;
@@ -529,43 +506,36 @@ JNIEXPORT jobject Java_org_telegram_messenger_Utilities_loadWebpImage(JNIEnv *en
     if (options && (*env)->GetBooleanField(env, options, jclass_Options_inJustDecodeBounds) == JNI_TRUE) {
         (*env)->SetIntField(env, options, jclass_Options_outWidth, bitmapWidth);
         (*env)->SetIntField(env, options, jclass_Options_outHeight, bitmapHeight);
-        return 0;
+        return 1;
     }
-
-    jobject value__ARGB_8888 = (*env)->GetStaticObjectField(env, jclass_Config, jclass_Config_ARGB_8888);
-    jobject outputBitmap = (*env)->CallStaticObjectMethod(env, jclass_Bitmap, jclass_Bitmap_createBitmap, (jint)bitmapWidth, (jint)bitmapHeight, value__ARGB_8888);
+    
     if (!outputBitmap) {
-        (*env)->ThrowNew(env, jclass_RuntimeException, "Failed to allocate Bitmap");
+        (*env)->ThrowNew(env, jclass_NullPointerException, "output bitmap can not be null");
         return 0;
     }
-    outputBitmap = (*env)->NewLocalRef(env, outputBitmap);
     
     AndroidBitmapInfo bitmapInfo;
     if (AndroidBitmap_getInfo(env, outputBitmap, &bitmapInfo) != ANDROID_BITMAP_RESUT_SUCCESS) {
-        (*env)->DeleteLocalRef(env, outputBitmap);
         (*env)->ThrowNew(env, jclass_RuntimeException, "Failed to get Bitmap information");
         return 0;
     }
     
     void *bitmapPixels = 0;
     if (AndroidBitmap_lockPixels(env, outputBitmap, &bitmapPixels) != ANDROID_BITMAP_RESUT_SUCCESS) {
-        (*env)->DeleteLocalRef(env, outputBitmap);
         (*env)->ThrowNew(env, jclass_RuntimeException, "Failed to lock Bitmap pixels");
         return 0;
     }
     
     if (!WebPDecodeRGBAInto((uint8_t*)inputBuffer, len, (uint8_t*)bitmapPixels, bitmapInfo.height * bitmapInfo.stride, bitmapInfo.stride)) {
         AndroidBitmap_unlockPixels(env, outputBitmap);
-        (*env)->DeleteLocalRef(env, outputBitmap);
         (*env)->ThrowNew(env, jclass_RuntimeException, "Failed to decode webp image");
         return 0;
     }
     
-    if (AndroidBitmap_unlockPixels(env, outputBitmap) != ANDROID_BITMAP_RESUT_SUCCESS) {
-        (*env)->DeleteLocalRef(env, outputBitmap);
+    if (unpin && AndroidBitmap_unlockPixels(env, outputBitmap) != ANDROID_BITMAP_RESUT_SUCCESS) {
         (*env)->ThrowNew(env, jclass_RuntimeException, "Failed to unlock Bitmap pixels");
         return 0;
     }
     
-    return outputBitmap;
+    return 1;
 }
diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index 834f1af18..306d735eb 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -12,8 +12,6 @@
 
     <uses-feature android:glEsVersion="0x00020000" android:required="false"/>
     <uses-feature android:name="android.hardware.telephony" android:required="false" />
-    <uses-feature android:name="android.hardware.camera.autofocus" android:required="false" />
-    <uses-feature android:name="android.hardware.camera" android:required="false" />
     <uses-feature android:name="android.hardware.wifi" android:required="false" />
     <uses-feature android:name="android.hardware.screen.PORTRAIT" android:required="false" />
     <uses-feature android:name="android.hardware.microphone" android:required="false" />
@@ -26,7 +24,6 @@
     <uses-permission android:name="android.permission.WAKE_LOCK" />
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
-    <uses-permission android:name="android.permission.CAMERA" />
     <uses-permission android:name="android.permission.GET_ACCOUNTS" />
     <uses-permission android:name="android.permission.READ_CONTACTS" />
     <uses-permission android:name="android.permission.WRITE_CONTACTS" />
@@ -39,6 +36,7 @@
     <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
     <uses-permission android:name="android.permission.READ_PHONE_STATE" />
     <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
+    <uses-permission android:name="android.permission.USE_FINGERPRINT" />
 
     <application
         android:name=".ApplicationLoader"
@@ -108,6 +106,7 @@
                 <category android:name="android.intent.category.DEFAULT" />
                 <data android:scheme="tg" />
             </intent-filter>
+            <meta-data android:name="android.service.chooser.chooser_target_service" android:value=".TgChooserTargetService" />
         </activity>
         <activity
             android:name="org.telegram.ui.IntroActivity"
@@ -159,6 +158,15 @@
                 android:resource="@xml/contacts" />
         </service>
 
+        <service
+            android:name=".TgChooserTargetService"
+            android:label="@string/AppName"
+            android:permission="android.permission.BIND_CHOOSER_TARGET_SERVICE">
+            <intent-filter>
+                <action android:name="android.service.chooser.ChooserTargetService" />
+            </intent-filter>
+        </service>
+
         <service android:name=".NotificationsService" android:enabled="true"/>
         <service android:name=".NotificationRepeat" android:exported="false"/>
         <service android:name=".VideoEncodingService" android:enabled="true"/>
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_0.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_0.jpg
deleted file mode 100644
index 251747ff3..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_0.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_1.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_1.jpg
deleted file mode 100644
index 21bc015ea..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_1.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_2.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_2.jpg
deleted file mode 100644
index c1c6fd3b7..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_2.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_3.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_3.jpg
deleted file mode 100644
index bb398488c..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_3.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_4.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_4.jpg
deleted file mode 100644
index a74e170f9..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_4.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_a_0.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_a_0.jpg
deleted file mode 100644
index 2fe760d04..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_a_0.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_a_1.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_a_1.jpg
deleted file mode 100644
index 776bf5887..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_a_1.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_a_2.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_a_2.jpg
deleted file mode 100644
index 43a7aa378..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_a_2.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_a_3.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_a_3.jpg
deleted file mode 100644
index 95d146fea..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_a_3.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_a_4.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_a_4.jpg
deleted file mode 100644
index 2be40c476..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji2.0x_a_4.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_0.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_0.jpg
deleted file mode 100644
index bc1d03b45..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_0.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_1.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_1.jpg
deleted file mode 100644
index 8288773c4..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_1.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_2.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_2.jpg
deleted file mode 100644
index feea12096..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_2.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_3.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_3.jpg
deleted file mode 100644
index 0e3bcede0..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_3.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_4.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_4.jpg
deleted file mode 100644
index 1f74e8359..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_4.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_a_0.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_a_0.jpg
deleted file mode 100644
index 5218c3ca4..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_a_0.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_a_1.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_a_1.jpg
deleted file mode 100644
index e6192101a..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_a_1.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_a_2.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_a_2.jpg
deleted file mode 100644
index 58476054b..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_a_2.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_a_3.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_a_3.jpg
deleted file mode 100644
index 7e4ea184c..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_a_3.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_a_4.jpg b/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_a_4.jpg
deleted file mode 100644
index 9bb3ea6cd..000000000
Binary files a/TMessagesProj/src/main/assets/emoji/v4_emoji3.0x_a_4.jpg and /dev/null differ
diff --git a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteCursor.java b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteCursor.java
index 87deca404..01275c5a0 100644
--- a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteCursor.java
+++ b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteCursor.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.SQLite;
diff --git a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteDatabase.java b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteDatabase.java
index 0aecf4b23..eb8bd6ada 100644
--- a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteDatabase.java
+++ b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteDatabase.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.SQLite;
@@ -22,7 +22,7 @@ public int getSQLiteHandle() {
 	}
 
 	public SQLiteDatabase(String fileName) throws SQLiteException {
-		sqliteHandle = opendb(fileName, ApplicationLoader.applicationContext.getFilesDir().getPath());
+		sqliteHandle = opendb(fileName, ApplicationLoader.getFilesDirFixed().getPath());
 		isOpen = true;
 	}
 
diff --git a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteException.java b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteException.java
index d27cfb6a0..2540c0947 100644
--- a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteException.java
+++ b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteException.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.SQLite;
diff --git a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteNoRowException.java b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteNoRowException.java
index 042f0070f..944d21430 100644
--- a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteNoRowException.java
+++ b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLiteNoRowException.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.SQLite;
diff --git a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLitePreparedStatement.java b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLitePreparedStatement.java
index a2c871404..cd933701c 100644
--- a/TMessagesProj/src/main/java/org/telegram/SQLite/SQLitePreparedStatement.java
+++ b/TMessagesProj/src/main/java/org/telegram/SQLite/SQLitePreparedStatement.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.SQLite;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
index 351900435..46561fb48 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ApplicationLoader.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
@@ -17,6 +17,7 @@
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.content.SharedPreferences;
+import android.content.pm.ApplicationInfo;
 import android.content.pm.PackageInfo;
 import android.content.res.Configuration;
 import android.graphics.drawable.ColorDrawable;
@@ -96,7 +97,7 @@ public void run() {
                                 cachedWallpaper = applicationContext.getResources().getDrawable(R.drawable.background_hd);
                                 isCustomTheme = false;
                             } else {
-                                File toFile = new File(ApplicationLoader.applicationContext.getFilesDir(), "wallpaper.jpg");
+                                File toFile = new File(getFilesDirFixed(), "wallpaper.jpg");
                                 if (toFile.exists()) {
                                     cachedWallpaper = Drawable.createFromPath(toFile.getAbsolutePath());
                                     isCustomTheme = true;
@@ -155,7 +156,7 @@ private static void convertConfig() {
             }
 
             try {
-                File file = new File(ApplicationLoader.applicationContext.getFilesDir(), "tgnet.dat");
+                File file = new File(getFilesDirFixed(), "tgnet.dat");
                 RandomAccessFile fileOutputStream = new RandomAccessFile(file, "rws");
                 byte[] bytes = buffer.toByteArray();
                 fileOutputStream.writeInt(Integer.reverseBytes(bytes.length));
@@ -169,6 +170,24 @@ private static void convertConfig() {
         }
     }
 
+    public static File getFilesDirFixed() {
+        for (int a = 0; a < 10; a++) {
+            File path = ApplicationLoader.applicationContext.getFilesDir();
+            if (path != null) {
+                return path;
+            }
+        }
+        try {
+            ApplicationInfo info = applicationContext.getApplicationInfo();
+            File path = new File(info.dataDir, "files");
+            path.mkdirs();
+            return path;
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+        }
+        return new File("/data/data/org.telegram.messenger/files");
+    }
+
     public static void postInitApplication() {
         if (applicationInited) {
             return;
@@ -205,7 +224,7 @@ public static void postInitApplication() {
         String langCode;
         String appVersion;
         String systemVersion;
-        String configPath = ApplicationLoader.applicationContext.getFilesDir().toString();
+        String configPath = getFilesDirFixed().toString();
 
         try {
             langCode = LocaleController.getLocaleString(LocaleController.getInstance().getSystemDefaultLocale());
@@ -233,7 +252,7 @@ public static void postInitApplication() {
         }
 
         MessagesController.getInstance();
-        ConnectionsManager.getInstance().init(BuildVars.BUILD_VERSION, TLRPC.LAYER, BuildVars.APP_ID, deviceModel, systemVersion, appVersion, langCode, configPath, UserConfig.getClientUserId());
+        ConnectionsManager.getInstance().init(BuildVars.BUILD_VERSION, TLRPC.LAYER, BuildVars.APP_ID, deviceModel, systemVersion, appVersion, langCode, configPath, FileLog.getNetworkLogPath(), UserConfig.getClientUserId());
         if (UserConfig.getCurrentUser() != null) {
             MessagesController.getInstance().putUser(UserConfig.getCurrentUser(), true);
             ConnectionsManager.getInstance().applyCountryPortNumber(UserConfig.getCurrentUser().phone);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/DispatchQueue.java b/TMessagesProj/src/main/java/org/telegram/messenger/DispatchQueue.java
index 529cbdbc5..f1a1918e1 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/DispatchQueue.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/DispatchQueue.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/FileLoadOperation.java b/TMessagesProj/src/main/java/org/telegram/messenger/FileLoadOperation.java
index 64ab95a76..686066cf3 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/FileLoadOperation.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/FileLoadOperation.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
@@ -256,7 +256,8 @@ public void run() {
                 nextDownloadOffset = downloadedBytes = downloadedBytes / currentDownloadChunkSize * currentDownloadChunkSize;
             }
 
-            if (BuildVars.DEBUG_VERSION) {
+            //if (BuildVars.DEBUG_VERSION) {
+            if (BuildConfig.DEBUG) {
                 FileLog.d("tmessages", "start loading file to temp = " + cacheFileTemp + " final = " + cacheFileFinal);
             }
 
@@ -377,13 +378,15 @@ private void onFinishLoadingFile() throws Exception {
         }
         if (cacheFileTemp != null) {
             if (!cacheFileTemp.renameTo(cacheFileFinal)) {
-                if (BuildVars.DEBUG_VERSION) {
+                //if (BuildVars.DEBUG_VERSION) {
+                if (BuildConfig.DEBUG) {
                     FileLog.e("tmessages", "unable to rename temp = " + cacheFileTemp + " to final = " + cacheFileFinal);
                 }
                 cacheFileFinal = cacheFileTemp;
             }
         }
-        if (BuildVars.DEBUG_VERSION) {
+        //if (BuildVars.DEBUG_VERSION) {
+        if (BuildConfig.DEBUG) {
             FileLog.e("tmessages", "finished downloading file to " + cacheFileFinal);
         }
         delegate.didFinishLoadingFile(FileLoadOperation.this, cacheFileFinal);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java b/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java
index f5256ae7a..c4dd00ed7 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
@@ -8,7 +8,6 @@
 
 package org.telegram.messenger;
 
-
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
 
@@ -27,7 +26,7 @@
     public interface FileLoaderDelegate {
         void fileUploadProgressChanged(String location, float progress, boolean isEncrypted);
 
-        void fileDidUploaded(String location, TLRPC.InputFile inputFile, TLRPC.InputEncryptedFile inputEncryptedFile, byte[] key, byte[] iv);
+        void fileDidUploaded(String location, TLRPC.InputFile inputFile, TLRPC.InputEncryptedFile inputEncryptedFile, byte[] key, byte[] iv, long totalFileSize);
 
         void fileDidFailedUpload(String location, boolean isEncrypted);
 
@@ -112,6 +111,7 @@ public void run() {
                 }
                 uploadSizes.remove(location);
                 if (operation != null) {
+                    uploadOperationPathsEnc.remove(location);
                     uploadOperationQueue.remove(operation);
                     uploadSmallOperationQueue.remove(operation);
                     operation.cancel();
@@ -175,7 +175,7 @@ public void run() {
                 }
                 operation.delegate = new FileUploadOperation.FileUploadOperationDelegate() {
                     @Override
-                    public void didFinishUploadingFile(FileUploadOperation operation, final TLRPC.InputFile inputFile, final TLRPC.InputEncryptedFile inputEncryptedFile, final byte[] key, final byte[] iv) {
+                    public void didFinishUploadingFile(final FileUploadOperation operation, final TLRPC.InputFile inputFile, final TLRPC.InputEncryptedFile inputEncryptedFile, final byte[] key, final byte[] iv) {
                         fileLoaderQueue.postRunnable(new Runnable() {
                             @Override
                             public void run() {
@@ -204,7 +204,7 @@ public void run() {
                                     }
                                 }
                                 if (delegate != null) {
-                                    delegate.fileDidUploaded(location, inputFile, inputEncryptedFile, key, iv);
+                                    delegate.fileDidUploaded(location, inputFile, inputEncryptedFile, key, iv, operation.getTotalFileSize());
                                 }
                             }
                         });
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/FileLog.java b/TMessagesProj/src/main/java/org/telegram/messenger/FileLog.java
index 64be4517a..809e20ab8 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/FileLog.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/FileLog.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
@@ -22,6 +22,7 @@
     private FastDateFormat dateFormat = null;
     private DispatchQueue logQueue = null;
     private File currentFile = null;
+    private File networkFile = null;
 
     private static volatile FileLog Instance = null;
     public static FileLog getInstance() {
@@ -66,6 +67,22 @@ public FileLog() {
         }
     }
 
+    public static String getNetworkLogPath() {
+        try {
+            File sdCard = ApplicationLoader.applicationContext.getExternalFilesDir(null);
+            if (sdCard == null) {
+                return "";
+            }
+            File dir = new File(sdCard.getAbsolutePath() + "/logs");
+            dir.mkdirs();
+            getInstance().networkFile = new File(dir, getInstance().dateFormat.format(System.currentTimeMillis()) + "_net.txt");
+            return getInstance().networkFile.getAbsolutePath();
+        } catch (Throwable e) {
+            e.printStackTrace();
+        }
+        return "";
+    }
+
     public static void e(final String tag, final String message, final Throwable exception) {
         //if (!BuildVars.DEBUG_VERSION) {
         if (!BuildConfig.DEBUG) {
@@ -186,6 +203,9 @@ public static void cleanupLogs() {
             if (getInstance().currentFile != null && file.getAbsolutePath().equals(getInstance().currentFile.getAbsolutePath())) {
                 continue;
             }
+            if (getInstance().networkFile != null && file.getAbsolutePath().equals(getInstance().networkFile.getAbsolutePath())) {
+                continue;
+            }
             file.delete();
         }
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/FileUploadOperation.java b/TMessagesProj/src/main/java/org/telegram/messenger/FileUploadOperation.java
index da776516c..e60cc2892 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/FileUploadOperation.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/FileUploadOperation.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
@@ -63,6 +63,10 @@ public FileUploadOperation(String location, boolean encrypted, int estimated) {
         estimatedSize = estimated;
     }
 
+    public long getTotalFileSize() {
+        return totalFileSize;
+    }
+
     public void start() {
         if (state != 0) {
             return;
@@ -77,7 +81,7 @@ public void run() {
     }
 
     public void cancel() {
-        if (state != 1) {
+        if (state == 3) {
             return;
         }
         state = 2;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessageKeyData.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessageKeyData.java
index 3789758c8..ac218a10b 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessageKeyData.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessageKeyData.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
index eb8acd4d9..8b8563a1b 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
@@ -38,6 +38,7 @@
     public static int autoLockIn = 60 * 60;
     public static int lastPauseTime = 0;
     public static boolean isWaitingForPasscodeEnter = false;
+    public static boolean useFingerprint = true;
     public static int lastUpdateVersion;
     public static int lastContactsSyncTime;
     public static boolean channelsLoaded = false;
@@ -79,6 +80,7 @@ public static void saveConfig(boolean withFile, File oldFile) {
                 editor.putInt("lastUpdateVersion", lastUpdateVersion);
                 editor.putInt("lastContactsSyncTime", lastContactsSyncTime);
                 editor.putBoolean("channelsLoaded", channelsLoaded);
+                editor.putBoolean("useFingerprint", useFingerprint);
 
                 if (currentUser != null) {
                     if (withFile) {
@@ -128,7 +130,7 @@ public static void setCurrentUser(TLRPC.User user) {
 
     public static void loadConfig() {
         synchronized (sync) {
-            final File configFile = new File(ApplicationLoader.applicationContext.getFilesDir(), "user.dat");
+            final File configFile = new File(ApplicationLoader.getFilesDirFixed(), "user.dat");
             if (configFile.exists()) {
                 try {
                     SerializedData data = new SerializedData(configFile);
@@ -207,6 +209,7 @@ public void run() {
                 passcodeType = preferences.getInt("passcodeType", 0);
                 autoLockIn = preferences.getInt("autoLockIn", 60 * 60);
                 lastPauseTime = preferences.getInt("lastPauseTime", 0);
+                useFingerprint = preferences.getBoolean("useFingerprint", true);
                 lastUpdateVersion = preferences.getInt("lastUpdateVersion", 511);
                 lastContactsSyncTime = preferences.getInt("lastContactsSyncTime", (int) (System.currentTimeMillis() / 1000) - 23 * 60 * 60);
                 channelsLoaded = preferences.getBoolean("channelsLoaded", false);
@@ -281,6 +284,7 @@ public static void clearConfig() {
         passcodeSalt = new byte[0];
         autoLockIn = 60 * 60;
         lastPauseTime = 0;
+        useFingerprint = true;
         isWaitingForPasscodeEnter = false;
         lastUpdateVersion = BuildVars.BUILD_VERSION;
         lastContactsSyncTime = (int) (System.currentTimeMillis() / 1000) - 23 * 60 * 60;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java b/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
index c66e02772..6c7c69c9d 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
@@ -63,17 +63,11 @@
     }
 
     public native static void loadBitmap(String path, Bitmap bitmap, int scale, int width, int height, int stride);
-
     public native static int pinBitmap(Bitmap bitmap);
-
     public native static void blurBitmap(Object bitmap, int radius, int unpin);
-
     public native static void calcCDT(ByteBuffer hsvBuffer, int width, int height, ByteBuffer buffer);
-
-    public native static Bitmap loadWebpImage(ByteBuffer buffer, int len, BitmapFactory.Options options);
-
+    public native static boolean loadWebpImage(Bitmap bitmap, ByteBuffer buffer, int len, BitmapFactory.Options options, boolean unpin);
     public native static int convertVideoFrame(ByteBuffer src, ByteBuffer dest, int destFormat, int width, int height, int padding, int swap);
-
     private native static void aesIgeEncryption(ByteBuffer buffer, byte[] key, byte[] iv, boolean encrypt, int offset, int length);
 
     public static void aesIgeEncryption(ByteBuffer buffer, byte[] key, byte[] iv, boolean encrypt, boolean changeIv, int offset, int length) {
@@ -172,6 +166,11 @@ public static boolean isGoodPrime(byte[] prime, int g) {
             }
         }
 
+        String hex = bytesToHex(prime);
+        if (hex.equals("C71CAEB9C6B1C9048E6C522F70F13F73980D40238E3E21C14934D037563D930F48198A0AA7C14058229493D22530F4DBFA336F6E0AC925139543AED44CCE7C3720FD51F69458705AC68CD4FE6B6B13ABDC9746512969328454F18FAF8C595F642477FE96BB2A941D5BCD1D4AC8CC49880708FA9B378E3C4F3A9060BEE67CF9A4A4A695811051907E162753B56B0F6B410DBA74D8A84B2A14B3144E0EF1284754FD17ED950D5965B4B9DD46582DB1178D169C6BC465B0D6FF9CA3928FEF5B9AE4E418FC15E83EBEA0F87FA9FF5EED70050DED2849F47BF959D956850CE929851F0D8115F635B105EE2E4E15D04B2454BF6F4FADF034B10403119CD8E3B92FCC5B")) {
+            return true;
+        }
+
         BigInteger dhBI2 = dhBI.subtract(BigInteger.valueOf(1)).divide(BigInteger.valueOf(2));
         return !(!dhBI.isProbablePrime(30) || !dhBI2.isProbablePrime(30));
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java
index 503ba87ef..e0300ccdb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBar.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.4.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.ActionBar;
@@ -22,10 +22,15 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
+import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
+import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.R;
 import org.telegram.ui.Components.LayoutHelper;
 
+import java.util.ArrayList;
+
 public class ActionBar extends FrameLayout {
 
     public static class ActionBarMenuOnItemClick {
@@ -45,6 +50,8 @@ public boolean canOpenMenu() {
     private ActionBarMenu menu;
     private ActionBarMenu actionMode;
     private boolean occupyStatusBar = Build.VERSION.SDK_INT >= 21;
+    private boolean actionModeVisible;
+    private boolean addToContainer = true;
 
     private boolean allowOverlayTitle;
     private CharSequence lastTitle;
@@ -55,7 +62,6 @@ public boolean canOpenMenu() {
     private boolean isBackOverlayVisible;
     protected BaseFragment parentFragment;
     public ActionBarMenuOnItemClick actionBarMenuOnItemClick;
-    private int extraHeight;
 
     public ActionBar(Context context) {
         super(context);
@@ -68,6 +74,7 @@ private void createBackButtonImage() {
         backButtonImageView = new ImageView(getContext());
         backButtonImageView.setScaleType(ImageView.ScaleType.CENTER);
         backButtonImageView.setBackgroundResource(itemsBackgroundResourceId);
+        backButtonImageView.setPadding(AndroidUtilities.dp(1), 0, 0, 0);
         addView(backButtonImageView, LayoutHelper.createFrame(54, 54, Gravity.LEFT | Gravity.TOP));
 
         backButtonImageView.setOnClickListener(new OnClickListener() {
@@ -90,6 +97,9 @@ public void setBackButtonDrawable(Drawable drawable) {
         }
         backButtonImageView.setVisibility(drawable == null ? GONE : VISIBLE);
         backButtonImageView.setImageDrawable(drawable);
+        if (drawable instanceof BackDrawable) {
+            ((BackDrawable) drawable).setRotation(isActionModeShowed() ? 1 : 0, false);
+        }
     }
 
     public void setBackButtonImage(int resource) {
@@ -111,7 +121,15 @@ private void createSubtitleTextView() {
         subTitleTextView.setLines(1);
         subTitleTextView.setMaxLines(1);
         subTitleTextView.setEllipsize(TextUtils.TruncateAt.END);
-        addView(subTitleTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP));
+        addView(subTitleTextView, 0, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP));
+    }
+
+    public void setAddToContainer(boolean value) {
+        addToContainer = value;
+    }
+
+    public boolean getAddToContainer() {
+        return addToContainer;
     }
 
     public void setSubtitle(CharSequence value) {
@@ -136,7 +154,7 @@ private void createTitleTextView() {
         titleTextView.setEllipsize(TextUtils.TruncateAt.END);
         titleTextView.setTextColor(0xffffffff);
         titleTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-        addView(titleTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP));
+        addView(titleTextView, 0, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP));
     }
 
     public void setTitle(CharSequence value) {
@@ -183,12 +201,7 @@ public ActionBarMenu createMenu() {
             return menu;
         }
         menu = new ActionBarMenu(getContext(), this);
-        addView(menu);
-        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)menu.getLayoutParams();
-        layoutParams.height = LayoutHelper.MATCH_PARENT;
-        layoutParams.width = LayoutHelper.WRAP_CONTENT;
-        layoutParams.gravity = Gravity.RIGHT;
-        menu.setLayoutParams(layoutParams);
+        addView(menu, 0, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.MATCH_PARENT, Gravity.RIGHT));
         return menu;
     }
 
@@ -201,8 +214,8 @@ public ActionBarMenu createActionMode() {
             return actionMode;
         }
         actionMode = new ActionBarMenu(getContext(), this);
-        actionMode.setBackgroundResource(R.drawable.editheader);
-        addView(actionMode);
+        actionMode.setBackgroundColor(0xffffffff);
+        addView(actionMode, indexOfChild(backButtonImageView));
         actionMode.setPadding(0, occupyStatusBar ? AndroidUtilities.statusBarHeight : 0, 0, 0);
         FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams)actionMode.getLayoutParams();
         layoutParams.height = LayoutHelper.MATCH_PARENT;
@@ -227,34 +240,95 @@ public ActionBarMenu createActionMode() {
     }
 
     public void showActionMode() {
-        if (actionMode == null) {
+        if (actionMode == null || actionModeVisible) {
             return;
         }
+        actionModeVisible = true;
+        if (Build.VERSION.SDK_INT >= 14) {
+            ArrayList<Object> animators = new ArrayList<>();
+            animators.add(ObjectAnimatorProxy.ofFloat(actionMode, "alpha", 0.0f, 1.0f));
+            if (occupyStatusBar && actionModeTop != null) {
+                animators.add(ObjectAnimatorProxy.ofFloat(actionModeTop, "alpha", 0.0f, 1.0f));
+            }
+            AnimatorSetProxy animatorSetProxy = new AnimatorSetProxy();
+            animatorSetProxy.playTogether(animators);
+            animatorSetProxy.setDuration(200);
+            animatorSetProxy.addListener(new AnimatorListenerAdapterProxy() {
+                @Override
+                public void onAnimationStart(Object animation) {
         actionMode.setVisibility(VISIBLE);
         if (occupyStatusBar && actionModeTop != null) {
             actionModeTop.setVisibility(VISIBLE);
         }
+                }
+
+                @Override
+                public void onAnimationEnd(Object animation) {
         if (titleTextView != null) {
             titleTextView.setVisibility(INVISIBLE);
         }
         if (subTitleTextView != null) {
             subTitleTextView.setVisibility(INVISIBLE);
         }
-        if (backButtonImageView != null) {
-            backButtonImageView.setVisibility(INVISIBLE);
-        }
         if (menu != null) {
             menu.setVisibility(INVISIBLE);
         }
     }
+            });
+            animatorSetProxy.start();
+        } else {
+            actionMode.setVisibility(VISIBLE);
+            if (occupyStatusBar && actionModeTop != null) {
+                actionModeTop.setVisibility(VISIBLE);
+            }
+            if (titleTextView != null) {
+                titleTextView.setVisibility(INVISIBLE);
+            }
+            if (subTitleTextView != null) {
+                subTitleTextView.setVisibility(INVISIBLE);
+            }
+            if (menu != null) {
+                menu.setVisibility(INVISIBLE);
+            }
+        }
+        if (backButtonImageView != null) {
+            Drawable drawable = backButtonImageView.getDrawable();
+            if (drawable instanceof BackDrawable) {
+                ((BackDrawable) drawable).setRotation(1, true);
+            }
+            backButtonImageView.setBackgroundResource(R.drawable.bar_selector_mode);
+        }
+    }
 
     public void hideActionMode() {
-        if (actionMode == null) {
+        if (actionMode == null || !actionModeVisible) {
             return;
         }
-        actionMode.setVisibility(INVISIBLE);
-        if (occupyStatusBar && actionModeTop != null) {
-            actionModeTop.setVisibility(INVISIBLE);
+        actionModeVisible = false;
+        if (Build.VERSION.SDK_INT >= 14) {
+            ArrayList<Object> animators = new ArrayList<>();
+            animators.add(ObjectAnimatorProxy.ofFloat(actionMode, "alpha", 0.0f));
+            if (occupyStatusBar && actionModeTop != null) {
+                animators.add(ObjectAnimatorProxy.ofFloat(actionModeTop, "alpha", 0.0f));
+            }
+            AnimatorSetProxy animatorSetProxy = new AnimatorSetProxy();
+            animatorSetProxy.playTogether(animators);
+            animatorSetProxy.setDuration(200);
+            animatorSetProxy.addListener(new AnimatorListenerAdapterProxy() {
+                @Override
+                public void onAnimationEnd(Object animation) {
+                    actionMode.setVisibility(INVISIBLE);
+                    if (occupyStatusBar && actionModeTop != null) {
+                        actionModeTop.setVisibility(INVISIBLE);
+                    }
+                }
+            });
+            animatorSetProxy.start();
+        } else {
+            actionMode.setVisibility(INVISIBLE);
+            if (occupyStatusBar && actionModeTop != null) {
+                actionModeTop.setVisibility(INVISIBLE);
+            }
         }
         if (titleTextView != null) {
             titleTextView.setVisibility(VISIBLE);
@@ -262,12 +336,16 @@ public void hideActionMode() {
         if (subTitleTextView != null) {
             subTitleTextView.setVisibility(VISIBLE);
         }
-        if (backButtonImageView != null) {
-            backButtonImageView.setVisibility(VISIBLE);
-        }
         if (menu != null) {
             menu.setVisibility(VISIBLE);
         }
+        if (backButtonImageView != null) {
+            Drawable drawable = backButtonImageView.getDrawable();
+            if (drawable instanceof BackDrawable) {
+                ((BackDrawable) drawable).setRotation(0, true);
+            }
+            backButtonImageView.setBackgroundResource(itemsBackgroundResourceId);
+        }
     }
 
     public void showActionModeTop() {
@@ -284,7 +362,7 @@ public void showActionModeTop() {
     }
 
     public boolean isActionModeShowed() {
-        return actionMode != null && actionMode.getVisibility() == VISIBLE;
+        return actionMode != null && actionModeVisible;
     }
 
     protected void onSearchFieldVisibilityChanged(boolean visible) {
@@ -297,7 +375,7 @@ protected void onSearchFieldVisibilityChanged(boolean visible) {
         }
         Drawable drawable = backButtonImageView.getDrawable();
         if (drawable != null && drawable instanceof MenuDrawable) {
-            ((MenuDrawable)drawable).setRotation(visible ? 1 : 0, true);
+            ((MenuDrawable) drawable).setRotation(visible ? 1 : 0, true);
         }
     }
 
@@ -322,7 +400,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         int actionBarHeight = getCurrentActionBarHeight();
         int actionBarHeightSpec = MeasureSpec.makeMeasureSpec(actionBarHeight, MeasureSpec.EXACTLY);
 
-        setMeasuredDimension(width, actionBarHeight + extraHeight + (occupyStatusBar ? AndroidUtilities.statusBarHeight : 0));
+        setMeasuredDimension(width, actionBarHeight + (occupyStatusBar ? AndroidUtilities.statusBarHeight : 0));
 
         int textLeft;
         if (backButtonImageView != null && backButtonImageView.getVisibility() != GONE) {
@@ -483,17 +561,6 @@ public boolean isSearchFieldVisible() {
         return isSearchFieldVisible;
     }
 
-    public void setExtraHeight(int value, boolean layout) {
-        extraHeight = value;
-        if (layout) {
-            requestLayout();
-        }
-    }
-
-    public int getExtraHeight() {
-        return extraHeight;
-    }
-
     public void setOccupyStatusBar(boolean value) {
         occupyStatusBar = value;
         if (actionMode != null) {
@@ -510,7 +577,7 @@ public void setItemsBackground(int resourceId) {
         if (backButtonImageView != null) {
             backButtonImageView.setBackgroundResource(itemsBackgroundResourceId);
         }
-		setBackgroundColor(AndroidUtilities.getIntColor("themeColor")); //Plus
+        setBackgroundColor(AndroidUtilities.getIntColor("themeColor")); //Plus
     }
 
     public void setCastShadows(boolean value) {
@@ -536,4 +603,9 @@ public static int getCurrentActionBarHeight() {
             return AndroidUtilities.dp(56);
         }
     }
+
+    @Override
+    public boolean hasOverlappingRendering() {
+        return false;
+    }
 }
\ No newline at end of file
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
index 5a70d96c2..492f75978 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.4.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.ActionBar;
@@ -59,7 +59,6 @@ protected boolean drawChild(Canvas canvas, View child, long drawingTime) {
             if (child instanceof ActionBar) {
                 return super.drawChild(canvas, child, drawingTime);
             } else {
-                //boolean wasActionBar = false;
                 int actionBarHeight = 0;
                 int childCount = getChildCount();
                 for (int a = 0; a < childCount; a++) {
@@ -70,24 +69,10 @@ protected boolean drawChild(Canvas canvas, View child, long drawingTime) {
                     if (view instanceof ActionBar && view.getVisibility() == VISIBLE) {
                         if (((ActionBar) view).getCastShadows()) {
                             actionBarHeight = view.getMeasuredHeight();
-                            //wasActionBar = true;
                         }
                         break;
                     }
                 }
-                /*if (!wasActionBar) {
-                    if (child instanceof ViewGroup) {
-                        ViewGroup viewGroup = (ViewGroup) child;
-                        childCount = viewGroup.getChildCount();
-                        for (int a = 0; a < childCount; a++) {
-                            View possibleActionBar = viewGroup.getChildAt(a);
-                            if (possibleActionBar instanceof ActionBar) {
-                                actionBarHeight = possibleActionBar.getMeasuredHeight();
-                                break;
-                            }
-                        }
-                    }
-                }*/
                 boolean result = super.drawChild(canvas, child, drawingTime);
                 if (actionBarHeight != 0 && headerShadowDrawable != null) {
                     headerShadowDrawable.setBounds(0, actionBarHeight, getMeasuredWidth(), actionBarHeight + headerShadowDrawable.getIntrinsicHeight());
@@ -96,6 +81,11 @@ protected boolean drawChild(Canvas canvas, View child, long drawingTime) {
                 return result;
             }
         }
+
+        @Override
+        public boolean hasOverlappingRendering() {
+            return false;
+        }
     }
 
     private static Drawable headerShadowDrawable;
@@ -129,6 +119,7 @@ protected boolean drawChild(Canvas canvas, View child, long drawingTime) {
     private boolean useAlphaAnimations;
     private View backgroundView;
     private boolean removeActionBarExtraHeight;
+    private Runnable animationRunnable;
 
     private float animationProgress = 0.0f;
     private long lastFrameTime;
@@ -257,7 +248,7 @@ protected boolean drawChild(Canvas canvas, View child, long drawingTime) {
         }
 
         final int restoreCount = canvas.save();
-        if (!transitionAnimationInProgress) {
+        if (!transitionAnimationInProgress && clipLeft != 0 && clipRight != 0) {
             canvas.clipRect(clipLeft, 0, clipRight, getHeight());
         }
         final boolean result = super.drawChild(canvas, child, drawingTime);
@@ -312,7 +303,7 @@ private void onSlideAnimationEnd(final boolean backAnimation) {
                     parent.removeView(lastFragment.fragmentView);
                 }
             }
-            if (lastFragment.needAddActionBar() && lastFragment.actionBar != null) {
+            if (lastFragment.actionBar != null && lastFragment.actionBar.getAddToContainer()) {
                 ViewGroup parent = (ViewGroup) lastFragment.actionBar.getParent();
                 if (parent != null) {
                     parent.removeView(lastFragment.actionBar);
@@ -320,7 +311,6 @@ private void onSlideAnimationEnd(final boolean backAnimation) {
             }
         }
         containerViewBack.setVisibility(View.GONE);
-        //AndroidUtilities.unlockOrientation(parentActivity);
         startedTracking = false;
         animationInProgress = false;
 
@@ -350,7 +340,7 @@ private void prepareForMoving(MotionEvent ev) {
         if (parent != null) {
             parent.removeView(fragmentView);
         }
-        if (lastFragment.needAddActionBar() && lastFragment.actionBar != null) {
+        if (lastFragment.actionBar != null && lastFragment.actionBar.getAddToContainer()) {
             parent = (ViewGroup) lastFragment.actionBar.getParent();
             if (parent != null) {
                 parent.removeView(lastFragment.actionBar);
@@ -370,8 +360,6 @@ private void prepareForMoving(MotionEvent ev) {
             fragmentView.setBackgroundColor(0xffffffff);
         }
         lastFragment.onResume();
-
-        //AndroidUtilities.lockOrientation(parentActivity);
     }
 
     public boolean onTouchEvent(MotionEvent ev) {
@@ -516,6 +504,10 @@ private void onAnimationEndCheck(boolean byCheck) {
             }
             currentAnimation = null;
         }
+        if (animationRunnable != null) {
+            AndroidUtilities.cancelRunOnUIThread(animationRunnable);
+            animationRunnable = null;
+        }
         ViewProxy.setAlpha(this, 1.0f);
         ViewProxy.setAlpha(containerView, 1.0f);
         ViewProxy.setScaleX(containerView, 1.0f);
@@ -548,7 +540,7 @@ private void presentFragmentInternalRemoveOld(boolean removeLast, final BaseFrag
                     parent.removeView(fragment.fragmentView);
                 }
             }
-            if (fragment.needAddActionBar() && fragment.actionBar != null) {
+            if (fragment.actionBar != null && fragment.actionBar.getAddToContainer()) {
                 ViewGroup parent = (ViewGroup) fragment.actionBar.getParent();
                 if (parent != null) {
                     parent.removeView(fragment.actionBar);
@@ -570,17 +562,18 @@ private void startLayoutAnimation(final boolean open, final boolean first) {
         if (first) {
             animationProgress = 0.0f;
             lastFrameTime = System.nanoTime() / 1000000;
-            if (Build.VERSION.SDK_INT >= 11) {
-                if (open) {
-                    containerView.setLayerType(LAYER_TYPE_HARDWARE, null);
-                } else {
-                    containerViewBack.setLayerType(LAYER_TYPE_HARDWARE, null);
-                }
+            if (Build.VERSION.SDK_INT > 15) {
+                containerView.setLayerType(LAYER_TYPE_HARDWARE, null);
+                containerViewBack.setLayerType(LAYER_TYPE_HARDWARE, null);
             }
         }
-        AndroidUtilities.runOnUIThread(new Runnable() {
+        AndroidUtilities.runOnUIThread(animationRunnable = new Runnable() {
             @Override
             public void run() {
+                if (animationRunnable != this) {
+                    return;
+                }
+                animationRunnable = null;
                 if (first) {
                     transitionAnimationStartTime = System.currentTimeMillis();
                 }
@@ -632,7 +625,7 @@ public boolean presentFragment(final BaseFragment fragment, final boolean remove
                 parent.removeView(fragmentView);
             }
         }
-        if (fragment.needAddActionBar() && fragment.actionBar != null) {
+        if (fragment.actionBar != null && fragment.actionBar.getAddToContainer()) {
             if (removeActionBarExtraHeight) {
                 fragment.actionBar.setOccupyStatusBar(false);
             }
@@ -663,7 +656,6 @@ public boolean presentFragment(final BaseFragment fragment, final boolean remove
         setInnerTranslationX(0);
 
         bringChildToFront(containerView);
-
         if (!needAnimation) {
             presentFragmentInternalRemoveOld(removeLast, currentFragment);
             if (backgroundView != null) {
@@ -680,7 +672,7 @@ public boolean presentFragment(final BaseFragment fragment, final boolean remove
                 onOpenAnimationEndRunnable = new Runnable() {
                     @Override
                     public void run() {
-                        fragment.onOpenAnimationEnd();
+                        fragment.onTransitionAnimationEnd(true, false);
                         fragment.onBecomeFullyVisible();
                     }
                 };
@@ -691,7 +683,7 @@ public void run() {
                     animators.add(ObjectAnimatorProxy.ofFloat(backgroundView, "alpha", 0.0f, 1.0f));
                 }
 
-                fragment.onOpenAnimationStart();
+                fragment.onTransitionAnimationStart(true, false);
                 currentAnimation = new AnimatorSetProxy();
                 currentAnimation.playTogether(animators);
                 currentAnimation.setInterpolator(accelerateDecelerateInterpolator);
@@ -714,50 +706,44 @@ public void onAnimationCancel(Object animation) {
                 onOpenAnimationEndRunnable = new Runnable() {
                     @Override
                     public void run() {
-                        if (Build.VERSION.SDK_INT >= 18) {
+                        if (Build.VERSION.SDK_INT > 15) {
                             containerView.setLayerType(LAYER_TYPE_NONE, null);
+                            containerViewBack.setLayerType(LAYER_TYPE_NONE, null);
                         }
                         presentFragmentInternalRemoveOld(removeLast, currentFragment);
-                        fragment.onOpenAnimationEnd();
+                        fragment.onTransitionAnimationEnd(true, false);
                         fragment.onBecomeFullyVisible();
                         ViewProxy.setTranslationX(containerView, 0);
                     }
                 };
-                ViewProxy.setAlpha(containerView, 0.0f);
-                ViewProxy.setTranslationX(containerView, 48.0f);
-                fragment.onOpenAnimationStart();
-                startLayoutAnimation(true, true);
-                /*currentAnimation = new AnimatorSetProxy();
-                currentAnimation.playTogether(
-                        ObjectAnimatorProxy.ofFloat(containerView, "alpha", 0.0f, 1.0f),
-                        ObjectAnimatorProxy.ofFloat(containerView, "translationX", AndroidUtilities.dp(48), 0));
-                currentAnimation.setInterpolator(decelerateInterpolator);
-                currentAnimation.setDuration(200);
-                currentAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                    @Override
-                    public void onAnimationStart(Object animation) {
-                        transitionAnimationStartTime = System.currentTimeMillis();
-                    }
-
-                    @Override
-                    public void onAnimationEnd(Object animation) {
-                        onAnimationEndCheck(false);
-                    }
-
+                fragment.onTransitionAnimationStart(true, false);
+                AnimatorSetProxy animation = fragment.onCustomTransitionAnimation(true, new Runnable() {
                     @Override
-                    public void onAnimationCancel(Object animation) {
+                    public void run() {
                         onAnimationEndCheck(false);
                     }
                 });
-                currentAnimation.start();*/
+                if (animation == null) {
+                    ViewProxy.setAlpha(containerView, 0.0f);
+                    ViewProxy.setTranslationX(containerView, 48.0f);
+                    startLayoutAnimation(true, true);
+                } else {
+                    if (Build.VERSION.SDK_INT > 15) {
+                        //containerView.setLayerType(LAYER_TYPE_HARDWARE, null);
+                        //containerViewBack.setLayerType(LAYER_TYPE_HARDWARE, null);
+                    }
+                    ViewProxy.setAlpha(containerView, 1.0f);
+                    ViewProxy.setTranslationX(containerView, 0.0f);
+                    currentAnimation = animation;
+                }
             }
         } else {
             if (backgroundView != null) {
                 ViewProxy.setAlpha(backgroundView, 1.0f);
                 backgroundView.setVisibility(VISIBLE);
             }
-            fragment.onOpenAnimationStart();
-            fragment.onOpenAnimationEnd();
+            fragment.onTransitionAnimationStart(true, false);
+            fragment.onTransitionAnimationEnd(true, false);
             fragment.onBecomeFullyVisible();
         }
         return true;
@@ -836,7 +822,7 @@ public void closeLastFragment(boolean animated) {
                     parent.removeView(fragmentView);
                 }
             }
-            if (previousFragment.needAddActionBar() && previousFragment.actionBar != null) {
+            if (previousFragment.actionBar != null && previousFragment.actionBar.getAddToContainer()) {
                 if (removeActionBarExtraHeight) {
                     previousFragment.actionBar.setOccupyStatusBar(false);
                 }
@@ -852,7 +838,8 @@ public void closeLastFragment(boolean animated) {
             layoutParams.width = LayoutHelper.MATCH_PARENT;
             layoutParams.height = LayoutHelper.MATCH_PARENT;
             fragmentView.setLayoutParams(layoutParams);
-            previousFragment.onOpenAnimationStart();
+            previousFragment.onTransitionAnimationStart(true, true);
+            currentFragment.onTransitionAnimationStart(false, false);
             previousFragment.onResume();
             currentActionBar = previousFragment.actionBar;
             if (!previousFragment.hasOwnBackground && fragmentView.getBackground() == null) {
@@ -870,42 +857,35 @@ public void closeLastFragment(boolean animated) {
                 onCloseAnimationEndRunnable = new Runnable() {
                     @Override
                     public void run() {
-                        if (Build.VERSION.SDK_INT >= 18) {
+                        if (Build.VERSION.SDK_INT > 15) {
+                            containerView.setLayerType(LAYER_TYPE_NONE, null);
                             containerViewBack.setLayerType(LAYER_TYPE_NONE, null);
                         }
                         closeLastFragmentInternalRemoveOld(currentFragment);
                         ViewProxy.setTranslationX(containerViewBack, 0);
-                        previousFragmentFinal.onOpenAnimationEnd();
+                        currentFragment.onTransitionAnimationEnd(false, false);
+                        previousFragmentFinal.onTransitionAnimationEnd(true, true);
                         previousFragmentFinal.onBecomeFullyVisible();
                     }
                 };
-                startLayoutAnimation(false, true);
-
-                /*currentAnimation = new AnimatorSetProxy();
-                currentAnimation.playTogether(
-                        ObjectAnimatorProxy.ofFloat(containerViewBack, "alpha", 1.0f, 0.0f),
-                        ObjectAnimatorProxy.ofFloat(containerViewBack, "translationX", 0, AndroidUtilities.dp(48)));
-                currentAnimation.setInterpolator(decelerateInterpolator);
-                currentAnimation.setDuration(200);
-                currentAnimation.addListener(new AnimatorListenerAdapterProxy() {
-                    @Override
-                    public void onAnimationStart(Object animation) {
-                        transitionAnimationStartTime = System.currentTimeMillis();
-                    }
-
-                    @Override
-                    public void onAnimationEnd(Object animation) {
-                        onAnimationEndCheck(false);
-                    }
-
+                AnimatorSetProxy animation = currentFragment.onCustomTransitionAnimation(false, new Runnable() {
                     @Override
-                    public void onAnimationCancel(Object animation) {
+                    public void run() {
                         onAnimationEndCheck(false);
                     }
                 });
-                currentAnimation.start();*/
+                if (animation == null) {
+                    startLayoutAnimation(false, true);
+                } else {
+                    if (Build.VERSION.SDK_INT > 15) {
+                        //containerView.setLayerType(LAYER_TYPE_HARDWARE, null);
+                        //containerViewBack.setLayerType(LAYER_TYPE_HARDWARE, null);
+                    }
+                    currentAnimation = animation;
+                }
             } else {
-                previousFragment.onOpenAnimationEnd();
+                currentFragment.onTransitionAnimationEnd(false, false);
+                previousFragment.onTransitionAnimationEnd(true, true);
                 previousFragment.onBecomeFullyVisible();
             }
         } else {
@@ -968,6 +948,22 @@ public void showLastFragment() {
         if (fragmentsStack.isEmpty()) {
             return;
         }
+        for (int a = 0; a < fragmentsStack.size() - 1; a++) {
+            BaseFragment previousFragment = fragmentsStack.get(a);
+            if (previousFragment.actionBar != null) {
+                ViewGroup parent = (ViewGroup) previousFragment.actionBar.getParent();
+                if (parent != null) {
+                    parent.removeView(previousFragment.actionBar);
+                }
+            }
+            if (previousFragment.fragmentView != null) {
+                ViewGroup parent = (ViewGroup) previousFragment.fragmentView.getParent();
+                if (parent != null) {
+                    previousFragment.onPause();
+                    parent.removeView(previousFragment.fragmentView);
+                }
+            }
+        }
         BaseFragment previousFragment = fragmentsStack.get(fragmentsStack.size() - 1);
         previousFragment.setParentLayout(this);
         View fragmentView = previousFragment.fragmentView;
@@ -979,7 +975,7 @@ public void showLastFragment() {
                 parent.removeView(fragmentView);
             }
         }
-        if (previousFragment.needAddActionBar() && previousFragment.actionBar != null) {
+        if (previousFragment.actionBar != null && previousFragment.actionBar.getAddToContainer()) {
             if (removeActionBarExtraHeight) {
                 previousFragment.actionBar.setOccupyStatusBar(false);
             }
@@ -1136,4 +1132,9 @@ public void setTitleOverlayText(String text) {
             }
         }
     }
+
+    @Override
+    public boolean hasOverlappingRendering() {
+        return false;
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenu.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenu.java
index e7f4ac34a..ee58185b9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenu.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenu.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.4.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.ActionBar;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenuItem.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenuItem.java
index 44d22d65c..c73a11e8e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenuItem.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenuItem.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.4.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.ActionBar;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarPopupWindow.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarPopupWindow.java
index 36f3dd0d0..fb6c27cac 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarPopupWindow.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarPopupWindow.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.4.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 //Thanks to https://github.com/JakeWharton/ActionBarSherlock/
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
index 95c86d016..5ecd758e7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.ActionBar;
@@ -21,6 +21,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
@@ -49,6 +50,14 @@ public BaseFragment(Bundle args) {
         classGuid = ConnectionsManager.getInstance().generateClassGuid();
     }
 
+    public ActionBar getActionBar() {
+        return actionBar;
+    }
+
+    public View getFragmentView() {
+        return fragmentView;
+    }
+
     public View createView(Context context) {
         return null;
     }
@@ -164,7 +173,7 @@ public void onPause() {
             actionBar.onPause();
         }
         try {
-            if (visibleDialog != null && visibleDialog.isShowing()) {
+            if (visibleDialog != null && visibleDialog.isShowing() && dismissDialogOnPause(visibleDialog)) {
                 visibleDialog.dismiss();
                 visibleDialog = null;
             }
@@ -185,6 +194,10 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
 
     }
 
+    public void onRequestPermissionsResultFragment(int requestCode, String[] permissions, int[] grantResults) {
+
+    }
+
     public void saveSelfArgs(Bundle args) {
 
     }
@@ -218,6 +231,10 @@ public void startActivityForResult(final Intent intent, final int requestCode) {
         }
     }
 
+    public boolean dismissDialogOnPause(Dialog dialog) {
+        return true;
+    }
+
     public void onBeginSlide() {
         try {
             if (visibleDialog != null && visibleDialog.isShowing()) {
@@ -232,11 +249,11 @@ public void onBeginSlide() {
         }
     }
 
-    protected void onOpenAnimationEnd() {
+    protected void onTransitionAnimationStart(boolean isOpen, boolean backward) {
 
     }
 
-    protected void onOpenAnimationStart() {
+    protected void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
 
     }
 
@@ -244,12 +261,12 @@ protected void onBecomeFullyVisible() {
 
     }
 
-    public void onLowMemory() {
-
+    protected AnimatorSetProxy onCustomTransitionAnimation(boolean isOpen, final Runnable callback) {
+        return null;
     }
 
-    public boolean needAddActionBar() {
-        return true;
+    public void onLowMemory() {
+
     }
 
     public Dialog showDialog(Dialog dialog) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/DrawerLayoutContainer.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/DrawerLayoutContainer.java
index 65057f9dc..85f32fe76 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/DrawerLayoutContainer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/DrawerLayoutContainer.java
@@ -1,13 +1,14 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.ActionBar;
 
+import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.content.Context;
 import android.content.SharedPreferences;
@@ -72,12 +73,14 @@ public DrawerLayoutContainer(Context context) {
 
         if (Build.VERSION.SDK_INT >= 21) {
             setFitsSystemWindows(true);
-            configureApplyInsets(this);
+            setOnApplyWindowInsetsListener(new InsetsListener());
+            setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
         }
 
         shadowLeft = getResources().getDrawable(R.drawable.menu_shadow);
     }
 
+    @SuppressLint("NewApi")
     private class InsetsListener implements View.OnApplyWindowInsetsListener {
         @Override
         public WindowInsets onApplyWindowInsets(View v, WindowInsets insets) {
@@ -87,13 +90,7 @@ public WindowInsets onApplyWindowInsets(View v, WindowInsets insets) {
         }
     }
 
-    private void configureApplyInsets(View drawerLayout) {
-        if (Build.VERSION.SDK_INT >= 21) {
-            drawerLayout.setOnApplyWindowInsetsListener(new InsetsListener());
-            drawerLayout.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
-        }
-    }
-
+    @SuppressLint("NewApi")
     private void dispatchChildInsets(View child, Object insets, int drawerGravity) {
         WindowInsets wi = (WindowInsets) insets;
             if (drawerGravity == Gravity.LEFT) {
@@ -104,6 +101,7 @@ private void dispatchChildInsets(View child, Object insets, int drawerGravity) {
             child.dispatchApplyWindowInsets(wi);
         }
 
+    @SuppressLint("NewApi")
     private void applyMarginInsets(MarginLayoutParams lp, Object insets, int drawerGravity, boolean topOnly) {
         WindowInsets wi = (WindowInsets) insets;
             if (drawerGravity == Gravity.LEFT) {
@@ -416,6 +414,7 @@ public void requestLayout() {
         }
     }
 
+    @SuppressLint("NewApi")
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         int widthSize = MeasureSpec.getSize(widthMeasureSpec);
@@ -438,7 +437,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
             if (applyInsets) {
                 if (child.getFitsSystemWindows()) {
                     dispatchChildInsets(child, lastInsets, lp.gravity);
-                } else {
+                } else if (child.getTag() == null) {
                     applyMarginInsets(lp, lastInsets, lp.gravity, Build.VERSION.SDK_INT >= 21);
                 }
             }
@@ -495,6 +494,7 @@ protected boolean drawChild(Canvas canvas, View child, long drawingTime) {
         }
         final int height = getHeight();
         final boolean drawingContent = child != drawerLayout;
+        int lastVisibleChild = 0;
         int clipLeft = 0, clipRight = getWidth();
 
         final int restoreCount = canvas.save();
@@ -502,6 +502,9 @@ protected boolean drawChild(Canvas canvas, View child, long drawingTime) {
             final int childCount = getChildCount();
             for (int i = 0; i < childCount; i++) {
                 final View v = getChildAt(i);
+                if (v.getVisibility() == VISIBLE && v != drawerLayout) {
+                    lastVisibleChild = i;
+                }
                 if (v == child || v.getVisibility() != VISIBLE || v != drawerLayout || v.getHeight() < height) {
                     continue;
                 }
@@ -511,14 +514,18 @@ protected boolean drawChild(Canvas canvas, View child, long drawingTime) {
                     clipLeft = vright;
                 }
             }
+            if (clipLeft != 0) {
             canvas.clipRect(clipLeft, 0, clipRight, getHeight());
         }
+        }
         final boolean result = super.drawChild(canvas, child, drawingTime);
         canvas.restoreToCount(restoreCount);
 
         if (scrimOpacity > 0 && drawingContent) {
+            if (indexOfChild(child) == lastVisibleChild) {
             scrimPaint.setColor((int) (((0x99000000 & 0xff000000) >>> 24) * scrimOpacity) << 24);
             canvas.drawRect(clipLeft, 0, clipRight, getHeight(), scrimPaint);
+            }
         } else if (shadowLeft != null) {
             final float alpha = Math.max(0, Math.min(drawerPosition / AndroidUtilities.dp(20), 1.0f));
             if (alpha != 0) {
@@ -529,4 +536,9 @@ protected boolean drawChild(Canvas canvas, View child, long drawingTime) {
         }
         return result;
     }
+
+    @Override
+    public boolean hasOverlappingRendering() {
+        return false;
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/MenuDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/MenuDrawable.java
index ca19e51bc..3543bbe7d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/MenuDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/MenuDrawable.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.ActionBar;
@@ -11,6 +11,7 @@
 import android.graphics.Canvas;
 import android.graphics.ColorFilter;
 import android.graphics.Paint;
+import android.graphics.PixelFormat;
 import android.graphics.drawable.Drawable;
 import android.view.animation.DecelerateInterpolator;
 
@@ -80,11 +81,11 @@ public void draw(Canvas canvas) {
         canvas.save();
         canvas.translate(getIntrinsicWidth() / 2, getIntrinsicHeight() / 2);
         canvas.rotate(currentRotation * (reverseAngle ? -180 : 180));
-        canvas.drawLine(-AndroidUtilities.dp(9), 0, AndroidUtilities.dp(9) - AndroidUtilities.dp(1) * currentRotation, 0, paint);
+        canvas.drawLine(-AndroidUtilities.dp(9), 0, AndroidUtilities.dp(9) - AndroidUtilities.dp(3.0f) * currentRotation, 0, paint);
         float endYDiff = AndroidUtilities.dp(5) * (1 - Math.abs(currentRotation)) - AndroidUtilities.dp(0.5f) * Math.abs(currentRotation);
-        float endXDiff = AndroidUtilities.dp(9) - AndroidUtilities.dp(0.5f) *  Math.abs(currentRotation);
-        float startYDiff = AndroidUtilities.dp(5) + AndroidUtilities.dp(3.5f) * Math.abs(currentRotation);
-        float startXDiff = -AndroidUtilities.dp(9) + AndroidUtilities.dp(8.5f) * Math.abs(currentRotation);
+        float endXDiff = AndroidUtilities.dp(9) - AndroidUtilities.dp(2.5f) * Math.abs(currentRotation);
+        float startYDiff = AndroidUtilities.dp(5) + AndroidUtilities.dp(2.0f) * Math.abs(currentRotation);
+        float startXDiff = -AndroidUtilities.dp(9) + AndroidUtilities.dp(7.5f) * Math.abs(currentRotation);
         canvas.drawLine(startXDiff, -startYDiff, endXDiff, -endYDiff, paint);
         canvas.drawLine(startXDiff, startYDiff, endXDiff, endYDiff, paint);
         canvas.restore();
@@ -103,7 +104,7 @@ public void setColorFilter(ColorFilter cf) {
 
     @Override
     public int getOpacity() {
-        return 0;
+        return PixelFormat.TRANSPARENT;
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseFragmentAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseFragmentAdapter.java
index 131961344..57bd70eba 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseFragmentAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseFragmentAdapter.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Adapters;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseLocationAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseLocationAdapter.java
index c80eb04b8..bfd0457ed 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseLocationAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseLocationAdapter.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseSearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseSearchAdapter.java
index 011144e6e..36f36779c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseSearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseSearchAdapter.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Adapters;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseSectionsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseSectionsAdapter.java
index f9b75addc..a6b493290 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseSectionsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/BaseSectionsAdapter.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Adapters;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ChatActivityAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ChatActivityAdapter.java
index afe18248d..91049dbe5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ChatActivityAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ChatActivityAdapter.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java
index 2c058d513..9b4df5462 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Adapters;
@@ -18,15 +18,13 @@
 import android.view.ViewGroup;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
-
 import org.telegram.messenger.LocaleController;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.R;
-
+import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.ui.Cells.DividerCell;
 import org.telegram.ui.Cells.GreySectionCell;
 import org.telegram.ui.Cells.LetterSectionCell;
@@ -298,12 +296,6 @@ public View getItemView(int section, int position, View convertView, ViewGroup p
                     ViewProxy.setAlpha(convertView, 1.0f);
                 }
             }
-            //((UserCell) convertView).setStatusColors(0xffa8a8a8, 0xff3b84c0);
-            //((UserCell) convertView).setStatusColors(themePrefs.getInt("contactsStatusColor", 0xffa8a8a8), themePrefs.getInt("contactsOnlineColor", AndroidUtilities.getIntDarkerColor("themeColor", 0x15)));
-            //((UserCell) convertView).setNameColor(cColorBlack);
-            //((UserCell) convertView).setNameSize(themePrefs.getInt("contactsNameSize", 17));
-            //((UserCell) convertView).setStatusSize(themePrefs.getInt("contactsStatusSize", 14));
-            //((UserCell) convertView).setAvatarRadius(themePrefs.getInt("contactsAvatarRadius", 32));
         }
         //parent.setBackgroundColor(themePrefs.getInt("contactsRowColor", 0xffffffff)); //Plus
         updateListBG(parent);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/CountryAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/CountryAdapter.java
index 3c577880d..216f27c8d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/CountryAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/CountryAdapter.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Adapters;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/CountrySearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/CountrySearchAdapter.java
index b7da3404d..0282d9df7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/CountrySearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/CountrySearchAdapter.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Adapters;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsAdapter.java
index cb3f72c74..dc19455c5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsAdapter.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Adapters;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java
index 217646cc1..1301d865a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Adapters;
@@ -180,7 +180,7 @@ public boolean hasRecentRearch() {
     }
 
     public boolean isRecentSearchDisplayed() {
-        return (lastSearchText == null || lastSearchText.length() == 0) && !recentSearchObjects.isEmpty();
+        return needMessagesSearch != 2 && (lastSearchText == null || lastSearchText.length() == 0) && !recentSearchObjects.isEmpty();
     }
 
     public void loadRecentSearch() {
@@ -778,7 +778,7 @@ public void run() {
 
     @Override
     public int getItemCount() {
-        if ((lastSearchText == null || lastSearchText.length() == 0) && !recentSearchObjects.isEmpty()) {
+        if (needMessagesSearch != 2 && (lastSearchText == null || lastSearchText.length() == 0) && !recentSearchObjects.isEmpty()) {
             return recentSearchObjects.size() + 1;
         }
         if (!searchResultHashtags.isEmpty()) {
@@ -797,7 +797,7 @@ public int getItemCount() {
     }
 
     public Object getItem(int i) {
-        if ((lastSearchText == null || lastSearchText.length() == 0) && !recentSearchObjects.isEmpty()) {
+        if (needMessagesSearch != 2 && (lastSearchText == null || lastSearchText.length() == 0) && !recentSearchObjects.isEmpty()) {
             if (i > 0 && i - 1 < recentSearchObjects.size()) {
                 return recentSearchObjects.get(i - 1).object;
             } else {
@@ -868,7 +868,6 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 boolean isRecent = false;
                 String un = null;
                 String hexDarkColor = String.format("#%08X", (0xFFFFFFFF & AndroidUtilities.getIntDarkerColor("themeColor", 0x15)));
-            
                 Object obj = getItem(position);
 
                 if (obj instanceof TLRPC.User) {
@@ -885,7 +884,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                     user = MessagesController.getInstance().getUser(encryptedChat.user_id);
                 }
 
-                if ((lastSearchText == null || lastSearchText.length() == 0) && !recentSearchObjects.isEmpty()) {
+                if (needMessagesSearch != 2 && (lastSearchText == null || lastSearchText.length() == 0) && !recentSearchObjects.isEmpty()) {
                     isRecent = true;
                     cell.useSeparator = position != getItemCount() - 1;
                 } else {
@@ -922,7 +921,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                 GreySectionCell cell = (GreySectionCell) holder.itemView;
                 cell.setBackgroundColor(themePrefs.getInt("chatsRowColor", 0xfff2f2f2));
                 cell.setTextColor(themePrefs.getInt("chatsNameColor", 0xff8a8a8a));
-                if ((lastSearchText == null || lastSearchText.length() == 0) && !recentSearchObjects.isEmpty()) {
+                if (needMessagesSearch != 2 && (lastSearchText == null || lastSearchText.length() == 0) && !recentSearchObjects.isEmpty()) {
                     cell.setText(LocaleController.getString("Recent", R.string.Recent).toUpperCase());
                 } else if (!searchResultHashtags.isEmpty()) {
                     cell.setText(LocaleController.getString("Hashtags", R.string.Hashtags).toUpperCase());
@@ -957,7 +956,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
 
     @Override
     public int getItemViewType(int i) {
-        if ((lastSearchText == null || lastSearchText.length() == 0) && !recentSearchObjects.isEmpty()) {
+        if (needMessagesSearch != 2 && (lastSearchText == null || lastSearchText.length() == 0) && !recentSearchObjects.isEmpty()) {
             return i == 0 ? 1 : 0;
         }
         if (!searchResultHashtags.isEmpty()) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
index ce09b9ba6..fce3bc38c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DrawerLayoutAdapter.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Adapters;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivityAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivityAdapter.java
index a0efeae93..dbdadeba7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivityAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivityAdapter.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivitySearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivitySearchAdapter.java
index bc030a09c..94669e132 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivitySearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/LocationActivitySearchAdapter.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
index 370c02687..65b94218e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/MentionsAdapter.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/SearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/SearchAdapter.java
index 09fd654b6..ceb802014 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/SearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/SearchAdapter.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Adapters;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/StickersAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/StickersAdapter.java
index 4bbe6a5e6..326e207a2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/StickersAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/StickersAdapter.java
@@ -3,12 +3,13 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Adapters;
 
 import android.content.Context;
+import android.text.TextUtils;
 import android.view.View;
 import android.view.ViewGroup;
 
@@ -87,8 +88,18 @@ private boolean checkStickerFilesExistAndDownload() {
     }
 
     public void loadStikersForEmoji(CharSequence emoji) {
-        boolean search = emoji != null && emoji.length() > 0 && emoji.length() <= 4;
+        boolean search = emoji != null && emoji.length() > 0 && emoji.length() <= 14;
         if (search) {
+            int length = emoji.length();
+            for (int a = 0; a < length; a++) {
+                if (a < length - 1 && emoji.charAt(a) == 0xD83C && emoji.charAt(a + 1) >= 0xDFFB && emoji.charAt(a + 1) <= 0xDFFF) {
+                    emoji = TextUtils.concat(emoji.subSequence(0, a), emoji.subSequence(a + 2, emoji.length()));
+                    break;
+                } else if (emoji.charAt(a) == 0xfe0f) {
+                    emoji = TextUtils.concat(emoji.subSequence(0, a), emoji.subSequence(a + 1, emoji.length()));
+                    length--;
+                }
+            }
             lastSticker = emoji.toString();
             HashMap<String, ArrayList<TLRPC.Document>> allStickers = StickersQuery.getAllStickers();
             if (allStickers != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
index ac206ccca..5c455ef62 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AddMemberCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AddMemberCell.java
index e6128be74..cbfbd8ca7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/AddMemberCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/AddMemberCell.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
@@ -11,7 +11,9 @@
 import android.content.Context;
 import android.graphics.PorterDuff;
 import android.graphics.drawable.Drawable;
+import android.os.Build;
 import android.view.Gravity;
+import android.view.MotionEvent;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
 
@@ -42,9 +44,19 @@ public AddMemberCell(Context context) {
         addView(textView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 20, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, LocaleController.isRTL ? 28 : 129, 22.5f, LocaleController.isRTL ? 129 : 28, 0));
     }
 
+    @Override
+    public boolean onTouchEvent(MotionEvent event) {
+        if (Build.VERSION.SDK_INT >= 21 && getBackground() != null) {
+            if (event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_MOVE) {
+                getBackground().setHotspot(event.getX(), event.getY());
+            }
+        }
+        return super.onTouchEvent(event);
+    }
+
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        super.onMeasure(widthMeasureSpec, MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(64), MeasureSpec.EXACTLY));
+        super.onMeasure(MeasureSpec.makeMeasureSpec(MeasureSpec.getSize(widthMeasureSpec), MeasureSpec.EXACTLY), MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(64), MeasureSpec.EXACTLY));
     }
 
     public void setTextColor(int color) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/BaseCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/BaseCell.java
index 5ee2f7761..d32151370 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/BaseCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/BaseCell.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -33,11 +33,11 @@ public void run() {
         public void run() {
             if (checkingForLongPress && getParent() != null && currentPressCount == pressCount) {
                 checkingForLongPress = false;
+                performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
+                onLongPress();
                 MotionEvent event = MotionEvent.obtain(0, 0, MotionEvent.ACTION_CANCEL, 0, 0, 0);
                 onTouchEvent(event);
                 event.recycle();
-                performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
-                onLongPress();
             }
         }
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java
index 85ff80a85..7a04a4e40 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java
index 80309e63d..df142fdf6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -19,14 +19,14 @@
 import android.view.SoundEffectConstants;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.ImageLoader;
-import org.telegram.messenger.MessagesController;
-import org.telegram.messenger.SendMessagesHelper;
-import org.telegram.messenger.BuildVars;
+import org.telegram.messenger.BuildConfig;
 import org.telegram.messenger.FileLoader;
+import org.telegram.messenger.FileLog;
+import org.telegram.messenger.ImageLoader;
 import org.telegram.messenger.MediaController;
 import org.telegram.messenger.MessageObject;
-import org.telegram.messenger.FileLog;
+import org.telegram.messenger.MessagesController;
+import org.telegram.messenger.SendMessagesHelper;
 import org.telegram.ui.Components.RadialProgress;
 import org.telegram.ui.Components.ResourceLoader;
 import org.telegram.ui.Components.SeekBar;
@@ -149,6 +149,7 @@ private void didPressedButton() {
                 invalidate();
             }
         } else if (buttonState == 2) {
+            radialProgress.setProgress(0, false);
             FileLoader.getInstance().loadFile(currentMessageObject.messageOwner.media.audio, true);
             buttonState = 3;
             radialProgress.setBackground(getDrawableForCurrentState(), true, false);
@@ -223,7 +224,8 @@ public void updateButtonState(boolean animated) {
             if (cacheFile == null) {
                 cacheFile = FileLoader.getPathToMessage(currentMessageObject.messageOwner);
             }
-            if (BuildVars.DEBUG_VERSION) {
+            //if (BuildVars.DEBUG_VERSION) {
+            if (BuildConfig.DEBUG) {
                 FileLog.d("tmessages", "looking for audio in " + cacheFile);
             }
             if (cacheFile.exists()) {
@@ -308,6 +310,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
             buttonX = layoutWidth - backgroundWidth + AndroidUtilities.dp(13) - (((showMyAvatar && !isChat) || (showMyAvatarGroup && isChat)) ? AndroidUtilities.dp(leftBound) : 0);
             timeX = layoutWidth - backgroundWidth + AndroidUtilities.dp(66) - (((showMyAvatar && !isChat) || (showMyAvatarGroup && isChat)) ? AndroidUtilities.dp(leftBound) : 0);
         } else {
+            //if (isChat && currentMessageObject.messageOwner.from_id > 0) {
             if ((isChat || showAvatar) && currentMessageObject.messageOwner.from_id > 0) {
                 //seekBarX = AndroidUtilities.dp(116);
                 //buttonX = AndroidUtilities.dp(74);
@@ -336,7 +339,7 @@ public void setMessageObject(MessageObject messageObject) {
         boolean dataChanged = currentMessageObject == messageObject && isUserDataChanged();
         if (currentMessageObject != messageObject || dataChanged) {
             if (AndroidUtilities.isTablet()) {
-                backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.messageOwner.from_id > 0 ? 102 : 50), AndroidUtilities.dp(300));
+                //backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(isChat && messageObject.messageOwner.from_id > 0 ? 102 : 50), AndroidUtilities.dp(300));
                 backgroundWidth = Math.min(AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp( ((isChat || showAvatar) && messageObject.messageOwner.from_id > 0) || (messageObject.isOutOwner() && ((showMyAvatar && !isChat) || (showMyAvatarGroup && isChat))) ? leftBound + 50 : 50), AndroidUtilities.dp(300));
             } else {
                 //backgroundWidth = Math.min(AndroidUtilities.displaySize.x - AndroidUtilities.dp(isChat && messageObject.messageOwner.from_id > 0 ? 102 : 50), AndroidUtilities.dp(300));
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
index 668ba91ba..cb44a84d1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -50,7 +50,7 @@
         void didPressedCancelSendButton(ChatBaseCell cell);
         void didLongPressed(ChatBaseCell cell);
         void didPressReplyMessage(ChatBaseCell cell, int id);
-        void didPressUrl(MessageObject messageObject, ClickableSpan url);
+        void didPressUrl(MessageObject messageObject, ClickableSpan url, boolean longPress);
         void needOpenWebView(String url, String title, String originalUrl, int w, int h);
         void didClickedImage(ChatBaseCell cell);
         boolean canPerformActions();
@@ -71,6 +71,7 @@
     private boolean wasLayout = false;
     protected boolean isAvatarVisible = false;
     protected boolean drawBackground = true;
+    protected boolean allowAssistant = false;
     protected MessageObject currentMessageObject;
 
     private static TextPaint timePaintIn;
@@ -119,11 +120,16 @@
 
     private StaticLayout timeLayout;
     protected int timeWidth;
+    private int timeTextWidth;
     private int timeX;
     private TextPaint currentTimePaint;
     private String currentTimeString;
     protected boolean drawTime = true;
 
+    private StaticLayout viewsLayout;
+    private int viewsTextWidth;
+    private String currentViewsString;
+
     private TLRPC.User currentUser;
     private TLRPC.Chat currentChat;
     private TLRPC.FileLocation currentPhoto;
@@ -301,6 +307,10 @@ public void setCheckPressed(boolean value, boolean pressed) {
         invalidate();
     }
 
+    public void setAllowAssistant(boolean value) {
+        allowAssistant = value;
+    }
+
     protected boolean isUserDataChanged() {
         if (currentMessageObject == null || currentUser == null && currentChat == null) {
             return false;
@@ -371,27 +381,11 @@ protected boolean isUserDataChanged() {
     }
 
     protected void measureTime(MessageObject messageObject) {
-        if (!media) {
-            if (messageObject.isOutOwner()) {
-                currentTimePaint = timePaintOut;
-            } else {
-                currentTimePaint = timePaintIn;
-            }
-        } else {
-            currentTimePaint = timeMediaPaint;
-        }
-        String timeString = LocaleController.formatterDay.format((long) (messageObject.messageOwner.date) * 1000);
-        if ((messageObject.messageOwner.flags & TLRPC.MESSAGE_FLAG_HAS_VIEWS) != 0) {
-            currentTimeString = String.format("%s   ", LocaleController.formatShortNumber(messageObject.messageOwner.views, null)) + timeString;
-        } else {
-            currentTimeString = timeString;
-        }
-        timeWidth = (int) Math.ceil(currentTimePaint.measureText(currentTimeString));
+        currentTimeString = LocaleController.formatterDay.format((long) (messageObject.messageOwner.date) * 1000);
+        timeTextWidth = timeWidth = (int) Math.ceil(timeMediaPaint.measureText(currentTimeString));
         if ((messageObject.messageOwner.flags & TLRPC.MESSAGE_FLAG_HAS_VIEWS) != 0) {
-            timeWidth += ResourceLoader.viewsCountDrawable.getIntrinsicWidth() + AndroidUtilities.dp(4);
-        }
-        if ((messageObject.messageOwner.flags & TLRPC.MESSAGE_FLAG_HAS_VIEWS) != 0 && (messageObject.isSending() || messageObject.isSendError())) {
-            currentTimeString = timeString;
+            currentViewsString = String.format("%s", LocaleController.formatShortNumber(Math.max(1, messageObject.messageOwner.views), null));
+            timeWidth += (int) Math.ceil(timeMediaPaint.measureText(currentViewsString)) + ResourceLoader.viewsCountDrawable.getIntrinsicWidth() + AndroidUtilities.dp(10);
         }
     }
 
@@ -462,18 +456,12 @@ public void setMessageObject(MessageObject messageObject) {
             currentTimePaint = timeMediaPaint;
         }
 
-        String timeString = LocaleController.formatterDay.format((long) (currentMessageObject.messageOwner.date) * 1000);
-        if ((currentMessageObject.messageOwner.flags & TLRPC.MESSAGE_FLAG_HAS_VIEWS) != 0) {
-            currentTimeString = String.format("%s   ", LocaleController.formatShortNumber(currentMessageObject.messageOwner.views, null)) + timeString;
-        } else {
-            currentTimeString = timeString;
-        }
-        timeWidth = (int)Math.ceil(currentTimePaint.measureText(currentTimeString));
-        if ((currentMessageObject.messageOwner.flags & TLRPC.MESSAGE_FLAG_HAS_VIEWS) != 0) {
-            timeWidth += ResourceLoader.viewsCountDrawable.getIntrinsicWidth() + AndroidUtilities.dp(4);
-        }
-        if ((currentMessageObject.messageOwner.flags & TLRPC.MESSAGE_FLAG_HAS_VIEWS) != 0 && (currentMessageObject.isSending() || currentMessageObject.isSendError())) {
-            currentTimeString = timeString;
+        currentTimeString = LocaleController.formatterDay.format((long) (messageObject.messageOwner.date) * 1000);
+        timeTextWidth = timeWidth = (int)Math.ceil(currentTimePaint.measureText(currentTimeString));
+        if ((messageObject.messageOwner.flags & TLRPC.MESSAGE_FLAG_HAS_VIEWS) != 0) {
+            currentViewsString = String.format("%s", LocaleController.formatShortNumber(Math.max(1, messageObject.messageOwner.views), null));
+            viewsTextWidth = (int) Math.ceil(currentTimePaint.measureText(currentViewsString));
+            timeWidth += viewsTextWidth + ResourceLoader.viewsCountDrawable.getIntrinsicWidth() + AndroidUtilities.dp(10);
         }
 
         namesOffset = 0;
@@ -493,8 +481,6 @@ public void setMessageObject(MessageObject messageObject) {
             }
             nameWidth = getMaxNameWidth();
 
-
-
             CharSequence nameStringFinal = TextUtils.ellipsize(currentNameString.replace("\n", " "), namePaint, nameWidth - AndroidUtilities.dp(12), TextUtils.TruncateAt.END);
             nameLayout = new StaticLayout(nameStringFinal, namePaint, nameWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
             if (nameLayout.getLineCount() > 0) {
@@ -764,7 +750,7 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
             layoutWidth = getMeasuredWidth();
             layoutHeight = getMeasuredHeight();
 
-            timeLayout = new StaticLayout(currentTimeString, currentTimePaint, timeWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
+            timeLayout = new StaticLayout(currentTimeString, currentTimePaint, timeTextWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
             if (!media) {
                 if (!currentMessageObject.isOutOwner()) {
                     //timeX = backgroundWidth - AndroidUtilities.dp(9) - timeWidth + (isChat && currentMessageObject.messageOwner.from_id > 0 ? AndroidUtilities.dp(52) : 0);
@@ -785,6 +771,12 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
                 }
             }
 
+            if ((currentMessageObject.messageOwner.flags & TLRPC.MESSAGE_FLAG_HAS_VIEWS) != 0) {
+                viewsLayout = new StaticLayout(currentViewsString, currentTimePaint, viewsTextWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
+            } else {
+                viewsLayout = null;
+            }
+
             if (isAvatarVisible) {
                 //avatarImage.setImageCoords(AndroidUtilities.dp(6), layoutHeight - AndroidUtilities.dp(45), AndroidUtilities.dp(42), AndroidUtilities.dp(42));
                 if(((showMyAvatar && !isChat) || (showMyAvatarGroup && isChat)) && currentMessageObject.isOutOwner()){
@@ -1036,6 +1028,13 @@ protected void onDraw(Canvas canvas) {
                     } else {
                         setDrawableBounds(ResourceLoader.viewsMediaCountDrawable, timeX, layoutHeight - AndroidUtilities.dp(10) - timeLayout.getHeight());
                         ResourceLoader.viewsMediaCountDrawable.draw(canvas);
+
+                        if (viewsLayout != null) {
+                            canvas.save();
+                            canvas.translate(timeX + ResourceLoader.viewsMediaCountDrawable.getIntrinsicWidth() + AndroidUtilities.dp(3), layoutHeight - AndroidUtilities.dp(12.0f) - timeLayout.getHeight());
+                            viewsLayout.draw(canvas);
+                            canvas.restore();
+                        }
                     }
                 }
 
@@ -1066,6 +1065,13 @@ protected void onDraw(Canvas canvas) {
                             setDrawableBounds(ResourceLoader.viewsOutCountDrawable, timeX, layoutHeight - AndroidUtilities.dp(4.5f) - timeLayout.getHeight());
                             ResourceLoader.viewsOutCountDrawable.draw(canvas);
                         }
+
+                        if (viewsLayout != null) {
+                            canvas.save();
+                            canvas.translate(timeX + ResourceLoader.viewsOutCountDrawable.getIntrinsicWidth() + AndroidUtilities.dp(3), layoutHeight - AndroidUtilities.dp(6.5f) - timeLayout.getHeight());
+                            viewsLayout.draw(canvas);
+                            canvas.restore();
+                        }
                     }
                 }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatContactCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatContactCell.java
index c5716bef7..1fa7fbe62 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatContactCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatContactCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -28,8 +28,8 @@
 import org.telegram.messenger.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
-import org.telegram.messenger.UserConfig;
 import org.telegram.tgnet.TLRPC;
+import org.telegram.messenger.UserConfig;
 import org.telegram.ui.Components.AvatarDrawable;
 
 public class ChatContactCell extends ChatBaseCell {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java
index 4d8ecbb81..2aff71682 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.4.x.
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -46,6 +46,7 @@
 import org.telegram.ui.Components.RadialProgress;
 import org.telegram.ui.Components.ResourceLoader;
 import org.telegram.ui.Components.StaticLayoutEx;
+import org.telegram.ui.Components.URLSpanBotCommand;
 import org.telegram.ui.PhotoViewer;
 
 import java.io.File;
@@ -100,6 +101,7 @@
     //
     private StaticLayout nameLayout;
     private int nameWidth = 0;
+    private int nameOffsetX = 0;
     private String currentNameString;
 
     private ChatMediaCellDelegate mediaDelegate = null;
@@ -196,7 +198,11 @@ public boolean onTouchEvent(MotionEvent event) {
                             if (left <= x2 && left + nameLayout.getLineWidth(line) >= x2) {
                                 Spannable buffer = (Spannable) currentMessageObject.caption;
                                 ClickableSpan[] link = buffer.getSpans(off, off, ClickableSpan.class);
-                                if (link.length != 0) {
+                                boolean ignore = false;
+                                if (link.length == 0 || link.length != 0 && link[0] instanceof URLSpanBotCommand && !URLSpanBotCommand.enabled) {
+                                    ignore = true;
+                                }
+                                if (!ignore) {
                                     resetPressedLink();
                                     pressedLink = link[0];
                                     linkPreviewPressed = true;
@@ -220,7 +226,7 @@ public boolean onTouchEvent(MotionEvent event) {
                         }
                     } else if (linkPreviewPressed) {
                         try {
-                            delegate.didPressUrl(currentMessageObject, pressedLink);
+                            delegate.didPressUrl(currentMessageObject, pressedLink, false);
                         } catch (Exception e) {
                             FileLog.e("tmessages", e);
                         }
@@ -460,7 +466,7 @@ private boolean isPhotoDataChanged(MessageObject object) {
             }
             double lat = object.messageOwner.media.geo.lat;
             double lon = object.messageOwner.media.geo._long;
-            String url = String.format(Locale.US, "https://maps.googleapis.com/maps/api/staticmap?center=%f,%f&zoom=13&size=100x100&maptype=roadmap&scale=%d&markers=color:red|size:big|%f,%f&sensor=false", lat, lon, Math.min(2, (int) Math.ceil(AndroidUtilities.density)), lat, lon);
+            String url = String.format(Locale.US, "https://maps.googleapis.com/maps/api/staticmap?center=%f,%f&zoom=15&size=100x100&maptype=roadmap&scale=%d&markers=color:red|size:big|%f,%f&sensor=false", lat, lon, Math.min(2, (int) Math.ceil(AndroidUtilities.density)), lat, lon);
             if (!url.equals(currentUrl)) {
                 return true;
             }
@@ -504,6 +510,7 @@ private String getCurrentNameString(MessageObject messageObject){
     public void setMessageObject(MessageObject messageObject) {
         boolean dataChanged = currentMessageObject == messageObject && (isUserDataChanged() || photoNotSet);
         if (currentMessageObject != messageObject || isPhotoDataChanged(messageObject) || dataChanged) {
+            drawForwardedName = (messageObject.type == 3 || messageObject.type == 1) && messageObject.messageOwner.fwd_from_id != null && messageObject.messageOwner.fwd_from_id.channel_id != 0;
             media = messageObject.type != 9;
             cancelLoading = false;
             additionHeight = 0;
@@ -518,7 +525,6 @@ public void setMessageObject(MessageObject messageObject) {
             drawBackground = true;
 
             photoImage.setForcePreview(messageObject.isSecretPhoto());
-
             if (messageObject.type == 9) {
                 String name = messageObject.getDocumentName();
                 if (name == null || name.length() == 0) {
@@ -535,6 +541,7 @@ public void setMessageObject(MessageObject messageObject) {
                     nameLayout = StaticLayoutEx.createStaticLayout(currentNameString, namePaint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false, TextUtils.TruncateAt.END, maxWidth, 1);
                     if (nameLayout.getLineCount() > 0) {
                         nameWidth = Math.min(maxWidth, (int) Math.ceil(nameLayout.getLineWidth(0)));
+                        nameOffsetX = (int) Math.ceil(-nameLayout.getLineLeft(0));
                     } else {
                         nameWidth = maxWidth;
                     }
@@ -554,7 +561,7 @@ public void setMessageObject(MessageObject messageObject) {
                 }
                 ext = ext.toUpperCase();
 
-                String str = AndroidUtilities.formatFileSize(messageObject.messageOwner.media.document.size) + " " + ext;
+                String str = AndroidUtilities.formatFileSize(messageObject.messageOwner.media.document.size) + " " + messageObject.getExtension();
 
                 if (currentInfoString == null || !currentInfoString.equals(str)) {
                     currentInfoString = str;
@@ -641,7 +648,7 @@ else if (messageObject.type == 1) {   //PHOTO
                 currentNameString = null;
                 infoLayout = null;
                 nameLayout = null;
-                updateSecretTimeText();
+                updateSecretTimeText(messageObject);
                 infoLayout2 = null; //Plus
             }
             if (messageObject.type == 9) { //doc
@@ -663,7 +670,7 @@ else if (messageObject.type == 1) {   //PHOTO
                 double lon = messageObject.messageOwner.media.geo._long;
 
                 if (messageObject.messageOwner.media.title != null && messageObject.messageOwner.media.title.length() > 0) {
-                    //int maxWidth = (AndroidUtilities.isTablet() ? AndroidUtilities.getMinTabletSide() : Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y)) - AndroidUtilities.dp((isChat && !messageObject.isOut() ? 102 : 40) + 86 + 24);
+                    //int maxWidth = (AndroidUtilities.isTablet() ? AndroidUtilities.getMinTabletSide() : Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y)) - AndroidUtilities.dp((isChat && !messageObject.isOutOwner() ? 102 : 40) + 86 + 24);
                     int maxWidth = (AndroidUtilities.isTablet() ? AndroidUtilities.getMinTabletSide() : Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y)) - AndroidUtilities.dp(((isChat || showAvatar) && !messageObject.isOutOwner() ? leftBound + 50 : 40) + 86 + 24);
                     nameLayout = StaticLayoutEx.createStaticLayout(messageObject.messageOwner.media.title, locationTitlePaint, maxWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false, TextUtils.TruncateAt.END, maxWidth - AndroidUtilities.dp(4), 3);
                     int lineCount = nameLayout.getLineCount();
@@ -687,12 +694,12 @@ else if (messageObject.type == 1) {   //PHOTO
                         }
                     }
                     backgroundWidth = photoWidth + AndroidUtilities.dp(21) + maxWidth;
-                    currentUrl = String.format(Locale.US, "https://maps.googleapis.com/maps/api/staticmap?center=%f,%f&zoom=13&size=72x72&maptype=roadmap&scale=%d&markers=color:red|size:big|%f,%f&sensor=false", lat, lon, Math.min(2, (int) Math.ceil(AndroidUtilities.density)), lat, lon);
+                    currentUrl = String.format(Locale.US, "https://maps.googleapis.com/maps/api/staticmap?center=%f,%f&zoom=15&size=72x72&maptype=roadmap&scale=%d&markers=color:red|size:big|%f,%f&sensor=false", lat, lon, Math.min(2, (int) Math.ceil(AndroidUtilities.density)), lat, lon);
                 } else {
                     photoWidth = AndroidUtilities.dp(200);
                     photoHeight = AndroidUtilities.dp(100);
                     backgroundWidth = photoWidth + AndroidUtilities.dp(12);
-                    currentUrl = String.format(Locale.US, "https://maps.googleapis.com/maps/api/staticmap?center=%f,%f&zoom=13&size=200x100&maptype=roadmap&scale=%d&markers=color:red|size:big|%f,%f&sensor=false", lat, lon, Math.min(2, (int) Math.ceil(AndroidUtilities.density)), lat, lon);
+                    currentUrl = String.format(Locale.US, "https://maps.googleapis.com/maps/api/staticmap?center=%f,%f&zoom=15&size=200x100&maptype=roadmap&scale=%d&markers=color:red|size:big|%f,%f&sensor=false", lat, lon, Math.min(2, (int) Math.ceil(AndroidUtilities.density)), lat, lon);
                 }
 
                 photoImage.setNeedsQualityThumb(false);
@@ -914,11 +921,20 @@ else if (messageObject.type == 1) {   //PHOTO
             }
             super.setMessageObject(messageObject);
 
+            if (drawForwardedName) {
+                namesOffset += AndroidUtilities.dp(5);
+            }
+
             invalidate();
         }
         updateButtonState(dataChanged);
     }
 
+    @Override
+    protected int getMaxNameWidth() {
+        return backgroundWidth - AndroidUtilities.dp(14);
+    }
+
     @Override
     public ImageReceiver getPhotoImage() {
         return photoImage;
@@ -1040,12 +1056,13 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
         deleteProgressRect.set(buttonX + AndroidUtilities.dp(3), buttonY + AndroidUtilities.dp(3), buttonX + AndroidUtilities.dp(45), buttonY + AndroidUtilities.dp(45));
     }
 
-    private void updateSecretTimeText() {
-        if (currentMessageObject == null || currentMessageObject.isOut()) {
+    private void updateSecretTimeText(MessageObject messageObject) {
+        if (messageObject == null || messageObject.isOut()) {
             return;
         }
-        String str = currentMessageObject.getSecretTimeString();
+        String str = messageObject.getSecretTimeString();
         if (str == null) {
+            infoLayout = null;
             return;
         }
         if (currentInfoString == null || !currentInfoString.equals(str)) {
@@ -1166,7 +1183,7 @@ protected void onAfterBackgroundDraw(Canvas canvas) {
                     int offset = AndroidUtilities.dp(2);
                     invalidate((int) deleteProgressRect.left - offset, (int) deleteProgressRect.top - offset, (int) deleteProgressRect.right + offset * 2, (int) deleteProgressRect.bottom + offset * 2);
                 }
-                updateSecretTimeText();
+                updateSecretTimeText(currentMessageObject);
             }
         }
 
@@ -1187,7 +1204,11 @@ protected void onAfterBackgroundDraw(Canvas canvas) {
                 if (pressedLink != null) {
                     canvas.drawPath(urlPath, urlPaint);
                 }
-                nameLayout.draw(canvas);
+                try {
+                    nameLayout.draw(canvas);
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                }
                 canvas.restore();
             }
             //if (infoLayout != null && (buttonState == 1 || buttonState == 0 || buttonState == 3 || currentMessageObject.isSecretPhoto())) {
@@ -1226,7 +1247,7 @@ protected void onAfterBackgroundDraw(Canvas canvas) {
                 locationAddressPaint.setColor(currentMessageObject.isOutOwner() ? 0xff70b15c : 0xff999999);
 
                 canvas.save();
-                canvas.translate(photoImage.getImageX() + photoImage.getImageWidth() + AndroidUtilities.dp(10), photoImage.getImageY() + AndroidUtilities.dp(3));
+                canvas.translate(nameOffsetX + photoImage.getImageX() + photoImage.getImageWidth() + AndroidUtilities.dp(10), photoImage.getImageY() + AndroidUtilities.dp(3));
                 nameLayout.draw(canvas);
                 canvas.restore();
 
@@ -1260,7 +1281,7 @@ protected void onAfterBackgroundDraw(Canvas canvas) {
             }
         } else if (nameLayout != null) {
             canvas.save();
-            canvas.translate(photoImage.getImageX() + photoImage.getImageWidth() + AndroidUtilities.dp(10), photoImage.getImageY() + AndroidUtilities.dp(8));
+            canvas.translate(nameOffsetX + photoImage.getImageX() + photoImage.getImageWidth() + AndroidUtilities.dp(10), photoImage.getImageY() + AndroidUtilities.dp(8));
             nameLayout.draw(canvas);
             canvas.restore();
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
index 7df1b38ac..a019b35fc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -26,6 +26,7 @@
 import android.text.style.ClickableSpan;
 import android.view.MotionEvent;
 import android.view.SoundEffectConstants;
+import android.view.ViewStructure;
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
@@ -40,6 +41,8 @@
 import org.telegram.ui.Components.RadialProgress;
 import org.telegram.ui.Components.ResourceLoader;
 import org.telegram.ui.Components.StaticLayoutEx;
+import org.telegram.ui.Components.URLSpanBotCommand;
+import org.telegram.ui.Components.URLSpanNoUnderline;
 
 import java.io.File;
 import java.util.Locale;
@@ -116,7 +119,11 @@ public boolean onTouchEvent(MotionEvent event) {
                             if (left <= x && left + block.textLayout.getLineWidth(line) >= x) {
                                 Spannable buffer = (Spannable) currentMessageObject.messageText;
                                 ClickableSpan[] link = buffer.getSpans(off, off, ClickableSpan.class);
-                                if (link.length != 0) {
+                                boolean ignore = false;
+                                if (link.length == 0 || link.length != 0 && link[0] instanceof URLSpanBotCommand && !URLSpanBotCommand.enabled) {
+                                    ignore = true;
+                                }
+                                if (!ignore) {
                                     if (event.getAction() == MotionEvent.ACTION_DOWN) {
                                         resetPressedLink();
                                         pressedLink = link[0];
@@ -132,7 +139,7 @@ public boolean onTouchEvent(MotionEvent event) {
                                     } else {
                                         if (link[0] == pressedLink) {
                                             try {
-                                                delegate.didPressUrl(currentMessageObject, pressedLink);
+                                                delegate.didPressUrl(currentMessageObject, pressedLink, false);
                                             } catch (Exception e) {
                                                 FileLog.e("tmessages", e);
                                             }
@@ -176,7 +183,11 @@ public boolean onTouchEvent(MotionEvent event) {
                                     if (left <= x && left + descriptionLayout.getLineWidth(line) >= x) {
                                         Spannable buffer = (Spannable) currentMessageObject.linkDescription;
                                         ClickableSpan[] link = buffer.getSpans(off, off, ClickableSpan.class);
-                                        if (link.length != 0) {
+                                        boolean ignore = false;
+                                        if (link.length == 0 || link.length != 0 && link[0] instanceof URLSpanBotCommand && !URLSpanBotCommand.enabled) {
+                                            ignore = true;
+                                        }
+                                        if (!ignore) {
                                             resetPressedLink();
                                             pressedLink = link[0];
                                             linkPreviewPressed = true;
@@ -352,6 +363,18 @@ protected void onAttachedToWindow() {
         }
     }
 
+    @Override
+    protected void onLongPress() {
+        if (pressedLink instanceof URLSpanNoUnderline) {
+            URLSpanNoUnderline url = (URLSpanNoUnderline) pressedLink;
+            if (url.getURL().startsWith("/")) {
+                delegate.didPressUrl(currentMessageObject, pressedLink, true);
+                return;
+            }
+        }
+        super.onLongPress();
+    }
+
     @Override
     public void setMessageObject(MessageObject messageObject) {
         boolean dataChanged = currentMessageObject == messageObject && (isUserDataChanged() || photoNotSet);
@@ -379,23 +402,25 @@ public void setMessageObject(MessageObject messageObject) {
             int maxWidth;
 
             if (AndroidUtilities.isTablet()) {
+                //if (isChat && !messageObject.isOutOwner() && messageObject.messageOwner.from_id > 0) {
                 if ((isChat || showAvatar) && !messageObject.isOutOwner() && messageObject.messageOwner.from_id > 0
                         || ( (showMyAvatar && !isChat) || (showMyAvatarGroup && isChat)) && messageObject.isOutOwner()) {
                     //maxWidth = AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(122);
                     maxWidth = AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(leftBound + 70);
                     drawName = true;
                 } else {
-                    drawName = messageObject.messageOwner.to_id.channel_id != 0;
+                    drawName = messageObject.messageOwner.to_id.channel_id != 0 && !messageObject.isOutOwner();
                     maxWidth = AndroidUtilities.getMinTabletSide() - AndroidUtilities.dp(80);
                 }
             } else {
+                //if (isChat && !messageObject.isOutOwner() && messageObject.messageOwner.from_id > 0) {
                 if ((isChat || showAvatar) && !messageObject.isOutOwner() && messageObject.messageOwner.from_id > 0
                         || ( (showMyAvatar && !isChat) || (showMyAvatarGroup && isChat)) && messageObject.isOutOwner()) {
                     maxWidth = Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) - AndroidUtilities.dp(122);
                     drawName = true;
                 } else {
                     maxWidth = Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) - AndroidUtilities.dp(80);
-                    drawName = messageObject.messageOwner.to_id.channel_id != 0;
+                    drawName = messageObject.messageOwner.to_id.channel_id != 0 && !messageObject.isOutOwner();
                 }
             }
 
@@ -563,7 +588,7 @@ public void setMessageObject(MessageObject messageObject) {
                         totalHeight += height;
                         for (int a = 0; a < descriptionLayout.getLineCount(); a++) {
                             int lineLeft = (int) Math.ceil(descriptionLayout.getLineLeft(a));
-                            if (descriptionX == 0) {
+                            if (a == 0 && descriptionX == 0) {
                                 descriptionX = -lineLeft;
                             } else {
                                 descriptionX = Math.max(descriptionX, -lineLeft);
@@ -990,4 +1015,12 @@ public void onProgressDownload(String fileName, float progress) {
             updateButtonState(false);
         }
     }
+
+    @Override
+    public void onProvideStructure(ViewStructure structure) {
+        super.onProvideStructure(structure);
+        if (allowAssistant && Build.VERSION.SDK_INT >= 23) {
+            structure.setText(currentMessageObject.messageText);
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index 6ff8a221b..53a9d83cc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -23,23 +23,18 @@
 
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.Emoji;
+import org.telegram.messenger.FileLog;
 import org.telegram.messenger.ImageReceiver;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessageObject;
 import org.telegram.messenger.MessagesController;
-import org.telegram.messenger.UserObject;
-import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.FileLog;
-import org.telegram.messenger.R;
-import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.ContactsController;
-import org.telegram.messenger.Emoji;
-import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
-import org.telegram.messenger.ImageReceiver;
+import org.telegram.messenger.UserObject;
+import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.Components.AvatarDrawable;
 
 import java.util.ArrayList;
@@ -64,9 +59,11 @@
     private static Drawable errorDrawable;
     private static Drawable lockDrawable;
     private static Drawable countDrawable;
+    private static Drawable countDrawableGrey;
     private static Drawable groupDrawable;
     private static Drawable broadcastDrawable;
     private static Drawable muteDrawable;
+    private static Drawable verifiedDrawable;
 
     private static Paint linePaint;
     private static Paint backPaint;
@@ -126,6 +123,8 @@
     private int countWidth;
     private StaticLayout countLayout;
 
+    private boolean drawVerified;
+
     private int avatarTop = AndroidUtilities.dp(10);
 
     private boolean isSelected;
@@ -196,11 +195,11 @@ public DialogCell(Context context) {
             clockDrawable = getResources().getDrawable(R.drawable.msg_clock);
             errorDrawable = getResources().getDrawable(R.drawable.dialogs_warning);
             countDrawable = getResources().getDrawable(R.drawable.dialogs_badge);
+            countDrawableGrey = getResources().getDrawable(R.drawable.dialogs_badge2);
             groupDrawable = getResources().getDrawable(R.drawable.list_group);
             broadcastDrawable = getResources().getDrawable(R.drawable.list_broadcast);
             muteDrawable = getResources().getDrawable(R.drawable.mute_grey);
-
-            updateTheme();
+            verifiedDrawable = getResources().getDrawable(R.drawable.check_list);
         }
         
        setBackgroundResource(R.drawable.list_selector);
@@ -289,6 +288,7 @@ public void buildLayout() {
         drawNameGroup = false;
         drawNameBroadcast = false;
         drawNameLock = false;
+        drawVerified = false;
 
         if (encryptedChat != null) {
             drawNameLock = true;
@@ -309,6 +309,7 @@ public void buildLayout() {
                     drawNameGroup = true;
                     nameLockTop = AndroidUtilities.dp(17.5f);
                 }
+                drawVerified = (chat.flags & TLRPC.CHAT_FLAG_IS_VERIFIED) != 0;
 
                 if (!LocaleController.isRTL) {
                     nameLockLeft = AndroidUtilities.dp(AndroidUtilities.leftBaseline);
@@ -390,7 +391,7 @@ public void buildLayout() {
                     messageString = message.messageText;
                     currentMessagePaint = messagePrintingPaint;
                 } else {
-                    if (chat != null && chat.id > 0) {
+                    if (chat != null && chat.id > 0 && fromChat == null) {
                         String name;
                         if (message.isOutOwner()) {
                             name = LocaleController.getString("FromYou", R.string.FromYou);
@@ -567,12 +568,18 @@ public void buildLayout() {
             }
         }
 
-        if (dialogMuted) {
+        if (dialogMuted && !drawVerified) {
             int w = AndroidUtilities.dp(6) + muteDrawable.getIntrinsicWidth();
             nameWidth -= w;
             if (LocaleController.isRTL) {
                 nameLeft += w;
             }
+        } else if (drawVerified) {
+            int w = AndroidUtilities.dp(6) + verifiedDrawable.getIntrinsicWidth();
+            nameWidth -= w;
+            if (LocaleController.isRTL) {
+                nameLeft += w;
+            }
         }
 
         nameWidth = Math.max(AndroidUtilities.dp(12), nameWidth);
@@ -647,8 +654,10 @@ public void buildLayout() {
             if (nameLayout != null && nameLayout.getLineCount() > 0) {
                 left = nameLayout.getLineLeft(0);
                     widthpx = Math.ceil(nameLayout.getLineWidth(0));
-                if (dialogMuted) {
+                if (dialogMuted && !drawVerified) {
                     nameMuteLeft = (int) (nameLeft + (nameWidth - widthpx) - AndroidUtilities.dp(6) - muteDrawable.getIntrinsicWidth());
+                } else if (drawVerified) {
+                    nameMuteLeft = (int) (nameLeft + (nameWidth - widthpx) - AndroidUtilities.dp(6) - verifiedDrawable.getIntrinsicWidth());
                 }
                 if (left == 0) {
                     if (widthpx < nameWidth) {
@@ -674,7 +683,7 @@ public void buildLayout() {
                         nameLeft -= (nameWidth - widthpx);
                     }
                 }
-                if (dialogMuted) {
+                if (dialogMuted || drawVerified) {
                     nameMuteLeft = (int) (nameLeft + left + AndroidUtilities.dp(6));
                 }
             }
@@ -877,6 +886,7 @@ private void updateTheme(){
         clockDrawable.setColorFilter(themePrefs.getInt("chatsChecksColor", tColor), PorterDuff.Mode.SRC_IN);
 
         countDrawable.setColorFilter(themePrefs.getInt("chatsCountBGColor", tColor), PorterDuff.Mode.SRC_IN);
+        countDrawableGrey.setColorFilter(themePrefs.getInt("chatsCountBGColor", tColor), PorterDuff.Mode.SRC_IN);
 
         nColor = themePrefs.getInt("chatsGroupIconColor", themePrefs.getInt("chatsGroupNameColor", 0xff000000));
         groupDrawable.setColorFilter(nColor, PorterDuff.Mode.SRC_IN);
@@ -951,21 +961,29 @@ protected void onDraw(Canvas canvas) {
             }
         }
 
-        if (dialogMuted) {
+        if (dialogMuted && !drawVerified) {
             setDrawableBounds(muteDrawable, nameMuteLeft, AndroidUtilities.dp(16.5f));
             muteDrawable.draw(canvas);
+        } else if (drawVerified) {
+            setDrawableBounds(verifiedDrawable, nameMuteLeft, AndroidUtilities.dp(16.5f));
+            verifiedDrawable.draw(canvas);
         }
 
         if (drawError) {
             setDrawableBounds(errorDrawable, errorLeft, errorTop);
             errorDrawable.draw(canvas);
         } else if (drawCount) {
-            SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
-            int size = themePrefs.getInt("chatsCountSize", 13);
-            size = size > 13 ? (size - 13) / 2 : 0;
-            //setDrawableBounds(countDrawable, countLeft - AndroidUtilities.dp(5.5f), countTop, countWidth + AndroidUtilities.dp(11), countDrawable.getIntrinsicHeight());
-            setDrawableBounds(countDrawable, countLeft - AndroidUtilities.dp(5.5f), countTop + AndroidUtilities.dp(size), countWidth + AndroidUtilities.dp(11), countDrawable.getIntrinsicHeight());
-            countDrawable.draw(canvas);
+            if (dialogMuted) {
+                setDrawableBounds(countDrawableGrey, countLeft - AndroidUtilities.dp(5.5f), countTop, countWidth + AndroidUtilities.dp(11), countDrawable.getIntrinsicHeight());
+                countDrawableGrey.draw(canvas);
+            } else {
+                SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
+                int size = themePrefs.getInt("chatsCountSize", 13);
+                size = size > 13 ? (size - 13) / 2 : 0;
+                //setDrawableBounds(countDrawable, countLeft - AndroidUtilities.dp(5.5f), countTop, countWidth + AndroidUtilities.dp(11), countDrawable.getIntrinsicHeight());
+                setDrawableBounds(countDrawable, countLeft - AndroidUtilities.dp(5.5f), countTop + AndroidUtilities.dp(size), countWidth + AndroidUtilities.dp(11), countDrawable.getIntrinsicHeight());
+                countDrawable.draw(canvas);
+            }
             canvas.save();
             canvas.translate(countLeft, countTop + AndroidUtilities.dp(4));
             countLayout.draw(canvas);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DividerCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DividerCell.java
index cfe7acf1f..9fd168e04 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DividerCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DividerCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java
index ebddfa19f..8e3d72392 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerActionCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -17,6 +17,7 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.FileLog;
 import org.telegram.ui.Components.LayoutHelper;
 
 public class DrawerActionCell extends FrameLayout {
@@ -36,7 +37,6 @@ public DrawerActionCell(Context context) {
         textView.setGravity(Gravity.LEFT | Gravity.CENTER_VERTICAL);
         textView.setCompoundDrawablePadding(AndroidUtilities.dp(34));
         addView(textView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.LEFT | Gravity.TOP, 14, 0, 16, 0));
-        //updateTheme();
     }
 
     @Override
@@ -49,9 +49,14 @@ public void setTextAndIcon(String text, int resId) {
         textView.setText(text);
         //textView.setCompoundDrawablesWithIntrinsicBounds(resId, 0, 0, 0);
         int color = AndroidUtilities.getIntDef("drawerIconColor", 0xff737373);
-        Drawable d = getResources().getDrawable(resId);
-        d.setColorFilter(color, PorterDuff.Mode.SRC_IN);
-        textView.setCompoundDrawablesWithIntrinsicBounds(d, null, null, null);
+        try{
+            Drawable d = getResources().getDrawable(resId);
+            d.setColorFilter(color, PorterDuff.Mode.SRC_IN);
+            textView.setCompoundDrawablesWithIntrinsicBounds(d, null, null, null);
+        } catch (Exception e) {
+            textView.setCompoundDrawablesWithIntrinsicBounds(resId, 0, 0, 0);
+            FileLog.e("tmessages", e);
+        }
     }
 
     public void setTextAndIcon(String text, Drawable drawable) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java
index ba6e56494..7bd106cbf 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DrawerProfileCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -260,7 +260,9 @@ public void willHidePhotoViewer() {
     public void setPhotoChecked(int index) { }
 
     @Override
-    public void cancelButtonPressed() { }
+    public boolean cancelButtonPressed() {
+        return true;
+    }
 
     @Override
     public void sendButtonPressed(int index) { }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/EmptyCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/EmptyCell.java
index 0458b98f2..30d0a42e5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/EmptyCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/EmptyCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/GreySectionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/GreySectionCell.java
index 65aea7347..d53f95f1b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/GreySectionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/GreySectionCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/HashtagSearchCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/HashtagSearchCell.java
index d8cfc7062..bd0cb55ef 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/HashtagSearchCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/HashtagSearchCell.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/HeaderCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/HeaderCell.java
index 404b5b244..cc5414004 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/HeaderCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/HeaderCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/LetterSectionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/LetterSectionCell.java
index 2eee5ce45..d7f5005c9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/LetterSectionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/LetterSectionCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/LoadingCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/LoadingCell.java
index 6da6b9db5..6d8ba1d42 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/LoadingCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/LoadingCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/LocationCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/LocationCell.java
index a3bbf7ed2..548202dde 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/LocationCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/LocationCell.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/LocationLoadingCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/LocationLoadingCell.java
index dbed1458b..84ab570d9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/LocationLoadingCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/LocationLoadingCell.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/LocationPoweredCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/LocationPoweredCell.java
index 3b3393f35..6b0b0677d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/LocationPoweredCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/LocationPoweredCell.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/MentionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/MentionCell.java
index 7674c25ec..f952ae1a3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/MentionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/MentionCell.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoEditToolCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoEditToolCell.java
index afc6128bb..8e16a1cc5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoEditToolCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoEditToolCell.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerAlbumsCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerAlbumsCell.java
index 458ffa321..fc45e904d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerAlbumsCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerAlbumsCell.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerPhotoCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerPhotoCell.java
index cda365f6b..620d2312c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerPhotoCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerPhotoCell.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -13,6 +13,10 @@
 import android.widget.FrameLayout;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
+import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
+import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
+import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.messenger.R;
 import org.telegram.ui.Components.BackupImageView;
 import org.telegram.ui.Components.CheckBox;
@@ -23,6 +27,7 @@
     public BackupImageView photoImage;
     public FrameLayout checkFrame;
     public CheckBox checkBox;
+    private AnimatorSetProxy animator;
     public int itemWidth;
 
     public PhotoPickerPhotoCell(Context context) {
@@ -39,11 +44,44 @@ public PhotoPickerPhotoCell(Context context) {
         checkBox.setCheckOffset(AndroidUtilities.dp(1));
         checkBox.setDrawBackground(true);
         checkBox.setColor(0xff3ccaef);
-        addView(checkBox, LayoutHelper.createFrame(30, 30, Gravity.RIGHT | Gravity.TOP, 0, 6, 6, 0));
+        addView(checkBox, LayoutHelper.createFrame(30, 30, Gravity.RIGHT | Gravity.TOP, 0, 4, 4, 0));
     }
 
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         super.onMeasure(MeasureSpec.makeMeasureSpec(itemWidth, MeasureSpec.EXACTLY), MeasureSpec.makeMeasureSpec(itemWidth, MeasureSpec.EXACTLY));
     }
+
+    public void setChecked(final boolean checked, boolean animated) {
+        checkBox.setChecked(checked, animated);
+        if (animator != null) {
+            animator.cancel();
+            animator = null;
+        }
+        if (animated) {
+            if (checked) {
+                setBackgroundColor(0xff0A0A0A);
+            }
+            animator = new AnimatorSetProxy();
+            animator.playTogether(ObjectAnimatorProxy.ofFloat(photoImage, "scaleX", checked ? 0.85f : 1.0f),
+                    ObjectAnimatorProxy.ofFloat(photoImage, "scaleY", checked ? 0.85f : 1.0f));
+            animator.setDuration(200);
+            animator.addListener(new AnimatorListenerAdapterProxy() {
+                @Override
+                public void onAnimationEnd(Object animation) {
+                    if (animator.equals(animation)) {
+                        animator = null;
+                        if (!checked) {
+                            setBackgroundColor(0);
+                        }
+                    }
+                }
+            });
+            animator.start();
+        } else {
+            setBackgroundColor(checked ? 0xff0A0A0A : 0);
+            ViewProxy.setScaleX(photoImage, checked ? 0.85f : 1.0f);
+            ViewProxy.setScaleY(photoImage, checked ? 0.85f : 1.0f);
+        }
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerSearchCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerSearchCell.java
index 7a81c153b..0b71286e4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerSearchCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/PhotoPickerSearchCell.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ProfileSearchCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ProfileSearchCell.java
index c147fdf93..8854a00f7 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ProfileSearchCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ProfileSearchCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -24,6 +24,7 @@
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ApplicationLoader;
+import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.ImageReceiver;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
@@ -46,6 +47,7 @@
     private static Drawable broadcastDrawable;
     private static Drawable groupDrawable;
     private static Drawable countDrawable;
+    private static Drawable checkDrawable;
     private static Paint linePaint;
 
     private CharSequence currentName;
@@ -81,6 +83,8 @@
     private int countWidth;
     private StaticLayout countLayout;
 
+    private boolean drawCheck;
+
     private int onlineLeft;
     private StaticLayout onlineLayout;
 
@@ -120,7 +124,7 @@ public ProfileSearchCell(Context context) {
             lockDrawable = getResources().getDrawable(R.drawable.list_secret);
             groupDrawable = getResources().getDrawable(R.drawable.list_group);
             countDrawable = getResources().getDrawable(R.drawable.dialogs_badge);
-
+            checkDrawable = getResources().getDrawable(R.drawable.check_list);
             updateTheme();
         }
 
@@ -132,11 +136,9 @@ public ProfileSearchCell(Context context) {
     private void updateTheme(){
         SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
         int tColor = themePrefs.getInt("themeColor", AndroidUtilities.defColor);
-
         countPaint.setTextSize(AndroidUtilities.dp(themePrefs.getInt("chatsCountSize", 13)));
         countPaint.setColor(themePrefs.getInt("chatsCountColor", 0xffffffff));
         countDrawable.setColorFilter(themePrefs.getInt("chatsCountBGColor", tColor), PorterDuff.Mode.SRC_IN);
-
     }
 
     @Override
@@ -199,6 +201,7 @@ public void buildLayout() {
         drawNameBroadcast = false;
         drawNameLock = false;
         drawNameGroup = false;
+        drawCheck = false;
 
         if (encryptedChat != null) {
             drawNameLock = true;
@@ -219,9 +222,15 @@ public void buildLayout() {
                     nameLockTop = AndroidUtilities.dp(28.5f);
                 } else {
                     dialog_id = -chat.id;
+                    if (ChatObject.isChannel(chat)) {
+                        drawNameBroadcast = true;
+                        nameLockTop = AndroidUtilities.dp(28.5f);
+                    } else {
                     drawNameGroup = true;
                     nameLockTop = AndroidUtilities.dp(30);
                 }
+                }
+                drawCheck = (chat.flags & TLRPC.CHAT_FLAG_IS_VERIFIED) != 0;
                 if (!LocaleController.isRTL) {
                     nameLockLeft = AndroidUtilities.dp(AndroidUtilities.leftBaseline);
                     nameLeft = AndroidUtilities.dp(AndroidUtilities.leftBaseline + 4) + (drawNameGroup ? groupDrawable.getIntrinsicWidth() : broadcastDrawable.getIntrinsicWidth());
@@ -504,6 +513,14 @@ protected void onDraw(Canvas canvas) {
         canvas.translate(nameLeft, nameTop);
         nameLayout.draw(canvas);
         canvas.restore();
+            if (drawCheck) {
+                if (LocaleController.isRTL) {
+                    setDrawableBounds(checkDrawable, nameLeft - AndroidUtilities.dp(4) - checkDrawable.getIntrinsicWidth(), nameLockTop);
+                } else {
+                    setDrawableBounds(checkDrawable, nameLeft + (int) nameLayout.getLineWidth(0) + AndroidUtilities.dp(4), nameLockTop);
+                }
+                checkDrawable.draw(canvas);
+            }
         }
 
         if (onlineLayout != null) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SendLocationCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SendLocationCell.java
index ab3b1eba3..d6fe28335 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SendLocationCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SendLocationCell.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SessionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SessionCell.java
index 5c1324539..2115f2618 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SessionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SessionCell.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShadowBottomSectionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShadowBottomSectionCell.java
index b7a4d0dfa..e391e8d67 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShadowBottomSectionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShadowBottomSectionCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShadowSectionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShadowSectionCell.java
index 52ac3f2e9..6c6572a91 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShadowSectionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ShadowSectionCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -33,7 +33,7 @@ public ShadowSectionCell(Context context, boolean theme) {
 
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        super.onMeasure(widthMeasureSpec, MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(12), MeasureSpec.EXACTLY));
+        super.onMeasure(MeasureSpec.makeMeasureSpec(MeasureSpec.getSize(widthMeasureSpec), MeasureSpec.EXACTLY), MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(12), MeasureSpec.EXACTLY));
         if(bTheme)setTheme();
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java
index 65ea4745c..870cf3380 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedDocumentCell.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -204,8 +204,7 @@ public void setDocument(MessageObject document, boolean divider) {
         loaded = false;
         loading = false;
 
-        //if (document != null && document.messageOwner.media != null) {
-        if (document != null && document.messageOwner.media != null && document.messageOwner.media.document != null) { //To try to fix NullPointerException: Attempt to read from field 'java.lang.String org.telegram.tgnet.TLRPC$Document.mime_type' on a null object reference
+        if (document != null && document.messageOwner.media != null && document.messageOwner.media.document != null) {
             int idx;
             String name = FileLoader.getDocumentFileName(document.messageOwner.media.document);
             placeholderImabeView.setVisibility(VISIBLE);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedMediaSectionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedMediaSectionCell.java
index 09495fc0b..b4631b4d6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedMediaSectionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedMediaSectionCell.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java
index 7748c7353..4ab37ad3c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/SharedPhotoVideoCell.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -19,6 +19,10 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
+import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
+import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
+import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.messenger.MessageObject;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLoader;
@@ -51,21 +55,26 @@
         private LinearLayout videoInfoContainer;
         private View selector;
         private CheckBox checkBox;
+        private FrameLayoutFixed container;
+        private AnimatorSetProxy animator;
 
         public PhotoVideoView(Context context) {
             super(context);
 
+            container = new FrameLayoutFixed(context);
+            addView(container, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+
             imageView = new BackupImageView(context);
             imageView.getImageReceiver().setNeedsQualityThumb(true);
             imageView.getImageReceiver().setShouldGenerateQualityThumb(true);
-            addView(imageView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+            container.addView(imageView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
 
             videoInfoContainer = new LinearLayout(context);
             videoInfoContainer.setOrientation(LinearLayout.HORIZONTAL);
             videoInfoContainer.setBackgroundResource(R.drawable.phototime);
             videoInfoContainer.setPadding(AndroidUtilities.dp(3), 0, AndroidUtilities.dp(3), 0);
             videoInfoContainer.setGravity(Gravity.CENTER_VERTICAL);
-            addView(videoInfoContainer, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 16, Gravity.BOTTOM | Gravity.LEFT));
+            container.addView(videoInfoContainer, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 16, Gravity.BOTTOM | Gravity.LEFT));
 
             ImageView imageView1 = new ImageView(context);
             imageView1.setImageResource(R.drawable.ic_video);
@@ -83,7 +92,7 @@ public PhotoVideoView(Context context) {
 
             checkBox = new CheckBox(context, R.drawable.round_check2);
             checkBox.setVisibility(INVISIBLE);
-            addView(checkBox, LayoutHelper.createFrame(22, 22, Gravity.RIGHT | Gravity.TOP, 0, 6, 6, 0));
+            addView(checkBox, LayoutHelper.createFrame(22, 22, Gravity.RIGHT | Gravity.TOP, 0, 2, 2, 0));
         }
 
         @Override
@@ -93,6 +102,51 @@ public boolean onTouchEvent(MotionEvent event) {
             }
             return super.onTouchEvent(event);
         }
+
+        public void setChecked(final boolean checked, boolean animated) {
+            if (checkBox.getVisibility() != VISIBLE) {
+                checkBox.setVisibility(VISIBLE);
+            }
+            checkBox.setChecked(checked, animated);
+            if (animator != null) {
+                animator.cancel();
+                animator = null;
+            }
+            if (animated) {
+                if (checked) {
+                    setBackgroundColor(0xfff5f5f5);
+                }
+                animator = new AnimatorSetProxy();
+                animator.playTogether(ObjectAnimatorProxy.ofFloat(container, "scaleX", checked ? 0.85f : 1.0f),
+                        ObjectAnimatorProxy.ofFloat(container, "scaleY", checked ? 0.85f : 1.0f));
+                animator.setDuration(200);
+                animator.addListener(new AnimatorListenerAdapterProxy() {
+                    @Override
+                    public void onAnimationEnd(Object animation) {
+                        if (animator.equals(animation)) {
+                            animator = null;
+                            if (!checked) {
+                                setBackgroundColor(0);
+                            }
+                        }
+                    }
+                });
+                animator.start();
+            } else {
+                setBackgroundColor(checked ? 0xfff5f5f5 : 0);
+                ViewProxy.setScaleX(container, checked ? 0.85f : 1.0f);
+                ViewProxy.setScaleY(container, checked ? 0.85f : 1.0f);
+            }
+        }
+
+        @Override
+        public void clearAnimation() {
+            super.clearAnimation();
+            if (animator != null) {
+                animator.cancel();
+                animator = null;
+            }
+        }
     }
 
     public SharedPhotoVideoCell(Context context) {
@@ -134,6 +188,7 @@ public void setDelegate(SharedPhotoVideoCellDelegate delegate) {
 
     public void setItemsCount(int count) {
         for (int a = 0; a < photoVideoViews.length; a++) {
+            photoVideoViews[a].clearAnimation();
             photoVideoViews[a].setVisibility(a < count ? VISIBLE : INVISIBLE);
         }
         itemsCount = count;
@@ -158,10 +213,7 @@ public void setIsFirst(boolean first) {
     }
 
     public void setChecked(int a, boolean checked, boolean animated) {
-        if (photoVideoViews[a].checkBox.getVisibility() != VISIBLE) {
-            photoVideoViews[a].checkBox.setVisibility(VISIBLE);
-        }
-        photoVideoViews[a].checkBox.setChecked(checked, animated);
+        photoVideoViews[a].setChecked(checked, animated);
     }
 
     public void setItem(int a, int index, MessageObject messageObject) {
@@ -195,6 +247,7 @@ public void setItem(int a, int index, MessageObject messageObject) {
                 photoVideoView.imageView.setImageResource(R.drawable.photo_placeholder_in);
             }
         } else {
+            photoVideoViews[a].clearAnimation();
             photoVideoViews[a].setVisibility(INVISIBLE);
             messageObjects[a] = null;
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerCell.java
index 5b4d57a52..af2d4bafc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerCell.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -45,7 +45,7 @@ public void setPressed(boolean pressed) {
     }
 
     public void setSticker(TLRPC.Document document, int side) {
-        if (document != null) {
+        if (document != null && document.thumb != null) {
             imageView.setImage(document.thumb.location, null, "webp", null);
         }
         if (side == -1) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerEmojiCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerEmojiCell.java
index c6c8d9418..d450fe343 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerEmojiCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/StickerEmojiCell.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
@@ -57,7 +57,9 @@ public StickerEmojiCell(Context context) {
     public void setSticker(TLRPC.Document document, boolean showEmoji) {
         if (document != null) {
             sticker = document;
-            imageView.setImage(document.thumb.location, null, "webp", null);
+            if (document.thumb != null) {
+                imageView.setImage(document.thumb.location, null, "webp", null);
+            }
 
             if (showEmoji) {
                 boolean set = false;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextBlockCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextBlockCell.java
index 082d38c0d..3361937f5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextBlockCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextBlockCell.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCell.java
index 4fb804477..ad5f4e053 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -64,7 +64,7 @@ public TextCell(Context context) {
 
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        super.onMeasure(widthMeasureSpec, multiline ?  MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED) : MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(48), MeasureSpec.EXACTLY));
+        super.onMeasure(MeasureSpec.makeMeasureSpec(MeasureSpec.getSize(widthMeasureSpec), MeasureSpec.EXACTLY), multiline ?  MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED) : MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(48), MeasureSpec.EXACTLY));
     }
 
     public void setTextColor(int color) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCheckCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCheckCell.java
index 09374d770..7665d0fdf 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCheckCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextCheckCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextColorCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextColorCell.java
index 36b5c46d8..975e7c045 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextColorCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextColorCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -33,7 +33,7 @@
     private boolean needDivider;
     private int currentColor;
 
-    private Drawable colorDrawable; //no static
+    private Drawable colorDrawable;
     private static Paint paint;
 
     public TextColorCell(Context context) {
@@ -43,10 +43,10 @@ public TextColorCell(Context context) {
             paint = new Paint();
             paint.setColor(0xffd9d9d9);
             paint.setStrokeWidth(1);
-
-            //colorDrawable = getResources().getDrawable(R.drawable.switch_to_on2);
         }
 
+        colorDrawable = getResources().getDrawable(R.drawable.switch_to_on2);
+
         textView = new TextView(context);
         textView.setTextColor(0xff212121);
         textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
@@ -57,7 +57,6 @@ public TextColorCell(Context context) {
         textView.setGravity((LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.CENTER_VERTICAL);
         addView(textView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.TOP, 17, 0, 45, 0));
 
-        colorDrawable = getResources().getDrawable(R.drawable.switch_to_on2);
     }
 
     @Override
@@ -72,6 +71,7 @@ public void setTextAndColor(String text, int color, boolean divider) {
         currentColor = color;
         colorDrawable.setColorFilter(new PorterDuffColorFilter(color, PorterDuff.Mode.MULTIPLY));
         setWillNotDraw(!needDivider && currentColor == 0);
+        invalidate();
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailCell.java
index c666d7c5f..dd7286586 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -55,7 +55,7 @@ public TextDetailCell(Context context) {
 
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        super.onMeasure(widthMeasureSpec, View.MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(64), View.MeasureSpec.EXACTLY));
+        super.onMeasure(MeasureSpec.makeMeasureSpec(MeasureSpec.getSize(widthMeasureSpec), MeasureSpec.EXACTLY), View.MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(64), View.MeasureSpec.EXACTLY));
     }
 
     public void setTextAndValue(String text, String value) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailSettingsCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailSettingsCell.java
index e12a14d8f..7b6da2982 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailSettingsCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextDetailSettingsCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoCell.java
index 4a59dd803..47dff3d61 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -35,10 +35,6 @@ public TextInfoCell(Context context) {
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         super.onMeasure(widthMeasureSpec, MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED));
-        //if( textView.getContext() instanceof LaunchActivity ){
-            //textView.setTextColor(AndroidUtilities.getIntDef("drawerVersionColor", 0xffa3a3a3));
-            //textView.setTextSize(AndroidUtilities.getIntDef("drawerVersionSize", 13));
-        //}
     }
 
     public void setText(String text) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoPrivacyCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoPrivacyCell.java
index a0bbde2a8..b44a34378 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoPrivacyCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextInfoPrivacyCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextSettingsCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextSettingsCell.java
index 9b4b96e59..57910d05d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextSettingsCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/TextSettingsCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/UserCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/UserCell.java
index ef2a99665..b17671465 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/UserCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/UserCell.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Cells;
@@ -146,7 +146,7 @@ public void setChecked(boolean checked, boolean animated) {
 
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        super.onMeasure(widthMeasureSpec, MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(64), MeasureSpec.EXACTLY));
+        super.onMeasure(MeasureSpec.makeMeasureSpec(MeasureSpec.getSize(widthMeasureSpec), MeasureSpec.EXACTLY), MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(64), MeasureSpec.EXACTLY));
     }
 
     public void setStatusColors(int color, int onlineColor) {
@@ -226,8 +226,6 @@ public void update(int mask) {
                 lastName = newName == null ? currentChat.title : newName;
             }
             nameTextView.setText(lastName);
-            ////nameTextView.setTextColor(nameColor);
-            ////nameTextView.setTextSize(themePrefs.getInt("contactsNameSize", 17));
         }
         if (currrntStatus != null) {
             statusTextView.setTextColor(statusColor);
@@ -269,6 +267,11 @@ public void update(int mask) {
         avatarImageView.setImage(photo, "50_50", avatarDrawable);
     }
 
+    @Override
+    public boolean hasOverlappingRendering() {
+        return false;
+    }
+
     public void setNameColor(int color) {
         nameColor = color;
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
index 0f9b1d2d7..3302cb82f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeChatNameActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -158,11 +158,14 @@ private void updateTheme(){
         done.setColorFilter(themePrefs.getInt("prefHeaderIconsColor", 0xffffffff), PorterDuff.Mode.MULTIPLY);
     }
 
+
     @Override
-    public void onOpenAnimationEnd() {
+    public void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
+        if (isOpen) {
         firstNameField.requestFocus();
         AndroidUtilities.showKeyboard(firstNameField);
     }
+    }
 
     private void saveName() {
         MessagesController.getInstance().changeChatTitle(chat_id, firstNameField.getText().toString());
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java
index 26f147819..2c81b5f09 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeNameActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -206,8 +206,10 @@ public void run(TLObject response, TLRPC.TL_error error) {
     }
 
     @Override
-    public void onOpenAnimationEnd() {
+    public void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
+        if (isOpen) {
         firstNameField.requestFocus();
         AndroidUtilities.showKeyboard(firstNameField);
     }
 }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
index b547176c5..3b0fa7d7c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneActivity.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -28,7 +28,6 @@
 import android.view.Gravity;
 import android.view.KeyEvent;
 import android.view.View;
-import android.view.WindowManager;
 import android.view.animation.AccelerateDecelerateInterpolator;
 import android.view.inputmethod.EditorInfo;
 import android.widget.AdapterView;
@@ -40,26 +39,26 @@
 
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
+import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
+import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
+import org.telegram.messenger.AnimationCompat.ViewProxy;
+import org.telegram.messenger.ApplicationLoader;
+import org.telegram.messenger.BuildConfig;
+import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.MessagesStorage;
 import org.telegram.messenger.NotificationCenter;
-import org.telegram.messenger.ApplicationLoader;
-import org.telegram.messenger.BuildVars;
-import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
+import org.telegram.messenger.UserConfig;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.RequestDelegate;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.UserConfig;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.BaseFragment;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.SlideView;
 import org.telegram.ui.Components.TypefaceSpan;
@@ -196,10 +195,11 @@ public boolean onBackPressed() {
     }
 
     @Override
-    public void onOpenAnimationEnd() {
-        super.onOpenAnimationEnd();
+    public void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
+        if (isOpen) {
         views[currentViewNum].onShow();
     }
+    }
 
     public void needShowAlert(final String text) {
         if (text == null || getParentActivity() == null) {
@@ -649,7 +649,7 @@ public void onNextPressed() {
             if (countryState == 1) {
                 needShowAlert(LocaleController.getString("ChooseCountry", R.string.ChooseCountry));
                 return;
-            } else if (countryState == 2 && !BuildVars.DEBUG_VERSION) {
+            } else if (countryState == 2 && !BuildConfig.DEBUG){//!BuildVars.DEBUG_VERSION) {
                 needShowAlert(LocaleController.getString("WrongCountry", R.string.WrongCountry));
                 return;
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java
index 83d896902..904a14670 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangePhoneHelpActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
index 5de214099..a9cb7a232 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -406,8 +406,10 @@ public void onClick(DialogInterface dialog, int which) {
     }
 
     @Override
-    public void onOpenAnimationEnd() {
+    public void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
+        if (isOpen) {
         firstNameField.requestFocus();
         AndroidUtilities.showKeyboard(firstNameField);
     }
 }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 43fcf68d8..d299d828c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -1,13 +1,14 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
 
+import android.Manifest;
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.app.Dialog;
@@ -93,6 +94,7 @@
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
+import org.telegram.ui.ActionBar.BackDrawable;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.Adapters.MentionsAdapter;
@@ -114,6 +116,8 @@
 import org.telegram.ui.Components.ChatAttachView;
 import org.telegram.ui.Components.FrameLayoutFixed;
 import org.telegram.ui.Components.LayoutHelper;
+import org.telegram.ui.Components.NumberTextView;
+import org.telegram.ui.Components.PlayerView;
 import org.telegram.ui.Components.RadioButton;
 import org.telegram.ui.Components.RecordStatusDrawable;
 import org.telegram.ui.Components.RecyclerListView;
@@ -122,6 +126,7 @@
 import org.telegram.ui.Components.SizeNotifierFrameLayout;
 import org.telegram.ui.Components.TimerDrawable;
 import org.telegram.ui.Components.TypingDotsDrawable;
+import org.telegram.ui.Components.URLSpanBotCommand;
 import org.telegram.ui.Components.URLSpanNoUnderline;
 import org.telegram.ui.Components.URLSpanReplacement;
 import org.telegram.ui.Components.WebFrameLayout;
@@ -176,7 +181,7 @@
     private FrameLayout avatarContainer;
     private TextView bottomOverlayText;
     private TextView secretViewStatusTextView;
-    private TextView selectedMessagesCountTextView;
+    private NumberTextView selectedMessagesCountTextView;
     private RecyclerListView stickersListView;
     private StickersAdapter stickersAdapter;
     private FrameLayout stickersPanel;
@@ -194,6 +199,9 @@
     private LinearLayout reportSpamView;
     private TextView addToContactsButton;
     private TextView reportSpamButton;
+    private PlayerView playerView;
+
+    private ObjectAnimatorProxy pagedownButtonAnimation;
 
     private TLRPC.User reportSpamUser;
 
@@ -337,10 +345,12 @@
 
     RecyclerListView.OnItemLongClickListener onItemLongClickListener = new RecyclerListView.OnItemLongClickListener() {
         @Override
-        public void onItemClick(View view, int position) {
+        public boolean onItemClick(View view, int position) {
             if (!actionBar.isActionModeShowed()) {
                 createMenu(view, false);
+                return true;
             }
+            return false;
         }
     };
 
@@ -545,14 +555,17 @@ public void run() {
             }
         }
 
+        URLSpanBotCommand.enabled = false;
         if (userId != 0 && (currentUser.flags & TLRPC.USER_FLAG_BOT) != 0) {
             BotQuery.loadBotInfo(userId, true, classGuid);
+            URLSpanBotCommand.enabled = true;
         } else if (info instanceof TLRPC.TL_chatFull) {
             for (int a = 0; a < info.participants.participants.size(); a++) {
                 TLRPC.TL_chatParticipant participant = info.participants.participants.get(a);
                 TLRPC.User user = MessagesController.getInstance().getUser(participant.user_id);
                 if (user != null && (user.flags & TLRPC.USER_FLAG_BOT) != 0) {
                     BotQuery.loadBotInfo(user.id, true, classGuid);
+                    URLSpanBotCommand.enabled = true;
                 }
             }
         }
@@ -667,22 +680,21 @@ public View createView(Context context) {
 
             ResourceLoader.loadRecources(context);
 
-            //actionBar.setBackButtonImage(R.drawable.ic_ab_back);
-            Drawable back = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_back);
+            actionBar.setBackButtonDrawable(new BackDrawable(false));
             SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
-            back.setColorFilter(themePrefs.getInt("chatHeaderIconsColor", 0xffffffff), PorterDuff.Mode.MULTIPLY);
-            actionBar.setBackButtonDrawable(back);
             actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
                 @Override
             public void onItemClick(final int id) {
                     if (id == -1) {
-                        finishFragment();
-                    } else if (id == -2) {
+                    if (actionBar.isActionModeShowed()) {
                         selectedMessagesIds.clear();
                         selectedMessagesCanCopyIds.clear();
-                    cantDeleteMessagesCount = 0;
+                        cantDeleteMessagesCount = 0;
                         actionBar.hideActionMode();
                         updateVisibleRows();
+                    } else {
+                        finishFragment();
+                    }
                     } else if (id == copy) {
                         String str = "";
                         ArrayList<Integer> ids = new ArrayList<>(selectedMessagesCanCopyIds.keySet());
@@ -758,7 +770,6 @@ public void onClick(DialogInterface dialogInterface, int i) {
                             QuoteForward = false;
                         }
                         Bundle args = new Bundle();
-                        //args.putBoolean("quote", QuoteForward);
                         args.putBoolean("onlySelect", true);
                     args.putInt("dialogsType", 1);
                     DialogsActivity fragment = new DialogsActivity(args);
@@ -863,8 +874,17 @@ public void didPressedButton(int button) {
                                         ArrayList<String> photos = new ArrayList<>();
                                         ArrayList<String> captions = new ArrayList<>();
                                         for (HashMap.Entry<Integer, MediaController.PhotoEntry> entry : selectedPhotos.entrySet()) {
-                                            photos.add(entry.getValue().path);
-                                            captions.add("");
+                                            MediaController.PhotoEntry photoEntry = entry.getValue();
+                                            if (photoEntry.imagePath != null) {
+                                                photos.add(photoEntry.imagePath);
+                                                captions.add(photoEntry.caption != null ? photoEntry.caption.toString() : null);
+                                            } else if (photoEntry.path != null) {
+                                                photos.add(photoEntry.path);
+                                                captions.add(photoEntry.caption != null ? photoEntry.caption.toString() : null);
+                                            }
+                                            photoEntry.imagePath = null;
+                                            photoEntry.thumbPath = null;
+                                            photoEntry.caption = null;
                                         }
                                         SendMessagesHelper.prepareSendingPhotos(photos, null, dialog_id, replyingMessageObject, captions, chatActivityEnterView == null || chatActivityEnterView.asAdmin());
                                         showReplyPanel(false, null, null, null, false, true);
@@ -934,6 +954,7 @@ public View getRevealView() {
                     args.putInt("chat_id", currentChat.id);
                     ProfileActivity fragment = new ProfileActivity(args);
                     fragment.setChatInfo(info);
+                    fragment.setPlayProfileAnimation(true);
                     presentFragment(fragment);
                 } else if (id == add_member) { //Plus
                     openAddMember();
@@ -946,7 +967,7 @@ public View getRevealView() {
         avatarContainer = new FrameLayoutFixed(context);
             avatarContainer.setBackgroundResource(R.drawable.bar_selector);
             avatarContainer.setPadding(AndroidUtilities.dp(8), 0, AndroidUtilities.dp(8), 0);
-        actionBar.addView(avatarContainer, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT, 56, 0, 40, 0));
+        actionBar.addView(avatarContainer, 0, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT, 56, 0, 40, 0));
             avatarContainer.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
@@ -957,12 +978,15 @@ public void onClick(View v) {
                         if (currentEncryptedChat != null) {
                             args.putLong("dialog_id", dialog_id);
                         }
-                        presentFragment(new ProfileActivity(args));
+                        ProfileActivity fragment = new ProfileActivity(args);
+                        fragment.setPlayProfileAnimation(true);
+                        presentFragment(fragment);
                     } else if (currentChat != null) {
                         Bundle args = new Bundle();
                         args.putInt("chat_id", currentChat.id);
                         ProfileActivity fragment = new ProfileActivity(args);
                         fragment.setChatInfo(info);
+                        fragment.setPlayProfileAnimation(true);
                         presentFragment(fragment);
                     }
                 } else {
@@ -1066,7 +1090,7 @@ public void onSearchCollapse() {
                     searchDownItem.setVisibility(View.GONE);
                     highlightMessageId = Integer.MAX_VALUE;
                     updateVisibleRows();
-                    scrollToLastMessage();
+                    scrollToLastMessage(false);
                 }
 
                 @Override
@@ -1146,31 +1170,26 @@ public void onSearchPressed(EditText editText) {
             updateSubtitle();
             updateTitleIcons();
 
-			//attachItem = menu.addItem(chat_menu_attach, R.drawable.ic_ab_other).setOverrideMenuClick(true).setAllowCloseAnimation(false);
-			attachItem = menu.addItem(chat_menu_attach, dots).setOverrideMenuClick(true).setAllowCloseAnimation(false);
-			attachItem.setVisibility(View.GONE);
+	    //attachItem = menu.addItem(chat_menu_attach, R.drawable.ic_ab_other).setOverrideMenuClick(true).setAllowCloseAnimation(false);
+	    attachItem = menu.addItem(chat_menu_attach, dots).setOverrideMenuClick(true).setAllowCloseAnimation(false);
+	    attachItem.setVisibility(View.GONE);
         
-			//menuItem = menu.addItem(chat_menu_attach, R.drawable.ic_ab_attach).setAllowCloseAnimation(false);
-			Drawable clip = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_attach_white);
+	    //menuItem = menu.addItem(chat_menu_attach, R.drawable.ic_ab_attach).setAllowCloseAnimation(false);
+	    Drawable clip = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_attach_white);
             clip.setColorFilter(themePrefs.getInt("chatEditTextIconsColor", 0xffadadad), PorterDuff.Mode.MULTIPLY);
             menuItem = menu.addItem(chat_menu_attach, clip).setAllowCloseAnimation(false);
-			menuItem.setBackgroundDrawable(null);
+	    menuItem.setBackgroundDrawable(null);
 
             actionModeViews.clear();
 
             final ActionBarMenu actionMode = actionBar.createActionMode();
-            actionModeViews.add(actionMode.addItem(-2, R.drawable.ic_ab_back_grey, R.drawable.bar_selector_mode, null, AndroidUtilities.dp(54)));
+            //actionModeViews.add(actionMode.addItem(-2, R.drawable.ic_ab_back_grey, R.drawable.bar_selector_mode, null, AndroidUtilities.dp(54)));
 
-            selectedMessagesCountTextView = new TextView(actionMode.getContext());
+            selectedMessagesCountTextView = new NumberTextView(actionMode.getContext());
             selectedMessagesCountTextView.setTextSize(18);
             selectedMessagesCountTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
             selectedMessagesCountTextView.setTextColor(0xff737373);
-            selectedMessagesCountTextView.setSingleLine(true);
-            selectedMessagesCountTextView.setLines(1);
-            selectedMessagesCountTextView.setEllipsize(TextUtils.TruncateAt.END);
-            selectedMessagesCountTextView.setPadding(AndroidUtilities.dp(11), 0, 0, AndroidUtilities.dp(2));
-            selectedMessagesCountTextView.setGravity(Gravity.CENTER_VERTICAL);
-			actionMode.addView(selectedMessagesCountTextView, LayoutHelper.createLinear(0, LayoutHelper.MATCH_PARENT, 1.0f));
+        actionMode.addView(selectedMessagesCountTextView, LayoutHelper.createLinear(0, LayoutHelper.MATCH_PARENT, 1.0f, 65, 0, 0, 0));
             selectedMessagesCountTextView.setOnTouchListener(new View.OnTouchListener() {
                 @Override
                 public boolean onTouch(View v, MotionEvent event) {
@@ -1211,6 +1230,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                 int heightSize = MeasureSpec.getSize(heightMeasureSpec);
 
                 setMeasuredDimension(widthSize, heightSize);
+                heightSize -= getPaddingTop();
 
                 int keyboardSize = getKeyboardHeight();
 
@@ -1286,7 +1306,7 @@ protected void onLayout(boolean changed, int l, int t, int r, int b) {
 
                     switch (verticalGravity) {
                         case Gravity.TOP:
-                            childTop = lp.topMargin;
+                            childTop = lp.topMargin + getPaddingTop();
                             break;
                         case Gravity.CENTER_VERTICAL:
                             childTop = ((b - paddingBottom) - t - height) / 2 + lp.topMargin - lp.bottomMargin;
@@ -1317,7 +1337,6 @@ protected void onLayout(boolean changed, int l, int t, int r, int b) {
         SizeNotifierFrameLayout contentView = (SizeNotifierFrameLayout) fragmentView;
         //contentView.setBackgroundImage(ApplicationLoader.getCachedWallpaper());
         updateBackground(contentView);
-        //.e("mainColor 0", "" + ApplicationLoader.getCachedWallpaper());
         emptyViewContainer = new FrameLayout(context);
             emptyViewContainer.setVisibility(View.INVISIBLE);
         contentView.addView(emptyViewContainer, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER));
@@ -1466,22 +1485,18 @@ public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                 int visibleItemCount = firstVisibleItem == RecyclerView.NO_POSITION ? 0 : Math.abs(chatLayoutManager.findLastVisibleItemPosition() - firstVisibleItem) + 1;
                 if (visibleItemCount > 0) {
                     int totalItemCount = chatAdapter.getItemCount();
-                    if (firstVisibleItem <= 10) {
-                        if (!endReached && !loading) {
+                    if (firstVisibleItem <= 25 && !endReached && !loading) {
                             if (messagesByDays.size() != 0) {
-                                MessagesController.getInstance().loadMessages(dialog_id, 20, maxMessageId, !cacheEndReached, minDate, classGuid, 0, 0, channelMessagesImportant);
+                            MessagesController.getInstance().loadMessages(dialog_id, 50, maxMessageId, !cacheEndReached, minDate, classGuid, 0, 0, channelMessagesImportant);
                             } else {
-                                MessagesController.getInstance().loadMessages(dialog_id, 20, 0, !cacheEndReached, minDate, classGuid, 0, 0, channelMessagesImportant);
+                            MessagesController.getInstance().loadMessages(dialog_id, 50, 0, !cacheEndReached, minDate, classGuid, 0, 0, channelMessagesImportant);
                             }
                             loading = true;
                         }
-                    }
-                    if (firstVisibleItem + visibleItemCount >= totalItemCount - 6) {
-                        if (!forward_end_reached && !loadingForward) {
-                            MessagesController.getInstance().loadMessages(dialog_id, 20, minMessageId, !cacheEndReached, maxDate, classGuid, 1, 0, channelMessagesImportant);
+                    if (!forward_end_reached && !loadingForward && firstVisibleItem + visibleItemCount >= totalItemCount - 10) {
+                        MessagesController.getInstance().loadMessages(dialog_id, 50, minMessageId, !cacheEndReached, maxDate, classGuid, 1, 0, channelMessagesImportant);
                             loadingForward = true;
                         }
-                    }
                     if (firstVisibleItem + visibleItemCount == totalItemCount && forward_end_reached) {
                         showPagedownButton(false, true);
                     }
@@ -1531,6 +1546,9 @@ public void run() {
                                 AndroidUtilities.cancelRunOnUIThread(openSecretPhotoRunnable);
                                 openSecretPhotoRunnable = null;
                             }
+                            chatListView.setOnItemClickListener(onItemClickListener);
+                            chatListView.setOnItemLongClickListener(onItemLongClickListener);
+                            chatListView.setLongClickable(true);
                         }
                     }
                 }
@@ -1629,7 +1647,7 @@ public void run() {
         reportSpamButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                if (reportSpamUser == null) {
+                if (reportSpamUser == null || getParentActivity() == null) {
                     return;
                 }
                 AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
@@ -1642,6 +1660,9 @@ public void onClick(View v) {
                 builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface dialogInterface, int i) {
+                        if (reportSpamUser == null) {
+                            return;
+                        }
                         TLRPC.TL_messages_reportSpam req = new TLRPC.TL_messages_reportSpam();
                         req.peer = new TLRPC.TL_inputPeerUser();
                         req.peer.user_id = reportSpamUser.id;
@@ -1828,12 +1849,27 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 });
             }
 
+        pagedownButton = new ImageView(context);
+        pagedownButton.setVisibility(View.INVISIBLE);
+        pagedownButton.setImageResource(R.drawable.pagedown);
+        contentView.addView(pagedownButton, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.RIGHT | Gravity.BOTTOM, 0, 0, 6, 4));
+        pagedownButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                if (returnToMessageId > 0) {
+                    scrollToMessageId(returnToMessageId, 0, true);
+                } else {
+                    scrollToLastMessage(true);
+                }
+            }
+        });
+
             chatActivityEnterView = new ChatActivityEnterView(getParentActivity(), contentView, this, true);
             chatActivityEnterView.setDialogId(dialog_id);
             chatActivityEnterView.addToAttachLayout(menuItem);
             chatActivityEnterView.setId(id_chat_compose_panel);
         chatActivityEnterView.setBotsCount(botsCount, hasBotsCommands);
-        contentView.addView(chatActivityEnterView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.BOTTOM));
+        contentView.addView(chatActivityEnterView, contentView.getChildCount() - 1, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.BOTTOM));
             chatActivityEnterView.setDelegate(new ChatActivityEnterView.ChatActivityEnterViewDelegate() {
                 @Override
                 public void onMessageSend(String message) {
@@ -2148,21 +2184,6 @@ public void onClick(DialogInterface dialogInterface, int i) {
             bottomOverlayChatText.setTextColor(0xff3e6fa1);
         bottomOverlayChat.addView(bottomOverlayChatText, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER));
 
-        pagedownButton = new ImageView(context);
-            pagedownButton.setVisibility(View.INVISIBLE);
-            pagedownButton.setImageResource(R.drawable.pagedown);
-        contentView.addView(pagedownButton, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.RIGHT | Gravity.BOTTOM, 0, 0, 6, 4));
-            pagedownButton.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View view) {
-                    if (returnToMessageId > 0) {
-                        scrollToMessageId(returnToMessageId, 0, true);
-                    } else {
-                    scrollToLastMessage();
-                }
-                }
-            });
-
             if (loading && messages.isEmpty()) {
                 progressView.setVisibility(View.VISIBLE);
                 chatListView.setEmptyView(null);
@@ -2173,6 +2194,10 @@ public void onClick(View view) {
 
         chatActivityEnterView.setButtons(botButtons);
 
+        if (!AndroidUtilities.isTablet() || AndroidUtilities.isSmallTablet()) {
+            contentView.addView(playerView = new PlayerView(context, this), LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 39, Gravity.TOP | Gravity.LEFT, 0, -36, 0, 0));
+        }
+
             updateContactStatus();
             updateBottomOverlay();
                 updateSecretStatus();
@@ -2311,6 +2336,10 @@ private void processSelectedAttach(int which) {
                 FileLog.e("tmessages", e);
             }
         } else if (which == attach_gallery) {
+            if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
+                getParentActivity().requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, 4);
+                return;
+            }
             PhotoAlbumPickerActivity fragment = new PhotoAlbumPickerActivity(false, ChatActivity.this);
             fragment.setDelegate(new PhotoAlbumPickerActivity.PhotoAlbumPickerActivityDelegate() {
                 @Override
@@ -2351,41 +2380,7 @@ public boolean didSelectVideo(String path) {
                 }
             });
             presentFragment(fragment);
-        } /*else if (which == attach_sticker) {
-            PhotoAlbumPickerActivity fragment = new PhotoAlbumPickerActivity(false, ChatActivity.this);
-            fragment.imageFilter = ".webp";
-            fragment.setDelegate(new PhotoAlbumPickerActivity.PhotoAlbumPickerActivityDelegate() {
-                @Override
-                public void didSelectPhotos(ArrayList<String> photos, ArrayList<String> captions, ArrayList<MediaController.SearchImage> webPhotos) {
-                    SendMessagesHelper.prepareSendingPhotos(photos, null, dialog_id, replyingMessageObject, captions);
-                    SendMessagesHelper.prepareSendingPhotosSearch(webPhotos, dialog_id, replyingMessageObject);
-                    showReplyPanel(false, null, null, null, false, true);
-                }
-
-                @Override
-                public void startPhotoSelectActivity() {
-                    try {
-                        Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);
-                        startActivityForResult(photoPickerIntent, 40);
-                    } catch (Exception e) {
-                        FileLog.e("tmessages", e);
-                    }
-                }
-
-                @Override
-                public boolean didSelectVideo(String path) {
-                    if (Build.VERSION.SDK_INT >= 16) {
-                        return !openVideoEditor(path, true, true);
-                    } else {
-                        SendMessagesHelper.prepareSendingVideo(path, 0, 0, 0, 0, null, dialog_id, replyingMessageObject, chatActivityEnterView == null || chatActivityEnterView.asAdmin());
-                        showReplyPanel(false, null, null, null, false, true);
-                        return true;
-                    }
-                }
-            });
-            presentFragment(fragment);
-            //
-        }*/ else if (which == attach_video) {
+        } else if (which == attach_video) {
             try {
                 Intent takeVideoIntent = new Intent(MediaStore.ACTION_VIDEO_CAPTURE);
                 File video = AndroidUtilities.generateVideoPath();
@@ -2418,6 +2413,10 @@ public void didSelectLocation(TLRPC.MessageMedia location) {
             });
             presentFragment(fragment);
         } else if (which == attach_document) {
+            if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
+                getParentActivity().requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, 4);
+                return;
+            }
             DocumentSelectActivity fragment = new DocumentSelectActivity();
             fragment.setDelegate(new DocumentSelectActivity.DocumentSelectActivityDelegate() {
                 @Override
@@ -2440,6 +2439,10 @@ public void startDocumentSelectActivity() {
             });
             presentFragment(fragment);
         } else if (which == attach_audio) {
+            if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
+                getParentActivity().requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, 4);
+                return;
+            }
             AudioSelectActivity fragment = new AudioSelectActivity();
             fragment.setDelegate(new AudioSelectActivity.AudioSelectActivityDelegate() {
                 @Override
@@ -2450,6 +2453,12 @@ public void didSelectAudio(ArrayList<MessageObject> audios) {
             });
             presentFragment(fragment);
         } else if (which == attach_contact) {
+            if (Build.VERSION.SDK_INT >= 23) {
+                if (getParentActivity().checkSelfPermission(Manifest.permission.READ_CONTACTS) != PackageManager.PERMISSION_GRANTED) {
+                    getParentActivity().requestPermissions(new String[]{Manifest.permission.READ_CONTACTS}, 5);
+                    return;
+                }
+            }
             try {
                 Intent intent = new Intent(Intent.ACTION_PICK, ContactsContract.Contacts.CONTENT_URI);
                 intent.setType(ContactsContract.CommonDataKinds.Phone.CONTENT_TYPE);
@@ -2460,6 +2469,11 @@ public void didSelectAudio(ArrayList<MessageObject> audios) {
         }
     }
 
+    @Override
+    public boolean dismissDialogOnPause(Dialog dialog) {
+        return !(dialog == chatAttachViewSheet && PhotoViewer.getInstance().isVisible()) && super.dismissDialogOnPause(dialog);
+    }
+
     private void searchLinks(CharSequence charSequence, boolean force) {
         if (currentEncryptedChat != null) {
             return;
@@ -2576,10 +2590,10 @@ public void showReplyPanel(boolean show, MessageObject messageObject, ArrayList<
                     }
                     name = chat.title;
                 }
+
                 forwardingMessages = null;
                 replyingMessageObject = messageObject;
                 chatActivityEnterView.setReplyingMessageObject(messageObject);
-
                 if (foundWebPage != null) {
                     return;
                 }
@@ -2839,9 +2853,15 @@ private void clearChatData() {
         chatAdapter.notifyDataSetChanged();
     }
 
-    private void scrollToLastMessage() {
+    private void scrollToLastMessage(boolean pagedown) {
         if (forward_end_reached && first_unread_id == 0 && startLoadFromMessageId == 0) {
-            chatLayoutManager.scrollToPositionWithOffset(messages.size() - 1, -100000 - chatListView.getPaddingTop());
+            if (pagedown && chatLayoutManager.findLastCompletelyVisibleItemPosition() == chatAdapter.getItemCount() - 1) {
+                showPagedownButton(false, true);
+                highlightMessageId = Integer.MAX_VALUE;
+                updateVisibleRows();
+            } else {
+                chatLayoutManager.scrollToPositionWithOffset(messages.size() - 1, -100000 - chatListView.getPaddingTop());
+            }
         } else {
             clearChatData();
             MessagesController.getInstance().loadMessages(dialog_id, 30, 0, !cacheEndReached, 0, classGuid, 0, 0, channelMessagesImportant);
@@ -2918,7 +2938,27 @@ private void scrollToMessageId(int id, int fromMessageId, boolean select) {
                     chatLayoutManager.scrollToPositionWithOffset(messages.size() - messages.indexOf(object), -chatListView.getPaddingTop() - AndroidUtilities.dp(7) + yOffset);
                 }
                 updateVisibleRows();
-                showPagedownButton(true, true);
+                boolean found = false;
+                int count = chatListView.getChildCount();
+                for (int a = 0; a < count; a++) {
+                    View view = chatListView.getChildAt(a);
+                    if (view instanceof ChatBaseCell) {
+                        ChatBaseCell cell = (ChatBaseCell) view;
+                        if (cell.getMessageObject() != null && cell.getMessageObject().getId() == object.getId()) {
+                            found = true;
+                            break;
+                        }
+                    } else if (view instanceof ChatActionCell) {
+                        ChatActionCell cell = (ChatActionCell) view;
+                        if (cell.getMessageObject() != null && cell.getMessageObject().getId() == object.getId()) {
+                            found = true;
+                            break;
+                        }
+                    }
+                }
+                if (!found) {
+                    showPagedownButton(true, true);
+                }
             } else {
                 query = true;
             }
@@ -2969,26 +3009,40 @@ private void showPagedownButton(boolean show, boolean animated) {
             return;
         }
         if (show) {
-            if (pagedownButton.getVisibility() == View.INVISIBLE) {
+            if (pagedownButton.getTag() == null) {
+                if (pagedownButtonAnimation != null) {
+                    pagedownButtonAnimation.cancel();
+                    pagedownButtonAnimation = null;
+                }
                 if (animated) {
+                    if (ViewProxy.getTranslationY(pagedownButton) == 0) {
+                        ViewProxy.setTranslationY(pagedownButton, AndroidUtilities.dp(100));
+                    }
                     pagedownButton.setVisibility(View.VISIBLE);
-                    ViewProxy.setAlpha(pagedownButton, 0);
-                    ObjectAnimatorProxy.ofFloatProxy(pagedownButton, "alpha", 1.0f).setDuration(200).start();
+                    pagedownButton.setTag(1);
+                    pagedownButtonAnimation = ObjectAnimatorProxy.ofFloatProxy(pagedownButton, "translationY", 0).setDuration(200).start();
                 } else {
                     pagedownButton.setVisibility(View.VISIBLE);
                 }
             }
         } else {
             returnToMessageId = 0;
-            if (pagedownButton.getVisibility() == View.VISIBLE) {
+            if (pagedownButton.getTag() != null) {
+                pagedownButton.setTag(null);
+                if (pagedownButtonAnimation != null) {
+                    pagedownButtonAnimation.cancel();
+                    pagedownButtonAnimation = null;
+                }
                 if (animated) {
-                    ObjectAnimatorProxy.ofFloatProxy(pagedownButton, "alpha", 0.0f).setDuration(200).addListener(new AnimatorListenerAdapterProxy() {
+                    pagedownButtonAnimation = ObjectAnimatorProxy.ofFloatProxy(pagedownButton, "translationY", AndroidUtilities.dp(100)).setDuration(200).addListener(new AnimatorListenerAdapterProxy() {
                         @Override
                         public void onAnimationEnd(Object animation) {
+                            pagedownButton.clearAnimation();
                             pagedownButton.setVisibility(View.INVISIBLE);
                         }
                     }).start();
                 } else {
+                    pagedownButton.clearAnimation();
                     pagedownButton.setVisibility(View.INVISIBLE);
                 }
             }
@@ -3065,10 +3119,10 @@ private void checkActionBarMenu() {
     }
 
     private int updateOnlineCount() {
+        onlineCount = 0;
         if (!(info instanceof TLRPC.TL_chatFull)) {
             return 0;
         }
-        onlineCount = 0;
         int currentTime = ConnectionsManager.getInstance().getCurrentTime();
         for (TLRPC.TL_chatParticipant participant : info.participants.participants) {
             TLRPC.User user = MessagesController.getInstance().getUser(participant.user_id);
@@ -3230,7 +3284,7 @@ private void addToSelectedMessages(MessageObject messageObject) {
         if (actionBar.isActionModeShowed()) {
             if (selectedMessagesIds.isEmpty()) {
                 actionBar.hideActionMode();
-            }
+            } else {
             actionBar.createActionMode().getItem(copy).setVisibility(selectedMessagesCanCopyIds.size() != 0 ? View.VISIBLE : View.GONE);
             actionBar.createActionMode().getItem(delete).setVisibility(cantDeleteMessagesCount == 0 ? View.VISIBLE : View.GONE);
             if (actionBar.createActionMode().getItem(reply) != null) {
@@ -3242,6 +3296,7 @@ private void addToSelectedMessages(MessageObject messageObject) {
             }
         }
     }
+    }
 
     private void processRowSelect(View view) {
         MessageObject message = null;
@@ -3266,7 +3321,7 @@ private void updateActionModeTitle() {
             return;
         }
         if (!selectedMessagesIds.isEmpty()) {
-            selectedMessagesCountTextView.setText(String.format("%d", selectedMessagesIds.size()));
+            selectedMessagesCountTextView.setNumber(selectedMessagesIds.size(), true);
         }
     }
 
@@ -3419,7 +3474,6 @@ private void updateSubtitle() {
                     lastStatus = newStatus;
                     onlineTextView.setText(newStatus);
                 }
-
                 if(newStatus.equals(LocaleController.getString("Online", R.string.Online))){
                     onlineTextView.setTextColor(themePrefs.getInt("chatOnlineColor", themePrefs.getInt("chatStatusColor", lightColor)));
                 }
@@ -3738,30 +3792,7 @@ public void sendButtonPressed(int index) {
                         FileLog.e("tmessages", e);
                     }
                 }
-            } /*else if (requestCode == 32) {
-                if (data == null || data.getData() == null) {
-                    showAttachmentError();
-                    return;
-                }
-                Uri uri = data.getData();
-                String path = AndroidUtilities.getPath(uri);
-                if (path != null) {
-                    TLRPC.TL_audio audio = new TLRPC.TL_audio();
-                    audio.dc_id = Integer.MIN_VALUE;
-                    audio.id = Integer.MIN_VALUE;
-                    audio.user_id = UserConfig.getClientUserId();
-                    audio.mime_type = "audio/mp3";
-                    SendMessagesHelper.getInstance().sendMessage(audio, path, dialog_id, replyingMessageObject, chatActivityEnterView == null || chatActivityEnterView.asAdmin());
-                    showReplyPanel(false, null, null, null, false, true);
-                }
-            } else if (requestCode == 40) { //attach_sticker
-                if (data == null || data.getData() == null) {
-                    showAttachmentError();
-                    return;
-                }
-                SendMessagesHelper.prepareSendingPhoto(null, data.getData(), dialog_id, replyingMessageObject, null, chatActivityEnterView == null || chatActivityEnterView.asAdmin());
-                showReplyPanel(false, null, null, null, false, true);
-            }*/
+            } 
         }
     }
 
@@ -3862,13 +3893,11 @@ public void didReceivedNotification(int id, final Object... args) {
                     Collections.reverse(messArr);
                 }
                 ReplyMessageQuery.loadReplyMessagesForMessages(messArr, dialog_id);
-
                 for (int a = 0; a < messArr.size(); a++) {
                     MessageObject obj = messArr.get(a);
                     if (messagesDict.containsKey(obj.getId())) {
                         continue;
                     }
-
                     if (obj.getId() > 0) {
                         maxMessageId = Math.min(obj.getId(), maxMessageId);
                         minMessageId = Math.max(obj.getId(), minMessageId);
@@ -3998,11 +4027,22 @@ public void didReceivedNotification(int id, final Object... args) {
                         newRowsCount--;
                     }
                     if (newRowsCount != 0) {
+                        int firstVisPos = chatLayoutManager.findLastVisibleItemPosition();
+                        int top = 0;
+                        if (firstVisPos != chatLayoutManager.getItemCount() - 1) {
+                            firstVisPos = RecyclerView.NO_POSITION;
+                        } else {
+                            View firstVisView = chatListView.getChildAt(chatListView.getChildCount() - 1);
+                            top = ((firstVisView == null) ? 0 : firstVisView.getTop()) - chatListView.getPaddingTop();
+                        }
                         chatAdapter.notifyItemRangeInserted(chatAdapter.getItemCount() - 1, newRowsCount);
+                        if (firstVisPos != RecyclerView.NO_POSITION) {
+                            chatLayoutManager.scrollToPositionWithOffset(firstVisPos, top);
+                        }
                     }
                     loadingForward = false;
                 } else {
-                    if (messArr.size() < count) {
+                    if (messArr.size() < count && load_type != 3) {
                         if (isCache) {
                             if (currentEncryptedChat != null || isBroadcast) {
                                 endReached = true;
@@ -4053,7 +4093,7 @@ public void didReceivedNotification(int id, final Object... args) {
                             View firstVisView = chatListView.getChildAt(chatListView.getChildCount() - 1);
                             int top = ((firstVisView == null) ? 0 : firstVisView.getTop()) - chatListView.getPaddingTop();
                                 if (newRowsCount - (endReached ? 1 : 0) > 0) {
-                                    chatAdapter.notifyItemRangeInserted((chatAdapter.isBot ? 2 : 1), newRowsCount - (endReached ? 1 : 0));
+                                    chatAdapter.notifyItemRangeInserted((chatAdapter.isBot ? 2 : 1) + (endReached ? 0 : 1), newRowsCount - (endReached ? 1 : 0));
                                 }
                                 chatLayoutManager.scrollToPositionWithOffset(firstVisPos + newRowsCount - (endReached ? 1 : 0), top);
                             } else if (endReached) {
@@ -4100,8 +4140,20 @@ public void run() {
                     updateBottomOverlay();
                 }
 
-                if (progressView != null) {
-                    progressView.setVisibility(View.INVISIBLE);
+                if (newRowsCount == 0 && currentEncryptedChat != null && !endReached) {
+                    first = true;
+                    chatListView.setEmptyView(null);
+                    emptyViewContainer.setVisibility(View.INVISIBLE);
+                    if (messagesByDays.size() != 0) {
+                        MessagesController.getInstance().loadMessages(dialog_id, 50, maxMessageId, !cacheEndReached, minDate, classGuid, 0, 0, channelMessagesImportant);
+                    } else {
+                        MessagesController.getInstance().loadMessages(dialog_id, 50, 0, !cacheEndReached, minDate, classGuid, 0, 0, channelMessagesImportant);
+                    }
+                    loading = true;
+                } else {
+                    if (progressView != null) {
+                        progressView.setVisibility(View.INVISIBLE);
+                    }
                 }
             }
         } else if (id == NotificationCenter.emojiDidLoaded) {
@@ -4195,7 +4247,7 @@ public void run() {
                             timerDrawable.setTime(action.ttl_seconds);
                         }
                         if (obj.isOut() && obj.isSending()) {
-                            scrollToLastMessage();
+                            scrollToLastMessage(false);
                             return;
                         }
                         if (messagesDict.containsKey(obj.getId())) {
@@ -4505,6 +4557,23 @@ public void run() {
             MessageObject obj = messagesDict.get(msgId);
             if (obj != null) {
                 Integer newMsgId = (Integer) args[1];
+                if (!newMsgId.equals(msgId) && messagesDict.containsKey(newMsgId)) {
+                MessageObject removed = messagesDict.remove(msgId);
+                    if (removed != null) {
+                    int index = messages.indexOf(removed);
+                    messages.remove(index);
+                    ArrayList<MessageObject> dayArr = messagesByDays.get(removed.dateKey);
+                    dayArr.remove(obj);
+                    if (dayArr.isEmpty()) {
+                        messagesByDays.remove(obj.dateKey);
+                        if (index >= 0 && index < messages.size()) {
+                            messages.remove(index);
+                        }
+                    }
+                    chatAdapter.notifyDataSetChanged();
+                }
+                    return;
+                }
                 TLRPC.Message newMsgObj = (TLRPC.Message) args[2];
                 boolean mediaUpdated = false;
                 try {
@@ -4516,27 +4585,15 @@ public void run() {
                     obj.messageOwner.media = newMsgObj.media;
                     obj.generateThumbs(true);
                 }
-                int oldCount = messagesDict.size();
-                MessageObject removed = messagesDict.remove(msgId);
+                messagesDict.remove(msgId);
                 messagesDict.put(newMsgId, obj);
                 obj.messageOwner.id = newMsgId;
                 obj.messageOwner.send_state = MessageObject.MESSAGE_SEND_STATE_SENT;
                 ArrayList<MessageObject> messArr = new ArrayList<>();
                 messArr.add(obj);
                 ReplyMessageQuery.loadReplyMessagesForMessages(messArr, dialog_id);
-                updateVisibleRows();
-                if (oldCount != messagesDict.size()) {
-                    int index = messages.indexOf(removed);
-                    messages.remove(index);
-                    ArrayList<MessageObject> dayArr = messagesByDays.get(removed.dateKey);
-                    dayArr.remove(obj);
-                    if (dayArr.isEmpty()) {
-                        messagesByDays.remove(obj.dateKey);
-                        if (index >= 0 && index < messages.size()) {
-                            messages.remove(index);
-                        }
-                    }
-                    chatAdapter.notifyDataSetChanged();
+                if (chatAdapter != null) {
+                    chatAdapter.updateRowWithMessageObject(obj);
                 }
                 if (mediaUpdated && chatLayoutManager.findLastVisibleItemPosition() >= messages.size() - 1) {
                     moveScrollToLastMessage();
@@ -4548,7 +4605,9 @@ public void run() {
             MessageObject obj = messagesDict.get(msgId);
             if (obj != null) {
                 obj.messageOwner.send_state = MessageObject.MESSAGE_SEND_STATE_SENT;
-                updateVisibleRows();
+                if (chatAdapter != null) {
+                    chatAdapter.updateRowWithMessageObject(obj);
+                }
             }
         } else if (id == NotificationCenter.messageSendError) {
             Integer msgId = (Integer) args[0];
@@ -4573,14 +4632,19 @@ public void run() {
                     hasBotsCommands = false;
                     botInfo.clear();
                     botsCount = 0;
+                    URLSpanBotCommand.enabled = false;
                     for (int a = 0; a < info.participants.participants.size(); a++) {
                         TLRPC.TL_chatParticipant participant = info.participants.participants.get(a);
                         TLRPC.User user = MessagesController.getInstance().getUser(participant.user_id);
                         if (user != null && (user.flags & TLRPC.USER_FLAG_BOT) != 0) {
+                            URLSpanBotCommand.enabled = true;
                             botsCount++;
                             BotQuery.loadBotInfo(user.id, true, classGuid);
                         }
                     }
+                    if (chatListView != null) {
+                        chatListView.invalidateViews();
+                    }
                 }
                 if (chatActivityEnterView != null) {
                     chatActivityEnterView.setBotsCount(botsCount, hasBotsCommands);
@@ -4637,22 +4701,19 @@ public void run() {
                 updateVisibleRows();
             }
         } else if (id == NotificationCenter.audioDidReset || id == NotificationCenter.audioPlayStateChanged) {
-            Integer mid = (Integer) args[0];
             if (chatListView != null) {
                 int count = chatListView.getChildCount();
                 for (int a = 0; a < count; a++) {
                     View view = chatListView.getChildAt(a);
                     if (view instanceof ChatAudioCell) {
                         ChatAudioCell cell = (ChatAudioCell) view;
-                        if (cell.getMessageObject() != null && cell.getMessageObject().getId() == mid) {
+                        if (cell.getMessageObject() != null) {
                             cell.updateButtonState(false);
-                            break;
                         }
                     } else if (view instanceof ChatMusicCell) {
                         ChatMusicCell cell = (ChatMusicCell) view;
-                        if (cell.getMessageObject() != null && cell.getMessageObject().getId() == mid) {
+                        if (cell.getMessageObject() != null) {
                             cell.updateButtonState(false);
-                            break;
                         }
                     }
                 }
@@ -4788,15 +4849,13 @@ public void run() {
                     View view = chatListView.getChildAt(a);
                     if (view instanceof ChatAudioCell) {
                         ChatAudioCell cell = (ChatAudioCell) view;
-                        if (cell.getMessageObject() != null && cell.getMessageObject().getId() == mid) {
+                        if (cell.getMessageObject() != null) {
                             cell.updateButtonState(false);
-                            break;
                         }
                     } else if (view instanceof ChatMusicCell) {
                         ChatMusicCell cell = (ChatMusicCell) view;
-                        if (cell.getMessageObject() != null && cell.getMessageObject().getId() == mid) {
+                        if (cell.getMessageObject() != null) {
                             cell.updateButtonState(false);
-                            break;
                         }
                     }
                 }
@@ -4832,7 +4891,7 @@ public void run() {
                         }
                     }
                 }
-                if (changed) {
+                if (changed && chatLayoutManager != null) {
                     if (mediaUpdated && chatLayoutManager.findLastVisibleItemPosition() >= messages.size() - (chatAdapter.isBot ? 2 : 1)) {
                         moveScrollToLastMessage();
                     }
@@ -4986,13 +5045,16 @@ private void updateSearchButtons(int mask) {
     }
 
     @Override
-    protected void onOpenAnimationStart() {
+    public void onTransitionAnimationStart(boolean isOpen, boolean backward) {
+        if (isOpen) {
         NotificationCenter.getInstance().setAnimationInProgress(true);
         openAnimationEnded = false;
     }
+    }
 
     @Override
-    protected void onOpenAnimationEnd() {
+    public void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
+        if (isOpen) {
         NotificationCenter.getInstance().setAnimationInProgress(false);
         openAnimationEnded = true;
         int count = chatListView.getChildCount();
@@ -5008,6 +5070,7 @@ protected void onOpenAnimationEnd() {
             MessagesController.getInstance().loadFullUser(MessagesController.getInstance().getUser(currentUser.id), classGuid);
         }
     }
+    }
 
     @Override
     protected void onDialogDismiss(Dialog dialog) {
@@ -5237,6 +5300,18 @@ public void onResume() {
         if (lastMessageText != null) {
             preferences.edit().remove("dialog_" + dialog_id).commit();
             chatActivityEnterView.setFieldText(lastMessageText);
+                if (getArguments().getBoolean("hasUrl", false)) {
+                    chatActivityEnterView.setSelection(lastMessageText.indexOf('\n') + 1);
+                    AndroidUtilities.runOnUIThread(new Runnable() {
+                        @Override
+                        public void run() {
+                            if (chatActivityEnterView != null) {
+                                chatActivityEnterView.setFieldFocused(true);
+                                chatActivityEnterView.openKeyboard();
+                            }
+                        }
+                    }, 700);
+                }
         }
         } else {
             preferences.edit().remove("dialog_" + dialog_id).commit();
@@ -5434,40 +5509,38 @@ public boolean onPreDraw() {
                     } else {
                         selectedMessagesCountTextView.setTextSize(20);
                     }
+
+                    int padding = (ActionBar.getCurrentActionBarHeight() - AndroidUtilities.dp(48)) / 2;
+                    avatarContainer.setPadding(avatarContainer.getPaddingLeft(), padding, avatarContainer.getPaddingRight(), padding);
+                    FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) avatarContainer.getLayoutParams();
+                    layoutParams.topMargin = (Build.VERSION.SDK_INT >= 21 ? AndroidUtilities.statusBarHeight : 0);
+                    avatarContainer.setLayoutParams(layoutParams);
                     if (AndroidUtilities.isTablet()) {
                         SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
                         int color = themePrefs.getInt("chatHeaderIconsColor", 0xffffffff);
                         if (AndroidUtilities.isSmallTablet() && ApplicationLoader.applicationContext.getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT) {
-                            //actionBar.setBackButtonImage(R.drawable.ic_ab_back);
-                            Drawable back = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_back);
-                            if(back != null) {
-                                back.setColorFilter(color, PorterDuff.Mode.MULTIPLY);
-                                actionBar.setBackButtonDrawable(back);
+                            actionBar.setBackButtonDrawable(new BackDrawable(false));
+
+                            /*Drawable back = context.getResources().getDrawable(R.drawable.ic_ab_back);
+                            back.setColorFilter(color, PorterDuff.Mode.MULTIPLY);
+                            actionBar.setBackButtonDrawable(back);*/
+
+                            if (playerView != null && playerView.getParent() == null) {
+                                ((ViewGroup) fragmentView).addView(playerView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 39, Gravity.TOP | Gravity.LEFT, 0, -36, 0, 0));
                             }
                         } else {
-                            //actionBar.setBackButtonImage(R.drawable.ic_close_white);
-                            Drawable close = getParentActivity().getResources().getDrawable(R.drawable.ic_close_white);
-                            if(close != null) {
-                                close.setColorFilter(color, PorterDuff.Mode.MULTIPLY);
-                                actionBar.setBackButtonDrawable(close);
+                            actionBar.setBackButtonDrawable(new BackDrawable(true));
+
+                            /*Drawable close = context.getResources().getDrawable(R.drawable.ic_ab_back);
+                            close.setColorFilter(color, PorterDuff.Mode.MULTIPLY);
+                            actionBar.setBackButtonDrawable(close);*/
+
+                            if (playerView != null && playerView.getParent() != null) {
+                                fragmentView.setPadding(0, 0, 0, 0);
+                                ((ViewGroup) fragmentView).removeView(playerView);
                             }
                         }
-                    }
-                    int padding = (ActionBar.getCurrentActionBarHeight() - AndroidUtilities.dp(48)) / 2;
-                    avatarContainer.setPadding(avatarContainer.getPaddingLeft(), padding, avatarContainer.getPaddingRight(), padding);
-                    FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) avatarContainer.getLayoutParams();
-                    layoutParams.topMargin = (Build.VERSION.SDK_INT >= 21 ? AndroidUtilities.statusBarHeight : 0);
-                    avatarContainer.setLayoutParams(layoutParams);
-                    if (!resume) {
-                        int firstVisPos = chatLayoutManager.findLastVisibleItemPosition();
-                        if (firstVisPos == RecyclerView.NO_POSITION) {
-                            firstVisPos = 0;
-                        }
-                        View firstVisView = chatListView.getChildAt(chatListView.getChildCount() - 1);
-                        int top = ((firstVisView == null) ? 0 : firstVisView.getTop()) - chatListView.getPaddingTop();
-                        chatListView.setAdapter(null);
-                        chatListView.setAdapter(chatAdapter);
-                        chatLayoutManager.scrollToPositionWithOffset(firstVisPos, top);
+                        return false;
                     }
                     return true;
                 }
@@ -5723,19 +5796,15 @@ public void onClick(DialogInterface dialogInterface, int i) {
             for (int a = 0; a < actionModeViews.size(); a++) {
                 View view = actionModeViews.get(a);
                 AndroidUtilities.clearDrawableAnimation(view);
-                if (a < 1) {
-                    animators.add(ObjectAnimatorProxy.ofFloat(view, "translationX", -AndroidUtilities.dp(56), 0));
-                } else {
                     animators.add(ObjectAnimatorProxy.ofFloat(view, "scaleY", 0.1f, 1.0f));
                 }
-            }
             animatorSet.playTogether(animators);
             animatorSet.setDuration(250);
             animatorSet.start();
         }
 
         addToSelectedMessages(message);
-        updateActionModeTitle();
+        selectedMessagesCountTextView.setNumber(1, false);
         updateVisibleRows();
     }
 
@@ -5808,10 +5877,12 @@ public void onClick(DialogInterface dialogInterface, int i) {
             if (path == null || path.length() == 0) {
                 path = FileLoader.getPathToMessage(selectedObject.messageOwner).toString();
             }
-            if (selectedObject.type == 3) {
-                MediaController.saveFile(path, getParentActivity(), 1, null);
-            } else if (selectedObject.type == 1) {
-                MediaController.saveFile(path, getParentActivity(), 0, null);
+            if (selectedObject.type == 3 || selectedObject.type == 1) {
+                if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
+                    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 4);
+                    return;
+                }
+                MediaController.saveFile(path, getParentActivity(), selectedObject.type == 3 ? 1 : 0, null);
             } else if (selectedObject.type == 8 || selectedObject.type == 9 || selectedObject.type == 14) {
                 Intent intent = new Intent(Intent.ACTION_SEND);
                 intent.setType(selectedObject.messageOwner.media.document.mime_type);
@@ -5902,6 +5973,10 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     intent.putExtra(Intent.EXTRA_STREAM, Uri.fromFile(new File(path)));
                     getParentActivity().startActivityForResult(Intent.createChooser(intent, LocaleController.getString("ShareFile", R.string.ShareFile)), 500);
                 } else {
+                    if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
+                        getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 4);
+                        return;
+                    }
                     MediaController.saveFile(path, getParentActivity(), 0, null);
                 }
             }
@@ -5949,6 +6024,10 @@ public void onClick(DialogInterface dialogInterface, int i) {
         } else if (option == 9) {
             StickersQuery.loadStickers(this, selectedObject.getInputStickerSet());
         } else if (option == 10) {
+            if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
+                getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 4);
+                return;
+            }
             String fileName = FileLoader.getDocumentFileName(selectedObject.messageOwner.media.document);
             if (fileName == null || fileName.length() == 0) {
                 fileName = selectedObject.getFileName();
@@ -6202,7 +6281,8 @@ public void setPhotoChecked(int index) {
     }
 
     @Override
-    public void cancelButtonPressed() {
+    public boolean cancelButtonPressed() {
+        return true;
     }
 
     @Override
@@ -6315,7 +6395,7 @@ public void didPressUrl(String url) {
                             fragment.setSearchString(url);
                             presentFragment(fragment);
                         } else if (url.startsWith("/")) {
-                            chatActivityEnterView.setCommand(null, url);
+                            chatActivityEnterView.setCommand(null, url, false);
                         }
                     }
                 });
@@ -6324,6 +6404,9 @@ public void didPressUrl(String url) {
                 }
 
                 if (view instanceof ChatBaseCell) {
+                if (currentEncryptedChat == null) {
+                    ((ChatBaseCell) view).setAllowAssistant(true);
+                }
                     ((ChatBaseCell) view).setDelegate(new ChatBaseCell.ChatBaseCellDelegate() {
                         @Override
                         public void didPressedChannelAvatar(ChatBaseCell cell, TLRPC.Chat chat) {
@@ -6347,7 +6430,9 @@ public void didPressedUserAvatar(ChatBaseCell cell, TLRPC.User user) {
                             if (user != null && user.id != UserConfig.getClientUserId()) {
                                 Bundle args = new Bundle();
                                 args.putInt("user_id", user.id);
-                                presentFragment(new ProfileActivity(args));
+                            ProfileActivity fragment = new ProfileActivity(args);
+                            fragment.setPlayProfileAnimation(currentUser != null && currentUser.id == user.id);
+                            presentFragment(fragment);
                             }
                         }
 
@@ -6370,7 +6455,7 @@ public boolean canPerformActions() {
                         }
 
                         @Override
-                        public void didPressUrl(MessageObject messageObject, final ClickableSpan url) {
+                    public void didPressUrl(MessageObject messageObject, final ClickableSpan url, boolean longPress) {
                             if (url instanceof URLSpanNoUnderline) {
                                 String str = ((URLSpanNoUnderline) url).getURL();
                                 if (str.startsWith("@")) {
@@ -6384,21 +6469,9 @@ public void didPressUrl(MessageObject messageObject, final ClickableSpan url) {
                                         presentFragment(fragment);
                                     }
                                 } else if (str.startsWith("/")) {
-                                    chatActivityEnterView.setCommand(messageObject, str);
-                                    //Plus: Confirm before send
-                                /*final MessageObject msg = messageObject;
-                                final String cmd = str;
-                                AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
-                                builder.setMessage(str);
-                                builder.setTitle(LocaleController.getString("Send", R.string.Send));
-                                builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
-                                    @Override
-                                    public void onClick(DialogInterface dialogInterface, int i) {
-                                        chatActivityEnterView.setCommand(msg, cmd);
-                                    }
-                                });
-                                builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
-                                showDialog(builder.create());*/
+                                if (URLSpanBotCommand.enabled) {
+                                    chatActivityEnterView.setCommand(messageObject, str, longPress);
+                                }
                                 }
                             } else if (url instanceof URLSpanReplacement) {
                                 AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
@@ -6618,7 +6691,12 @@ public void needOpenUserProfile(int uid) {
                             if (uid != UserConfig.getClientUserId()) {
                                 Bundle args = new Bundle();
                                 args.putInt("user_id", uid);
-                                presentFragment(new ProfileActivity(args));
+                            if (currentEncryptedChat != null && uid == currentUser.id) {
+                                args.putLong("dialog_id", dialog_id);
+                            }
+                            ProfileActivity fragment = new ProfileActivity(args);
+                            fragment.setPlayProfileAnimation(currentUser != null && currentUser.id == uid);
+                            presentFragment(fragment);
                             }
                         }
                     });
@@ -6768,6 +6846,5 @@ public void notifyItemRangeRemoved(int positionStart, int itemCount) {
             updateRows();
             super.notifyItemRangeRemoved(positionStart, itemCount);
         }
-
     }
-}
+    }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java
index afaff465e..03a2daaee 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarDrawable.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
@@ -11,6 +11,7 @@
 import android.graphics.Canvas;
 import android.graphics.ColorFilter;
 import android.graphics.Paint;
+import android.graphics.PixelFormat;
 import android.graphics.Rect;
 import android.graphics.RectF;
 import android.graphics.drawable.Drawable;
@@ -20,11 +21,11 @@
 import android.text.TextPaint;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
-import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.UserConfig;
-import org.telegram.messenger.ApplicationLoader;
+import org.telegram.tgnet.TLRPC;
 
 import java.util.Locale;
 
@@ -33,8 +34,8 @@
     private static Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG);
     private static TextPaint namePaint;
     private static TextPaint namePaintSmall;
-    private static int[] arrColors = {0xffe56555, 0xfff28c48, 0xffeec764, 0xff76c84d, 0xff5fbed5, 0xff549cdd, 0xff8e85ee, 0xfff2749a};
-    private static int[] arrColorsProfiles = {0xffd86f65, 0xfff69d61, 0xfffabb3c, 0xff67b35d, 0xff56a2bb, 0xff5c98cd, 0xff8c79d2, 0xfff37fa6};
+    private static int[] arrColors = {0xffe56555, 0xfff28c48, 0xff549cdd, 0xff76c84d, 0xff5fbed5, 0xff549cdd, 0xff8e85ee, 0xfff2749a};
+    private static int[] arrColorsProfiles = {0xffd86f65, 0xfff69d61, 0xff8c79d2, 0xff67b35d, 0xff56a2bb, 0xff5c98cd, 0xff8c79d2, 0xfff37fa6};
     private static int[] arrColorsProfilesBack = {0xffca6056, 0xfff18944, 0xff7d6ac4, 0xff56a14c, 0xff4492ac, 0xff4c84b6, 0xff7d6ac4, 0xff4c84b6};
     private static int[] arrColorsProfilesText = {0xfff9cbc5, 0xfffdddc8, 0xffcdc4ed, 0xffc0edba, 0xffb8e2f0, 0xffb3d7f7, 0xffcdc4ed, 0xffb3d7f7};
     //private static int[] arrColorsNames = {0xffca5650, 0xffd87b29, 0xff4e92cc, 0xff50b232, 0xff42b1a8, 0xff4e92cc, 0xff4e92cc, 0xff4e92cc};
@@ -342,7 +343,7 @@ public void setColorFilter(ColorFilter cf) {
 
     @Override
     public int getOpacity() {
-        return 0;
+        return PixelFormat.TRANSPARENT;
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarUpdater.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarUpdater.java
index abda6c200..d740dfa5e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarUpdater.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/AvatarUpdater.java
@@ -1,18 +1,21 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
 
+import android.Manifest;
 import android.app.Activity;
 import android.content.Intent;
+import android.content.pm.PackageManager;
 import android.graphics.Bitmap;
 import android.media.ExifInterface;
 import android.net.Uri;
+import android.os.Build;
 import android.os.Bundle;
 import android.provider.MediaStore;
 
@@ -73,6 +76,12 @@ public void openCamera() {
     }
 
     public void openGallery() {
+        if (Build.VERSION.SDK_INT >= 23 && parentFragment != null && parentFragment.getParentActivity() != null) {
+            if (parentFragment.getParentActivity().checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
+                parentFragment.getParentActivity().requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, 4);
+                return;
+            }
+        }
         PhotoAlbumPickerActivity fragment = new PhotoAlbumPickerActivity(true, null);
         fragment.setDelegate(new PhotoAlbumPickerActivity.PhotoAlbumPickerActivityDelegate() {
             @Override
@@ -179,6 +188,7 @@ private void processBitmap(Bitmap bitmap) {
         }
         smallPhoto = ImageLoader.scaleAndSaveImage(bitmap, 100, 100, 80, false);
         bigPhoto = ImageLoader.scaleAndSaveImage(bitmap, 800, 800, 80, false, 320, 320);
+        bitmap.recycle();
         if (bigPhoto != null && smallPhoto != null) {
             if (returnOnly) {
                 if (delegate != null) {
@@ -195,7 +205,7 @@ private void processBitmap(Bitmap bitmap) {
     }
 
     @Override
-    public void didFinishEdit(Bitmap bitmap, Bundle args) {
+    public void didFinishEdit(Bitmap bitmap) {
         processBitmap(bitmap);
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/BackupImageView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/BackupImageView.java
index 4ff18a9bf..dc1e5f8a0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/BackupImageView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/BackupImageView.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index e74d7b44a..fd47b599b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -1,20 +1,25 @@
 /*
- * This is the source code of Telegram for Android v. 1.4.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
 
+import android.Manifest;
 import android.app.Activity;
 import android.content.Context;
 import android.content.SharedPreferences;
+import android.content.pm.PackageManager;
+import android.graphics.Canvas;
+import android.graphics.Paint;
 import android.graphics.PorterDuff;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.GradientDrawable;
 import android.media.AudioManager;
+import android.os.Build;
 import android.os.PowerManager;
 import android.text.Editable;
 import android.text.TextWatcher;
@@ -25,7 +30,8 @@
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
-import android.view.animation.AccelerateDecelerateInterpolator;
+import android.view.animation.AccelerateInterpolator;
+import android.view.animation.DecelerateInterpolator;
 import android.view.inputmethod.EditorInfo;
 import android.widget.EditText;
 import android.widget.FrameLayout;
@@ -35,26 +41,26 @@
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
-import org.telegram.messenger.AnimationCompat.ViewProxy;
-import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.Emoji;
-import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
 import org.telegram.messenger.MessageObject;
 import org.telegram.messenger.MessagesController;
+import org.telegram.messenger.SendMessagesHelper;
+import org.telegram.messenger.FileLog;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
-import org.telegram.messenger.SendMessagesHelper;
-import org.telegram.messenger.UserConfig;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
+import org.telegram.messenger.UserConfig;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.messenger.AnimationCompat.AnimatorListenerAdapterProxy;
+import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
+import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
+import org.telegram.messenger.AnimationCompat.ViewProxy;
+import org.telegram.messenger.ApplicationLoader;
 
 import java.util.Locale;
 
@@ -77,6 +83,7 @@
     private ImageView audioSendButton;
     private FrameLayout recordPanel;
     private LinearLayout slideText;
+    private RecordDot recordDot;
     private SizeNotifierFrameLayout sizeNotifierLayout;
     private LinearLayout attachButton;
     private ImageView botButton;
@@ -85,6 +92,7 @@
     private PopupWindow botKeyboardPopup;
     private BotKeyboardView botKeyboardView;
     private ImageView asAdminButton;
+    private RecordCircle recordCircle;
 
     private int currentPopupContentType = -1;
 
@@ -102,7 +110,7 @@
     private PowerManager.WakeLock mWakeLock;
     private AnimatorSetProxy runningAnimation;
     private AnimatorSetProxy runningAnimation2;
-    private ObjectAnimatorProxy runningAnimationAudio;
+    private AnimatorSetProxy runningAnimationAudio;
     private int runningAnimationType;
     private int audioInterfaceState;
 
@@ -152,6 +160,124 @@ public void run() {
         }
     };
 
+    private class RecordDot extends View {
+
+        private Drawable dotDrawable;
+        private float alpha;
+        private long lastUpdateTime;
+        private boolean isIncr;
+
+        public RecordDot(Context context) {
+            super(context);
+
+            dotDrawable = getResources().getDrawable(R.drawable.rec);
+        }
+
+        public void resetAlpha() {
+            alpha = 1.0f;
+            lastUpdateTime = System.currentTimeMillis();
+            isIncr = false;
+            invalidate();
+        }
+
+        @Override
+        protected void onDraw(Canvas canvas) {
+            dotDrawable.setBounds(0, 0, AndroidUtilities.dp(11), AndroidUtilities.dp(11));
+            dotDrawable.setAlpha(185 + (int) (70 * alpha));
+            long dt = (System.currentTimeMillis() - lastUpdateTime);
+            if (!isIncr) {
+                alpha -= dt / 200.0f;
+                if (alpha <= 0) {
+                    alpha = 0;
+                    isIncr = true;
+                }
+            } else {
+                alpha += dt / 200.0f;
+                if (alpha >= 1) {
+                    alpha = 1;
+                    isIncr = false;
+                }
+            }
+            lastUpdateTime = System.currentTimeMillis();
+            dotDrawable.draw(canvas);
+            invalidate();
+        }
+    }
+
+    private class RecordCircle extends View {
+
+        private Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        private Paint paintRecord = new Paint(Paint.ANTI_ALIAS_FLAG);
+        private Drawable micDrawable;
+        private float scale;
+        private float amplitude;
+        private float animateToAmplitude;
+        private float animateAmplitudeDiff;
+        private long lastUpdateTime;
+
+        public RecordCircle(Context context) {
+            super(context);
+            paint.setColor(0xff5795cc);
+            paintRecord.setColor(0x0d000000);
+            micDrawable = getResources().getDrawable(R.drawable.mic_pressed);
+        }
+
+        public void setAmplitude(double value) {
+            animateToAmplitude = (float) Math.min(100, value) / 100.0f;
+            animateAmplitudeDiff = (animateToAmplitude - amplitude) / 150.0f;
+            lastUpdateTime = System.currentTimeMillis();
+            invalidate();
+        }
+
+        public float getScale() {
+            return scale;
+        }
+
+        public void setScale(float value) {
+            scale = value;
+            invalidate();
+        }
+
+        @Override
+        protected void onDraw(Canvas canvas) {
+            int cx = getMeasuredWidth() / 2;
+            int cy = getMeasuredHeight() / 2;
+            float sc;
+            float alpha;
+            if (scale <= 0.5f) {
+                alpha = sc = scale / 0.5f;
+            } else if (scale <= 0.75f) {
+                sc = 1.0f - (scale - 0.5f) / 0.25f * 0.1f;
+                alpha = 1;
+            } else {
+                sc = 0.9f + (scale - 0.75f) / 0.25f * 0.1f;
+                alpha = 1;
+            }
+            long dt = System.currentTimeMillis() - lastUpdateTime;
+            if (animateToAmplitude != amplitude) {
+                amplitude += animateAmplitudeDiff * dt;
+                if (animateAmplitudeDiff > 0) {
+                    if (amplitude > animateToAmplitude) {
+                        amplitude = animateToAmplitude;
+                    }
+                } else {
+                    if (amplitude < animateToAmplitude) {
+                        amplitude = animateToAmplitude;
+                    }
+                }
+                invalidate();
+            }
+            lastUpdateTime = System.currentTimeMillis();
+            if (amplitude != 0) {
+                canvas.drawCircle(getMeasuredWidth() / 2.0f, getMeasuredHeight() / 2.0f, (AndroidUtilities.dp(42) + AndroidUtilities.dp(20) * amplitude) * scale, paintRecord);
+            }
+            canvas.drawCircle(getMeasuredWidth() / 2.0f, getMeasuredHeight() / 2.0f, AndroidUtilities.dp(42) * sc, paint);
+            micDrawable.setBounds(cx - micDrawable.getIntrinsicWidth() / 2, cy - micDrawable.getIntrinsicHeight() / 2, cx + micDrawable.getIntrinsicWidth() / 2, cy + micDrawable.getIntrinsicHeight() / 2);
+            micDrawable.setAlpha((int) (255 * alpha));
+            micDrawable.draw(canvas);
+        }
+    }
+
     public ChatActivityEnterView(Activity context, SizeNotifierFrameLayout parent, BaseFragment fragment, boolean isChat) {
         super(context);
         setBackgroundResource(R.drawable.compose_panel);
@@ -406,9 +532,8 @@ public void onClick(View v) {
         linearLayout.setBackgroundColor(0xffffffff);
         recordPanel.addView(linearLayout, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER_VERTICAL));
 
-        imageView = new ImageView(context);
-        imageView.setImageResource(R.drawable.rec);
-        linearLayout.addView(imageView, LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER_VERTICAL, 0, 1, 0, 0));
+        recordDot = new RecordDot(context);
+        linearLayout.addView(recordDot, LayoutHelper.createLinear(11, 11, Gravity.CENTER_VERTICAL, 0, 1, 0, 0));
 
         recordTimeText = new TextView(context);
         recordTimeText.setText("00:00");
@@ -421,7 +546,7 @@ public void onClick(View v) {
 
         audioSendButton = new ImageView(context);
         audioSendButton.setScaleType(ImageView.ScaleType.CENTER_INSIDE);
-        //audioSendButton.setImageResource(R.drawable.mic_button_states);
+        //audioSendButton.setImageResource(R.drawable.mic);
         //audioSendButton.setBackgroundColor(0xffffffff);
         audioSendButton.setSoundEffectsEnabled(false);
         Drawable mic = getResources().getDrawable(R.drawable.mic);
@@ -438,6 +563,13 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
                     mic.setColorFilter(0xffda564d, PorterDuff.Mode.SRC_IN);
                     audioSendButton.setImageDrawable(mic);
                     if (parentFragment != null) {
+                        if (Build.VERSION.SDK_INT >= 23) {
+                            if (parentActivity.checkSelfPermission(Manifest.permission.RECORD_AUDIO) != PackageManager.PERMISSION_GRANTED) {
+                                parentActivity.requestPermissions(new String[]{Manifest.permission.RECORD_AUDIO}, 3);
+                                return false;
+                            }
+                        }
+
                         String action;
                         TLRPC.Chat currentChat;
                         if ((int) dialog_id < 0) {
@@ -477,6 +609,7 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
                     FrameLayout.LayoutParams params = (FrameLayout.LayoutParams) slideText.getLayoutParams();
                     if (startedDraggingX != -1) {
                         float dist = (x - startedDraggingX);
+                        ViewProxy.setTranslationX(recordCircle, dist);
                         params.leftMargin = AndroidUtilities.dp(30) + (int) dist;
                         slideText.setLayoutParams(params);
                         float alpha = 1.0f + dist / distCanMove;
@@ -500,6 +633,7 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
                     }
                     if (params.leftMargin > AndroidUtilities.dp(30)) {
                         params.leftMargin = AndroidUtilities.dp(30);
+                        ViewProxy.setTranslationX(recordCircle, 0);
                         slideText.setLayoutParams(params);
                         ViewProxy.setAlpha(slideText, 1);
                         startedDraggingX = -1;
@@ -510,6 +644,10 @@ public boolean onTouch(View view, MotionEvent motionEvent) {
             }
         });
 
+        recordCircle = new RecordCircle(context);
+        recordCircle.setVisibility(GONE);
+        sizeNotifierLayout.addView(recordCircle, LayoutHelper.createFrame(124, 124, Gravity.BOTTOM | Gravity.RIGHT, 0, 0, -36, -38));
+
         sendButton = new ImageView(context);
         sendButton.setVisibility(View.INVISIBLE);
         sendButton.setScaleType(ImageView.ScaleType.CENTER_INSIDE);
@@ -630,7 +768,7 @@ public void showTopView(boolean animated) {
                     currentTopViewAnimation.addListener(new AnimatorListenerAdapterProxy() {
                     @Override
                     public void onAnimationEnd(Object animation) {
-                            if (animation == currentTopViewAnimation) {
+                            if (currentTopViewAnimation != null && currentTopViewAnimation.equals(animation)) {
                                 setTopViewAnimation(1.0f);
                         if (!forceShowSendButton) {
                             openKeyboard();
@@ -675,7 +813,7 @@ public void hideTopView(final boolean animated) {
                 currentTopViewAnimation.addListener(new AnimatorListenerAdapterProxy() {
                     @Override
                     public void onAnimationEnd(Object animation) {
-                        if (animation == currentTopViewAnimation) {
+                        if (currentTopViewAnimation != null && currentTopViewAnimation.equals(animation)) {
                             topView.setVisibility(GONE);
                             setTopViewAnimation(0.0f);
                             currentTopViewAnimation = null;
@@ -935,7 +1073,7 @@ public void onAnimationEnd(Object animation) {
                     runningAnimation.addListener(new AnimatorListenerAdapterProxy() {
                         @Override
                         public void onAnimationEnd(Object animation) {
-                            if (runningAnimation.equals(animation)) {
+                            if (runningAnimation != null && runningAnimation.equals(animation)) {
                                 sendButton.setVisibility(View.VISIBLE);
                                 audioSendButton.setVisibility(View.GONE);
                                 audioSendButton.clearAnimation();
@@ -1010,7 +1148,7 @@ public void onAnimationEnd(Object animation) {
                 runningAnimation.addListener(new AnimatorListenerAdapterProxy() {
                     @Override
                     public void onAnimationEnd(Object animation) {
-                        if (runningAnimation.equals(animation)) {
+                        if (runningAnimation != null && runningAnimation.equals(animation)) {
                             sendButton.setVisibility(View.GONE);
                             sendButton.clearAnimation();
                             audioSendButton.setVisibility(View.VISIBLE);
@@ -1081,8 +1219,11 @@ private void updateAudioRecordIntefrace() {
             }
             AndroidUtilities.lockOrientation(parentActivity);
 
-            recordPanel.setVisibility(View.VISIBLE);
+            recordPanel.setVisibility(VISIBLE);
+            recordCircle.setVisibility(VISIBLE);
+            recordCircle.setAmplitude(0);
             recordTimeText.setText("00:00");
+            recordDot.resetAlpha();
             lastTimeString = null;
 
             FrameLayout.LayoutParams params = (FrameLayout.LayoutParams) slideText.getLayoutParams();
@@ -1090,19 +1231,25 @@ private void updateAudioRecordIntefrace() {
             slideText.setLayoutParams(params);
             ViewProxy.setAlpha(slideText, 1);
             ViewProxy.setX(recordPanel, AndroidUtilities.displaySize.x);
+            ViewProxy.setTranslationX(recordCircle, 0);
             if (runningAnimationAudio != null) {
                 runningAnimationAudio.cancel();
             }
-            runningAnimationAudio = ObjectAnimatorProxy.ofFloatProxy(recordPanel, "translationX", 0).setDuration(300);
+            runningAnimationAudio = new AnimatorSetProxy();
+            runningAnimationAudio.playTogether(ObjectAnimatorProxy.ofFloat(recordPanel, "translationX", 0),
+                    ObjectAnimatorProxy.ofFloat(recordCircle, "scale", 1),
+                    ObjectAnimatorProxy.ofFloat(audioSendButton, "alpha", 0));
+            runningAnimationAudio.setDuration(300);
             runningAnimationAudio.addListener(new AnimatorListenerAdapterProxy() {
                 @Override
                 public void onAnimationEnd(Object animator) {
                     if (runningAnimationAudio != null && runningAnimationAudio.equals(animator)) {
                         ViewProxy.setX(recordPanel, 0);
-                    }
+                        runningAnimationAudio = null;
+                }
                 }
             });
-            runningAnimationAudio.setInterpolator(new AccelerateDecelerateInterpolator());
+            runningAnimationAudio.setInterpolator(new DecelerateInterpolator());
             runningAnimationAudio.start();
         } else {
             if (mWakeLock != null) {
@@ -1122,7 +1269,11 @@ public void onAnimationEnd(Object animator) {
             if (runningAnimationAudio != null) {
                 runningAnimationAudio.cancel();
             }
-            runningAnimationAudio = ObjectAnimatorProxy.ofFloatProxy(recordPanel, "translationX", AndroidUtilities.displaySize.x).setDuration(300);
+            runningAnimationAudio = new AnimatorSetProxy();
+            runningAnimationAudio.playTogether(ObjectAnimatorProxy.ofFloat(recordPanel, "translationX", AndroidUtilities.displaySize.x),
+                    ObjectAnimatorProxy.ofFloat(recordCircle, "scale", 0.0f),
+                    ObjectAnimatorProxy.ofFloat(audioSendButton, "alpha", 1.0f));
+            runningAnimationAudio.setDuration(300);
             runningAnimationAudio.addListener(new AnimatorListenerAdapterProxy() {
                 @Override
                 public void onAnimationEnd(Object animator) {
@@ -1132,10 +1283,12 @@ public void onAnimationEnd(Object animator) {
                         slideText.setLayoutParams(params);
                         ViewProxy.setAlpha(slideText, 1);
                         recordPanel.setVisibility(View.GONE);
+                        recordCircle.setVisibility(View.GONE);
+                        runningAnimationAudio = null;
                     }
                 }
             });
-            runningAnimationAudio.setInterpolator(new AccelerateDecelerateInterpolator());
+            runningAnimationAudio.setInterpolator(new AccelerateInterpolator());
             runningAnimationAudio.start();
         }
     }
@@ -1144,22 +1297,28 @@ public void setDelegate(ChatActivityEnterViewDelegate delegate) {
         this.delegate = delegate;
     }
 
-    public void setCommand(MessageObject messageObject, String command) {
+    public void setCommand(MessageObject messageObject, String command, boolean longPress) {
         if (command == null || getVisibility() != VISIBLE) {
             return;
         }
-        TLRPC.User user = messageObject != null && (int) dialog_id < 0 ? MessagesController.getInstance().getUser(messageObject.messageOwner.from_id) : null;
-        if (botCount != 1 && user != null && (user.flags & TLRPC.USER_FLAG_BOT) != 0 && !command.contains("@")) {
-            SendMessagesHelper.getInstance().sendMessage(String.format(Locale.US, "%s@%s", command, user.username), dialog_id, null, null, false, asAdmin());
-        } else {
-            SendMessagesHelper.getInstance().sendMessage(command, dialog_id, null, null, false, asAdmin());
-        }
-        /*String text = messageEditText.getText().toString();
+        if (longPress) {
+            String text = messageEditText.getText().toString();
         text = command + " " + text.replaceFirst("^/[a-zA-Z@\\d_]{1,255}(\\s|$)", "");
         ignoreTextChange = true;
         messageEditText.setText(text);
         messageEditText.setSelection(messageEditText.getText().length());
-        ignoreTextChange = false;*/
+        ignoreTextChange = false;
+            if (!keyboardVisible && currentPopupContentType == -1) {
+                openKeyboard();
+            }
+        } else {
+            TLRPC.User user = messageObject != null && (int) dialog_id < 0 ? MessagesController.getInstance().getUser(messageObject.messageOwner.from_id) : null;
+            if (botCount != 1 && user != null && (user.flags & TLRPC.USER_FLAG_BOT) != 0 && !command.contains("@")) {
+                SendMessagesHelper.getInstance().sendMessage(String.format(Locale.US, "%s@%s", command, user.username), dialog_id, null, null, false, asAdmin());
+            } else {
+                SendMessagesHelper.getInstance().sendMessage(command, dialog_id, null, null, false, asAdmin());
+            }
+        }
     }
 
     public void setFieldText(String text) {
@@ -1175,6 +1334,13 @@ public void setFieldText(String text) {
         }
     }
 
+    public void setSelection(int start) {
+        if (messageEditText == null) {
+            return;
+        }
+        messageEditText.setSelection(start, messageEditText.length());
+    }
+
     public int getCursorPosition() {
         if (messageEditText == null) {
             return 0;
@@ -1353,6 +1519,10 @@ public boolean isPopupView(View view) {
         return view == botKeyboardView || view == emojiView;
     }
 
+    public boolean isRecordCircle(View view) {
+        return view == recordCircle;
+    }
+
     private void showPopup(int show, int contentType) {
         SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
         int color = themePrefs.getInt("chatEditTextIconsColor", 0xffadadad);
@@ -1379,7 +1549,7 @@ public void onEmojiSelected(String symbol) {
                         }
                         try {
                             innerTextChange = 2;
-                            CharSequence localCharSequence = Emoji.replaceEmoji(symbol/* + "\uFE0F"*/, messageEditText.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20), false);
+                            CharSequence localCharSequence = Emoji.replaceEmoji(symbol, messageEditText.getPaint().getFontMetricsInt(), AndroidUtilities.dp(20), false);
                             messageEditText.setText(messageEditText.getText().insert(i, localCharSequence));
                             int j = i + localCharSequence.length();
                             messageEditText.setSelection(j, j);
@@ -1463,6 +1633,7 @@ public void onStickerSelected(TLRPC.Document sticker) {
                 emojiButton.setImageDrawable(d);
                 //emojiButton.setImageResource(R.drawable.ic_msg_panel_smiles);
             }
+            currentPopupContentType = -1;
             if (emojiView != null) {
                 emojiView.setVisibility(GONE);
             }
@@ -1612,6 +1783,9 @@ public void didReceivedNotification(int id, Object... args) {
                     recordTimeText.setText(str);
                 }
             }
+            if (recordCircle != null) {
+                recordCircle.setAmplitude((Double) args[1]);
+            }
         } else if (id == NotificationCenter.closeChats) {
             if (messageEditText != null && messageEditText.isFocused()) {
                 AndroidUtilities.hideKeyboard(messageEditText);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/CheckBox.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/CheckBox.java
index 604448848..1bb73b56f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/CheckBox.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/CheckBox.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ClippingImageView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ClippingImageView.java
index 59ec72db5..a9ddcaacc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ClippingImageView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ClippingImageView.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.4.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
index d4a1717ce..76a19b053 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/EmojiView.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
@@ -12,6 +12,9 @@
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.database.DataSetObserver;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.RectF;
 import android.graphics.PorterDuff;
 import android.graphics.drawable.Drawable;
 import android.graphics.drawable.GradientDrawable;
@@ -21,9 +24,12 @@
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.HapticFeedbackConstants;
+import android.view.KeyEvent;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
+import android.view.ViewTreeObserver;
+import android.view.WindowManager;
 import android.widget.AbsListView;
 import android.widget.AdapterView;
 import android.widget.BaseAdapter;
@@ -31,22 +37,25 @@
 import android.widget.GridView;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
+import android.widget.PopupWindow;
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.Emoji;
-import org.telegram.messenger.FileLog;
+import org.telegram.messenger.EmojiData;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.NotificationCenter;
-import org.telegram.messenger.R;
 import org.telegram.messenger.query.StickersQuery;
+import org.telegram.messenger.FileLog;
+import org.telegram.messenger.R;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.Cells.EmptyCell;
 import org.telegram.ui.Cells.StickerEmojiCell;
 import org.telegram.ui.StickerPreviewViewer;
 
+import java.lang.reflect.Field;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Comparator;
@@ -60,9 +69,415 @@
         void onStickerSelected(TLRPC.Document sticker);
     }
 
+    private static final Field superListenerField;
+    static {
+        Field f = null;
+        try {
+            f = PopupWindow.class.getDeclaredField("mOnScrollChangedListener");
+            f.setAccessible(true);
+        } catch (NoSuchFieldException e) {
+            /* ignored */
+        }
+        superListenerField = f;
+    }
+    private static final ViewTreeObserver.OnScrollChangedListener NOP = new ViewTreeObserver.OnScrollChangedListener() {
+        @Override
+        public void onScrollChanged() {
+            /* do nothing */
+        }
+    };
+
+    private class ImageViewEmoji extends ImageView {
+
+        private boolean touched;
+        private float lastX;
+        private float lastY;
+        private float touchedX;
+        private float touchedY;
+
+        public ImageViewEmoji(Context context) {
+            super(context);
+
+            setOnClickListener(new View.OnClickListener() {
+                public void onClick(View view) {
+                    sendEmoji(null);
+                }
+            });
+            setOnLongClickListener(new OnLongClickListener() {
+                @Override
+                public boolean onLongClick(View view) {
+                    String code = (String) view.getTag();
+                    if (EmojiData.emojiColoredMap.containsKey(code)) {
+                        touched = true;
+                        touchedX = lastX;
+                        touchedY = lastY;
+
+                        String color = emojiColor.get(code);
+                        if (color != null) {
+                            switch (color) {
+                                case "\uD83C\uDFFB":
+                                    pickerView.setSelection(1);
+                                    break;
+                                case "\uD83C\uDFFC":
+                                    pickerView.setSelection(2);
+                                    break;
+                                case "\uD83C\uDFFD":
+                                    pickerView.setSelection(3);
+                                    break;
+                                case "\uD83C\uDFFE":
+                                    pickerView.setSelection(4);
+                                    break;
+                                case "\uD83C\uDFFF":
+                                    pickerView.setSelection(5);
+                                    break;
+                            }
+                        } else {
+                            pickerView.setSelection(0);
+                        }
+                        view.getLocationOnScreen(location);
+                        int x = emojiSize * pickerView.getSelection() + AndroidUtilities.dp(4 * pickerView.getSelection() - (AndroidUtilities.isTablet() ? 5 : 1));
+                        if (location[0] - x < AndroidUtilities.dp(5)) {
+                            x += (location[0] - x) - AndroidUtilities.dp(5);
+                        } else if (location[0] - x + popupWidth > AndroidUtilities.displaySize.x - AndroidUtilities.dp(5)) {
+                            x += (location[0] - x + popupWidth) - (AndroidUtilities.displaySize.x - AndroidUtilities.dp(5));
+                        }
+                        int xOffset = -x;
+                        int yOffset = view.getTop() < 0 ? view.getTop() : 0;
+
+                        pickerView.setEmoji(code, AndroidUtilities.dp(AndroidUtilities.isTablet() ? 30 : 22) - xOffset + (int) AndroidUtilities.dpf2(0.5f));
+
+                        pickerViewPopup.setFocusable(true);
+                        pickerViewPopup.showAsDropDown(view, xOffset, -view.getMeasuredHeight() - popupHeight + (view.getMeasuredHeight() - emojiSize) / 2 - yOffset);
+                        view.getParent().requestDisallowInterceptTouchEvent(true);
+                        return true;
+                    }
+                    return false;
+                }
+            });
+            setBackgroundResource(R.drawable.list_selector);
+            setScaleType(ImageView.ScaleType.CENTER);
+        }
+
+        private void sendEmoji(String override) {
+            String code = override != null ? override : (String) getTag();
+            if (override == null) {
+                if (pager.getCurrentItem() != 0) {
+                    String color = emojiColor.get(code);
+                    if (color != null) {
+                        code += color;
+                    }
+                }
+                Integer count = emojiUseHistory.get(code);
+                if (count == null) {
+                    count = 0;
+                }
+                if (count == 0 && emojiUseHistory.size() > 50) {
+                    for (int a = recentEmoji.size() - 1; a >= 0; a--) {
+                        String emoji = recentEmoji.get(a);
+                        emojiUseHistory.remove(emoji);
+                        recentEmoji.remove(a);
+                        if (emojiUseHistory.size() <= 50) {
+                            break;
+                        }
+                    }
+                }
+                emojiUseHistory.put(code, ++count);
+                if (pager.getCurrentItem() != 0) {
+                    sortEmoji();
+                }
+                saveRecentEmoji();
+                adapters.get(0).notifyDataSetChanged();
+                if (listener != null) {
+                    listener.onEmojiSelected(Emoji.fixEmoji(code));
+                }
+            } else {
+                if (listener != null) {
+                    listener.onEmojiSelected(Emoji.fixEmoji(override));
+                }
+            }
+
+        }
+
+        @Override
+        public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+            setMeasuredDimension(View.MeasureSpec.getSize(widthMeasureSpec), View.MeasureSpec.getSize(widthMeasureSpec));
+        }
+
+        @Override
+        public boolean onTouchEvent(MotionEvent event) {
+            if (touched) {
+                if (event.getAction() == MotionEvent.ACTION_UP || event.getAction() == MotionEvent.ACTION_CANCEL) {
+                    if (pickerViewPopup != null && pickerViewPopup.isShowing()) {
+                        pickerViewPopup.dismiss();
+
+                        String color = null;
+                        switch (pickerView.getSelection()) {
+                            case 1:
+                                color = "\uD83C\uDFFB";
+                                break;
+                            case 2:
+                                color = "\uD83C\uDFFC";
+                                break;
+                            case 3:
+                                color = "\uD83C\uDFFD";
+                                break;
+                            case 4:
+                                color = "\uD83C\uDFFE";
+                                break;
+                            case 5:
+                                color = "\uD83C\uDFFF";
+                                break;
+                        }
+                        String code = (String) getTag();
+                        if (pager.getCurrentItem() != 0) {
+                            if (color != null) {
+                                emojiColor.put(code, color);
+                                code += color;
+                            } else {
+                                emojiColor.remove(code);
+                            }
+                            setImageDrawable(Emoji.getEmojiBigDrawable(code));
+                            sendEmoji(null);
+                            saveEmojiColors();
+                        } else {
+                            sendEmoji(code + (color != null ? color : ""));
+                        }
+                    }
+                    touched = false;
+                    touchedX = -10000;
+                    touchedY = -10000;
+                } else if (event.getAction() == MotionEvent.ACTION_MOVE) {
+                    boolean ignore = false;
+                    if (touchedX != -10000) {
+                        if (Math.abs(touchedX - event.getX()) > AndroidUtilities.getPixelsInCM(0.2f, true) || Math.abs(touchedY - event.getY()) > AndroidUtilities.getPixelsInCM(0.2f, false)) {
+                            touchedX = -10000;
+                            touchedY = -10000;
+                        } else {
+                            ignore = true;
+                        }
+                    }
+                    if (!ignore) {
+                        getLocationOnScreen(location);
+                        float x = location[0] + event.getX();
+                        pickerView.getLocationOnScreen(location);
+                        x -= location[0] + AndroidUtilities.dp(3);
+                        int position = (int) (x / (emojiSize + AndroidUtilities.dp(4)));
+                        if (position < 0) {
+                            position = 0;
+                        } else if (position > 5) {
+                            position = 5;
+                        }
+                        pickerView.setSelection(position);
+                    }
+                }
+            }
+            lastX = event.getX();
+            lastY = event.getY();
+            return super.onTouchEvent(event);
+        }
+    }
+
+    private class EmojiPopupWindow extends PopupWindow {
+
+        private ViewTreeObserver.OnScrollChangedListener mSuperScrollListener;
+        private ViewTreeObserver mViewTreeObserver;
+
+        public EmojiPopupWindow() {
+            super();
+            init();
+        }
+
+        public EmojiPopupWindow(Context context) {
+            super(context);
+            init();
+        }
+
+        public EmojiPopupWindow(int width, int height) {
+            super(width, height);
+            init();
+        }
+
+        public EmojiPopupWindow(View contentView) {
+            super(contentView);
+            init();
+        }
+
+        public EmojiPopupWindow(View contentView, int width, int height, boolean focusable) {
+            super(contentView, width, height, focusable);
+            init();
+        }
+
+        public EmojiPopupWindow(View contentView, int width, int height) {
+            super(contentView, width, height);
+            init();
+        }
+
+        private void init() {
+            if (superListenerField != null) {
+                try {
+                    mSuperScrollListener = (ViewTreeObserver.OnScrollChangedListener) superListenerField.get(this);
+                    superListenerField.set(this, NOP);
+                } catch (Exception e) {
+                    mSuperScrollListener = null;
+                }
+            }
+        }
+
+        private void unregisterListener() {
+            if (mSuperScrollListener != null && mViewTreeObserver != null) {
+                if (mViewTreeObserver.isAlive()) {
+                    mViewTreeObserver.removeOnScrollChangedListener(mSuperScrollListener);
+                }
+                mViewTreeObserver = null;
+            }
+        }
+
+        private void registerListener(View anchor) {
+            if (mSuperScrollListener != null) {
+                ViewTreeObserver vto = (anchor.getWindowToken() != null) ? anchor.getViewTreeObserver() : null;
+                if (vto != mViewTreeObserver) {
+                    if (mViewTreeObserver != null && mViewTreeObserver.isAlive()) {
+                        mViewTreeObserver.removeOnScrollChangedListener(mSuperScrollListener);
+                    }
+                    if ((mViewTreeObserver = vto) != null) {
+                        vto.addOnScrollChangedListener(mSuperScrollListener);
+                    }
+                }
+            }
+        }
+
+        @Override
+        public void showAsDropDown(View anchor, int xoff, int yoff) {
+            try {
+                super.showAsDropDown(anchor, xoff, yoff);
+                registerListener(anchor);
+            } catch (Exception e) {
+                FileLog.e("tmessages", e);
+            }
+        }
+
+        @Override
+        public void update(View anchor, int xoff, int yoff, int width, int height) {
+            super.update(anchor, xoff, yoff, width, height);
+            registerListener(anchor);
+        }
+
+        @Override
+        public void update(View anchor, int width, int height) {
+            super.update(anchor, width, height);
+            registerListener(anchor);
+        }
+
+        @Override
+        public void showAtLocation(View parent, int gravity, int x, int y) {
+            super.showAtLocation(parent, gravity, x, y);
+            unregisterListener();
+        }
+
+        @Override
+        public void dismiss() {
+            setFocusable(false);
+            try {
+                super.dismiss();
+            } catch (Exception e) {
+                //don't promt
+            }
+            unregisterListener();
+        }
+    }
+
+    private class EmojiColorPickerView extends View {
+
+        private Drawable backgroundDrawable;
+        private Drawable arrowDrawable;
+        private String currentEmoji;
+        private int arrowX;
+        private int selection;
+        private Paint rectPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        private RectF rect = new RectF();
+
+        public void setEmoji(String emoji, int arrowPosition) {
+            currentEmoji = emoji;
+            arrowX = arrowPosition;
+            rectPaint.setColor(0x2f000000);
+            invalidate();
+        }
+
+        public String getEmoji() {
+            return currentEmoji;
+        }
+
+        public void setSelection(int position) {
+            if (selection == position) {
+                return;
+            }
+            selection = position;
+            invalidate();
+        }
+
+        public int getSelection() {
+            return selection;
+        }
+
+        public EmojiColorPickerView(Context context) {
+            super(context);
+
+            backgroundDrawable = getResources().getDrawable(R.drawable.stickers_back_all);
+            arrowDrawable = getResources().getDrawable(R.drawable.stickers_back_arrow);
+        }
+
+        @Override
+        protected void onDraw(Canvas canvas) {
+            backgroundDrawable.setBounds(0, 0, getMeasuredWidth(), AndroidUtilities.dp(AndroidUtilities.isTablet() ? 60 : 52));
+            backgroundDrawable.draw(canvas);
+
+            arrowDrawable.setBounds(arrowX - AndroidUtilities.dp(9), AndroidUtilities.dp(AndroidUtilities.isTablet() ? 55.5f : 47.5f), arrowX + AndroidUtilities.dp(9), AndroidUtilities.dp((AndroidUtilities.isTablet() ? 55.5f : 47.5f) + 8));
+            arrowDrawable.draw(canvas);
+
+            if (currentEmoji != null) {
+                String code;
+                for (int a = 0; a < 6; a++) {
+                    int x = emojiSize * a + AndroidUtilities.dp(5 + 4 * a);
+                    int y = AndroidUtilities.dp(9);
+                    if (selection == a) {
+                        rect.set(x, y - (int) AndroidUtilities.dpf2(3.5f), x + emojiSize, y + emojiSize + AndroidUtilities.dp(3));
+                        canvas.drawRoundRect(rect, AndroidUtilities.dp(4), AndroidUtilities.dp(4), rectPaint);
+                    }
+                    code = currentEmoji;
+                    if (a != 0) {
+                        code += "\uD83C";
+                        switch (a) {
+                            case 1:
+                                code += "\uDFFB";
+                                break;
+                            case 2:
+                                code += "\uDFFC";
+                                break;
+                            case 3:
+                                code += "\uDFFD";
+                                break;
+                            case 4:
+                                code += "\uDFFE";
+                                break;
+                            case 5:
+                                code += "\uDFFF";
+                                break;
+                        }
+                    }
+                    Drawable drawable = Emoji.getEmojiBigDrawable(code);
+                    if (drawable != null) {
+                        drawable.setBounds(x, y, x + emojiSize, y + emojiSize);
+                        drawable.draw(canvas);
+                    }
+                }
+            }
+        }
+    }
+
     private ArrayList<EmojiGridAdapter> adapters = new ArrayList<>();
-    private HashMap<Long, Integer> emojiUseHistory = new HashMap<>();
-    private ArrayList<Long> recentEmoji = new ArrayList<>();
+    private HashMap<String, Integer> emojiUseHistory = new HashMap<>();
+    private static HashMap<String, String> emojiColor = new HashMap<>();
+    private ArrayList<String> recentEmoji = new ArrayList<>();
     private HashMap<Long, Integer> stickersUseHistory = new HashMap<>();
     private ArrayList<TLRPC.Document> recentStickers = new ArrayList<>();
     private HashMap<Long, Integer> stickerSetsUseCount = new HashMap<>();
@@ -90,6 +505,12 @@
     private AdapterView.OnItemClickListener stickersOnItemClickListener;
     private Runnable openStickerPreviewRunnable;
     private StickerEmojiCell currentStickerPreviewCell;
+    private EmojiColorPickerView pickerView;
+    private EmojiPopupWindow pickerViewPopup;
+    private int popupWidth;
+    private int popupHeight;
+    private int emojiSize;
+    private int location[] = new int[2];
 
     private int startX;
     private int startY;
@@ -110,7 +531,7 @@ public EmojiView(boolean needStickers, Context context) {
         int tabColor = themePrefs.getInt("chatEmojiViewTabColor", AndroidUtilities.getIntDarkerColor("themeColor", -0x15));
         int lineColor = bgColor == 0xfff5f6f7 ? 0xffe2e5e7 : AndroidUtilities.setDarkColor(bgColor, 0x10);
         //setOrientation(LinearLayout.VERTICAL);
-        for (int i = 0; i < Emoji.data.length + 1; i++) {
+        for (int i = 0; i < EmojiData.dataColored.length + 1; i++) {
             GridView gridView = new GridView(context);
             if (AndroidUtilities.isTablet()) {
                 gridView.setColumnWidth(AndroidUtilities.dp(60));
@@ -537,7 +958,7 @@ public boolean onTouchEvent(MotionEvent event) {
             GradientDrawable gd = new GradientDrawable(go, colors);
             setBackgroundDrawable(gd);
             pagerSlidingTabStripContainer.setBackgroundColor(0x00000000);
-            scrollSlidingTabStrip.setUnderlineColor(0x00000000);
+            if(scrollSlidingTabStrip != null)scrollSlidingTabStrip.setUnderlineColor(0x00000000);
             pagerSlidingTabStrip.setUnderlineColor(0x00000000);
             view.setBackgroundColor(0x00000000);
         }
@@ -556,11 +977,26 @@ public boolean onTouchEvent(MotionEvent event) {
 
         addView(pager, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.LEFT | Gravity.TOP, 0, 48, 0, 0));
 
-        loadRecents();
+        emojiSize = AndroidUtilities.dp(AndroidUtilities.isTablet() ? 40 : 32);
+        pickerView = new EmojiColorPickerView(context);
+        pickerViewPopup = new EmojiPopupWindow(pickerView, popupWidth = AndroidUtilities.dp((AndroidUtilities.isTablet() ? 40 : 32) * 6 + 10 + 4 * 5), popupHeight = AndroidUtilities.dp(AndroidUtilities.isTablet() ? 64 : 56));
+        pickerViewPopup.setOutsideTouchable(true);
+        pickerViewPopup.setClippingEnabled(true);
+        pickerViewPopup.setInputMethodMode(EmojiPopupWindow.INPUT_METHOD_NOT_NEEDED);
+        pickerViewPopup.setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_UNSPECIFIED);
+        pickerViewPopup.getContentView().setFocusableInTouchMode(true);
+        pickerViewPopup.getContentView().setOnKeyListener(new OnKeyListener() {
+            @Override
+            public boolean onKey(View v, int keyCode, KeyEvent event) {
+                if (keyCode == KeyEvent.KEYCODE_MENU && event.getRepeatCount() == 0 && event.getAction() == KeyEvent.ACTION_UP && pickerViewPopup != null && pickerViewPopup.isShowing()) {
+                    pickerViewPopup.dismiss();
+                    return true;
+                }
+                return false;
+            }
+        });
 
-        if (Emoji.data[0] == null || Emoji.data[0].length == 0) {
-            pager.setCurrentItem(1);
-        }
+        loadRecents();
     }
 
     private void onPageScrolled(int position, int width, int positionOffsetPixels) {
@@ -629,7 +1065,21 @@ private String convert(long paramLong) {
     private void saveRecentEmoji() {
         SharedPreferences preferences = getContext().getSharedPreferences("emoji", Activity.MODE_PRIVATE);
         StringBuilder stringBuilder = new StringBuilder();
-        for (HashMap.Entry<Long, Integer> entry : emojiUseHistory.entrySet()) {
+        for (HashMap.Entry<String, Integer> entry : emojiUseHistory.entrySet()) {
+            if (stringBuilder.length() != 0) {
+                stringBuilder.append(",");
+            }
+            stringBuilder.append(entry.getKey());
+            stringBuilder.append("=");
+            stringBuilder.append(entry.getValue());
+        }
+        preferences.edit().putString("emojis2", stringBuilder.toString()).commit();
+    }
+
+    private void saveEmojiColors() {
+        SharedPreferences preferences = getContext().getSharedPreferences("emoji", Activity.MODE_PRIVATE);
+        StringBuilder stringBuilder = new StringBuilder();
+        for (HashMap.Entry<String, String> entry : emojiColor.entrySet()) {
             if (stringBuilder.length() != 0) {
                 stringBuilder.append(",");
             }
@@ -637,7 +1087,7 @@ private void saveRecentEmoji() {
             stringBuilder.append("=");
             stringBuilder.append(entry.getValue());
         }
-        preferences.edit().putString("emojis", stringBuilder.toString()).commit();
+        preferences.edit().putString("color", stringBuilder.toString()).commit();
     }
 
     private void saveRecentStickers() {
@@ -684,12 +1134,12 @@ private void saveRecentStickers() {
 
     private void sortEmoji() {
         recentEmoji.clear();
-        for (HashMap.Entry<Long, Integer> entry : emojiUseHistory.entrySet()) {
+        for (HashMap.Entry<String, Integer> entry : emojiUseHistory.entrySet()) {
             recentEmoji.add(entry.getKey());
         }
-        Collections.sort(recentEmoji, new Comparator<Long>() {
+        Collections.sort(recentEmoji, new Comparator<String>() {
             @Override
-            public int compare(Long lhs, Long rhs) {
+            public int compare(String lhs, String rhs) {
                 Integer count1 = emojiUseHistory.get(lhs);
                 Integer count2 = emojiUseHistory.get(rhs);
                 if (count1 == null) {
@@ -797,40 +1247,49 @@ public void loadRecents() {
         String str;
         SharedPreferences preferences = getContext().getSharedPreferences("emoji", Activity.MODE_PRIVATE);
 
-        if (preferences.contains("recents")) {
             try {
-                str = preferences.getString("recents", "");
+                emojiUseHistory.clear();
+            if (preferences.contains("emojis")) {
+                str = preferences.getString("emojis", "");
                 if (str != null && str.length() > 0) {
                     String[] args = str.split(",");
-                for (int i = 0; i < args.length; i++) {
-                        emojiUseHistory.put(Long.parseLong(args[i]), args.length - i);
-            }
+                    for (String arg : args) {
+                        String[] args2 = arg.split("=");
+                        long value = Long.parseLong(args2[0]);
+                        String string = "";
+                        for (int a = 0; a < 4; a++) {
+                            char ch = (char) value;
+                            string = String.valueOf(ch) + string;
+                            value >>= 16;
+                            if (value == 0) {
+                                break;
+                            }
+                        }
+                        if (string.length() > 0) {
+                            emojiUseHistory.put(string, Integer.parseInt(args2[1]));
+                        }
+                    }
                 }
-            } catch (Exception e) {
-                FileLog.e("tmessages", e);
-            }
-            sortEmoji();
-            preferences.edit().remove("recents").commit();
-            saveRecentEmoji();
-            adapters.get(0).notifyDataSetChanged();
-        } else {
-            try {
-                emojiUseHistory.clear();
-                str = preferences.getString("emojis", "");
+                preferences.edit().remove("emojis").commit();
+                saveRecentEmoji();
+            } else {
+                str = preferences.getString("emojis2", "");
                 if (str != null && str.length() > 0) {
                     String[] args = str.split(",");
                     for (String arg : args) {
                         String[] args2 = arg.split("=");
-                        emojiUseHistory.put(Long.parseLong(args2[0]), Integer.parseInt(args2[1]));
+                        emojiUseHistory.put(args2[0], Integer.parseInt(args2[1]));
+                    }
                     }
                 }
                 if (emojiUseHistory.isEmpty()) {
-                    long[] newRecent = new long[]{0x00000000D83DDE02L, 0x00000000D83DDE18L, 0x0000000000002764L, 0x00000000D83DDE0DL, 0x00000000D83DDE0AL, 0x00000000D83DDE01L,
-                    0x00000000D83DDC4DL, 0x000000000000263AL, 0x00000000D83DDE14L, 0x00000000D83DDE04L, 0x00000000D83DDE2DL, 0x00000000D83DDC8BL,
-                    0x00000000D83DDE12L, 0x00000000D83DDE33L, 0x00000000D83DDE1CL, 0x00000000D83DDE48L, 0x00000000D83DDE09L, 0x00000000D83DDE03L,
-                    0x00000000D83DDE22L, 0x00000000D83DDE1DL, 0x00000000D83DDE31L, 0x00000000D83DDE21L, 0x00000000D83DDE0FL, 0x00000000D83DDE1EL,
-                    0x00000000D83DDE05L, 0x00000000D83DDE1AL, 0x00000000D83DDE4AL, 0x00000000D83DDE0CL, 0x00000000D83DDE00L, 0x00000000D83DDE0BL,
-                    0x00000000D83DDE06L, 0x00000000D83DDC4CL, 0x00000000D83DDE10L, 0x00000000D83DDE15L};
+                String[] newRecent = new String[]{
+                        "\uD83D\uDE02", "\uD83D\uDE18", "\u2764", "\uD83D\uDE0D", "\uD83D\uDE0A", "\uD83D\uDE01",
+                        "\uD83D\uDC4D", "\u263A", "\uD83D\uDE14", "\uD83D\uDE04", "\uD83D\uDE2D", "\uD83D\uDC8B",
+                        "\uD83D\uDE12", "\uD83D\uDE33", "\uD83D\uDE1C", "\uD83D\uDE48", "\uD83D\uDE09", "\uD83D\uDE03",
+                        "\uD83D\uDE22", "\uD83D\uDE1D", "\uD83D\uDE31", "\uD83D\uDE21", "\uD83D\uDE0F", "\uD83D\uDE1E",
+                        "\uD83D\uDE05", "\uD83D\uDE1A", "\uD83D\uDE4A", "\uD83D\uDE0C", "\uD83D\uDE00", "\uD83D\uDE0B",
+                        "\uD83D\uDE06", "\uD83D\uDC4C", "\uD83D\uDE10", "\uD83D\uDE15"};
                     for (int i = 0; i < newRecent.length; i++) {
                         emojiUseHistory.put(newRecent[i], newRecent.length - i);
                     }
@@ -841,6 +1300,18 @@ public void loadRecents() {
             } catch (Exception e) {
                 FileLog.e("tmessages", e);
             }
+
+        try {
+            str = preferences.getString("color", "");
+            if (str != null && str.length() > 0) {
+                String[] args = str.split(",");
+                for (String arg : args) {
+                    String[] args2 = arg.split("=");
+                    emojiColor.put(args2[0], args2[1]);
+                }
+            }
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
         }
 
         if (showStickers) {
@@ -961,6 +1432,9 @@ protected void onDetachedFromWindow() {
         if (stickersGridAdapter != null) {
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.stickersDidLoaded);
         }
+        if (pickerViewPopup != null && pickerViewPopup.isShowing()) {
+            pickerViewPopup.dismiss();
+        }
     }
 
     @Override
@@ -1128,7 +1602,7 @@ public int getCount() {
             if (emojiPage == -1) {
                 return recentEmoji.size();
             }
-            return Emoji.data[emojiPage].length;
+            return EmojiData.dataColored[emojiPage].length;
         }
 
         public Object getItem(int i) {
@@ -1141,51 +1615,22 @@ public long getItemId(int position) {
         }
 
         public View getView(int i, View view, ViewGroup paramViewGroup) {
-            ImageView imageView = (ImageView)view;
+            ImageViewEmoji imageView = (ImageViewEmoji) view;
             if (imageView == null) {
-                imageView = new ImageView(getContext()) {
-                    public void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-                        setMeasuredDimension(View.MeasureSpec.getSize(widthMeasureSpec), View.MeasureSpec.getSize(widthMeasureSpec));
-                    }
-                };
-                imageView.setOnClickListener(new View.OnClickListener() {
-                    public void onClick(View view) {
-                        Long code = (Long) view.getTag();
-                        Integer count = emojiUseHistory.get(code);
-                        if (count == null) {
-                            count = 0;
-                        }
-                        if (count == 0 && emojiUseHistory.size() > 50) {
-                            for (int a = recentEmoji.size() - 1; a >= 0; a--) {
-                                Long emoji = recentEmoji.get(a);
-                                emojiUseHistory.remove(emoji);
-                                recentEmoji.remove(a);
-                                if (emojiUseHistory.size() <= 50) {
-                                    break;
-                                }
-                            }
-                        }
-                        emojiUseHistory.put(code, ++count);
-                        if (pager.getCurrentItem() != 0) {
-                            sortEmoji();
-                        }
-                        saveRecentEmoji();
-                        adapters.get(0).notifyDataSetChanged();
-                        if (listener != null) {
-                            listener.onEmojiSelected(convert((Long)view.getTag()));
-                        }
-                    }
-                });
-                imageView.setBackgroundResource(R.drawable.list_selector);
-                imageView.setScaleType(ImageView.ScaleType.CENTER);
+                imageView = new ImageViewEmoji(getContext());
             }
-            long code;
+            String code;
+            String coloredCode;
             if (emojiPage == -1) {
-                code = recentEmoji.get(i);
+                coloredCode = code = recentEmoji.get(i);
             } else {
-                code = Emoji.data[emojiPage][i];
+                coloredCode = code = EmojiData.dataColored[emojiPage][i];
+                String color = emojiColor.get(code);
+                if (color != null) {
+                    coloredCode += color;
+                }
             }
-            imageView.setImageDrawable(Emoji.getEmojiBigDrawable(code));
+            imageView.setImageDrawable(Emoji.getEmojiBigDrawable(coloredCode));
             imageView.setTag(code);
             return imageView;
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ForegroundDetector.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ForegroundDetector.java
index 26323f5e9..1db8f6328 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ForegroundDetector.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ForegroundDetector.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/FrameLayoutFixed.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/FrameLayoutFixed.java
index cd169b3f9..26f791a4f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/FrameLayoutFixed.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/FrameLayoutFixed.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/IdenticonDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/IdenticonDrawable.java
index 394b6af40..0d0e70d8b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/IdenticonDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/IdenticonDrawable.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/LayoutHelper.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/LayoutHelper.java
index c1a65b6cc..700d58277 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/LayoutHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/LayoutHelper.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/LetterSectionsListView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/LetterSectionsListView.java
index fbac8a24a..60a26421c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/LetterSectionsListView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/LetterSectionsListView.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/LineProgressView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/LineProgressView.java
index 9b7db2ce6..26e73d7b2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/LineProgressView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/LineProgressView.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/MapPlaceholderDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/MapPlaceholderDrawable.java
index c522342d4..7c4ba414f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/MapPlaceholderDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/MapPlaceholderDrawable.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PagerSlidingTabStrip.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PagerSlidingTabStrip.java
index 4ca7692fa..0531e8e95 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PagerSlidingTabStrip.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PagerSlidingTabStrip.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
@@ -323,7 +323,6 @@ protected void onDraw(Canvas canvas) {
         @Override
         public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
             currentPosition = position;
-
             currentPositionOffset = positionOffset;
             scrollToChild(position, (int) (positionOffset * tabsContainer.getChildAt(position).getWidth()));
             invalidate();
@@ -347,9 +346,6 @@ public void onPageSelected(int position) {
             if (delegatePageListener != null) {
                 delegatePageListener.onPageSelected(position);
             }
-            //plus
-            //if(position == currentPosition)paintTabIcons(position);
-            //
             for (int a = 0; a < tabsContainer.getChildCount(); a++) {
                 tabsContainer.getChildAt(a).setSelected(a == position);
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
index a8a2015e1..86d093d65 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
@@ -9,7 +9,9 @@
 package org.telegram.ui.Components;
 
 import android.app.Activity;
+import android.app.AlertDialog;
 import android.content.Context;
+import android.content.DialogInterface;
 import android.content.SharedPreferences;
 import android.content.res.Configuration;
 import android.graphics.Canvas;
@@ -19,6 +21,8 @@
 import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.os.Vibrator;
+import android.support.v4.hardware.fingerprint.FingerprintManagerCompat;
+import android.support.v4.os.CancellationSignal;
 import android.text.Editable;
 import android.text.InputFilter;
 import android.text.InputType;
@@ -38,6 +42,7 @@
 import android.widget.EditText;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
+import android.widget.RelativeLayout;
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
@@ -185,7 +190,7 @@ public void run() {
                     currentAnimation.addListener(new AnimatorListenerAdapterProxy() {
                         @Override
                         public void onAnimationEnd(Object animation) {
-                            if (animation.equals(currentAnimation)) {
+                            if (currentAnimation != null && currentAnimation.equals(animation)) {
                                 currentAnimation = null;
                             }
                         }
@@ -219,7 +224,7 @@ public void onAnimationEnd(Object animation) {
             currentAnimation.addListener(new AnimatorListenerAdapterProxy() {
                 @Override
                 public void onAnimationEnd(Object animation) {
-                    if (animation.equals(currentAnimation)) {
+                    if (currentAnimation != null && currentAnimation.equals(animation)) {
                         currentAnimation = null;
                     }
                 }
@@ -296,7 +301,7 @@ public void eraseLastCharacter() {
             currentAnimation.addListener(new AnimatorListenerAdapterProxy() {
                 @Override
                 public void onAnimationEnd(Object animation) {
-                    if (animation.equals(currentAnimation)) {
+                    if (currentAnimation != null && currentAnimation.equals(animation)) {
                         currentAnimation = null;
                     }
                 }
@@ -304,7 +309,7 @@ public void onAnimationEnd(Object animation) {
             currentAnimation.start();
         }
 
-        private void eraseAllCharacters(boolean animated) {
+        private void eraseAllCharacters(final boolean animated) {
             if (stringBuilder.length() == 0) {
                 return;
             }
@@ -342,7 +347,7 @@ private void eraseAllCharacters(boolean animated) {
                 currentAnimation.addListener(new AnimatorListenerAdapterProxy() {
                     @Override
                     public void onAnimationEnd(Object animation) {
-                        if (animation.equals(currentAnimation)) {
+                        if (currentAnimation != null && currentAnimation.equals(animation)) {
                             currentAnimation = null;
                         }
                     }
@@ -409,10 +414,19 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
     private ImageView checkImage;
     private int keyboardHeight = 0;
 
+    private CancellationSignal cancellationSignal;
+    private ImageView fingerprintImageView;
+    private TextView fingerprintStatusTextView;
+    private boolean selfCancelled;
+    private AlertDialog fingerprintDialog;
+
     private Rect rect = new Rect();
 
     private PasscodeViewDelegate delegate;
 
+    private final static int id_fingerprint_textview = 1000;
+    private final static int id_fingerprint_imageview = 1001;
+
     public PasscodeView(final Context context) {
         super(context);
 
@@ -497,7 +511,7 @@ public PasscodeView(final Context context) {
             @Override
             public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
                 if (i == EditorInfo.IME_ACTION_DONE) {
-                    processDone();
+                    processDone(false);
                     return true;
                 }
                 return false;
@@ -517,7 +531,7 @@ public void onTextChanged(CharSequence s, int start, int before, int count) {
             @Override
             public void afterTextChanged(Editable s) {
                 if (passwordEditText.length() == 4 && UserConfig.passcodeType == 0) {
-                    processDone();
+                    processDone(false);
                 }
             }
         });
@@ -561,7 +575,7 @@ public boolean onActionItemClicked(ActionMode mode, MenuItem item) {
         checkImage.setOnClickListener(new OnClickListener() {
             @Override
             public void onClick(View v) {
-                processDone();
+                processDone(false);
             }
         });
 
@@ -707,7 +721,7 @@ public void onClick(View v) {
                             break;
                     }
                     if (passwordEditText2.lenght() == 4) {
-                        processDone();
+                        processDone(false);
                     }
                 }
             });
@@ -728,7 +742,8 @@ public void setDelegate(PasscodeViewDelegate delegate) {
         this.delegate = delegate;
     }
 
-    private void processDone() {
+    private void processDone(boolean fingerprint) {
+        if (!fingerprint) {
         String password = "";
         if (UserConfig.passcodeType == 0) {
             password = passwordEditText2.getString();
@@ -745,6 +760,7 @@ private void processDone() {
             onPasscodeError();
             return;
         }
+        }
         passwordEditText.clearFocus();
         AndroidUtilities.hideKeyboard(passwordEditText);
 
@@ -816,16 +832,148 @@ public void run() {
                 }
             }, 200);
         }
+        checkFingerprint();
+    }
+
+    public void onPause() {
+        if (fingerprintDialog != null) {
+            try {
+                if (fingerprintDialog.isShowing()) {
+                    fingerprintDialog.dismiss();
+                }
+                fingerprintDialog = null;
+            } catch (Exception e) {
+                FileLog.e("tmessages", e);
+            }
+        }
+        try {
+            if (Build.VERSION.SDK_INT >= 23 && cancellationSignal != null) {
+                cancellationSignal.cancel();
+                cancellationSignal = null;
+            }
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+        }
+    }
+
+    private void checkFingerprint() {
+            Activity parentActivity = (Activity) getContext();
+        if (Build.VERSION.SDK_INT >= 23 && parentActivity != null && UserConfig.useFingerprint && !ApplicationLoader.mainInterfacePaused) {
+            try {
+                if (fingerprintDialog != null && fingerprintDialog.isShowing()) {
+                    return;
+                }
+            } catch (Exception e) {
+                FileLog.e("tmessages", e);
+            }
+            try {
+                FingerprintManagerCompat fingerprintManager = FingerprintManagerCompat.from(ApplicationLoader.applicationContext);
+                if (fingerprintManager.isHardwareDetected() && fingerprintManager.hasEnrolledFingerprints()) {
+                    RelativeLayout relativeLayout = new RelativeLayout(getContext());
+                    relativeLayout.setPadding(AndroidUtilities.dp(24), AndroidUtilities.dp(16), AndroidUtilities.dp(24), AndroidUtilities.dp(8));
+
+                    TextView fingerprintTextView = new TextView(getContext());
+                    fingerprintTextView.setTextColor(0xff939393);
+                    fingerprintTextView.setId(id_fingerprint_textview);
+                    fingerprintTextView.setTextAppearance(android.R.style.TextAppearance_Material_Subhead);
+                    fingerprintTextView.setText(LocaleController.getString("FingerprintInfo", R.string.FingerprintInfo));
+                    relativeLayout.addView(fingerprintTextView);
+                    RelativeLayout.LayoutParams layoutParams = LayoutHelper.createRelative(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT);
+                    layoutParams.addRule(RelativeLayout.ALIGN_PARENT_TOP);
+                    layoutParams.addRule(RelativeLayout.ALIGN_PARENT_START);
+                    fingerprintTextView.setLayoutParams(layoutParams);
+
+                    fingerprintImageView = new ImageView(getContext());
+                    fingerprintImageView.setImageResource(R.drawable.ic_fp_40px);
+                    fingerprintImageView.setId(id_fingerprint_imageview);
+                    relativeLayout.addView(fingerprintImageView, LayoutHelper.createRelative(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, 0, 20, 0, 0, RelativeLayout.ALIGN_PARENT_START, RelativeLayout.BELOW, id_fingerprint_textview));
+
+                    fingerprintStatusTextView = new TextView(getContext());
+                    fingerprintStatusTextView.setGravity(Gravity.CENTER_VERTICAL);
+                    fingerprintStatusTextView.setText(LocaleController.getString("FingerprintHelp", R.string.FingerprintHelp));
+                    fingerprintStatusTextView.setTextAppearance(android.R.style.TextAppearance_Material_Body1);
+                    fingerprintStatusTextView.setTextColor(0x42000000);
+                    relativeLayout.addView(fingerprintStatusTextView);
+                    layoutParams = LayoutHelper.createRelative(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT);
+                    layoutParams.setMarginStart(AndroidUtilities.dp(16));
+                    layoutParams.addRule(RelativeLayout.ALIGN_BOTTOM, id_fingerprint_imageview);
+                    layoutParams.addRule(RelativeLayout.ALIGN_TOP, id_fingerprint_imageview);
+                    layoutParams.addRule(RelativeLayout.END_OF, id_fingerprint_imageview);
+                    fingerprintStatusTextView.setLayoutParams(layoutParams);
+
+                    AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
+                    builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
+                    builder.setView(relativeLayout);
+                    builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                    builder.setOnDismissListener(new DialogInterface.OnDismissListener() {
+                        @Override
+                        public void onDismiss(DialogInterface dialog) {
+                            if (cancellationSignal != null) {
+                                selfCancelled = true;
+                                cancellationSignal.cancel();
+                                cancellationSignal = null;
+                            }
+                        }
+                    });
+                    if (fingerprintDialog != null) {
+                        try {
+                            if (fingerprintDialog.isShowing()) {
+                                fingerprintDialog.dismiss();
+                            }
+                        } catch (Exception e) {
+                            FileLog.e("tmessages", e);
+                        }
+                    }
+                    fingerprintDialog = builder.show();
+
+                    cancellationSignal = new CancellationSignal();
+                    selfCancelled = false;
+                    fingerprintManager.authenticate(null, 0, cancellationSignal, new FingerprintManagerCompat.AuthenticationCallback() {
+                        @Override
+                        public void onAuthenticationError(int errMsgId, CharSequence errString) {
+                            if (!selfCancelled) {
+                                showFingerprintError(errString);
+                            }
+                        }
+
+                        @Override
+                        public void onAuthenticationHelp(int helpMsgId, CharSequence helpString) {
+                            showFingerprintError(helpString);
+                        }
+
+                        @Override
+                        public void onAuthenticationFailed() {
+                            showFingerprintError(LocaleController.getString("FingerprintNotRecognized", R.string.FingerprintNotRecognized));
+                        }
+
+                        @Override
+                        public void onAuthenticationSucceeded(FingerprintManagerCompat.AuthenticationResult result) {
+                            try {
+                                if (fingerprintDialog.isShowing()) {
+                                    fingerprintDialog.dismiss();
+                                }
+                            } catch (Exception e) {
+                                FileLog.e("tmessages", e);
+                            }
+                            fingerprintDialog = null;
+                            processDone(true);
+                        }
+                    }, null);
+                }
+            } catch (Throwable e) {
+                //ignore
+            }
+        }
     }
 
     public void onShow() {
+        Activity parentActivity = (Activity) getContext();
         if (UserConfig.passcodeType == 1) {
             if (passwordEditText != null) {
                 passwordEditText.requestFocus();
                 AndroidUtilities.showKeyboard(passwordEditText);
             }
         } else {
-            Activity parentActivity = (Activity) getContext();
             if (parentActivity != null) {
                 View currentFocus = parentActivity.getCurrentFocus();
                 if (currentFocus != null) {
@@ -834,6 +982,7 @@ public void onShow() {
                 }
             }
         }
+        checkFingerprint();
         if (getVisibility() == View.VISIBLE) {
             return;
         }
@@ -893,6 +1042,17 @@ public boolean onTouch(View v, MotionEvent event) {
         });
     }
 
+    private void showFingerprintError(CharSequence error) {
+        fingerprintImageView.setImageResource(R.drawable.ic_fingerprint_error);
+        fingerprintStatusTextView.setText(error);
+        fingerprintStatusTextView.setTextColor(0xfff4511e);
+        Vibrator v = (Vibrator) getContext().getSystemService(Context.VIBRATOR_SERVICE);
+        if (v != null) {
+            v.vibrate(200);
+        }
+        AndroidUtilities.shakeView(fingerprintStatusTextView, 2, 0);
+    }
+
     @Override
     protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         int width = MeasureSpec.getSize(widthMeasureSpec);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoCropView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoCropView.java
index 6ea153f3b..f61de0265 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoCropView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoCropView.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
@@ -348,8 +348,7 @@ public float getLimitHeight() {
     private Bitmap createBitmap(int x, int y, int w, int h) {
         Bitmap bitmap = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888);
         Canvas canvas = new Canvas(bitmap);
-        Paint paint = new Paint();
-        paint.setFilterBitmap(true);
+        Paint paint = new Paint(Paint.FILTER_BITMAP_FLAG | Paint.DITHER_FLAG);
 
         Matrix matrix = new Matrix();
         matrix.setTranslate(-bitmapToEdit.getWidth() / 2, -bitmapToEdit.getHeight() / 2);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoEditorSeekBar.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoEditorSeekBar.java
index 5258a6512..a6bf84430 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoEditorSeekBar.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoEditorSeekBar.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterBlurControl.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterBlurControl.java
index d93099272..137ddc70a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterBlurControl.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterBlurControl.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java
index 3007ddb32..0c14662f9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterView.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
index a50558113..9dc34b602 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoViewerCaptionEnterView.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/Point.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/Point.java
index f22dde478..7e6fb2ba9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/Point.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/Point.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java
index be0123392..71908c83a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PopupAudioView.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.4.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ProgressView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ProgressView.java
index 58b52ad5c..d5e7f3773 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ProgressView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ProgressView.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/RadialProgress.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/RadialProgress.java
index f9dca6b1c..ae01fcf1e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/RadialProgress.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/RadialProgress.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/RecordStatusDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/RecordStatusDrawable.java
index 558d8404e..4f0e6a8cb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/RecordStatusDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/RecordStatusDrawable.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/Rect.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/Rect.java
index 9dde354b9..ef88d877b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/Rect.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/Rect.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/RecyclerListView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/RecyclerListView.java
index dc0c32a29..7d29cd0cd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/RecyclerListView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/RecyclerListView.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
@@ -49,7 +49,7 @@
     }
 
     public interface OnItemLongClickListener {
-        void onItemClick(View view, int position);
+        boolean onItemClick(View view, int position);
     }
 
     public interface OnInterceptTouchListener {
@@ -97,8 +97,9 @@ public void run() {
                 @Override
                 public void onLongPress(MotionEvent e) {
                     if (currentChildView != null && onItemLongClickListener != null) {
-                        currentChildView.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
-                        onItemLongClickListener.onItemClick(currentChildView, currentChildPosition);
+                        if (onItemLongClickListener.onItemClick(currentChildView, currentChildPosition)) {
+                            currentChildView.performHapticFeedback(HapticFeedbackConstants.LONG_PRESS);
+                        }
                     }
                 }
             });
@@ -164,7 +165,15 @@ public void onTouchEvent(RecyclerView view, MotionEvent e) {
 
         @Override
         public void onRequestDisallowInterceptTouchEvent(boolean disallowIntercept) {
-
+            if (selectChildRunnable != null) {
+                AndroidUtilities.cancelRunOnUIThread(selectChildRunnable);
+                selectChildRunnable = null;
+            }
+            if (currentChildView != null) {
+                currentChildView.setPressed(false);
+                currentChildView = null;
+            }
+            interceptedByChild = false;
         }
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ResourceLoader.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ResourceLoader.java
index 93b0feca4..f02b47953 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ResourceLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ResourceLoader.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
@@ -134,7 +134,15 @@ public static void loadRecources(Context context) {
 
             geoInDrawable = context.getResources().getDrawable(R.drawable.location_b);
             geoOutDrawable = context.getResources().getDrawable(R.drawable.location_g);
-
+            
+            context.getResources().getDrawable(R.drawable.attach_camera_states);
+            context.getResources().getDrawable(R.drawable.attach_gallery_states);
+            context.getResources().getDrawable(R.drawable.attach_video_states);
+            context.getResources().getDrawable(R.drawable.attach_audio_states);
+            context.getResources().getDrawable(R.drawable.attach_file_states);
+            context.getResources().getDrawable(R.drawable.attach_contact_states);
+            context.getResources().getDrawable(R.drawable.attach_location_states);
+            context.getResources().getDrawable(R.drawable.attach_hide_states);
        // }
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/Scroller.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/Scroller.java
index 56890bfb2..a42617994 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/Scroller.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/Scroller.java
@@ -369,7 +369,7 @@ public void fling(int startX, int startY, int velocityX, int velocityY,
 
             float dx = (float) (mFinalX - mStartX);
             float dy = (float) (mFinalY - mStartY);
-            float hyp = FloatMath.sqrt(dx * dx + dy * dy);
+            float hyp = (float) Math.sqrt(dx * dx + dy * dy);
 
             float ndx = dx / hyp;
             float ndy = dy / hyp;
@@ -386,7 +386,7 @@ public void fling(int startX, int startY, int velocityX, int velocityY,
         mMode = FLING_MODE;
         mFinished = false;
 
-        float velocity = FloatMath.sqrt(velocityX * velocityX + velocityY * velocityY);
+        float velocity = (float) Math.sqrt(velocityX * velocityX + velocityY * velocityY);
      
         mVelocity = velocity;
         float ALPHA = 800;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/SectionsListView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/SectionsListView.java
index 441938c38..b10564746 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/SectionsListView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/SectionsListView.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/SeekBar.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/SeekBar.java
index 447644072..9b315e9e2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/SeekBar.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/SeekBar.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/SendingFileDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/SendingFileDrawable.java
index 7f6de6f78..b74314b57 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/SendingFileDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/SendingFileDrawable.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/SendingFileEx2Drawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/SendingFileEx2Drawable.java
index f68c73b08..9a6f2857e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/SendingFileEx2Drawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/SendingFileEx2Drawable.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/SendingFileExDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/SendingFileExDrawable.java
index 47a1a8c9e..22af5a8bc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/SendingFileExDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/SendingFileExDrawable.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/SimpleTextView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/SimpleTextView.java
index 2a1a0a8a3..eaf03eaf6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/SimpleTextView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/SimpleTextView.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/Size.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/Size.java
index 986c40703..a793a2053 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/Size.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/Size.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/SlideView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/SlideView.java
index a1ae84c65..cc27b2e6a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/SlideView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/SlideView.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/SlidingTabView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/SlidingTabView.java
index 8e30cc027..859ee42b8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/SlidingTabView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/SlidingTabView.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/StaticLayoutEx.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/StaticLayoutEx.java
index f918c1b3c..cd464f6be 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/StaticLayoutEx.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/StaticLayoutEx.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/TimerDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/TimerDrawable.java
index ea98120d6..6f363f28a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/TimerDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/TimerDrawable.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/TypefaceSpan.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/TypefaceSpan.java
index 9f86fe3b7..c0a4e6504 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/TypefaceSpan.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/TypefaceSpan.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/TypingDotsDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/TypingDotsDrawable.java
index 21c7468a1..d25ca387d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/TypingDotsDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/TypingDotsDrawable.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/URLSpanNoUnderline.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/URLSpanNoUnderline.java
index 8debb5211..b2ff88819 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/URLSpanNoUnderline.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/URLSpanNoUnderline.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/VideoSeekBarView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/VideoSeekBarView.java
index d7ac826c2..14c87235a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/VideoSeekBarView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/VideoSeekBarView.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/VideoTimelineView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/VideoTimelineView.java
index b4cca99d4..3f9ba71cb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/VideoTimelineView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/VideoTimelineView.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui.Components;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
index 1aafe718a..86c6f7810 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactAddActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -297,8 +297,10 @@ public void onResume() {
     }
 
     @Override
-    public void onOpenAnimationEnd() {
-        firstNameField.requestFocus();
-        AndroidUtilities.showKeyboard(firstNameField);
+    public void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
+        if (isOpen) {
+            firstNameField.requestFocus();
+            AndroidUtilities.showKeyboard(firstNameField);
+        }
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
index 956390dfd..6588ba78b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ContactsActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java
index b57c3cbe0..e34a29daf 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/CountrySelectActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
index 93b43bfdf..2ec465e5d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/DocumentSelectActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -14,33 +14,34 @@
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
+import android.content.res.Configuration;
 import android.os.Build;
 import android.os.Environment;
 import android.os.StatFs;
-import android.text.TextUtils;
-import android.view.Gravity;
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
+import android.view.ViewTreeObserver;
 import android.widget.AbsListView;
 import android.widget.AdapterView;
-import android.widget.LinearLayout;
 import android.widget.ListView;
 import android.widget.TextView;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
+import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.R;
-import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
-import org.telegram.messenger.AnimationCompat.AnimatorSetProxy;
-import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
+import org.telegram.ui.ActionBar.BackDrawable;
 import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.SharedDocumentCell;
 import org.telegram.ui.Components.LayoutHelper;
+import org.telegram.ui.Components.NumberTextView;
 
 import java.io.BufferedReader;
 import java.io.File;
@@ -61,7 +62,7 @@
 
     private ListView listView;
     private ListAdapter listAdapter;
-    private TextView selectedMessagesCountTextView;
+    private NumberTextView selectedMessagesCountTextView;
     private TextView emptyView;
 
     private File currentDir;
@@ -148,18 +149,20 @@ public View createView(Context context) {
             ApplicationLoader.applicationContext.registerReceiver(receiver, filter);
         }
 
-            actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        actionBar.setBackButtonDrawable(new BackDrawable(false));
             actionBar.setAllowOverlayTitle(true);
             actionBar.setTitle(LocaleController.getString("SelectFile", R.string.SelectFile));
             actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
                 @Override
                 public void onItemClick(int id) {
                     if (id == -1) {
-                        finishFragment();
-                    } else if (id == -2) {
+                    if (actionBar.isActionModeShowed()) {
                         selectedFiles.clear();
                         actionBar.hideActionMode();
                         listView.invalidateViews();
+                    } else {
+                        finishFragment();
+                    }
                     } else if (id == done) {
                         if (delegate != null) {
                             ArrayList<String> files = new ArrayList<>();
@@ -173,29 +176,19 @@ public void onItemClick(int id) {
             actionModeViews.clear();
 
             final ActionBarMenu actionMode = actionBar.createActionMode();
-            actionModeViews.add(actionMode.addItem(-2, R.drawable.ic_ab_back_grey, R.drawable.bar_selector_mode, null, AndroidUtilities.dp(54)));
+            //actionModeViews.add(actionMode.addItem(-2, R.drawable.ic_ab_back_grey, R.drawable.bar_selector_mode, null, AndroidUtilities.dp(54)));
 
-            selectedMessagesCountTextView = new TextView(actionMode.getContext());
+            selectedMessagesCountTextView = new NumberTextView(actionMode.getContext());
             selectedMessagesCountTextView.setTextSize(18);
             selectedMessagesCountTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
             selectedMessagesCountTextView.setTextColor(0xff737373);
-            selectedMessagesCountTextView.setSingleLine(true);
-            selectedMessagesCountTextView.setLines(1);
-            selectedMessagesCountTextView.setEllipsize(TextUtils.TruncateAt.END);
-            selectedMessagesCountTextView.setPadding(AndroidUtilities.dp(11), 0, 0, AndroidUtilities.dp(2));
-            selectedMessagesCountTextView.setGravity(Gravity.CENTER_VERTICAL);
             selectedMessagesCountTextView.setOnTouchListener(new View.OnTouchListener() {
                 @Override
                 public boolean onTouch(View v, MotionEvent event) {
                     return true;
                 }
             });
-            actionMode.addView(selectedMessagesCountTextView);
-        LinearLayout.LayoutParams layoutParams = (LinearLayout.LayoutParams) selectedMessagesCountTextView.getLayoutParams();
-            layoutParams.weight = 1;
-            layoutParams.width = 0;
-        layoutParams.height = LayoutHelper.MATCH_PARENT;
-            selectedMessagesCountTextView.setLayoutParams(layoutParams);
+        actionMode.addView(selectedMessagesCountTextView, LayoutHelper.createLinear(0, LayoutHelper.MATCH_PARENT, 1.0f, 65, 0, 0, 0));
 
             actionModeViews.add(actionMode.addItem(done, R.drawable.ic_ab_done_gray, R.drawable.bar_selector_mode, null, AndroidUtilities.dp(54)));
 
@@ -247,19 +240,15 @@ public boolean onItemLongClick(AdapterView<?> parent, View view, int i, long id)
                             return false;
                         }
                         selectedFiles.put(file.toString(), item);
-                        selectedMessagesCountTextView.setText(String.format("%d", selectedFiles.size()));
+                    selectedMessagesCountTextView.setNumber(1, false);
                         if (Build.VERSION.SDK_INT >= 11) {
                             AnimatorSetProxy animatorSet = new AnimatorSetProxy();
                             ArrayList<Object> animators = new ArrayList<>();
                             for (int a = 0; a < actionModeViews.size(); a++) {
                                 View view2 = actionModeViews.get(a);
                                 AndroidUtilities.clearDrawableAnimation(view2);
-                                if (a < 1) {
-                                    animators.add(ObjectAnimatorProxy.ofFloat(view2, "translationX", -AndroidUtilities.dp(56), 0));
-                                } else {
                                     animators.add(ObjectAnimatorProxy.ofFloat(view2, "scaleY", 0.1f, 1.0f));
                                 }
-                            }
                             animatorSet.playTogether(animators);
                             animatorSet.setDuration(250);
                             animatorSet.start();
@@ -334,7 +323,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                             if (selectedFiles.isEmpty()) {
                                 actionBar.hideActionMode();
                             } else {
-                                selectedMessagesCountTextView.setText(String.format("%d", selectedFiles.size()));
+                            selectedMessagesCountTextView.setNumber(selectedFiles.size(), true);
                             }
                             scrolling = false;
                             if (view instanceof SharedDocumentCell) {
@@ -362,6 +351,34 @@ public void onResume() {
         if (listAdapter != null) {
             listAdapter.notifyDataSetChanged();
         }
+        fixLayoutInternal();
+    }
+
+    @Override
+    public void onConfigurationChanged(android.content.res.Configuration newConfig) {
+        super.onConfigurationChanged(newConfig);
+        if (listView != null) {
+            ViewTreeObserver obs = listView.getViewTreeObserver();
+            obs.addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener() {
+                @Override
+                public boolean onPreDraw() {
+                    listView.getViewTreeObserver().removeOnPreDrawListener(this);
+                    fixLayoutInternal();
+                    return true;
+                }
+            });
+        }
+    }
+
+    private void fixLayoutInternal() {
+        if (selectedMessagesCountTextView == null) {
+            return;
+        }
+        if (!AndroidUtilities.isTablet() && ApplicationLoader.applicationContext.getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {
+            selectedMessagesCountTextView.setTextSize(18);
+        } else {
+            selectedMessagesCountTextView.setTextSize(20);
+        }
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
index 276323c46..df04f1b57 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java
index e9d157b18..67f086d08 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/GroupCreateFinalActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -375,9 +375,11 @@ public void restoreSelfArgs(Bundle args) {
     }
 
     @Override
-    public void onOpenAnimationEnd() {
-        nameTextView.requestFocus();
-        AndroidUtilities.showKeyboard(nameTextView);
+    public void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
+        if (isOpen) {
+            nameTextView.requestFocus();
+            AndroidUtilities.showKeyboard(nameTextView);
+        }
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/GroupInviteActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/GroupInviteActivity.java
index 65af539ea..389cb18ba 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/GroupInviteActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/GroupInviteActivity.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java
index f695fda44..61b620d0c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/IdenticonActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java
index 656445943..6a8129ebe 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/IntroActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java
index bc2566577..45292363d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LanguageSelectActivity.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LastSeenActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LastSeenActivity.java
index 1aafb3acb..a4578363d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LastSeenActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LastSeenActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -34,9 +34,9 @@
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
+import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.RequestDelegate;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
@@ -45,6 +45,7 @@
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.HeaderCell;
+import org.telegram.ui.Cells.LastSeenRadioCell;
 import org.telegram.ui.Cells.TextInfoPrivacyCell;
 import org.telegram.ui.Cells.TextSettingsCell;
 import org.telegram.ui.Components.LayoutHelper;
@@ -59,6 +60,7 @@
     private int currentType = 0;
     private ArrayList<Integer> currentPlus;
     private ArrayList<Integer> currentMinus;
+    private int lastCheckedType = -1;
 
     private int lastSeenSectionRow;
     private int everybodyRow;
@@ -184,6 +186,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, final int i, long
                         return;
                     }
                     doneButton.setVisibility(View.VISIBLE);
+                    lastCheckedType = currentType;
                     currentType = newType;
                     updateRows();
                 } else if (i == neverShareRow || i == alwaysShareRow) {
@@ -212,6 +215,7 @@ public void didSelectUsers(ArrayList<Integer> ids) {
                                     }
                                 }
                                 doneButton.setVisibility(View.VISIBLE);
+                                lastCheckedType = -1;
                                 listAdapter.notifyDataSetChanged();
                             }
                         });
@@ -396,6 +400,7 @@ private void updateRows() {
     @Override
     public void onResume() {
         super.onResume();
+        lastCheckedType = -1;
         if (listAdapter != null) {
             listAdapter.notifyDataSetChanged();
         }
@@ -459,20 +464,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     view.setBackgroundColor(0xffffffff);
                 }
                 TextSettingsCell textCell = (TextSettingsCell) view;
-                Drawable check = mContext.getResources().getDrawable(R.drawable.check_blue);
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
-                int color = preferences.getInt("themeColor", AndroidUtilities.defColor);
-                check.setColorFilter(color, PorterDuff.Mode.SRC_IN);
-                if (i == everybodyRow) {
-                    //textCell.setTextAndIcon(LocaleController.getString("LastSeenEverybody", R.string.LastSeenEverybody), currentType == 0 ? R.drawable.check_blue : 0, true);
-                    textCell.setTextAndIcon(LocaleController.getString("LastSeenEverybody", R.string.LastSeenEverybody), currentType == 0 ? check : null, true);
-                } else if (i == myContactsRow) {
-                    //textCell.setTextAndIcon(LocaleController.getString("LastSeenContacts", R.string.LastSeenContacts), currentType == 2 ? R.drawable.check_blue : 0, true);
-                    textCell.setTextAndIcon(LocaleController.getString("LastSeenContacts", R.string.LastSeenContacts), currentType == 2 ? check : null, true);
-                } else if (i == nobodyRow) {
-                    //textCell.setTextAndIcon(LocaleController.getString("LastSeenNobody", R.string.LastSeenNobody), currentType == 1 ? R.drawable.check_blue : 0, false);
-                    textCell.setTextAndIcon(LocaleController.getString("LastSeenNobody", R.string.LastSeenNobody), currentType == 1 ? check : null, false);
-                } else if (i == alwaysShareRow) {
+                if (i == alwaysShareRow) {
                     String value;
                     if (currentPlus.size() != 0) {
                         value = LocaleController.formatPluralString("Users", currentPlus.size());
@@ -511,25 +503,49 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 } else if (i == shareSectionRow) {
                     ((HeaderCell) view).setText(LocaleController.getString("AddExceptions", R.string.AddExceptions));
                 }
+            } else if (type == 3) {
+                if (view == null) {
+                    view = new LastSeenRadioCell(mContext);
+                    view.setBackgroundColor(0xffffffff);
+                }
+                LastSeenRadioCell textCell = (LastSeenRadioCell) view;
+                int checkedType = 0;
+                if (i == everybodyRow) {
+                    textCell.setText(LocaleController.getString("LastSeenEverybody", R.string.LastSeenEverybody), lastCheckedType == 0, true);
+                    checkedType = 0;
+                } else if (i == myContactsRow) {
+                    textCell.setText(LocaleController.getString("LastSeenContacts", R.string.LastSeenContacts), lastCheckedType == 2, true);
+                    checkedType = 2;
+                } else if (i == nobodyRow) {
+                    textCell.setText(LocaleController.getString("LastSeenNobody", R.string.LastSeenNobody), lastCheckedType == 1, false);
+                    checkedType = 1;
+                }
+                if (lastCheckedType == checkedType) {
+                    textCell.setChecked(false, true);
+                } else if (currentType == checkedType) {
+                    textCell.setChecked(true, true);
+                }
             }
             return view;
         }
 
         @Override
         public int getItemViewType(int i) {
-            if (i == alwaysShareRow || i == neverShareRow || i == everybodyRow || i == myContactsRow || i == nobodyRow) {
+            if (i == alwaysShareRow || i == neverShareRow) {
                 return 0;
             } else if (i == shareDetailRow || i == lastSeenDetailRow) {
                 return 1;
             } else if (i == lastSeenSectionRow || i == shareSectionRow) {
                 return 2;
+            } else if (i == everybodyRow || i == myContactsRow || i == nobodyRow) {
+                return 3;
             }
             return 0;
         }
 
         @Override
         public int getViewTypeCount() {
-            return 3;
+            return 4;
         }
 
         @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LastSeenUsersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LastSeenUsersActivity.java
index 7b4f6d4a6..a78e744c1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LastSeenUsersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LastSeenUsersActivity.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 502663dbd..d95da0a2d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -1,13 +1,14 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
 
+import android.annotation.TargetApi;
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.app.ProgressDialog;
@@ -15,6 +16,7 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.content.pm.PackageManager;
 import android.content.res.Configuration;
 import android.database.Cursor;
 import android.graphics.Point;
@@ -26,7 +28,6 @@
 import android.provider.ContactsContract;
 import android.support.annotation.NonNull;
 import android.view.ActionMode;
-import android.view.Gravity;
 import android.view.KeyEvent;
 import android.view.MotionEvent;
 import android.view.View;
@@ -47,7 +48,9 @@
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.BuildConfig;
 import org.telegram.messenger.ChatObject;
+import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.FileLog;
+import org.telegram.messenger.ImageLoader;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.MessagesStorage;
@@ -66,7 +69,6 @@
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.ActionBar.DrawerLayoutContainer;
 import org.telegram.ui.Adapters.DrawerLayoutAdapter;
-import org.telegram.ui.Components.DrawerPlayerView;
 import org.telegram.ui.Components.LayoutHelper;
 import org.telegram.ui.Components.PasscodeView;
 
@@ -271,22 +273,24 @@ public void onClick(View v) {
             drawerLayoutContainer.addView(actionBarLayout, new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
         }
 
-        FrameLayout listViewContainer = new FrameLayout(this);
-        listViewContainer.setBackgroundColor(0xffffffff);
-        drawerLayoutContainer.setDrawerLayout(listViewContainer);
-        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) listViewContainer.getLayoutParams();
-        Point screenSize = AndroidUtilities.getRealScreenSize();
-        layoutParams.width = AndroidUtilities.isTablet() ? AndroidUtilities.dp(320) : Math.min(screenSize.x, screenSize.y) - AndroidUtilities.dp(56);
-        layoutParams.height = LayoutHelper.MATCH_PARENT;
-        listViewContainer.setLayoutParams(layoutParams);
-
-        ListView listView = new ListView(this);
+        ListView listView = new ListView(this) {
+            @Override
+            public boolean hasOverlappingRendering() {
+                return false;
+            }
+        };
+        listView.setBackgroundColor(0xffffffff);
         listView.setAdapter(drawerLayoutAdapter = new DrawerLayoutAdapter(this));
         listView.setChoiceMode(AbsListView.CHOICE_MODE_SINGLE);
         listView.setDivider(null);
         listView.setDividerHeight(0);
         listView.setVerticalScrollBarEnabled(false);
-        listViewContainer.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+        drawerLayoutContainer.setDrawerLayout(listView);
+        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) listView.getLayoutParams();
+        Point screenSize = AndroidUtilities.getRealScreenSize();
+        layoutParams.width = AndroidUtilities.isTablet() ? AndroidUtilities.dp(320) : Math.min(screenSize.x, screenSize.y) - AndroidUtilities.dp(56);
+        layoutParams.height = LayoutHelper.MATCH_PARENT;
+        listView.setLayoutParams(layoutParams);
 
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
@@ -388,16 +392,6 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)
             }
         });
 
-        DrawerPlayerView drawerPlayerView = new DrawerPlayerView(this, listView);
-        listViewContainer.addView(drawerPlayerView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 51, Gravity.LEFT | Gravity.BOTTOM));
-        drawerPlayerView.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                actionBarLayout.presentFragment(new AudioPlayerActivity());
-                drawerLayoutContainer.closeDrawer(false);
-            }
-        });
-
         drawerLayoutContainer.setParentActionBarLayout(actionBarLayout);
         actionBarLayout.setDrawerLayoutContainer(drawerLayoutContainer);
         actionBarLayout.init(mainFragmentsStack);
@@ -511,10 +505,6 @@ public void onClick(View v) {
             drawerLayoutContainer.setAllowOpenDrawer(allowOpen, false);
         }
 
-        /*if (BuildVars.DEBUG_VERSION) {
-            ViewServer.get(this).addWindow(this);
-        }*/
-
         handleIntent(getIntent(), false, savedInstanceState != null, false);
         needLayout();
     }
@@ -563,6 +553,7 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
         Integer push_chat_id = 0;
         Integer push_enc_id = 0;
         Integer open_settings = 0;
+            long dialogId = intent != null && intent.getExtras() != null ? intent.getExtras().getLong("dialogId", 0) : 0;
         boolean showDialogsList = false;
             boolean showPlayer = false;
 
@@ -784,6 +775,7 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
                             String botUser = null;
                             String botChat = null;
                             String message = null;
+                            boolean hasUrl = false;
                         String scheme = data.getScheme();
                         if (scheme != null) {
                             if ((scheme.equals("http") || scheme.equals("https"))) {
@@ -797,8 +789,17 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
                                             } else if (path.startsWith("addstickers/")) {
                                                 sticker = path.replace("addstickers/", "");
                                             } else if (path.startsWith("msg/")) {
-                                                message = data.getQueryParameter("text");
-                                                message += " " + data.getQueryParameter("url");
+                                                message = data.getQueryParameter("url");
+                                                if (message == null) {
+                                                    message = "";
+                                                }
+                                                if (data.getQueryParameter("text") != null) {
+                                                    if (message.length() > 0) {
+                                                        hasUrl = true;
+                                                        message += "\n";
+                                                    }
+                                                    message += data.getQueryParameter("text");
+                                                }
                                             } else if (path.length() >= 5) {
                                                 username = data.getLastPathSegment();
                                                 botUser = data.getQueryParameter("start");
@@ -825,13 +826,22 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
                                     } else if (url.startsWith("tg:msg") || url.startsWith("tg://msg")) {
                                         url = url.replace("tg:msg", "tg://telegram.org").replace("tg://msg", "tg://telegram.org");
                                         data = Uri.parse(url);
-                                        message = data.getQueryParameter("text");
-                                        message += " " + data.getQueryParameter("url");
+                                        message = data.getQueryParameter("url");
+                                        if (message == null) {
+                                            message = "";
+                                        }
+                                        if (data.getQueryParameter("text") != null) {
+                                            if (message.length() > 0) {
+                                                hasUrl = true;
+                                                message += "\n";
+                                            }
+                                            message += data.getQueryParameter("text");
+                                        }
                                     }
                                 }
                             }
                             if (username != null || group != null || sticker != null || message != null) {
-                                runLinkRequest(username, group, sticker, botUser, botChat, message, 0);
+                                runLinkRequest(username, group, sticker, botUser, botChat, message, hasUrl, 0);
                         } else {
                             try {
                                 Cursor cursor = getContentResolver().query(intent.getData(), null, null, null, null);
@@ -935,6 +945,7 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
             if (!AndroidUtilities.isTablet()) {
                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
             }
+                if (dialogId == 0) {
             Bundle args = new Bundle();
             args.putBoolean("onlySelect", true);
             args.putString("selectAlertString", LocaleController.getString("SendMessagesTo", R.string.SendMessagesTo));
@@ -960,6 +971,9 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
                 } else {
                     drawerLayoutContainer.setAllowOpenDrawer(true, false);
                 }
+                } else {
+                    didSelectDialog(null, dialogId, false);
+                }
         } else if (open_settings != 0) {
             actionBarLayout.presentFragment(new SettingsActivity(), false, true, true);
                 if (AndroidUtilities.isTablet()) {
@@ -1009,7 +1023,7 @@ private boolean handleIntent(Intent intent, boolean isNew, boolean restore, bool
         return false;
     }
 
-    private void runLinkRequest(final String username, final String group, final String sticker, final String botUser, final String botChat, final String message, final int state) {
+    private void runLinkRequest(final String username, final String group, final String sticker, final String botUser, final String botChat, final String message, final boolean hasUrl, final int state) {
         final ProgressDialog progressDialog = new ProgressDialog(this);
         progressDialog.setMessage(LocaleController.getString("Loading", R.string.Loading));
         progressDialog.setCanceledOnTouchOutside(false);
@@ -1129,7 +1143,7 @@ public void run() {
                                             builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
                                                 @Override
                                                 public void onClick(DialogInterface dialogInterface, int i) {
-                                                    runLinkRequest(username, group, sticker, botUser, botChat, message, 1);
+                                                    runLinkRequest(username, group, sticker, botUser, botChat, message, hasUrl, 1);
                                                 }
                                             });
                                             builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
@@ -1219,6 +1233,7 @@ public void didSelectDialog(DialogsActivity fragment, long did, boolean param) {
                     editor.commit();
                     Bundle args = new Bundle();
                     args.putBoolean("scrollToTopOnResume", true);
+                    args.putBoolean("hasUrl", hasUrl);
                     int lower_part = (int) did;
                     int high_id = (int) (did >> 32);
                     if (lower_part != 0) {
@@ -1237,7 +1252,7 @@ public void didSelectDialog(DialogsActivity fragment, long did, boolean param) {
                     actionBarLayout.presentFragment(new ChatActivity(args), true, false, true);
                 }
             });
-            presentFragment(fragment);
+            presentFragment(fragment, false, true);
         }
 
         if (requestId != 0) {
@@ -1289,7 +1304,7 @@ protected void onNewIntent(Intent intent) {
     }
 
     @Override
-    public void didSelectDialog(DialogsActivity messageFragment, long dialog_id, boolean param) {
+    public void didSelectDialog(DialogsActivity dialogsFragment, long dialog_id, boolean param) {
         if (dialog_id != 0) {
             int lower_part = (int)dialog_id;
             int high_id = (int)(dialog_id >> 32);
@@ -1318,24 +1333,21 @@ public void didSelectDialog(DialogsActivity messageFragment, long dialog_id, boo
                 if(android.os.Build.VERSION.SDK_INT >= 16) {
                     if (AndroidUtilities.isTablet()) {
                         actionBarLayout.presentFragment(fragment, false, true, true);
-                    }
-
-                    if (!AndroidUtilities.isTablet()) {
+                    } else {
                         actionBarLayout.addFragmentToStack(fragment, actionBarLayout.fragmentsStack.size() - 1);
                     }
 
-                    if (!fragment.openVideoEditor(videoPath, true, false)) {
+                    if (!fragment.openVideoEditor(videoPath, dialogsFragment != null, false) && dialogsFragment != null) {
                         if (!AndroidUtilities.isTablet()) {
-                            messageFragment.finishFragment(true);
+                            dialogsFragment.finishFragment(true);
                         }
                     }
                 } else {
-                    actionBarLayout.presentFragment(fragment, true);
+                    actionBarLayout.presentFragment(fragment, dialogsFragment != null, dialogsFragment == null, true);
                     SendMessagesHelper.prepareSendingVideo(videoPath, 0, 0, 0, 0, null, dialog_id, null, true);
                 }
             } else {
-
-                actionBarLayout.presentFragment(fragment, true);
+                actionBarLayout.presentFragment(fragment, dialogsFragment != null, dialogsFragment == null, true);
 
                 if (sendingText != null) {
                     SendMessagesHelper.prepareSendingText(sendingText, dialog_id, true);
@@ -1392,13 +1404,13 @@ public boolean presentFragment(final BaseFragment fragment, final boolean remove
 
     public void needLayout() {
         if (AndroidUtilities.isTablet()) {
-
             RelativeLayout.LayoutParams relativeLayoutParams = (RelativeLayout.LayoutParams)layersActionBarLayout.getLayoutParams();
             relativeLayoutParams.leftMargin = (AndroidUtilities.displaySize.x - relativeLayoutParams.width) / 2;
             int y = (Build.VERSION.SDK_INT >= 21 ? AndroidUtilities.statusBarHeight : 0);
             relativeLayoutParams.topMargin = y + (AndroidUtilities.displaySize.y - relativeLayoutParams.height - y) / 2;
             layersActionBarLayout.setLayoutParams(relativeLayoutParams);
 
+
             if (!AndroidUtilities.isSmallTablet() || getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {
                 tabletFullSize = false;
                 int leftWidth = AndroidUtilities.displaySize.x / 100 * 35;
@@ -1451,7 +1463,8 @@ public void needLayout() {
                     BaseFragment chatFragment = rightActionBarLayout.fragmentsStack.get(0);
                     chatFragment.onPause();
                     rightActionBarLayout.fragmentsStack.remove(0);
-                    actionBarLayout.addFragmentToStack(chatFragment);
+                    actionBarLayout.fragmentsStack.add(chatFragment);
+                    //actionBarLayout.addFragmentToStack(chatFragment);
                     if (passcodeView.getVisibility() != View.VISIBLE) {
                         actionBarLayout.showLastFragment();
                     }
@@ -1461,7 +1474,9 @@ public void needLayout() {
     }
 
     public void fixLayout() {
-        if (AndroidUtilities.isTablet()) {
+        if (!AndroidUtilities.isTablet()) {
+            return;
+        }
             if (actionBarLayout == null) {
                 return;
             }
@@ -1479,7 +1494,6 @@ public void onGlobalLayout() {
                 }
             });
         }
-    }
 
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
@@ -1504,16 +1518,73 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         }
     }
 
+    @Override
+    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
+        if (requestCode == 3 || requestCode == 4 || requestCode == 5) {
+            if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+                if (requestCode == 4) {
+                    ImageLoader.getInstance().createMediaPaths();
+                } else if (requestCode == 5) {
+                    ContactsController.getInstance().readContacts();
+                }
+                return;
+            }
+            AlertDialog.Builder builder = new AlertDialog.Builder(this);
+            builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
+            if (requestCode == 3) {
+                builder.setMessage(LocaleController.getString("PermissionNoAudio", R.string.PermissionNoAudio));
+            } else if (requestCode == 4) {
+                builder.setMessage(LocaleController.getString("PermissionStorage", R.string.PermissionStorage));
+            } else if (requestCode == 5) {
+                builder.setMessage(LocaleController.getString("PermissionContacts", R.string.PermissionContacts));
+            }
+            builder.setNegativeButton(LocaleController.getString("PermissionOpenSettings", R.string.PermissionOpenSettings), new DialogInterface.OnClickListener() {
+                @TargetApi(Build.VERSION_CODES.GINGERBREAD)
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    try {
+                        Intent intent = new Intent(android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS);
+                        intent.setData(Uri.parse("package:" + ApplicationLoader.applicationContext.getPackageName()));
+                        startActivity(intent);
+                    } catch (Exception e) {
+                        FileLog.e("tmessages", e);
+                    }
+                }
+            });
+            builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), null);
+            builder.show();
+            return;
+        }
+        if (actionBarLayout.fragmentsStack.size() != 0) {
+            BaseFragment fragment = actionBarLayout.fragmentsStack.get(actionBarLayout.fragmentsStack.size() - 1);
+            fragment.onRequestPermissionsResultFragment(requestCode, permissions, grantResults);
+        }
+        if (AndroidUtilities.isTablet()) {
+            if (rightActionBarLayout.fragmentsStack.size() != 0) {
+                BaseFragment fragment = rightActionBarLayout.fragmentsStack.get(rightActionBarLayout.fragmentsStack.size() - 1);
+                fragment.onRequestPermissionsResultFragment(requestCode, permissions, grantResults);
+            }
+            if (layersActionBarLayout.fragmentsStack.size() != 0) {
+                BaseFragment fragment = layersActionBarLayout.fragmentsStack.get(layersActionBarLayout.fragmentsStack.size() - 1);
+                fragment.onRequestPermissionsResultFragment(requestCode, permissions, grantResults);
+            }
+        }
+    }
+
     @Override
     protected void onPause() {
         super.onPause();
+        ApplicationLoader.mainInterfacePaused = true;
         onPasscodePause();
         actionBarLayout.onPause();
         if (AndroidUtilities.isTablet()) {
             rightActionBarLayout.onPause();
             layersActionBarLayout.onPause();
         }
-        ApplicationLoader.mainInterfacePaused = true;
+        if (passcodeView != null) {
+            passcodeView.onPause();
+        }
         ConnectionsManager.getInstance().setAppPaused(true, false);
         AndroidUtilities.unregisterUpdates();
     }
@@ -1538,6 +1609,7 @@ protected void onDestroy() {
     @Override
     protected void onResume() {
         super.onResume();
+        ApplicationLoader.mainInterfacePaused = false;
         onPasscodeResume();
         if (passcodeView.getVisibility() != View.VISIBLE) {
         actionBarLayout.onResume();
@@ -1551,7 +1623,6 @@ protected void onResume() {
         AndroidUtilities.checkForCrashes(this);
         AndroidUtilities.checkForUpdates(this);
         AndroidUtilities.checkForThemes(this);
-        ApplicationLoader.mainInterfacePaused = false;
         ConnectionsManager.getInstance().setAppPaused(false, false);
         updateCurrentConnectionState();
         if (PhotoViewer.getInstance().isVisible()) {
@@ -1622,7 +1693,7 @@ public void didReceivedNotification(int id, Object... args) {
                 @Override
                 public void onClick(DialogInterface dialogInterface, int i) {
                     try {
-                        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse("https://telegram.org/faq#can-39t-send-messages-to-non-contacts"));
+                        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(LocaleController.getString("NobodyLikesSpamUrl", R.string.NobodyLikesSpamUrl)));
                         intent.putExtra(Browser.EXTRA_APPLICATION_ID, getPackageName());
                         startActivity(intent);
                     } catch (Exception e) {
@@ -1788,6 +1859,9 @@ public void onLowMemory() {
     @Override
     public void onActionModeStarted(ActionMode mode) {
         super.onActionModeStarted(mode);
+        if (Build.VERSION.SDK_INT >= 23 && mode.getType() == ActionMode.TYPE_FLOATING) {
+            return;
+        }
         actionBarLayout.onActionModeStarted(mode);
         if (AndroidUtilities.isTablet()) {
             rightActionBarLayout.onActionModeStarted(mode);
@@ -1798,6 +1872,9 @@ public void onActionModeStarted(ActionMode mode) {
     @Override
     public void onActionModeFinished(ActionMode mode) {
         super.onActionModeFinished(mode);
+        if (Build.VERSION.SDK_INT >= 23 && mode.getType() == ActionMode.TYPE_FLOATING) {
+            return;
+        }
         actionBarLayout.onActionModeFinished(mode);
         if (AndroidUtilities.isTablet()) {
             rightActionBarLayout.onActionModeFinished(mode);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
index c8a8efc75..d3cb22789 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LocationActivity.java
@@ -1,18 +1,24 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
 
+import android.Manifest;
 import android.animation.AnimatorSet;
 import android.animation.ObjectAnimator;
 import android.animation.StateListAnimator;
+import android.annotation.TargetApi;
+import android.app.Activity;
+import android.app.AlertDialog;
 import android.content.Context;
+import android.content.DialogInterface;
 import android.content.Intent;
+import android.content.pm.PackageManager;
 import android.graphics.Outline;
 import android.location.Location;
 import android.location.LocationManager;
@@ -90,6 +96,8 @@
 
     private AnimatorSet animatorSet;
 
+    private boolean checkPermission = true;
+
     private boolean searching;
     private boolean searchWas;
 
@@ -117,11 +125,6 @@
         void didSelectLocation(TLRPC.MessageMedia location);
     }
 
-    @Override
-    public boolean needAddActionBar() {
-        return messageObject != null;
-    }
-
     @Override
     public boolean onFragmentCreate() {
         super.onFragmentCreate();
@@ -156,6 +159,7 @@ public View createView(Context context) {
         if (AndroidUtilities.isTablet()) {
             actionBar.setOccupyStatusBar(false);
         }
+        actionBar.setAddToContainer(messageObject != null);
 
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
             @Override
@@ -293,7 +297,7 @@ public void onClick(View view) {
                     if (userLocation != null) {
                         LatLng latLng = new LatLng(userLocation.getLatitude(), userLocation.getLongitude());
                         if (googleMap != null) {
-                            CameraUpdate position = CameraUpdateFactory.newLatLngZoom(latLng, googleMap.getMaxZoomLevel() - 8);
+                            CameraUpdate position = CameraUpdateFactory.newLatLngZoom(latLng, googleMap.getMaxZoomLevel() - 4);
                             googleMap.animateCamera(position);
                         }
                     }
@@ -333,7 +337,7 @@ public void onClick(View view) {
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
                 }
-                CameraUpdate position = CameraUpdateFactory.newLatLngZoom(latLng, googleMap.getMaxZoomLevel() - 8);
+                CameraUpdate position = CameraUpdateFactory.newLatLngZoom(latLng, googleMap.getMaxZoomLevel() - 4);
                 googleMap.moveCamera(position);
             }
 
@@ -372,8 +376,17 @@ public void onClick(View v) {
             locationButton.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
+                    if (Build.VERSION.SDK_INT >= 23) {
+                        Activity activity = getParentActivity();
+                        if (activity != null) {
+                            if (activity.checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+                                showPermissionAlert();
+                                return;
+                            }
+                        }
+                    }
                     if (myLocation != null && googleMap != null) {
-                        googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(myLocation.getLatitude(), myLocation.getLongitude()), googleMap.getMaxZoomLevel() - 8));
+                        googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(myLocation.getLatitude(), myLocation.getLongitude()), googleMap.getMaxZoomLevel() - 4));
                     }
                 }
             });
@@ -516,6 +529,15 @@ public boolean onInterceptTouchEvent(MotionEvent ev) {
             locationButton.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
+                    if (Build.VERSION.SDK_INT >= 23) {
+                        Activity activity = getParentActivity();
+                        if (activity != null) {
+                            if (activity.checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+                                showPermissionAlert();
+                                return;
+                            }
+                        }
+                    }
                     if (myLocation != null && googleMap != null) {
                         if (Build.VERSION.SDK_INT >= 11) {
                             AnimatorSet animatorSet = new AnimatorSet();
@@ -614,21 +636,50 @@ public void onMyLocationChange(Location location) {
         return fragmentView;
     }
 
+    private void showPermissionAlert() {
+        if (getParentActivity() == null) {
+            return;
+        }
+        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+        builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
+        builder.setMessage(LocaleController.getString("PermissionNoLocation", R.string.PermissionNoLocation));
+        builder.setNegativeButton(LocaleController.getString("PermissionOpenSettings", R.string.PermissionOpenSettings), new DialogInterface.OnClickListener() {
+            @TargetApi(Build.VERSION_CODES.GINGERBREAD)
+            @Override
+            public void onClick(DialogInterface dialog, int which) {
+                if (getParentActivity() == null) {
+                    return;
+                }
+                try {
+                    Intent intent = new Intent(android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS);
+                    intent.setData(Uri.parse("package:" + ApplicationLoader.applicationContext.getPackageName()));
+                    getParentActivity().startActivity(intent);
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                }
+            }
+        });
+        builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), null);
+        showDialog(builder.create());
+    }
+
     @Override
-    public void onOpenAnimationEnd() {
-        try {
-            if (mapView.getParent() instanceof ViewGroup) {
-                ViewGroup viewGroup = (ViewGroup) mapView.getParent();
-                viewGroup.removeView(mapView);
+    public void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
+        if (isOpen) {
+            try {
+                if (mapView.getParent() instanceof ViewGroup) {
+                    ViewGroup viewGroup = (ViewGroup) mapView.getParent();
+                    viewGroup.removeView(mapView);
+                }
+            } catch (Exception e) {
+                FileLog.e("tmessages", e);
+            }
+            if (mapViewClip != null) {
+                mapViewClip.addView(mapView, 0, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, overScrollHeight + AndroidUtilities.dp(10), Gravity.TOP | Gravity.LEFT));
+                updateClipView(listView.getFirstVisiblePosition());
+            } else {
+                ((FrameLayout) fragmentView).addView(mapView, 0, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT));
             }
-        } catch (Exception e) {
-            FileLog.e("tmessages", e);
-        }
-        if (mapViewClip != null) {
-            mapViewClip.addView(mapView, 0, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, overScrollHeight + AndroidUtilities.dp(10), Gravity.TOP | Gravity.LEFT));
-            updateClipView(listView.getFirstVisiblePosition());
-        } else {
-            ((FrameLayout) fragmentView).addView(mapView, 0, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT));
         }
     }
 
@@ -820,7 +871,7 @@ private void positionMarker(Location location) {
                     googleMap.animateCamera(position);
                 } else {
                     firstWas = true;
-                    CameraUpdate position = CameraUpdateFactory.newLatLngZoom(latLng, googleMap.getMaxZoomLevel() - 8);
+                    CameraUpdate position = CameraUpdateFactory.newLatLngZoom(latLng, googleMap.getMaxZoomLevel() - 4);
                     googleMap.moveCamera(position);
                 }
             }
@@ -864,6 +915,15 @@ public void onResume() {
         }
         updateUserData();
         fixLayoutInternal(true);
+        if (checkPermission && Build.VERSION.SDK_INT >= 23) {
+            Activity activity = getParentActivity();
+            if (activity != null) {
+                checkPermission = false;
+                if (activity.checkSelfPermission(Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+                    activity.requestPermissions(new String[]{Manifest.permission.ACCESS_COARSE_LOCATION, Manifest.permission.ACCESS_FINE_LOCATION}, 2);
+                }
+            }
+        }
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
index c105e5d83..0ba35870f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -35,9 +35,7 @@
 import android.util.TypedValue;
 import android.view.Gravity;
 import android.view.KeyEvent;
-import android.view.LayoutInflater;
 import android.view.View;
-import android.view.WindowManager;
 import android.view.animation.AccelerateDecelerateInterpolator;
 import android.view.inputmethod.EditorInfo;
 import android.widget.AdapterView;
@@ -49,21 +47,22 @@
 
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.AndroidUtilities;
-import org.telegram.messenger.ContactsController;
-import org.telegram.messenger.MessagesController;
-import org.telegram.messenger.MessagesStorage;
-import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.ApplicationLoader;
+import org.telegram.messenger.BuildConfig;
 import org.telegram.messenger.BuildVars;
+import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.MessagesController;
+import org.telegram.messenger.MessagesStorage;
+import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
+import org.telegram.messenger.UserConfig;
+import org.telegram.messenger.Utilities;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.RequestDelegate;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
-import org.telegram.messenger.UserConfig;
-import org.telegram.messenger.Utilities;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.BaseFragment;
@@ -761,7 +760,7 @@ public void onNextPressed() {
             if (countryState == 1) {
                 needShowAlert(LocaleController.getString("AppName", R.string.AppName), LocaleController.getString("ChooseCountry", R.string.ChooseCountry));
                 return;
-            } else if (countryState == 2 && !BuildVars.DEBUG_VERSION) {
+            } else if (countryState == 2 && !BuildConfig.DEBUG){//!BuildVars.DEBUG_VERSION) {
                 needShowAlert(LocaleController.getString("AppName", R.string.AppName), LocaleController.getString("WrongCountry", R.string.WrongCountry));
                 return;
             }
@@ -769,6 +768,7 @@ public void onNextPressed() {
                 needShowAlert(LocaleController.getString("AppName", R.string.AppName), LocaleController.getString("InvalidPhoneNumber", R.string.InvalidPhoneNumber));
                 return;
             }
+
             ConnectionsManager.getInstance().cleanUp();
             TLRPC.TL_auth_sendCode req = new TLRPC.TL_auth_sendCode();
             String phone = PhoneFormat.stripExceptNumbers("" + codeField.getText() + phoneField.getText());
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
index ec374ade3..66661d85e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MediaActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -59,6 +59,7 @@
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
 import org.telegram.ui.ActionBar.ActionBarPopupWindow;
 import org.telegram.ui.ActionBar.ActionBar;
+import org.telegram.ui.ActionBar.BackDrawable;
 import org.telegram.ui.ActionBar.BottomSheet;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Adapters.BaseSectionsAdapter;
@@ -73,6 +74,8 @@
 import org.telegram.ui.Components.BackupImageView;
 import org.telegram.ui.ActionBar.BaseFragment;
 import org.telegram.ui.Components.LayoutHelper;
+import org.telegram.ui.Components.NumberTextView;
+import org.telegram.ui.Components.PlayerView;
 import org.telegram.ui.Components.SectionsListView;
 import org.telegram.ui.Components.WebFrameLayout;
 
@@ -88,7 +91,9 @@
     private SharedPhotoVideoAdapter photoVideoAdapter;
     private SharedLinksAdapter linksAdapter;
     private SharedDocumentsAdapter documentsAdapter;
+    private SharedDocumentsAdapter audioAdapter;
     private MediaSearchAdapter documentsSearchAdapter;
+    private MediaSearchAdapter audioSearchAdapter;
     private MediaSearchAdapter linksSearchAdapter;
     private SectionsListView listView;
     private LinearLayout progressView;
@@ -98,7 +103,7 @@
     private TextView dropDown;
     private ActionBarMenuItem dropDownContainer;
     private ActionBarMenuItem searchItem;
-    private TextView selectedMessagesCountTextView;
+    private NumberTextView selectedMessagesCountTextView;
     private ActionBarPopupWindow.ActionBarPopupWindowLayout popupLayout;
     private ArrayList<SharedPhotoVideoCell> cellCache = new ArrayList<>(6);
 
@@ -186,15 +191,17 @@ public void replaceMid(int oldMid, int newMid) {
         }
     }
 
-    private SharedMediaData sharedMediaData[] = new SharedMediaData[4];
+    private SharedMediaData sharedMediaData[] = new SharedMediaData[5];
 
     private final static int shared_media_item = 1;
     private final static int files_item = 2;
     private final static int links_item = 5;
-    private final static int quoteforward = 33;
+    private final static int music_item = 6;
     private final static int forward = 3;
     private final static int delete = 4;
 
+private final static int quoteforward = 33;
+
     public MediaActivity(Bundle args) {
         super(args);
     }
@@ -227,26 +234,29 @@ public void onFragmentDestroy() {
 
     @Override
     public View createView(Context context) {
-        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        actionBar.setBackButtonDrawable(new BackDrawable(false));
         actionBar.setTitle("");
         actionBar.setAllowOverlayTitle(false);
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
             @Override
             public void onItemClick(int id) {
                 if (id == -1) {
+                    if (actionBar.isActionModeShowed()) {
+                        selectedFiles.clear();
+                        cantDeleteMessagesCount = 0;
+                        actionBar.hideActionMode();
+                        listView.invalidateViews();
+                    } else {
                     if (Build.VERSION.SDK_INT < 11 && listView != null) {
                         listView.setAdapter(null);
                         listView = null;
                         photoVideoAdapter = null;
                         documentsAdapter = null;
+                            audioAdapter = null;
                         linksAdapter = null;
                     }
                     finishFragment();
-                } else if (id == -2) {
-                    selectedFiles.clear();
-                    cantDeleteMessagesCount = 0;
-                    actionBar.hideActionMode();
-                    listView.invalidateViews();
+                    }
                 } else if (id == shared_media_item) {
                     if (selectedMode == 0) {
                         return;
@@ -265,6 +275,12 @@ public void onItemClick(int id) {
                     }
                     selectedMode = 3;
                     switchToCurrentSelectedMode();
+                } else if (id == music_item) {
+                    if (selectedMode == 4) {
+                        return;
+                    }
+                    selectedMode = 4;
+                    switchToCurrentSelectedMode();
                 } else if (id == delete) {
                     if (getParentActivity() == null) {
                         return;
@@ -377,6 +393,8 @@ public void onSearchCollapse() {
                     documentsSearchAdapter.search(null);
                 } else if (selectedMode == 3) {
                     linksSearchAdapter.search(null);
+                } else if (selectedMode == 4) {
+                    audioSearchAdapter.search(null);
                 }
                 searching = false;
                 searchWas = false;
@@ -400,6 +418,11 @@ public void onTextChanged(EditText editText) {
                         return;
                     }
                     linksSearchAdapter.search(text);
+                } else if (selectedMode == 4) {
+                    if (audioSearchAdapter == null) {
+                        return;
+                    }
+                    audioSearchAdapter.search(text);
                 }
             }
         });
@@ -412,8 +435,9 @@ public void onTextChanged(EditText editText) {
         dropDownContainer.addSubItem(files_item, LocaleController.getString("DocumentsTitle", R.string.DocumentsTitle), 0);
         if ((int) dialog_id != 0) {
             dropDownContainer.addSubItem(links_item, LocaleController.getString("LinksTitle", R.string.LinksTitle), 0);
+            dropDownContainer.addSubItem(music_item, LocaleController.getString("AudioTitle", R.string.AudioTitle), 0);
         }
-        actionBar.addView(dropDownContainer, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT, AndroidUtilities.isTablet() ? 64 : 56, 0, 40, 0));
+        actionBar.addView(dropDownContainer, 0, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT, AndroidUtilities.isTablet() ? 64 : 56, 0, 40, 0));
         dropDownContainer.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
@@ -435,24 +459,19 @@ public void onClick(View view) {
         dropDownContainer.addView(dropDown, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER_VERTICAL, 16, 0, 0, 0));
 
         final ActionBarMenu actionMode = actionBar.createActionMode();
-        actionModeViews.add(actionMode.addItem(-2, R.drawable.ic_ab_back_grey, R.drawable.bar_selector_mode, null, AndroidUtilities.dp(54)));
+        //actionModeViews.add(actionMode.addItem(-2, R.drawable.ic_ab_back_grey, R.drawable.bar_selector_mode, null, AndroidUtilities.dp(54)));
 
-        selectedMessagesCountTextView = new TextView(actionMode.getContext());
+        selectedMessagesCountTextView = new NumberTextView(actionMode.getContext());
         selectedMessagesCountTextView.setTextSize(18);
         selectedMessagesCountTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
         selectedMessagesCountTextView.setTextColor(0xff737373);
-        selectedMessagesCountTextView.setSingleLine(true);
-        selectedMessagesCountTextView.setLines(1);
-        selectedMessagesCountTextView.setEllipsize(TextUtils.TruncateAt.END);
-        selectedMessagesCountTextView.setPadding(AndroidUtilities.dp(11), 0, 0, AndroidUtilities.dp(2));
-        selectedMessagesCountTextView.setGravity(Gravity.CENTER_VERTICAL);
         selectedMessagesCountTextView.setOnTouchListener(new View.OnTouchListener() {
             @Override
             public boolean onTouch(View v, MotionEvent event) {
                 return true;
             }
         });
-        actionMode.addView(selectedMessagesCountTextView, LayoutHelper.createLinear(0, LayoutHelper.MATCH_PARENT, 1.0f));
+        actionMode.addView(selectedMessagesCountTextView, LayoutHelper.createLinear(0, LayoutHelper.MATCH_PARENT, 1.0f, 65, 0, 0, 0));
 
         if ((int) dialog_id != 0) {
             actionModeViews.add(actionMode.addItem(quoteforward, R.drawable.ic_ab_fwd_quoteforward, R.drawable.bar_selector_mode, null, AndroidUtilities.dp(54)));
@@ -461,8 +480,10 @@ public boolean onTouch(View v, MotionEvent event) {
         actionModeViews.add(actionMode.addItem(delete, R.drawable.ic_ab_fwd_delete, R.drawable.bar_selector_mode, null, AndroidUtilities.dp(54)));
 
         photoVideoAdapter = new SharedPhotoVideoAdapter(context);
-        documentsAdapter = new SharedDocumentsAdapter(context);
+        documentsAdapter = new SharedDocumentsAdapter(context, 1);
+        audioAdapter = new SharedDocumentsAdapter(context, 4);
         documentsSearchAdapter = new MediaSearchAdapter(context, 1);
+        audioSearchAdapter = new MediaSearchAdapter(context, 4);
         linksSearchAdapter = new MediaSearchAdapter(context, 3);
         linksAdapter = new SharedLinksAdapter(context);
 
@@ -478,7 +499,7 @@ public boolean onTouch(View v, MotionEvent event) {
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
             public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {
-                if (selectedMode == 1 && view instanceof SharedDocumentCell) {
+                if ((selectedMode == 1 || selectedMode == 4) && view instanceof SharedDocumentCell) {
                     MediaActivity.this.onItemClick(i, view, ((SharedDocumentCell) view).getDocument(), 0);
                 } else if (selectedMode == 3 && view instanceof SharedLinkCell) {
                     MediaActivity.this.onItemClick(i, view, ((SharedLinkCell) view).getMessage(), 0);
@@ -508,6 +529,8 @@ public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCoun
                         type = SharedMediaQuery.MEDIA_FILE;
                     } else if (selectedMode == 2) {
                         type = SharedMediaQuery.MEDIA_AUDIO;
+                    } else if (selectedMode == 4) {
+                        type = SharedMediaQuery.MEDIA_MUSIC;
                     } else {
                         type = SharedMediaQuery.MEDIA_URL;
                     }
@@ -518,7 +541,7 @@ public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCoun
         listView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
             @Override
             public boolean onItemLongClick(AdapterView<?> parent, View view, int i, long id) {
-                if (selectedMode == 1 && view instanceof SharedDocumentCell) {
+                if ((selectedMode == 1 || selectedMode == 4) && view instanceof SharedDocumentCell) {
                     SharedDocumentCell cell = (SharedDocumentCell) view;
                     MessageObject message = cell.getDocument();
                     return MediaActivity.this.onItemLongClick(message, view, 0);
@@ -570,6 +593,10 @@ public boolean onTouch(View v, MotionEvent event) {
 
         switchToCurrentSelectedMode();
 
+        if (!AndroidUtilities.isTablet()) {
+            frameLayout.addView(new PlayerView(context, this), LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 39, Gravity.TOP | Gravity.LEFT, 0, -36, 0, 0));
+        }
+
         return fragmentView;
     }
 
@@ -610,8 +637,12 @@ public void didReceivedNotification(int id, Object... args) {
                     if (linksAdapter != null) {
                         linksAdapter.notifyDataSetChanged();
                     }
+                } else if (selectedMode == 4 && type == 4) {
+                    if (audioAdapter != null) {
+                        audioAdapter.notifyDataSetChanged();
+                    }
                 }
-                if (selectedMode == 1 || selectedMode == 3) {
+                if (selectedMode == 1 || selectedMode == 3 || selectedMode == 4) {
                     searchItem.setVisibility(!sharedMediaData[selectedMode].messages.isEmpty() && !searching ? View.VISIBLE : View.GONE);
                 }
             }
@@ -648,7 +679,10 @@ public void didReceivedNotification(int id, Object... args) {
                 if (linksAdapter != null) {
                     linksAdapter.notifyDataSetChanged();
                 }
-                if (selectedMode == 1 || selectedMode == 3) {
+                if (audioAdapter != null) {
+                    audioAdapter.notifyDataSetChanged();
+                }
+                if (selectedMode == 1 || selectedMode == 3 || selectedMode == 4) {
                     searchItem.setVisibility(!sharedMediaData[selectedMode].messages.isEmpty() && !searching ? View.VISIBLE : View.GONE);
                 }
             }
@@ -681,7 +715,10 @@ public void didReceivedNotification(int id, Object... args) {
                     if (linksAdapter != null) {
                         linksAdapter.notifyDataSetChanged();
                     }
-                    if (selectedMode == 1 || selectedMode == 3) {
+                    if (audioAdapter != null) {
+                        audioAdapter.notifyDataSetChanged();
+                    }
+                    if (selectedMode == 1 || selectedMode == 3 || selectedMode == 4) {
                         searchItem.setVisibility(!sharedMediaData[selectedMode].messages.isEmpty() && !searching ? View.VISIBLE : View.GONE);
                     }
                 }
@@ -792,7 +829,7 @@ public void willHidePhotoViewer() { }
     public void setPhotoChecked(int index) { }
 
     @Override
-    public void cancelButtonPressed() { }
+    public boolean cancelButtonPressed() { return true; }
 
     @Override
     public void sendButtonPressed(int index) { }
@@ -809,6 +846,9 @@ private void switchToCurrentSelectedMode() {
                 } else if (selectedMode == 3) {
                     listView.setAdapter(linksSearchAdapter);
                     linksSearchAdapter.notifyDataSetChanged();
+                } else if (selectedMode == 4) {
+                    listView.setAdapter(audioSearchAdapter);
+                    audioSearchAdapter.notifyDataSetChanged();
                 }
             }
             if (emptyTextView != null) {
@@ -835,15 +875,22 @@ private void switchToCurrentSelectedMode() {
                 }
                 listView.setVisibility(View.VISIBLE);
                 listView.setPadding(0, 0, 0, AndroidUtilities.dp(4));
-            } else if (selectedMode == 1) {
+            } else if (selectedMode == 1 || selectedMode == 4) {
+                if (selectedMode == 1) {
                 listView.setAdapter(documentsAdapter);
                 dropDown.setText(LocaleController.getString("DocumentsTitle", R.string.DocumentsTitle));
                 emptyImageView.setImageResource(R.drawable.tip2);
                 emptyTextView.setText(LocaleController.getString("NoSharedFiles", R.string.NoSharedFiles));
+                } else if (selectedMode == 4) {
+                    listView.setAdapter(audioAdapter);
+                    dropDown.setText(LocaleController.getString("AudioTitle", R.string.AudioTitle));
+                    emptyImageView.setImageResource(R.drawable.tip4);
+                    emptyTextView.setText(LocaleController.getString("NoSharedAudio", R.string.NoSharedAudio));
+                }
                 searchItem.setVisibility(!sharedMediaData[selectedMode].messages.isEmpty() ? View.VISIBLE : View.GONE);
                 if (!sharedMediaData[selectedMode].loading && !sharedMediaData[selectedMode].endReached && sharedMediaData[selectedMode].messages.isEmpty()) {
                     sharedMediaData[selectedMode].loading = true;
-                    SharedMediaQuery.loadMedia(dialog_id, 0, 50, 0, SharedMediaQuery.MEDIA_FILE, true, classGuid);
+                    SharedMediaQuery.loadMedia(dialog_id, 0, 50, 0, selectedMode == 1 ? SharedMediaQuery.MEDIA_FILE : SharedMediaQuery.MEDIA_MUSIC, true, classGuid);
                 }
                 listView.setVisibility(View.VISIBLE);
                 if (sharedMediaData[selectedMode].loading && sharedMediaData[selectedMode].messages.isEmpty()) {
@@ -888,19 +935,15 @@ private boolean onItemLongClick(MessageObject item, View view, int a) {
             cantDeleteMessagesCount++;
         }
         actionBar.createActionMode().getItem(delete).setVisibility(cantDeleteMessagesCount == 0 ? View.VISIBLE : View.GONE);
-        selectedMessagesCountTextView.setText(String.format("%d", selectedFiles.size()));
+        selectedMessagesCountTextView.setNumber(1, false);
         if (Build.VERSION.SDK_INT >= 11) {
             AnimatorSetProxy animatorSet = new AnimatorSetProxy();
             ArrayList<Object> animators = new ArrayList<>();
             for (int i = 0; i < actionModeViews.size(); i++) {
                 View view2 = actionModeViews.get(i);
                 AndroidUtilities.clearDrawableAnimation(view2);
-                if (i < 1) {
-                    animators.add(ObjectAnimatorProxy.ofFloat(view2, "translationX", -AndroidUtilities.dp(56), 0));
-                } else {
                     animators.add(ObjectAnimatorProxy.ofFloat(view2, "scaleY", 0.1f, 1.0f));
                 }
-            }
             animatorSet.playTogether(animators);
             animatorSet.setDuration(250);
             animatorSet.start();
@@ -936,7 +979,7 @@ private void onItemClick(int index, View view, MessageObject message, int a) {
             if (selectedFiles.isEmpty()) {
                 actionBar.hideActionMode();
             } else {
-                selectedMessagesCountTextView.setText(String.format("%d", selectedFiles.size()));
+                selectedMessagesCountTextView.setNumber(selectedFiles.size(), true);
             }
             actionBar.createActionMode().getItem(delete).setVisibility(cantDeleteMessagesCount == 0 ? View.VISIBLE : View.GONE);
             scrolling = false;
@@ -951,12 +994,12 @@ private void onItemClick(int index, View view, MessageObject message, int a) {
             if (selectedMode == 0) {
                 PhotoViewer.getInstance().setParentActivity(getParentActivity());
                 PhotoViewer.getInstance().openPhoto(sharedMediaData[selectedMode].messages, index, this);
-            } else if (selectedMode == 1) {
+            } else if (selectedMode == 1 || selectedMode == 4) {
                 if (view instanceof SharedDocumentCell) {
                     SharedDocumentCell cell = (SharedDocumentCell) view;
                     if (cell.isLoaded()) {
                         if (message.isMusic()) {
-                            if (MediaController.getInstance().setPlaylist(sharedMediaData[1].messages, message)) {
+                            if (MediaController.getInstance().setPlaylist(sharedMediaData[selectedMode].messages, message)) {
                                 return;
                             }
                         }
@@ -1062,6 +1105,12 @@ private void fixLayoutInternal() {
         WindowManager manager = (WindowManager) ApplicationLoader.applicationContext.getSystemService(Activity.WINDOW_SERVICE);
         int rotation = manager.getDefaultDisplay().getRotation();
 
+        if (!AndroidUtilities.isTablet() && ApplicationLoader.applicationContext.getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE) {
+            selectedMessagesCountTextView.setTextSize(18);
+        } else {
+            selectedMessagesCountTextView.setTextSize(20);
+        }
+
         if (AndroidUtilities.isTablet()) {
             columnsCount = 4;
             emptyTextView.setPadding(AndroidUtilities.dp(40), 0, AndroidUtilities.dp(40), AndroidUtilities.dp(128));
@@ -1197,10 +1246,13 @@ public int getViewTypeCount() {
     }
 
     private class SharedDocumentsAdapter extends BaseSectionsAdapter {
+
         private Context mContext;
+        private int currentType;
 
-        public SharedDocumentsAdapter(Context context) {
+        public SharedDocumentsAdapter(Context context, int type) {
             mContext = context;
+            currentType = type;
         }
 
         @Override
@@ -1215,13 +1267,13 @@ public boolean isRowEnabled(int section, int row) {
 
         @Override
         public int getSectionCount() {
-            return sharedMediaData[1].sections.size() + (sharedMediaData[1].sections.isEmpty() || sharedMediaData[1].endReached ? 0 : 1);
+            return sharedMediaData[currentType].sections.size() + (sharedMediaData[currentType].sections.isEmpty() || sharedMediaData[currentType].endReached ? 0 : 1);
         }
 
         @Override
         public int getCountForSection(int section) {
-            if (section < sharedMediaData[1].sections.size()) {
-                return sharedMediaData[1].sectionArrays.get(sharedMediaData[1].sections.get(section)).size() + 1;
+            if (section < sharedMediaData[currentType].sections.size()) {
+                return sharedMediaData[currentType].sectionArrays.get(sharedMediaData[currentType].sections.get(section)).size() + 1;
             }
             return 1;
         }
@@ -1231,9 +1283,9 @@ public View getSectionHeaderView(int section, View convertView, ViewGroup parent
             if (convertView == null) {
                 convertView = new GreySectionCell(mContext);
             }
-            if (section < sharedMediaData[1].sections.size()) {
-                String name = sharedMediaData[1].sections.get(section);
-                ArrayList<MessageObject> messageObjects = sharedMediaData[1].sectionArrays.get(name);
+            if (section < sharedMediaData[currentType].sections.size()) {
+                String name = sharedMediaData[currentType].sections.get(section);
+                ArrayList<MessageObject> messageObjects = sharedMediaData[currentType].sectionArrays.get(name);
                 MessageObject messageObject = messageObjects.get(0);
                 ((GreySectionCell) convertView).setText(LocaleController.formatterMonthYear.format((long) messageObject.messageOwner.date * 1000).toUpperCase());
             }
@@ -1242,9 +1294,9 @@ public View getSectionHeaderView(int section, View convertView, ViewGroup parent
 
         @Override
         public View getItemView(int section, int position, View convertView, ViewGroup parent) {
-            if (section < sharedMediaData[1].sections.size()) {
-                String name = sharedMediaData[1].sections.get(section);
-                ArrayList<MessageObject> messageObjects = sharedMediaData[1].sectionArrays.get(name);
+            if (section < sharedMediaData[currentType].sections.size()) {
+                String name = sharedMediaData[currentType].sections.get(section);
+                ArrayList<MessageObject> messageObjects = sharedMediaData[currentType].sectionArrays.get(name);
                 if (position == 0) {
                     if (convertView == null) {
                         convertView = new GreySectionCell(mContext);
@@ -1257,7 +1309,7 @@ public View getItemView(int section, int position, View convertView, ViewGroup p
                     }
                     SharedDocumentCell sharedDocumentCell = (SharedDocumentCell) convertView;
                     MessageObject messageObject = messageObjects.get(position - 1);
-                    sharedDocumentCell.setDocument(messageObject, position != messageObjects.size() || section == sharedMediaData[1].sections.size() - 1 && sharedMediaData[1].loading);
+                    sharedDocumentCell.setDocument(messageObject, position != messageObjects.size() || section == sharedMediaData[currentType].sections.size() - 1 && sharedMediaData[currentType].loading);
                     if (actionBar.isActionModeShowed()) {
                         sharedDocumentCell.setChecked(selectedFiles.containsKey(messageObject.getId()), !scrolling);
                     } else {
@@ -1274,7 +1326,7 @@ public View getItemView(int section, int position, View convertView, ViewGroup p
 
         @Override
         public int getItemViewType(int section, int position) {
-            if (section < sharedMediaData[1].sections.size()) {
+            if (section < sharedMediaData[currentType].sections.size()) {
                 if (position == 0) {
                     return 0;
                 } else {
@@ -1452,6 +1504,8 @@ public void queryServerSearch(final String query, final int max_id) {
                 req.filter = new TLRPC.TL_inputMessagesFilterDocument();
             } else if (currentType == 3) {
                 req.filter = new TLRPC.TL_inputMessagesFilterUrl();
+            } else if (currentType == 4) {
+                req.filter = new TLRPC.TL_inputMessagesFilterAudioDocuments();
             }
             req.q = query;
             req.peer = MessagesController.getInputPeer(uid);
@@ -1517,16 +1571,16 @@ private void processSearch(final String query) {
                 @Override
                 public void run() {
                     if (!sharedMediaData[currentType].messages.isEmpty()) {
-                        if (currentType == 1) {
+                        if (currentType == 1 || currentType == 4) {
                             MessageObject messageObject = sharedMediaData[currentType].messages.get(sharedMediaData[currentType].messages.size() - 1);
                             queryServerSearch(query, messageObject.getId());
                         } else if (currentType == 3) {
                             queryServerSearch(query, 0);
                         }
                     }
-                    if (currentType == 1) {
+                    if (currentType == 1 || currentType == 4) {
                         final ArrayList<MessageObject> copy = new ArrayList<>();
-                        copy.addAll(sharedMediaData[1].messages);
+                        copy.addAll(sharedMediaData[currentType].messages);
                         Utilities.searchQueue.postRunnable(new Runnable() {
                             @Override
                             public void run() {
@@ -1542,7 +1596,7 @@ public void run() {
                                 String search[] = new String[1 + (search2 != null ? 1 : 0)];
                                 search[0] = search1;
                                 if (search2 != null) {
-                                    search[1] = search2;
+                                    search[currentType] = search2;
                                 }
 
                                 ArrayList<MessageObject> resultArray = new ArrayList<>();
@@ -1631,7 +1685,7 @@ public boolean hasStableIds() {
 
         @Override
         public View getView(int i, View view, ViewGroup viewGroup) {
-            if (currentType == 1) {
+            if (currentType == 1 || currentType == 4) {
                 if (view == null) {
                     view = new SharedDocumentCell(mContext);
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
index abe53a111..e6326bcd3 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -56,6 +56,7 @@
 import org.telegram.ui.Components.LayoutHelper;
 
 public class NotificationsSettingsActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate {
+
     private ListView listView;
     private boolean reseting = false;
 
@@ -192,7 +193,7 @@ public void onItemClick(int id) {
         listView.setAdapter(new ListAdapter(context));
         listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
             @Override
-            public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {
+            public void onItemClick(AdapterView<?> adapterView, final View view, final int i, long l) {
                 boolean enabled = false;
                 if (i == messageAlertRow || i == groupAlertRow) {
                     SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
@@ -362,7 +363,12 @@ public void onClick(DialogInterface dialogInterface, int i) {
                                 listView.invalidateViews();
                             }
                         });
-                        builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                        builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                ((TextCheckCell) view).setChecked(true);
+                            }
+                        });
                         showDialog(builder.create());
                     }
                 } else if (i == messageLedRow || i == groupLedRow) {
@@ -390,13 +396,15 @@ public void onClick(DialogInterface dialogInterface, int i) {
                         public void onClick(DialogInterface dialogInterface, int which) {
                             final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                             SharedPreferences.Editor editor = preferences.edit();
+                            TextColorCell textCell = (TextColorCell) view;
                             if (i == messageLedRow) {
                                 editor.putInt("MessagesLed", colorPickerView.getColor());
+                                textCell.setTextAndColor(LocaleController.getString("LedColor", R.string.LedColor), colorPickerView.getColor(), true);
                             } else if (i == groupLedRow) {
                                 editor.putInt("GroupLed", colorPickerView.getColor());
+                                textCell.setTextAndColor(LocaleController.getString("LedColor", R.string.LedColor), colorPickerView.getColor(), true);
                             }
                             editor.commit();
-                            listView.invalidateViews();
                         }
                     });
                     builder.setNeutralButton(LocaleController.getString("LedDisabled", R.string.LedDisabled), new DialogInterface.OnClickListener() {
@@ -404,10 +412,13 @@ public void onClick(DialogInterface dialogInterface, int which) {
                         public void onClick(DialogInterface dialog, int which) {
                             final SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                             SharedPreferences.Editor editor = preferences.edit();
+                            TextColorCell textCell = (TextColorCell) view;
                             if (i == messageLedRow) {
                                 editor.putInt("MessagesLed", 0);
+                                textCell.setTextAndColor(LocaleController.getString("LedColor", R.string.LedColor), 0, true);
                             } else if (i == groupLedRow) {
                                 editor.putInt("GroupLed", 0);
+                                textCell.setTextAndColor(LocaleController.getString("LedColor", R.string.LedColor), 0, true);
                             }
                             editor.commit();
                             listView.invalidateViews();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java
index ca7bd147d..07dd1a6ed 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
@@ -18,6 +18,7 @@
 import android.graphics.drawable.Drawable;
 import android.os.Build;
 import android.os.Vibrator;
+import android.support.v4.hardware.fingerprint.FingerprintManagerCompat;
 import android.text.Editable;
 import android.text.InputFilter;
 import android.text.InputType;
@@ -79,6 +80,7 @@
     private int passcodeRow;
     private int changePasscodeRow;
     private int passcodeDetailRow;
+    private int fingerprintRow;
     private int autoLockRow;
     private int autoLockDetailRow;
     private int rowCount;
@@ -403,6 +405,10 @@ public void onClick(DialogInterface dialog, int which) {
                             }
                         });
                         showDialog(builder.create());
+                    } else if (i == fingerprintRow) {
+                        UserConfig.useFingerprint = !UserConfig.useFingerprint;
+                        UserConfig.saveConfig(false);
+                        ((TextCheckCell) view).setChecked(UserConfig.useFingerprint);
                     }
                 }
             });
@@ -461,9 +467,20 @@ private void updateRows() {
         changePasscodeRow = rowCount++;
         passcodeDetailRow = rowCount++;
         if (UserConfig.passcodeHash.length() > 0) {
+            try {
+                if (Build.VERSION.SDK_INT >= 23) {
+                    FingerprintManagerCompat fingerprintManager = FingerprintManagerCompat.from(ApplicationLoader.applicationContext);
+                    if (fingerprintManager.isHardwareDetected()) {
+                        fingerprintRow = rowCount++;
+                    }
+                }
+            } catch (Throwable e) {
+                FileLog.e("tmessages", e);
+            }
             autoLockRow = rowCount++;
             autoLockDetailRow = rowCount++;
         } else {
+            fingerprintRow = -1;
             autoLockRow = -1;
             autoLockDetailRow = -1;
         }
@@ -486,9 +503,8 @@ public boolean onPreDraw() {
     }
 
     @Override
-    public void onOpenAnimationEnd() {
-        super.onOpenAnimationEnd();
-        if (type != 0) {
+    public void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
+        if (isOpen && type != 0) {
             AndroidUtilities.showKeyboard(passwordEditText);
         }
     }
@@ -620,7 +636,7 @@ public boolean areAllItemsEnabled() {
 
         @Override
         public boolean isEnabled(int i) {
-            return i == passcodeRow || i == autoLockRow || UserConfig.passcodeHash.length() != 0 && i == changePasscodeRow;
+            return i == passcodeRow || i == fingerprintRow || i == autoLockRow || UserConfig.passcodeHash.length() != 0 && i == changePasscodeRow;
         }
 
         @Override
@@ -655,6 +671,8 @@ public View getView(int i, View view, ViewGroup viewGroup) {
 
                 if (i == passcodeRow) {
                     textCell.setTextAndCheck(LocaleController.getString("Passcode", R.string.Passcode), UserConfig.passcodeHash.length() > 0, true);
+                } else if (i == fingerprintRow) {
+                    textCell.setTextAndCheck(LocaleController.getString("UnlockFingerprint", R.string.UnlockFingerprint), UserConfig.useFingerprint, true);
                 }
             } else if (viewType == 1) {
                 if (view == null) {
@@ -700,7 +718,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
 
         @Override
         public int getItemViewType(int i) {
-            if (i == passcodeRow) {
+            if (i == passcodeRow || i == fingerprintRow) {
                 return 0;
             } else if (i == changePasscodeRow || i == autoLockRow) {
                 return 1;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoAlbumPickerActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoAlbumPickerActivity.java
index 7a332b9f4..fe00f687a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoAlbumPickerActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoAlbumPickerActivity.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java
index 34f2b0b97..b4cc7b0cb 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java
@@ -3,7 +3,7 @@
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -21,6 +21,7 @@
 import android.widget.FrameLayout;
 
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.Bitmaps;
 import org.telegram.messenger.ImageLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
@@ -35,7 +36,7 @@
 public class PhotoCropActivity extends BaseFragment {
 
     public interface PhotoEditActivityDelegate {
-        void didFinishEdit(Bitmap bitmap, Bundle args);
+        void didFinishEdit(Bitmap bitmap);
     }
 
     private class PhotoCropView extends FrameLayout {
@@ -315,12 +316,12 @@ public Bitmap getBitmap() {
                 sizeY = imageToCrop.getHeight() - y;
             }
             try {
-                return Bitmap.createBitmap(imageToCrop, x, y, sizeX, sizeY);
+                return Bitmaps.createBitmap(imageToCrop, x, y, sizeX, sizeY);
             } catch (Throwable e) {
                 FileLog.e("tmessags", e);
                 System.gc();
                 try {
-                    return Bitmap.createBitmap(imageToCrop, x, y, sizeX, sizeY);
+                    return Bitmaps.createBitmap(imageToCrop, x, y, sizeX, sizeY);
                 } catch (Throwable e2) {
                     FileLog.e("tmessages", e2);
                 }
@@ -331,8 +332,12 @@ public Bitmap getBitmap() {
         @Override
         protected void onDraw(Canvas canvas) {
             if (drawable != null) {
-                drawable.setBounds(bitmapX, bitmapY, bitmapX + bitmapWidth, bitmapY + bitmapHeight);
-                drawable.draw(canvas);
+                try {
+                    drawable.setBounds(bitmapX, bitmapY, bitmapX + bitmapWidth, bitmapY + bitmapHeight);
+                    drawable.draw(canvas);
+                } catch (Throwable e) {
+                    FileLog.e("tmessages", e);
+                }
             }
             canvas.drawRect(bitmapX, bitmapY, bitmapX + bitmapWidth, rectY, halfPaint);
             canvas.drawRect(bitmapX, rectY, rectX, rectY + rectSizeY, halfPaint);
@@ -375,15 +380,6 @@ public PhotoCropActivity(Bundle args) {
         super(args);
     }
 
-    public PhotoCropActivity(Bundle args, Bitmap bitmap, String key) {
-        super(args);
-        imageToCrop = bitmap;
-        bitmapKey = key;
-        if (imageToCrop != null && key != null) {
-            ImageLoader.getInstance().incrementUseCount(key);
-        }
-    }
-
     @Override
     public boolean onFragmentCreate() {
         swipeBackEnabled = false;
@@ -418,7 +414,6 @@ public boolean onFragmentCreate() {
     @Override
     public void onFragmentDestroy() {
         super.onFragmentDestroy();
-        drawable = null;
         if (bitmapKey != null) {
             if (ImageLoader.getInstance().decrementUseCount(bitmapKey) && !ImageLoader.getInstance().isInCache(bitmapKey)) {
                 bitmapKey = null;
@@ -428,6 +423,7 @@ public void onFragmentDestroy() {
             imageToCrop.recycle();
             imageToCrop = null;
         }
+        drawable = null;
     }
 
     @Override
@@ -448,7 +444,7 @@ public void onItemClick(int id) {
                         if (bitmap == imageToCrop) {
                             sameBitmap = true;
                         }
-                        delegate.didFinishEdit(bitmap, getArguments());
+                        delegate.didFinishEdit(bitmap);
                         doneButtonPressed = true;
                     }
                     finishFragment();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
index 984b77f84..3961e1bd6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.4.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -34,6 +34,7 @@
 import org.json.JSONArray;
 import org.json.JSONObject;
 import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MediaController;
 import org.telegram.messenger.MessagesStorage;
@@ -294,6 +295,9 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                     if (i < 0 || i >= arrayList.size()) {
                         return;
                     }
+                    if (searchItem != null) {
+                        AndroidUtilities.hideKeyboard(searchItem.getSearchField());
+                    }
                     PhotoViewer.getInstance().setParentActivity(getParentActivity());
                     PhotoViewer.getInstance().openPhotoForSelect(arrayList, i, singlePhoto ? 1 : 0, PhotoPickerActivity.this, chatActivity);
                 }
@@ -498,9 +502,18 @@ private PhotoPickerPhotoCell getCellForIndex(int index) {
             PhotoViewer.PlaceProviderObject object = new PhotoViewer.PlaceProviderObject();
             object.viewX = coords[0];
             object.viewY = coords[1] - AndroidUtilities.statusBarHeight;
+            if (Build.VERSION.SDK_INT < 11) {
+                float scale = ViewProxy.getScaleX(cell.photoImage);
+                if (scale != 1) {
+                    int width = cell.photoImage.getMeasuredWidth();
+                    object.viewX += (width - width * scale) / 2;
+                    object.viewY += (width - width * scale) / 2;
+                }
+            }
             object.parentView = listView;
             object.imageReceiver = cell.photoImage.getImageReceiver();
             object.thumb = object.imageReceiver.getBitmap();
+            object.scale = ViewProxy.getScaleX(cell.photoImage);
             cell.checkBox.setVisibility(View.GONE);
             return object;
         }
@@ -646,7 +659,7 @@ public void setPhotoChecked(int index) {
             View view = listView.getChildAt(a);
             int num = (Integer) view.getTag();
             if (num == index) {
-                ((PhotoPickerPhotoCell) view).checkBox.setChecked(add, false);
+                ((PhotoPickerPhotoCell) view).setChecked(add, false);
                 break;
             }
         }
@@ -655,9 +668,10 @@ public void setPhotoChecked(int index) {
     }
 
     @Override
-    public void cancelButtonPressed() {
+    public boolean cancelButtonPressed() {
         delegate.actionButtonPressed(true);
         finishFragment();
+        return true;
     }
 
     @Override
@@ -692,9 +706,8 @@ public int getSelectedCount() {
     }
 
     @Override
-    public void onOpenAnimationEnd() {
-        super.onOpenAnimationEnd();
-        if (searchItem != null) {
+    public void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
+        if (isOpen && searchItem != null) {
             AndroidUtilities.showKeyboard(searchItem.getSearchField());
         }
     }
@@ -1016,7 +1029,7 @@ public void onClick(View v) {
                                 } else {
                                     selectedPhotos.put(photoEntry.imageId, photoEntry);
                                 }
-                                ((PhotoPickerPhotoCell) v.getParent()).checkBox.setChecked(selectedPhotos.containsKey(photoEntry.imageId), true);
+                                ((PhotoPickerPhotoCell) v.getParent()).setChecked(selectedPhotos.containsKey(photoEntry.imageId), true);
                             } else {
                                 AndroidUtilities.hideKeyboard(getParentActivity().getCurrentFocus());
                                 MediaController.SearchImage photoEntry;
@@ -1033,7 +1046,7 @@ public void onClick(View v) {
                                 } else {
                                     selectedWebPhotos.put(photoEntry.id, photoEntry);
                                 }
-                                ((PhotoPickerPhotoCell) v.getParent()).checkBox.setChecked(selectedWebPhotos.containsKey(photoEntry.id), true);
+                                ((PhotoPickerPhotoCell) v.getParent()).setChecked(selectedWebPhotos.containsKey(photoEntry.id), true);
                             }
                             pickerBottomLayout.updateSelectedCount(selectedPhotos.size() + selectedWebPhotos.size(), true);
                             delegate.selectedPhotosChanged();
@@ -1062,7 +1075,7 @@ public void onClick(View v) {
                     } else {
                         imageView.setImageResource(R.drawable.nophotos);
                     }
-                    cell.checkBox.setChecked(selectedPhotos.containsKey(photoEntry.imageId), false);
+                    cell.setChecked(selectedPhotos.containsKey(photoEntry.imageId), false);
                     showing = PhotoViewer.getInstance().isShowingImage(photoEntry.path);
                 } else {
                     MediaController.SearchImage photoEntry;
@@ -1078,7 +1091,7 @@ public void onClick(View v) {
                     } else {
                         imageView.setImageResource(R.drawable.nophotos);
                     }
-                    cell.checkBox.setChecked(selectedWebPhotos.containsKey(photoEntry.id), false);
+                    cell.setChecked(selectedWebPhotos.containsKey(photoEntry.id), false);
                     showing = PhotoViewer.getInstance().isShowingImage(photoEntry.thumbUrl);
                 }
                 imageView.getImageReceiver().setVisible(!showing, true);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index 6f725fed9..2337a71b9 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -1,13 +1,14 @@
 /*
- * This is the source code of Telegram for Android v. 1.4.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
 
+import android.Manifest;
 import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.app.AlertDialog;
@@ -15,6 +16,7 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.SharedPreferences;
+import android.content.pm.PackageManager;
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
 import android.graphics.Paint;
@@ -55,7 +57,6 @@
 import org.telegram.messenger.UserObject;
 import org.telegram.messenger.query.SharedMediaQuery;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
@@ -63,6 +64,7 @@
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
+import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.MessageObject;
@@ -409,6 +411,8 @@ public void onDraw(Canvas canvas) {
         public int index;
         public int size;
         public int radius;
+        public int clipBottomAddition;
+        public float scale = 1.0f;
     }
 
     public static class EmptyPhotoViewerProvider implements PhotoViewerProvider {
@@ -443,8 +447,8 @@ public void setPhotoChecked(int index) {
         }
 
         @Override
-        public void cancelButtonPressed() {
-
+        public boolean cancelButtonPressed() {
+            return true;
         }
 
         @Override
@@ -476,7 +480,7 @@ public void updatePhotoAtIndex(int index) {
 
         void setPhotoChecked(int index);
 
-        void cancelButtonPressed();
+        boolean cancelButtonPressed();
 
         void sendButtonPressed(int index);
 
@@ -736,7 +740,7 @@ public void didReceivedNotification(int id, Object... args) {
                 if (needSearchImageInArr && isFirstLoading) {
                     isFirstLoading = false;
                     loadingMoreImages = true;
-                    SharedMediaQuery.loadMedia(currentDialogId, 0, 100, 0, SharedMediaQuery.MEDIA_PHOTOVIDEO, true, classGuid);
+                    SharedMediaQuery.loadMedia(currentDialogId, 0, 80, 0, SharedMediaQuery.MEDIA_PHOTOVIDEO, true, classGuid);
                 } else if (!imagesArr.isEmpty()) {
                     if (opennedFromMedia) {
                         actionBar.setTitle(LocaleController.formatString("Of", R.string.Of, currentIndex + 1, totalImagesCount));
@@ -801,9 +805,9 @@ public void didReceivedNotification(int id, Object... args) {
                         if (!endReached || !arr.isEmpty() && added != 0) {
                             loadingMoreImages = true;
                             if (opennedFromMedia) {
-                                SharedMediaQuery.loadMedia(currentDialogId, 0, 100, imagesArrTemp.get(imagesArrTemp.size() - 1).getId(), SharedMediaQuery.MEDIA_PHOTOVIDEO, true, classGuid);
+                                SharedMediaQuery.loadMedia(currentDialogId, 0, 80, imagesArrTemp.get(imagesArrTemp.size() - 1).getId(), SharedMediaQuery.MEDIA_PHOTOVIDEO, true, classGuid);
                             } else {
-                                SharedMediaQuery.loadMedia(currentDialogId, 0, 100, imagesArrTemp.get(0).getId(), SharedMediaQuery.MEDIA_PHOTOVIDEO, true, classGuid);
+                                SharedMediaQuery.loadMedia(currentDialogId, 0, 80, imagesArrTemp.get(0).getId(), SharedMediaQuery.MEDIA_PHOTOVIDEO, true, classGuid);
                             }
                         }
                     }
@@ -859,6 +863,7 @@ public void setParentActivity(final Activity activity) {
         scroller = new Scroller(activity);
 
         windowView = new FrameLayoutTouchListener(activity) {
+
             @Override
             public boolean dispatchKeyEventPreIme(KeyEvent event) {
                 if (event != null && event.getKeyCode() == KeyEvent.KEYCODE_BACK && event.getAction() == KeyEvent.ACTION_UP) {
@@ -941,6 +946,11 @@ public void onItemClick(int id) {
                     }
                     closePhoto(true, false);
                 } else if (id == gallery_menu_save) {
+                    if (Build.VERSION.SDK_INT >= 23 && parentActivity.checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
+                        parentActivity.requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 4);
+                        return;
+                    }
+
                     File f = null;
                     if (currentMessageObject != null) {
                         f = FileLoader.getPathToMessage(currentMessageObject.messageOwner);
@@ -1256,8 +1266,7 @@ public void onClick(View v) {
             @Override
             public void onClick(View view) {
                 if (placeProvider != null) {
-                    placeProvider.cancelButtonPressed();
-                    closePhoto(false, false);
+                    closePhoto(!placeProvider.cancelButtonPressed(), false);
                 }
             }
         });
@@ -2006,7 +2015,7 @@ private void toggleActionBar(boolean show, final boolean animated) {
                 currentActionBarAnimation.addListener(new AnimatorListenerAdapterProxy() {
                     @Override
                     public void onAnimationEnd(Object animation) {
-                        if (currentActionBarAnimation.equals(animation)) {
+                        if (currentActionBarAnimation != null && currentActionBarAnimation.equals(animation)) {
                             actionBar.setVisibility(View.GONE);
                             if (canShowBottom) {
                                 bottomLayout.clearAnimation();
@@ -2420,14 +2429,14 @@ private void setImageIndex(int index, boolean init) {
                 if (opennedFromMedia) {
                     if (imagesArr.size() < totalImagesCount && !loadingMoreImages && currentIndex > imagesArr.size() - 5) {
                         MessageObject lastMessage = imagesArr.get(imagesArr.size() - 1);
-                        SharedMediaQuery.loadMedia(currentDialogId, 0, 100, lastMessage.getId(), SharedMediaQuery.MEDIA_PHOTOVIDEO, true, classGuid);
+                        SharedMediaQuery.loadMedia(currentDialogId, 0, 80, lastMessage.getId(), SharedMediaQuery.MEDIA_PHOTOVIDEO, true, classGuid);
                         loadingMoreImages = true;
                     }
                     actionBar.setTitle(LocaleController.formatString("Of", R.string.Of, currentIndex + 1, totalImagesCount));
                 } else {
                     if (imagesArr.size() < totalImagesCount && !loadingMoreImages && currentIndex < 5) {
                         MessageObject lastMessage = imagesArr.get(0);
-                        SharedMediaQuery.loadMedia(currentDialogId, 0, 100, lastMessage.getId(), SharedMediaQuery.MEDIA_PHOTOVIDEO, true, classGuid);
+                        SharedMediaQuery.loadMedia(currentDialogId, 0, 80, lastMessage.getId(), SharedMediaQuery.MEDIA_PHOTOVIDEO, true, classGuid);
                         loadingMoreImages = true;
                     }
                     actionBar.setTitle(LocaleController.formatString("Of", R.string.Of, (totalImagesCount - imagesArr.size()) + currentIndex + 1, totalImagesCount));
@@ -2841,19 +2850,11 @@ public void openPhoto(final MessageObject messageObject, final TLRPC.FileLocatio
         }
 
         try {
-            if (photos != null) {
-                windowLayoutParams.type = WindowManager.LayoutParams.LAST_APPLICATION_WINDOW;
-                windowLayoutParams.flags = 0;
-                windowLayoutParams.softInputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN;
-                windowView.setFocusable(true);
-                containerView.setFocusable(true);
-            } else {
                 windowLayoutParams.type = WindowManager.LayoutParams.LAST_APPLICATION_WINDOW;
                 windowLayoutParams.flags = WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;
                 windowLayoutParams.softInputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_UNSPECIFIED;
                 windowView.setFocusable(false);
                 containerView.setFocusable(false);
-            }
             wm.addView(windowView, windowLayoutParams);
         } catch (Exception e) {
             FileLog.e("tmessages", e);
@@ -2897,13 +2898,13 @@ public void openPhoto(final MessageObject messageObject, final TLRPC.FileLocatio
             ViewProxy.setAlpha(animatingImageView, 1.0f);
             ViewProxy.setPivotX(animatingImageView, 0.0f);
             ViewProxy.setPivotY(animatingImageView, 0.0f);
-            ViewProxy.setScaleX(animatingImageView, 1.0f);
-            ViewProxy.setScaleY(animatingImageView, 1.0f);
-            ViewProxy.setTranslationX(animatingImageView, object.viewX + drawRegion.left);
-            ViewProxy.setTranslationY(animatingImageView, object.viewY + drawRegion.top);
+            ViewProxy.setScaleX(animatingImageView, object.scale);
+            ViewProxy.setScaleY(animatingImageView, object.scale);
+            ViewProxy.setTranslationX(animatingImageView, object.viewX + drawRegion.left * object.scale);
+            ViewProxy.setTranslationY(animatingImageView, object.viewY + drawRegion.top * object.scale);
             final ViewGroup.LayoutParams layoutParams = animatingImageView.getLayoutParams();
-            layoutParams.width = drawRegion.right - drawRegion.left;
-            layoutParams.height = drawRegion.bottom - drawRegion.top;
+            layoutParams.width = (drawRegion.right - drawRegion.left);
+            layoutParams.height = (drawRegion.bottom - drawRegion.top);
             animatingImageView.setLayoutParams(layoutParams);
 
             float scaleX = (float) AndroidUtilities.displaySize.x / layoutParams.width;
@@ -2922,7 +2923,7 @@ public void openPhoto(final MessageObject messageObject, final TLRPC.FileLocatio
             if (clipTop < 0) {
                 clipTop = 0;
             }
-            int clipBottom = (object.viewY + drawRegion.top + layoutParams.height) - (coords2[1] + object.parentView.getHeight() - AndroidUtilities.statusBarHeight);
+            int clipBottom = (object.viewY + drawRegion.top + layoutParams.height) - (coords2[1] + object.parentView.getHeight() - AndroidUtilities.statusBarHeight) + object.clipBottomAddition;
             if (clipBottom < 0) {
                 clipBottom = 0;
             }
@@ -2933,9 +2934,9 @@ public void openPhoto(final MessageObject messageObject, final TLRPC.FileLocatio
             animationValues[0][1] = ViewProxy.getScaleY(animatingImageView);
             animationValues[0][2] = ViewProxy.getTranslationX(animatingImageView);
             animationValues[0][3] = ViewProxy.getTranslationY(animatingImageView);
-            animationValues[0][4] = clipHorizontal;
-            animationValues[0][5] = clipTop;
-            animationValues[0][6] = clipBottom;
+            animationValues[0][4] = clipHorizontal * object.scale;
+            animationValues[0][5] = clipTop * object.scale;
+            animationValues[0][6] = clipBottom * object.scale;
             animationValues[0][7] = animatingImageView.getRadius();
 
             animationValues[1][0] = scale;
@@ -2978,6 +2979,14 @@ public void run() {
                     if (hideAfterAnimation != null) {
                         hideAfterAnimation.imageReceiver.setVisible(false, true);
                     }
+                    if (photos != null) {
+                        windowLayoutParams.flags = 0;
+                        windowLayoutParams.softInputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN;
+                        WindowManager wm = (WindowManager) parentActivity.getSystemService(Context.WINDOW_SERVICE);
+                        wm.updateViewLayout(windowView, windowLayoutParams);
+                        windowView.setFocusable(true);
+                        containerView.setFocusable(true);
+                    }
                 }
             };
 
@@ -3021,6 +3030,14 @@ public void run() {
                 }
             };
         } else {
+            if (photos != null) {
+                windowLayoutParams.flags = 0;
+                windowLayoutParams.softInputMode = WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN;
+                wm.updateViewLayout(windowView, windowLayoutParams);
+                windowView.setFocusable(true);
+                containerView.setFocusable(true);
+            }
+
             backgroundDrawable.setAlpha(255);
             ViewProxy.setAlpha(containerView, 1.0f);
             onPhotoShow(messageObject, fileLocation, messages, photos, index, object);
@@ -3128,7 +3145,7 @@ public void closePhoto(boolean animated, boolean fromEditMode) {
                 if (clipTop < 0) {
                     clipTop = 0;
                 }
-                int clipBottom = (object.viewY + drawRegion.top + (drawRegion.bottom - drawRegion.top)) - (coords2[1] + object.parentView.getHeight() - AndroidUtilities.statusBarHeight);
+                int clipBottom = (object.viewY + drawRegion.top + (drawRegion.bottom - drawRegion.top)) - (coords2[1] + object.parentView.getHeight() - AndroidUtilities.statusBarHeight) + object.clipBottomAddition;
                 if (clipBottom < 0) {
                     clipBottom = 0;
                 }
@@ -3145,13 +3162,13 @@ public void closePhoto(boolean animated, boolean fromEditMode) {
                 animationValues[0][6] = 0;
                 animationValues[0][7] = 0;
 
-                animationValues[1][0] = 1;
-                animationValues[1][1] = 1;
-                animationValues[1][2] = object.viewX + drawRegion.left;
-                animationValues[1][3] = object.viewY + drawRegion.top;
-                animationValues[1][4] = clipHorizontal;
-                animationValues[1][5] = clipTop;
-                animationValues[1][6] = clipBottom;
+                animationValues[1][0] = object.scale;
+                animationValues[1][1] = object.scale;
+                animationValues[1][2] = object.viewX + drawRegion.left * object.scale;
+                animationValues[1][3] = object.viewY + drawRegion.top * object.scale;
+                animationValues[1][4] = clipHorizontal * object.scale;
+                animationValues[1][5] = clipTop * object.scale;
+                animationValues[1][6] = clipBottom * object.scale;
                 animationValues[1][7] = object.radius;
 
                 animatorSet.playTogether(
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
index 4ce0a3c6a..6c3b97dae 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PopupNotificationActivity.java
@@ -1,19 +1,25 @@
 /*
- * This is the source code of Telegram for Android v. 1.4.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
 
+import android.annotation.TargetApi;
 import android.app.Activity;
+import android.app.AlertDialog;
 import android.app.KeyguardManager;
 import android.content.Context;
+import android.content.DialogInterface;
 import android.content.Intent;
+import android.content.pm.PackageManager;
 import android.content.res.Configuration;
 import android.graphics.drawable.Drawable;
+import android.net.Uri;
+import android.os.Build;
 import android.os.Bundle;
 import android.os.PowerManager;
 import android.text.TextUtils;
@@ -40,11 +46,11 @@
 import org.telegram.messenger.NotificationsController;
 import org.telegram.messenger.UserObject;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
+import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.messenger.MessageObject;
 import org.telegram.ui.ActionBar.ActionBar;
@@ -76,6 +82,7 @@
     private ViewGroup centerView;
     private ViewGroup leftView;
     private ViewGroup rightView;
+    private RelativeLayout popupContainer;
     private ArrayList<ViewGroup> textViews = new ArrayList<>();
     private ArrayList<ViewGroup> imageViews = new ArrayList<>();
     private ArrayList<ViewGroup> audioViews = new ArrayList<>();
@@ -195,6 +202,8 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                     }
                     if (chatActivityEnterView.isPopupView(child)) {
                         child.measure(MeasureSpec.makeMeasureSpec(widthSize, MeasureSpec.EXACTLY), MeasureSpec.makeMeasureSpec(child.getLayoutParams().height, MeasureSpec.EXACTLY));
+                    } else if (chatActivityEnterView.isRecordCircle(child)) {
+                        measureChildWithMargins(child, widthMeasureSpec, 0, heightMeasureSpec, 0);
                     } else {
                         child.measure(MeasureSpec.makeMeasureSpec(widthSize, MeasureSpec.EXACTLY), MeasureSpec.makeMeasureSpec(Math.max(AndroidUtilities.dp(10), heightSize + AndroidUtilities.dp(2)), MeasureSpec.EXACTLY));
                     }
@@ -255,6 +264,9 @@ protected void onLayout(boolean changed, int l, int t, int r, int b) {
                     }
                     if (chatActivityEnterView.isPopupView(child)) {
                         childTop = paddingBottom != 0 ? getMeasuredHeight() - paddingBottom : getMeasuredHeight();
+                    } else if (chatActivityEnterView.isRecordCircle(child)) {
+                        childTop = popupContainer.getTop() + popupContainer.getMeasuredHeight() - child.getMeasuredHeight() - lp.bottomMargin;
+                        childLeft = popupContainer.getLeft() + popupContainer.getMeasuredWidth() - child.getMeasuredWidth() - lp.rightMargin;
                     }
                     child.layout(childLeft, childTop, childLeft + width, childTop + height);
                 }
@@ -268,7 +280,7 @@ protected void onLayout(boolean changed, int l, int t, int r, int b) {
         RelativeLayout relativeLayout = new RelativeLayout(this);
         contentView.addView(relativeLayout, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
 
-        RelativeLayout popupContainer = new RelativeLayout(this);
+        popupContainer = new RelativeLayout(this);
         popupContainer.setBackgroundColor(0xffffffff);
         relativeLayout.addView(popupContainer, LayoutHelper.createRelative(LayoutHelper.MATCH_PARENT, 240, 12, 0, 12, 0, RelativeLayout.CENTER_IN_PARENT));
 
@@ -427,6 +439,34 @@ protected void onNewIntent(Intent intent) {
         handleIntent(intent);
     }
 
+    @Override
+    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
+        if (requestCode == 3) {
+            if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {
+                return;
+            }
+            AlertDialog.Builder builder = new AlertDialog.Builder(this);
+            builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
+            builder.setMessage(LocaleController.getString("PermissionNoAudio", R.string.PermissionNoAudio));
+            builder.setNegativeButton(LocaleController.getString("PermissionOpenSettings", R.string.PermissionOpenSettings), new DialogInterface.OnClickListener() {
+                @TargetApi(Build.VERSION_CODES.GINGERBREAD)
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    try {
+                        Intent intent = new Intent(android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS);
+                        intent.setData(Uri.parse("package:" + ApplicationLoader.applicationContext.getPackageName()));
+                        startActivity(intent);
+                    } catch (Exception e) {
+                        FileLog.e("tmessages", e);
+                    }
+                }
+            });
+            builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), null);
+            builder.show();
+        }
+    }
+
     private void switchToNextMessage() {
         if (NotificationsController.getInstance().popupMessages.size() > 1) {
             if (currentMessageNum < NotificationsController.getInstance().popupMessages.size() - 1) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
index 4057fc16f..c5e06c0c6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
index c5dc7e324..ea8f79748 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -19,7 +19,6 @@
 import android.content.SharedPreferences;
 import android.content.res.Configuration;
 import android.graphics.Bitmap;
-import android.graphics.Canvas;
 import android.graphics.Outline;
 import android.graphics.PorterDuff;
 import android.graphics.drawable.Drawable;
@@ -27,21 +26,18 @@
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
-import android.support.annotation.NonNull;
 import android.text.TextUtils;
 import android.util.TypedValue;
 import android.view.Gravity;
+import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.ViewOutlineProvider;
 import android.view.ViewTreeObserver;
 import android.view.animation.AccelerateInterpolator;
 import android.view.animation.DecelerateInterpolator;
-import android.widget.AbsListView;
-import android.widget.AdapterView;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
-import android.widget.ListView;
 import android.widget.TextView;
 import android.widget.Toast;
 
@@ -52,6 +48,7 @@
 import org.telegram.messenger.AnimationCompat.ObjectAnimatorProxy;
 import org.telegram.messenger.AnimationCompat.ViewProxy;
 import org.telegram.messenger.ApplicationLoader;
+import org.telegram.messenger.BuildConfig;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.ContactsController;
 import org.telegram.messenger.FileLog;
@@ -68,13 +65,14 @@
 import org.telegram.messenger.Utilities;
 import org.telegram.messenger.query.BotQuery;
 import org.telegram.messenger.query.SharedMediaQuery;
+import org.telegram.messenger.support.widget.LinearLayoutManager;
+import org.telegram.messenger.support.widget.RecyclerView;
 import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
 import org.telegram.ui.ActionBar.ActionBarMenuItem;
 import org.telegram.ui.ActionBar.BaseFragment;
-import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.AddMemberCell;
 import org.telegram.ui.Cells.DividerCell;
 import org.telegram.ui.Cells.EmptyCell;
@@ -87,6 +85,7 @@
 import org.telegram.ui.Components.BackupImageView;
 import org.telegram.ui.Components.IdenticonDrawable;
 import org.telegram.ui.Components.LayoutHelper;
+import org.telegram.ui.Components.RecyclerListView;
 
 import java.util.ArrayList;
 import java.util.Collections;
@@ -96,19 +95,28 @@
 
 public class ProfileActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, DialogsActivity.MessagesActivityDelegate, PhotoViewer.PhotoViewerProvider {
 
-    private ListView listView;
+    private RecyclerListView listView;
+    private LinearLayoutManager layoutManager;
     private ListAdapter listAdapter;
     private BackupImageView avatarImage;
     private TextView nameTextView;
     private TextView onlineTextView;
     private ImageView writeButton;
     private AnimatorSetProxy writeButtonAnimation;
+    private View extraHeightView;
+    private View shadowView;
     private int user_id;
     private int chat_id;
     private long dialog_id;
     private boolean creatingChat;
     private boolean userBlocked;
 
+    private boolean openAnimationInProgress;
+    private boolean playProfileAnimation;
+    private int extraHeight;
+    private int initialAnimationExtraHeight;
+    private float animationProgress;
+
     private AvatarUpdater avatarUpdater;
     private TLRPC.ChatFull info;
     private TLRPC.TL_chatParticipant selectedUser;
@@ -182,6 +190,9 @@ public boolean onFragmentCreate() {
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.encryptedChatUpdated);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.blockedUsersDidLoaded);
             NotificationCenter.getInstance().addObserver(this, NotificationCenter.botInfoDidLoaded);
+            if (currentEncryptedChat != null) {
+                NotificationCenter.getInstance().addObserver(this, NotificationCenter.didReceivedNewMessages);
+            }
             userBlocked = MessagesController.getInstance().blockedUsers.contains(user_id);
             if ((user.flags & TLRPC.USER_FLAG_BOT) != 0) {
                 BotQuery.loadBotInfo(user.id, true, classGuid);
@@ -256,6 +267,9 @@ public void onFragmentDestroy() {
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.blockedUsersDidLoaded);
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.botInfoDidLoaded);
             MessagesController.getInstance().cancelLoadFullUser(user_id);
+            if (currentEncryptedChat != null) {
+                NotificationCenter.getInstance().removeObserver(this, NotificationCenter.didReceivedNewMessages);
+            }
         } else if (chat_id != 0) {
             NotificationCenter.getInstance().removeObserver(this, NotificationCenter.chatInfoDidLoaded);
             avatarUpdater.clear();
@@ -264,14 +278,17 @@ public void onFragmentDestroy() {
 
     @Override
     public View createView(Context context) {
+        SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
         actionBar.setBackgroundColor(AvatarDrawable.getProfileBackColorForId(user_id != 0 || ChatObject.isChannel(chat_id) ? 5 : chat_id));
         actionBar.setItemsBackground(AvatarDrawable.getButtonColorForId(user_id != 0 || ChatObject.isChannel(chat_id) ? 5 : chat_id));
-        //actionBar.setBackButtonImage(R.drawable.ic_ab_back);
-        SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
         Drawable back = context.getResources().getDrawable(R.drawable.ic_ab_back);
         back.setColorFilter(themePrefs.getInt("profileHeaderIconsColor", 0xffffffff), PorterDuff.Mode.MULTIPLY);
         actionBar.setBackButtonDrawable(back);
-        actionBar.setExtraHeight(AndroidUtilities.dp(88), false);
+        //actionBar.setBackButtonDrawable(new BackDrawable(false));
+        actionBar.setCastShadows(false);
+        actionBar.setAddToContainer(false);
+        hasOwnBackground = true;
+        extraHeight = 88;
         if (AndroidUtilities.isTablet()) {
             actionBar.setOccupyStatusBar(false);
         }
@@ -321,11 +338,14 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     TLRPC.User user = MessagesController.getInstance().getUser(user_id);
                     Bundle args = new Bundle();
                     args.putInt("user_id", user.id);
+                    args.putBoolean("addContact", true);
                     presentFragment(new ContactAddActivity(args));
                 } else if (id == share_contact) {
                     Bundle args = new Bundle();
                     args.putBoolean("onlySelect", true);
                     args.putInt("dialogsType", 1);
+                    args.putString("selectAlertString", LocaleController.getString("SendMessagesTo", R.string.SendMessagesTo));
+                    args.putString("selectAlertStringGroup", LocaleController.getString("SendMessagesToGroup", R.string.SendMessagesToGroup));
                     DialogsActivity fragment = new DialogsActivity(args);
                     fragment.setDelegate(ProfileActivity.this);
                     presentFragment(fragment);
@@ -428,146 +448,40 @@ public void didSelectDialog(DialogsActivity fragment, long did, boolean param) {
 
         listAdapter = new ListAdapter(context);
 
-        fragmentView = new FrameLayout(context) {
+        fragmentView = new FrameLayout(context);
+        FrameLayout frameLayout = (FrameLayout) fragmentView;
+
+        listView = new RecyclerListView(context) {
             @Override
-            protected boolean drawChild(@NonNull Canvas canvas, @NonNull View child, long drawingTime) {
-                if (child == listView) {
-                    boolean result = super.drawChild(canvas, child, drawingTime);
-                    if (parentLayout != null) {
-                        int actionBarHeight = 0;
-                        int childCount = getChildCount();
-                        for (int a = 0; a < childCount; a++) {
-                            View view = getChildAt(a);
-                            if (view == child) {
-                                continue;
-                            }
-                            if (view instanceof ActionBar && view.getVisibility() == VISIBLE) {
-                                if (((ActionBar) view).getCastShadows()) {
-                                    actionBarHeight = view.getMeasuredHeight();
-                                }
-                                break;
-                            }
-                        }
-                        parentLayout.drawHeaderShadow(canvas, actionBarHeight);
-                    }
-                    return result;
-                } else {
-                    return super.drawChild(canvas, child, drawingTime);
-                }
+            public boolean hasOverlappingRendering() {
+                return false;
             }
         };
-        FrameLayout frameLayout = (FrameLayout) fragmentView;
+        //listView.setBackgroundColor(0xffffffff);
 
-        avatarImage = new BackupImageView(context);
-        avatarImage.setRoundRadius(AndroidUtilities.dp(30));
-        //int radius = AndroidUtilities.dp(themePrefs.getInt("profileAvatarRadius", 32));
-        //avatarImage.setRoundRadius(radius);
-        actionBar.addView(avatarImage);
-        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) avatarImage.getLayoutParams();
-        layoutParams.gravity = (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.BOTTOM;
-        layoutParams.width = AndroidUtilities.dp(60);
-        layoutParams.height = AndroidUtilities.dp(60);
-        layoutParams.leftMargin = LocaleController.isRTL ? 0 : AndroidUtilities.dp(17);
-        layoutParams.rightMargin = LocaleController.isRTL ? AndroidUtilities.dp(17) : 0;
-        layoutParams.bottomMargin = AndroidUtilities.dp(22);
-        avatarImage.setLayoutParams(layoutParams);
-        avatarImage.setOnClickListener(new View.OnClickListener() {
+        listView.setVerticalScrollBarEnabled(false);
+        listView.setItemAnimator(null);
+        listView.setLayoutAnimation(null);
+        layoutManager = new LinearLayoutManager(context) {
             @Override
-            public void onClick(View v) {
-                if (user_id != 0) {
-                    TLRPC.User user = MessagesController.getInstance().getUser(user_id);
-                    if (user.photo != null && user.photo.photo_big != null) {
-                        PhotoViewer.getInstance().setParentActivity(getParentActivity());
-                        PhotoViewer.getInstance().openPhoto(user.photo.photo_big, ProfileActivity.this);
-                    }
-                } else if (chat_id != 0) {
-                    TLRPC.Chat chat = MessagesController.getInstance().getChat(chat_id);
-                    if (chat.photo != null && chat.photo.photo_big != null) {
-                        PhotoViewer.getInstance().setParentActivity(getParentActivity());
-                        PhotoViewer.getInstance().openPhoto(chat.photo.photo_big, ProfileActivity.this);
-                    }
-                }
+            public boolean supportsPredictiveItemAnimations() {
+                return false;
             }
-        });
-
-        nameTextView = new TextView(context);
-        nameTextView.setTextColor(0xffffffff);
-        nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 20);
-        nameTextView.setLines(1);
-        nameTextView.setMaxLines(1);
-        nameTextView.setSingleLine(true);
-        nameTextView.setEllipsize(TextUtils.TruncateAt.END);
-        nameTextView.setGravity((LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT));
-        nameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-        actionBar.addView(nameTextView);
-        layoutParams = (FrameLayout.LayoutParams) nameTextView.getLayoutParams();
-        layoutParams.width = LayoutHelper.WRAP_CONTENT;
-        layoutParams.height = LayoutHelper.WRAP_CONTENT;
-        layoutParams.leftMargin = AndroidUtilities.dp(LocaleController.isRTL ? 16 : 97);
-        layoutParams.rightMargin = AndroidUtilities.dp(LocaleController.isRTL ? 97 : 16);
-        layoutParams.bottomMargin = AndroidUtilities.dp(51);
-        layoutParams.gravity = (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.BOTTOM;
-        nameTextView.setLayoutParams(layoutParams);
-
-        onlineTextView = new TextView(context);
-        onlineTextView.setTextColor(AvatarDrawable.getProfileTextColorForId(user_id != 0 || ChatObject.isChannel(chat_id) ? 5 : chat_id));
-        onlineTextView.setTextColor(AndroidUtilities.getIntDarkerColor("themeColor", -0x40));
-        onlineTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
-        onlineTextView.setLines(1);
-        onlineTextView.setMaxLines(1);
-        onlineTextView.setSingleLine(true);
-        onlineTextView.setEllipsize(TextUtils.TruncateAt.END);
-        onlineTextView.setGravity((LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT));
-        actionBar.addView(onlineTextView);
-        layoutParams = (FrameLayout.LayoutParams) onlineTextView.getLayoutParams();
-        layoutParams.width = LayoutHelper.WRAP_CONTENT;
-        layoutParams.height = LayoutHelper.WRAP_CONTENT;
-        layoutParams.leftMargin = AndroidUtilities.dp(LocaleController.isRTL ? 16 : 97);
-        layoutParams.rightMargin = AndroidUtilities.dp(LocaleController.isRTL ? 97 : 16);
-        layoutParams.bottomMargin = AndroidUtilities.dp(30);
-        layoutParams.gravity = (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.BOTTOM;
-        onlineTextView.setLayoutParams(layoutParams);
+        };
+        layoutManager.setOrientation(LinearLayoutManager.VERTICAL);
+        listView.setLayoutManager(layoutManager);
+        //listView.setGlowColor(AvatarDrawable.getProfileBackColorForId(user_id != 0 || ChatObject.isChannel(chat_id) ? 5 : chat_id));
 
-        adminTextView = new TextView(context);
-        //adminTextView.setTextColor(AvatarDrawable.getProfileTextColorForId(user_id != 0 ? 5 : chat_id));
-        adminTextView.setTextColor(AndroidUtilities.getIntDarkerColor("themeColor", -0x40));
-        adminTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
-        adminTextView.setLines(1);
-        adminTextView.setMaxLines(1);
-        adminTextView.setSingleLine(true);
-        adminTextView.setEllipsize(TextUtils.TruncateAt.END);
-        adminTextView.setGravity((LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT));
-        adminTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-        actionBar.addView(adminTextView);
-        layoutParams = (FrameLayout.LayoutParams) adminTextView.getLayoutParams();
-        layoutParams.width = LayoutHelper.WRAP_CONTENT;
-        layoutParams.height = LayoutHelper.WRAP_CONTENT;
-        layoutParams.leftMargin = AndroidUtilities.dp(LocaleController.isRTL ? 75 : 97);
-        layoutParams.rightMargin = AndroidUtilities.dp(LocaleController.isRTL ? 97 : 75);
-        layoutParams.bottomMargin = AndroidUtilities.dp(10);
-        layoutParams.gravity = (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.BOTTOM;
-        adminTextView.setLayoutParams(layoutParams);
-
-        listView = new ListView(context);
-        listView.setDivider(null);
-        listView.setDividerHeight(0);
-        listView.setVerticalScrollBarEnabled(false);
-        AndroidUtilities.setListViewEdgeEffectColor(listView, AvatarDrawable.getProfileBackColorForId(user_id != 0 || ChatObject.isChannel(chat_id) ? 5 : chat_id));
-        frameLayout.addView(listView);
-        layoutParams = (FrameLayout.LayoutParams) listView.getLayoutParams();
-        layoutParams.width = LayoutHelper.MATCH_PARENT;
-        layoutParams.height = LayoutHelper.MATCH_PARENT;
-        layoutParams.gravity = Gravity.TOP;
-        listView.setLayoutParams(layoutParams);
+        frameLayout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT));
 
         listView.setAdapter(listAdapter);
-        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+        listView.setOnItemClickListener(new RecyclerListView.OnItemClickListener() {
             @Override
-            public void onItemClick(AdapterView<?> adapterView, View view, final int i, long l) {
+            public void onItemClick(View view, final int position) {
                 if (getParentActivity() == null) {
                     return;
                 }
-                if (i == sharedMediaRow) {
+                if (position == sharedMediaRow) {
                     Bundle args = new Bundle();
                     if (user_id != 0) {
                         args.putLong("dialog_id", dialog_id != 0 ? dialog_id : user_id);
@@ -575,13 +489,13 @@ public void onItemClick(AdapterView<?> adapterView, View view, final int i, long
                         args.putLong("dialog_id", -chat_id);
                     }
                     presentFragment(new MediaActivity(args));
-                } else if (i == settingsKeyRow) {
+                } else if (position == settingsKeyRow) {
                     Bundle args = new Bundle();
                     args.putInt("chat_id", (int) (dialog_id >> 32));
                     presentFragment(new IdenticonActivity(args));
-                } else if (i == settingsTimerRow) {
+                } else if (position == settingsTimerRow) {
                     showDialog(AndroidUtilities.buildTTLAlert(getParentActivity(), currentEncryptedChat).create());
-                } else if (i == settingsNotificationsRow) {
+                } else if (position == settingsNotificationsRow) {
                     Bundle args = new Bundle();
                     if (user_id != 0) {
                         args.putLong("dialog_id", dialog_id == 0 ? user_id : dialog_id);
@@ -589,7 +503,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, final int i, long
                         args.putLong("dialog_id", -chat_id);
                     }
                     presentFragment(new ProfileNotificationsActivity(args));
-                } else if (i == startSecretChatRow) {
+                } else if (position == startSecretChatRow) {
                     AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                     builder.setMessage(LocaleController.getString("AreYouSureSecretChat", R.string.AreYouSureSecretChat));
                     builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
@@ -602,7 +516,47 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     });
                     builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                     showDialog(builder.create());
-                } else if (i == phoneRow) {
+                } else if (position == usernameRow) {
+                    final TLRPC.User user = MessagesController.getInstance().getUser(user_id);
+                    if (user == null || user.username == null) {
+                        return;
+                    }
+                    try {
+                        String text = "@" + user.username;
+                        if (Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.HONEYCOMB) {
+                            android.text.ClipboardManager clipboard = (android.text.ClipboardManager) ApplicationLoader.applicationContext.getSystemService(Context.CLIPBOARD_SERVICE);
+                            clipboard.setText(text);
+                        } else {
+                            android.content.ClipboardManager clipboard = (android.content.ClipboardManager) ApplicationLoader.applicationContext.getSystemService(Context.CLIPBOARD_SERVICE);
+                            android.content.ClipData clip = android.content.ClipData.newPlainText("label", text);
+                            clipboard.setPrimaryClip(clip);
+                        }
+                        Toast.makeText(getParentActivity(), LocaleController.formatString("Copied", R.string.Copied, text), Toast.LENGTH_SHORT).show();
+                    } catch (Exception e) {
+                        FileLog.e("tmessages", e);
+                    }
+                    /*AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+                    builder.setItems(new CharSequence[]{LocaleController.getString("Copy", R.string.Copy)}, new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(DialogInterface dialogInterface, int i) {
+                            if (i == 0) {
+                                try {
+                                    if (Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.HONEYCOMB) {
+                                        android.text.ClipboardManager clipboard = (android.text.ClipboardManager) ApplicationLoader.applicationContext.getSystemService(Context.CLIPBOARD_SERVICE);
+                                        clipboard.setText("@" + user.username);
+                                    } else {
+                                        android.content.ClipboardManager clipboard = (android.content.ClipboardManager) ApplicationLoader.applicationContext.getSystemService(Context.CLIPBOARD_SERVICE);
+                                        android.content.ClipData clip = android.content.ClipData.newPlainText("label", "@" + user.username);
+                                        clipboard.setPrimaryClip(clip);
+                                    }
+                                } catch (Exception e) {
+                                    FileLog.e("tmessages", e);
+                                }
+                            }
+                        }
+                    });
+                    showDialog(builder.create());*/
+                } else if (position == phoneRow) {
                     final TLRPC.User user = MessagesController.getInstance().getUser(user_id);
                     if (user == null || user.phone == null || user.phone.length() == 0 || getParentActivity() == null) {
                         return;
@@ -638,36 +592,17 @@ public void onClick(DialogInterface dialogInterface, int i) {
                         }
                     });
                     showDialog(builder.create());
-                } else if(i == usernameRow) {
-                    final TLRPC.User user = MessagesController.getInstance().getUser(user_id);
-                    if (user == null || user.username == null || user.username.length() == 0 || getParentActivity() == null) {
-                        return;
-                    }
-                                try {
-                                    String text = "@" + user.username;
-                                    if (Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.HONEYCOMB) {
-                                        android.text.ClipboardManager clipboard = (android.text.ClipboardManager) ApplicationLoader.applicationContext.getSystemService(Context.CLIPBOARD_SERVICE);
-                                        clipboard.setText(text);
-                                    } else {
-                                        android.content.ClipboardManager clipboard = (android.content.ClipboardManager) ApplicationLoader.applicationContext.getSystemService(Context.CLIPBOARD_SERVICE);
-                                        android.content.ClipData clip = android.content.ClipData.newPlainText("label", text);
-                                        clipboard.setPrimaryClip(clip);
-                                    }
-                                    Toast.makeText(getParentActivity(), LocaleController.formatString("Copied", R.string.Copied, text), Toast.LENGTH_SHORT).show();
-                                } catch (Exception e) {
-                                    FileLog.e("tmessages", e);
-                                }
-                }else if (i > emptyRowChat2 && i < membersEndRow) {
-                    int user_id = info.participants.participants.get(sortedUsers.get(i - emptyRowChat2 - 1)).user_id;
+                } else if (position > emptyRowChat2 && position < membersEndRow) {
+                    int user_id = info.participants.participants.get(sortedUsers.get(position - emptyRowChat2 - 1)).user_id;
                     if (user_id == UserConfig.getClientUserId()) {
                         return;
                     }
                     Bundle args = new Bundle();
                     args.putInt("user_id", user_id);
                     presentFragment(new ProfileActivity(args));
-                } else if (i == addMemberRow) {
+                } else if (position == addMemberRow) {
                     openAddMember();
-                } else if (i == channelNameRow) {
+                } else if (position == channelNameRow) {
                     try {
                         Intent intent = new Intent(Intent.ACTION_SEND);
                         intent.setType("text/plain");
@@ -676,7 +611,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     } catch (Exception e) {
                         FileLog.e("tmessages", e);
                     }
-                } else if (i == leaveChannelRow) {
+                } else if (position == leaveChannelRow) {
                     AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                     builder.setMessage(ChatObject.isChannel(chat_id) ? LocaleController.getString("ChannelLeaveAlert", R.string.ChannelLeaveAlert) : LocaleController.getString("AreYouSureDeleteAndExit", R.string.AreYouSureDeleteAndExit));
                     builder.setTitle(LocaleController.getString("AppName", R.string.AppName));
@@ -688,18 +623,18 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     });
                     builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                     showDialog(builder.create());
-                } else if (i == membersRow || i == blockedUsersRow || i == managementRow) {
+                } else if (position == membersRow || position == blockedUsersRow || position == managementRow) {
                     Bundle args = new Bundle();
                     args.putInt("chat_id", chat_id);
-                    if (i == blockedUsersRow) {
+                    if (position == blockedUsersRow) {
                         args.putInt("type", 0);
-                    } else if (i == managementRow) {
+                    } else if (position == managementRow) {
                         args.putInt("type", 1);
-                    } else if (i == membersRow) {
+                    } else if (position == membersRow) {
                         args.putInt("type", 2);
                     }
                     presentFragment(new ChannelUsersActivity(args));
-                } else if (i == channelInfoRow) {
+                } else if (position == channelInfoRow) {
                     AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
                     builder.setItems(new CharSequence[]{LocaleController.getString("Copy", R.string.Copy)}, new DialogInterface.OnClickListener() {
                         @Override
@@ -722,16 +657,16 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 }
             }
         });
+
         if (chat_id != 0) {
-            listView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
+            listView.setOnItemLongClickListener(new RecyclerListView.OnItemLongClickListener() {
                 @Override
-                public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, long l) {
-                    if (i > emptyRowChat2 && i < membersEndRow) {
+                public boolean onItemClick(View view, int position) {
+                    if (position > emptyRowChat2 && position < membersEndRow) {
                         if (getParentActivity() == null) {
                             return false;
                         }
-
-                        TLRPC.TL_chatParticipant user = info.participants.participants.get(sortedUsers.get(i - emptyRowChat2 - 1));
+                        TLRPC.TL_chatParticipant user = info.participants.participants.get(sortedUsers.get(position - emptyRowChat2 - 1));
                         if (user.user_id == UserConfig.getClientUserId()) {
                             return false;
                         }
@@ -752,7 +687,6 @@ public void onClick(DialogInterface dialogInterface, int i) {
                             }
                         });
                         showDialog(builder.create());
-
                         return true;
                     }
                     return false;
@@ -767,6 +701,77 @@ public void onClick(DialogInterface dialogInterface, int i) {
 
         frameLayout.addView(actionBar);
 
+        extraHeightView = new View(context);
+        ViewProxy.setPivotY(extraHeightView, 0);
+        //extraHeightView.setBackgroundColor(AvatarDrawable.getProfileBackColorForId(user_id != 0 || ChatObject.isChannel(chat_id) ? 5 : chat_id));
+        frameLayout.addView(extraHeightView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 88));
+
+        shadowView = new View(context);
+        shadowView.setBackgroundResource(R.drawable.header_shadow);
+        frameLayout.addView(shadowView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 3));
+
+        avatarImage = new BackupImageView(context);
+        avatarImage.setRoundRadius(AndroidUtilities.dp(21));
+        ViewProxy.setPivotX(avatarImage, 0);
+        ViewProxy.setPivotY(avatarImage, 0);
+        frameLayout.addView(avatarImage, LayoutHelper.createFrame(42, 42, Gravity.TOP | Gravity.LEFT, 64, 0, 0, 0));
+        avatarImage.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (user_id != 0) {
+                    TLRPC.User user = MessagesController.getInstance().getUser(user_id);
+                    if (user.photo != null && user.photo.photo_big != null) {
+                        PhotoViewer.getInstance().setParentActivity(getParentActivity());
+                        PhotoViewer.getInstance().openPhoto(user.photo.photo_big, ProfileActivity.this);
+                    }
+                } else if (chat_id != 0) {
+                    TLRPC.Chat chat = MessagesController.getInstance().getChat(chat_id);
+                    if (chat.photo != null && chat.photo.photo_big != null) {
+                        PhotoViewer.getInstance().setParentActivity(getParentActivity());
+                        PhotoViewer.getInstance().openPhoto(chat.photo.photo_big, ProfileActivity.this);
+                    }
+                }
+            }
+        });
+
+        nameTextView = new TextView(context);
+        nameTextView.setTextColor(0xffffffff);
+        nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
+        nameTextView.setLines(1);
+        nameTextView.setMaxLines(1);
+        nameTextView.setSingleLine(true);
+        nameTextView.setEllipsize(TextUtils.TruncateAt.END);
+        nameTextView.setGravity(Gravity.LEFT);
+        nameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
+        nameTextView.setCompoundDrawablePadding(AndroidUtilities.dp(4));
+        ViewProxy.setPivotX(nameTextView, 0);
+        ViewProxy.setPivotY(nameTextView, 0);
+        frameLayout.addView(nameTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 118, 0, 48, 0));
+
+        onlineTextView = new TextView(context);
+        //onlineTextView.setTextColor(AvatarDrawable.getProfileTextColorForId(user_id != 0 || ChatObject.isChannel(chat_id) ? 5 : chat_id));
+        onlineTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
+        onlineTextView.setLines(1);
+        onlineTextView.setMaxLines(1);
+        onlineTextView.setSingleLine(true);
+        onlineTextView.setEllipsize(TextUtils.TruncateAt.END);
+        onlineTextView.setGravity(Gravity.LEFT);
+        frameLayout.addView(onlineTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 118, 0, 48, 0));
+
+        adminTextView = new TextView(context);
+        //adminTextView.setTextColor(AvatarDrawable.getProfileTextColorForId(user_id != 0 ? 5 : chat_id));
+        adminTextView.setTextColor(AndroidUtilities.getIntDarkerColor("themeColor", -0x40));
+        adminTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
+        adminTextView.setLines(1);
+        adminTextView.setMaxLines(1);
+        adminTextView.setSingleLine(true);
+        adminTextView.setEllipsize(TextUtils.TruncateAt.END);
+        adminTextView.setGravity(Gravity.LEFT);
+        adminTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
+
+        frameLayout.addView(adminTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 118, 0, 48, 0));
+
+
         if (user_id != 0 || chat_id >= 0 && !ChatObject.isLeftFromChat(currentChat)) {
             writeButton = new ImageView(context);
             //writeButton.setBackgroundResource(R.drawable.floating_user_states);
@@ -794,7 +799,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     writeButton.setImageDrawable(camera);
                 }
             }
-            frameLayout.addView(writeButton);
+            frameLayout.addView(writeButton, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.RIGHT | Gravity.TOP, 0, 0, 16, 0));
             if (Build.VERSION.SDK_INT >= 21) {
                 StateListAnimator animator = new StateListAnimator();
                 animator.addState(new int[]{android.R.attr.state_pressed}, ObjectAnimator.ofFloat(writeButton, "translationZ", AndroidUtilities.dp(2), AndroidUtilities.dp(4)).setDuration(200));
@@ -808,13 +813,6 @@ public void getOutline(View view, Outline outline) {
                     }
                 });
             }
-            layoutParams = (FrameLayout.LayoutParams) writeButton.getLayoutParams();
-            layoutParams.width = LayoutHelper.WRAP_CONTENT;
-            layoutParams.height = LayoutHelper.WRAP_CONTENT;
-            layoutParams.leftMargin = AndroidUtilities.dp(LocaleController.isRTL ? 16 : 0);
-            layoutParams.rightMargin = AndroidUtilities.dp(LocaleController.isRTL ? 0 : 16);
-            layoutParams.gravity = (LocaleController.isRTL ? Gravity.LEFT : Gravity.RIGHT);
-            writeButton.setLayoutParams(layoutParams);
             writeButton.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
@@ -822,6 +820,9 @@ public void onClick(View v) {
                         return;
                     }
                     if (user_id != 0) {
+                        if (playProfileAnimation && parentLayout.fragmentsStack.get(parentLayout.fragmentsStack.size() - 2) instanceof ChatActivity) {
+                            finishFragment();
+                        } else {
                         TLRPC.User user = MessagesController.getInstance().getUser(user_id);
                         if (user == null || user instanceof TLRPC.TL_userEmpty) {
                             return;
@@ -831,6 +832,7 @@ public void onClick(View v) {
                         Bundle args = new Bundle();
                         args.putInt("user_id", user_id);
                         presentFragment(new ChatActivity(args), true);
+                        }
                     } else if (chat_id != 0) {
                         if (ChatObject.isChannel(currentChat) && (currentChat.flags & TLRPC.CHAT_FLAG_ADMIN) == 0) {
                             NotificationCenter.getInstance().removeObserver(ProfileActivity.this, NotificationCenter.closeChats);
@@ -866,19 +868,21 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 }
             });
         }
+        needLayout();
 
-        listView.setOnScrollListener(new AbsListView.OnScrollListener() {
+        listView.setOnScrollListener(new RecyclerView.OnScrollListener() {
             @Override
-            public void onScrollStateChanged(AbsListView view, int scrollState) {
-
+            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
+                super.onScrollStateChanged(recyclerView, newState);
             }
 
             @Override
-            public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {
+            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
                 checkListViewScroll();
             }
         });
-
+        updateListBG();
+        updateActionBarBG();
         return fragmentView;
     }
 
@@ -938,17 +942,17 @@ public void didSelectContact(TLRPC.User user, String param) {
     }
 
     private void checkListViewScroll() {
-        if (listView.getChildCount() == 0) {
+        if (listView.getChildCount() == 0 || openAnimationInProgress) {
             return;
         }
         int height = 0;
         View child = listView.getChildAt(0);
         if (child != null) {
-            if (listView.getFirstVisiblePosition() == 0) {
+            if (layoutManager.findFirstVisibleItemPosition() == 0) {
                 height = AndroidUtilities.dp(88) + (child.getTop() < 0 ? child.getTop() : 0);
             }
-            if (actionBar.getExtraHeight() != height) {
-                actionBar.setExtraHeight(height, true);
+            if (extraHeight != height) {
+                extraHeight = height;
                 needLayout();
             }
         }
@@ -956,40 +960,40 @@ private void checkListViewScroll() {
 
     private void needLayout() {
         FrameLayout.LayoutParams layoutParams;
-        if (listView != null) {
+        int newTop = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight();
+        if (listView != null && !openAnimationInProgress) {
             layoutParams = (FrameLayout.LayoutParams) listView.getLayoutParams();
-            layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight();
+            if (layoutParams.topMargin != newTop) {
+                layoutParams.topMargin = newTop;
             listView.setLayoutParams(layoutParams);
+                ViewProxy.setTranslationY(extraHeightView, newTop);
+            }
         }
 
         if (avatarImage != null) {
-            float diff = actionBar.getExtraHeight() / (float)AndroidUtilities.dp(88);
-            float diffm = 1.0f - diff;
-
-            int avatarSize = 42 + (int)(18 * diff);
-            int avatarX = 17 + (int)(47 * diffm);
-            int avatarY = AndroidUtilities.dp(22) - (int)((AndroidUtilities.dp(22) - (ActionBar.getCurrentActionBarHeight() - AndroidUtilities.dp(42)) / 2) * (1.0f - diff));
-            int nameX = 97 + (int)(21 * diffm);
-            int nameEndX = 16 + (int)(32 * diffm);
-            int nameY = avatarY + AndroidUtilities.dp(29 - 10 * diffm);
-            int statusY = avatarY + AndroidUtilities.dp(8 - 7 * diffm);
-            float scale = 1.0f - 0.12f * diffm;
+            float diff = extraHeight / (float) AndroidUtilities.dp(88);
+            ViewProxy.setScaleY(extraHeightView, diff);
+            ViewProxy.setTranslationY(shadowView, newTop + extraHeight);
+            listView.setTopGlowOffset(extraHeight);
 
             if (writeButton != null) {
+                if (Build.VERSION.SDK_INT < 11) {
                 layoutParams = (FrameLayout.LayoutParams) writeButton.getLayoutParams();
-                layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() + actionBar.getExtraHeight() - AndroidUtilities.dp(29.5f);
+                    layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() + extraHeight - AndroidUtilities.dp(29.5f);
                 writeButton.setLayoutParams(layoutParams);
-                /*ViewProxy.setAlpha(writeButton, diff);
-                writeButton.setVisibility(diff <= 0.02 ? View.GONE : View.VISIBLE);
-                if (writeButton.getVisibility() == View.GONE) {
-                    writeButton.clearAnimation();
-                }*/
+                } else {
+                    ViewProxy.setTranslationY(writeButton, (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() + extraHeight - AndroidUtilities.dp(29.5f));
+                }
+
+                if (!openAnimationInProgress) {
                 final boolean setVisible = diff > 0.2f;
                 boolean currentVisible = writeButton.getTag() == null;
                 if (setVisible != currentVisible) {
                     if (setVisible) {
                         writeButton.setTag(null);
+                            if (Build.VERSION.SDK_INT < 11) {
                         writeButton.setVisibility(View.VISIBLE);
+                            }
                     } else {
                         writeButton.setTag(0);
                     }
@@ -1020,7 +1024,9 @@ private void needLayout() {
                         public void onAnimationEnd(Object animation) {
                             if (writeButtonAnimation != null && writeButtonAnimation.equals(animation)) {
                                 writeButton.clearAnimation();
+                                    if (Build.VERSION.SDK_INT < 11) {
                                 writeButton.setVisibility(setVisible ? View.VISIBLE : View.GONE);
+                                    }
                                 writeButtonAnimation = null;
                             }
                         }
@@ -1028,35 +1034,32 @@ public void onAnimationEnd(Object animation) {
                     writeButtonAnimation.start();
                 }
             }
+            }
 
-            //avatarImage.setRoundRadius(AndroidUtilities.dp(avatarSize / 2));
-            SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
-            int radius = AndroidUtilities.dp(themePrefs.getInt("profileAvatarRadius", 32));
-            avatarImage.setRoundRadius(radius);
+            float avatarY = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() / 2.0f * (1.0f + diff) - 21 * AndroidUtilities.density + 27 * AndroidUtilities.density * diff;
+            if (Build.VERSION.SDK_INT < 11) {
             layoutParams = (FrameLayout.LayoutParams) avatarImage.getLayoutParams();
-            layoutParams.width = AndroidUtilities.dp(avatarSize);
-            layoutParams.height = AndroidUtilities.dp(avatarSize);
-            layoutParams.leftMargin = LocaleController.isRTL ? 0 : AndroidUtilities.dp(avatarX);
-            layoutParams.rightMargin = LocaleController.isRTL ? AndroidUtilities.dp(avatarX) : 0;
-            layoutParams.bottomMargin = avatarY;
+                layoutParams.height = layoutParams.width = (int) Math.ceil(AndroidUtilities.dp(42) * (42 + 18 * diff) / 42.0f);
+                layoutParams.leftMargin = (int) Math.ceil(AndroidUtilities.dp(64) - AndroidUtilities.dp(47) * diff);
+                layoutParams.topMargin = (int) Math.ceil(avatarY);
             avatarImage.setLayoutParams(layoutParams);
+                avatarImage.setRoundRadius(layoutParams.height / 2);
+            } else {
+                ViewProxy.setScaleX(avatarImage, (42 + 18 * diff) / 42.0f);
+                ViewProxy.setScaleY(avatarImage, (42 + 18 * diff) / 42.0f);
+                ViewProxy.setTranslationX(avatarImage, -AndroidUtilities.dp(47) * diff);
+                ViewProxy.setTranslationY(avatarImage, (float) Math.ceil(avatarY));
+            }
+            ViewProxy.setTranslationX(nameTextView, -21 * AndroidUtilities.density * diff);
+            ViewProxy.setTranslationY(nameTextView, (float) Math.floor(avatarY) - (float) Math.ceil(AndroidUtilities.density) + (float) Math.floor(7 * AndroidUtilities.density * diff));
+            ViewProxy.setTranslationX(onlineTextView, -21 * AndroidUtilities.density * diff);
+            ViewProxy.setTranslationY(onlineTextView, (float) Math.floor(avatarY) + AndroidUtilities.dp(22) + (float )Math.floor(11 * AndroidUtilities.density) * diff);
 
-            ViewProxy.setPivotX(nameTextView, 0);
-            ViewProxy.setPivotY(nameTextView, 0);
-            ViewProxy.setScaleX(nameTextView, scale);
-            ViewProxy.setScaleY(nameTextView, scale);
-            layoutParams = (FrameLayout.LayoutParams) nameTextView.getLayoutParams();
-            layoutParams.leftMargin = AndroidUtilities.dp(LocaleController.isRTL ? nameEndX : nameX);
-            layoutParams.rightMargin = AndroidUtilities.dp(LocaleController.isRTL ? nameX : nameEndX);
-            layoutParams.bottomMargin = nameY;
-            nameTextView.setLayoutParams(layoutParams);
-
-            layoutParams = (FrameLayout.LayoutParams) onlineTextView.getLayoutParams();
-            layoutParams.leftMargin = AndroidUtilities.dp(LocaleController.isRTL ? nameEndX : nameX);
-            layoutParams.rightMargin = AndroidUtilities.dp(LocaleController.isRTL ? nameX : nameEndX);
-            layoutParams.bottomMargin = statusY;
-            onlineTextView.setLayoutParams(layoutParams);
+            ViewProxy.setTranslationX(adminTextView, -21 * AndroidUtilities.density * diff);
+            ViewProxy.setTranslationY(adminTextView, (float) Math.floor(avatarY) + AndroidUtilities.dp(32) + (float )Math.floor(22 * AndroidUtilities.density) * diff);
 
+            ViewProxy.setScaleX(nameTextView, 1.0f + 0.12f * diff);
+            ViewProxy.setScaleY(nameTextView, 1.0f + 0.12f * diff);
             if (diff > 0.85) {
                 adminTextView.setVisibility(View.VISIBLE);
             } else {
@@ -1087,22 +1090,21 @@ public void onConfigurationChanged(Configuration newConfig) {
         fixLayout();
     }
 
-    @Override
-    public boolean needAddActionBar() {
-        return false;
-    }
-
+    @SuppressWarnings("unchecked")
     @Override
     public void didReceivedNotification(int id, final Object... args) {
         if (id == NotificationCenter.updateInterfaces) {
-            int mask = (Integer)args[0];
+            int mask = (Integer) args[0];
             if (user_id != 0) {
                 if ((mask & MessagesController.UPDATE_MASK_AVATAR) != 0 || (mask & MessagesController.UPDATE_MASK_NAME) != 0 || (mask & MessagesController.UPDATE_MASK_STATUS) != 0) {
                     updateProfileData();
                 }
                 if ((mask & MessagesController.UPDATE_MASK_PHONE) != 0) {
                     if (listView != null) {
-                        listView.invalidateViews();
+                        ListAdapter.Holder holder = (ListAdapter.Holder) listView.findViewHolderForPosition(phoneRow);
+                        if (holder != null) {
+                            listAdapter.onBindViewHolder(holder, phoneRow);
+                        }
                     }
                 }
             } else if (chat_id != 0) {
@@ -1131,20 +1133,14 @@ public void didReceivedNotification(int id, final Object... args) {
         } else if (id == NotificationCenter.contactsDidLoaded) {
             createActionBarMenu();
         } else if (id == NotificationCenter.mediaCountDidLoaded) {
-            long uid = (Long)args[0];
-            if (user_id != 0) {
-                if (uid > 0 && user_id == uid && dialog_id == 0 || dialog_id != 0 && dialog_id == uid) {
+            long uid = (Long) args[0];
+            int lower_part = (int) uid;
+            if (user_id != 0 && (uid > 0 && user_id == uid && dialog_id == 0 || dialog_id != 0 && dialog_id == uid) || chat_id != 0 && (lower_part < 0 && chat_id == -lower_part)) {
                     totalMediaCount = (Integer) args[1];
                     if (listView != null) {
-                        listView.invalidateViews();
-                    }
-                }
-            } else if (chat_id != 0) {
-                int lower_part = (int)uid;
-                if (lower_part < 0 && chat_id == -lower_part) {
-                    totalMediaCount = (Integer)args[1];
-                    if (listView != null) {
-                        listView.invalidateViews();
+                    ListAdapter.Holder holder = (ListAdapter.Holder) listView.findViewHolderForPosition(sharedMediaRow);
+                    if (holder != null) {
+                        listAdapter.onBindViewHolder(holder, sharedMediaRow);
                     }
                 }
             }
@@ -1163,7 +1159,7 @@ public void run() {
                 });
             }
         } else if (id == NotificationCenter.encryptedChatUpdated) {
-            TLRPC.EncryptedChat chat = (TLRPC.EncryptedChat)args[0];
+            TLRPC.EncryptedChat chat = (TLRPC.EncryptedChat) args[0];
             if (currentEncryptedChat != null && chat.id == currentEncryptedChat.id) {
                 currentEncryptedChat = chat;
                 updateRowsIds();
@@ -1197,6 +1193,21 @@ public void run() {
                 botInfo = info;
                 updateRowsIds();
             }
+        } if (id == NotificationCenter.didReceivedNewMessages) {
+            long did = (Long) args[0];
+            if (did == dialog_id) {
+                ArrayList<MessageObject> arr = (ArrayList<MessageObject>) args[1];
+                for (int a = 0; a < arr.size(); a++) {
+                    MessageObject obj = arr.get(a);
+                    if (currentEncryptedChat != null && obj.messageOwner.action != null && obj.messageOwner.action instanceof TLRPC.TL_messageEncryptedAction && obj.messageOwner.action.encryptedAction instanceof TLRPC.TL_decryptedMessageActionSetMessageTTL) {
+                        TLRPC.TL_decryptedMessageActionSetMessageTTL action = (TLRPC.TL_decryptedMessageActionSetMessageTTL) obj.messageOwner.action.encryptedAction;
+                        if (listAdapter != null) {
+                            listAdapter.notifyDataSetChanged();
+                            checkListViewScroll();
+                        }
+                    }
+                }
+            }
         }
     }
 
@@ -1210,6 +1221,115 @@ public void onResume() {
         fixLayout();
     }
 
+    public void setPlayProfileAnimation(boolean value) {
+        if (!AndroidUtilities.isTablet()) {
+            playProfileAnimation = value;
+        }
+    }
+
+    @Override
+    protected void onTransitionAnimationStart(boolean isOpen, boolean backward) {
+        if (!backward && playProfileAnimation) {
+            openAnimationInProgress = true;
+        }
+        NotificationCenter.getInstance().setAnimationInProgress(true);
+    }
+
+    @Override
+    protected void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
+        if (!backward && playProfileAnimation) {
+            openAnimationInProgress = false;
+        }
+        NotificationCenter.getInstance().setAnimationInProgress(false);
+    }
+
+    public float getAnimationProgress() {
+        return animationProgress;
+    }
+
+    public void setAnimationProgress(float progress) {
+        animationProgress = progress;
+        ViewProxy.setAlpha(listView, progress);
+        ViewProxy.setTranslationX(listView, AndroidUtilities.dp(48) * (1.0f - progress));
+        /*int color = AvatarDrawable.getProfileBackColorForId(user_id != 0 || ChatObject.isChannel(chat_id) ? 5 : chat_id);
+        int rD = (int) ((Color.red(color) - 0x54) * progress);
+        int gD = (int) ((Color.green(color) - 0x75) * progress);
+        int bD = (int) ((Color.blue(color) - 0x9e) * progress);
+        actionBar.setBackgroundColor(Color.rgb(0x54 + rD, 0x75 + gD, 0x9e + bD));
+        extraHeightView.setBackgroundColor(Color.rgb(0x54 + rD, 0x75 + gD, 0x9e + bD));
+        extraHeightView.setBackgroundColor(color);
+        color = AvatarDrawable.getProfileTextColorForId(user_id != 0 || ChatObject.isChannel(chat_id) ? 5 : chat_id);
+        rD = (int) ((Color.red(color) - 0xd7) * progress);
+        gD = (int) ((Color.green(color) - 0xe8) * progress);
+        bD = (int) ((Color.blue(color) - 0xf7) * progress);
+        onlineTextView.setTextColor(Color.rgb(0xd7 + rD, 0xe8 + gD, 0xf7 + bD));*/
+        extraHeight = (int) (initialAnimationExtraHeight * progress);
+        needLayout();
+    }
+
+    @Override
+    protected AnimatorSetProxy onCustomTransitionAnimation(final boolean isOpen, final Runnable callback) {
+        if (playProfileAnimation) {
+            final AnimatorSetProxy animatorSet = new AnimatorSetProxy();
+            animatorSet.setDuration(150);
+            if (Build.VERSION.SDK_INT > 15) {
+                listView.setLayerType(View.LAYER_TYPE_HARDWARE, null);
+            }
+            if (isOpen) {
+                initialAnimationExtraHeight = AndroidUtilities.dp(88);
+                fragmentView.setBackgroundColor(0);
+                setAnimationProgress(0);
+                ArrayList<Object> animators = new ArrayList<>();
+                animators.add(ObjectAnimatorProxy.ofFloat(this, "animationProgress", 0.0f, 1.0f));
+                if (writeButton != null) {
+                    ViewProxy.setScaleX(writeButton, 0.2f);
+                    ViewProxy.setScaleY(writeButton, 0.2f);
+                    ViewProxy.setAlpha(writeButton, 0.0f);
+                    animators.add(ObjectAnimatorProxy.ofFloat(writeButton, "scaleX", 1.0f));
+                    animators.add(ObjectAnimatorProxy.ofFloat(writeButton, "scaleY", 1.0f));
+                    animators.add(ObjectAnimatorProxy.ofFloat(writeButton, "alpha", 1.0f));
+                }
+                animatorSet.playTogether(animators);
+            } else {
+                initialAnimationExtraHeight = extraHeight;
+                ArrayList<Object> animators = new ArrayList<>();
+                animators.add(ObjectAnimatorProxy.ofFloat(this, "animationProgress", 1.0f, 0.0f));
+                if (writeButton != null) {
+                    animators.add(ObjectAnimatorProxy.ofFloat(writeButton, "scaleX", 0.2f));
+                    animators.add(ObjectAnimatorProxy.ofFloat(writeButton, "scaleY", 0.2f));
+                    animators.add(ObjectAnimatorProxy.ofFloat(writeButton, "alpha", 0.0f));
+                }
+                animatorSet.playTogether(animators);
+            }
+            animatorSet.addListener(new AnimatorListenerAdapterProxy() {
+                @Override
+                public void onAnimationEnd(Object animation) {
+                    if (Build.VERSION.SDK_INT > 15) {
+                        listView.setLayerType(View.LAYER_TYPE_NONE, null);
+                    }
+                    callback.run();
+                }
+
+                @Override
+                public void onAnimationCancel(Object animation) {
+                    if (Build.VERSION.SDK_INT > 15) {
+                        listView.setLayerType(View.LAYER_TYPE_NONE, null);
+                    }
+                }
+            });
+            animatorSet.setInterpolator(new DecelerateInterpolator());
+
+            AndroidUtilities.runOnUIThread(new Runnable() {
+                @Override
+                public void run() {
+                    animatorSet.start();
+                }
+            }, 20);
+            return animatorSet;
+        }
+        return null;
+    }
+
     @Override
     public void updatePhotoAtIndex(int index) {
 
@@ -1247,6 +1367,7 @@ public void updatePhotoAtIndex(int index) {
             object.thumb = object.imageReceiver.getBitmap();
             object.size = -1;
             object.radius = avatarImage.getImageReceiver().getRoundRadius();
+            object.scale = ViewProxy.getScaleX(avatarImage);
             return object;
         }
         return null;
@@ -1272,7 +1393,7 @@ public void willHidePhotoViewer() {
     public void setPhotoChecked(int index) { }
 
     @Override
-    public void cancelButtonPressed() { }
+    public boolean cancelButtonPressed() { return true; }
 
     @Override
     public void sendButtonPressed(int index) { }
@@ -1281,10 +1402,10 @@ public void sendButtonPressed(int index) { }
     public int getSelectedCount() { return 0; }
 
     private void updateOnlineCount() {
+        onlineCount = 0;
         if (!(info instanceof TLRPC.TL_chatFull)) {
             return;
         }
-        onlineCount = 0;
         int currentTime = ConnectionsManager.getInstance().getCurrentTime();
         sortedUsers.clear();
         int i = 0;
@@ -1353,8 +1474,8 @@ public int compare(Integer lhs, Integer rhs) {
             FileLog.e("tmessages", e); //TODO find crash
         }
 
-        if (listView != null) {
-            listView.invalidateViews();
+        if (listAdapter != null) {
+            listAdapter.notifyItemRangeChanged(emptyRowChat2 + 1, sortedUsers.size());
         }
     }
 
@@ -1373,6 +1494,7 @@ private void kickUser(TLRPC.TL_chatParticipant user) {
                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
             }
             MessagesController.getInstance().deleteUserFromChat(chat_id, MessagesController.getInstance().getUser(UserConfig.getClientUserId()), info);
+            playProfileAnimation = false;
             finishFragment();
         }
     }
@@ -1492,6 +1614,7 @@ private void updateProfileData() {
             return;
         }
         updateTheme();
+        int id = 0;
         SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
         if (user_id != 0) {
             TLRPC.User user = MessagesController.getInstance().getUser(user_id);
@@ -1502,20 +1625,31 @@ private void updateProfileData() {
                 photoBig = user.photo.photo_big;
             }
             AvatarDrawable avatarDrawable = new AvatarDrawable(user);
-            //Profile photo
-            int radius = AndroidUtilities.dp(themePrefs.getInt("profileAvatarRadius", 32));
-            //int radius = AndroidUtilities.dp(32);
-            avatarImage.getImageReceiver().setRoundRadius(radius);
-            avatarDrawable.setRadius(radius);
             avatarImage.setImage(photo, "50_50", avatarDrawable);
-
-            nameTextView.setText(UserObject.getUserName(user));
-            if ((user.flags & TLRPC.USER_FLAG_BOT) != 0) {
-                onlineTextView.setText(LocaleController.getString("Bot", R.string.Bot));
+            
+            String newString;
+            newString = UserObject.getUserName(user);
+            if (!nameTextView.getText().equals(newString)) {
+                nameTextView.setText(newString);
+            }
+            if (user.id == 333000 || user.id == 777000) {
+                newString = LocaleController.getString("ServiceNotifications", R.string.ServiceNotifications);
+            } else if ((user.flags & TLRPC.USER_FLAG_BOT) != 0) {
+                newString = LocaleController.getString("Bot", R.string.Bot);
             } else {
-                onlineTextView.setText(LocaleController.formatUserStatus(user));
+                newString = LocaleController.formatUserStatus(user);
+            }
+            if (!onlineTextView.getText().equals(newString)) {
+                onlineTextView.setText(newString);
             }
 
+            int leftIcon = currentEncryptedChat != null ? R.drawable.ic_lock_header : 0;
+            nameTextView.setCompoundDrawablesWithIntrinsicBounds(leftIcon, 0, 0, 0);
+
+            if(BuildConfig.DEBUG){
+                id = user_id;
+                adminTextView.setText("id: " + user_id);
+            }
             avatarImage.getImageReceiver().setVisible(!PhotoViewer.getInstance().isShowingImage(photoBig), false);
         } else if (chat_id != 0) {
             TLRPC.Chat chat = MessagesController.getInstance().getChat(chat_id);
@@ -1524,20 +1658,36 @@ private void updateProfileData() {
             } else {
                 chat = currentChat;
             }
+            if (chat.title != null && !nameTextView.getText().equals(chat.title)) {
             nameTextView.setText(chat.title);
+            }
+            if ((chat.flags & TLRPC.CHAT_FLAG_IS_VERIFIED) != 0) {
+                if (nameTextView.getCompoundDrawables()[2] == null) {
+                    nameTextView.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.check_profile_fixed, 0);
+                }
+            } else {
+                if (nameTextView.getCompoundDrawables()[2] != null) {
+                    nameTextView.setCompoundDrawablesWithIntrinsicBounds(0, 0, 0, 0);
+                }
+            }
 
+            String newString;
             if (ChatObject.isChannel(chat)) {
                 if (info == null || info.participants_count == 0 || ((currentChat.flags & TLRPC.CHAT_FLAG_ADMIN) != 0 || (info.flags & 8) != 0)) {
                     if ((chat.flags & TLRPC.CHAT_FLAG_IS_PUBLIC) != 0) {
-                        onlineTextView.setText(LocaleController.getString("ChannelPublic", R.string.ChannelPublic).toLowerCase());
+                        newString = LocaleController.getString("ChannelPublic", R.string.ChannelPublic).toLowerCase();
                     } else {
-                        onlineTextView.setText(LocaleController.getString("ChannelPrivate", R.string.ChannelPrivate).toLowerCase());
+                        newString = LocaleController.getString("ChannelPrivate", R.string.ChannelPrivate).toLowerCase();
                     }
                 } else {
                     int result[] = new int[1];
                     String shortNumber = LocaleController.formatShortNumber(info.participants_count, result);
-                    String text = LocaleController.formatPluralString("Members", result[0]).replace(String.format("%d", result[0]), shortNumber);
-                    onlineTextView.setText(text);
+                    newString = LocaleController.formatPluralString("Members", result[0]).replace(String.format("%d", result[0]), shortNumber);
+                }
+
+                if(BuildConfig.DEBUG){
+                    id = chat_id;
+                    adminTextView.setText("id: " + chat_id);
                 }
             } else {
                 int count = chat.participants_count;
@@ -1545,12 +1695,15 @@ private void updateProfileData() {
                     count = info.participants.participants.size();
                 }
                 if (count != 0 && onlineCount > 1) {
-                    onlineTextView.setText(String.format("%s, %s", LocaleController.formatPluralString("Members", count), LocaleController.formatPluralString("Online", onlineCount)));
+                    newString = String.format("%s, %s", LocaleController.formatPluralString("Members", count), LocaleController.formatPluralString("Online", onlineCount));
                 } else {
-                    onlineTextView.setText(LocaleController.formatPluralString("Members", count));
+                    newString = LocaleController.formatPluralString("Members", count);
+                }
+                if (!onlineTextView.getText().equals(newString)) {
+                    onlineTextView.setText(newString);
                 }
-
                 if (info != null) {
+                    id = chat_id;
                     adminTextView.setText("Admin: " + UserObject.getUserName(MessagesController.getInstance().getUser(info.participants.admin_id)));
                 }
 
@@ -1561,9 +1714,11 @@ private void updateProfileData() {
                     photoBig = chat.photo.photo_big;
                 }
                 avatarImage.setImage(photo, "50_50", new AvatarDrawable(chat, true));
-
                 avatarImage.getImageReceiver().setVisible(!PhotoViewer.getInstance().isShowingImage(photoBig), false);
             }
+            if (!onlineTextView.getText().equals(newString)) {
+                    onlineTextView.setText(newString);
+            }
             //Plus: Group and channel profile avatar
             TLRPC.FileLocation photo = null;
             if (chat.photo != null) {
@@ -1574,18 +1729,83 @@ private void updateProfileData() {
             avatarImage.getImageReceiver().setRoundRadius(radius);
             avatarDrawable.setRadius(radius);
             avatarImage.setImage(photo, "50_50", avatarDrawable);
-        }
+            }
+            if((BuildConfig.DEBUG)){
+                final int fId = id;
+                adminTextView.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        try {
+                            if (Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.HONEYCOMB) {
+                                android.text.ClipboardManager clipboard = (android.text.ClipboardManager) ApplicationLoader.applicationContext.getSystemService(Context.CLIPBOARD_SERVICE);
+                                clipboard.setText(""+fId);
+                            } else {
+                                android.content.ClipboardManager clipboard = (android.content.ClipboardManager) ApplicationLoader.applicationContext.getSystemService(Context.CLIPBOARD_SERVICE);
+                                android.content.ClipData clip = android.content.ClipData.newPlainText("label", ""+fId);
+                                clipboard.setPrimaryClip(clip);
+                            }
+                            Toast.makeText(getParentActivity(), LocaleController.formatString("Copied", R.string.Copied, fId), Toast.LENGTH_SHORT).show();
+                        } catch (Exception e) {
+                            FileLog.e("tmessages", e);
+                        }
+                    }
+                });
+            }
+
     }
 
     private void updateTheme() {
         SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
-        int def = themePrefs.getInt("themeColor", AndroidUtilities.defColor);
+        //int def = themePrefs.getInt("themeColor", AndroidUtilities.defColor);
         int dark = themePrefs.getInt("profileStatusColor", AndroidUtilities.getIntDarkerColor("themeColor", -0x40));
 
-        //actionBar.setBackgroundColor(themePrefs.getInt("profileHeaderColor", def));
+        nameTextView.setTextColor(themePrefs.getInt("profileNameColor", 0xffffffff));
+        nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, themePrefs.getInt("profileNameSize", 18));
+        onlineTextView.setTextColor(dark);
+        int oSize = themePrefs.getInt("profileStatusSize", 14);
+        onlineTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, oSize);
+        adminTextView.setTextColor(dark);
+        if (oSize < 14) adminTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, oSize);
+    }
+
+    private void updateListBG(){
+        SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
+        int mainColor = themePrefs.getInt("profileRowColor", 0xffffffff);
+        int value = themePrefs.getInt("profileRowGradient", 0);
+        boolean b = true;//themePrefs.getBoolean("profileRowGradientListCheck", false);
+        if(value > 0  && b) {
+            GradientDrawable.Orientation go;
+            switch(value) {
+                case 2:
+                    go = GradientDrawable.Orientation.LEFT_RIGHT;
+                    break;
+                case 3:
+                    go = GradientDrawable.Orientation.TL_BR;
+                    break;
+                case 4:
+                    go = GradientDrawable.Orientation.BL_TR;
+                    break;
+                default:
+                    go = GradientDrawable.Orientation.TOP_BOTTOM;
+            }
+
+            int gradColor = themePrefs.getInt("profileRowGradientColor", 0xffffffff);
+            int[] colors = new int[]{mainColor, gradColor};
+            GradientDrawable gd = new GradientDrawable(go, colors);
+            listView.setBackgroundDrawable(gd);
+        }else{
+            listView.setBackgroundColor(mainColor);
+        }
+        listView.setGlowColor(mainColor);
+    }
+
+    private void updateActionBarBG(){
+        SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
+        int def = themePrefs.getInt("themeColor", AndroidUtilities.defColor);
 
         int hColor = themePrefs.getInt("profileHeaderColor", def);
         actionBar.setBackgroundColor(hColor);
+        extraHeightView.setBackgroundColor(hColor);
         int val = themePrefs.getInt("profileHeaderGradient", 0);
         if (val > 0) {
             GradientDrawable.Orientation go;
@@ -1606,15 +1826,39 @@ private void updateTheme() {
             int[] colors = new int[]{hColor, gradColor};
             GradientDrawable gd = new GradientDrawable(go, colors);
             actionBar.setBackgroundDrawable(gd);
+            extraHeightView.setBackgroundDrawable(gd);
         }
+    }
 
-        nameTextView.setTextColor(themePrefs.getInt("profileNameColor", 0xffffffff));
-        nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, themePrefs.getInt("profileNameSize", 18));
-        onlineTextView.setTextColor(dark);
-        int oSize = themePrefs.getInt("profileStatusSize", 14);
-        onlineTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, oSize);
-        adminTextView.setTextColor(dark);
-        if (oSize < 14) adminTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, oSize);
+    private void updateViewColor(View v){
+        SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
+        int mainColor = themePrefs.getInt("profileRowColor", 0xffffffff);
+        int value = themePrefs.getInt("profileRowGradient", 0);
+        boolean b = true;//themePrefs.getBoolean("profileRowGradientListCheck", false);
+        if(value > 0 && !b) {
+            GradientDrawable.Orientation go;
+            switch(value) {
+                case 2:
+                    go = GradientDrawable.Orientation.LEFT_RIGHT;
+                    break;
+                case 3:
+                    go = GradientDrawable.Orientation.TL_BR;
+                    break;
+                case 4:
+                    go = GradientDrawable.Orientation.BL_TR;
+                    break;
+                default:
+                    go = GradientDrawable.Orientation.TOP_BOTTOM;
+            }
+
+            int gradColor = themePrefs.getInt("profileRowGradientColor", 0xffffffff);
+            int[] colors = new int[]{mainColor, gradColor};
+            GradientDrawable gd = new GradientDrawable(go, colors);
+            v.setBackgroundDrawable(gd);
+        } else if(b){
+            v.setBackgroundColor(0x00000000);
+        }
+        if(value > 0)v.setTag("Profile00");
     }
 
     private void createActionBarMenu() {
@@ -1711,235 +1955,260 @@ public void didSelectDialog(DialogsActivity messageFragment, long dialog_id, boo
         }
     }
 
-    private class ListAdapter extends BaseFragmentAdapter {
+    private class ListAdapter extends RecyclerListView.Adapter {
         private Context mContext;
 
-        public ListAdapter(Context context) {
-            mContext = context;
-        }
-
-        @Override
-        public boolean areAllItemsEnabled() {
-            return false;
-        }
+        private class Holder extends RecyclerView.ViewHolder {
 
-        @Override
-        public boolean isEnabled(int i) {
-            if (user_id != 0) {
-                return i == phoneRow || i == settingsTimerRow || i == settingsKeyRow || i == settingsNotificationsRow || i == sharedMediaRow || i == startSecretChatRow || i == usernameRow;
-            } else if (chat_id != 0) {
-                return i == settingsNotificationsRow || i == sharedMediaRow || i > emptyRowChat2 && i < membersEndRow || i == addMemberRow || i == channelNameRow || i == leaveChannelRow || i == membersRow || i == managementRow || i == blockedUsersRow || i == channelInfoRow;
+            public Holder(View itemView) {
+                super(itemView);
             }
-            return false;
-        }
-
-        @Override
-        public int getCount() {
-            return rowCount;
         }
 
-        @Override
-        public Object getItem(int i) {
-            return null;
-        }
-
-        @Override
-        public long getItemId(int i) {
-            return i;
+        public ListAdapter(Context context) {
+            mContext = context;
         }
 
         @Override
-        public boolean hasStableIds() {
-            return false;
+        public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+            View view = null;
+            switch (viewType) {
+                case 0:
+                    view = new EmptyCell(mContext);
+                    break;
+                case 1:
+                    view = new DividerCell(mContext);
+                    view.setPadding(AndroidUtilities.dp(72), 0, 0, 0);
+                    break;
+                case 2:
+                    view = new TextDetailCell(mContext) {
+                        @Override
+                        public boolean onTouchEvent(MotionEvent event) {
+                            if (Build.VERSION.SDK_INT >= 21 && getBackground() != null) {
+                                if (event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_MOVE) {
+                                    getBackground().setHotspot(event.getX(), event.getY());
+                                }
+                            }
+                            return super.onTouchEvent(event);
+                        }
+                    };
+                    break;
+case 3:
+                    view = new TextCell(mContext) {
+                        @Override
+                        public boolean onTouchEvent(MotionEvent event) {
+                            if (Build.VERSION.SDK_INT >= 21 && getBackground() != null) {
+                                if (event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_MOVE) {
+                                    getBackground().setHotspot(event.getX(), event.getY());
+                                }
+                            }
+                            return super.onTouchEvent(event);
+                        }
+                    };
+                    break;
+                case 4:
+                    view = new UserCell(mContext, 61) {
+                        @Override
+                        public boolean onTouchEvent(MotionEvent event) {
+                            if (Build.VERSION.SDK_INT >= 21 && getBackground() != null) {
+                                if (event.getAction() == MotionEvent.ACTION_DOWN || event.getAction() == MotionEvent.ACTION_MOVE) {
+                                    getBackground().setHotspot(event.getX(), event.getY());
+                                }
+                            }
+                            return super.onTouchEvent(event);
+                        }
+                    };
+                    break;
+                case 5:
+                    view = new ShadowSectionCell(mContext);
+                    break;
+                case 6:
+                    view = new AddMemberCell(mContext);
+                    if (chat_id > 0) {
+                        ((AddMemberCell) view).setText(LocaleController.getString("AddMember", R.string.AddMember));
+                    } else {
+                        ((AddMemberCell) view).setText(LocaleController.getString("AddRecipient", R.string.AddRecipient));
+                    }
+                    break;
+            }
+            return new Holder(view);
         }
-
+    
         @Override
-        public View getView(int i, View view, ViewGroup viewGroup) {
-            int type = getItemViewType(i);
+        public void onBindViewHolder(RecyclerView.ViewHolder holder, int i) {
+            boolean checkBackground = true;
             SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
             int def = themePrefs.getInt("themeColor", AndroidUtilities.defColor);
             int tColor = themePrefs.getInt("profileTitleColor", 0xff212121);
             int dColor = themePrefs.getInt("profileIconsColor", 0xff737373);
-            if (type == 0) {
-                if (view == null) {
-                    view = new EmptyCell(mContext);
-                }
-                if (i == overscrollRow) {
-                    ((EmptyCell) view).setHeight(AndroidUtilities.dp(88));
-                } else if (i == emptyRowChat || i == emptyRowChat2) {
-                    ((EmptyCell) view).setHeight(AndroidUtilities.dp(8));
-                } else {
-                    ((EmptyCell) view).setHeight(AndroidUtilities.dp(36));
-                }
-                updateViewColor(view);
-            } else if (type == 1) {
-                if (view == null) {
-                    view = new DividerCell(mContext);
-                    view.setPadding(AndroidUtilities.dp(72), 0, 0, 0);
-                    view.setTag("profileRowColor");
-                }
-                updateViewColor(view);
-            } else if (type == 2) {
-                if (view == null) {
-                    view = new TextDetailCell(mContext);
-                }
-                updateViewColor(view);
-                TextDetailCell textDetailCell = (TextDetailCell) view;
-                textDetailCell.setTextColor(tColor);
-                textDetailCell.setValueColor(themePrefs.getInt("profileSummaryColor", 0xff8a8a8a));
-                if (i == phoneRow) {
-                    String text;
-                    final TLRPC.User user = MessagesController.getInstance().getUser(user_id);
-                    if (user.phone != null && user.phone.length() != 0) {
-                        text = PhoneFormat.getInstance().format("+" + user.phone);
+            switch (holder.getItemViewType()) {
+                case 0:
+                    if (i == overscrollRow) {
+                        ((EmptyCell) holder.itemView).setHeight(AndroidUtilities.dp(88));
+                    } else if (i == emptyRowChat || i == emptyRowChat2) {
+                        ((EmptyCell) holder.itemView).setHeight(AndroidUtilities.dp(8));
                     } else {
-                        text = LocaleController.getString("NumberUnknown", R.string.NumberUnknown);
+                        ((EmptyCell) holder.itemView).setHeight(AndroidUtilities.dp(36));
                     }
-                    //textDetailCell.setTextAndValueAndIcon(text, LocaleController.getString("PhoneMobile", R.string.PhoneMobile), R.drawable.phone_grey);
-                    Drawable ph = mContext.getResources().getDrawable(R.drawable.phone_grey);
-                    ph.setColorFilter(dColor, PorterDuff.Mode.SRC_IN);
-                    textDetailCell.setTextAndValueAndIcon(text, LocaleController.getString("PhoneMobile", R.string.PhoneMobile), ph);
-                } else if (i == usernameRow) {
-                    String text;
-                    final TLRPC.User user = MessagesController.getInstance().getUser(user_id);
-                    if (user != null && user.username != null && user.username.length() != 0) {
-                        text = "@" + user.username;
-                    } else {
-                        text = "-";
-                    }
-                    textDetailCell.setTextAndValue(text, LocaleController.getString("Username", R.string.Username));
-                } else if (i == channelNameRow) {
-                    String text;
-                    if (currentChat != null && currentChat.username != null && currentChat.username.length() != 0) {
-                        text = "@" + currentChat.username;
-                    } else {
-                        text = "-";
-                    }
-                    textDetailCell.setTextAndValue(text, "telegram.me/" + currentChat.username);
-                }
-            } else if (type == 3) {
-                if (view == null) {
-                    view = new TextCell(mContext);
-                }
-                updateViewColor(view);
-                TextCell textCell = (TextCell) view;
-                //textCell.setTextColor(0xff212121);
-                textCell.setTextColor(tColor);
-                if (i == sharedMediaRow) {
-                    String value;
-                    if (totalMediaCount == -1) {
-                        value = LocaleController.getString("Loading", R.string.Loading);
-                    } else {
-                        value = String.format("%d", totalMediaCount);
-                    }
-                    textCell.setMultiline(false);
-                    textCell.setTextAndValue(LocaleController.getString("SharedMedia", R.string.SharedMedia), value);
-                    textCell.setValueColor(themePrefs.getInt("profileTitleColor", def));
-                } else if (i == settingsTimerRow) {
-                    TLRPC.EncryptedChat encryptedChat = MessagesController.getInstance().getEncryptedChat((int)(dialog_id >> 32));
-                    String value;
-                    if (encryptedChat.ttl == 0) {
-                        value = LocaleController.getString("ShortMessageLifetimeForever", R.string.ShortMessageLifetimeForever);
-                    } else {
-                        value = AndroidUtilities.formatTTLString(encryptedChat.ttl);
-                    }
-                    textCell.setMultiline(false);
-                    textCell.setTextAndValue(LocaleController.getString("MessageLifetime", R.string.MessageLifetime), value);
-                } else if (i == settingsNotificationsRow) {
-                    textCell.setMultiline(false);
-                    //textCell.setTextAndIcon(LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.profile_list);
-                    Drawable pf = mContext.getResources().getDrawable(R.drawable.profile_list);
-                    pf.setColorFilter(dColor, PorterDuff.Mode.SRC_IN);
-                    textCell.setTextAndIcon(LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), pf);
-                } else if (i == startSecretChatRow) {
-                    textCell.setMultiline(false);
-                    textCell.setText(LocaleController.getString("StartEncryptedChat", R.string.StartEncryptedChat));
-                    //textCell.setTextColor(0xff37a919);
-                    textCell.setTextColor(themePrefs.getInt("profileTitleColor", AndroidUtilities.getIntDarkerColor("themeColor", 0x15)));
-                } else if (i == settingsKeyRow) {
-                    IdenticonDrawable identiconDrawable = new IdenticonDrawable();
-                    TLRPC.EncryptedChat encryptedChat = MessagesController.getInstance().getEncryptedChat((int)(dialog_id >> 32));
-                    identiconDrawable.setEncryptedChat(encryptedChat);
-                    textCell.setMultiline(false);
-                    textCell.setTextAndValueDrawable(LocaleController.getString("EncryptionKey", R.string.EncryptionKey), identiconDrawable);
-                } else if (i == botInfoRow) {
-                    textCell.setMultiline(true);
-                    //textCell.setTextAndIcon(botInfo.share_text, R.drawable.bot_info);
-                    Drawable bot = mContext.getResources().getDrawable(R.drawable.bot_info);
-                    if(bot!= null)bot.setColorFilter(dColor, PorterDuff.Mode.SRC_IN);
-                    textCell.setTextAndIcon(botInfo.share_text, bot);
-                } else if (i == channelInfoRow) {
-                    textCell.setMultiline(true);
-                    //textCell.setTextAndIcon(info.about, R.drawable.bot_info);
-                    Drawable bot = mContext.getResources().getDrawable(R.drawable.bot_info);
-                    if(bot!= null)bot.setColorFilter(dColor, PorterDuff.Mode.SRC_IN);
-                    textCell.setTextAndIcon(info.about, bot);
-                } else if (i == leaveChannelRow) {
-                    //textCell.setTextColor(0xffed3d39);
-                    textCell.setTextColor(themePrefs.getInt("profileTitleColor", AndroidUtilities.getIntDarkerColor("themeColor", 0x15)));
-                    textCell.setMultiline(false);
-                    textCell.setText(LocaleController.getString("LeaveChannel", R.string.LeaveChannel));
-                } else if (i == membersRow) {
-                    textCell.setMultiline(false);
-                    if (info != null) {
-                        textCell.setTextAndValue(LocaleController.getString("ChannelMembers", R.string.ChannelMembers), String.format("%d", info.participants_count));
-                    } else {
-                        textCell.setText(LocaleController.getString("ChannelMembers", R.string.ChannelMembers));
+                    updateViewColor(holder.itemView);
+                    break;
+                case 2:
+                    updateViewColor(holder.itemView);
+                    TextDetailCell textDetailCell = (TextDetailCell) holder.itemView;
+                    textDetailCell.setTextColor(tColor);
+                    textDetailCell.setValueColor(themePrefs.getInt("profileSummaryColor", 0xff8a8a8a));
+                    if (i == phoneRow) {
+                        String text;
+                        final TLRPC.User user = MessagesController.getInstance().getUser(user_id);
+                        if (user.phone != null && user.phone.length() != 0) {
+                            text = PhoneFormat.getInstance().format("+" + user.phone);
+                        } else {
+                            text = LocaleController.getString("NumberUnknown", R.string.NumberUnknown);
+                        }
+                        //textDetailCell.setTextAndValueAndIcon(text, LocaleController.getString("PhoneMobile", R.string.PhoneMobile), R.drawable.phone_grey);
+                        Drawable ph = mContext.getResources().getDrawable(R.drawable.phone_grey);
+                        ph.setColorFilter(dColor, PorterDuff.Mode.SRC_IN);
+                        textDetailCell.setTextAndValueAndIcon(text, LocaleController.getString("PhoneMobile", R.string.PhoneMobile), ph);
+                    } else if (i == usernameRow) {
+                        String text;
+                        final TLRPC.User user = MessagesController.getInstance().getUser(user_id);
+                        if (user != null && user.username != null && user.username.length() != 0) {
+                            text = "@" + user.username;
+                        } else {
+                            text = "-";
+                        }
+                        textDetailCell.setTextAndValue(text, LocaleController.getString("Username", R.string.Username));
+                    } else if (i == channelNameRow) {
+                        String text;
+                        if (currentChat != null && currentChat.username != null && currentChat.username.length() != 0) {
+                            text = "@" + currentChat.username;
+                        } else {
+                            text = "-";
+                        }
+                        textDetailCell.setTextAndValue(text, "telegram.me/" + currentChat.username);
                     }
-                } else if (i == managementRow) {
-                    textCell.setMultiline(false);
-                    if (info != null) {
-                        textCell.setTextAndValue(LocaleController.getString("ChannelAdministrators", R.string.ChannelAdministrators), String.format("%d", info.admins_count));
-                    } else {
-                        textCell.setText(LocaleController.getString("ChannelAdministrators", R.string.ChannelAdministrators));
+                    break;
+                case 3:
+                    updateViewColor(holder.itemView);
+                    TextCell textCell = (TextCell) holder.itemView;
+                    //textCell.setTextColor(0xff212121);
+                    textCell.setTextColor(tColor);
+
+                    if (i == sharedMediaRow) {
+                        String value;
+                        if (totalMediaCount == -1) {
+                            value = LocaleController.getString("Loading", R.string.Loading);
+                        } else {
+                            value = String.format("%d", totalMediaCount);
+                        }
+                        textCell.setMultiline(false);
+                        textCell.setTextAndValue(LocaleController.getString("SharedMedia", R.string.SharedMedia), value);
+                        textCell.setValueColor(themePrefs.getInt("profileTitleColor", def));
+                    } else if (i == settingsTimerRow) {
+                        TLRPC.EncryptedChat encryptedChat = MessagesController.getInstance().getEncryptedChat((int)(dialog_id >> 32));
+                        String value;
+                        if (encryptedChat.ttl == 0) {
+                            value = LocaleController.getString("ShortMessageLifetimeForever", R.string.ShortMessageLifetimeForever);
+                        } else {
+                            value = AndroidUtilities.formatTTLString(encryptedChat.ttl);
+                        }
+                        textCell.setMultiline(false);
+                        textCell.setTextAndValue(LocaleController.getString("MessageLifetime", R.string.MessageLifetime), value);
+                    } else if (i == settingsNotificationsRow) {
+                        textCell.setMultiline(false);
+                        //textCell.setTextAndIcon(LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), R.drawable.profile_list);
+                        Drawable pf = mContext.getResources().getDrawable(R.drawable.profile_list);
+                        pf.setColorFilter(dColor, PorterDuff.Mode.SRC_IN);
+                        textCell.setTextAndIcon(LocaleController.getString("NotificationsAndSounds", R.string.NotificationsAndSounds), pf);
+                    } else if (i == startSecretChatRow) {
+                        textCell.setMultiline(false);
+                        textCell.setText(LocaleController.getString("StartEncryptedChat", R.string.StartEncryptedChat));
+                        //textCell.setTextColor(0xff37a919);
+                        textCell.setTextColor(themePrefs.getInt("profileTitleColor", AndroidUtilities.getIntDarkerColor("themeColor", 0x15)));
+                    } else if (i == settingsKeyRow) {
+                        IdenticonDrawable identiconDrawable = new IdenticonDrawable();
+                        TLRPC.EncryptedChat encryptedChat = MessagesController.getInstance().getEncryptedChat((int)(dialog_id >> 32));
+                        identiconDrawable.setEncryptedChat(encryptedChat);
+                        textCell.setMultiline(false);
+                        textCell.setTextAndValueDrawable(LocaleController.getString("EncryptionKey", R.string.EncryptionKey), identiconDrawable);
+                    } else if (i == botInfoRow) {
+                        textCell.setMultiline(true);
+                        //textCell.setTextAndIcon(botInfo.share_text, R.drawable.bot_info);
+                        Drawable bot = mContext.getResources().getDrawable(R.drawable.bot_info);
+                        if(bot!= null)bot.setColorFilter(dColor, PorterDuff.Mode.SRC_IN);
+                        textCell.setTextAndIcon(botInfo.share_text, bot);
+                    } else if (i == channelInfoRow) {
+                        textCell.setMultiline(true);
+                        //textCell.setTextAndIcon(info.about, R.drawable.bot_info);
+                        Drawable bot = mContext.getResources().getDrawable(R.drawable.bot_info);
+                        if(bot!= null)bot.setColorFilter(dColor, PorterDuff.Mode.SRC_IN);
+                        textCell.setTextAndIcon(info.about, bot);
+                    } else if (i == leaveChannelRow) {
+                        //textCell.setTextColor(0xffed3d39);
+                        textCell.setTextColor(themePrefs.getInt("profileTitleColor", AndroidUtilities.getIntDarkerColor("themeColor", 0x15)));
+                        textCell.setMultiline(false);
+                        textCell.setText(LocaleController.getString("LeaveChannel", R.string.LeaveChannel));
+                    } else if (i == membersRow) {
+                        textCell.setMultiline(false);
+                        if (info != null) {
+                            textCell.setTextAndValue(LocaleController.getString("ChannelMembers", R.string.ChannelMembers), String.format("%d", info.participants_count));
+                        } else {
+                            textCell.setText(LocaleController.getString("ChannelMembers", R.string.ChannelMembers));
+                        }
+                    } else if (i == managementRow) {
+                        textCell.setMultiline(false);
+                        if (info != null) {
+                            textCell.setTextAndValue(LocaleController.getString("ChannelAdministrators", R.string.ChannelAdministrators), String.format("%d", info.admins_count));
+                        } else {
+                            textCell.setText(LocaleController.getString("ChannelAdministrators", R.string.ChannelAdministrators));
+                        }
+                    } else if (i == blockedUsersRow) {
+                        textCell.setMultiline(false);
+                        if (info != null) {
+                            textCell.setTextAndValue(LocaleController.getString("ChannelBlockedUsers", R.string.ChannelBlockedUsers), String.format("%d", info.kicked_count));
+                        } else {
+                            textCell.setText(LocaleController.getString("ChannelBlockedUsers", R.string.ChannelBlockedUsers));
+                        }
                     }
-                } else if (i == blockedUsersRow) {
-                    textCell.setMultiline(false);
-                    if (info != null) {
-                        textCell.setTextAndValue(LocaleController.getString("ChannelBlockedUsers", R.string.ChannelBlockedUsers), String.format("%d", info.kicked_count));
-                    } else {
-                        textCell.setText(LocaleController.getString("ChannelBlockedUsers", R.string.ChannelBlockedUsers));
+                    break;
+                case 4:
+                    updateViewColor(holder.itemView);
+                    TLRPC.TL_chatParticipant part = info.participants.participants.get(sortedUsers.get(i - emptyRowChat2 - 1));
+                    //((UserCell) holder.itemView).setData(MessagesController.getInstance().getUser(part.user_id), null, null, i == emptyRowChat2 + 1 ? R.drawable.menu_newgroup : 0);
+                    int icon = 0;
+                    if (info.participants.admin_id == part.user_id) {
+                        icon = R.drawable.menu_admin;
+                    } else if (part.user_id == UserConfig.getClientUserId()) {
+                        icon = R.drawable.menu_newgroup;
                     }
+                    ((UserCell) holder.itemView).setData(MessagesController.getInstance().getUser(part.user_id), null, null, icon);
+                    break;
+                default:
+                    checkBackground = false;
+            }
+            if (checkBackground) {
+                boolean enabled = false;
+                if (user_id != 0) {
+                    enabled = i == phoneRow || i == settingsTimerRow || i == settingsKeyRow || i == settingsNotificationsRow || i == sharedMediaRow || i == startSecretChatRow || i == usernameRow;
+                } else if (chat_id != 0) {
+                    enabled = i == settingsNotificationsRow || i == sharedMediaRow || i > emptyRowChat2 && i < membersEndRow || i == addMemberRow || i == channelNameRow || i == leaveChannelRow || i == membersRow || i == managementRow || i == blockedUsersRow || i == channelInfoRow;
                 }
-            } else if (type == 4) {
-                if (view == null) {
-                    view = new UserCell(mContext, 61);
-                    view.setTag("Profile");
-                }
-                updateViewColor(view);
-                TLRPC.TL_chatParticipant part = info.participants.participants.get(sortedUsers.get(i - emptyRowChat2 - 1));
-                //((UserCell)view).setData(MessagesController.getInstance().getUser(part.user_id), null, null, i == emptyRowChat2 + 1 ? R.drawable.menu_newgroup : 0);
-                int icon = 0;
-                if (info.participants.admin_id == part.user_id) {
-                    icon = R.drawable.menu_admin;
-                } else if (part.user_id == UserConfig.getClientUserId()) {
-                    icon = R.drawable.menu_newgroup;
-                }
-                ((UserCell) view).setData(MessagesController.getInstance().getUser(part.user_id), null, null, icon);
-
-            } else if (type == 5) {
-                if (view == null) {
-                    //view = new ShadowSectionCell(mContext);
-                    view = new ShadowSectionCell(mContext, false);
-                }
-                view.setBackgroundColor(themePrefs.getInt("profileRowColor", 0xffffffff));
-                updateViewColor(view);
-            } else if (type == 6) {
-                if (view == null) {
-                    view = new AddMemberCell(mContext);
-                    if (chat_id > 0) {
-                        ((AddMemberCell) view).setText(LocaleController.getString("AddMember", R.string.AddMember));
-                    } else {
-                        ((AddMemberCell) view).setText(LocaleController.getString("AddRecipient", R.string.AddRecipient));
+                if (enabled) {
+                    if (holder.itemView.getBackground() == null) {
+                        //holder.itemView.setBackgroundResource(R.drawable.list_selector);
+                        holder.itemView.setBackgroundColor(themePrefs.getInt("profileRowColor", 0xffffffff));
+                    }
+                } else {
+                    if (holder.itemView.getBackground() != null) {
+                        holder.itemView.setBackgroundDrawable(null);
                     }
                 }
-                updateViewColor(view);
-                ((AddMemberCell) view).setTextColor(tColor);
-                ((AddMemberCell) view).setDrawableColor(dColor);
             }
-            //viewGroup.setBackgroundColor(themePrefs.getInt("profileRowColor", 0xffffffff));
-            updateListBG(viewGroup);
-            return view;
+        }
+
+        @Override
+        public int getItemCount() {
+            return rowCount;
         }
 
         @Override
@@ -1962,75 +2231,10 @@ public int getItemViewType(int i) {
             return 0;
         }
 
-        @Override
-        public int getViewTypeCount() {
-            return 7;
-        }
+        /*@Override
+        public boolean isEnabled(int i) {
 
-        @Override
-        public boolean isEmpty() {
             return false;
-        }
-    }
-
-    private void updateListBG(ViewGroup vg){
-        SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
-        int mainColor = themePrefs.getInt("profileRowColor", 0xffffffff);
-        int value = themePrefs.getInt("profileRowGradient", 0);
-        boolean b = true;//themePrefs.getBoolean("profileRowGradientListCheck", false);
-        if(value > 0  && b) {
-            GradientDrawable.Orientation go;
-            switch(value) {
-                case 2:
-                    go = GradientDrawable.Orientation.LEFT_RIGHT;
-                    break;
-                case 3:
-                    go = GradientDrawable.Orientation.TL_BR;
-                    break;
-                case 4:
-                    go = GradientDrawable.Orientation.BL_TR;
-                    break;
-                default:
-                    go = GradientDrawable.Orientation.TOP_BOTTOM;
-            }
-
-            int gradColor = themePrefs.getInt("profileRowGradientColor", 0xffffffff);
-            int[] colors = new int[]{mainColor, gradColor};
-            GradientDrawable gd = new GradientDrawable(go, colors);
-            vg.setBackgroundDrawable(gd);
-        }else{
-            vg.setBackgroundColor(mainColor);
-        }
-    }
-
-    private void updateViewColor(View v){
-        SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
-        int mainColor = themePrefs.getInt("profileRowColor", 0xffffffff);
-        int value = themePrefs.getInt("profileRowGradient", 0);
-        boolean b = true;//themePrefs.getBoolean("profileRowGradientListCheck", false);
-        if(value > 0 && !b) {
-            GradientDrawable.Orientation go;
-            switch(value) {
-                case 2:
-                    go = GradientDrawable.Orientation.LEFT_RIGHT;
-                    break;
-                case 3:
-                    go = GradientDrawable.Orientation.TL_BR;
-                    break;
-                case 4:
-                    go = GradientDrawable.Orientation.BL_TR;
-                    break;
-                default:
-                    go = GradientDrawable.Orientation.TOP_BOTTOM;
-            }
-
-            int gradColor = themePrefs.getInt("profileRowGradientColor", 0xffffffff);
-            int[] colors = new int[]{mainColor, gradColor};
-            GradientDrawable gd = new GradientDrawable(go, colors);
-            v.setBackgroundDrawable(gd);
-        } else if(b){
-            v.setBackgroundColor(0x00000000);
-        }
-        if(value > 0)v.setTag("Profile00");
+        }*/
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
index 0dd74e780..d6b3eb455 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.4.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -35,11 +35,11 @@
 import org.telegram.messenger.MessagesStorage;
 import org.telegram.messenger.NotificationsController;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.R;
+import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.Adapters.BaseFragmentAdapter;
 import org.telegram.ui.Cells.TextColorCell;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SecretPhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/SecretPhotoViewer.java
index 46bdddc16..9ca19d128 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SecretPhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SecretPhotoViewer.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -18,6 +18,7 @@
 import android.graphics.RectF;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.Drawable;
+import android.os.Build;
 import android.text.Layout;
 import android.text.StaticLayout;
 import android.text.TextPaint;
@@ -34,10 +35,10 @@
 import org.telegram.messenger.ImageReceiver;
 import org.telegram.messenger.MessageObject;
 import org.telegram.messenger.NotificationCenter;
-import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
+import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.Components.LayoutHelper;
 
@@ -257,12 +258,20 @@ public void openPhoto(MessageObject messageObject) {
         BitmapDrawable drawable = ImageLoader.getInstance().getImageFromMemory(sizeFull.location, null, null);
         if (drawable == null) {
             File file = FileLoader.getPathToAttach(sizeFull);
-            Bitmap bitmap;
+            Bitmap bitmap = null;
+            BitmapFactory.Options options = null;
+            if (Build.VERSION.SDK_INT >= 14 && Build.VERSION.SDK_INT < 21) {
+                options = new BitmapFactory.Options();
+                options.inDither = true;
+                options.inPreferredConfig = Bitmap.Config.ARGB_8888;
+                options.inPurgeable = true;
+                options.inSampleSize = 1;
+                options.inMutable = true;
+            }
             try {
-                bitmap = BitmapFactory.decodeFile(file.getAbsolutePath());
+                bitmap = BitmapFactory.decodeFile(file.getAbsolutePath(), options);
             } catch (Throwable e) {
-                ImageLoader.getInstance().clearMemory();
-                bitmap = BitmapFactory.decodeFile(file.getAbsolutePath());
+                FileLog.e("tmessages", e);
             }
             if (bitmap != null) {
                 drawable = new BitmapDrawable(bitmap);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java
index 37a3d1207..229033fd6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index f07680e53..29212281b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -110,6 +110,10 @@
     private ImageView writeButton;
     private AnimatorSetProxy writeButtonAnimation;
     private AvatarUpdater avatarUpdater = new AvatarUpdater();
+    private View extraHeightView;
+    private View shadowView;
+
+    private int extraHeight;
 
     private int overscrollRow;
     private int emptyRow;
@@ -129,7 +133,7 @@
     private int wifiDownloadRow;
     private int roamingDownloadRow;
     private int saveToGalleryRow;
-    //private int messagesSectionRow;
+    private int messagesSectionRow;
     private int messagesSectionRow2;
     private int textSizeRow;
     private int stickersRow;
@@ -261,7 +265,7 @@ public void run() {
         saveToGalleryRow = rowCount++;
         keepOriginalFilenameRow = rowCount++;
         keepOriginalFilenameDetailRow = rowCount++;
-        //messagesSectionRow = rowCount++;
+        messagesSectionRow = rowCount++;
 
         messagesSectionRow2 = rowCount++;
         textSizeRow = rowCount++;
@@ -284,7 +288,7 @@ public void run() {
         if (BuildConfig.DEBUG) {
             sendLogsRow = rowCount++;
             clearLogsRow = rowCount++;
-            //switchBackendButtonRow = rowCount++;
+            --switchBackendButtonRow;
         }
         //versionRow = rowCount++;
         //contactsSectionRow = rowCount++;
@@ -307,21 +311,13 @@ public void onFragmentDestroy() {
         avatarUpdater.clear();
     }
 
-    @Override
-    public boolean needAddActionBar() {
-        return false;
-    }
-
     @Override
     public View createView(Context context) {
-            actionBar.setBackgroundColor(AvatarDrawable.getProfileBackColorForId(5));
-            actionBar.setItemsBackground(AvatarDrawable.getButtonColorForId(5));
+            //actionBar.setBackgroundColor(AvatarDrawable.getProfileBackColorForId(5));
+            //actionBar.setItemsBackground(AvatarDrawable.getButtonColorForId(5));
             actionBar.setBackButtonImage(R.drawable.ic_ab_back);
-            //Drawable back = getParentActivity().getResources().getDrawable(R.drawable.ic_ab_back);
-            //SharedPreferences themePrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
-            //back.setColorFilter(themePrefs.getInt("prefHeaderIconsColor", 0xffffffff), PorterDuff.Mode.MULTIPLY);
-            //actionBar.setBackButtonDrawable(back);
-            actionBar.setExtraHeight(AndroidUtilities.dp(88), false);
+            actionBar.setAddToContainer(false);
+            extraHeight = 88;
             if (AndroidUtilities.isTablet()) {
                 actionBar.setOccupyStatusBar(false);
             }
@@ -391,52 +387,17 @@ protected boolean drawChild(@NonNull Canvas canvas, @NonNull View child, long dr
         };
             FrameLayout frameLayout = (FrameLayout) fragmentView;
 
-        avatarImage = new BackupImageView(context);
-        avatarImage.setRoundRadius(AndroidUtilities.dp(30));
-        actionBar.addView(avatarImage, LayoutHelper.createFrame(60, 60, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.BOTTOM, LocaleController.isRTL ? 0 : 17, 0, LocaleController.isRTL ? 17 : 0, 22));
-            avatarImage.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    TLRPC.User user = MessagesController.getInstance().getUser(UserConfig.getClientUserId());
-                    if (user.photo != null && user.photo.photo_big != null) {
-                        PhotoViewer.getInstance().setParentActivity(getParentActivity());
-                        PhotoViewer.getInstance().openPhoto(user.photo.photo_big, SettingsActivity.this);
-                }
-            }
-        });
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
-        nameTextView = new TextView(context);
-            //nameTextView.setTextColor(0xffffffff);
-            nameTextView.setTextColor(preferences.getInt("prefHeaderTitleColor", 0xffffffff));
-
-            nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 20);
-            nameTextView.setLines(1);
-            nameTextView.setMaxLines(1);
-            nameTextView.setSingleLine(true);
-            nameTextView.setEllipsize(TextUtils.TruncateAt.END);
-            nameTextView.setGravity((LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT));
-            nameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
-        actionBar.addView(nameTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.BOTTOM, LocaleController.isRTL ? 16 : 97, 0, LocaleController.isRTL ? 97 : 16, 51));
-
-            onlineTextView = new TextView(context);
-            //onlineTextView.setTextColor(AvatarDrawable.getProfileTextColorForId(5));
-            onlineTextView.setTextColor(preferences.getInt("prefHeaderStatusColor", AndroidUtilities.getIntDarkerColor("themeColor", -0x40)));
-            onlineTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
-            onlineTextView.setLines(1);
-            onlineTextView.setMaxLines(1);
-            onlineTextView.setSingleLine(true);
-            onlineTextView.setEllipsize(TextUtils.TruncateAt.END);
-            onlineTextView.setGravity((LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT));
-        actionBar.addView(onlineTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.RIGHT : Gravity.LEFT) | Gravity.BOTTOM, LocaleController.isRTL ? 16 : 97, 0, LocaleController.isRTL ? 97 : 16, 30));
-
         listView = new ListView(context);
-
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
         int bgColor = preferences.getInt("prefBGColor", 0xffffffff);
+        int def = preferences.getInt("themeColor", AndroidUtilities.defColor);
+        int hColor = preferences.getInt("prefHeaderColor", def);
         listView.setBackgroundColor(bgColor);
             listView.setDivider(null);
             listView.setDividerHeight(0);
             listView.setVerticalScrollBarEnabled(false);
-            AndroidUtilities.setListViewEdgeEffectColor(listView, AvatarDrawable.getProfileBackColorForId(5));
+            //AndroidUtilities.setListViewEdgeEffectColor(listView, AvatarDrawable.getProfileBackColorForId(5));
+        AndroidUtilities.setListViewEdgeEffectColor(listView, bgColor);
         frameLayout.addView(listView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT, Gravity.TOP | Gravity.LEFT));
             listView.setAdapter(listAdapter);
             listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
@@ -610,7 +571,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                         builder.setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialogInterface, int i) {
-                                ConnectionsManager.getInstance().switchBackend();
+                                //ConnectionsManager.getInstance().switchBackend();
                             }
                         });
                         builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
@@ -623,7 +584,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                             FileLog.e("tmessages", e);
                         }
                     } else if (i == contactsReimportRow) {
-                    //not implemented
+                        //not implemented
                     } else if (i == contactsSortRow) {
                         if (getParentActivity() == null) {
                             return;
@@ -787,6 +748,61 @@ public void onClick(DialogInterface dialog, int which) {
 
             frameLayout.addView(actionBar);
 
+        extraHeightView = new View(context);
+        ViewProxy.setPivotY(extraHeightView, 0);
+        //extraHeightView.setBackgroundColor(AvatarDrawable.getProfileBackColorForId(5));
+        extraHeightView.setBackgroundColor(hColor);
+        frameLayout.addView(extraHeightView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 88));
+
+        shadowView = new View(context);
+        shadowView.setBackgroundResource(R.drawable.header_shadow);
+        frameLayout.addView(shadowView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, 3));
+            
+        avatarImage = new BackupImageView(context);
+        //avatarImage.setRoundRadius(AndroidUtilities.dp(21));
+        int radius = AndroidUtilities.getIntDef("prefAvatarRadius", 32);
+        avatarImage.setRoundRadius(radius);
+        ViewProxy.setPivotX(avatarImage, 0);
+        ViewProxy.setPivotY(avatarImage, 0);
+        frameLayout.addView(avatarImage, LayoutHelper.createFrame(42, 42, Gravity.TOP | Gravity.LEFT, 64, 0, 0, 0));
+        avatarImage.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                TLRPC.User user = MessagesController.getInstance().getUser(UserConfig.getClientUserId());
+                if (user.photo != null && user.photo.photo_big != null) {
+                    PhotoViewer.getInstance().setParentActivity(getParentActivity());
+                    PhotoViewer.getInstance().openPhoto(user.photo.photo_big, SettingsActivity.this);
+                }
+            }
+        });
+
+        SharedPreferences themesPrefs = ApplicationLoader.applicationContext.getSharedPreferences(AndroidUtilities.THEME_PREFS, AndroidUtilities.THEME_PREFS_MODE);
+
+        nameTextView = new TextView(context);
+        //nameTextView.setTextColor(0xffffffff);
+        nameTextView.setTextColor(preferences.getInt("prefHeaderTitleColor", 0xffffffff));
+        nameTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 18);
+        nameTextView.setLines(1);
+        nameTextView.setMaxLines(1);
+        nameTextView.setSingleLine(true);
+        nameTextView.setEllipsize(TextUtils.TruncateAt.END);
+        nameTextView.setGravity(Gravity.LEFT);
+        nameTextView.setTypeface(AndroidUtilities.getTypeface("fonts/rmedium.ttf"));
+        ViewProxy.setPivotX(nameTextView, 0);
+        ViewProxy.setPivotY(nameTextView, 0);
+        frameLayout.addView(nameTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 118, 0, 48, 0));
+
+        onlineTextView = new TextView(context);
+        //onlineTextView.setTextColor(AvatarDrawable.getProfileTextColorForId(5));
+        onlineTextView.setTextColor(preferences.getInt("prefHeaderStatusColor", AndroidUtilities.getIntDarkerColor("themeColor", -0x40)));
+        onlineTextView.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
+        onlineTextView.setLines(1);
+        onlineTextView.setMaxLines(1);
+        onlineTextView.setSingleLine(true);
+        onlineTextView.setEllipsize(TextUtils.TruncateAt.END);
+        onlineTextView.setGravity(Gravity.LEFT);
+        frameLayout.addView(onlineTextView, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.LEFT | Gravity.TOP, 118, 0, 48, 0));
+
         writeButton = new ImageView(context);
         writeButton.setBackgroundResource(R.drawable.floating_user_states);
         if(bgColor != 0xffffffff) {
@@ -815,7 +831,7 @@ public void getOutline(View view, Outline outline) {
                     }
                 });
             }
-        frameLayout.addView(writeButton, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.LEFT : Gravity.RIGHT) | Gravity.TOP, LocaleController.isRTL ? 16 : 0, 0, LocaleController.isRTL ? 0 : 16, 0));
+        frameLayout.addView(writeButton, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, Gravity.RIGHT | Gravity.TOP, 0, 0, 16, 0));
             writeButton.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
@@ -858,6 +874,8 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 }
             });
 
+        needLayout();
+
             listView.setOnScrollListener(new AbsListView.OnScrollListener() {
                 @Override
                 public void onScrollStateChanged(AbsListView view, int scrollState) {
@@ -875,8 +893,8 @@ public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCoun
                         if (firstVisibleItem == 0) {
                             height = AndroidUtilities.dp(88) + (child.getTop() < 0 ? child.getTop() : 0);
                         }
-                        if (actionBar.getExtraHeight() != height) {
-                            actionBar.setExtraHeight(height, true);
+                    if (extraHeight != height) {
+                        extraHeight = height;
                             needLayout();
                         }
                     }
@@ -916,6 +934,7 @@ public void updatePhotoAtIndex(int index) {
                 object.thumb = object.imageReceiver.getBitmap();
                 object.size = -1;
                 object.radius = avatarImage.getImageReceiver().getRoundRadius();
+                object.scale = ViewProxy.getScaleX(avatarImage);
                 return object;
             }
         }
@@ -946,7 +965,8 @@ public void setPhotoChecked(int index) {
     }
 
     @Override
-    public void cancelButtonPressed() {
+    public boolean cancelButtonPressed() {
+        return true;
     }
 
     @Override
@@ -1106,32 +1126,30 @@ public void onConfigurationChanged(Configuration newConfig) {
 
     private void needLayout() {
         FrameLayout.LayoutParams layoutParams;
+        int newTop = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight();
         if (listView != null) {
             layoutParams = (FrameLayout.LayoutParams) listView.getLayoutParams();
-            layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight();
+            if (layoutParams.topMargin != newTop) {
+                layoutParams.topMargin = newTop;
             listView.setLayoutParams(layoutParams);
+                ViewProxy.setTranslationY(extraHeightView, newTop);
+            }
         }
 
         if (avatarImage != null) {
-            float diff = actionBar.getExtraHeight() / (float) AndroidUtilities.dp(88);
-            float diffm = 1.0f - diff;
-
-            int avatarSize = 42 + (int) (18 * diff);
-            int avatarX = 17 + (int) (47 * diffm);
-            int avatarY = AndroidUtilities.dp(22) - (int) ((AndroidUtilities.dp(22) - (ActionBar.getCurrentActionBarHeight() - AndroidUtilities.dp(42)) / 2) * (1.0f - diff));
-            int nameX = 97 + (int) (21 * diffm);
-            int nameEndX = 16 + (int) (32 * diffm);
-            int nameY = avatarY + AndroidUtilities.dp(29 - 13 * diffm);
-            int statusY = avatarY + AndroidUtilities.dp(8 - 7 * diffm);
-            float scale = 1.0f - 0.12f * diffm;
+            float diff = extraHeight / (float) AndroidUtilities.dp(88);
+
+            ViewProxy.setScaleY(extraHeightView, diff);
+            ViewProxy.setTranslationY(shadowView, newTop + extraHeight);
 
+            if (Build.VERSION.SDK_INT < 11) {
             layoutParams = (FrameLayout.LayoutParams) writeButton.getLayoutParams();
-            layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() + actionBar.getExtraHeight() - AndroidUtilities.dp(29.5f);
+                layoutParams.topMargin = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() + extraHeight - AndroidUtilities.dp(29.5f);
             writeButton.setLayoutParams(layoutParams);
+            } else {
+                ViewProxy.setTranslationY(writeButton, (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() + extraHeight - AndroidUtilities.dp(29.5f));
+            }
 
-            //ViewProxy.setScaleX(writeButton, diff > 0.2f ? 1.0f : diff / 0.2f);
-            //ViewProxy.setScaleY(writeButton, diff > 0.2f ? 1.0f : diff / 0.2f);
-            //ViewProxy.setAlpha(writeButton, diff > 0.2f ? 1.0f : diff / 0.2f);
             final boolean setVisible = diff > 0.2f;
             boolean currentVisible = writeButton.getTag() == null;
             if (setVisible != currentVisible) {
@@ -1175,34 +1193,18 @@ public void onAnimationEnd(Object animation) {
                 });
                 writeButtonAnimation.start();
             }
-            int aSize = AndroidUtilities.getIntDef("prefAvatarSize", 64);//Plus
-            avatarSize = aSize > 46 ? (aSize - 20) + (int) (18 * diff) : aSize;//Plus
-            //avatarImage.setRoundRadius(AndroidUtilities.dp(avatarSize / 2));
-            int radius = AndroidUtilities.getIntDef("prefAvatarRadius", 32);
-            avatarImage.setRoundRadius(AndroidUtilities.dp(radius));
-            layoutParams = (FrameLayout.LayoutParams) avatarImage.getLayoutParams();
-            layoutParams.width = AndroidUtilities.dp(avatarSize);
-            layoutParams.height = AndroidUtilities.dp(avatarSize);
-            layoutParams.leftMargin = LocaleController.isRTL ? 0 : AndroidUtilities.dp(avatarX);
-            layoutParams.rightMargin = LocaleController.isRTL ? AndroidUtilities.dp(avatarX) : 0;
-            layoutParams.bottomMargin = avatarY;
-            avatarImage.setLayoutParams(layoutParams);
-
-            ViewProxy.setPivotX(nameTextView, 0);
-            ViewProxy.setPivotY(nameTextView, 0);
-            ViewProxy.setScaleX(nameTextView, scale);
-            ViewProxy.setScaleY(nameTextView, scale);
-            layoutParams = (FrameLayout.LayoutParams) nameTextView.getLayoutParams();
-            layoutParams.leftMargin = AndroidUtilities.dp(LocaleController.isRTL ? nameEndX : nameX);
-            layoutParams.rightMargin = AndroidUtilities.dp(LocaleController.isRTL ? nameX : nameEndX);
-            layoutParams.bottomMargin = nameY;
-            nameTextView.setLayoutParams(layoutParams);
-
-            layoutParams = (FrameLayout.LayoutParams) onlineTextView.getLayoutParams();
-            layoutParams.leftMargin = AndroidUtilities.dp(LocaleController.isRTL ? nameEndX : nameX);
-            layoutParams.rightMargin = AndroidUtilities.dp(LocaleController.isRTL ? nameX : nameEndX);
-            layoutParams.bottomMargin = statusY;
-            onlineTextView.setLayoutParams(layoutParams);
+
+            ViewProxy.setScaleX(avatarImage, (42 + 18 * diff) / 42.0f);
+            ViewProxy.setScaleY(avatarImage, (42 + 18 * diff) / 42.0f);
+            float avatarY = (actionBar.getOccupyStatusBar() ? AndroidUtilities.statusBarHeight : 0) + ActionBar.getCurrentActionBarHeight() / 2.0f * (1.0f + diff) - 21 * AndroidUtilities.density + 27 * AndroidUtilities.density * diff;
+            ViewProxy.setTranslationX(avatarImage, -AndroidUtilities.dp(47) * diff);
+            ViewProxy.setTranslationY(avatarImage, (float) Math.ceil(avatarY));
+            ViewProxy.setTranslationX(nameTextView, -21 * AndroidUtilities.density * diff);
+            ViewProxy.setTranslationY(nameTextView, (float) Math.floor(avatarY) - (float) Math.ceil(AndroidUtilities.density) + (float) Math.floor(7 * AndroidUtilities.density * diff));
+            ViewProxy.setTranslationX(onlineTextView, -21 * AndroidUtilities.density * diff);
+            ViewProxy.setTranslationY(onlineTextView, (float) Math.floor(avatarY) + AndroidUtilities.dp(22) + (float )Math.floor(11 * AndroidUtilities.density) * diff);
+            ViewProxy.setScaleX(nameTextView, 1.0f + 0.12f * diff);
+            ViewProxy.setScaleY(nameTextView, 1.0f + 0.12f * diff);
         }
     }
 
@@ -1258,6 +1260,15 @@ private void sendLogs() {
             }
 
             if (uris.isEmpty()) {
+                AndroidUtilities.runOnUIThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        if (getParentActivity() != null) {
+                            Toast toast = Toast.makeText(getParentActivity(), LocaleController.getString("SendLogsEmpty", R.string.SendLogsEmpty), Toast.LENGTH_SHORT);
+                            toast.show();
+                        }
+                    }
+                });
                 return;
             }
             Intent i = new Intent(Intent.ACTION_SEND_MULTIPLE);
@@ -1544,7 +1555,7 @@ public int getItemViewType(int i) {
             if (i == emptyRow || i == overscrollRow) {
                 return 0;
             } 
-            if (i == settingsSectionRow || i == supportSectionRow /*|| i == messagesSectionRow*/ || i == mediaDownloadSection || i == contactsSectionRow || i == dialogsSectionRow) {
+            if (i == settingsSectionRow || i == supportSectionRow || i == messagesSectionRow || i == mediaDownloadSection || i == contactsSectionRow || i == dialogsSectionRow) {
                 return 1;
             } else if (i == enableAnimationsRow || i == sendByEnterRow || i == saveToGalleryRow || i == disableAudioStopRow || i == disableMessageClickRow || i == showAndroidEmojiRow || i == useDeviceFontRow || i == keepOriginalFilenameRow ) {
                 return 3;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemingActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemingActivity.java
index 73fc4edb7..9039c3199 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemingActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemingActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatActivity.java
index e0dbeb15e..4075d3565 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatsActivity.java
index 92894326e..080e359a4 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemingChatsActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemingContactsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemingContactsActivity.java
index 93684dc06..5542cdd60 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemingContactsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemingContactsActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemingDrawerActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemingDrawerActivity.java
index 2c28240d5..aecb23865 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemingDrawerActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemingDrawerActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ThemingProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ThemingProfileActivity.java
index 1c87726f0..ae4e58551 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ThemingProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ThemingProfileActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java
index 53f8b4bce..214a2c653 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/TwoStepVerificationActivity.java
@@ -1,5 +1,5 @@
 /*
- * This is the source code of Telegram for Android v. 2.x
+ * This is the source code of Telegram for Android v. 3.x.x
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
@@ -44,9 +44,9 @@
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.NotificationCenter;
 import org.telegram.messenger.ApplicationLoader;
-import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.R;
+import org.telegram.tgnet.ConnectionsManager;
 import org.telegram.tgnet.RequestDelegate;
 import org.telegram.tgnet.TLObject;
 import org.telegram.tgnet.TLRPC;
@@ -469,9 +469,8 @@ public void run() {
     }
 
     @Override
-    public void onOpenAnimationEnd() {
-        super.onOpenAnimationEnd();
-        if (type == 1) {
+    public void onTransitionAnimationEnd(boolean isOpen, boolean backward) {
+        if (isOpen && type == 1) {
             AndroidUtilities.showKeyboard(passwordEditText);
         }
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
index cb02531ed..fe59e10b5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.7.x.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013-2014.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java
index fcfab8d4e..83b13fe4f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/WallpapersActivity.java
@@ -1,9 +1,9 @@
 /*
- * This is the source code of Telegram for Android v. 1.3.2.
+ * This is the source code of Telegram for Android v. 3.x.x.
  * It is licensed under GNU GPL v. 2 or later.
  * You should have received a copy of the license in this archive (see LICENSE).
  *
- * Copyright Nikolai Kudashov, 2013.
+ * Copyright Nikolai Kudashov, 2013-2015.
  */
 
 package org.telegram.ui;
@@ -87,7 +87,7 @@ public boolean onFragmentCreate() {
         selectedBackground = preferences.getInt("selectedBackground", 1000001);
         selectedColor = preferences.getInt("selectedColor", 0);
         MessagesStorage.getInstance().getWallpapers();
-        File toFile = new File(ApplicationLoader.applicationContext.getFilesDir(), "wallpaper-temp.jpg");
+        File toFile = new File(ApplicationLoader.getFilesDirFixed(), "wallpaper-temp.jpg");
         toFile.delete();
         return true;
     }
@@ -125,7 +125,7 @@ public void onItemClick(int id) {
                         TLRPC.PhotoSize size = FileLoader.getClosestPhotoSizeWithSize(wallPaper.sizes, Math.min(width, height));
                         String fileName = size.location.volume_id + "_" + size.location.local_id + ".jpg";
                         File f = new File(FileLoader.getInstance().getDirectory(FileLoader.MEDIA_DIR_CACHE), fileName);
-                        File toFile = new File(ApplicationLoader.applicationContext.getFilesDir(), "wallpaper.jpg");
+                        File toFile = new File(ApplicationLoader.getFilesDirFixed(), "wallpaper.jpg");
                         try {
                             done = AndroidUtilities.copyFile(f, toFile);
                         } catch (Exception e) {
@@ -134,8 +134,8 @@ public void onItemClick(int id) {
                         }
                     } else {
                         if (selectedBackground == -1) {
-                            File fromFile = new File(ApplicationLoader.applicationContext.getFilesDir(), "wallpaper-temp.jpg");
-                            File toFile = new File(ApplicationLoader.applicationContext.getFilesDir(), "wallpaper.jpg");
+                            File fromFile = new File(ApplicationLoader.getFilesDirFixed(), "wallpaper-temp.jpg");
+                            File toFile = new File(ApplicationLoader.getFilesDirFixed(), "wallpaper.jpg");
                             done = fromFile.renameTo(toFile);
                         } else {
                             done = true;
@@ -266,11 +266,12 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
                 try {
                     Point screenSize = AndroidUtilities.getRealScreenSize();
                     Bitmap bitmap = ImageLoader.loadBitmap(currentPicturePath, null, screenSize.x, screenSize.y, true);
-                    File toFile = new File(ApplicationLoader.applicationContext.getFilesDir(), "wallpaper-temp.jpg");
+                    File toFile = new File(ApplicationLoader.getFilesDirFixed(), "wallpaper-temp.jpg");
                     stream = new FileOutputStream(toFile);
                     bitmap.compress(Bitmap.CompressFormat.JPEG, 87, stream);
                     selectedBackground = -1;
                     selectedColor = 0;
+                    Drawable drawable = backgroundImage.getDrawable();
                     backgroundImage.setImageBitmap(bitmap);
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
@@ -291,11 +292,12 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
                 try {
                     Point screenSize = AndroidUtilities.getRealScreenSize();
                     Bitmap bitmap = ImageLoader.loadBitmap(null, data.getData(), screenSize.x, screenSize.y, true);
-                    File toFile = new File(ApplicationLoader.applicationContext.getFilesDir(), "wallpaper-temp.jpg");
+                    File toFile = new File(ApplicationLoader.getFilesDirFixed(), "wallpaper-temp.jpg");
                     FileOutputStream stream = new FileOutputStream(toFile);
                     bitmap.compress(Bitmap.CompressFormat.JPEG, 87, stream);
                     selectedBackground = -1;
                     selectedColor = 0;
+                    Drawable drawable = backgroundImage.getDrawable();
                     backgroundImage.setImageBitmap(bitmap);
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
@@ -365,9 +367,9 @@ private void processSelectedBackground() {
                 backgroundImage.setBackgroundColor(0);
                 selectedColor = 0;
             } else if (selectedBackground == -1) {
-                File toFile = new File(ApplicationLoader.applicationContext.getFilesDir(), "wallpaper-temp.jpg");
+                File toFile = new File(ApplicationLoader.getFilesDirFixed(), "wallpaper-temp.jpg");
                 if (!toFile.exists()) {
-                    toFile = new File(ApplicationLoader.applicationContext.getFilesDir(), "wallpaper.jpg");
+                    toFile = new File(ApplicationLoader.getFilesDirFixed(), "wallpaper.jpg");
                 }
                 if (toFile.exists()) {
                     backgroundImage.setImageURI(Uri.fromFile(toFile));
@@ -380,6 +382,7 @@ private void processSelectedBackground() {
                     return;
                 }
                 if (wallPaper instanceof TLRPC.TL_wallPaperSolid) {
+                    Drawable drawable = backgroundImage.getDrawable();
                     backgroundImage.setImageBitmap(null);
                     selectedColor = 0xff000000 | wallPaper.bg_color;
                     backgroundImage.setBackgroundColor(selectedColor);
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/Thumbs.db b/TMessagesProj/src/main/res/drawable-hdpi/Thumbs.db
deleted file mode 100644
index 44ad831b1..000000000
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/Thumbs.db and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/editheader.9.png b/TMessagesProj/src/main/res/drawable-hdpi/editheader.9.png
deleted file mode 100644
index 00240da64..000000000
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/editheader.9.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/mic_pressed.png b/TMessagesProj/src/main/res/drawable-hdpi/mic_pressed.png
index 3cf43e04b..ae9ea3bf4 100644
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/mic_pressed.png and b/TMessagesProj/src/main/res/drawable-hdpi/mic_pressed.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/Thumbs.db b/TMessagesProj/src/main/res/drawable-mdpi/Thumbs.db
deleted file mode 100644
index 48830ca30..000000000
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/Thumbs.db and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/editheader.9.png b/TMessagesProj/src/main/res/drawable-mdpi/editheader.9.png
deleted file mode 100644
index e7f67fe07..000000000
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/editheader.9.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/mic_pressed.png b/TMessagesProj/src/main/res/drawable-mdpi/mic_pressed.png
index e1b29c5bc..ed471652e 100644
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/mic_pressed.png and b/TMessagesProj/src/main/res/drawable-mdpi/mic_pressed.png differ
diff --git a/TMessagesProj/src/main/res/drawable-v21/bar_selector.xml b/TMessagesProj/src/main/res/drawable-v21/bar_selector.xml
index 7c7941ef9..1d5c6abee 100644
--- a/TMessagesProj/src/main/res/drawable-v21/bar_selector.xml
+++ b/TMessagesProj/src/main/res/drawable-v21/bar_selector.xml
@@ -1,4 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <ripple xmlns:android="http://schemas.android.com/apk/res/android"
-    android:color="#ff45658d">
+    android:color="#ff00796B">
+    <!--android:color="#ff45658d">-->
 </ripple>
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/Thumbs.db b/TMessagesProj/src/main/res/drawable-xhdpi/Thumbs.db
deleted file mode 100644
index 8087e90e6..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/Thumbs.db and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/editheader.9.png b/TMessagesProj/src/main/res/drawable-xhdpi/editheader.9.png
deleted file mode 100644
index 50261891c..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/editheader.9.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/mic_pressed.png b/TMessagesProj/src/main/res/drawable-xhdpi/mic_pressed.png
index 62e655bea..bebe93611 100644
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/mic_pressed.png and b/TMessagesProj/src/main/res/drawable-xhdpi/mic_pressed.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/Thumbs.db b/TMessagesProj/src/main/res/drawable-xxhdpi/Thumbs.db
index dac9f88d4..c082d314f 100644
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/Thumbs.db and b/TMessagesProj/src/main/res/drawable-xxhdpi/Thumbs.db differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/editheader.9.png b/TMessagesProj/src/main/res/drawable-xxhdpi/editheader.9.png
deleted file mode 100644
index a58727f98..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/editheader.9.png and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/mic_pressed.png b/TMessagesProj/src/main/res/drawable-xxhdpi/mic_pressed.png
index c972af2bd..e7ca00427 100644
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/mic_pressed.png and b/TMessagesProj/src/main/res/drawable-xxhdpi/mic_pressed.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxxhdpi/Thumbs.db b/TMessagesProj/src/main/res/drawable-xxxhdpi/Thumbs.db
deleted file mode 100644
index 3c563db4b..000000000
Binary files a/TMessagesProj/src/main/res/drawable-xxxhdpi/Thumbs.db and /dev/null differ
diff --git a/TMessagesProj/src/main/res/drawable/bar_selector.xml b/TMessagesProj/src/main/res/drawable/bar_selector.xml
index 961d245f2..e7f8b6244 100644
--- a/TMessagesProj/src/main/res/drawable/bar_selector.xml
+++ b/TMessagesProj/src/main/res/drawable/bar_selector.xml
@@ -2,17 +2,20 @@
     xmlns:android="http://schemas.android.com/apk/res/android">
     <item android:state_pressed="true">
         <shape android:shape="rectangle">
-            <solid android:color="#ff45658d" />
+            <!--<solid android:color="#ff45658d" />-->
+            <solid android:color="#ff00796B" />
         </shape>
     </item>
     <item android:state_focused="true">
         <shape android:shape="rectangle">
-            <solid android:color="#ff45658d" />
+            <!--<solid android:color="#ff45658d" />-->
+            <solid android:color="#ff00796B" />
         </shape>
     </item>
     <item android:state_selected="true">
         <shape android:shape="rectangle">
-            <solid android:color="#ff45658d" />
+            <!--<solid android:color="#ff45658d" />-->
+            <solid android:color="#ff00796B" />
         </shape>
     </item>
     <item android:drawable="@drawable/transparent" />
diff --git a/TMessagesProj/src/main/res/drawable/bar_selector_lock.xml b/TMessagesProj/src/main/res/drawable/bar_selector_lock.xml
index ad45bba68..ea81ccde7 100644
--- a/TMessagesProj/src/main/res/drawable/bar_selector_lock.xml
+++ b/TMessagesProj/src/main/res/drawable/bar_selector_lock.xml
@@ -1,5 +1,5 @@
 <!--
-  ~ This is the source code of Telegram for Android v. 2.x
+  ~ This is the source code of Telegram for Android v. 3.x.x
   ~ It is licensed under GNU GPL v. 2 or later.
   ~ You should have received a copy of the license in this archive (see LICENSE).
   ~
diff --git a/TMessagesProj/src/main/res/drawable/bar_selector_picker.xml b/TMessagesProj/src/main/res/drawable/bar_selector_picker.xml
index 3a705f195..ed653c21c 100644
--- a/TMessagesProj/src/main/res/drawable/bar_selector_picker.xml
+++ b/TMessagesProj/src/main/res/drawable/bar_selector_picker.xml
@@ -1,9 +1,9 @@
 <!--
-  ~ This is the source code of Telegram for Android v. 1.4.x.
+  ~ This is the source code of Telegram for Android v. 3.x.x.
   ~ It is licensed under GNU GPL v. 2 or later.
   ~ You should have received a copy of the license in this archive (see LICENSE).
   ~
-  ~ Copyright Nikolai Kudashov, 2013-2014.
+  ~ Copyright Nikolai Kudashov, 2013-2015.
   -->
 
 <selector
diff --git a/TMessagesProj/src/main/res/drawable/bar_selector_white.xml b/TMessagesProj/src/main/res/drawable/bar_selector_white.xml
index 313bf1833..6bd910aa9 100644
--- a/TMessagesProj/src/main/res/drawable/bar_selector_white.xml
+++ b/TMessagesProj/src/main/res/drawable/bar_selector_white.xml
@@ -1,9 +1,9 @@
 <!--
-  ~ This is the source code of Telegram for Android v. 1.4.x.
+  ~ This is the source code of Telegram for Android v. 3.x.x.
   ~ It is licensed under GNU GPL v. 2 or later.
   ~ You should have received a copy of the license in this archive (see LICENSE).
   ~
-  ~ Copyright Nikolai Kudashov, 2013-2014.
+  ~ Copyright Nikolai Kudashov, 2013-2015.
   -->
 
 <selector
diff --git a/TMessagesProj/src/main/res/drawable/floating_user_states.xml b/TMessagesProj/src/main/res/drawable/floating_user_states.xml
index ee18cbee6..5b66dd520 100644
--- a/TMessagesProj/src/main/res/drawable/floating_user_states.xml
+++ b/TMessagesProj/src/main/res/drawable/floating_user_states.xml
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
 
 <!--
-  ~ This is the source code of Telegram for Android v. 1.7.x.
+  ~ This is the source code of Telegram for Android v. 3.x.x.
   ~ It is licensed under GNU GPL v. 2 or later.
   ~ You should have received a copy of the license in this archive (see LICENSE).
   ~
-  ~ Copyright Nikolai Kudashov, 2013-2014.
+  ~ Copyright Nikolai Kudashov, 2013-2015.
   -->
 
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
diff --git a/TMessagesProj/src/main/res/drawable/ic_emoji_backspace.xml b/TMessagesProj/src/main/res/drawable/ic_emoji_backspace.xml
index 41ea5b772..51a217e25 100644
--- a/TMessagesProj/src/main/res/drawable/ic_emoji_backspace.xml
+++ b/TMessagesProj/src/main/res/drawable/ic_emoji_backspace.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector xmlns:android="http://schemas.android.com/apk/res/android"
-	android:enterFadeDuration="200"
-	android:exitFadeDuration="300">
+	android:enterFadeDuration="1"
+	android:exitFadeDuration="200">
 	<item android:state_pressed="true">
 		<shape android:shape="rectangle">
 			<solid android:color="#ffd1d6d9" />
diff --git a/TMessagesProj/src/main/res/drawable/ic_emoji_bell.xml b/TMessagesProj/src/main/res/drawable/ic_emoji_bell.xml
index 17b59fd60..224474574 100644
--- a/TMessagesProj/src/main/res/drawable/ic_emoji_bell.xml
+++ b/TMessagesProj/src/main/res/drawable/ic_emoji_bell.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector
 	xmlns:android="http://schemas.android.com/apk/res/android"
-	android:enterFadeDuration="200"
-	android:exitFadeDuration="300">
+	android:enterFadeDuration="1"
+	android:exitFadeDuration="200">
 	<item
 		android:state_selected="true"
 		android:drawable="@drawable/ic_smiles_bell_active">
diff --git a/TMessagesProj/src/main/res/drawable/ic_emoji_car.xml b/TMessagesProj/src/main/res/drawable/ic_emoji_car.xml
index 30c4baa25..464dc4346 100644
--- a/TMessagesProj/src/main/res/drawable/ic_emoji_car.xml
+++ b/TMessagesProj/src/main/res/drawable/ic_emoji_car.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector
 	xmlns:android="http://schemas.android.com/apk/res/android"
-	android:enterFadeDuration="200"
-	android:exitFadeDuration="300"
+	android:enterFadeDuration="1"
+	android:exitFadeDuration="200"
 	>
 	<item
 		android:state_selected="true"
diff --git a/TMessagesProj/src/main/res/drawable/ic_emoji_flower.xml b/TMessagesProj/src/main/res/drawable/ic_emoji_flower.xml
index 86e934246..7222c9ee6 100644
--- a/TMessagesProj/src/main/res/drawable/ic_emoji_flower.xml
+++ b/TMessagesProj/src/main/res/drawable/ic_emoji_flower.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector
 	xmlns:android="http://schemas.android.com/apk/res/android"
-	android:enterFadeDuration="200"
-	android:exitFadeDuration="300"
+	android:enterFadeDuration="1"
+	android:exitFadeDuration="200"
 	>
 	<item
 		android:state_selected="true"
diff --git a/TMessagesProj/src/main/res/drawable/ic_emoji_recent.xml b/TMessagesProj/src/main/res/drawable/ic_emoji_recent.xml
index aa39b4f50..f0a123612 100644
--- a/TMessagesProj/src/main/res/drawable/ic_emoji_recent.xml
+++ b/TMessagesProj/src/main/res/drawable/ic_emoji_recent.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector
 	xmlns:android="http://schemas.android.com/apk/res/android"
-	android:enterFadeDuration="200"
-	android:exitFadeDuration="300"
+	android:enterFadeDuration="1"
+	android:exitFadeDuration="200"
 	>
 	<item
 		android:state_selected="true"
diff --git a/TMessagesProj/src/main/res/drawable/ic_emoji_smile.xml b/TMessagesProj/src/main/res/drawable/ic_emoji_smile.xml
index 97d0c7a55..13478f37c 100644
--- a/TMessagesProj/src/main/res/drawable/ic_emoji_smile.xml
+++ b/TMessagesProj/src/main/res/drawable/ic_emoji_smile.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector
 	xmlns:android="http://schemas.android.com/apk/res/android"
-	android:enterFadeDuration="200"
-	android:exitFadeDuration="300"
+	android:enterFadeDuration="1"
+	android:exitFadeDuration="200"
 	>
 	<item
 		android:state_selected="true"
diff --git a/TMessagesProj/src/main/res/drawable/ic_emoji_sticker.xml b/TMessagesProj/src/main/res/drawable/ic_emoji_sticker.xml
index 2cb1ecbef..2145747a1 100644
--- a/TMessagesProj/src/main/res/drawable/ic_emoji_sticker.xml
+++ b/TMessagesProj/src/main/res/drawable/ic_emoji_sticker.xml
@@ -2,8 +2,8 @@
 
 <selector
 	xmlns:android="http://schemas.android.com/apk/res/android"
-	android:enterFadeDuration="200"
-	android:exitFadeDuration="300">
+	android:enterFadeDuration="1"
+	android:exitFadeDuration="200">
 	<item android:state_selected="true" android:drawable="@drawable/ic_smiles_sticker_active"/>
 	<item android:drawable="@drawable/ic_smiles_sticker"/>
 </selector>
diff --git a/TMessagesProj/src/main/res/drawable/ic_emoji_symbol.xml b/TMessagesProj/src/main/res/drawable/ic_emoji_symbol.xml
index 63a97e2f1..e3b405a7b 100644
--- a/TMessagesProj/src/main/res/drawable/ic_emoji_symbol.xml
+++ b/TMessagesProj/src/main/res/drawable/ic_emoji_symbol.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <selector
 	xmlns:android="http://schemas.android.com/apk/res/android"
-	android:enterFadeDuration="200"
-	android:exitFadeDuration="300">
+	android:enterFadeDuration="1"
+	android:exitFadeDuration="200">
 	<item android:state_selected="true" android:drawable="@drawable/ic_smiles_grid_active"/>
 	<item android:drawable="@drawable/ic_smiles_grid"/>
 </selector>
diff --git a/TMessagesProj/src/main/res/drawable/mic_button_states.xml b/TMessagesProj/src/main/res/drawable/mic_button_states.xml
deleted file mode 100644
index 791017eda..000000000
--- a/TMessagesProj/src/main/res/drawable/mic_button_states.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:drawable="@drawable/mic_pressed" android:state_pressed="true" />
-    <item android:drawable="@drawable/mic" />
-</selector>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-ar/strings.xml b/TMessagesProj/src/main/res/values-ar/strings.xml
index e345fd6b4..c9c4ee8be 100644
--- a/TMessagesProj/src/main/res/values-ar/strings.xml
+++ b/TMessagesProj/src/main/res/values-ar/strings.xml
@@ -81,7 +81,7 @@
     <string name="LeaveChannel">غادر القناة</string>
     <string name="LeaveChannelMenu">غادر القناة</string>
     <string name="ChannelSettings">الإعدادات</string>
-    <string name="ChannelJoin">دخول</string>
+    <string name="ChannelJoin">اشترك</string>
     <string name="OpenChannelProfile">معلومات القناة</string>
     <string name="ChannelBroadcast">رسالة جماعية</string>
     <string name="ChannelComment">تعليق</string>
@@ -132,6 +132,7 @@
     <string name="ChannelAddTo">هل ترغب بإضافة %1$s للقناة؟</string>
     <string name="ChannelUserLeftError">المعذرة, هذا المستخدم قرر مغادرة المجموعة, لا يمكنك دعوته مرة أخرى للمجموعة.</string>
     <string name="ChannelUserCantAdd">المعذرة، لا يمكنك إضافة هذا المستخدم للقنوات.</string>
+    <string name="ChannelUserCantAdmin">المعذرة، يوجد الكثير من الإداريين في هذه القناة.</string>
     <string name="ChannelUserAddLimit">المعذرة، يمكنك إضافة أول ٢٠٠ عضو للقناة فقط. يمكن لعدد غير محدود من الأعضاء الدخول للقناة عن طريق رابط القناة.</string>
     <string name="ChannelAddedBy">un1 قام بإضافتك لهذه القناة</string>
     <string name="ChannelJoined">لقد قمت بالدخول للقناة.</string>
@@ -147,14 +148,14 @@
     <string name="ChannelMessageGroupDocument">%1$s  قام بإرسال ملف للقناة %2$s</string>
     <string name="ChannelMessageGroupAudio">%1$s  قام بإرسال مقطع صوتي للقناة %2$s</string>
     <string name="ChannelMessageGroupSticker">%1$s  قام بإرسال ملصق للقناة %2$s</string>
-    <string name="ChannelMessageNoText">رسالة جديدة في القناة %1$s</string>
-    <string name="ChannelMessagePhoto">صورة جديدة في القناة %1$s</string>
-    <string name="ChannelMessageVideo">مقطع مرئي جديد في القناة %1$s</string>
-    <string name="ChannelMessageContact">تم مشاركة جهة اتصال في القناة %1$s</string>
-    <string name="ChannelMessageMap">تم مشاركة مكان في القناة %1$s</string>
-    <string name="ChannelMessageDocument">ملف جديد في القناة %1$s</string>
-    <string name="ChannelMessageAudio">ملاحظة صوتية جديدة في القناة %1$s</string>
-    <string name="ChannelMessageSticker">ملصق جديد في القناة %1$s</string>
+    <string name="ChannelMessageNoText">%1$s أرسل رسالة</string>
+    <string name="ChannelMessagePhoto">%1$s أرسل صورة</string>
+    <string name="ChannelMessageVideo">%1$s أرسل مقطع مرئي</string>
+    <string name="ChannelMessageContact">%1$s أرسل جهة اتصال</string>
+    <string name="ChannelMessageMap">%1$s قام بإرسال موقع</string>
+    <string name="ChannelMessageDocument">%1$s أرسل ملف</string>
+    <string name="ChannelMessageAudio">%1$s أرسل رسالة صوتية</string>
+    <string name="ChannelMessageSticker">%1$s أرسل ملصق</string>
     <!--broadcasts-->
     <string name="NewBroadcastList">رسالة جماعية جديدة</string>
     <string name="EnterListName">أدخل اسم القائمة</string>
@@ -239,6 +240,7 @@
     <string name="ReportSpamAlertGroup">هل أنت متأكد من رغبتك في الإبلاغ عن هذه المجموعة كغير مرغوب بها؟</string>
     <string name="NobodyLikesSpam1">المعذرة، يمكنك فقط إرسال رسائل لمن يمتلك رقمك وتمتلك رقمه في الوقت الحالي.</string>
     <string name="NobodyLikesSpam2">المعذرة، يمكنك فقط إضافة من يمتلك رقمك وتمتلك رقمه للمجموعة في الوقت الحالي.</string>
+    <string name="NobodyLikesSpamUrl">https://telegram.org/faq/can-39t-send-messages-to-non-contacts</string>
     <string name="MoreInfo">ملعومات إضافية</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s قام بتعيين عداد التدمير الذاتي إلى to %2$s</string>
@@ -289,6 +291,7 @@
     <string name="Online">متصل</string>
     <string name="LastSeen">آخر ظهور</string>
     <string name="LastSeenDate">آخر ظهور</string>
+    <string name="LastSeenNow">آخر ظهور قبل قليل</string>
     <string name="InviteFriends">قم بدعوة صديق</string>
     <string name="GlobalSearch">بحث شامل</string>
     <string name="Lately">آخر ظهور كان قريب</string>
@@ -493,11 +496,17 @@
     <string name="AutoLockInfo">اطلب رمز المرور إذا غبت فترة محددة من الزمن.</string>
     <string name="AutoLockInTime">خلال %1$s</string>
     <string name="AutoLockDisabled">معطّل</string>
+    <string name="UnlockFingerprint">قم بالفتح بالبصمة</string>
+    <string name="FingerprintInfo">قم بتأكيد البصمة للإستمرار</string>
+    <string name="FingerprintHelp">حساس اللمس</string>
+    <string name="FingerprintNotRecognized">لم يتم التعرف على البصمة. حاول مرة أخرى</string>
     <!--media view-->
     <string name="NoMedia">شارك المقاطع المرئية والصور في هذه المحادثة لتستطيع الوصول إليها من أية جهاز من أجهزتك</string>
     <string name="DocumentsTitle">الملفات المشاركة</string>
     <string name="SharedMediaTitle">الوسائط المشتركة</string>
     <string name="LinksTitle">الروابط المشاركة</string>
+    <string name="AudioTitle">الموسيقى المشتركة</string>
+    <string name="NoSharedAudio">قم بإرسال مقاطع موسيقية لهذه المحادثة ليمكنك الوصول إليها من أجهزتك الأخرى.</string>
     <string name="NoSharedFiles">شارك الملفات والمستندات في هذه المحادثة لتستطيع الوصول إليها من أية جهاز من أجهزتك</string>
     <string name="NoSharedLinks">شارك الروابط في هذه المحادثة لتستطيع الوصول إليها من أية جهاز من أجهزتك</string>
     <!--map view-->
@@ -745,6 +754,12 @@
     <string name="FeatureUnavailable">.Sorry, this feature is currently not available in your country</string>
     <string name="NoUsernameFound">لا يوجد حساب تيليجرام بهذا الاسم.</string>
     <string name="BotCantJoinGroups">هذا البوت لا يستطيع الدخول للمجموعات.</string>
+    <!--permissions-->
+    <string name="PermissionContacts">تيليجرام يحتاج للسماح له بالوصول لجهات الاتصال الخاصة بك لتتمكن من محادثة أصدقائك من كافة أجهزتك.</string>
+    <string name="PermissionStorage">تيليجرام يحتاج للسماح له بالوصول للذاكرة الخاصة بك لتتمكن من إرسال وحفظ الصور، المقاطع المرئية، الموسيقى وغيرها من الوسائط.</string>
+    <string name="PermissionNoAudio">تيليجرام يحتاج للسماح له بالوصول للمايكروفون الخاص بك لتتمكن من إرسال رسائل صوتية.</string>
+    <string name="PermissionNoLocation">تيليجرام يحتاج للسماح له بالوصول لمكانك لتتمكن من مشاركته مع أصدقائك من خلاله.</string>
+    <string name="PermissionOpenSettings">الإعدادات</string>
     <!--Intro view-->
     <string name="Page1Title">تيليجرام</string>
     <string name="Page2Title">سريع</string>
@@ -882,6 +897,18 @@
     <string name="Photos_few">%1$d صور</string>
     <string name="Photos_many">%1$d صور</string>
     <string name="Photos_other">%1$d صور</string>
+    <string name="LastSeenMinutes_zero">آخر ظهور قبل %1$d دقيقة</string>
+    <string name="LastSeenMinutes_one">آخر ظهور قبل %1$d دقيقة</string>
+    <string name="LastSeenMinutes_two">آخر ظهور قبل %1$d دقيقة</string>
+    <string name="LastSeenMinutes_few">آخر ظهور قبل %1$d دقيقة</string>
+    <string name="LastSeenMinutes_many">آخر ظهور قبل %1$d دقيقة</string>
+    <string name="LastSeenMinutes_other">آخر ظهور قبل %1$d دقيقة</string>
+    <string name="LastSeenHours_zero">آخر ظهور قبل %1$d ساعة</string>
+    <string name="LastSeenHours_one">آخر ظهور قبل %1$d ساعة</string>
+    <string name="LastSeenHours_two">آخر ظهور قبل %1$d ساعة</string>
+    <string name="LastSeenHours_few">آخر ظهور قبل %1$d ساعة</string>
+    <string name="LastSeenHours_many">آخر ظهور قبل %1$d ساعة</string>
+    <string name="LastSeenHours_other">آخر ظهور قبل %1$d ساعة</string>
     <!--forwarded messages-->
     <string name="ForwardedMessage_zero">%1$d رسالة معاد توجيهها</string>
     <string name="ForwardedMessage_one">الرسالة المعاد توجيهها</string>
@@ -949,8 +976,8 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s الساعة %2$s</string>
     <!--update text-->
-<string name="updateText">تم تحديث تيليجرام نسخة الآندرويد. الجديد في نسخة 3.2.0:\n\n- إضافة خدمة القنوات - وسيلة جديدة رائعة لإرسال الرسائل الجماعية لعدد لا محدود من الجماهير (تستبدل الرسائل الجماعية القديمة). \n\n- اللاستزادة، اقرأ هنا: https://telegram.org/blog/channels</string>
-    <string name="updateBuild">632</string>
+    <string name="updateText">تم تحديث تيليجرام على الأندرويد. الجديد في النسخة رقم 3.2.6:\n\n- تحسين للواجهة البصرية للتطبيق\n- دعم للإيموجي الجديدة\n- تحسينات أخرى وإصلاح للثغرات</string>
+    <string name="updateBuild">655</string>
     <!--Telegram+--><!--
   <string name="updatePlusText"></string>-->
   <string name="TelegramForAndroid">بلاس مسنجر للأندرويد</string>
diff --git a/TMessagesProj/src/main/res/values-ca/strings.xml b/TMessagesProj/src/main/res/values-ca/strings.xml
index 166652c19..7748360f2 100644
--- a/TMessagesProj/src/main/res/values-ca/strings.xml
+++ b/TMessagesProj/src/main/res/values-ca/strings.xml
@@ -63,21 +63,22 @@
   <string name="Comments">Comentaris</string>
   <string name="CommentsInfo">Si habiliteu els comentaris, qualsevol membre podrà comentar el vostre missatge al canal.</string>
   <string name="AddMutual">Afegeix contactes al canal</string>
-  <string name="ChannelUsernameHelp">La gent pot compartir aquest enllaç amb els altres i trobar el canal mitjançant el cercador.</string>
+  <string name="ChannelUsernameHelp">Qualsevol pot compartir aquest enllaç amb els altres i trobar el canal mitjançant el cercador.</string>
   <string name="ChannelUsernamePlaceholder">enllaç</string>
-  <string name="ChannelPrivateLinkHelp">La gent pot unir-se al canal accedint a aquest enllaç. Podeu revocar l\'enllaç en qualsevol moment.</string>
+  <string name="ChannelPrivateLinkHelp">Qualsevol pot afegir-se al canal a través d\'aquest enllaç. Podeu revocar l\'enllaç quan vulgueu.</string>
   <string name="DescriptionPlaceholder">Descripció</string>
   <string name="DescriptionInfo">Podeu establir una descripció opcional per al vostre canal.</string>
   <string name="ChannelPublic">Canal públic</string>
-  <string name="ChannelPublicInfo">Els canals públics es poden trobar a la cerca i tothom pot unir-s\'hi.</string>
+  <string name="ChannelPublicInfo">Els canals públics es poden trobar a la cerca i qualsevol pot afegir-s\'hi.</string>
   <string name="ChannelPrivate">Canal privat</string>
-  <string name="ChannelPrivateInfo">Només es pot accedir als canals privats a través d\'un enllaç de convit.</string>
+  <string name="ChannelPrivateInfo">Només es pot accedir als canals privats a través d\'un enllaç d\'invitació.</string>
   <string name="ChannelLinkTitle">Enllaç</string>
-  <string name="ChannelInviteLinkTitle">Enllaç de convit</string>
+  <string name="ChannelInviteLinkTitle">Enllaç d\'invitació</string>
   <string name="ChannelAddMembers">Afegeix membres</string>
-  <string name="LeaveChannel">Deixa el canal</string>
-  <string name="LeaveChannelMenu">Deixa el canal</string>
+  <string name="LeaveChannel">Abandona el canal</string>
+  <string name="LeaveChannelMenu">Abandona el canal</string>
   <string name="ChannelSettings">Configuració</string>
+  <string name="ChannelJoin">AFEGEIX-M\'HI</string>
   <string name="OpenChannelProfile">Informació del canal</string>
   <string name="ChannelBroadcast">Difusió</string>
   <string name="ChannelComment">Comentari</string>
@@ -86,18 +87,22 @@
   <string name="ChannelAlertText">Els canals són una nova eina per difondre els vostres missatges a grans audiències.</string>
   <string name="ChannelAlertCreate">CREA UN CANAL</string>
   <string name="LinkInUse">Aquest nom ja es troba en ús.</string>
+  <string name="LinkInvalid">Aquest nom no és vàlid.</string>
+  <string name="LinkInvalidShort">El nom del canal ha de tenir com a mínim 5 caràcters.</string>
+  <string name="LinkInvalidLong">El nom no pot excedir els 32 caràcters.</string>
+  <string name="LinkInvalidStartNumber">Els noms dels canals no poden començar amb un nombre.</string>
   <string name="LinkChecking">S\'està comprovant el nom...</string>
   <string name="LinkAvailable">%1$s es troba disponible.</string>
   <string name="ChannelMembers">Membres</string>
-  <string name="ChannelBlockedUsers">Usuaris bloquejats</string>
+  <string name="ChannelBlockedUsers">Usuaris blocats</string>
   <string name="ChannelAdministrators">Administradors</string>
   <string name="ChannelDelete">Elimina el canal</string>
   <string name="ChannelDeleteMenu">Elimina el canal</string>
-  <string name="ChannelDeleteAlert">En eliminar el canal es suprimiran tots els membres i els missatges es perdran. Segur que voleu eliminar-lo?</string>
+  <string name="ChannelDeleteAlert">En eliminar el canal se suprimiran tots els membres i els missatges es perdran. Esteu segur de voler eliminar-lo?</string>
   <string name="ChannelLeaveAlert">Segur que voleu deixar el canal?</string>
-  <string name="ChannelDeleteInfo">Hi perdreu tots els missatges.</string>
+  <string name="ChannelDeleteInfo">Perdreu tots els missatges d\'aquest canal.</string>
   <string name="ChannelEdit">Edita</string>
-  <string name="ChannelWasPrivateAlert">Tingueu en compte que si trieu un enllaç públic per al vostre canal, tothom serà capaç de cercar-lo i unir-s\'hi.
+  <string name="ChannelWasPrivateAlert">Tingueu en compte que si trieu un enllaç públic per al vostre canal, qualsevol podrà cercar-lo i afegir-s\'hi.
 
 Si voleu que el vostre canal romangui privat, no creeu l\'enllaç.</string>
   <string name="ChannelPublicEmptyUsername">Seleccioneu un enllaç per al vostre canal public perquè la gent el pugui trobar i compartir.
@@ -108,23 +113,50 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="ActionChannelRemovedPhoto">S\'ha eliminat la foto del canal</string>
   <string name="ActionChannelChangedTitle">S\'ha canviat el nom del canal a un2</string>
   <string name="ActionChannelInvite">un1 us ha afegit al canal un2</string>
-  <string name="ChannelPublicLimitReached">Heu creat massa canals públics. Us suggerim crear un canal privat o bé eliminar, primerament, un dels vostres canals existents.</string>
+  <string name="ChannelPublicLimitReached">Heu assolit el nombre màxim de canals públics. Suprimiu els existents o creeu-ne un privat.</string>
   <string name="ChannelModerator">Moderador</string>
   <string name="ChannelCreator">Creador</string>
   <string name="ChannelEditor">Administrador</string>
   <string name="ChannelMute">SILENCIA</string>
-  <string name="ChannelUnmute">HABILITA EL SO</string>
-  <string name="ChannelAddAdmin">Afegeix administrador</string>
+  <string name="ChannelUnmute">NO SILENCIÏS</string>
+  <string name="ChannelAddAdmin">Afegeix un administrador</string>
   <string name="ChannelInviteViaLink">Convida amb un enllaç</string>
   <string name="ChannelAddUserAdminAlert">Segur que voleu fer %1$s administrador?</string>
   <string name="ChannelRemoveUserAdmin">Elimina</string>
   <string name="ChannelMembersInfo">Només els administradors poden veure aquesta llista.</string>
-  <string name="ChannelAdminNotParticipant">Aquest usuari encara no s\'ha unit al canal. Voleu enviar-li una invitació?</string>
-  <string name="ChannelLinkInfo">Qualsevol que tingui el Telegram instal·lat podrà unir-se al canal tot seguint l\'enllaç.</string>
+  <string name="ChannelAdminNotParticipant">Aquest usuari encara no s\'ha afegit al canal. Voleu convidar-lo?</string>
+  <string name="ChannelLinkInfo">Qualsevol que tingui el Telegram instal·lat podrà afegir-se al canal a través de l\'enllaç.</string>
   <string name="ChannelAdminsInfo">Podeu afegir administradors perquè us ajudin a gestionar el canal. Mantingueu premut per eliminar-los.</string>
-  <string name="ChannelJoinTo">Voleu unir-vos al canal «%1$s»?</string>
+  <string name="ChannelJoinTo">Voleu afegir-vos al canal «%1$s»?</string>
   <string name="ChannelCantOpenPrivate">Aquest canal ja no és accessible.</string>
+  <string name="ChannelAddToTitle">Voleu afegir %1$s al canal %2$s?</string>
+  <string name="ChannelAddTo">Voleu afegir %1$s al canal?</string>
+  <string name="ChannelUserLeftError">L\'usuari ha decidit abandonar aquest grup, no podeu tornar a convidar-lo.</string>
+  <string name="ChannelUserCantAdd">No podeu afegir aquest usuari als canals.</string>
+  <string name="ChannelUserCantAdmin">Hi ha massa administradors en aquest canal.</string>
   <string name="ChannelUserAddLimit">Només hi podeu afegir els primers 200 membres. Per a nombres majors, l\'adhesió s\'ha de fer a través dels enllaços del canal.</string>
+  <string name="ChannelAddedBy">un1 us ha afegit a aquest canal</string>
+  <string name="ChannelJoined">Us heu afegit al canal</string>
+  <string name="ChannelRemoveUser">Treu del canal</string>
+  <string name="ChannelCantSendMessage">No podeu enviar missatges a aquest canal.</string>
+  <string name="ChannelAddedByNotification">%1$s us ha afegit al canal %2$s</string>
+  <string name="ChannelPhotoEditNotification">S\'ha actualitzat la fotografia del canal %1$s</string>
+  <string name="ChannelMessageGroupNoText">%1$s ha enviat un missatge al canal %2$s</string>
+  <string name="ChannelMessageGroupPhoto">%1$s ha enviat una fotografia al canal %2$s</string>
+  <string name="ChannelMessageGroupVideo">%1$s ha enviat un vídeo al canal %2$s</string>
+  <string name="ChannelMessageGroupContact">%1$s ha compartit un contacte al canal %2$s</string>
+  <string name="ChannelMessageGroupMap">%1$s ha enviat una ubicació al canal %2$s</string>
+  <string name="ChannelMessageGroupDocument">%1$s ha enviat un fitxer al canal %2$s</string>
+  <string name="ChannelMessageGroupAudio">%1$s ha enviat un àudio al canal %2$s</string>
+  <string name="ChannelMessageGroupSticker">%1$s ha enviat un adhesiu al canal %2$s</string>
+  <string name="ChannelMessageNoText">%1$s ha publicat un missatge</string>
+  <string name="ChannelMessagePhoto">%1$s ha publicat una fotografia</string>
+  <string name="ChannelMessageVideo">%1$s ha publicat un vídeo</string>
+  <string name="ChannelMessageContact">%1$s ha publicat un contacte</string>
+  <string name="ChannelMessageMap">%1$s ha publicat una ubicació</string>
+  <string name="ChannelMessageDocument">%1$s ha publicat un fitxer</string>
+  <string name="ChannelMessageAudio">%1$s ha publicat un missatge de veu</string>
+  <string name="ChannelMessageSticker">%1$s ha publicat un adhesiu</string>
   <!--broadcasts-->
   <string name="NewBroadcastList">Llista de difusió nova</string>
   <string name="EnterListName">Introduïu el nom de la llista</string>
@@ -200,9 +232,17 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="ServiceNotifications">Notificacions del servei</string>
   <string name="GettingLinkInfo">S\'està obtenint la informació de l\'enllaç...</string>
   <string name="OpenInBrowser">Obre al navegador</string>
-  <string name="CopyUrl">Copia la URL</string>
+  <string name="CopyUrl">Copia l\'URL</string>
   <string name="SendItems">Envia %1$s</string>
-  <string name="OpenUrlAlert">Voleu obrir la url %1$s?</string>
+  <string name="OpenUrlAlert">Voleu obrir l\'URL %1$s?</string>
+  <string name="ReportSpam">MARCA COM A BROSSA</string>
+  <string name="AddContactChat">AFEGEIX EL CONTACTE</string>
+  <string name="ReportSpamAlert">Segur que voleu denunciar rebre brossa d\'aquest usuari?</string>
+  <string name="ReportSpamAlertGroup">Segur que voleu denunciar rebre brossa d\'aquest grup?</string>
+  <string name="NobodyLikesSpam1">Ho sentim, per ara només podeu enviar missatges a contactes mutus.</string>
+  <string name="NobodyLikesSpam2">Ho sentim, per ara només podeu afegir contactes mutus als grups.</string>
+  <string name="NobodyLikesSpamUrl">https://telegram.org/faq#can-39t-send-messages-to-non-contacts</string>
+  <string name="MoreInfo">Més informació</string>
   <!--notification-->
   <string name="MessageLifetimeChanged">%1$s ha definit l\'autodestrucció en %2$s</string>
   <string name="MessageLifetimeChangedOutgoing">Heu definit l\'autodestrucció en %1$s</string>
@@ -238,7 +278,7 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="NotificationContactJoined">%1$s s\'ha unit al Telegram.</string>
   <string name="NotificationUnrecognizedDevice">%1$s,\nHem detectat un inici de sessió al vostre compte en un dispositiu nou el %2$s\n\nDispositiu: %3$s\nUbicació: %4$s\n\nSi no sou vós, aneu a Configuració - Privadesa i seguretat - Sessions i finalitzeu aquesta sessió.\n\nSi penseu que algú altre ha iniciat sessió en el vostre compte contra la vostra voluntat, podeu activar la Verificació en dos passos a la configuració de Privadesa i seguretat.\n\nAtentament,\nL\'equip del Telegram</string>
   <string name="NotificationContactNewPhoto">%1$s ha actualitzat la foto del perfil</string>
-  <string name="NotificationInvitedToGroupByLink">%1$s s\'ha unit al grup %2$s via enllaç d\'invitació</string>
+  <string name="NotificationInvitedToGroupByLink">%1$s s\'ha afegit al grup %2$s via enllaç d\'invitació</string>
   <string name="Reply">Respon</string>
   <string name="ReplyToGroup">Respon a %1$s</string>
   <string name="ReplyToUser">Respon a %1$s</string>
@@ -252,6 +292,7 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="Online">en línia</string>
   <string name="LastSeen">vist:</string>
   <string name="LastSeenDate">vist:</string>
+  <string name="LastSeenNow">vist fa poc</string>
   <string name="InviteFriends">Convida els contactes</string>
   <string name="GlobalSearch">CERCA GLOBAL</string>
   <string name="Lately">vist fa poc</string>
@@ -264,16 +305,19 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="EnterGroupNamePlaceholder">Introduïu el nom del grup</string>
   <string name="GroupName">Nom del grup</string>
   <string name="MembersCount">%1$d/%2$d membres</string>
+  <string name="JoinToGroup">Voleu unir-vos al xat \'%1$s\'?</string>
   <string name="JoinToGroupErrorFull">El grup ja està ple.</string>
+  <string name="JoinToGroupErrorNotExist">Aquest xat sembla que no existeix.</string>
   <string name="LinkCopied">S\'ha copiat l\'enllaç al porta-retalls</string>
   <string name="InviteToGroupByLink">Convida al grup amb un enllaç</string>
   <string name="InviteLink">Enllaç d\'invitació</string>
+  <string name="RevokeAlert">Esteu segur que voleu revocar l\'enllaç? Quan ho feu ningú podrà afegir-se al grup utilitzant-lo.</string>
   <string name="RevokeAlertNewLink">L\'enllaç d\'invitació anterior no està actiu. S\'ha generat un enllaç nou.</string>
   <string name="RevokeButton">Revoca</string>
   <string name="RevokeLink">Revoca l\'enllaç</string>
   <string name="CopyLink">Copia l\'enllaç</string>
   <string name="ShareLink">Comparteix l\'enllaç</string>
-  <string name="LinkInfo">Qualsevol qui tingui Telegram instal·lat serà capaç d\'unir-se al grup tot seguint l\'enllaç.</string>
+  <string name="LinkInfo">Qualsevol qui tingui Telegram instal·lat serà capaç d\'afegir-se al grup a través de l\'enllaç.</string>
   <!--group info view-->
   <string name="SharedMedia">Elements compartits</string>
   <string name="SETTINGS">Configuració</string>
@@ -365,13 +409,13 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="ContactJoined">En unir-se un contacte al Telegram</string>
   <string name="Pebble">PEBBLE</string>
   <string name="Language">Llengua</string>
-  <string name="AskAQuestionInfo">Tingueu present que el suport del Telegram és ofert per voluntaris. Intentem respondre tan ràpid com ens és possible, però podem trigar una mica.<![CDATA[<br><br>]]>Sisplau, feu una ullada a les <![CDATA[<a href=\"https://telegram.org/faq#general\">PMF del Telegram</a>]]>. Tenen la resposta a la majoria de preguntes i també consells importants per a la <![CDATA[<a href=\"https://telegram.org/faq#troubleshooting\">resolució de problemes</a>]]>.</string>
+  <string name="AskAQuestionInfo">Tingueu present que el suport del Telegram és ofert per voluntaris. Intentem respondre tan ràpid com ens és possible, però podem trigar una mica.<![CDATA[<br><br>]]>Feu una ullada a les <![CDATA[<a href=\"https://telegram.org/faq#general\">PMF del Telegram</a>]]>. Tenen la resposta a la majoria de preguntes i també consells importants per a la <![CDATA[<a href=\"https://telegram.org/faq#troubleshooting\">resolució de problemes</a>]]>.</string>
   <string name="AskButton">Pregunta-ho a un voluntari</string>
   <string name="TelegramFaq">PMF del Telegram</string>
   <string name="TelegramFaqUrl">https://telegram.org/faq</string>
   <string name="DeleteLocalization">Voleu eliminar la localització?</string>
   <string name="IncorrectLocalization">El fitxer de localització no és vàlid</string>
-  <string name="Enabled">Activat</string>
+  <string name="Enabled">Activades</string>
   <string name="Disabled">Inhabilitat</string>
   <string name="NotificationsService">Servei de notificacions</string>
   <string name="NotificationsServiceDisableInfo">Si Google Play Services us és suficient per rebre notificacions, podeu desactivar el Servei de Notificacions aquí. De totes maneres recomanem deixar-lo activat per mantenir l\'app en segon pla i rebre notificacions a l\'instant.</string>
@@ -404,7 +448,7 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="NotificationsPriorityMax">Màxima</string>
   <string name="RepeatNotificationsNever">Mai</string>
   <string name="RepeatNotifications">Repetició de notificacions</string>
-  <string name="PhoneNumberHelp">Aquí podeu canviar el vostre número del Telegram. El vostre compte i les dades al núvol —missatges, fitxers, contactes, etc.— es mouran al nou número.\n\n<![CDATA[<b>Important:</b>]]> El <![CDATA[<b>número nou</b>]]> s\'afegirà a l\'agenda de tots els vostres contactes del Telegram que tinguin el número vell i que no hàgiu blocat al Telegram.</string>
+  <string name="PhoneNumberHelp">Aquí podeu canviar el vostre número de telèfon del Telegram. El vostre compte i les dades al núvol (missatges, fitxers, contactes, etc.) es mouran al número nou.\n\n<![CDATA[<b>Important:</b>]]> el <![CDATA[<b>número nou</b>]]> s\'afegirà a l\'agenda de tots els vostres contactes del Telegram que tinguin el número antic i que no hàgiu blocat al Telegram.</string>
   <string name="PhoneNumberAlert">El número nou s\'afegirà a l\'agenda de tots els vostres contactes del Telegram que tinguin el número vell i que no hàgiu blocat al Telegram.</string>
   <string name="PhoneNumberChange">CANVI DE NÚMERO</string>
   <string name="ChangePhoneNewNumber">Número nou</string>
@@ -439,7 +483,7 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="Passcode">Codi d\'accés</string>
   <string name="ChangePasscode">Canvia el codi d\'accés</string>
   <string name="ChangePasscodeInfo">En introduir un codi d\'accés addicional, apareixerà la icona d\'un cadenat a la pàgina de xats. Toqueu-la per blocar i desblocar l\'aplicació.\n\nNota: Si oblideu el codi d\'accés haureu d\'eliminar i reinstal·lar l\'aplicació. Es perdran tots els xats secrets.</string>
-  <string name="ChangePasscodeAlert">Ara es mostrarà la icona d\'un cadenat a la pàgina de xats. Toqueu-la per bloquejar Telegram amb el nou codi d\'accés.</string>
+  <string name="ChangePasscodeAlert">Ara es mostrarà la icona d\'un cadenat a la pàgina de xats. Toqueu-la per blocar Telegram amb el nou codi d\'accés.</string>
   <string name="PasscodePIN">PIN</string>
   <string name="PasscodePassword">Contrasenya</string>
   <string name="EnterCurrentPasscode">Introduïu el codi d\'accés actual</string>
@@ -453,13 +497,19 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="AutoLockInfo">Demana el codi d\'accés en absentar-me.</string>
   <string name="AutoLockInTime">en %1$s</string>
   <string name="AutoLockDisabled">Inhabilitat</string>
+  <string name="UnlockFingerprint">Desbloca amb empremta</string>
+  <string name="FingerprintInfo">Confirma l\'empremta per continuar</string>
+  <string name="FingerprintHelp">Sensor tàctil</string>
+  <string name="FingerprintNotRecognized">L\'empremta no s\'ha reconegut. Torneu-ho a provar.</string>
   <!--media view-->
-  <string name="NoMedia">Compartiu fotos i vídeos a aquest xat i accediu-hi des de qualsevol dispositiu.</string>
+  <string name="NoMedia">Compartiu fotos i vídeos en aquest xat i accediu-hi des de qualsevol dispositiu.</string>
   <string name="DocumentsTitle">Fitxers</string>
   <string name="SharedMediaTitle">Multimèdia</string>
   <string name="LinksTitle">Enllaços</string>
-  <string name="NoSharedFiles">Compartiu fitxers i documents a aquí i accediu-hi des de qualsevol dels vostres dispositiu.</string>
-  <string name="NoSharedLinks">Compartiu enllaços aquí i accediu-hi des de qualsevol dels vostres dispositius.</string>
+  <string name="AudioTitle">Música compartida</string>
+  <string name="NoSharedAudio">Compartiu música en aquest xat i accediu-hi des de qualsevol dispositiu.</string>
+  <string name="NoSharedFiles">Compartiu fitxers i documents en aquest xat i accediu-hi des de qualsevol dispositiu.</string>
+  <string name="NoSharedLinks">Compartiu enllaços en aquest xat i accediu-hi des de qualsevol dispositiu.</string>
   <!--map view-->
   <string name="Map">Mapa</string>
   <string name="Satellite">Satèl·lit</string>
@@ -547,7 +597,7 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="PasswordEmailInvalid">Correu electrònic no vàlid</string>
   <string name="RestorePasswordNoEmailTitle">Ho sentim</string>
   <string name="RestorePasswordNoEmailText">Atès que no heu proporcionat una adreça electrònica de recuperació en establir la contrasenya, les opcions disponibles són recordar la contrasenya o restablir el compte.</string>
-  <string name="RestoreEmailSent">Us hem enviat un codi de recuperació a l\'adreça de correu electrònic proporcionada:\n\n%1$s</string>
+  <string name="RestoreEmailSent">Us hem enviat un codi de recuperació a l\'adreça electrònica que heu indicat:\n\n%1$s</string>
   <string name="RestoreEmailSentInfo">Reviseu la bústia de correu electrònic i introduïu el codi de 6 dígits que us hem enviat.</string>
   <string name="RestoreEmailTrouble">Teniu dificultats per accedir al vostre correu electrònic %1$s?</string>
   <string name="RestoreEmailTroubleText">Si no podeu recuperar l\'accés al vostre correu electrònic, les opcions disponibles són recordar la contrasenya o restablir el compte.</string>
@@ -705,6 +755,12 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="FeatureUnavailable">Aquesta característica no es troba disponible al teu país.</string>
   <string name="NoUsernameFound">No hi ha cap compte de Telegram amb aquest nom d\'usuari.</string>
   <string name="BotCantJoinGroups">Aquest bot no pot unir-se a grups.</string>
+  <!--permissions-->
+  <string name="PermissionContacts">Telegram necessita accés als teus contactes així que podràs connectar amb els teus amics des de qualsevol dispotiu que utilitzeu.</string>
+  <string name="PermissionStorage">Telegram necessita accés a l\'emmagatzematge del teu dispositiu per poder enviar i guardar fotos, vídeos, música i altres continguts.</string>
+  <string name="PermissionNoAudio">Telegram necessita accés al micròfon per enviar missatges de veu.</string>
+  <string name="PermissionNoLocation">Telegram necessita accés a la teva localització per a que la puguis compartir amb els teus amics.</string>
+  <string name="PermissionOpenSettings">CONFIGURACIÓ</string>
   <!--Intro view-->
   <string name="Page1Title">Plus Messenger</string>
   <string name="Page2Title">Ràpid</string>
@@ -728,6 +784,7 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="Online_few">%1$d en línia</string>
   <string name="Online_many">%1$d en línia</string>
   <string name="Online_other">%1$d en línia</string>
+  <string name="Members_zero">%1$d membres</string>
   <string name="Members_one">%1$d membre</string>
   <string name="Members_two">%1$d membres</string>
   <string name="Members_few">%1$d membres</string>
@@ -751,6 +808,12 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="messages_few">%1$d missatges</string>
   <string name="messages_many">%1$d missatges</string>
   <string name="messages_other">%1$d missatges</string>
+  <string name="comments_zero">%1$d comentaris</string>
+  <string name="comments_one">%1$d comentari</string>
+  <string name="comments_two">%1$d comentaris</string>
+  <string name="comments_few">%1$d comentaris</string>
+  <string name="comments_many">%1$d comentaris</string>
+  <string name="comments_other">%1$d comentaris</string>
   <string name="items_zero">cap element</string>
   <string name="items_one">%1$d element</string>
   <string name="items_two">%1$d elements</string>
@@ -835,6 +898,18 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="Photos_few">%1$d fotos</string>
   <string name="Photos_many">%1$d fotos</string>
   <string name="Photos_other">%1$d fotos</string>
+  <string name="LastSeenMinutes_zero">vist fa %1$d minuts</string>
+  <string name="LastSeenMinutes_one">vist fa %1$d minut</string>
+  <string name="LastSeenMinutes_two">vist fa %1$d minuts</string>
+  <string name="LastSeenMinutes_few">vist fa %1$d minuts</string>
+  <string name="LastSeenMinutes_many">vist fa %1$d minuts</string>
+  <string name="LastSeenMinutes_other">vist fa %1$d minuts</string>
+  <string name="LastSeenHours_zero">vist fa %1$d hores</string>
+  <string name="LastSeenHours_one">vist fa %1$d hora</string>
+  <string name="LastSeenHours_two">vist fa %1$d hores</string>
+  <string name="LastSeenHours_few">vist fa %1$d hores</string>
+  <string name="LastSeenHours_many">vist fa %1$d hores</string>
+  <string name="LastSeenHours_other">vist fa %1$d hores</string>
   <!--forwarded messages-->
   <string name="ForwardedMessage_zero">%1$d missatges a reenviar</string>
   <string name="ForwardedMessage_one">Missatge a reenviar</string>
@@ -902,10 +977,18 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="formatterDay12H">h:mm a</string>
   <string name="formatDateAtTime">%1$s a les %2$s</string>
   <!--update text-->
-  <string name="updateText">S\'ha actualitzat el Telegram per a l\'Android. Novetats a la versió 3.1.3:\n\n- Nova secció \'Enllaços compartits\' a la informació del xat\n- Previsualització, dins de l\'aplicació, per a enllaços a fotos</string>
-  <string name="updateBuild">632</string>
-    <!--Telegram+--><!--
-  <string name="updatePlusText">\n\nNovetats a la versió 3.1.1.6\n\n- Nou MOD per mostrar l\'avatar dels contactes als xats\n- Nou MOD per mostrar l\'avatar propi als xats i grups\n- Nou MOD per alinear l\'avatar propi a dalt\n- S\'han afegit les noves bombolles Ed i Edge (gràcies a Edwin Macalopu)\n- Nou MOD per canviar el color de fons i de text del menú d\'adjuntar als xats\n- Nou MOD per canviar el color del títol i botons dels diàlegs\n- Correcció d\'errors</string>-->
+  <string name="updateText">El Telegram per a Android s\'ha actualitzat. Novetats a la versió 3.2.6:
+
+- Animacions noves i moltes millores visuals
+- Compatibilitat amb els emojis nous
+- Altres millores i correcció d\'errors</string>
+<string name="updateBuild">655</string>
+    <!--Telegram+-->
+  <string name="updatePlusText">
+
+Novetats a la versió 3.2.6.0:
+
+- Correcció d\'errors</string>
     <string name="TelegramForAndroid">Plus Messenger per Android</string>
   <string name="Theming">Aparença</string>
   <string name="colorHexInvalid">Codi de color hexadecimal no vàlid.</string>
@@ -1057,4 +1140,11 @@ Si no us interessa, us suggerim crear un canal privat.</string>
   <string name="JoinChannel">
 
 Afegiu-vos al canal oficial del Plus Messenger: https://telegram.me/plusmsnes</string>
+  <string name="DownloadThemes">Baixa nous temes</string>
+  <string name="OfficialChannel">Canal oficial</string>
+  <string name="DialogsSettings">Diàlegs</string>
+  <string name="ClickOnContactPic">En tocar la imatge d\'un contacte</string>
+  <string name="ClickOnGroupPic">En tocar la imatge d\'un grup</string>
+  <string name="ShowProfile">Perfil</string>
+  <string name="ShowPics">Fotos de perfil</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-de/strings.xml b/TMessagesProj/src/main/res/values-de/strings.xml
index 70101279e..6eacd811b 100644
--- a/TMessagesProj/src/main/res/values-de/strings.xml
+++ b/TMessagesProj/src/main/res/values-de/strings.xml
@@ -129,6 +129,7 @@
     <string name="ChannelAddTo">%1$s zum Kanal hinzufügen?</string>
     <string name="ChannelUserLeftError">Dieser Nutzer hat sich entschieden die Gruppe zu verlassen, deshalb kannst du ihn nicht wieder einladen.</string>
     <string name="ChannelUserCantAdd">Du kannst diesen Nutzer nicht einladen.</string>
+    <string name="ChannelUserCantAdmin">Es gibt bereits zu viele Administratoren in diesem Kanal.</string>
     <string name="ChannelUserAddLimit">Du kannst nur die ersten 200 Leute einladen, aber unbegrenzt viele können dem Kanal über den Einladungslink beitreten. </string>
     <string name="ChannelAddedBy">un1 hat dich hinzugefügt</string>
     <string name="ChannelJoined">Du bist dem Kanal beigetreten</string>
@@ -144,14 +145,14 @@
     <string name="ChannelMessageGroupDocument">%1$s hat eine Datei an den Kanal %2$s gesendet</string>
     <string name="ChannelMessageGroupAudio">%1$s hat eine Sprachnachricht an den Kanal %2$s gesendet</string>
     <string name="ChannelMessageGroupSticker">%1$s hat einen Sticker an den Kanal %2$s gesendet</string>
-    <string name="ChannelMessageNoText">Neue Nachricht im Kanal %1$s</string>
-    <string name="ChannelMessagePhoto">Neues Bild im Kanal %1$s</string>
-    <string name="ChannelMessageVideo">Neues Video im Kanal %1$s</string>
-    <string name="ChannelMessageContact">Kontakt im Kanal %1$s geteilt</string>
-    <string name="ChannelMessageMap">Neuer Standort im Kanal %1$s</string>
-    <string name="ChannelMessageDocument">Neue Datei im Kanal %1$s</string>
-    <string name="ChannelMessageAudio">Neue Sprachnachricht im Kanal %1$s</string>
-    <string name="ChannelMessageSticker">Neuer Sticker im Kanal %1$s</string>
+    <string name="ChannelMessageNoText">%1$s hat eine Nachricht gesendet</string>
+    <string name="ChannelMessagePhoto">%1$s hat ein Bild gesendet</string>
+    <string name="ChannelMessageVideo">%1$s hat ein Video gesendet</string>
+    <string name="ChannelMessageContact">%1$s hat einen Kontakt gesendet</string>
+    <string name="ChannelMessageMap">%1$s hat einen Standort gesendet</string>
+    <string name="ChannelMessageDocument">%1$s hat eine Datei gesendet</string>
+    <string name="ChannelMessageAudio">%1$s hat eine Sprachnachricht gesendet</string>
+    <string name="ChannelMessageSticker">%1$s hat einen Sticker gesendet</string>
     <!--broadcasts-->
     <string name="NewBroadcastList">Neue Broadcast Liste</string>
     <string name="EnterListName">Listenname</string>
@@ -236,6 +237,7 @@
     <string name="ReportSpamAlertGroup">Sicher, dass du Spam von dieser Gruppe melden willst?</string>
     <string name="NobodyLikesSpam1">Derzeit kannst du nur Kontakten schreiben, die auch deine Nummer haben.</string>
     <string name="NobodyLikesSpam2">Derzeit kannst du nur Kontakte hinzufügen, die auch deine Nummer haben.</string>
+    <string name="NobodyLikesSpamUrl">https://telegram.org/faq/de#kann-keine-nachrichten-an-nicht-kontakte-senden</string>
     <string name="MoreInfo">Mehr Infos</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s hat den Selbstzerstörungs-Timer auf %2$s gesetzt</string>
@@ -286,6 +288,7 @@
     <string name="Online">online</string>
     <string name="LastSeen">zul. online</string>
     <string name="LastSeenDate">zul. online</string>
+    <string name="LastSeenNow">zul. online gerade eben</string>
     <string name="InviteFriends">Freunde einladen</string>
     <string name="GlobalSearch">GLOBALE SUCHE</string>
     <string name="Lately">zuletzt kürzlich gesehen</string>
@@ -490,11 +493,17 @@
     <string name="AutoLockInfo">Sperrt App bei Inaktivität automatisch.</string>
     <string name="AutoLockInTime">in %1$s</string>
     <string name="AutoLockDisabled">Deaktiviert</string>
+    <string name="UnlockFingerprint">Per Fingerabdruck entsperren</string>
+    <string name="FingerprintInfo">Fingerabdruck bestätigen </string>
+    <string name="FingerprintHelp">Berührungssensor</string>
+    <string name="FingerprintNotRecognized">Abdruck nicht erkannt; erneut versuchen </string>
     <!--media view-->
     <string name="NoMedia">Die hier geteilten Bilder und Videos kannst du von jedem deiner Geräte aufrufen.</string>
     <string name="DocumentsTitle">Geteilte Dateien</string>
     <string name="SharedMediaTitle">Geteilte Medien</string>
     <string name="LinksTitle">Geteilte Links</string>
+    <string name="AudioTitle">Geteilte Musik</string>
+    <string name="NoSharedAudio">Die hier geteilten Lieder kannst du von jedem deiner Geräte aufrufen.</string>
     <string name="NoSharedFiles">Die hier geteilten Dateien kannst du von jedem deiner Geräte aufrufen.</string>
     <string name="NoSharedLinks">Die hier geteilten Links kannst du von jedem deiner Geräte aufrufen.</string>
     <!--map view-->
@@ -727,7 +736,7 @@
     <string name="SendMessagesTo">Nachricht an %1$s senden?</string>
     <string name="AreYouSureLogout">Wirklich abmelden?\n\nDu kannst Telegram von all deinen Geräten gleichzeitig nutzen.\n\nWichtig: Abmelden löscht deine Geheimen Chats.</string>
     <string name="AreYouSureSessions">Sicher, dass du alle anderen Geräte abmelden möchtest?</string>
-    <string name="AreYouSureDeleteAndExit">Diese Gruppe wirklich löschen und verlassen?</string>
+    <string name="AreYouSureDeleteAndExit">Gruppe löschen und verlassen?</string>
     <string name="AreYouSureDeleteThisChat">Möchtest du wirklich diesen Chat löschen?</string>
     <string name="AreYouSureShareMyContactInfo">Wirklich die eigenen Kontaktinformationen teilen?</string>
     <string name="AreYouSureBlockContact">Diesen Kontakt wirklich blockieren?</string>
@@ -742,6 +751,12 @@
     <string name="FeatureUnavailable">Verzeihung, diese Funktion ist derzeit in deinem Land nicht verfügbar.</string>
     <string name="NoUsernameFound">Kein Konto mit diesem Benutzernamen</string>
     <string name="BotCantJoinGroups">Keine Gruppen mit diesem Bot möglich</string>
+    <!--permissions-->
+    <string name="PermissionContacts">Telegram benötigt Zugriff auf deine Kontakte um dich auf all denen Geräten mit deinen Freunden zu verbinden. </string>
+    <string name="PermissionStorage">Telegram benötigt Zugriff auf deinen Speicher, damit du Bilder, Videos und Musik senden und speichern kannst.</string>
+    <string name="PermissionNoAudio">Telegram benötigt Zugriff auf dein Mikrofon, damit du Sprachnachrichten senden kannst. </string>
+    <string name="PermissionNoLocation">Telegram benötigt Zugriff auf deinen Standort, damit du ihn mit Freunden teilen kannst. </string>
+    <string name="PermissionOpenSettings">EINSTELLUNGEN</string>
     <!--Intro view-->
     <string name="Page1Title">Plus Messenger</string>
     <string name="Page2Title">Schnell</string>
@@ -879,6 +894,18 @@
     <string name="Photos_few">%1$d Bilder</string>
     <string name="Photos_many">%1$d Bilder</string>
     <string name="Photos_other">%1$d Bilder</string>
+    <string name="LastSeenMinutes_zero">zul. online vor %1$d Minuten</string>
+    <string name="LastSeenMinutes_one">zul. online vor %1$d Minute</string>
+    <string name="LastSeenMinutes_two">zul. online vor %1$d Minuten</string>
+    <string name="LastSeenMinutes_few">zul. online vor %1$d Minuten</string>
+    <string name="LastSeenMinutes_many">zul. online vor %1$d Minuten</string>
+    <string name="LastSeenMinutes_other">zul. online vor %1$d Minuten</string>
+    <string name="LastSeenHours_zero">zul. online vor %1$d Stunden</string>
+    <string name="LastSeenHours_one">zul. online vor %1$d Stunde</string>
+    <string name="LastSeenHours_two">zul. online vor %1$d Stunden</string>
+    <string name="LastSeenHours_few">zul. online vor %1$d Stunden</string>
+    <string name="LastSeenHours_many">zul. online vor %1$d Stunden</string>
+    <string name="LastSeenHours_other">zul. online vor %1$d Stunden</string>
     <!--forwarded messages-->
     <string name="ForwardedMessage_zero">%1$d angehängten Nachrichten</string>
     <string name="ForwardedMessage_one">Angehängte Nachricht</string>
@@ -946,11 +973,10 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s um %2$s</string>
     <!--update text-->
-<string name="updateText">Telegram für Android wurde aktualisiert. Neu in Version 3.2.0:\n\n- Kanäle: Du kannst nun Nachrichten an eine unbegrenzte Anzahl von Leuten schicken (ersetzen die Verteilerlisten).\n\n Mehr Infos über dieses Update: https://telegram.org/blog/channels</string>
-    <string name="updateBuild">632</string>
-    <!--Telegram+--><!--
-  <string name="updatePlusText">
-\n\nNeues in Version 3.2.2.1:\n\n- Hintergrund vom Chat kann jetzt direkt geändert werden\n- Verbesserte Möglichkeit der Anwendung von Themen Hintergrundbildern\n-Benutzernamen in Zwischenablage kopieren wenn diese in der Profilübersicht ausgewählt wurden\n- Fehlerbeseitigung</string>-->
+<string name="updateText">Plus Messenger für Android wurde aktualisiert. Neu in Version 3.2.6:\n\n- Neue Animationen und optische Verbesserungen\n- Neue Emoji\n-  Sonstige Verbesserungen und Fehlerbehebungen</string>
+    <string name="updateBuild">655</string>
+    <!--Telegram+-->
+  <string name="updatePlusText">\n\nNeues in Version 3.2.6.0:\n\n- Fehlerbeseitigung</string>
     <string name="TelegramForAndroid">Plus Messenger für Android</string>
   <string name="Theming">Themen bearbeiten</string>
   <string name="colorHexInvalid">Ungültiger Hex-Code!</string>
@@ -1101,4 +1127,11 @@
   <string name="Copied">%s in die Zwischenablage kopiert</string>
   <string name="JoinChannel">
 \n\nPlus Messenger Mitglied werden im offiziellen Kanal: https://telegram.me/plusmsn</string>
+  <string name="DownloadThemes">Themen herunterladen</string>
+  <string name="OfficialChannel">Offizieller Kanal</string>
+  <string name="DialogsSettings">Dialoge</string>
+  <string name="ClickOnContactPic">Zeige bei Tip auf Kontaktbild</string>
+  <string name="ClickOnGroupPic">Zeige bei Tip auf Gruppenbild</string>
+  <string name="ShowProfile">Profil</string>
+  <string name="ShowPics">Profilbilder</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-es/strings.xml b/TMessagesProj/src/main/res/values-es/strings.xml
index ff12a4a20..64d25b6ce 100644
--- a/TMessagesProj/src/main/res/values-es/strings.xml
+++ b/TMessagesProj/src/main/res/values-es/strings.xml
@@ -129,6 +129,7 @@
     <string name="ChannelAddTo">¿Añadir a %1$s al canal?</string>
     <string name="ChannelUserLeftError">Lo sentimos, este usuario decidió dejar el grupo, así que no puedes invitarlo otra vez.</string>
     <string name="ChannelUserCantAdd">Lo sentimos, no puedes añadir a este usuario a canales.</string>
+    <string name="ChannelUserCantAdmin">Lo sentimos, hay demasiados administradores en el canal.</string>
     <string name="ChannelUserAddLimit">Lo sentimos, sólo puedes añadir a los primeros 200 miembros a un canal. Sin embargo, una cantidad ilimitada de personas pueden unirse por el enlace del canal.</string>
     <string name="ChannelAddedBy">un1 te añadió a este canal</string>
     <string name="ChannelJoined">Te uniste al canal</string>
@@ -144,14 +145,14 @@
     <string name="ChannelMessageGroupDocument">%1$s envió un archivo al canal %2$s</string>
     <string name="ChannelMessageGroupAudio">%1$s envió un audio al canal %2$s</string>
     <string name="ChannelMessageGroupSticker">%1$s envió un sticker al canal %2$s</string>
-    <string name="ChannelMessageNoText">Nuevo mensaje en el canal %1$s</string>
-    <string name="ChannelMessagePhoto">Nueva foto en el canal %1$s</string>
-    <string name="ChannelMessageVideo">Nuevo vídeo en el canal %1$s</string>
-    <string name="ChannelMessageContact">Contacto compartido en el canal %1$s</string>
-    <string name="ChannelMessageMap">Nueva ubicación compartida en el canal %1$s</string>
-    <string name="ChannelMessageDocument">Nuevo archivo compartido en el canal %1$s</string>
-    <string name="ChannelMessageAudio">Nueva nota de voz compartida en el canal %1$s</string>
-    <string name="ChannelMessageSticker">Nuevo sticker compartido en el canal %1$s</string>
+    <string name="ChannelMessageNoText">%1$s publicó un mensaje</string>
+    <string name="ChannelMessagePhoto">%1$s publicó una foto</string>
+    <string name="ChannelMessageVideo">%1$s publicó un vídeo</string>
+    <string name="ChannelMessageContact">%1$s publicó un contacto</string>
+    <string name="ChannelMessageMap">%1$s publicó una ubicación</string>
+    <string name="ChannelMessageDocument">%1$s publicó un archivo</string>
+    <string name="ChannelMessageAudio">%1$s publicó un mensaje de voz</string>
+    <string name="ChannelMessageSticker">%1$s publicó un sticker</string>
     <!--broadcasts-->
     <string name="NewBroadcastList">Nueva difusión</string>
     <string name="EnterListName">Nombre de la lista</string>
@@ -235,7 +236,8 @@
     <string name="ReportSpamAlert">¿Quieres reportar a este usuario como spam?</string>
     <string name="ReportSpamAlertGroup">¿Quieres reportar a este grupo como spam?</string>
     <string name="NobodyLikesSpam1">Lo sentimos, por ahora puedes enviar mensajes sólo a contactos mutuos.</string>
-    <string name="NobodyLikesSpam2">Lo sentimos, por ahora sólo puedes añadir a contactos mutuos a un grupo.</string>
+    <string name="NobodyLikesSpam2">Lo sentimos, por ahora sólo puedes añadir contactos mutuos a un grupo.</string>
+    <string name="NobodyLikesSpamUrl">https://telegram.org/faq/es#no-puedo-enviar-mensajes-a-quienes-no-son-mis-contactos</string>
     <string name="MoreInfo">Más información</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s activó la autodestrucción en %2$s</string>
@@ -286,6 +288,7 @@
     <string name="Online">en línea</string>
     <string name="LastSeen">últ. vez</string>
     <string name="LastSeenDate">últ. vez el</string>
+    <string name="LastSeenNow">últ. vez hace un momento</string>
     <string name="InviteFriends">Invitar a amigos</string>
     <string name="GlobalSearch">BÚSQUEDA GLOBAL</string>
     <string name="Lately">últ. vez recientemente</string>
@@ -312,7 +315,7 @@
     <string name="ShareLink">Compartir enlace</string>
     <string name="LinkInfo">Cualquiera que tenga Telegram instalada podrá unirse a tu grupo siguiendo este enlace.</string>
     <!--group info view-->
-    <string name="SharedMedia">Todos los archivos</string>
+    <string name="SharedMedia">Multimedia</string>
     <string name="SETTINGS">Ajustes</string>
     <string name="AddMember">Añadir miembro</string>
     <string name="DeleteAndExit">Eliminar y dejar el grupo</string>
@@ -490,11 +493,17 @@
     <string name="AutoLockInfo">El bloqueo se activará transcurrido este tiempo.</string>
     <string name="AutoLockInTime">en %1$s</string>
     <string name="AutoLockDisabled">Desactivado</string>
+    <string name="UnlockFingerprint">Desbloquear con la huella digital</string>
+    <string name="FingerprintInfo">Confirma la huella digital para continuar</string>
+    <string name="FingerprintHelp">Sensor táctil</string>
+    <string name="FingerprintNotRecognized">Huella digital no reconocida. Reinténtalo</string>
     <!--media view-->
     <string name="NoMedia">Comparte fotos y vídeos en este chat y accede a ellos desde cualquier dispositivo.</string>
     <string name="DocumentsTitle">Archivos</string>
     <string name="SharedMediaTitle">Multimedia</string>
     <string name="LinksTitle">Enlaces</string>
+    <string name="AudioTitle">Música</string>
+    <string name="NoSharedAudio">Comparte música en este chat y accede a ella desde cualquier dispositivo.</string>
     <string name="NoSharedFiles">Comparte archivos en este chat y accede a ellos desde cualquier dispositivo.</string>
     <string name="NoSharedLinks">Comparte enlaces en este chat y accede a ellos desde cualquiera de tus dispositivos.</string>
     <!--map view-->
@@ -742,6 +751,12 @@
     <string name="FeatureUnavailable">Lo sentimos, esta característica no está disponible en tu país actualmente.</string>
     <string name="NoUsernameFound">No hay ninguna cuenta de Telegram con este alias.</string>
     <string name="BotCantJoinGroups">Este bot no puede unirse a grupos.</string>
+    <!--permissions-->
+    <string name="PermissionContacts">Telegram necesita el acceso a tus contactos, para que puedas comunicarte con ellos en todos tus dispositivos.</string>
+    <string name="PermissionStorage">Telegram necesita acceso a tu almacenamiento, para que puedas enviar y guardar fotos, vídeos, música y otros archivos.</string>
+    <string name="PermissionNoAudio">Telegram necesita acceso a tu micrófono, para que puedas enviar mensajes de voz.</string>
+    <string name="PermissionNoLocation">Telegram necesita acceso a tu ubicación, para que puedas compartirla con tus amigos.</string>
+    <string name="PermissionOpenSettings">AJUSTES</string>
     <!--Intro view-->
     <string name="Page1Title">Plus Messenger</string>
     <string name="Page2Title">Rápida</string>
@@ -879,6 +894,18 @@
     <string name="Photos_few">%1$d fotos</string>
     <string name="Photos_many">%1$d fotos</string>
     <string name="Photos_other">%1$d fotos</string>
+    <string name="LastSeenMinutes_zero">últ. vez hace %1$d minutos</string>
+    <string name="LastSeenMinutes_one">últ. vez hace %1$d minuto</string>
+    <string name="LastSeenMinutes_two">últ. vez hace %1$d minutos</string>
+    <string name="LastSeenMinutes_few">últ. vez hace %1$d minutos</string>
+    <string name="LastSeenMinutes_many">últ. vez hace %1$d minutos</string>
+    <string name="LastSeenMinutes_other">últ. vez hace %1$d minutos</string>
+    <string name="LastSeenHours_zero">últ. vez hace %1$d horas</string>
+    <string name="LastSeenHours_one">últ. vez hace %1$d hora</string>
+    <string name="LastSeenHours_two">últ. vez hace %1$d horas</string>
+    <string name="LastSeenHours_few">últ. vez hace %1$d horas</string>
+    <string name="LastSeenHours_many">últ. vez hace %1$d horas</string>
+    <string name="LastSeenHours_other">últ. vez hace %1$d horas</string>
     <!--forwarded messages-->
     <string name="ForwardedMessage_zero">%1$d mensajes adjuntos</string>
     <string name="ForwardedMessage_one">Mensaje adjunto</string>
@@ -946,10 +973,10 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s a las %2$s</string>
     <!--update text-->
-    <string name="updateText">Plus Messenger para Android ha sido actualizada. Novedades en la versión 3.2.0\n\n- Presentamos los Canales - una nueva gran forma de difundir tus mensajes a audiencias ilimitadas (reemplaza a las antiguas difusiones).\n\n Conoce más: https://telegram.org/blog/channels</string>
-    <string name="updateBuild">632</string>
+    <string name="updateText">Plus Messenger para Android ha sido actualizada. Novedades en la versión 3.2.6:\n\n- Nuevas animaciones y muchas mejoras visuales\n- Soporte para los nuevos emojis\n- Soporte para Android 6.0 (Now on Tap - Direct Share - Soporte para huella digital en el código de acceso)\n- Otras mejoras y correcciones de errores</string>
+    <string name="updateBuild">655</string>
     <!--Telegram+-->
-    <string name="updatePlusText">\n\nNovedades en 3.2.2.2:\n\n- Opción en ajustes para abrir perfil/fotos de perfil de usuario/grupo al hacer click en foto en pantalla principal\n- Opción de gradiente en fondo de chat\n- Añadida opción de reenviar link sin citar\n- Añadido enlace a canal oficial en menú\n- Corrección de errores</string>
+    <string name="updatePlusText">\n\nNovedades en 3.2.6.0:\n\n- Corrección de errores</string>
     <string name="TelegramForAndroid">Plus Messenger para Android</string>
     <string name="Theming">Tematización</string>
     <string name="colorHexInvalid">¡Color hexadecimal inválido!</string>
diff --git a/TMessagesProj/src/main/res/values-fr/strings.xml b/TMessagesProj/src/main/res/values-fr/strings.xml
index 1ddd5db2b..f01c90ad4 100644
--- a/TMessagesProj/src/main/res/values-fr/strings.xml
+++ b/TMessagesProj/src/main/res/values-fr/strings.xml
@@ -129,6 +129,7 @@
   <string name="ChannelAddTo">Ajouter %1$s à la chaîne ?</string>
   <string name="ChannelUserLeftError">Désolé, %@ a décidé de quitter ce groupe, vous ne pouvez donc plus l\'inviter ici.</string>
   <string name="ChannelUserCantAdd">Désolé, vous ne pouvez pas ajouter cet utilisateur dans des groupes.</string>
+  <string name="ChannelUserCantAdmin">Désolé, il y a trop d\'admins pour cette chaîne.</string>
   <string name="ChannelUserAddLimit">Désolé, Vous pouvez seulement ajouter les 200 premiers membres à la chaîne. Notez qu\'un nombre illimité de personnes peuvent rejoindre la chaîne via le liens d\'invitation.</string>
   <string name="ChannelAddedBy">un1 vous a ajouté à la chaîne</string>
   <string name="ChannelJoined">Vous avez rejoint la chaîne</string>
@@ -144,14 +145,14 @@
   <string name="ChannelMessageGroupDocument">%1$s a envoyé un fichier à la chaine %2$s</string>
   <string name="ChannelMessageGroupAudio">%1$s a envoyé une note vocal à la chaine %2$s</string>
   <string name="ChannelMessageGroupSticker">%1$s a envoyé un autocolant à la chaine %2$s</string>
-  <string name="ChannelMessageNoText">Nouveau message dans la chaîne %1$s</string>
-  <string name="ChannelMessagePhoto">Nouvelle photo dans la chaîne %1$s</string>
-  <string name="ChannelMessageVideo">Nouvelle vidéo dans la chaîne %1$s</string>
-  <string name="ChannelMessageContact">Contact partagé dans la chaîne %1$s</string>
-  <string name="ChannelMessageMap">Nouvelle localisation partagée dans la chaîne %1$s</string>
-  <string name="ChannelMessageDocument">Nouveau fichier partagé dans la chaîne %1$s</string>
-  <string name="ChannelMessageAudio">Nouvelle note vocale partagée dans la chaîne %1$s</string>
-  <string name="ChannelMessageSticker">Nouveau autocollant partagé dans la chaîne %1$s</string>
+  <string name="ChannelMessageNoText">%1$s a envoyé un message</string>
+  <string name="ChannelMessagePhoto">%1$s a envoyé une photo</string>
+  <string name="ChannelMessageVideo">%1$s a envoyé une vidéo</string>
+  <string name="ChannelMessageContact">%1$s a envoyé un contact</string>
+  <string name="ChannelMessageMap">%1$s a envoyé une position</string>
+  <string name="ChannelMessageDocument">%1$s a envoyé un fichier</string>
+  <string name="ChannelMessageAudio">%1$s a envoyé un message vocal</string>
+  <string name="ChannelMessageSticker">%1$s a envoyé une vignette</string>
   <!--broadcasts-->
   <string name="NewBroadcastList">Nv. liste de diffusion</string>
   <string name="EnterListName">Saisissez le nom de la liste</string>
@@ -287,6 +288,7 @@
   <string name="Online">en ligne</string>
   <string name="LastSeen">vu</string>
   <string name="LastSeenDate">vu</string>
+  <string name="LastSeenNow">vu juste maintenant</string>
   <string name="InviteFriends">Inviter des amis</string>
   <string name="GlobalSearch">RECHERCHE GÉNÉRALE</string>
   <string name="Lately">vu récemment</string>
@@ -491,11 +493,17 @@
   <string name="AutoLockInfo">Code d\'accès requis en cas d\'absence</string>
   <string name="AutoLockInTime">après %1$s</string>
   <string name="AutoLockDisabled">Désactivé</string>
+  <string name="UnlockFingerprint">Débloquer avec l\'empreinte digitale</string>
+  <string name="FingerprintInfo">Confirmer l\'empreinte digitale pour continuer</string>
+  <string name="FingerprintHelp">Capteur de toucher</string>
+  <string name="FingerprintNotRecognized">Empreinte digitale non reconnue. Essayez à nouveau</string>
   <!--media view-->
   <string name="NoMedia">Partager des photos et des vidéos dans cette conversation et y accéder sur chacun de vos appareils. </string>
   <string name="DocumentsTitle">Fichiers partagés</string>
   <string name="SharedMediaTitle">Médias partagés</string>
   <string name="LinksTitle">Liens Partagés</string>
+  <string name="AudioTitle">Musique partagée</string>
+  <string name="NoSharedAudio">Partager de la musique dans cette conversation et accédez-y sur tous vos appareils.</string>
   <string name="NoSharedFiles">Partager des fichiers et des documents dans cette conversation et y accéder sur chacun de vos appareils. </string>
   <string name="NoSharedLinks">Partager des liens dans cette discussion et y accéder sur n\'importe lequel de vos appareils .</string>
   <!--map view-->
@@ -743,6 +751,12 @@
   <string name="FeatureUnavailable">Désolé, cette option n\'est actuellement pas disponible dans votre pays.</string>
   <string name="NoUsernameFound">Il n\'y a pas de compte Telegram associé à cet utilisateur.</string>
   <string name="BotCantJoinGroups">Ce bot ne peut pas rejoindre des groupes.</string>
+  <!--permissions-->
+  <string name="PermissionContacts">Telegram a besoin d\'accéder à vos contacts pour que vous puissiez être en lien avec vos amis à travers tous vos périphériques.</string>
+  <string name="PermissionStorage">Telegram a besoin d\'accéder à votre espace de stockage pour que vous puissiez envoyer et sauvegarder des photos, vidéos, musiques et autres médias.</string>
+  <string name="PermissionNoAudio">Telegram a besoin d\'accéder à votre microphone pour que vous puissiez envoyer des messages vocaux.</string>
+  <string name="PermissionNoLocation">Telegram a besoin d\'accéder à votre position pour que vous puissiez la partager avec vos amis.</string>
+  <string name="PermissionOpenSettings">PARAMÈTRES</string>
   <!--Intro view-->
   <string name="Page1Title">Plus Messenger</string>
   <string name="Page2Title">Rapide</string>
@@ -880,6 +894,18 @@
   <string name="Photos_few">%1$d photos</string>
   <string name="Photos_many">%1$d photos</string>
   <string name="Photos_other">%1$d photos</string>
+  <string name="LastSeenMinutes_zero">vu il y a %1$d minutes</string>
+  <string name="LastSeenMinutes_one">vu il y a %1$d minute</string>
+  <string name="LastSeenMinutes_two">vu il y a %1$d minutes</string>
+  <string name="LastSeenMinutes_few">vu il y a %1$d minutes</string>
+  <string name="LastSeenMinutes_many">vu il y a %1$d minutes</string>
+  <string name="LastSeenMinutes_other">vu il y a %1$d minutes</string>
+  <string name="LastSeenHours_zero">vu il y a %1$d heures</string>
+  <string name="LastSeenHours_one">vu il y a %1$d heure</string>
+  <string name="LastSeenHours_two">vu il y a %1$d heures</string>
+  <string name="LastSeenHours_few">vu il y a %1$d heures</string>
+  <string name="LastSeenHours_many">vu il y a %1$d heures</string>
+  <string name="LastSeenHours_other">vu il y a %1$d heures</string>
   <!--forwarded messages-->
   <string name="ForwardedMessage_zero">%1$d messages transférés</string>
   <string name="ForwardedMessage_one">Message transféré</string>
@@ -947,9 +973,8 @@
   <string name="formatterDay12H">h:mm a</string>
   <string name="formatDateAtTime">%1$s à %2$s</string>
   <!--update text-->
-  <string name="updateText">Plus Messenger pour Android a été mis à jour. Nouveautés de la version 3.1.3:\n\n- Nouvelle section \"Liens partagés\" dans les informations de la conversation\n
-- Prévisualistaion In-app pour les liens des images</string>
-  <string name="updateBuild">632</string>
+  <string name="updateText">Telegram pour Android a été mis à jour. Nouveau dans la version 3.2.6:\n\n- De nouvelles animations et de nombreuses améliorations visuelles.\n- Support pour de nouveaux emoji\n- Autres améliorations et corrections de bogues.</string>
+  <string name="updateBuild">655</string>
     <!--Telegram+-->
     <string name="TelegramForAndroid">Plus Messenger pour Android</string>
     <string name="Theming">Thème</string>
diff --git a/TMessagesProj/src/main/res/values-gl/strings.xml b/TMessagesProj/src/main/res/values-gl/strings.xml
index 5872e02e1..ce4d4d7fe 100644
--- a/TMessagesProj/src/main/res/values-gl/strings.xml
+++ b/TMessagesProj/src/main/res/values-gl/strings.xml
@@ -130,6 +130,7 @@ e introduce o teu número.</string>
   <string name="ChannelAddTo">Engadir a %1$s á canle?</string>
   <string name="ChannelUserLeftError">Sentímolo, este usuario decidiu deixar o grupo, así que non podes volver a invitalo.</string>
   <string name="ChannelUserCantAdd">Sentímolo, non podes engadir este usuario a canles.</string>
+  <string name="ChannelUserCantAdmin">Sentímolo, demasiados administradores na canle.</string>
   <string name="ChannelUserAddLimit">Sentímolo, tan só podes engadir aos primeiros 200 membros a unha canle. Sen embargo, unha cantidade ilimitada de persoas poden unirse coa ligazón da canle.</string>
   <string name="ChannelAddedBy">un1 engadiute a esta canle</string>
   <string name="ChannelJoined">Unícheste á canle</string>
@@ -145,14 +146,14 @@ e introduce o teu número.</string>
   <string name="ChannelMessageGroupDocument">%1$s enviou un ficheiro á canle %2$s</string>
   <string name="ChannelMessageGroupAudio">%1$s enviou un son á canle %2$s</string>
   <string name="ChannelMessageGroupSticker">%1$s enviou un sticker á canle %2$s</string>
-  <string name="ChannelMessageNoText">Nova mensaxe na canle %1$s</string>
-  <string name="ChannelMessagePhoto">Nova foto na canle %1$s</string>
-  <string name="ChannelMessageVideo">Novo vídeo na canle %1$s</string>
-  <string name="ChannelMessageContact">Contacto compartido na canle %1$s</string>
-  <string name="ChannelMessageMap">Nova localización compartida na canle %1$s</string>
-  <string name="ChannelMessageDocument">Novo ficheiro compartido na canle %1$s</string>
-  <string name="ChannelMessageAudio">Nova nota de voz compartida na canle %1$s</string>
-  <string name="ChannelMessageSticker">Novo sticker compartido na canle %1$s</string>
+  <string name="ChannelMessageNoText">%1$s publicou unha mensaxe</string>
+  <string name="ChannelMessagePhoto">%1$s publicou unha foto</string>
+  <string name="ChannelMessageVideo">%1$s publicou un vídeo</string>
+  <string name="ChannelMessageContact">%1$s publicou un contacto</string>
+  <string name="ChannelMessageMap">%1$s publicou unha localización</string>
+  <string name="ChannelMessageDocument">%1$s publicou un ficheiro</string>
+  <string name="ChannelMessageAudio">%1$s publicou unha mensaxe de voz</string>
+  <string name="ChannelMessageSticker">%1$s publicou un sticker</string>
   <!--broadcasts-->
   <string name="NewBroadcastList">Nova difusión</string>
   <string name="EnterListName">Introduce o nome do listado</string>
@@ -237,6 +238,7 @@ e introduce o teu número.</string>
   <string name="ReportSpamAlertGroup">Queres reportar este grupo como spam?</string>
   <string name="NobodyLikesSpam1">Sentímolo, polo momento só podes enviar mensaxes a contactos mutuos.</string>
   <string name="NobodyLikesSpam2">Sentímolo, polo momento só podes engadir a contactos mutuos a grupos.</string>
+  <string name="NobodyLikesSpamUrl">https://telegram.org/faq/es#no-puedo-enviar-mensajes-a-quienes-no-son-mis-contactos</string>
   <string name="MoreInfo">Máis información</string>
   <!--notification-->
   <string name="MessageLifetimeChanged">%1$s puxo o temporizador para a autodestrución en %2$s</string>
@@ -287,6 +289,7 @@ e introduce o teu número.</string>
   <string name="Online">en liña</string>
   <string name="LastSeen">últ. vez</string>
   <string name="LastSeenDate">últ. vez</string>
+  <string name="LastSeenNow">últ. vez hai un intre</string>
   <string name="InviteFriends">Invitar amigos</string>
   <string name="GlobalSearch">BUSCA GLOBAL</string>
   <string name="Lately">últ. vez recentemente</string>
@@ -334,8 +337,8 @@ e introduce o teu número.</string>
   <string name="StartEncryptedChat">Comezar un chat secreto</string>
   <string name="CreateEncryptedChatError">Produciuse un erro.</string>
   <string name="EncryptionKey">Clave de cifrado</string>
-  <string name="MessageLifetime">Temporizador da autodestrución</string>
-  <string name="ShortMessageLifetimeForever">Desactivado</string>
+  <string name="MessageLifetime">Autodestrución</string>
+  <string name="ShortMessageLifetimeForever">Desactivada</string>
   <string name="EncryptionKeyDescription">Esta imaxe é unha visualización da clave de cifrado para a conversa secreta con <![CDATA[<b>]]>%1$s<![CDATA[</b>]]>.<![CDATA[<br><br>]]>Se é a mesma que aparece no teléfono de <![CDATA[<b>]]>%2$s<![CDATA[</b>]]>, a vosa conversa é 200%% segura.<![CDATA[<br><br>]]>Máis información en telegram.org</string>
   <string name="NumberUnknown">Descoñecido</string>
   <string name="Info">Información</string>
@@ -410,7 +413,7 @@ e introduce o teu número.</string>
   <string name="DeleteLocalization">Queres eliminar a tradución?</string>
   <string name="IncorrectLocalization">Ficheiro de tradución incorrecto</string>
   <string name="Enabled">Activadas</string>
-  <string name="Disabled">Desactivado</string>
+  <string name="Disabled">Desactivadas</string>
   <string name="NotificationsService">Servizo de notificacións</string>
   <string name="NotificationsServiceDisableInfo">Se os servizos de notificacións de Google Play son suficientes para ti, podes desactivar o Servizo de notificacións. Con todo recomendámosche que o deixes activado para manter a aplicación executándose en segundo plano e recibir notificacións ao momento.</string>
   <string name="SortBy">Ordenar por</string>
@@ -457,7 +460,7 @@ e introduce o teu número.</string>
   <string name="SoundDefault">Predeterminado</string>
   <string name="VibrationDefault">Predeterminada</string>
   <string name="SmartNotifications">Notificacións intelixentes</string>
-  <string name="SmartNotificationsDisabled">Desactivado</string>
+  <string name="SmartNotificationsDisabled">Desactivadas</string>
   <string name="SmartNotificationsInfo">Soar como máximo %1$s en %2$s</string>
   <string name="SmartNotificationsSoundAtMost">Soar como máximo</string>
   <string name="SmartNotificationsTimes">veces</string>
@@ -491,11 +494,17 @@ e introduce o teu número.</string>
   <string name="AutoLockInfo">O bloqueo activarase transcorrido este tempo.</string>
   <string name="AutoLockInTime">en %1$s</string>
   <string name="AutoLockDisabled">Desactivado</string>
+  <string name="UnlockFingerprint">Desbloquear coa pegada dactilar</string>
+  <string name="FingerprintInfo">Confirma a pegada para continuar</string>
+  <string name="FingerprintHelp">Sensor táctil</string>
+  <string name="FingerprintNotRecognized">Pegada non recoñecida. Téntao de novo.</string>
   <!--media view-->
   <string name="NoMedia">Comparte fotos e vídeos nesta conversa e accede a eles dende calquera dos teus dispositivos.</string>
   <string name="DocumentsTitle">Ficheiros compartidos</string>
   <string name="SharedMediaTitle">Multimedia</string>
   <string name="LinksTitle">Ligazóns compartidas</string>
+  <string name="AudioTitle">Música</string>
+  <string name="NoSharedAudio">Comparte música nesta conversa e accede a ela dende calquera dispositivo.</string>
   <string name="NoSharedFiles">Comparte ficheiros e documentos nesta conversa e accede a eles dende calquera dos teus dispositivos.</string>
   <string name="NoSharedLinks">Comparte ligazóns nesta conversa e accede a elas dende calquera dos teus dispositivos.</string>
   <!--map view-->
@@ -743,6 +752,12 @@ e introduce o teu número.</string>
   <string name="FeatureUnavailable">Sentímolo, esta funcionalidade non está dispoñíbel no teu país.</string>
   <string name="NoUsernameFound">Non hai unha conta en Telegram con este alias.</string>
   <string name="BotCantJoinGroups">Este bot non pode unirse a grupos.</string>
+  <!--permissions-->
+  <string name="PermissionContacts">Telegram necesita acceso aos teus contactos para que poidas conectar con eles en tódolos teus dispositivos.</string>
+  <string name="PermissionStorage">Telegram necesita acceso ao teu almacenamento para que poidas enviar e gardar fotos, vídeos, música e demais.</string>
+  <string name="PermissionNoAudio">Telegram necesita acceso ao teu micrófono para que poidas enviar mensaxes de voz.</string>
+  <string name="PermissionNoLocation">Telegram necesita acceso á túa localización para que a poidas compartir cos teus amigos.</string>
+  <string name="PermissionOpenSettings">AXUSTES</string>
   <!--Intro view-->
   <string name="Page1Title">Plus Messenger</string>
   <string name="Page2Title">Rápido</string>
@@ -880,6 +895,18 @@ e introduce o teu número.</string>
   <string name="Photos_few">%1$d fotos</string>
   <string name="Photos_many">%1$d fotos</string>
   <string name="Photos_other">%1$d fotos</string>
+  <string name="LastSeenMinutes_zero">últ. vez hai %1$d minutos</string>
+  <string name="LastSeenMinutes_one">últ. vez hai %1$d minuto</string>
+  <string name="LastSeenMinutes_two">últ. vez hai %1$d minutos</string>
+  <string name="LastSeenMinutes_few">últ. vez hai %1$d minutos</string>
+  <string name="LastSeenMinutes_many">últ. vez hai %1$d minutos</string>
+  <string name="LastSeenMinutes_other">últ. vez hai %1$d minutos</string>
+  <string name="LastSeenHours_zero">últ. vez hai %1$d horas</string>
+  <string name="LastSeenHours_one">últ. vez hai %1$d hora</string>
+  <string name="LastSeenHours_two">últ. vez hai %1$d horas</string>
+  <string name="LastSeenHours_few">últ. vez hai %1$d horas</string>
+  <string name="LastSeenHours_many">últ. vez hai %1$d horas</string>
+  <string name="LastSeenHours_other">últ. vez hai %1$d horas</string>
   <!--forwarded messages-->
   <string name="ForwardedMessage_zero">%1$d mensaxes reenviadas</string>
   <string name="ForwardedMessage_one">Mensaxe adxunta</string>
@@ -947,10 +974,10 @@ e introduce o teu número.</string>
   <string name="formatterDay12H">h:mm a</string>
   <string name="formatDateAtTime">%1$s ás %2$s</string>
   <!--update text-->
-  <string name="updateText">Telegram para Android foi actualizada. Novidades na versión 3.2.0:\n\n- Presentamos as Canles – unha nova gran forma de difundir as túas mensaxes a audiencias ilimitadas (substitúe ás antigas difusións).\n\n Coñece máis: https://telegram.org/blog/channels</string>
-  <string name="updateBuild">632</string>
-  <!--Telegram+--><!--
-  <string name="updatePlusText">\n\nNovo na versión 3.2.2.2:\n\n- Agora podes cambiar o fondo directamente dende a pantalla da conversa\n- Método mellorado para a aplicación dos fondos do tema\n- O alias cópiase ao portapapeis se lle tocas na pantalla do perfil\n- Corrección de erros</string>-->
+  <string name="updateText">Telegram para Android foi actualizada. Novidades na versión 3.2.6:\n\n- Novas animacións e moitas melloras visuais\n- Soporte para os novos emoji\n- Outras melloras e correccións de erros</string>
+  <string name="updateBuild">655</string>
+  <!--Telegram+-->
+  <string name="updatePlusText">\n\nNovidades na versión 3.2.6.0:\n\n- Corrección de erros</string>
     <string name="TelegramForAndroid">Plus Messenger para Android</string>
     <string name="Theming">Tematización</string>
     <string name="colorHexInvalid">Cor hexadecimal inválida!</string>
@@ -961,8 +988,8 @@ e introduce o teu número.</string>
     <string name="General">Xeral</string>
     <string name="Screens">Pantallas</string>
     <string name="MainScreen">Pantalla principal</string>
-  <string name="ChatScreen">Pantalla de conversas</string>
-    <string name="ContactsScreen">Pantalla de contactos</string>
+  <string name="ChatScreen">Pantalla das conversas</string>
+  <string name="ContactsScreen">Pantalla dos contactos</string>
     <string name="Header">Cabeceira</string>
   <string name="Rows">Listado</string>
   <string name="ChatList">Listado de conversa</string>
@@ -1003,7 +1030,7 @@ e introduce o teu número.</string>
   <string name="SaveThemeSum">Gardar o tema na carpeta Telegram/Themes</string>
   <string name="SaveThemeToastText">Tema gardado!</string>
     <string name="SavedTo">%1$s gardado en %2$s</string>
-  <string name="SaveErrorMsg0">Tema aínda sen crear. Aplica primeiro algún MOD, por favor</string>
+  <string name="SaveErrorMsg0">Tema aínda sen crear. Aplica primeiro algún MOD, por favor.</string>
     <string name="restoreOkMsg">Tema cargado dende a SD</string>
   <string name="restoreErrorMsg">Non se atopou ningún ficheiro de preferencias en %s</string>
   <string name="NoMediaMessage">Non se atopou tarxeta SD</string>
@@ -1046,8 +1073,8 @@ e introduce o teu número.</string>
   <string name="DisableMessageClick">Desactivar pop-up ao tocar</string>
   <string name="ProfileScreen">Perfil do grupo/contacto</string>
   <string name="HideBackground">Ocultar fondo personalizado</string>
-  <string name="RLinkColor">Cor do enlace dereito</string>
-  <string name="LLinkColor">Cor do enlace esquerdo</string>
+  <string name="RLinkColor">Cor da ligazón dereita</string>
+  <string name="LLinkColor">Cor da ligazón esquerda</string>
   <string name="ThemeApplied">Tema aplicado!</string>
   <string name="ClickOkToRestart">Preme OK para reiniciar a app</string>
   <string name="ShowAndroidEmoji">Mostrar emoticonas do sistema</string>
@@ -1062,24 +1089,24 @@ e introduce o teu número.</string>
   <string name="UnknownNameColor">Cor do nome (número descoñecido)</string>
   <string name="HideBackgroundShadow">Ocultar sombra de fondo personalizada</string>
   <string name="SetSolidBGColor">Poñer cor de fondo</string>
-  <string name="SolidBGColor">Cor de fondo</string>
-  <string name="EmojiPopupSize">Tamaño do popup das emoticonas</string>
+  <string name="SolidBGColor">Cor do fondo</string>
+  <string name="EmojiPopupSize">Tamaño do pop-up das emoticonas</string>
   <string name="ForwardRightNameColor">Cor do nome da burbulla de reenvío der.</string>
   <string name="ForwardLeftNameColor">Cor do nome da burbulla de reenvío esq.</string>
   <string name="IconsColor">Cor das iconas</string>
   <string name="SettingsScreen">Pantalla de Axustes/Tematización</string>
-  <string name="BackgroundColor">Cor de fondo</string>
+  <string name="BackgroundColor">Cor do fondo</string>
   <string name="ShadowColor">Cor da sombra</string>
   <string name="SectionColor">Cor da sección</string>
   <string name="TitleColor">Cor do título</string>
   <string name="SummaryColor">Cor do resumo/subtítulo</string>
   <string name="MediaColor">Cor do texto \'Foto/Sticker\'</string>
   <string name="ThemesAppMsg">Gustaríache ver algún dos temas creados por outros usuarios de Plus Messenger?</string>
-  <string name="UseDeviceFont">Empregar fonte do dispositivo</string>
+  <string name="UseDeviceFont">Empregar a fonte do dispositivo</string>
   <string name="AppWillRestart">Plus Messenger reiniciarase</string>
   <string name="GroupIconColor">Cor do icono do grupo</string>
   <string name="SharedContactNameColor">Cor do nome do contacto compartido</string>
-  <string name="AttachBGColor">Cor de fondo de adxuntar</string>
+  <string name="AttachBGColor">Cor do fondo de adxuntar</string>
   <string name="AttachTextColor">Cor do texto de adxuntar</string>
   <string name="ShowContactAvatar">Mostrar foto de contacto na conversa</string>
   <string name="ShowOwnAvatar">Mostrar a miña foto na conversa</string>
@@ -1100,4 +1127,11 @@ e introduce o teu número.</string>
   <string name="RowGradientList">Aplicar gradiente ao fondo do listado</string>
   <string name="Copied">%s copiado ao portapapeis</string>
   <string name="JoinChannel">\n\nÚnete á canle oficial de Plus Messenger: https://telegram.me/plusmsnes</string>
+  <string name="DownloadThemes">Descargar temas</string>
+  <string name="OfficialChannel">Canle oficial</string>
+  <string name="DialogsSettings">Conversas</string>
+  <string name="ClickOnContactPic">Clic na foto do contacto</string>
+  <string name="ClickOnGroupPic">Clic na foto do grupo</string>
+  <string name="ShowProfile">Perfil</string>
+  <string name="ShowPics">Fotos do perfil</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-hi/strings.xml b/TMessagesProj/src/main/res/values-hi/strings.xml
index 0a141232a..e66040edf 100644
--- a/TMessagesProj/src/main/res/values-hi/strings.xml
+++ b/TMessagesProj/src/main/res/values-hi/strings.xml
@@ -515,7 +515,7 @@
   <string name="formatDateAtTime">%1$s पर %2$s</string>
   <!--update text--><!--
   <string name="updateText">Plus Messenger for Android has been updated. New in Version 3.0:\n\n\n\n- Dedicated tabs for each one of your custom sticker sets in the sticker panel. Add custom stickers like https://telegram.me/addstickers/Animals\n- New bot API, free for everyone. If you\'re an engineer, create your own bots for games, services or integrations. Learn more at https://telegram.org/blog/bot-revolution\n https://play.google.com/store/apps/details?id=es.rafalense.themes</string>-->
-  <string name="updateBuild">632</string>
+  <string name="updateBuild">655</string>
   <!--Telegram+--><!--
   <string name="updatePlusText"></string>-->
   <string name="TelegramForAndroid">Android  के लिए प्लस मैसेंजर</string>
diff --git a/TMessagesProj/src/main/res/values-hr/strings.xml b/TMessagesProj/src/main/res/values-hr/strings.xml
index 337f3b690..0443a881e 100644
--- a/TMessagesProj/src/main/res/values-hr/strings.xml
+++ b/TMessagesProj/src/main/res/values-hr/strings.xml
@@ -750,7 +750,7 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s u %2$s</string>
   <!--update text-->
-  <string name="updateBuild">632</string>
+  <string name="updateBuild">655</string>
     <!--Telegram+-->
   <string name="TelegramForAndroid">Plus Messenger za Android</string>
   <string name="Theming">Izrada teme</string>
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 6ecb4e0b2..4c18a999f 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -109,7 +109,7 @@
     <string name="ActionChannelRemovedPhoto">Foto del canale rimossa</string>
     <string name="ActionChannelChangedTitle">Nome del canale cambiato in un2</string>
     <string name="ActionChannelInvite">un1 ti ha aggiunto al canale un2</string>
-    <string name="ChannelPublicLimitReached">Spiacenti, hai creato troppi canali pubblici. Puoi o creare un canale privato o eliminare uno dei tuoi precedenti canali per poi crearne un altro.</string>
+    <string name="ChannelPublicLimitReached">Spiacenti, hai creato troppi canali pubblici. Puoi creare un canale privato o eliminare un tuo canale pubblico.</string>
     <string name="ChannelModerator">Moderatore</string>
     <string name="ChannelCreator">Creatore</string>
     <string name="ChannelEditor">Amministratore</string>
@@ -129,6 +129,7 @@
     <string name="ChannelAddTo">Aggiungere %1$s al canale?</string>
     <string name="ChannelUserLeftError">Spiacenti, questo utente ha deciso di lasciare il gruppo, quindi non puoi reinvitarlo.</string>
     <string name="ChannelUserCantAdd">Spiacenti, non puoi aggiungere questo utente ai canali.</string>
+    <string name="ChannelUserCantAdmin">Spiacenti, troppi amministratori in questo canale.</string>
     <string name="ChannelUserAddLimit">Spiacenti, puoi aggiungere solo i primi 200 membri a un canale. Ricorda che un numero illimitato di persone potrebbe unirsi tramite il link del canale.</string>
     <string name="ChannelAddedBy">un1 ti ha aggiunto a questo canale</string>
     <string name="ChannelJoined">Ti sei unito al canale</string>
@@ -144,14 +145,14 @@
     <string name="ChannelMessageGroupDocument">%1$s ha inviato un file al canale %2$s</string>
     <string name="ChannelMessageGroupAudio">%1$s ha inviato un audio al canale %2$s</string>
     <string name="ChannelMessageGroupSticker">%1$s ha inviato uno sticker al canale %2$s</string>
-    <string name="ChannelMessageNoText">Nuovo messaggio nel canale %1$s</string>
-    <string name="ChannelMessagePhoto">Nuova foto nel canale %1$s</string>
-    <string name="ChannelMessageVideo">Nuovo video nel canale %1$s</string>
-    <string name="ChannelMessageContact">Contatto condiviso nel canale %1$s</string>
-    <string name="ChannelMessageMap">Nuova posizione condivisa nel canale %1$s</string>
-    <string name="ChannelMessageDocument">Nuovo file condiviso nel canale %1$s</string>
-    <string name="ChannelMessageAudio">Nuova nota vocale condivisa nel canale %1$s</string>
-    <string name="ChannelMessageSticker">Nuovo sticker condiviso nel canale %1$s</string>
+    <string name="ChannelMessageNoText">%1$s ha pubblicato un messaggio</string>
+    <string name="ChannelMessagePhoto">%1$s ha pubblicato una foto</string>
+    <string name="ChannelMessageVideo">%1$s ha pubblicato un video</string>
+    <string name="ChannelMessageContact">%1$s ha pubblicato un contatto</string>
+    <string name="ChannelMessageMap">%1$s ha pubblicato una posizione</string>
+    <string name="ChannelMessageDocument">%1$s ha pubblicato un file</string>
+    <string name="ChannelMessageAudio">%1$s ha pubblicato un messaggio vocale</string>
+    <string name="ChannelMessageSticker">%1$s ha pubblicato uno sticker</string>
     <!--broadcasts-->
     <string name="NewBroadcastList">Nuova lista broadcast</string>
     <string name="EnterListName">Inserisci il nome della lista</string>
@@ -236,6 +237,7 @@
     <string name="ReportSpamAlertGroup">Sei sicuro di voler segnalare dello spam in questo gruppo?</string>
     <string name="NobodyLikesSpam1">Spiacenti, ma al momento puoi scrivere solo a contatti in comune.</string>
     <string name="NobodyLikesSpam2">Spiacenti, ma al momento puoi aggiungere ai gruppi solo a contatti in comune.</string>
+    <string name="NobodyLikesSpamUrl">https://telegram.org/faq/it#non-posso-inviare-messaggi-a-chi-non-far-parte-dei-miei-contatti</string>
     <string name="MoreInfo">Più info</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s ha impostato il timer di autodistruzione a %2$s</string>
@@ -286,6 +288,7 @@
     <string name="Online">in linea</string>
     <string name="LastSeen">ultimo accesso</string>
     <string name="LastSeenDate">ultimo accesso</string>
+    <string name="LastSeenNow">ultimo accesso adesso</string>
     <string name="InviteFriends">Invita amici</string>
     <string name="GlobalSearch">RICERCA GLOBALE</string>
     <string name="Lately">ultimo accesso di recente</string>
@@ -490,11 +493,17 @@
     <string name="AutoLockInfo">Richiede il codice se lontano per del tempo.</string>
     <string name="AutoLockInTime">tra %1$s</string>
     <string name="AutoLockDisabled">Disabilitato</string>
+    <string name="UnlockFingerprint">Sblocca con impronta digitale</string>
+    <string name="FingerprintInfo">Conferma impronta digitale per continuare</string>
+    <string name="FingerprintHelp">Sensore touch</string>
+    <string name="FingerprintNotRecognized">Impronta digitale non riconosciuta. Riprova</string>
     <!--media view-->
     <string name="NoMedia">Condividi foto e video in questa chat e accedi ad essi da ogni tuo dispositivo.</string>
     <string name="DocumentsTitle">File condivisi</string>
     <string name="SharedMediaTitle">Media condivisi</string>
     <string name="LinksTitle">Link condivisi</string>
+    <string name="AudioTitle">Musica condivisa</string>
+    <string name="NoSharedAudio">Condividi musica in questa chat e accedi ad essa da ogni tuo dispositivo.</string>
     <string name="NoSharedFiles">Condividi file e documenti in questa chat e accedi ad essi da ogni tuo dispositivo.</string>
     <string name="NoSharedLinks">Condividi link in questa chat ed accedi ad essi da ogni tuo dispositivo.</string>
     <!--map view-->
@@ -742,6 +751,12 @@
     <string name="FeatureUnavailable">Spiacenti, questa funzione non è disponibile nel tuo paese.</string>
     <string name="NoUsernameFound">Non esiste alcun account Telegram con questo username.</string>
     <string name="BotCantJoinGroups">Questo bot non può unirsi ai gruppi.</string>
+    <!--permissions-->
+    <string name="PermissionContacts">Telegram deve accedere ai tuoi contatti per poterti connettere con i tuoi amici su tutti i tuoi dispositivi.</string>
+    <string name="PermissionStorage">Telegram deve accedere alla tua memoria per poter inviare e salvare foto,video, musica e altri media.</string>
+    <string name="PermissionNoAudio">Telegram deve accedere al microfono per poter inviare messaggi vocali.</string>
+    <string name="PermissionNoLocation">Telegram deve accedere alla tua posizione per poterla condividere con i tuoi amici.</string>
+    <string name="PermissionOpenSettings">IMPOSTAZIONI</string>
     <!--Intro view-->
     <string name="Page1Title">Plus Messenger</string>
     <string name="Page2Title">Veloce</string>
@@ -755,7 +770,7 @@
     <string name="Page3Message"><![CDATA[<b>Plus Messenger</b>]]> sarà sempre gratuito.<![CDATA[<br/>]]>Nessuna pubblicità. Nessun abbonamento.</string>
     <string name="Page4Message"><![CDATA[<b>Plus Messenger</b>]]> protegge i tuoi messaggi<![CDATA[<br/>]]>dagli attacchi degli hacker.</string>
     <string name="Page5Message"><![CDATA[<b>Plus Messenger</b>]]> non ha limiti di dimensione<![CDATA[<br/>]]>per le tue chat e i file multimediali.</string>
-    <string name="Page6Message"><![CDATA[<b>Plus Messenger</b>]]> ti consente di accedere<![CDATA[<br/>]]>ai messaggi da più dispositivi.</string>
+    <string name="Page6Message"><![CDATA[<b>Plus Messenger</b>]]> ti consente di accedere<![CDATA[<br/>]]>ai tuoi messaggi da più dispositivi.</string>
     <string name="Page7Message">I messaggi di<![CDATA[<b>Plus Messenger</b>]]> sono fortemente<![CDATA[<br/>]]>criptati e possono autodistruggersi.</string>
     <string name="StartMessaging">Inizia a inviare messaggi</string>
     <!--plural-->
@@ -879,6 +894,18 @@
     <string name="Photos_few">%1$d foto</string>
     <string name="Photos_many">%1$d foto</string>
     <string name="Photos_other">%1$d foto</string>
+    <string name="LastSeenMinutes_zero">ultimo accesso %1$d minuti fa</string>
+    <string name="LastSeenMinutes_one">ultimo accesso %1$d minuto fa</string>
+    <string name="LastSeenMinutes_two">ultimo accesso %1$d minuti fa</string>
+    <string name="LastSeenMinutes_few">ultimo accesso %1$d minuti fa</string>
+    <string name="LastSeenMinutes_many">ultimo accesso %1$d minuti fa</string>
+    <string name="LastSeenMinutes_other">ultimo accesso %1$d minuti fa</string>
+    <string name="LastSeenHours_zero">ultimo accesso %1$d ore fa</string>
+    <string name="LastSeenHours_one">ultimo accesso %1$d ora fa</string>
+    <string name="LastSeenHours_two">ultimo accesso %1$d ore fa</string>
+    <string name="LastSeenHours_few">ultimo accesso %1$d ore fa</string>
+    <string name="LastSeenHours_many">ultimo accesso %1$d ore fa</string>
+    <string name="LastSeenHours_other">ultimo accesso %1$d ore fa</string>
     <!--forwarded messages-->
     <string name="ForwardedMessage_zero">%1$d messaggi inoltrati</string>
     <string name="ForwardedMessage_one">Messaggio inoltrato</string>
@@ -946,11 +973,10 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s alle %2$s</string>
     <!--update text-->
-    <string name="updateText">Plus Messenger per Android si è aggiornato. Nuovo nella versione 3.2.0:\n\n- Nuovi Canali - una nuova modalità per diffondere i tuoi messaggi ad un pubblico infinito (rimpiazzano le vecchie liste broadcast).\n\nPiù info: https://telegram.org/blog/channels</string>
-    <string name="updateBuild">632</string>
+    <string name="updateText">Plus Messenger per Android si è aggiornato. Nuovo nella versione 3.2.6:\n\n- Nuove animazioni e miglioramenti di interfaccia\n- Supporto per le nuove emoji\n- Altri miglioramenti e risoluzione di problemi</string>
+    <string name="updateBuild">655</string>
     <!--Telegram+-->
-  <string name="updatePlusText">
-\n\nNovità nella versione 3.2.2.2:\n\n- Nuova opzione nelle impostazioni per aprire il profilo/le immagini del profilo quando si preme l\'utente o l\'immagine del gruppo nella schermata principale\n- Aggiunta opzione per il colore gradiente di sfondo\n- Aggiunta opzione per inoltrare i link senza quotare\n- Aggiunto link al canale ufficiale nel menu\n- Correzioni bug</string>
+  <string name="updatePlusText">\n\nNovità nella versione 3.2.6.0:\n\n- Correzioni bug</string>
     <string name="TelegramForAndroid">Plus Messenger per Android</string>
   <string name="Theming">Personalizzazione</string>
     <string name="colorHexInvalid">Codice del colore esadecimale non valido!</string>
diff --git a/TMessagesProj/src/main/res/values-ko/strings.xml b/TMessagesProj/src/main/res/values-ko/strings.xml
index 38c0f7c14..b4dc2add4 100644
--- a/TMessagesProj/src/main/res/values-ko/strings.xml
+++ b/TMessagesProj/src/main/res/values-ko/strings.xml
@@ -105,10 +105,8 @@
     <string name="ChannelLeaveAlert">채널에서 나가시겠습니까?</string>
     <string name="ChannelDeleteInfo">채널에 있는 모든 메시지가 삭제됩니다.</string>
     <string name="ChannelEdit">편집</string>
-  <string name="ChannelWasPrivateAlert">채널에 대한 공개링크를 선택하신 경우, 누구나 검색을 통하여 입장 가능합니다.\n\n
-비공개 채널로 유지를 하시고 싶으실 경우 링크 생성을 하지 말아주세요</string>
-  <string name="ChannelPublicEmptyUsername">유저들이 공개 채널에 대하여 검색 및 공유가 가능하도록 링크를 선택하여 주세요.\n\n
-채널을 공개하시지 싫으실 경우, 비공개 채널을 추천드립니다.</string>
+    <string name="ChannelWasPrivateAlert">채널에 대한 공개링크를 선택하신 경우, 누구나 검색을 통하여 입장 가능합니다.\n\n비공개 채널로 유지를 하시고 싶으실 경우 링크 생성을 하지 말아주세요</string>
+    <string name="ChannelPublicEmptyUsername">유저들이 공개 채널에 대하여 검색 및 공유가 가능하도록 링크를 선택하여 주세요.\n\n채널을 공개하시지 싫으실 경우, 비공개 채널을 추천드립니다.</string>
     <string name="ActionCreateChannel">채널 생성됨</string>
     <string name="ActionChannelChangedPhoto">채널 사진 업데이트됨</string>
     <string name="ActionChannelRemovedPhoto">채널 사진 삭제됨</string>
@@ -134,6 +132,7 @@
     <string name="ChannelAddTo">%1$s 님을 이 채널에 추가할까요</string>
     <string name="ChannelUserLeftError">해당 유저가 스스로 채널에서 퇴장을 하여 다시 초대할 수 없습니다.</string>
     <string name="ChannelUserCantAdd">죄송합니다, 이 유저를 채널에 추가 할 수 없습니다.</string>
+    <string name="ChannelUserCantAdmin">죄송합니다, 채널에 너무 많은 관리자가 있습니다.</string>
     <string name="ChannelUserAddLimit">죄송합니다, 채널에는 첫 200명까지만 초대가 가능합니다. 채널 링크를 통하여 무제한 입장이 가능합니다.</string>
     <string name="ChannelAddedBy">이 채널에 un1님이 초대하였습니다.</string>
     <string name="ChannelJoined">채널에 참여하였습니다.</string>
@@ -149,14 +148,14 @@
     <string name="ChannelMessageGroupDocument">%1$s님이 %2$s 채널에 파일을 보냈습니다</string>
     <string name="ChannelMessageGroupAudio">%1$s님이 %2$s 채널에 오디오를 보냈습니다</string>
     <string name="ChannelMessageGroupSticker">%1$s님이 %2$s 채널에 스티커를 보냈습니다</string>
-    <string name="ChannelMessageNoText">%1$s채널에 새 메시지가 있습니다.</string>
-    <string name="ChannelMessagePhoto">%1$s채널에 새 사진이 있습니다.</string>
-    <string name="ChannelMessageVideo">%1$s채널에 새 비디오가 있습니다.</string>
-    <string name="ChannelMessageContact">%1$s채널에 새 연락처가 있습니다.</string>
-    <string name="ChannelMessageMap">%1$s채널에 새 위치가 있습니다.</string>
-    <string name="ChannelMessageDocument">%1$s채널에 새 파일이 있습니다.</string>
-    <string name="ChannelMessageAudio">%1$s채널에 새 음성 메시지가 있습니다.</string>
-    <string name="ChannelMessageSticker">%1$s채널에 새 스티커가 있습니다.</string>
+    <string name="ChannelMessageNoText">%1$s 님이 메시지를 보냈습니다</string>
+    <string name="ChannelMessagePhoto">%1$s 님이 사진을 보냈습니다</string>
+    <string name="ChannelMessageVideo">%1$s 님이 동영상을 보냈습니다</string>
+    <string name="ChannelMessageContact">%1$s님이 연락처를 공유했습니다</string>
+    <string name="ChannelMessageMap">%1$s님이 위치를 보냈습니다</string>
+    <string name="ChannelMessageDocument">%1$s 님이 파일을 보냈습니다</string>
+    <string name="ChannelMessageAudio">%1$s님이 음성메시지를 보냈습니다</string>
+    <string name="ChannelMessageSticker">%1$s님이 스티커를 보냈습니다</string>
     <!--broadcasts-->
     <string name="NewBroadcastList">새 단체 메시지 리스트</string>
     <string name="EnterListName">리스트 이름을 입력하세요</string>
@@ -241,6 +240,7 @@
     <string name="ReportSpamAlertGroup">이 그룹 메시지를 스팸신고 하시겠습니까?</string>
     <string name="NobodyLikesSpam1">죄송합니다, 서로 연락처가 추가된 경우에만 메시지 전송이 가능합니다.</string>
     <string name="NobodyLikesSpam2">죄송합니다, 서로 연락처가 추가된 경우에만 그룹에 구성원을 추가 할 수 있습니다.</string>
+    <string name="NobodyLikesSpamUrl">https://telegram.org/faq#can-39t-send-messages-to-non-contacts</string>
     <string name="MoreInfo">더 보기</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s님이 자동삭제를 %2$s 후로 설정했습니다</string>
@@ -291,6 +291,7 @@
     <string name="Online">온라인</string>
     <string name="LastSeen">마지막 접속: </string>
     <string name="LastSeenDate">마지막 접속: </string>
+    <string name="LastSeenNow">방금 전에 확인</string>
     <string name="InviteFriends">친구 초대</string>
     <string name="GlobalSearch">전체 검색</string>
     <string name="Lately">최근에 접속</string>
@@ -495,11 +496,17 @@
     <string name="AutoLockInfo">일정 시간 후에 잠금코드 활성화</string>
     <string name="AutoLockInTime">%1$s 후에</string>
     <string name="AutoLockDisabled">비활성화됨</string>
+    <string name="UnlockFingerprint">지문으로 언락하기</string>
+    <string name="FingerprintInfo">지문인식 후 진행해주세요</string>
+    <string name="FingerprintHelp">터치 센서</string>
+    <string name="FingerprintNotRecognized">지문인식이 실패하였습니다. 다시 시도해주세요.</string>
     <!--media view-->
     <string name="NoMedia">이 채팅방에서 사진이나 동영상을 공유하면 다른 기기에서도 보실 수 있습니다.</string>
     <string name="DocumentsTitle">공유한 파일</string>
     <string name="SharedMediaTitle">공유된 미디어</string>
     <string name="LinksTitle">공유한 링크</string>
+    <string name="AudioTitle">공유된 음악</string>
+    <string name="NoSharedAudio">이 채팅방에서 음악을 공유하면 다른 기기에서도 보실 수 있습니다.</string>
     <string name="NoSharedFiles">이 채팅방에서 파일이나 문서를 공유하면 다른 기기에서도 보실 수 있습니다.</string>
     <string name="NoSharedLinks">이 채팅방에서 파일이나 문서를 공유하면 다른 기기에서도 보실 수 있습니다.</string>
     <!--map view-->
@@ -747,6 +754,12 @@
     <string name="FeatureUnavailable">이 기능은 회원님의 국가에서는 사용할 수 없습니다.</string>
     <string name="NoUsernameFound">입력된 아이디와 일치하는 텔레그램 계정이 없습니다.</string>
     <string name="BotCantJoinGroups">이 봇은 그룹에 참여 할 수 없습니다.</string>
+    <!--permissions-->
+    <string name="PermissionContacts">Telegram은 여러 기기에서 친구와 메시지를 주고받을 수 있도록 회원님의 연락처 접근이 필요합니다.</string>
+    <string name="PermissionStorage">Telegram은 사진, 비디오, 음악 및 다양한 미디어를 공유 및 저장하기 위하여 스토리지 접근이 필요합니다.</string>
+    <string name="PermissionNoAudio">Telegram이 음성 메시지를 보내기 위하여 마이크에 대한 접근이 필요합니다.</string>
+    <string name="PermissionNoLocation">Telegram이 위치를 친구분들과 공유하기 위해 위치에 대한 접근 권한을 필요로 합니다.</string>
+    <string name="PermissionOpenSettings">설정</string>
     <!--Intro view-->
     <string name="Page1Title">텔레그램</string>
     <string name="Page2Title">눈부신 속도</string>
@@ -884,6 +897,18 @@
     <string name="Photos_few">%1$d 개의 사진</string>
     <string name="Photos_many">%1$d 개의 사진</string>
     <string name="Photos_other">%1$d 개의 사진</string>
+    <string name="LastSeenMinutes_zero">%1$d 분 전에 확인</string>
+    <string name="LastSeenMinutes_one">%1$d 분 전에 확인</string>
+    <string name="LastSeenMinutes_two">%1$d 분 전에 확인</string>
+    <string name="LastSeenMinutes_few">%1$d 분 전에 확인</string>
+    <string name="LastSeenMinutes_many">%1$d 분 전에 확인</string>
+    <string name="LastSeenMinutes_other">%1$d 분 전에 확인</string>
+    <string name="LastSeenHours_zero">%1$d 시간 전에 확인</string>
+    <string name="LastSeenHours_one">%1$d 시간 전에 확인</string>
+    <string name="LastSeenHours_two">%1$d 시간 전에 확인</string>
+    <string name="LastSeenHours_few">%1$d 시간 전에 확인</string>
+    <string name="LastSeenHours_many">%1$d 시간 전에 확인</string>
+    <string name="LastSeenHours_other">%1$d 시간 전에 확인</string>
     <!--forwarded messages-->
     <string name="ForwardedMessage_zero">%1$d 개의 전달된 메시지</string>
     <string name="ForwardedMessage_one">전달된 메시지</string>
@@ -951,6 +976,6 @@
     <string name="formatterDay12H">a h:mm</string>
     <string name="formatDateAtTime">%1$s %2$s</string>
     <!--update text-->
-    <string name="updateText">텔레그램 안드로이드 버전이 업데이트 되었습니다. 새로운 버전은 3.2.0 입니다:\n\n-- 채널을 소개합니다. - 인원제한 없이 단체 메시지를 보낼 수 있는 새롭고 멋진 기능입니다. (기존 단체 메시지 대체)\n\nhttps://telegram.org/blog/channels에서 자세한 사항을 알아보세요.</string>
-    <string name="updateBuild">614</string>
+    <string name="updateText">텔레그램 안드로이드 버전이 업데이트 되었습니다. 새로운 버전은 3.2.6 입니다:\n\n- 새로운 애니메이션 및 다양한 비쥬얼 향상\n- 신규 이모티콘 지원\n- 기타 기능 향상 및 버그 수정</string>
+    <string name="updateBuild">655</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-nl/strings.xml b/TMessagesProj/src/main/res/values-nl/strings.xml
index 325ed7f5d..4787dd4ca 100644
--- a/TMessagesProj/src/main/res/values-nl/strings.xml
+++ b/TMessagesProj/src/main/res/values-nl/strings.xml
@@ -100,7 +100,7 @@
     <string name="ChannelDeleteMenu">Kanaal verwijderen</string>
   <string name="ChannelDeleteAlert">Kanaal echt verwijderen? Berichten worden gewist en alle deelnemers verwijderd.</string>
     <string name="ChannelLeaveAlert">Kanaal echt verlaten?</string>
-    <string name="ChannelDeleteInfo">Je raakt alle berichten in de kanaal kwijt.</string>
+    <string name="ChannelDeleteInfo">Je raakt alle berichten in dit kanaal kwijt.</string>
     <string name="ChannelEdit">Wijzig</string>
     <string name="ChannelWasPrivateAlert">Als je een publieke link voor je kanaal instelt kan iedereen deze vinden en deelnemen via de zoekfunctie.\n\nStel geen link in als je je kanaal privé wilt houden.</string>
     <string name="ChannelPublicEmptyUsername">Stel een link in voor je publieke kanaal, om deze vindbaar te maken via de zoekfunctie en te delen met anderen.\n\nWil je dit niet dan kun je een privé-kanaal aanmaken.</string>
@@ -108,7 +108,7 @@
     <string name="ActionChannelChangedPhoto">Kanaalfoto bijgewerkt</string>
     <string name="ActionChannelRemovedPhoto">Kanaalfoto verwijderd</string>
     <string name="ActionChannelChangedTitle">Kanaalnaam gewijzigd naar un2</string>
-    <string name="ActionChannelInvite">un1 heeft je toegevoegd aan kanaal un2</string>
+    <string name="ActionChannelInvite">un1 heeft je toegevoegd aan het kanaal un2</string>
     <string name="ChannelPublicLimitReached">Het maximale aantal publieke kanalen is bereikt. Je kunt een privé-kanaal maken of een kanaal verwijderen om een nieuwe te maken.</string>
     <string name="ChannelModerator">Moderator</string>
     <string name="ChannelCreator">Maker</string>
@@ -129,12 +129,13 @@
     <string name="ChannelAddTo">%1$s toevoegen aan het kanaal?</string>
     <string name="ChannelUserLeftError">Deze gebruiker heeft de groep verlaten. Je kunt hem/haar niet meer uitnodigen.</string>
     <string name="ChannelUserCantAdd">Je kunt deze gebruiker niet toevoegen aan kanalen.</string>
+    <string name="ChannelUserCantAdmin">Maximaal aantal administrators bereikt.</string>
     <string name="ChannelUserAddLimit">Je kunt  200 deelnemers handmatig toevoegen aan een kanaal. Een ongelimiteerd aantal mensen kan deelnemen via de link van het kanaal.</string>
     <string name="ChannelAddedBy">un1 heeft je toegevoegd aan dit kanaal</string>
     <string name="ChannelJoined">Je neemt deel aan het kanaal</string>
     <string name="ChannelRemoveUser">Verwijderen uit kanaal</string>
     <string name="ChannelCantSendMessage">Je hebt alleen leesrechten in dit kanaal.</string>
-  <string name="ChannelAddedByNotification">%1$s heeft je toegevoegd aan het kanaall %2$s</string>
+    <string name="ChannelAddedByNotification">%1$s heeft je toegevoegd aan het kanaal %2$s</string>
     <string name="ChannelPhotoEditNotification">Kanaalfoto van %1$s bijgewerkt</string>
     <string name="ChannelMessageGroupNoText">%1$s heeft een bericht gestuurd naar het kanaal %2$s</string>
     <string name="ChannelMessageGroupPhoto">%1$s heeft een foto gestuurd naar het kanaal %2$s</string>
@@ -144,14 +145,14 @@
     <string name="ChannelMessageGroupDocument">%1$s heeft een bestand gestuurd naar het kanaal %2$s</string>
     <string name="ChannelMessageGroupAudio">%1$s heeft een geluidsbestand gestuurd naar het kanaal %2$s</string>
     <string name="ChannelMessageGroupSticker">%1$s heeft een sticker gestuurd naar het kanaal %2$s</string>
-    <string name="ChannelMessageNoText">Nieuw bericht in het kanaal %1$s</string>
-    <string name="ChannelMessagePhoto">Nieuwe foto in het kanaal %1$s</string>
-    <string name="ChannelMessageVideo">Nieuwe video in het kanaal %1$s</string>
-    <string name="ChannelMessageContact">Contact gedeeld in het kanaal %1$s</string>
-    <string name="ChannelMessageMap">Nieuwe locatie gedeeld in het kanaal %1$s</string>
-    <string name="ChannelMessageDocument">Nieuw bestand gedeeld in het kanaal %1$s</string>
-    <string name="ChannelMessageAudio">Nieuw geluidsbestand gedeeld in het kanaal %1$s</string>
-    <string name="ChannelMessageSticker">Nieuwe sticker gedeeld in het kanaal %1$s</string>
+    <string name="ChannelMessageNoText">%1$s plaatste een bericht</string>
+    <string name="ChannelMessagePhoto">%1$s plaatste een foto</string>
+    <string name="ChannelMessageVideo">%1$s plaatste een video</string>
+    <string name="ChannelMessageContact">%1$s plaatste een contact</string>
+    <string name="ChannelMessageMap">%1$s plaatste een locatie</string>
+    <string name="ChannelMessageDocument">%1$s plaatste een bestand</string>
+    <string name="ChannelMessageAudio">%1$s plaatste een spraakbericht</string>
+    <string name="ChannelMessageSticker">%1$s plaatste een sticker</string>
     <!--broadcasts-->
     <string name="NewBroadcastList">Nieuwe verzendlijst</string>
     <string name="EnterListName">Naam van lijst</string>
@@ -236,6 +237,7 @@
     <string name="ReportSpamAlertGroup">Spam van deze groep echt melden? </string>
     <string name="NobodyLikesSpam1">Je kunt momenteel alleen berichten sturen aan onderlingen contacten.</string>
     <string name="NobodyLikesSpam2">Je kunt momenteel alleen onderlinge contacten aan groepen toevoegen</string>
+    <string name="NobodyLikesSpamUrl">https://telegram.org/faq#can-39t-send-messages-to-non-contacts</string>
     <string name="MoreInfo">Meer informatie</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s heeft de zelfvernietigingstimer ingesteld op %2$s</string>
@@ -286,6 +288,7 @@
     <string name="Online">online</string>
     <string name="LastSeen">gezien</string>
     <string name="LastSeenDate">gezien</string>
+    <string name="LastSeenNow">laatst gezien zojuist</string>
     <string name="InviteFriends">Vrienden uitnodigen</string>
     <string name="GlobalSearch">WERELDWIJD ZOEKEN</string>
     <string name="Lately">recent gezien</string>
@@ -402,7 +405,7 @@
     <string name="ContactJoined">Contact lid van Telegram</string>
     <string name="Pebble">PEBBLE</string>
     <string name="Language">Taal</string>
-    <string name="AskAQuestionInfo">De ondersteuning van Telegram wordt gedaan door vrijwilligers. We doen ons best om zo snel mogelijk te antwoorden.<![CDATA[<br><br>]]>Bekijk ook de <![CDATA[<a href=\"https://telegram.org/faq#general\">veelgestelde vragen</a>]]>: Hierhier staan de antwoorden op de meeste vragen en belangrijke tips voor <![CDATA[<a href=\"https://telegram.org/faq#troubleshooting\">het oplossen van problemen</a>]]>.</string>
+    <string name="AskAQuestionInfo">De ondersteuning van Telegram wordt gedaan door vrijwilligers. We doen ons best om zo snel mogelijk te antwoorden.<![CDATA[<br><br>]]>Bekijk ook de <![CDATA[<a href=\"https://telegram.org/faq#general\">veelgestelde vragen</a>]]>: Hier staan de antwoorden op de meeste vragen en belangrijke tips voor <![CDATA[<a href=\"https://telegram.org/faq#troubleshooting\">het oplossen van problemen</a>]]>.</string>
     <string name="AskButton">Vraag een vrijwilliger</string>
     <string name="TelegramFaq">Veelgestelde vragen</string>
     <string name="TelegramFaqUrl">https://telegram.org/faq</string>
@@ -490,11 +493,17 @@
     <string name="AutoLockInfo">Vraag om toegangscode indien afwezig</string>
     <string name="AutoLockInTime">over %1$s</string>
     <string name="AutoLockDisabled">Uitgeschakeld</string>
+    <string name="UnlockFingerprint">Ontgrendel met vingerafdruk</string>
+    <string name="FingerprintInfo">Vingerafdruk bevestigen</string>
+    <string name="FingerprintHelp">Vingerafdruksensor</string>
+    <string name="FingerprintNotRecognized">Vingerafdruk niet herkend,  probeer opnieuw</string>
     <!--media view-->
     <string name="NoMedia">Deel foto\'s en video\'s in deze chat om ze op al je apparaten te kunnen benaderen.</string>
     <string name="DocumentsTitle">Gedeelde bestanden</string>
     <string name="SharedMediaTitle">Gedeelde media</string>
     <string name="LinksTitle">Gedeelde links</string>
+    <string name="AudioTitle">Gedeelde muziek</string>
+    <string name="NoSharedAudio">Deel muziek in deze chat om ze op al je apparaten te kunnen benaderen.</string>
     <string name="NoSharedFiles">Deel bestanden en documenten in deze chat om ze op al je apparaten te kunnen benaderen.</string>
     <string name="NoSharedLinks">Deel links in deze chat om ze op al je apparaten te kunnen benaderen.</string>
     <!--map view-->
@@ -742,6 +751,12 @@
     <string name="FeatureUnavailable">Sorry, deze functie is momenteel niet beschikbaar in jouw land.</string>
     <string name="NoUsernameFound">Er is geen Telegram-account met deze gebruikersnaam.</string>
     <string name="BotCantJoinGroups">Deze bot kan geen groepslid worden.</string>
+    <!--permissions-->
+    <string name="PermissionContacts">Telegram heeft toegang tot je contacten nodig zodat je kan chatten met je vrienden vanaf al je apparaten.</string>
+    <string name="PermissionStorage">Telegram heeft toegang tot je opslaggeheugen nodig zodat je foto\'s, video\'s, muziek en andere media kunt opslaan en versturen.</string>
+    <string name="PermissionNoAudio">Telegram heeft toegang tot je microfoon nodig om spraakberichten te kunnen verzenden.</string>
+    <string name="PermissionNoLocation">Telegram heeft toegang tot je locatie nodig om deze te kunnen delen met je vrienden.</string>
+    <string name="PermissionOpenSettings">INSTELLINGEN</string>
     <!--Intro view-->
     <string name="Page1Title">Plus Messenger</string>
     <string name="Page2Title">Snel</string>
@@ -879,6 +894,18 @@
     <string name="Photos_few">%1$d foto\'s</string>
     <string name="Photos_many">%1$d foto\'s</string>
     <string name="Photos_other">%1$d foto\'s</string>
+    <string name="LastSeenMinutes_zero">laatst gezien %1$d minuten geleden</string>
+    <string name="LastSeenMinutes_one">laatst gezien %1$d minuut geleden</string>
+    <string name="LastSeenMinutes_two">laatst gezien %1$d minuten geleden</string>
+    <string name="LastSeenMinutes_few">laatst gezien %1$d minuten geleden</string>
+    <string name="LastSeenMinutes_many">laatst gezien %1$d minuten geleden</string>
+    <string name="LastSeenMinutes_other">laatst gezien %1$d minuten geleden</string>
+    <string name="LastSeenHours_zero">laatst gezien %1$d uur geleden</string>
+    <string name="LastSeenHours_one">laatst gezien %1$d uur geleden</string>
+    <string name="LastSeenHours_two">laatst gezien %1$d uur geleden</string>
+    <string name="LastSeenHours_few">laatst gezien %1$d uur geleden</string>
+    <string name="LastSeenHours_many">laatst gezien %1$d uur geleden</string>
+    <string name="LastSeenHours_other">laatst gezien %1$d uur geleden</string>
     <!--forwarded messages-->
     <string name="ForwardedMessage_zero">Bijlage: %1$d berichten</string>
     <string name="ForwardedMessage_one">Bijlage: 1 bericht</string>
@@ -946,8 +973,8 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s om %2$s</string>
     <!--update text-->
-    <string name="updateText">Plus Messenger voor Android is bijgewerkt. Nieuw in versie 3.2.0:\n\n- Nieuw, kanalen - een perfecte manier om berichten naar een ongelimiteerd publiek te versturen (vervangt de oude verzendlijsten).\n\nMeer over deze update: https://telegram.org/blog/channels</string>
-    <string name="updateBuild">632</string>
+    <string name="updateText">Plus Messenger voor Android is bijgewerkt. Nieuw in versie 3.2.6:\n\n- Nieuwe animaties en andere visuele verbeteringen\n- Ondersteuning voor nieuwe Emoji\n-Tijdsaanduiding voor laatst gezien gelijk aan iOS\n-Probleemoplossing en andere verbeteringen</string>
+    <string name="updateBuild">655</string>
     <!--Telegram+--><!--
   <string name="updatePlusText"></string>-->
     <string name="TelegramForAndroid">Plus Messenger voor Android</string>
diff --git a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
index 14514e903..0f329535e 100644
--- a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
@@ -129,6 +129,7 @@
     <string name="ChannelAddTo">Adicionar %1$s ao canal?</string>
     <string name="ChannelUserLeftError">Desculpe, esse usuário decidiu sair do grupo, você não pode adicioná-lo novamente.</string>
     <string name="ChannelUserCantAdd">Desculpe, você não pode adicionar esse usuário em canais.</string>
+    <string name="ChannelUserCantAdmin">Desculpe, muitos administradores nesse canal.</string>
     <string name="ChannelUserAddLimit">Desculpe, você só pode adicionar os primeiros 200 membros ao canal. Note que um número ilimitado de pessoas podem entrar via link do canal.</string>
     <string name="ChannelAddedBy">un1 adicionou você ao canal</string>
     <string name="ChannelJoined">Você entrou no canal</string>
@@ -144,14 +145,14 @@
     <string name="ChannelMessageGroupDocument">%1$s enviou um arquivo ao canal %2$s</string>
     <string name="ChannelMessageGroupAudio">%1$s enviou um áudio ao canal %2$s</string>
     <string name="ChannelMessageGroupSticker">%1$s enviou um sticker ao canal %2$s</string>
-    <string name="ChannelMessageNoText">Nova mensagem no canal %1$s</string>
-    <string name="ChannelMessagePhoto">Nova foto no canal %1$s</string>
-    <string name="ChannelMessageVideo">Novo vídeo no canal %1$s</string>
-    <string name="ChannelMessageContact">Contato compartilhado no canal %1$s</string>
-    <string name="ChannelMessageMap">Nova localização compartilhada no canal %1$s</string>
-    <string name="ChannelMessageDocument">Novo arquivo compartilhado no canal %1$s</string>
-    <string name="ChannelMessageAudio">Nova mensagem de voz compartilhada no canal %1$s</string>
-    <string name="ChannelMessageSticker">Novo sticker compartilhado no canal %1$s</string>
+    <string name="ChannelMessageNoText">%1$s postou uma mensagem</string>
+    <string name="ChannelMessagePhoto">%1$s postou uma foto</string>
+    <string name="ChannelMessageVideo">%1$s postou um vídeo</string>
+    <string name="ChannelMessageContact">%1$s postou um contato</string>
+    <string name="ChannelMessageMap">%1$s postou uma foto</string>
+    <string name="ChannelMessageDocument">%1$s postou um arquivo</string>
+    <string name="ChannelMessageAudio">%1$s postou uma mensagem de voz</string>
+    <string name="ChannelMessageSticker">%1$s postou um sticker</string>
     <!--broadcasts-->
     <string name="NewBroadcastList">Nova Lista de Transmissão</string>
     <string name="EnterListName">Digite o nome da lista</string>
@@ -236,6 +237,7 @@
     <string name="ReportSpamAlertGroup">Você tem certeza que deseja reportar esse grupo por spam?</string>
     <string name="NobodyLikesSpam1">Desculpe, você pode enviar mensagens somente para contatos mútuos no momento.</string>
     <string name="NobodyLikesSpam2">Desculpe, você só pode adicionar contatos mútuos à grupos no momento.</string>
+    <string name="NobodyLikesSpamUrl">https://telegram.org/faq/br#no-consigo-enviar-mensagens-para-no-contatos</string>
     <string name="MoreInfo">Mais informações</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s estabeleceu o tempo de autodestruição para %2$s </string>
@@ -286,6 +288,7 @@
     <string name="Online">online</string>
     <string name="LastSeen">visto</string>
     <string name="LastSeenDate">visto</string>
+    <string name="LastSeenNow">visto agora mesmo</string>
     <string name="InviteFriends">Convidar Amigos</string>
     <string name="GlobalSearch">BUSCA GLOBAL</string>
     <string name="Lately">visto recentemente</string>
@@ -298,7 +301,7 @@
     <string name="EnterGroupNamePlaceholder">Digite o nome do grupo</string>
     <string name="GroupName">Nome do grupo</string>
     <string name="MembersCount">%1$d/%2$d membros</string>
-    <string name="JoinToGroup">Você deseja entrar no chat \'%1$s1?</string>
+    <string name="JoinToGroup">Você deseja entrar no chat \'%1$s\'?</string>
     <string name="JoinToGroupErrorFull">Desculpe, este grupo já está lotado.</string>
     <string name="JoinToGroupErrorNotExist">Desculpe, esse chat não existe.</string>
     <string name="LinkCopied">Link copiado para área de transferência</string>
@@ -490,11 +493,17 @@
     <string name="AutoLockInfo">Requisitar senha se estiver ausente por muito tempo.</string>
     <string name="AutoLockInTime">em %1$s</string>
     <string name="AutoLockDisabled">Desativado</string>
+    <string name="UnlockFingerprint">Desbloquear com Impressão Digital</string>
+    <string name="FingerprintInfo">Confirme a impressão digital para continuar</string>
+    <string name="FingerprintHelp">Toque o sensor</string>
+    <string name="FingerprintNotRecognized">Impressão digital não reconhecida.</string>
     <!--media view-->
     <string name="NoMedia">Compartilhar fotos e vídeos no chat e acessá-los em qualquer um de seus dispositivos.</string>
     <string name="DocumentsTitle">Arquivos Compartilhados</string>
     <string name="SharedMediaTitle">Mídia Compartilhada</string>
     <string name="LinksTitle">Links Compartilhados</string>
+    <string name="AudioTitle">Música Compartilhada</string>
+    <string name="NoSharedAudio">Compartilhe músicas nesse chat e os acesse de qualquer um de seus dispositivos.</string>
     <string name="NoSharedFiles">Compartilhar arquivos e documentos no chat e acessá-los de qualquer um de seus dispositivos.</string>
     <string name="NoSharedLinks">Compartilhe links nesse chat e os acesse de qualquer um de seus dispositivos</string>
     <!--map view-->
@@ -742,6 +751,12 @@
     <string name="FeatureUnavailable">Desculpe, esta funcionalidade não está disponível para seu país.</string>
     <string name="NoUsernameFound">Não há conta do Telegram com esse nome de usuário</string>
     <string name="BotCantJoinGroups">Esse bot não pode entrar em grupos.</string>
+    <!--permissions-->
+    <string name="PermissionContacts">Telegram precisa acessar seus contatos para que você possa se conectar aos seus amigos em todos os seus dispositivos.</string>
+    <string name="PermissionStorage">Telegram precisa acessar seu armazenamento para que você possa enviar e salvar fotos, vídeos, músicas e outras mídias.</string>
+    <string name="PermissionNoAudio">Telegram precisa acessar seu microfone para que você possa enviar mensagens de voz.</string>
+    <string name="PermissionNoLocation">Telegram precisa acessar sua localização para que você possa compartilhar com seus amigos.</string>
+    <string name="PermissionOpenSettings">CONFIGURAÇÕES</string>
     <!--Intro view-->
     <string name="Page1Title">Plus Messenger</string>
     <string name="Page2Title">Rápido</string>
@@ -879,6 +894,18 @@
     <string name="Photos_few">%1$d fotos</string>
     <string name="Photos_many">%1$d fotos</string>
     <string name="Photos_other">%1$d fotos</string>
+    <string name="LastSeenMinutes_zero">visto há %1$d minutos</string>
+    <string name="LastSeenMinutes_one">visto há %1$d minuto</string>
+    <string name="LastSeenMinutes_two">visto há %1$d minutos</string>
+    <string name="LastSeenMinutes_few">visto há %1$d minutos</string>
+    <string name="LastSeenMinutes_many">visto há %1$d minutos</string>
+    <string name="LastSeenMinutes_other">visto há %1$d minutos</string>
+    <string name="LastSeenHours_zero">visto há %1$d horas</string>
+    <string name="LastSeenHours_one">visto há %1$d hora</string>
+    <string name="LastSeenHours_two">visto há %1$d horas</string>
+    <string name="LastSeenHours_few">visto há %1$d horas</string>
+    <string name="LastSeenHours_many">visto há %1$d horas</string>
+    <string name="LastSeenHours_other">visto há %1$d horas</string>
     <!--forwarded messages-->
     <string name="ForwardedMessage_zero">%1$d mensagens encaminhadas</string>
     <string name="ForwardedMessage_one">Mensagem encaminhada</string>
@@ -946,11 +973,11 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s às %2$s</string>
     <!--update text-->
-    <string name="updateText">Plus Messenger para Android foi atualizado. Novidade na versão 3.2.0:\n\n- Introduzindo Canais – Uma grande nova maneira de transmitir suas mensagens, com audiência ilimitada (substitui as antigas Transmissões).\n\nMais sobre a atualização: https://telegram.org/blog/channels</string>
-    <string name="updateBuild">632</string>
-    <!--Telegram+--><!--
+    <string name="updateText">Plus Messenger para Android foi atualizado. Novidades na versão 3.2.6:\n\n- Novas animações e melhorias no visual\n- Suporte para novos emojis\n- Outras melhorias e resoluções de bugs</string>
+    <string name="updateBuild">655</string>
+    <!--Telegram+-->
   <string name="updatePlusText">
-\n\nNovidades ne versão 3.2.2.1:\n\n- Agora o  papel de parede pode ser alterado pela tela de chat\n- Melhorias no método de aplicação do papel de parede\n- Nome de usuário é copiado para o clipboard se clicado na tela de perfil\n- Correções de erros</string>-->
+\n\nNovidades na versão 3.2.6.0:\n\n- Correções de erros</string>
     <string name="TelegramForAndroid">Plus Messenger para Android</string>
     <string name="Theming">Personalização</string>
   <string name="colorHexInvalid">Código de cor HEX inválido!</string>
@@ -1101,4 +1128,11 @@
   <string name="Copied">%s copiado para o clipboard</string>
   <string name="JoinChannel">
 \n\nJunte-se ao canal oficial do Plus Messenger: https://telegram.me/plusmsn</string>
+  <string name="DownloadThemes">Baixar Temas</string>
+  <string name="OfficialChannel">Canal Oficial</string>
+  <string name="DialogsSettings">Diálogos</string>
+  <string name="ClickOnContactPic">Clique na foto do contato</string>
+  <string name="ClickOnGroupPic">Clique na foto do grupo</string>
+  <string name="ShowProfile">Perfil</string>
+  <string name="ShowPics">Fotos de Perfil</string>
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
index 55254e058..57eddce4a 100644
--- a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
@@ -132,6 +132,7 @@
     <string name="ChannelAddTo">Adicionar %1$s ao canal?</string>
     <string name="ChannelUserLeftError">Desculpe, esse usuário decidiu sair do grupo, você não pode adicioná-lo novamente.</string>
     <string name="ChannelUserCantAdd">Desculpe, você não pode adicionar esse usuário em canais.</string>
+    <string name="ChannelUserCantAdmin">Desculpe, muitos administradores nesse canal.</string>
     <string name="ChannelUserAddLimit">Desculpe, você só pode adicionar os primeiros 200 membros ao canal. Note que um número ilimitado de pessoas podem entrar via link do canal.</string>
     <string name="ChannelAddedBy">un1 adicionou você ao canal</string>
     <string name="ChannelJoined">Você entrou no canal</string>
@@ -147,14 +148,14 @@
     <string name="ChannelMessageGroupDocument">%1$s enviou um arquivo ao canal %2$s</string>
     <string name="ChannelMessageGroupAudio">%1$s enviou um áudio ao canal %2$s</string>
     <string name="ChannelMessageGroupSticker">%1$s enviou um sticker ao canal %2$s</string>
-    <string name="ChannelMessageNoText">Nova mensagem no canal %1$s</string>
-    <string name="ChannelMessagePhoto">Nova foto no canal %1$s</string>
-    <string name="ChannelMessageVideo">Novo vídeo no canal %1$s</string>
-    <string name="ChannelMessageContact">Contato compartilhado no canal %1$s</string>
-    <string name="ChannelMessageMap">Nova localização compartilhada no canal %1$s</string>
-    <string name="ChannelMessageDocument">Novo arquivo compartilhado no canal %1$s</string>
-    <string name="ChannelMessageAudio">Nova mensagem de voz compartilhada no canal %1$s</string>
-    <string name="ChannelMessageSticker">Novo sticker compartilhado no canal %1$s</string>
+    <string name="ChannelMessageNoText">%1$s postou uma mensagem</string>
+    <string name="ChannelMessagePhoto">%1$s postou uma foto</string>
+    <string name="ChannelMessageVideo">%1$s postou um vídeo</string>
+    <string name="ChannelMessageContact">%1$s postou um contato</string>
+    <string name="ChannelMessageMap">%1$s postou uma foto</string>
+    <string name="ChannelMessageDocument">%1$s postou um arquivo</string>
+    <string name="ChannelMessageAudio">%1$s postou uma mensagem de voz</string>
+    <string name="ChannelMessageSticker">%1$s postou um sticker</string>
     <!--broadcasts-->
     <string name="NewBroadcastList">Nova Lista de Transmissão</string>
     <string name="EnterListName">Digite o nome da lista</string>
@@ -239,6 +240,7 @@
     <string name="ReportSpamAlertGroup">Você tem certeza que deseja reportar esse grupo por spam?</string>
     <string name="NobodyLikesSpam1">Desculpe, você pode enviar mensagens somente para contatos mútuos no momento.</string>
     <string name="NobodyLikesSpam2">Desculpe, você só pode adicionar contatos mútuos à grupos no momento.</string>
+    <string name="NobodyLikesSpamUrl">https://telegram.org/faq/br#no-consigo-enviar-mensagens-para-no-contatos</string>
     <string name="MoreInfo">Mais informações</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s estabeleceu o tempo de autodestruição para %2$s </string>
@@ -289,6 +291,7 @@
     <string name="Online">online</string>
     <string name="LastSeen">visto</string>
     <string name="LastSeenDate">visto</string>
+    <string name="LastSeenNow">visto agora mesmo</string>
     <string name="InviteFriends">Convidar Amigos</string>
     <string name="GlobalSearch">BUSCA GLOBAL</string>
     <string name="Lately">visto recentemente</string>
@@ -301,7 +304,7 @@
     <string name="EnterGroupNamePlaceholder">Digite o nome do grupo</string>
     <string name="GroupName">Nome do grupo</string>
     <string name="MembersCount">%1$d/%2$d membros</string>
-    <string name="JoinToGroup">Você deseja entrar no chat \'%1$s1?</string>
+    <string name="JoinToGroup">Você deseja entrar no chat \'%1$s\'?</string>
     <string name="JoinToGroupErrorFull">Desculpe, este grupo já está lotado.</string>
     <string name="JoinToGroupErrorNotExist">Desculpe, esse chat não existe.</string>
     <string name="LinkCopied">Link copiado para área de transferência</string>
@@ -493,11 +496,17 @@
     <string name="AutoLockInfo">Requisitar senha se estiver ausente por muito tempo.</string>
     <string name="AutoLockInTime">em %1$s</string>
     <string name="AutoLockDisabled">Desativado</string>
+    <string name="UnlockFingerprint">Desbloquear com Impressão Digital</string>
+    <string name="FingerprintInfo">Confirme a impressão digital para continuar</string>
+    <string name="FingerprintHelp">Toque o sensor</string>
+    <string name="FingerprintNotRecognized">Impressão digital não reconhecida.</string>
     <!--media view-->
     <string name="NoMedia">Compartilhar fotos e vídeos no chat e acessá-los em qualquer um de seus dispositivos.</string>
     <string name="DocumentsTitle">Arquivos Compartilhados</string>
     <string name="SharedMediaTitle">Mídia Compartilhada</string>
     <string name="LinksTitle">Links Compartilhados</string>
+    <string name="AudioTitle">Música Compartilhada</string>
+    <string name="NoSharedAudio">Compartilhe músicas nesse chat e os acesse de qualquer um de seus dispositivos.</string>
     <string name="NoSharedFiles">Compartilhar arquivos e documentos no chat e acessá-los de qualquer um de seus dispositivos.</string>
     <string name="NoSharedLinks">Compartilhe links nesse chat e os acesse de qualquer um de seus dispositivos</string>
     <!--map view-->
@@ -745,6 +754,12 @@
     <string name="FeatureUnavailable">Desculpe, esta funcionalidade não está disponível para seu país.</string>
     <string name="NoUsernameFound">Não há conta do Telegram com esse nome de usuário</string>
     <string name="BotCantJoinGroups">Esse bot não pode entrar em grupos.</string>
+    <!--permissions-->
+    <string name="PermissionContacts">Telegram precisa acessar seus contatos para que você possa se conectar aos seus amigos em todos os seus dispositivos.</string>
+    <string name="PermissionStorage">Telegram precisa acessar seu armazenamento para que você possa enviar e salvar fotos, vídeos, músicas e outras mídias.</string>
+    <string name="PermissionNoAudio">Telegram precisa acessar seu microfone para que você possa enviar mensagens de voz.</string>
+    <string name="PermissionNoLocation">Telegram precisa acessar sua localização para que você possa compartilhar com seus amigos.</string>
+    <string name="PermissionOpenSettings">CONFIGURAÇÕES</string>
     <!--Intro view-->
     <string name="Page1Title">Plus Messenger</string>
     <string name="Page2Title">Rápido</string>
@@ -882,6 +897,18 @@
     <string name="Photos_few">%1$d fotos</string>
     <string name="Photos_many">%1$d fotos</string>
     <string name="Photos_other">%1$d fotos</string>
+    <string name="LastSeenMinutes_zero">visto há %1$d minutos</string>
+    <string name="LastSeenMinutes_one">visto há %1$d minuto</string>
+    <string name="LastSeenMinutes_two">visto há %1$d minutos</string>
+    <string name="LastSeenMinutes_few">visto há %1$d minutos</string>
+    <string name="LastSeenMinutes_many">visto há %1$d minutos</string>
+    <string name="LastSeenMinutes_other">visto há %1$d minutos</string>
+    <string name="LastSeenHours_zero">visto há %1$d horas</string>
+    <string name="LastSeenHours_one">visto há %1$d hora</string>
+    <string name="LastSeenHours_two">visto há %1$d horas</string>
+    <string name="LastSeenHours_few">visto há %1$d horas</string>
+    <string name="LastSeenHours_many">visto há %1$d horas</string>
+    <string name="LastSeenHours_other">visto há %1$d horas</string>
     <!--forwarded messages-->
     <string name="ForwardedMessage_zero">%1$d mensagens encaminhadas</string>
     <string name="ForwardedMessage_one">Mensagem encaminhada</string>
@@ -949,8 +976,8 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s às %2$s</string>
     <!--update text-->
-    <string name="updateText">Plus Messenger para Android foi atualizado. Novidade na versão 3.2.0:\n\n- Introduzindo Canais – Uma grande nova maneira de transmitir suas mensagens, com audiência ilimitada (substitui as antigas Transmissões).\n\nMais sobre a atualização: https://telegram.org/blog/channels</string>
-    <string name="updateBuild">632</string>
+    <string name="updateText">Plus Messenger para Android foi atualizado. Novidades na versão 3.2.6:\n\n- Novas animações e melhorias no visual\n- Suporte para novos emojis\n- Outras melhorias e resoluções de bugs</string>
+    <string name="updateBuild">655</string>
     <!--Telegram+-->
   <string name="TelegramForAndroid">Plus Messenger para Android</string>
   <string name="Theming">Temas</string>
diff --git a/TMessagesProj/src/main/res/values-ru/strings.xml b/TMessagesProj/src/main/res/values-ru/strings.xml
index 3e503089e..21c56f99f 100644
--- a/TMessagesProj/src/main/res/values-ru/strings.xml
+++ b/TMessagesProj/src/main/res/values-ru/strings.xml
@@ -129,6 +129,7 @@
   <string name="ChannelAddTo">Добавить пользователя %1$s на канал?</string>
   <string name="ChannelUserLeftError">Извините, этот пользователь решил покинуть данную группу, поэтому вы не можете пригласить его обратно.</string>
   <string name="ChannelUserCantAdd">Извините, вы не можете добавить этого пользователя на каналы.</string>
+  <string name="ChannelUserCantAdmin">Извините, у этого канала слишком много администраторов.</string>
   <string name="ChannelUserAddLimit">Извините, вы можете добавлять только первых 200 участников на канал. Заметьте, что неограниченное количество людей может присоединиться по ссылке канала.</string>
   <string name="ChannelAddedBy">un1 добавил(а) вас на этот канал</string>
   <string name="ChannelJoined">Вы присоединились к этому каналу</string>
@@ -144,14 +145,14 @@
   <string name="ChannelMessageGroupDocument">%1$s опубликовал(а) файл на канале %2$s</string>
   <string name="ChannelMessageGroupAudio">%1$s опубликовал(а) аудио на канале %2$s</string>
   <string name="ChannelMessageGroupSticker">%1$s опубликовал(а) стикер на канале %2$s</string>
-  <string name="ChannelMessageNoText">Новое сообщение на канале %1$s</string>
-  <string name="ChannelMessagePhoto">Новое фото на канале %1$s</string>
-  <string name="ChannelMessageVideo">Новое видео на канале %1$s</string>
-  <string name="ChannelMessageContact">На канале %1$s поделились контактом</string>
-  <string name="ChannelMessageMap">На канале %1$s поделились новым расположением</string>
-  <string name="ChannelMessageDocument">На канале %1$s поделились новым файлом</string>
-  <string name="ChannelMessageAudio">На канале %1$s поделились новым голосовым сообщением</string>
-  <string name="ChannelMessageSticker">На канале %1$s поделились новым стикером</string>
+  <string name="ChannelMessageNoText">%1$s опубликовал сообщение</string>
+  <string name="ChannelMessagePhoto">%1$s опубликовал фото</string>
+  <string name="ChannelMessageVideo">%1$s опубликовал видео</string>
+  <string name="ChannelMessageContact">%1$s опубликовал контакт</string>
+  <string name="ChannelMessageMap">%1$s опубликовал расположение</string>
+  <string name="ChannelMessageDocument">%1$s опубликовал файл</string>
+  <string name="ChannelMessageAudio">%1$s опубликовал голосовое сообщение</string>
+  <string name="ChannelMessageSticker">%1$s опубликовал стикер</string>
   <!--broadcasts-->
   <string name="NewBroadcastList">Новый список рассылки</string>
   <string name="EnterListName">Введите имя списка</string>
@@ -236,6 +237,7 @@
   <string name="ReportSpamAlertGroup">Уверены, что хотите сообщить о спаме от этой группы?</string>
   <string name="NobodyLikesSpam1">Извините, в данный момент вы можете отправлять сообщения только взаимным контактам.</string>
   <string name="NobodyLikesSpam2">Извините, в данный момент вы можете добавлять в группы только взаимные контакты.</string>
+  <string name="NobodyLikesSpamUrl">https://telegram.org/faq#can-39t-send-messages-to-non-contacts</string>
   <string name="MoreInfo">Больше информации</string>
   <!--notification-->
   <string name="MessageLifetimeChanged">%1$s поставил(а) таймер самоуничтожения на %2$s</string>
@@ -286,6 +288,7 @@
   <string name="Online">в сети</string>
   <string name="LastSeen">заходил(а)</string>
   <string name="LastSeenDate">заходил(а)</string>
+  <string name="LastSeenNow">заходил(а) только что</string>
   <string name="InviteFriends">Пригласить друзей</string>
   <string name="GlobalSearch">ГЛОБАЛЬНЫЙ ПОИСК</string>
   <string name="Lately">заходил(а) недавно</string>
@@ -490,13 +493,19 @@
   <string name="AutoLockInfo">Запрашивать код доступа при отсутствии в течение определённого времени.</string>
   <string name="AutoLockInTime">через %1$s</string>
   <string name="AutoLockDisabled">Отключена</string>
+  <string name="UnlockFingerprint">Разблокируйте отпечатком пальца</string>
+  <string name="FingerprintInfo">Подтвердите отпечаток пальца для продолжения</string>
+  <string name="FingerprintHelp">Сканер отпечатков пальцев</string>
+  <string name="FingerprintNotRecognized">Отпечаток пальца не распознан. Попробуйте снова</string>
   <!--media view-->
   <string name="NoMedia">Поделитесь фото и видео в этом чате и получите доступ к ним на любом из ваших устройств.</string>
   <string name="DocumentsTitle">Общие файлы</string>
   <string name="SharedMediaTitle">Общие медиа</string>
   <string name="LinksTitle">Общие ссылки</string>
-  <string name="NoSharedFiles">Поделитесь файлами и документами в этом чате и получите доступ к ним на любом из ваших устройств.</string>
-  <string name="NoSharedLinks">Делитесь ссылками в этом чате и получайте к ним доступ с любого из ваших устройств.</string>
+  <string name="AudioTitle">Общая музыка</string>
+  <string name="NoSharedAudio">Делитесь музыкой в этом чате и получайте доступ к ней с любого из ваших устройств.</string>
+  <string name="NoSharedFiles">Делитесь файлами и документами в этом чате и получайте доступ к ним с любого из ваших устройств.</string>
+  <string name="NoSharedLinks">Делитесь ссылками в этом чате и получайте доступ к ним с любого из ваших устройств.</string>
   <!--map view-->
   <string name="Map">Карта</string>
   <string name="Satellite">Спутник</string>
@@ -742,6 +751,12 @@
   <string name="FeatureUnavailable">Извините, эта возможность пока не доступна в вашей стране.</string>
   <string name="NoUsernameFound">Нет аккаунта Telegram с таким именем.</string>
   <string name="BotCantJoinGroups">Этот бот не может вступать в группы.</string>
+  <!--permissions-->
+  <string name="PermissionContacts">Telegram необходим доступ к вашим контактам, чтобы вы могли оставаться на связи с вашими друзьями с любого устройства.</string>
+  <string name="PermissionStorage">Telegram необходим доступ к вашему хранилищу файлов, чтобы вы могли отправлять и сохранять фото, видео, музыку и прочее медиа.</string>
+  <string name="PermissionNoAudio">Telegram необходим доступ к вашему микрофону, чтобы вы могли отправлять голосовые сообщения</string>
+  <string name="PermissionNoLocation">Telegram необходим доступ к вашему расположению, чтобы вы могли делиться им со своими друзьями.</string>
+  <string name="PermissionOpenSettings">НАСТРОЙКИ</string>
   <!--Intro view-->
   <string name="Page1Title">Plus Messenger</string>
   <string name="Page2Title">Быстрый</string>
@@ -879,6 +894,18 @@
   <string name="Photos_few">%1$d фото</string>
   <string name="Photos_many">%1$d фото</string>
   <string name="Photos_other">%1$d фото</string>
+  <string name="LastSeenMinutes_zero">заходил(а) %1$d минут назад</string>
+  <string name="LastSeenMinutes_one">заходил(а) %1$d минуту назад</string>
+  <string name="LastSeenMinutes_two">заходил(а) %1$d минуты назад</string>
+  <string name="LastSeenMinutes_few">заходил(а) %1$d минуты назад</string>
+  <string name="LastSeenMinutes_many">заходил(а) %1$d минут назад</string>
+  <string name="LastSeenMinutes_other">заходил(а) %1$d минут назад</string>
+  <string name="LastSeenHours_zero">заходил(а) %1$d часов назад</string>
+  <string name="LastSeenHours_one">заходил(а) %1$d час назад</string>
+  <string name="LastSeenHours_two">заходил(а) %1$d часа назад</string>
+  <string name="LastSeenHours_few">заходил(а) %1$d часа назад</string>
+  <string name="LastSeenHours_many">заходил(а) %1$d часов назад</string>
+  <string name="LastSeenHours_other">заходил(а) %1$d часов назад</string>
   <!--forwarded messages-->
   <string name="ForwardedMessage_zero">%1$d пересланных сообщений</string>
   <string name="ForwardedMessage_one">Пересланное сообщение</string>
@@ -946,11 +973,11 @@
   <string name="formatterDay12H">h:mm a</string>
   <string name="formatDateAtTime">%1$s в %2$s</string>
   <!--update text-->
-  <string name="updateText">Telegram для Android обновлён. Новое в версии 3.2.0:\n\n- Представляем Каналы – новый отличный способ транслировать свои сообщения неограниченной аудитории (заменяют старые списки рассылок).\n\nЧитать больше: https://telegram.org/blog/channels</string>
-  <string name="updateBuild">632</string>
-    <!--Telegram+--><!--
+  <string name="updateText">Telegram для Android обновлён. Новое в версии 3.2.5:\n\n- Новые анимации и множество визуальных усовершенствований\n- Поддержка новых эмодзи\n- Прочие улучшения и исправления ошибок</string>
+  <string name="updateBuild">655</string>
+    <!--Telegram+-->
   <string name="updatePlusText">
-\n\nНовое в версии 3.2.2.2:\n\n- Обои можно изменить не покидая экран чата\n- Улучшен способ использования обоев из тем\n- Имя пользователя копируется в буфер обмена при касании на экране профиля\n- Исправление ошибок</string>-->
+\n\nНовое в версииn 3.2.6.0:\n\n- Исправление ошибок</string>
   <string name="TelegramForAndroid">Plus Messenger для Android</string>
   <string name="Theming">Кастомизация</string>
   <string name="colorHexInvalid">Неверный hex-код цвета!</string>
@@ -1101,4 +1128,11 @@
   <string name="Copied">%s скопировано в буфер обмена</string>
   <string name="JoinChannel">
 \n\nПрисоединяйтесь к официальному каналу Plus Messenger: https://telegram.me/plusmsn</string>
+  <string name="DownloadThemes">Загрузить темы</string>
+  <string name="OfficialChannel">Официальный канал</string>
+  <string name="DialogsSettings">Диалоги</string>
+  <string name="ClickOnContactPic">Касание аватарки контакта</string>
+  <string name="ClickOnGroupPic">Касание аватарки группы</string>
+  <string name="ShowProfile">Профиль</string>
+  <string name="ShowPics">Аватарки</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-tr/strings.xml b/TMessagesProj/src/main/res/values-tr/strings.xml
index 1e3f15a83..27f8e93be 100644
--- a/TMessagesProj/src/main/res/values-tr/strings.xml
+++ b/TMessagesProj/src/main/res/values-tr/strings.xml
@@ -830,7 +830,7 @@
   <string name="formatDateAtTime">%1$s %2$s</string>
   <!--update text--><!--
   <string name="updateText">Plus Messenger için temalar indirin ve uygulayın. Hergün yeni temalar ekleniyor:\n https://play.google.com/store/apps/details?id=es.rafalense.themes</string>-->
-  <string name="updateBuild">632</string>
+  <string name="updateBuild">655</string>
   <!--Telegram+--><!--
   <string name="updatePlusText">
 \n\n3.2.2.1\'deki Yenilikler:\n\n- Artık duvarkağıdı direkt olarak sohbet ekranından değişebiliyor\n- Tema duvarkağıtlarının uygulama yönteminde geliştirmeler yapıldı\n- Eğer profil ekranında işaretlenmişse kullanıcı adı kopyalanabilir\n- Hata düzeltmeleri</string>-->
diff --git a/TMessagesProj/src/main/res/values-v21/styles.xml b/TMessagesProj/src/main/res/values-v21/styles.xml
index 9f4475941..73fcd609e 100644
--- a/TMessagesProj/src/main/res/values-v21/styles.xml
+++ b/TMessagesProj/src/main/res/values-v21/styles.xml
@@ -1,9 +1,9 @@
 <!--
-  ~ This is the source code of Telegram for Android v. 1.7.x.
+  ~ This is the source code of Telegram for Android v. 3.x.x.
   ~ It is licensed under GNU GPL v. 2 or later.
   ~ You should have received a copy of the license in this archive (see LICENSE).
   ~
-  ~ Copyright Nikolai Kudashov, 2013-2014.
+  ~ Copyright Nikolai Kudashov, 2013-2015.
   -->
 
 <resources
diff --git a/TMessagesProj/src/main/res/values-zh-rCN/strings.xml b/TMessagesProj/src/main/res/values-zh-rCN/strings.xml
index e926c9a7a..127e9ec4c 100644
--- a/TMessagesProj/src/main/res/values-zh-rCN/strings.xml
+++ b/TMessagesProj/src/main/res/values-zh-rCN/strings.xml
@@ -897,7 +897,7 @@
   <string name="formatDateAtTime">%1$s 的 %2$s</string>
   <!--update text--><!--
   <string name="updateText">Android 版的 Plus Messenger 已更新。最新版本 3.1 的新增功能有：\n\n- 在特定聊天中搜索消息内容。\n- 全新设计的附件选择菜单。从附件选择菜单中直接发送联系人资料或语音文件。\n- 改进的程序内媒体播放功能 （YouTube, Vimoe, Soundcloud 等）, 新播放器适用于大型语音文件。\n\n更多更新请查看：\nhttps://telegram.org/blog/search-and-media</string>-->
-  <string name="updateBuild">632</string>
+  <string name="updateBuild">655</string>
   <!--Telegram+--><!--
   <string name="updatePlusText">\n\n在 3.0.1.3 版的新功能：\n\n- 添加设置使用手机字体选项\n- 添加聊天/群组聊天内搜索聊天记录选项\n- 在设置/主题调整界面里添加标头颜色、标题颜色和标头图标颜色的设置\n- 添加主界面群组图标颜色的设置\n- 添加导航栏中头像大小的设置\n- 错误修复</string>-->
   <string name="TelegramForAndroid">Plus Messenger for Android</string>
@@ -1050,4 +1050,11 @@
   <string name="Copied">%s 已复制到剪贴板</string>
   <string name="JoinChannel">
 \n\n加入 Plus Messenger 官方频道： https://telegram.me/plusmsn</string>
+  <string name="DownloadThemes">下载主题</string>
+  <string name="OfficialChannel">官方频道</string>
+  <string name="DialogsSettings">对话框</string>
+  <string name="ClickOnContactPic">点击联系人图片</string>
+  <string name="ClickOnGroupPic">点击群组图片</string>
+  <string name="ShowProfile">个人资料</string>
+  <string name="ShowPics">个人资料图片</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-zh-rTW/strings.xml b/TMessagesProj/src/main/res/values-zh-rTW/strings.xml
index 84815e9b6..b438eb2cf 100644
--- a/TMessagesProj/src/main/res/values-zh-rTW/strings.xml
+++ b/TMessagesProj/src/main/res/values-zh-rTW/strings.xml
@@ -945,9 +945,9 @@
     <string name="formatterDay24H">HH:mm</string>
     <string name="formatterDay12H">a h:mm</string>
   <string name="formatDateAtTime">於時間 %1$s  %2$s</string>
-  <!--update text-->
+  <!--update text--><!--
   <string name="updateText">Android 版的 Telegram 已經更新。在版本 3.2.0 中的新功能：\n\n- 引進頻道 – 用來將您的訊息向無限觀眾廣播的新方式 (取代舊式的廣播)。\n\n了解更多：https://telegram.org/blog/channels</string>
-  <string name="updateBuild">632</string>
+  <string name="updateBuild">655</string>-->
   <!--Telegram+--><!--
   <string name="updatePlusText">
 \n\n在 3.1.1.9 版的新功能：\n\n- 新的模組在聊天畫面顯示擁有的大頭照\n- 加入新的泡泡邊緣 (感謝 Edwin Macalopu)\n- 錯誤修復</string>-->
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index f605a5a4c..d9c5d2de0 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -1,4 +1,7 @@
-<?xml version='1.0' encoding='UTF-8'?>
+<?xml version="1.0" encoding="utf-8"?>
+
+
+
 <resources>
     <string name="AppName">Plus Messenger</string>
     <string name="ShortAppName">Plus</string>
@@ -130,6 +133,7 @@
     <string name="ChannelAddTo">Add %1$s to the channel?</string>
     <string name="ChannelUserLeftError">Sorry, this user decided to leave this group, so you cannot invite them back here.</string>
     <string name="ChannelUserCantAdd">Sorry, you can\'t add this user to channels.</string>
+    <string name="ChannelUserCantAdmin">Sorry, too many admins in this channel.</string>
     <string name="ChannelUserAddLimit">Sorry, you can only add the first 200 members to a channel. Note that an unlimited number of people may join via the channel\'s link.</string>
     <string name="ChannelAddedBy">un1 added you to this channel</string>
     <string name="ChannelJoined">You joined the channel</string>
@@ -145,14 +149,14 @@
     <string name="ChannelMessageGroupDocument">%1$s sent a file to the channel %2$s</string>
     <string name="ChannelMessageGroupAudio">%1$s sent an audio to the channel %2$s</string>
     <string name="ChannelMessageGroupSticker">%1$s sent a sticker to the channel %2$s</string>
-    <string name="ChannelMessageNoText">New message in the channel %1$s</string>
-    <string name="ChannelMessagePhoto">New photo in the channel %1$s</string>
-    <string name="ChannelMessageVideo">New video in the channel %1$s</string>
-    <string name="ChannelMessageContact">Contact shared in the channel %1$s</string>
-    <string name="ChannelMessageMap">New location shared in the channel %1$s</string>
-    <string name="ChannelMessageDocument">New file shared in the channel %1$s</string>
-    <string name="ChannelMessageAudio">New voice note shared in the channel %1$s</string>
-    <string name="ChannelMessageSticker">New sticker shared in the channel %1$s</string>
+    <string name="ChannelMessageNoText">%1$s posted a message</string>
+    <string name="ChannelMessagePhoto">%1$s posted a photo</string>
+    <string name="ChannelMessageVideo">%1$s posted a video</string>
+    <string name="ChannelMessageContact">%1$s posted a contact</string>
+    <string name="ChannelMessageMap">%1$s posted a location</string>
+    <string name="ChannelMessageDocument">%1$s posted a file</string>
+    <string name="ChannelMessageAudio">%1$s posted a voice message</string>
+    <string name="ChannelMessageSticker">%1$s posted a sticker</string>
     <!--broadcasts-->
     <string name="NewBroadcastList">New Broadcast List</string>
     <string name="EnterListName">Enter list name</string>
@@ -237,6 +241,7 @@
     <string name="ReportSpamAlertGroup">Are you sure you want to report spam from this group?</string>
     <string name="NobodyLikesSpam1">Sorry, you can only send messages to mutual contacts at the moment.</string>
     <string name="NobodyLikesSpam2">Sorry, you can only add mutual contacts to groups at the moment.</string>
+    <string name="NobodyLikesSpamUrl">https://telegram.org/faq#can-39t-send-messages-to-non-contacts</string>
     <string name="MoreInfo">More info</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s set the self-destruct timer to %2$s</string>
@@ -287,6 +292,7 @@
     <string name="Online">online</string>
     <string name="LastSeen">last seen</string>
     <string name="LastSeenDate">last seen</string>
+    <string name="LastSeenNow">last seen just now</string>
     <string name="InviteFriends">Invite Friends</string>
     <string name="GlobalSearch">GLOBAL SEARCH</string>
     <string name="Lately">last seen recently</string>
@@ -491,11 +497,17 @@
     <string name="AutoLockInfo">Require passcode if away for a time.</string>
     <string name="AutoLockInTime">in %1$s</string>
     <string name="AutoLockDisabled">Disabled</string>
+    <string name="UnlockFingerprint">Unlock with Fingerprint</string>
+    <string name="FingerprintInfo">Confirm fingerprint to continue</string>
+    <string name="FingerprintHelp">Touch sensor</string>
+    <string name="FingerprintNotRecognized">Fingerprint not recognized. Try again</string>
     <!--media view-->
     <string name="NoMedia">Share photos and videos in this chat and access them on any of your devices.</string>
     <string name="DocumentsTitle">Shared Files</string>
     <string name="SharedMediaTitle">Shared Media</string>
     <string name="LinksTitle">Shared Links</string>
+    <string name="AudioTitle">Shared Music</string>
+    <string name="NoSharedAudio">Share music in this chat and access them on any of your devices.</string>
     <string name="NoSharedFiles">Share files and documents in this chat and access them on any of your devices.</string>
     <string name="NoSharedLinks">Share links in this chat and access them on any of your devices.</string>
     <!--map view-->
@@ -743,6 +755,12 @@
     <string name="FeatureUnavailable">Sorry, this feature is currently not available in your country.</string>
     <string name="NoUsernameFound">There is no Telegram account with this username.</string>
     <string name="BotCantJoinGroups">This bot can\'t join groups.</string>
+    <!--permissions-->
+    <string name="PermissionContacts">Telegram needs access to your contacts so that you can connect with your friends across all your devices.</string>
+    <string name="PermissionStorage">Telegram needs access to your storage so that you can send and save photos, videos, music and other media.</string>
+    <string name="PermissionNoAudio">Telegram needs access to your microphone so that you can send voice messages.</string>
+    <string name="PermissionNoLocation">Telegram needs access to your location so that you can share it with your friends.</string>
+    <string name="PermissionOpenSettings">SETTINGS</string>
     <!--Intro view-->
     <string name="Page1Title">Plus Messenger</string>
     <string name="Page2Title">Fast</string>
@@ -880,6 +898,18 @@
     <string name="Photos_few">%1$d photos</string>
     <string name="Photos_many">%1$d photos</string>
     <string name="Photos_other">%1$d photos</string>
+    <string name="LastSeenMinutes_zero">last seen %1$d minutes ago</string>
+    <string name="LastSeenMinutes_one">last seen %1$d minute ago</string>
+    <string name="LastSeenMinutes_two">last seen %1$d minutes ago</string>
+    <string name="LastSeenMinutes_few">last seen %1$d minutes ago</string>
+    <string name="LastSeenMinutes_many">last seen %1$d minutes ago</string>
+    <string name="LastSeenMinutes_other">last seen %1$d minutes ago</string>
+    <string name="LastSeenHours_zero">last seen %1$d hours ago</string>
+    <string name="LastSeenHours_one">last seen %1$d hour ago</string>
+    <string name="LastSeenHours_two">last seen %1$d hours ago</string>
+    <string name="LastSeenHours_few">last seen %1$d hours ago</string>
+    <string name="LastSeenHours_many">last seen %1$d hours ago</string>
+    <string name="LastSeenHours_other">last seen %1$d hours ago</string>
     <!--forwarded messages-->
     <string name="ForwardedMessage_zero">%1$d forwarded messages</string>
     <string name="ForwardedMessage_one">Forwarded message</string>
@@ -947,10 +977,10 @@
     <string name="formatterDay12H">h:mm a</string>
     <string name="formatDateAtTime">%1$s at %2$s</string>
     <!--update text-->
-    <string name="updateText">Telegram for Android has been updated. New in version 3.2.0:\n\n- Introducing Channels – a great new way to broadcast your messages to unlimited audiences (replaces old Broadcasts).\n\nRead more: https://telegram.org/blog/channels</string>
-    <string name="updateBuild">632</string>
+    <string name="updateText">Plus Messenger for Android has been updated. New in version 3.2.6:\n\n- New animations and many visual improvements\n- Support for new emoji\n- Android 6.0 support (Now on Tap - Direct Share - Fingerprint support for Passcodes)\n- Other improvements and bug fixes</string>
+    <string name="updateBuild">655</string>
     <!--Telegram+-->
-    <string name="updatePlusText">\n\nNew in version 3.2.2.2:\n\n- New option in settings to open profile/profile pics when clicking user/group pic in main screen\n- Added gradient option to chat background color\n- Added option to forward link without quoting\n- Added link to official channel in menu\n- Bug fixes</string>
+    <string name="updatePlusText">\n\nNew in version 3.2.6.0:\n\n- Bug fixes</string>
     <string name="TelegramForAndroid">Plus Messenger for Android</string>
     <string name="Theming">Theming</string>
     <string name="colorHexInvalid">Invalid color hex code!</string>
