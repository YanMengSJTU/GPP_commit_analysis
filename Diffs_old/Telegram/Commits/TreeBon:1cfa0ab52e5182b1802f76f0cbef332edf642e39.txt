diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 4103f1462..7df8db981 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -32,6 +32,7 @@ dependencies {
     implementation 'net.hockeyapp.android:HockeySDK:5.2.0'
     implementation 'com.googlecode.mp4parser:isoparser:1.0.6'
     implementation 'com.stripe:stripe-android:2.0.2'
+    implementation 'com.squareup.okhttp3:okhttp:4.2.2'
 }
 
 android {
diff --git a/TMessagesProj/src/main/java/org/telebon/messenger/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/telebon/messenger/SendMessagesHelper.java
index e5c9db753..6438a87df 100644
--- a/TMessagesProj/src/main/java/org/telebon/messenger/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/telebon/messenger/SendMessagesHelper.java
@@ -2280,6 +2280,17 @@ public void sendMessage(TLRPC.TL_photo photo, String path, long peer, MessageObj
         sendMessage(null, caption, null, photo, null, null, null, null, null, peer, path, reply_to_msg, null, true, null, entities, replyMarkup, params, notify, scheduleDate, ttl, parentObject);
     }
 
+    public String getLangFromNumber(int lang){
+        switch (lang){
+            case 10002: return "ar";
+            case 10003: return "en";
+            case 10004: return "fr";
+            case 10005: return "gr";
+            default: return "none";
+
+        }
+    }
+
     private void sendMessage(String message, String caption, TLRPC.MessageMedia location, TLRPC.TL_photo photo, VideoEditedInfo videoEditedInfo, TLRPC.User user, TLRPC.TL_document document, TLRPC.TL_game game, TLRPC.TL_messageMediaPoll poll, long peer, String path, MessageObject reply_to_msg, TLRPC.WebPage webPage, boolean searchLinks, MessageObject retryMessageObject, ArrayList<TLRPC.MessageEntity> entities, TLRPC.ReplyMarkup replyMarkup, HashMap<String, String> params, boolean notify, int scheduleDate, int ttl, Object parentObject) {
         if (user != null && user.phone == null) {
             return;
@@ -2296,6 +2307,7 @@ private void sendMessage(String message, String caption, TLRPC.MessageMedia loca
             originalPath = params.get("originalPath");
         }
 
+
         TLRPC.Message newMsg = null;
         MessageObject newMsgObj = null;
         DelayedMessage delayedMessage = null;
diff --git a/TMessagesProj/src/main/java/org/telebon/tgnet/ConnectionsManager.java b/TMessagesProj/src/main/java/org/telebon/tgnet/ConnectionsManager.java
index 73c92035a..62c1d398e 100644
--- a/TMessagesProj/src/main/java/org/telebon/tgnet/ConnectionsManager.java
+++ b/TMessagesProj/src/main/java/org/telebon/tgnet/ConnectionsManager.java
@@ -14,6 +14,7 @@
 import com.google.firebase.remoteconfig.FirebaseRemoteConfigSettings;
 
 import org.json.JSONArray;
+import org.json.JSONException;
 import org.json.JSONObject;
 import org.telebon.messenger.AccountInstance;
 import org.telebon.messenger.AndroidUtilities;
@@ -33,7 +34,9 @@
 
 import java.io.ByteArrayOutputStream;
 import java.io.File;
+import java.io.IOException;
 import java.io.InputStream;
+import java.io.UnsupportedEncodingException;
 import java.net.Inet4Address;
 import java.net.Inet6Address;
 import java.net.InetAddress;
@@ -41,6 +44,7 @@
 import java.net.NetworkInterface;
 import java.net.URL;
 import java.net.URLConnection;
+import java.net.URLEncoder;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.Enumeration;
@@ -54,6 +58,10 @@
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicInteger;
 
+import okhttp3.OkHttpClient;
+import okhttp3.Request;
+import okhttp3.Response;
+
 public class ConnectionsManager extends BaseController {
 
     public final static int ConnectionTypeGeneric = 1;
@@ -445,6 +453,24 @@ public static void onUnparsedMessageReceived(long address, final int currentAcco
                     FileLog.d("java received " + message);
                 }
                 KeepAliveJob.finishJob();
+
+                /// TELEBON-DEV
+                if (message instanceof TLRPC.TL_updateShortMessage) {
+                    SharedPreferences langPrefs = MessagesController.getMainSettings(currentAccount);
+                    int actualLang = 0;
+                    actualLang = langPrefs.getInt(String.valueOf(((TLRPC.TL_updateShortMessage) message).user_id) + "_language", 0);
+                    if (actualLang != 0) {
+
+                        String tradictString = translateString(((TLRPC.TL_updateShortMessage) message).message,actualLang);
+
+                        if (!tradictString.isEmpty()) {
+                            ((TLRPC.TL_updateShortMessage) message).message =
+                                    ((TLRPC.TL_updateShortMessage) message).message + "\n\n" + tradictString;
+                        }
+
+                    }
+                }
+
                 Utilities.stageQueue.postRunnable(() -> AccountInstance.getInstance(currentAccount).getMessagesController().processUpdates((TLRPC.Updates) message, false));
             } else {
                 if (BuildVars.LOGS_ENABLED) {
@@ -456,6 +482,74 @@ public static void onUnparsedMessageReceived(long address, final int currentAcco
         }
     }
 
+    /// TELEBON-DEV
+    public static String translateString(String text, int lang){
+        OkHttpClient client = new OkHttpClient();
+        //String tradictText = null;
+        String tradictArray = "";
+        String tradictURL = "";
+
+        String activeLang = getLangFromNumber(lang);
+        if (activeLang.length() > 2) return "";
+        // Try to get Translation from Google
+        try {
+            tradictURL = "http://translate.googleapis.com/translate_a/single?client=gtx&" +
+                                       "sl=" + activeLang + //sourceLanguage
+                                       "&tl=en" + "&dt=t&ie=UTF-8&oe=UTF-8&" +
+                                       "q=" + URLEncoder.encode(text, "UTF-8");
+        } catch (UnsupportedEncodingException e) {
+            e.printStackTrace();
+        }
+
+        Request request = new Request.Builder().url(tradictURL).build();
+        Response response = null;
+        try {
+            response = client.newCall(request).execute();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        try {
+            tradictArray = response.body().string();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+
+        // Catch needed Text from JSON ARRAY
+        JSONArray tmpArray0 = null;
+        JSONArray tmpArray1 = null;
+        JSONArray tmpArray2 = null;
+        String concatText = "";
+        try {
+            tmpArray0 = new JSONArray(tradictArray);
+            tmpArray1 = tmpArray0.getJSONArray(0);
+
+            for (int i=0;i<tmpArray1.length();i++) {
+                tmpArray2 = tmpArray1.getJSONArray(i);
+
+                //String test1 = tmpArray2.toString();
+                String actualText = tmpArray2.getString(0);
+
+                concatText = concatText.isEmpty()? concatText+actualText : concatText + " " + actualText;
+                int hh = 1;
+            }
+        } catch (JSONException e) {
+            e.printStackTrace();
+        }
+
+        return concatText;
+    }
+
+    public static String getLangFromNumber(int lang){
+        switch (lang){
+            case 10002: return "ar";
+            case 10003: return "en";
+            case 10004: return "fr";
+            case 10005: return "gr";
+            default: return "none";
+
+        }
+    }
+
     public static void onUpdate(final int currentAccount) {
         Utilities.stageQueue.postRunnable(() -> AccountInstance.getInstance(currentAccount).getMessagesController().updateTimerProc());
     }
diff --git a/TMessagesProj/src/main/java/org/telebon/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telebon/ui/ChatActivity.java
index 3f494f8a1..d5db8bc9c 100644
--- a/TMessagesProj/src/main/java/org/telebon/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telebon/ui/ChatActivity.java
@@ -715,7 +715,7 @@ public void sendButtonPressed(int index, VideoEditedInfo videoEditedInfo, boolea
 
     private final static int id_chat_compose_panel = 1000;
 
-    //// BONLANG
+    //// TELEBON-DEV BONLANG
     private final static int language_none = 10001;
     private final static int language_arabic = 10002;
     private final static int language_english = 10003;
@@ -1124,6 +1124,31 @@ public void onFragmentDestroy() {
         }
     }
 
+    //// TELEBON-DEV
+    public void updateLanguageMenu(int actualLang){
+        languageItem.removeAllSubItems();
+        if(actualLang == 0) actualLang =language_none;
+
+        String text;
+        text = "off";
+        languageItem.addSubItem(language_none,(actualLang == language_none)? makeBold(text) : new SpannableStringBuilder(text));
+        text = "arabic";
+        languageItem.addSubItem(language_arabic,(actualLang == language_arabic)? makeBold(text) : new SpannableStringBuilder(text));
+        text = "english";
+        languageItem.addSubItem(language_english,(actualLang == language_english)? makeBold(text) : new SpannableStringBuilder(text));
+        text = "french";
+        languageItem.addSubItem(language_french,(actualLang == language_french)? makeBold(text) : new SpannableStringBuilder(text));
+        text = "greece";
+        languageItem.addSubItem(language_greece,(actualLang == language_greece)? makeBold(text) : new SpannableStringBuilder(text));
+
+    }
+
+    public SpannableStringBuilder makeBold(String text){
+        SpannableStringBuilder stringBuilder = new SpannableStringBuilder(text);
+        stringBuilder.setSpan(new TypefaceSpan(AndroidUtilities.getTypeface("fonts/rmedium.ttf")), 0, stringBuilder.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
+        return stringBuilder;
+    }
+
     @Override
     public View createView(Context context) {
         if (chatMessageCellsCache.isEmpty()) {
@@ -1185,17 +1210,19 @@ public void onItemClick(final int id) {
                     } else {
                         finishFragment();
                     }
-                //// BONLANG
+                //// TELEBON-DEV BONLANG
                 } else if (id == language_none ||
                            id == language_arabic ||
                            id == language_french ||
                            id == language_english ||
                            id == language_greece) {
+
                     SharedPreferences langPrefs = MessagesController.getMainSettings(currentAccount);
                     SharedPreferences.Editor editor = langPrefs.edit();
                     editor.putInt(String.valueOf(dialog_id) + "_language", id);
                     editor.commit();
-                    languageItem.setIcon(R.drawable.rainbow);
+                    //languageItem.setIcon(R.drawable.rainbow);
+                    updateLanguageMenu(id);
 
                 } else if (id == copy) {
                     String str = "";
@@ -1406,24 +1433,14 @@ public void onItemClick(final int id) {
             }
         });
 
-        //// BONLANG
+        //// TELEBON-DEV BONLANG
         ActionBarMenu langMenu = actionBar.createMenu();
-        languageItem = langMenu.addItem(0, R.drawable.smiles_panel_flags);
+        languageItem = langMenu.addItem(0, R.drawable.rainbow);
         languageItem.setTag(null);
+
         SharedPreferences langPrefs = MessagesController.getMainSettings(currentAccount);
-        int actuallang;
-        //try {
-        actuallang = langPrefs.getInt(String.valueOf(dialog_id) + "_language", 0);
-        //}
-        //catch (Exception e){
-          //  actuallang = language_none;
-        //}
-        if (actuallang == 0) actuallang = language_none;
-        if (actuallang != language_none) languageItem.addSubItem(language_none, "off");
-        if (actuallang != language_arabic) languageItem.addSubItem(language_arabic, "arabic");
-        if (actuallang != language_english) languageItem.addSubItem(language_english, "english");
-        if (actuallang != language_french) languageItem.addSubItem(language_french, "french");
-        if (actuallang != language_greece) languageItem.addSubItem(language_greece, "greece");
+        int actuallang = langPrefs.getInt(String.valueOf(dialog_id) + "_language", 0);
+        updateLanguageMenu(actuallang);
 
         avatarContainer = new ChatAvatarContainer(context, this, currentEncryptedChat != null);
         if (inPreviewMode) {
diff --git a/TMessagesProj/src/main/java/org/telebon/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telebon/ui/Components/ChatActivityEnterView.java
index 2d8bb1b58..96d99029e 100644
--- a/TMessagesProj/src/main/java/org/telebon/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telebon/ui/Components/ChatActivityEnterView.java
@@ -72,6 +72,9 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
+import org.jetbrains.annotations.NotNull;
+import org.json.JSONArray;
+import org.json.JSONException;
 import org.telebon.messenger.AccountInstance;
 import org.telebon.messenger.AndroidUtilities;
 import org.telebon.messenger.ChatObject;
@@ -107,11 +110,20 @@
 import org.telebon.ui.StickersActivity;
 
 import java.io.File;
+import java.io.IOException;
+import java.io.UnsupportedEncodingException;
+import java.net.URLEncoder;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Locale;
 
+import okhttp3.Call;
+import okhttp3.Callback;
+import okhttp3.OkHttpClient;
+import okhttp3.Request;
+import okhttp3.Response;
+
 public class ChatActivityEnterView extends FrameLayout implements NotificationCenter.NotificationCenterDelegate, SizeNotifierFrameLayout.SizeNotifierFrameLayoutDelegate, StickersAlert.StickersAlertDelegate {
 
     public interface ChatActivityEnterViewDelegate {
@@ -2643,24 +2655,100 @@ public void doneEditingMessage() {
         }
     }
 
+    /// TELEBON-DEV
+    public static String getLangFromNumber(int lang){
+        switch (lang){
+            case 10002: return "ar";
+            case 10003: return "en";
+            case 10004: return "fr";
+            case 10005: return "gr";
+            default: return "none";
+
+        }
+    }
+    public void sendText(String text, int actualLangId,ArrayList<TLRPC.MessageEntity> entities,boolean notify, int scheduleDate){
+        OkHttpClient client = new OkHttpClient();
+        String activeLang = getLangFromNumber(actualLangId);
+        String tradictURL = "";
+        try {
+            tradictURL = "http://translate.googleapis.com/translate_a/single?client=gtx&" +
+                    "sl=auto" + //sourceLanguage
+                    "&tl=" + activeLang + "&dt=t&ie=UTF-8&oe=UTF-8&" +
+                    "q=" + URLEncoder.encode(text, "UTF-8");
+        } catch (UnsupportedEncodingException e) {
+            e.printStackTrace();
+        }
+        Request request = new Request.Builder()
+                .url(tradictURL)
+                .build();
+        Call call = client.newCall(request);
+        call.enqueue(new Callback() {
+            //Callback callback = new Callback() {
+            @Override
+            public void onFailure(@NotNull Call call, @NotNull IOException e) {
+                SendMessagesHelper.getInstance(currentAccount).sendMessage(text, dialog_id, replyingMessageObject, messageWebPage, messageWebPageSearch, entities, null, null, notify, scheduleDate);
+            }
+
+            @Override
+            public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {
+                JSONArray tmpArray0 = null;
+                JSONArray tmpArray1 = null;
+                JSONArray tmpArray2 = null;
+                String tradictArray = response.body().string();
+
+                String concatText = "";
+                try {
+                    tmpArray0 = new JSONArray(tradictArray);
+                    tmpArray1 = tmpArray0.getJSONArray(0);
+
+                    for (int i=0;i<tmpArray1.length();i++) {
+                        tmpArray2 = tmpArray1.getJSONArray(i);
+
+                        //String test1 = tmpArray2.toString();
+                        String actualText = tmpArray2.getString(0);
+
+                        concatText = concatText.isEmpty()? concatText+actualText : concatText + " " + actualText;
+                        SendMessagesHelper.getInstance(currentAccount).sendMessage(text + "\n\n" + concatText, dialog_id, replyingMessageObject, messageWebPage, messageWebPageSearch, entities, null, null, notify, scheduleDate);
+                        int hh = 1;
+
+                    }
+                } catch (JSONException e) {
+                    e.printStackTrace();
+                }
+            }
+        });
+    }
+
     public boolean processSendingText(CharSequence text, boolean notify, int scheduleDate) {
         text = AndroidUtilities.getTrimmedString(text);
         /*if (text.length() > 0 && text.length() <= 14 && replyingMessageObject != null && Emoji.isValidEmoji(text.toString()) && parentFragment != null) {
             SendMessagesHelper.getInstance(currentAccount).sendReaction(replyingMessageObject, text, parentFragment);
             return true;
         } else {*/
+
+        // TELEBON-DEV
+        SharedPreferences langPrefs = MessagesController.getMainSettings(currentAccount);
+        int actualLangId = langPrefs.getInt(String.valueOf(dialog_id) + "_language", 0);
+
             int maxLength = accountInstance.getMessagesController().maxMessageLength;
             if (text.length() != 0) {
                 int count = (int) Math.ceil(text.length() / (float) maxLength);
                 for (int a = 0; a < count; a++) {
                     CharSequence[] message = new CharSequence[]{text.subSequence(a * maxLength, Math.min((a + 1) * maxLength, text.length()))};
                     ArrayList<TLRPC.MessageEntity> entities = MediaDataController.getInstance(currentAccount).getEntities(message);
-                    SendMessagesHelper.getInstance(currentAccount).sendMessage(message[0].toString(), dialog_id, replyingMessageObject, messageWebPage, messageWebPageSearch, entities, null, null, notify, scheduleDate);
+
+                    // TELEBON-DEV
+                    if (actualLangId>10001) {
+                        sendText(message[0].toString(), actualLangId, entities, notify, scheduleDate);
+                    }
+                    else {
+                        SendMessagesHelper.getInstance(currentAccount).sendMessage(message[0].toString(), dialog_id, replyingMessageObject, messageWebPage, messageWebPageSearch, entities, null, null, notify, scheduleDate);
+                    }
                 }
                 return true;
             }
             return false;
-        //}
+
     }
 
     private void checkSendButton(boolean animated) {
diff --git a/TMessagesProj/src/main/java/org/telebon/ui/DialogsActivity.java b/TMessagesProj/src/main/java/org/telebon/ui/DialogsActivity.java
index 61132b076..bc58c64ad 100644
--- a/TMessagesProj/src/main/java/org/telebon/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/org/telebon/ui/DialogsActivity.java
@@ -859,10 +859,11 @@ public void onTextChanged(EditText editText) {
             if (folderId != 0) {
                 actionBar.setTitle(LocaleController.getString("ArchivedChats", R.string.ArchivedChats));
             } else {
+                /////////// TELEBON-DEV
                 if (BuildVars.DEBUG_VERSION) {
                     actionBar.setTitle("TeleBon Beta"/*LocaleController.getString("AppNameBeta", R.string.AppNameBeta)*/);
                 } else {
-                    actionBar.setTitle(LocaleController.getString("AppName", R.string.AppName));
+                    actionBar.setTitle("TeleBon"/*LocaleController.getString("AppName", R.string.AppName)*/);
                 }
             }
             actionBar.setSupportsHolidayImage(true);
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/bluecounter.9.png b/TMessagesProj/src/main/res/drawable-hdpi/bluecounter.9.png
index 61465c81f..108085cdc 100644
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/bluecounter.9.png and b/TMessagesProj/src/main/res/drawable-hdpi/bluecounter.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/intro_tg_sphere3.png b/TMessagesProj/src/main/res/drawable-hdpi/intro_tg_sphere3.png
index 7f6e497af..29a9a954d 100644
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/intro_tg_sphere3.png and b/TMessagesProj/src/main/res/drawable-hdpi/intro_tg_sphere3.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/media_doc_blue.png b/TMessagesProj/src/main/res/drawable-hdpi/media_doc_blue.png
index 0ec63cbe5..b2095922c 100644
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/media_doc_blue.png and b/TMessagesProj/src/main/res/drawable-hdpi/media_doc_blue.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/media_doc_blue_b.png b/TMessagesProj/src/main/res/drawable-hdpi/media_doc_blue_b.png
index 79b073597..61ad183b0 100644
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/media_doc_blue_b.png and b/TMessagesProj/src/main/res/drawable-hdpi/media_doc_blue_b.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/photobadge.9.png b/TMessagesProj/src/main/res/drawable-hdpi/photobadge.9.png
index a64511ec7..9d0970852 100644
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/photobadge.9.png and b/TMessagesProj/src/main/res/drawable-hdpi/photobadge.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/bluecounter.9.png b/TMessagesProj/src/main/res/drawable-mdpi/bluecounter.9.png
index ee3a92c79..e4bc10fea 100644
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/bluecounter.9.png and b/TMessagesProj/src/main/res/drawable-mdpi/bluecounter.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/intro_tg_sphere3.png b/TMessagesProj/src/main/res/drawable-mdpi/intro_tg_sphere3.png
index 0b08835ac..2348c69f3 100644
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/intro_tg_sphere3.png and b/TMessagesProj/src/main/res/drawable-mdpi/intro_tg_sphere3.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/media_doc_blue.png b/TMessagesProj/src/main/res/drawable-mdpi/media_doc_blue.png
index 11c167e90..7db02bc3f 100644
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/media_doc_blue.png and b/TMessagesProj/src/main/res/drawable-mdpi/media_doc_blue.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/media_doc_blue_b.png b/TMessagesProj/src/main/res/drawable-mdpi/media_doc_blue_b.png
index 2672b05cb..57483a160 100644
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/media_doc_blue_b.png and b/TMessagesProj/src/main/res/drawable-mdpi/media_doc_blue_b.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/photobadge.9.png b/TMessagesProj/src/main/res/drawable-mdpi/photobadge.9.png
index 4df4e6f3b..c46eac013 100644
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/photobadge.9.png and b/TMessagesProj/src/main/res/drawable-mdpi/photobadge.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/bluecounter.9.png b/TMessagesProj/src/main/res/drawable-xhdpi/bluecounter.9.png
index 99452b42e..1ccae9908 100644
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/bluecounter.9.png and b/TMessagesProj/src/main/res/drawable-xhdpi/bluecounter.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/intro_tg_sphere3.png b/TMessagesProj/src/main/res/drawable-xhdpi/intro_tg_sphere3.png
index 0555c03dc..c0e620af0 100644
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/intro_tg_sphere3.png and b/TMessagesProj/src/main/res/drawable-xhdpi/intro_tg_sphere3.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/media_doc_blue.png b/TMessagesProj/src/main/res/drawable-xhdpi/media_doc_blue.png
index 828d62d45..cea3d2e88 100644
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/media_doc_blue.png and b/TMessagesProj/src/main/res/drawable-xhdpi/media_doc_blue.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/media_doc_blue_b.png b/TMessagesProj/src/main/res/drawable-xhdpi/media_doc_blue_b.png
index 7125c99b8..d8fe6b564 100644
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/media_doc_blue_b.png and b/TMessagesProj/src/main/res/drawable-xhdpi/media_doc_blue_b.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/photobadge.9.png b/TMessagesProj/src/main/res/drawable-xhdpi/photobadge.9.png
index 3617f2b32..ea0053bd7 100644
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/photobadge.9.png and b/TMessagesProj/src/main/res/drawable-xhdpi/photobadge.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/bluecounter.9.png b/TMessagesProj/src/main/res/drawable-xxhdpi/bluecounter.9.png
index 4894fb1ce..a004817d3 100644
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/bluecounter.9.png and b/TMessagesProj/src/main/res/drawable-xxhdpi/bluecounter.9.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/intro_tg_sphere3.png b/TMessagesProj/src/main/res/drawable-xxhdpi/intro_tg_sphere3.png
index 82d564939..fb1cb9fc7 100644
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/intro_tg_sphere3.png and b/TMessagesProj/src/main/res/drawable-xxhdpi/intro_tg_sphere3.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/media_doc_blue.png b/TMessagesProj/src/main/res/drawable-xxhdpi/media_doc_blue.png
index 791f41f40..a067c2e5b 100644
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/media_doc_blue.png and b/TMessagesProj/src/main/res/drawable-xxhdpi/media_doc_blue.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/media_doc_blue_b.png b/TMessagesProj/src/main/res/drawable-xxhdpi/media_doc_blue_b.png
index 552eb7414..01093fee0 100644
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/media_doc_blue_b.png and b/TMessagesProj/src/main/res/drawable-xxhdpi/media_doc_blue_b.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/photobadge.9.png b/TMessagesProj/src/main/res/drawable-xxhdpi/photobadge.9.png
index c03f6867c..e8db20051 100644
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/photobadge.9.png and b/TMessagesProj/src/main/res/drawable-xxhdpi/photobadge.9.png differ
