diff --git a/TMessagesProj/src/main/java/org/cloudveil/messenger/GlobalSecuritySettings.java b/TMessagesProj/src/main/java/org/cloudveil/messenger/GlobalSecuritySettings.java
index 7d1b430ec..204335db6 100644
--- a/TMessagesProj/src/main/java/org/cloudveil/messenger/GlobalSecuritySettings.java
+++ b/TMessagesProj/src/main/java/org/cloudveil/messenger/GlobalSecuritySettings.java
@@ -27,6 +27,11 @@
     public static final boolean LOCK_DISABLE_GLOBAL_SEARCH = true;
     public static final boolean LOCK_DISABLE_STICKERS = true;
 
+    private static final boolean DEFAULT_LOCK_DISABLE_OWN_BIO = true;
+    private static final boolean DEFAULT_LOCK_DISABLE_OWN_PHOTO = true;
+    private static final boolean DEFAULT_LOCK_DISABLE_OTHERS_BIO = true;
+    private static final boolean DEFAULT_LOCK_DISABLE_OTHERS_PHOTO = true;
+
     public static boolean isDisabledSecretChat() {
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(GlobalSecuritySettings.class.getCanonicalName(), Activity.MODE_PRIVATE);
         return preferences.getBoolean("disabledSecretChat", DEFAULT_LOCK_DISABLE_SECRET_CHAT);
@@ -46,4 +51,45 @@ public static void setMinSecretChatTtl(int ttl) {
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(GlobalSecuritySettings.class.getCanonicalName(), Activity.MODE_PRIVATE);
         preferences.edit().putInt("minChatTtl", ttl).apply();
     }
+
+    public static boolean getLockDisableOwnBio() {
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(GlobalSecuritySettings.class.getCanonicalName(), Activity.MODE_PRIVATE);
+        return preferences.getBoolean("disabledOwnBio", DEFAULT_LOCK_DISABLE_OWN_BIO);
+    }
+
+    public static void setLockDisableOwnBio(boolean lockDisableOwnBio) {
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(GlobalSecuritySettings.class.getCanonicalName(), Activity.MODE_PRIVATE);
+        preferences.edit().putBoolean("disabledOwnBio", lockDisableOwnBio).apply();
+    }
+
+    public static boolean getLockDisableOwnPhoto() {
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(GlobalSecuritySettings.class.getCanonicalName(), Activity.MODE_PRIVATE);
+        return preferences.getBoolean("disabledOwnPhoto", DEFAULT_LOCK_DISABLE_OWN_PHOTO);
+    }
+
+    public static void setLockDisableOwnPhoto(boolean lockDisableOwnPhoto) {
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(GlobalSecuritySettings.class.getCanonicalName(), Activity.MODE_PRIVATE);
+        preferences.edit().putBoolean("disabledOwnPhoto", lockDisableOwnPhoto).apply();
+    }
+
+    public static boolean getLockDisableOthersBio() {
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(GlobalSecuritySettings.class.getCanonicalName(), Activity.MODE_PRIVATE);
+        return preferences.getBoolean("disabledOthersBio", DEFAULT_LOCK_DISABLE_OTHERS_BIO);
+    }
+
+    public static void setLockDisableOthersBio(boolean lockDisableOthersBio) {
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(GlobalSecuritySettings.class.getCanonicalName(), Activity.MODE_PRIVATE);
+        preferences.edit().putBoolean("disabledOthersBio", lockDisableOthersBio).apply();
+    }
+
+    public static boolean getLockDisableOthersPhoto() {
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(GlobalSecuritySettings.class.getCanonicalName(), Activity.MODE_PRIVATE);
+        return preferences.getBoolean("disabledOthersPhoto", DEFAULT_LOCK_DISABLE_OTHERS_PHOTO);
+    }
+
+    public static void setLockDisableOthersPhoto(boolean lockDisableOthersPhoto) {
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences(GlobalSecuritySettings.class.getCanonicalName(), Activity.MODE_PRIVATE);
+        preferences.edit().putBoolean("disabledOthersPhoto", lockDisableOthersPhoto).apply();
+    }
+
 }
diff --git a/TMessagesProj/src/main/java/org/cloudveil/messenger/api/model/response/SettingsResponse.java b/TMessagesProj/src/main/java/org/cloudveil/messenger/api/model/response/SettingsResponse.java
index 98446d781..1f38ee159 100644
--- a/TMessagesProj/src/main/java/org/cloudveil/messenger/api/model/response/SettingsResponse.java
+++ b/TMessagesProj/src/main/java/org/cloudveil/messenger/api/model/response/SettingsResponse.java
@@ -14,4 +14,8 @@
     public boolean secretChat;
     public int secretChatMinimumLength;
 
+    public boolean disableBio;
+    public boolean disableBioChange;
+    public boolean disableProfilePhoto;
+    public boolean disableProfilePhotoChange;
 }
diff --git a/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java b/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java
index 5dfb77d45..5ab439e9b 100644
--- a/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java
+++ b/TMessagesProj/src/main/java/org/cloudveil/messenger/service/ChannelCheckingService.java
@@ -7,6 +7,7 @@
 import android.content.SharedPreferences;
 import android.os.Handler;
 import android.os.IBinder;
+import android.provider.Settings;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
@@ -138,8 +139,11 @@ private void processResponse(@NonNull SettingsRequest request, @NonNull Settings
 
         GlobalSecuritySettings.setDisableSecretChat(!settingsResponse.secretChat);
         GlobalSecuritySettings.setMinSecretChatTtl(settingsResponse.secretChatMinimumLength);
-
-
+        
+        GlobalSecuritySettings.setLockDisableOthersBio(settingsResponse.disableBio);
+        GlobalSecuritySettings.setLockDisableOwnBio(settingsResponse.disableBioChange);
+        GlobalSecuritySettings.setLockDisableOwnPhoto(settingsResponse.disableProfilePhotoChange);
+        GlobalSecuritySettings.setLockDisableOthersPhoto(settingsResponse.disableProfilePhoto);
 
         NotificationCenter.getInstance().postNotificationName(NotificationCenter.filterDialogsReady);
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java
index 4a0ac7a8d..4e853c893 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatActionCell.java
@@ -19,6 +19,7 @@
 import android.view.MotionEvent;
 import android.view.SoundEffectConstants;
 
+import org.cloudveil.messenger.GlobalSecuritySettings;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ImageReceiver;
 import org.telegram.messenger.LocaleController;
@@ -36,9 +37,13 @@
 
     public interface ChatActionCellDelegate {
         void didClickedImage(ChatActionCell cell);
+
         void didLongPressed(ChatActionCell cell);
+
         void needOpenUserProfile(int uid);
+
         void didPressedBotButton(MessageObject messageObject, TLRPC.KeyboardButton button);
+
         void didPressedReplyMessage(ChatActionCell cell, int id);
     }
 
@@ -123,7 +128,9 @@ public void setMessageObject(MessageObject messageObject) {
                 imageReceiver.setImage(currentMessageObject.messageOwner.action.newUserPhoto.photo_small, "50_50", avatarDrawable, null, 0);
             } else {
                 TLRPC.PhotoSize photo = FileLoader.getClosestPhotoSizeWithSize(currentMessageObject.photoThumbs, AndroidUtilities.dp(64));
-                if (photo != null) {
+                //CloudVeil start
+                if (photo != null && !GlobalSecuritySettings.getLockDisableOthersPhoto()) {
+                //CloudVeil end
                     imageReceiver.setImage(photo.location, "50_50", avatarDrawable, null, 0);
                 } else {
                     imageReceiver.setImageBitmap(avatarDrawable);
@@ -201,7 +208,7 @@ public boolean onTouchEvent(MotionEvent event) {
                     y -= textY;
                     x -= textXLeft;
 
-                    final int line = textLayout.getLineForVertical((int)y);
+                    final int line = textLayout.getLineForVertical((int) y);
                     final int off = textLayout.getOffsetForHorizontal(line, x);
                     final float left = textLayout.getLineLeft(line);
                     if (left <= x && left + textLayout.getLineWidth(line) >= x && currentMessageObject.messageText instanceof Spannable) {
@@ -278,12 +285,12 @@ private void createLayout(CharSequence text, int width) {
                     if (lineWidth > maxWidth) {
                         lineWidth = maxWidth;
                     }
-                    textHeight = (int)Math.max(textHeight, Math.ceil(textLayout.getLineBottom(a)));
+                    textHeight = (int) Math.max(textHeight, Math.ceil(textLayout.getLineBottom(a)));
                 } catch (Exception e) {
                     FileLog.e(e);
                     return;
                 }
-                textWidth = (int)Math.max(textWidth, Math.ceil(lineWidth));
+                textWidth = (int) Math.max(textWidth, Math.ceil(lineWidth));
             }
         } catch (Exception e) {
             FileLog.e(e);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index 5031beef4..353221f6b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -20,6 +20,7 @@
 import android.text.TextUtils;
 import android.text.style.ForegroundColorSpan;
 
+import org.cloudveil.messenger.GlobalSecuritySettings;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.PhoneFormat.PhoneFormat;
 import org.telegram.messenger.ChatObject;
@@ -1024,6 +1025,17 @@ public void update(int mask) {
                 }
                 avatarDrawable.setInfo(chat);
             }
+
+            //CloudVeil start
+            boolean allowPhoto =  !GlobalSecuritySettings.getLockDisableOthersPhoto();
+            if(user != null && user.id == UserConfig.getCurrentUser().id) {
+                allowPhoto = !GlobalSecuritySettings.getLockDisableOwnPhoto();
+            }
+            if(!allowPhoto) {
+                photo = null;
+            }
+            //CloudVeil end
+
             avatarImage.setImage(photo, "50_50", avatarDrawable, null, 0);
         }
         if (getMeasuredWidth() != 0 || getMeasuredHeight() != 0) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 56e1f6d25..376594220 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -424,6 +424,12 @@
 
         @Override
         public PhotoViewer.PlaceProviderObject getPlaceForPhoto(MessageObject messageObject, TLRPC.FileLocation fileLocation, int index) {
+            //CloudVeil start
+            if(GlobalSecuritySettings.getLockDisableOthersPhoto()) {
+                return null;
+            }
+            //CloudVeil end
+
             int count = chatListView.getChildCount();
 
             for (int a = 0; a < count; a++) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAvatarContainer.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAvatarContainer.java
index 505e1f120..eea436c53 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAvatarContainer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatAvatarContainer.java
@@ -18,6 +18,7 @@
 import android.widget.FrameLayout;
 import android.widget.ImageView;
 
+import org.cloudveil.messenger.GlobalSecuritySettings;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.FileLog;
@@ -343,7 +344,11 @@ public void updateSubtitle() {
     public void setChatAvatar(TLRPC.Chat chat) {
         TLRPC.FileLocation newPhoto = null;
         if (chat.photo != null) {
-            newPhoto = chat.photo.photo_small;
+            //CloudVeil start
+            if (!GlobalSecuritySettings.getLockDisableOthersPhoto()) {
+                newPhoto = chat.photo.photo_small;
+            }
+            //CloudVeil end
         }
         avatarDrawable.setInfo(chat);
         if (avatarImageView != null) {
@@ -357,7 +362,11 @@ public void setUserAvatar(TLRPC.User user) {
         if (UserObject.isUserSelf(user)) {
             avatarDrawable.setSavedMessages(2);
         } else if (user.photo != null) {
-            newPhoto = user.photo.photo_small;
+            //CloudVeil start
+            if (!GlobalSecuritySettings.getLockDisableOthersPhoto()) {
+                newPhoto = user.photo.photo_small;
+            }
+            //CloudVeil end
         }
 
         if (avatarImageView != null) {
@@ -385,6 +394,12 @@ public void checkAndUpdateAvatar() {
             }
             avatarDrawable.setInfo(chat);
         }
+        //CloudVeil start
+        if (GlobalSecuritySettings.getLockDisableOthersPhoto()) {
+            newPhoto = null;
+        }
+        //CloudVeil end
+
         if (avatarImageView != null) {
             avatarImageView.setImage(newPhoto, "50_50", avatarDrawable);
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
index a33a258e8..990b9426f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
@@ -213,17 +213,23 @@
             }
 
             TLRPC.FileLocation photoBig = null;
+            //CloudVeil start
             if (user_id != 0) {
+                boolean allowPhoto =  !GlobalSecuritySettings.getLockDisableOthersPhoto();
+                if(user_id == UserConfig.getCurrentUser().id) {
+                    allowPhoto = UserConfig.getCurrentUser().id == user_id && !GlobalSecuritySettings.getLockDisableOwnPhoto();
+                }
                 TLRPC.User user = MessagesController.getInstance().getUser(user_id);
-                if (user != null && user.photo != null && user.photo.photo_big != null) {
+                if (user != null && user.photo != null && user.photo.photo_big != null && allowPhoto) {
                     photoBig = user.photo.photo_big;
                 }
             } else if (chat_id != 0) {
                 TLRPC.Chat chat = MessagesController.getInstance().getChat(chat_id);
-                if (chat != null && chat.photo != null && chat.photo.photo_big != null) {
+                if (chat != null && chat.photo != null && chat.photo.photo_big != null && !GlobalSecuritySettings.getLockDisableOthersPhoto()) {
                     photoBig = chat.photo.photo_big;
                 }
             }
+            //CloudVeil end
 
 
             if (photoBig != null && photoBig.local_id == fileLocation.local_id && photoBig.volume_id == fileLocation.volume_id && photoBig.dc_id == fileLocation.dc_id) {
@@ -1134,6 +1140,12 @@ public void onClick(View v) {
                     writeButton.setImageResource(R.drawable.floating_message);
                     writeButton.setPadding(0, AndroidUtilities.dp(3), 0, 0);
                 } else {
+                    //CloudVeil start
+                    if(GlobalSecuritySettings.getLockDisableOthersPhoto()) {
+                        writeButton.setVisibility(View.GONE);
+                    }
+                    //CloudVeil end
+
                     writeButton.setImageResource(R.drawable.floating_camera);
                 }
             }
@@ -2172,7 +2184,9 @@ private void updateRowsIds() {
 
             TLRPC.TL_userFull userFull = MessagesController.getInstance().getUserFull(user_id);
             boolean hasUsername = user != null && !TextUtils.isEmpty(user.username);
-            if (userFull != null && !TextUtils.isEmpty(userFull.about)) {
+            //CLoudVeil start
+            if (userFull != null && !TextUtils.isEmpty(userFull.about) && !GlobalSecuritySettings.getLockDisableOthersBio()) {
+            //CloudVeil end
                 if (phoneRow != -1) {
                     userSectionRow = rowCount++;
                 }
@@ -2295,10 +2309,14 @@ private void updateProfileData() {
             TLRPC.User user = MessagesController.getInstance().getUser(user_id);
             TLRPC.FileLocation photo = null;
             TLRPC.FileLocation photoBig = null;
-            if (user.photo != null) {
+
+            //CloudVeil start
+            if (user.photo != null && !GlobalSecuritySettings.getLockDisableOthersPhoto()) {
                 photo = user.photo.photo_small;
                 photoBig = user.photo.photo_big;
             }
+            //CloudVeil end
+
             avatarDrawable.setInfo(user);
             avatarImage.setImage(photo, "50_50", avatarDrawable);
 
@@ -2439,10 +2457,13 @@ private void updateProfileData() {
 
             TLRPC.FileLocation photo = null;
             TLRPC.FileLocation photoBig = null;
-            if (chat.photo != null) {
+            //CloudVeil start
+            if (chat.photo != null && !GlobalSecuritySettings.getLockDisableOthersPhoto()) {
                 photo = chat.photo.photo_small;
                 photoBig = chat.photo.photo_big;
             }
+            //CloudVeil end
+            
             avatarDrawable.setInfo(chat);
             avatarImage.setImage(photo, "50_50", avatarDrawable);
             avatarImage.getImageReceiver().setVisible(!PhotoViewer.getInstance().isShowingImage(photoBig), false);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 0840a6ba8..4f09ff2b6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -177,6 +177,13 @@
             if (fileLocation == null) {
                 return null;
             }
+
+            //CloudVeil start
+            if(GlobalSecuritySettings.getLockDisableOwnPhoto()) {
+                return null;
+            }
+            //CloudVeil end
+
             TLRPC.User user = MessagesController.getInstance().getUser(UserConfig.getClientUserId());
             if (user != null && user.photo != null && user.photo.photo_big != null) {
                 TLRPC.FileLocation photoBig = user.photo.photo_big;
@@ -605,9 +612,12 @@ public void onClick(DialogInterface dialog, int which) {
                 } else if (position == usernameRow) {
                     presentFragment(new ChangeUsernameActivity());
                 } else if (position == bioRow) {
-                    TLRPC.TL_userFull userFull = MessagesController.getInstance().getUserFull(UserConfig.getClientUserId());
-                    if (userFull != null) {
-                        presentFragment(new ChangeBioActivity());
+                    //CloudVeil start
+                    if(!GlobalSecuritySettings.getLockDisableOwnBio()) {
+                        TLRPC.TL_userFull userFull = MessagesController.getInstance().getUserFull(UserConfig.getClientUserId());
+                        if (userFull != null) {
+                            presentFragment(new ChangeBioActivity());
+                        }
                     }
                 } else if (position == numberRow) {
                     presentFragment(new ChangePhoneHelpActivity());
@@ -870,6 +880,12 @@ public void onClick(DialogInterface dialogInterface, int i) {
             }
         });
 
+        //CloudVeil start
+        if(GlobalSecuritySettings.getLockDisableOwnPhoto()) {
+            writeButton.setVisibility(View.GONE);
+        }
+        //CloudVeil end
+
         needLayout();
 
         listView.setOnScrollListener(new RecyclerView.OnScrollListener() {
@@ -1337,6 +1353,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                             value = LocaleController.getString("UserBioEmpty", R.string.UserBioEmpty);
                         }
                         textCell.setTextWithEmojiAndValue(value, LocaleController.getString("UserBio", R.string.UserBio), false);
+
                     }
                     break;
                 }
