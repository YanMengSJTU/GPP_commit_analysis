diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
index 3961e1bd6..308127b43 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoPickerActivity.java
@@ -90,7 +90,11 @@
     private HashMap<String, MediaController.SearchImage> searchResultUrls = new HashMap<>();
 
     private boolean searching;
+    public static String BING_IMAGE_SEARCH_URL = "https://www.bingapis.com/api/v5/images/search?q=%s&appid=%s&count=%d&offset=%d";
+    private String imageSearchQuery;
     private String nextSearchBingString;
+    private int nextImageSearchOffset = 0;
+    private int imageSearchCount = 30;
     private boolean giphySearchEndReached = true;
     private String lastSearchString;
     private boolean loadingRecent;
@@ -371,7 +375,7 @@ public void onScrollStateChanged(AbsListView absListView, int i) {
                 public void onScroll(AbsListView absListView, int firstVisibleItem, int visibleItemCount, int totalItemCount) {
                     if (visibleItemCount != 0 && firstVisibleItem + visibleItemCount > totalItemCount - 2 && !searching) {
                         if (type == 0 && nextSearchBingString != null) {
-                            searchBingImages(lastSearchString, searchResult.size(), 54);
+                            searchBingImages(lastSearchString, searchResult.size(), imageSearchCount);
                         } else if (type == 1 && !giphySearchEndReached) {
                             searchGiphyImages(searchItem.getSearchField().getText().toString(), searchResult.size(), 54);
                         }
@@ -808,6 +812,7 @@ private void searchBingImages(String query, int offset, int count) {
         }
         try {
             searching = true;
+            imageSearchQuery = query;
             String url;
             if (nextSearchBingString != null) {
                 url = nextSearchBingString;
@@ -815,39 +820,33 @@ private void searchBingImages(String query, int offset, int count) {
                 boolean adult;
                 String phone = UserConfig.getCurrentUser().phone;
                 adult = phone.startsWith("44") || phone.startsWith("49") || phone.startsWith("43") || phone.startsWith("31") || phone.startsWith("1");
-                url = String.format(Locale.US, "https://api.datamarket.azure.com/Bing/Search/v1/Image?Query='%s'&$skip=%d&$top=%d&$format=json%s", URLEncoder.encode(query, "UTF-8"), offset, count, adult ? "" : "&Adult='Off'");
+                url = String.format(Locale.US, BING_IMAGE_SEARCH_URL, URLEncoder.encode(query, "UTF-8"), BuildVars.BING_SEARCH_KEY, imageSearchCount, nextImageSearchOffset);
             }
             JsonObjectRequest jsonObjReq = new JsonObjectRequest(Request.Method.GET, url, null,
                     new Response.Listener<JSONObject>() {
                         @Override
                         public void onResponse(JSONObject response) {
                             nextSearchBingString = null;
+                            int totalEstimatedMatches = 0;
+                            int nextOffsetAddCount = 0;
                             try {
-                                JSONObject d = response.getJSONObject("d");
-                                JSONArray result = d.getJSONArray("results");
-                                try {
-                                    nextSearchBingString = d.getString("__next");
-                                } catch (Exception e) {
-                                    nextSearchBingString = null;
-                                    FileLog.e("tmessages", e);
-                                }
+                                JSONArray result = response.getJSONArray("value");
+                                nextOffsetAddCount = response.getInt("nextOffsetAddCount");
+                                totalEstimatedMatches = response.getInt("totalEstimatedMatches");
+
                                 for (int a = 0; a < result.length(); a++) {
                                     try {
                                         JSONObject object = result.getJSONObject(a);
-                                        String id = Utilities.MD5(object.getString("MediaUrl"));
-                                        if (searchResultKeys.containsKey(id)) {
-                                            continue;
-                                        }
+
                                         MediaController.SearchImage bingImage = new MediaController.SearchImage();
-                                        bingImage.id = id;
-                                        bingImage.width = object.getInt("Width");
-                                        bingImage.height = object.getInt("Height");
-                                        bingImage.size = object.getInt("FileSize");
-                                        bingImage.imageUrl = object.getString("MediaUrl");
-                                        JSONObject thumbnail = object.getJSONObject("Thumbnail");
-                                        bingImage.thumbUrl = thumbnail.getString("MediaUrl");
+                                        bingImage.id = object.getString("imageId");
+                                        bingImage.width = object.getInt("width");
+                                        bingImage.height = object.getInt("height");
+                                        bingImage.size = Integer.parseInt(object.getString("contentSize").split(" ")[0]); // the string is like "642232 B"
+                                        bingImage.imageUrl = object.getString("contentUrl");
+                                        bingImage.thumbUrl = object.getString("thumbnailUrl");
                                         searchResult.add(bingImage);
-                                        searchResultKeys.put(id, bingImage);
+                                        searchResultKeys.put(bingImage.id, bingImage);
                                     } catch (Exception e) {
                                         FileLog.e("tmessages", e);
                                     }
@@ -856,8 +855,11 @@ public void onResponse(JSONObject response) {
                                 FileLog.e("tmessages", e);
                             }
                             searching = false;
-                            if (nextSearchBingString != null && !nextSearchBingString.contains("json")) {
-                                nextSearchBingString += "&$format=json";
+                            nextImageSearchOffset = nextImageSearchOffset + imageSearchCount + nextOffsetAddCount;
+                            try {
+                                nextSearchBingString = String.format(Locale.US, BING_IMAGE_SEARCH_URL, URLEncoder.encode(imageSearchQuery, "UTF-8"), BuildVars.BING_SEARCH_KEY, imageSearchCount, nextImageSearchOffset);
+                            } catch (Exception e) {
+                                FileLog.e("tmessages", e);
                             }
                             updateSearchInterface();
                         }
@@ -870,16 +872,7 @@ public void onErrorResponse(VolleyError error) {
                             searching = false;
                             updateSearchInterface();
                         }
-                    }) {
-
-                @Override
-                public Map<String, String> getHeaders() throws AuthFailureError {
-                    Map<String, String> headers = new HashMap<>();
-                    String auth = "Basic " + Base64.encodeToString((BuildVars.BING_SEARCH_KEY + ":" + BuildVars.BING_SEARCH_KEY).getBytes(), Base64.NO_WRAP);
-                    headers.put("Authorization", auth);
-                    return headers;
-                }
-            };
+                    }) ;
             jsonObjReq.setShouldCache(false);
             jsonObjReq.setTag("search");
             requestQueue.add(jsonObjReq);
