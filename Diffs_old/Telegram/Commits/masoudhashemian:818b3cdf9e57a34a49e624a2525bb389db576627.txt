diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java b/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java
index 9a9b4d3f5..8cc918d5d 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/LocaleController.java
@@ -142,6 +142,7 @@ public LocaleController() {
         addRules(new String[]{"ro", "mo"}, new PluralRules_Romanian());
         addRules(new String[]{"sl"}, new PluralRules_Slovenian());
         addRules(new String[]{"ar"}, new PluralRules_Arabic());
+        addRules(new String[]{"fa"}, new PluralRules_Persian());
         addRules(new String[]{"mk"}, new PluralRules_Macedonian());
         addRules(new String[]{"cy"}, new PluralRules_Welsh());
         addRules(new String[]{"br"}, new PluralRules_Breton());
@@ -161,6 +162,14 @@ public LocaleController() {
         sortedLanguages.add(localeInfo);
         languagesDict.put(localeInfo.shortName, localeInfo);
 
+        localeInfo = new LocaleInfo();
+        localeInfo.name = "فارسی";
+        localeInfo.nameEnglish = "Persian";
+        localeInfo.shortName = "fa";
+        localeInfo.pathToFile = null;
+        sortedLanguages.add(localeInfo);
+        languagesDict.put(localeInfo.shortName, localeInfo);
+
         localeInfo = new LocaleInfo();
         localeInfo.name = "Italiano";
         localeInfo.nameEnglish = "Italian";
@@ -749,7 +758,7 @@ public void recreateFormatters() {
         if (lang == null) {
             lang = "en";
         }
-        isRTL = lang.toLowerCase().equals("ar");
+        isRTL = lang.toLowerCase().equals("ar") || lang.toLowerCase().equals("fa");
         nameDisplayOrder = lang.toLowerCase().equals("ko") ? 2 : 1;
 
         formatterMonth = createFormatter(locale, getStringInternal("formatterMonth", R.string.formatterMonth), "dd MMM");
@@ -1631,4 +1640,23 @@ public int quantityForNumber(int count) {
             }
         }
     }
+
+    public static class PluralRules_Persian extends PluralRules {
+        public int quantityForNumber(int count) {
+            int rem100 = count % 100;
+            if (count == 0) {
+                return QUANTITY_ZERO;
+            } else if (count == 1) {
+                return QUANTITY_ONE;
+            } else if (count == 2) {
+                return QUANTITY_TWO;
+            } else if (rem100 >= 3 && rem100 <= 10) {
+                return QUANTITY_FEW;
+            } else if (rem100 >= 11 && rem100 <= 99) {
+                return QUANTITY_MANY;
+            } else {
+                return QUANTITY_OTHER;
+            }
+        }
+    }
 }
