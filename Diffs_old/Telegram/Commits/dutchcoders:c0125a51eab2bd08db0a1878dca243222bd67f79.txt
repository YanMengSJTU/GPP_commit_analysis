diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
index 8aaf1242d..8971318b5 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
@@ -46,7 +46,7 @@ public static void saveConfig(boolean withFile) {
     public static void saveConfig(boolean withFile, File oldFile) {
         synchronized (sync) {
             try {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing", Context.MODE_PRIVATE);
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfig", Context.MODE_PRIVATE);
                 SharedPreferences.Editor editor = preferences.edit();
                 editor.putBoolean("registeredForPush", registeredForPush);
                 editor.putString("pushString", pushString);
@@ -146,7 +146,11 @@ public void run() {
                     FileLog.e("tmessages", e);
                 }
             } else {
-                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing", Context.MODE_PRIVATE);
+		// this first reads the configuration of userconfing (with typo), if exists
+		// and overwrites it with the settings correct file userconfig 
+
+		// typo config
+		SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfing", Context.MODE_PRIVATE);
                 registeredForPush = preferences.getBoolean("registeredForPush", false);
                 pushString = preferences.getString("pushString", "");
                 lastSendMessageId = preferences.getInt("lastSendMessageId", -210000);
@@ -156,7 +160,20 @@ public void run() {
                 saveIncomingPhotos = preferences.getBoolean("saveIncomingPhotos", false);
                 contactsVersion = preferences.getInt("contactsVersion", 0);
                 String user = preferences.getString("user", null);
-                if (user != null) {
+                
+		// correct config
+		preferences = ApplicationLoader.applicationContext.getSharedPreferences("userconfig", Context.MODE_PRIVATE);
+                registeredForPush = preferences.getBoolean("registeredForPush", registeredForPush);
+                pushString = preferences.getString("pushString", pushString);
+                lastSendMessageId = preferences.getInt("lastSendMessageId", lastSendMessageId);
+                lastLocalId = preferences.getInt("lastLocalId", lastLocalId);
+                contactsHash = preferences.getString("contactsHash", contactsHash);
+                importHash = preferences.getString("importHash", importHash);
+                saveIncomingPhotos = preferences.getBoolean("saveIncomingPhotos", saveIncomingPhotos);
+                contactsVersion = preferences.getInt("contactsVersion", contactsVersion);
+                user = preferences.getString("user", user);
+
+		if (user != null) {
                     byte[] userBytes = Base64.decode(user, Base64.DEFAULT);
                     if (userBytes != null) {
                         SerializedData data = new SerializedData(userBytes);
