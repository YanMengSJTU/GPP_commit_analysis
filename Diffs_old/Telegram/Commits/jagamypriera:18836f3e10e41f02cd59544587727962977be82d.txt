diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 8e64ce6b9..3c592487c 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -60,12 +60,12 @@ android {
     }
 
     signingConfigs {
-        debug {
-            storeFile file("config/release.keystore")
-            storePassword RELEASE_STORE_PASSWORD
-            keyAlias RELEASE_KEY_ALIAS
-            keyPassword RELEASE_KEY_PASSWORD
-        }
+//        debug {
+//            storeFile file("config/release.keystore")
+//            storePassword RELEASE_STORE_PASSWORD
+//            keyAlias RELEASE_KEY_ALIAS
+//            keyPassword RELEASE_KEY_PASSWORD
+//        }
 
         release {
             storeFile file("config/release.keystore")
@@ -79,7 +79,7 @@ android {
         debug {
             debuggable true
             jniDebuggable true
-            signingConfig signingConfigs.debug
+            //signingConfig signingConfigs.debug
             applicationIdSuffix ".beta"
             minifyEnabled true
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
diff --git a/TMessagesProj/google-services.json b/TMessagesProj/google-services.json
new file mode 100644
index 000000000..61eef684c
--- /dev/null
+++ b/TMessagesProj/google-services.json
@@ -0,0 +1,42 @@
+{
+  "project_info": {
+    "project_number": "74581705117",
+    "firebase_url": "https://telegram-on-steroid.firebaseio.com",
+    "project_id": "telegram-on-steroid",
+    "storage_bucket": "telegram-on-steroid.appspot.com"
+  },
+  "client": [
+    {
+      "client_info": {
+        "mobilesdk_app_id": "1:74581705117:android:dc022572c167a16c",
+        "android_client_info": {
+          "package_name": "org.telegram.messenger.beta"
+        }
+      },
+      "oauth_client": [
+        {
+          "client_id": "74581705117-8bsfa5u2dm0o4ljkt52rell6mijme2om.apps.googleusercontent.com",
+          "client_type": 3
+        }
+      ],
+      "api_key": [
+        {
+          "current_key": "AIzaSyAnkDJjpUcF2kcqgCjTIRzmDNO6uRG3AQM"
+        }
+      ],
+      "services": {
+        "analytics_service": {
+          "status": 1
+        },
+        "appinvite_service": {
+          "status": 1,
+          "other_platform_oauth_client": []
+        },
+        "ads_service": {
+          "status": 2
+        }
+      }
+    }
+  ],
+  "configuration_version": "1"
+}
\ No newline at end of file
diff --git a/TMessagesProj/jni/Android.mk b/TMessagesProj/jni/Android.mk
index 6542a9dfd..af4c0fb40 100755
--- a/TMessagesProj/jni/Android.mk
+++ b/TMessagesProj/jni/Android.mk
@@ -1,5 +1,5 @@
 LOCAL_PATH := $(call my-dir)
-
+include $(CLEAR_VARS)
 LOCAL_MODULE    := avutil 
 
 ifeq ($(TARGET_ARCH_ABI),armeabi-v7a)
@@ -668,4 +668,4 @@ LOCAL_SRC_FILES     += \
 
 include $(BUILD_SHARED_LIBRARY)
 
-$(call import-module,android/cpufeatures)
\ No newline at end of file
+$(call import-module,android/cpufeatures)$(call import-module,android/cpufeatures)
diff --git a/TMessagesProj/jni/Application.mk b/TMessagesProj/jni/Application.mk
index a5d4a6427..c01a7241c 100644
--- a/TMessagesProj/jni/Application.mk
+++ b/TMessagesProj/jni/Application.mk
@@ -1,3 +1,2 @@
-APP_PLATFORM := android-14
-NDK_TOOLCHAIN_VERSION := 4.9
-APP_STL := gnustl_static
\ No newline at end of file
+APP_PLATFORM := android-23
+APP_STL := c++_shared
diff --git a/TMessagesProj/jni/gifvideo.cpp b/TMessagesProj/jni/gifvideo.cpp
index c44e63187..076624305 100644
--- a/TMessagesProj/jni/gifvideo.cpp
+++ b/TMessagesProj/jni/gifvideo.cpp
@@ -9,18 +9,18 @@
 extern "C" {
 #include <libavformat/avformat.h>
 #include <libavutil/eval.h>
-    
+
 static const std::string av_make_error_str(int errnum) {
     char errbuf[AV_ERROR_MAX_STRING_SIZE];
     av_strerror(errnum, errbuf, AV_ERROR_MAX_STRING_SIZE);
     return (std::string) errbuf;
 }
-    
+
 #undef av_err2str
 #define av_err2str(errnum) av_make_error_str(errnum).c_str()
 
 typedef struct VideoInfo {
-    
+
     ~VideoInfo() {
         if (video_dec_ctx) {
             avcodec_close(video_dec_ctx);
@@ -43,7 +43,7 @@ typedef struct VideoInfo {
         video_stream_idx = -1;
         video_stream = nullptr;
     }
-    
+
     AVFormatContext *fmt_ctx = nullptr;
     char *src = nullptr;
     int video_stream_idx = -1;
@@ -67,7 +67,7 @@ int open_codec_context(int *stream_idx, AVCodecContext **dec_ctx, AVFormatContex
     AVStream *st;
     AVCodec *dec = NULL;
     AVDictionary *opts = NULL;
-    
+
     ret = av_find_best_stream(fmt_ctx, type, -1, -1, NULL, 0);
     if (ret < 0) {
         LOGE("can't find %s stream in input file", av_get_media_type_string(type));
@@ -100,28 +100,28 @@ int open_codec_context(int *stream_idx, AVCodecContext **dec_ctx, AVFormatContex
         }
         *stream_idx = stream_index;
     }
-    
+
     return 0;
 }
-    
+
 int decode_packet(VideoInfo *info, int *got_frame) {
     int ret = 0;
     int decoded = info->pkt.size;
     *got_frame = 0;
-    
+
     if (info->pkt.stream_index == info->video_stream_idx) {
         ret = avcodec_decode_video2(info->video_dec_ctx, info->frame, got_frame, &info->pkt);
         if (ret != 0) {
             return ret;
         }
     }
-    
+
     return decoded;
 }
 
 jlong Java_org_telegram_ui_Components_AnimatedFileDrawable_createDecoder(JNIEnv *env, jclass clazz, jstring src, jintArray data) {
     VideoInfo *info = new VideoInfo();
-    
+
     char const *srcString = env->GetStringUTFChars(src, 0);
     size_t len = strlen(srcString);
     info->src = new char[len + 1];
@@ -130,41 +130,41 @@ jlong Java_org_telegram_ui_Components_AnimatedFileDrawable_createDecoder(JNIEnv
     if (srcString != 0) {
         env->ReleaseStringUTFChars(src, srcString);
     }
-    
+
     int ret;
     if ((ret = avformat_open_input(&info->fmt_ctx, info->src, NULL, NULL)) < 0) {
         LOGE("can't open source file %s, %s", info->src, av_err2str(ret));
         delete info;
         return 0;
     }
-    
+
     if ((ret = avformat_find_stream_info(info->fmt_ctx, NULL)) < 0) {
         LOGE("can't find stream information %s, %s", info->src, av_err2str(ret));
         delete info;
         return 0;
     }
-    
+
     if (open_codec_context(&info->video_stream_idx, &info->video_dec_ctx, info->fmt_ctx, AVMEDIA_TYPE_VIDEO) >= 0) {
         info->video_stream = info->fmt_ctx->streams[info->video_stream_idx];
     }
 
-    if (info->video_stream <= 0) {
+    if (info->video_stream == nullptr) {
         LOGE("can't find video stream in the input, aborting %s", info->src);
         delete info;
         return 0;
     }
-    
+
     info->frame = av_frame_alloc();
     if (info->frame == nullptr) {
         LOGE("can't allocate frame %s", info->src);
         delete info;
         return 0;
     }
-    
+
     av_init_packet(&info->pkt);
     info->pkt.data = NULL;
     info->pkt.size = 0;
-    
+
     jint *dataArr = env->GetIntArrayElements(data, 0);
     if (dataArr != nullptr) {
         dataArr[0] = info->video_dec_ctx->width;
@@ -181,9 +181,9 @@ jlong Java_org_telegram_ui_Components_AnimatedFileDrawable_createDecoder(JNIEnv
         }
         env->ReleaseIntArrayElements(data, dataArr, 0);
     }
-    
+
     //LOGD("successfully opened file %s", info->src);
-    
+
     return (jlong) (intptr_t) info;
 }
 
@@ -195,7 +195,7 @@ void Java_org_telegram_ui_Components_AnimatedFileDrawable_destroyDecoder(JNIEnv
     delete info;
 }
 
-    
+
 jint Java_org_telegram_ui_Components_AnimatedFileDrawable_getVideoFrame(JNIEnv *env, jclass clazz, jlong ptr, jobject bitmap, jintArray data) {
     if (ptr == NULL || bitmap == nullptr) {
         return 0;
@@ -212,7 +212,7 @@ jint Java_org_telegram_ui_Components_AnimatedFileDrawable_getVideoFrame(JNIEnv *
                 info->orig_pkt = info->pkt;
             }
         }
-        
+
         if (info->pkt.size > 0) {
             ret = decode_packet(info, &got_frame);
             if (ret < 0) {
@@ -225,7 +225,7 @@ jint Java_org_telegram_ui_Components_AnimatedFileDrawable_getVideoFrame(JNIEnv *
                 info->pkt.data += ret;
                 info->pkt.size -= ret;
             }
-            
+
             if (info->pkt.size == 0) {
                 av_packet_unref(&info->orig_pkt);
             }
@@ -269,7 +269,7 @@ jint Java_org_telegram_ui_Components_AnimatedFileDrawable_getVideoFrame(JNIEnv *
                     wantedWidth = bitmapInfo.width;
                     wantedHeight = bitmapInfo.height;
                 }
-                
+
                 void *pixels;
                 if (AndroidBitmap_lockPixels(env, bitmap, &pixels) >= 0) {
                     if (info->frame->format == AV_PIX_FMT_YUV420P || info->frame->format == AV_PIX_FMT_YUVJ420P) {
diff --git a/TMessagesProj/jni/tgnet/ApiScheme.h b/TMessagesProj/jni/tgnet/ApiScheme.h
index 77b11b6ae..9bff808ba 100644
--- a/TMessagesProj/jni/tgnet/ApiScheme.h
+++ b/TMessagesProj/jni/tgnet/ApiScheme.h
@@ -11,7 +11,6 @@
 
 #include <vector>
 #include <memory>
-#include <bits/unique_ptr.h>
 #include "TLObject.h"
 
 class ByteArray;
diff --git a/TMessagesProj/jni/tgnet/ConnectionsManager.h b/TMessagesProj/jni/tgnet/ConnectionsManager.h
index b64e057a3..f7a395953 100644
--- a/TMessagesProj/jni/tgnet/ConnectionsManager.h
+++ b/TMessagesProj/jni/tgnet/ConnectionsManager.h
@@ -15,7 +15,7 @@
 #include <sys/epoll.h>
 #include <map>
 #include <atomic>
-#include <bits/unique_ptr.h>
+#include <memory>
 #include "Defines.h"
 
 #ifdef ANDROID
diff --git a/TMessagesProj/jni/tgnet/Datacenter.h b/TMessagesProj/jni/tgnet/Datacenter.h
index d59f74f3f..bc18de4b8 100644
--- a/TMessagesProj/jni/tgnet/Datacenter.h
+++ b/TMessagesProj/jni/tgnet/Datacenter.h
@@ -12,7 +12,7 @@
 #include <stdint.h>
 #include <vector>
 #include <map>
-#include <bits/unique_ptr.h>
+#include <memory>
 #include "Defines.h"
 
 class TL_future_salt;
diff --git a/TMessagesProj/jni/tgnet/Defines.h b/TMessagesProj/jni/tgnet/Defines.h
index c14003cfd..4a6380da8 100644
--- a/TMessagesProj/jni/tgnet/Defines.h
+++ b/TMessagesProj/jni/tgnet/Defines.h
@@ -12,7 +12,7 @@
 #include <functional>
 #include <list>
 #include <limits.h>
-#include <bits/unique_ptr.h>
+#include <memory>
 #include <sstream>
 #include <inttypes.h>
 #include "ByteArray.h"
diff --git a/TMessagesProj/jni/tgnet/MTProtoScheme.h b/TMessagesProj/jni/tgnet/MTProtoScheme.h
index c1611fedc..28998769d 100644
--- a/TMessagesProj/jni/tgnet/MTProtoScheme.h
+++ b/TMessagesProj/jni/tgnet/MTProtoScheme.h
@@ -12,7 +12,6 @@
 #include <vector>
 #include <memory>
 #include <map>
-#include <bits/unique_ptr.h>
 #include "TLObject.h"
 
 class ByteArray;
diff --git a/TMessagesProj/jni/tgnet/Request.h b/TMessagesProj/jni/tgnet/Request.h
index 45f3dcf2f..b1824bea7 100644
--- a/TMessagesProj/jni/tgnet/Request.h
+++ b/TMessagesProj/jni/tgnet/Request.h
@@ -11,7 +11,7 @@
 
 #include <stdint.h>
 #include <vector>
-#include <bits/unique_ptr.h>
+#include <memory>
 #include "Defines.h"
 
 #ifdef ANDROID
diff --git a/TMessagesProj/jni/utils.h b/TMessagesProj/jni/utils.h
index 34805a1d7..0b272173b 100644
--- a/TMessagesProj/jni/utils.h
+++ b/TMessagesProj/jni/utils.h
@@ -17,13 +17,20 @@
 #define LOGV(...)
 #endif
 
+#ifdef __cplusplus
+// Use std::min/std::max from <algorithm> rather than the macros used for C
+// since the macros will collide with things like numeric_limits::max.
+#include <algorithm>
+using std::min;
+using std::max;
+#else
 #ifndef max
 #define max(x, y) ((x) > (y)) ? (x) : (y)
 #endif
 #ifndef min
 #define min(x, y) ((x) < (y)) ? (x) : (y)
 #endif
-
+#endif
 void throwException(JNIEnv *env, char *format, ...);
 
 #endif
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java b/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
index f1e8f6f06..e27d53d5e 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/AndroidUtilities.java
@@ -1612,18 +1612,18 @@ public void onAnimationEnd(Animator animation) {
     }*/
 
     public static void checkForCrashes(Activity context) {
-        CrashManager.register(context, BuildVars.DEBUG_VERSION ? BuildVars.HOCKEY_APP_HASH_DEBUG : BuildVars.HOCKEY_APP_HASH, new CrashManagerListener() {
+       /* CrashManager.register(context, BuildVars.DEBUG_VERSION ? BuildVars.HOCKEY_APP_HASH_DEBUG : BuildVars.HOCKEY_APP_HASH, new CrashManagerListener() {
             @Override
             public boolean includeDeviceData() {
                 return true;
             }
-        });
+        });*/
     }
 
     public static void checkForUpdates(Activity context) {
-        if (BuildVars.DEBUG_VERSION) {
+       /* if (BuildVars.DEBUG_VERSION) {
             UpdateManager.register(context, BuildVars.DEBUG_VERSION ? BuildVars.HOCKEY_APP_HASH_DEBUG : BuildVars.HOCKEY_APP_HASH);
-        }
+        }*/
     }
 
     public static void unregisterUpdates() {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java b/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java
index 035346381..a6c10b83c 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java
@@ -19,8 +19,8 @@
     public static boolean CHECK_UPDATES = false;
     public static int BUILD_VERSION = 1358;
     public static String BUILD_VERSION_STRING = "4.9.1";
-    public static int APP_ID = 0; //obtain your own APP_ID at https://core.telegram.org/api/obtaining_api_id
-    public static String APP_HASH = ""; //obtain your own APP_HASH at https://core.telegram.org/api/obtaining_api_id
+    public static int APP_ID = 584960; //obtain your own APP_ID at https://core.telegram.org/api/obtaining_api_id
+    public static String APP_HASH = "22a50dcfb9e5df1c0bd22d514ecd5ba3"; //obtain your own APP_HASH at https://core.telegram.org/api/obtaining_api_id
     public static String HOCKEY_APP_HASH = "your-hockeyapp-api-key-here";
     public static String HOCKEY_APP_HASH_DEBUG = "your-hockeyapp-api-key-here";
     public static String PLAYSTORE_APP_URL = "";
diff --git a/build.gradle b/build.gradle
index a52999e7e..061f42100 100644
--- a/build.gradle
+++ b/build.gradle
@@ -6,7 +6,7 @@ buildscript {
         google()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.1.4'
+        classpath 'com.android.tools.build:gradle:3.2.1'
         classpath 'com.google.gms:google-services:4.0.2'
     }
 }
diff --git a/gradle.properties b/gradle.properties
index 1757d6d57..8cf91513f 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -17,7 +17,7 @@ RELEASE_KEY_PASSWORD=password
 RELEASE_KEY_ALIAS=alias
 RELEASE_STORE_PASSWORD=password
 android.useDeprecatedNdk=true
-android.enableD8=false
+android.enableD8=true
 org.gradle.jvmargs=-Xmx4096M -XX:MaxPermSize=4096m
 org.gradle.daemon=true
 org.gradle.parallel=true
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 12d83c76d..0b244d3c2 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Mon Apr 16 20:02:38 MSK 2018
+#Wed Oct 31 19:41:33 WIB 2018
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.4-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.6-all.zip
