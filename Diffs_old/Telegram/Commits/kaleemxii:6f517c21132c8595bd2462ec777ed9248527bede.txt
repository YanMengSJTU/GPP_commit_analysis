diff --git a/TMessagesProj/src/main/java/BotchaHelper/Helpers.java b/TMessagesProj/src/main/java/BotchaHelper/Helpers.java
new file mode 100644
index 000000000..3443fafd3
--- /dev/null
+++ b/TMessagesProj/src/main/java/BotchaHelper/Helpers.java
@@ -0,0 +1,51 @@
+package BotchaHelper;
+
+import android.os.AsyncTask;
+import android.util.Log;
+
+import org.springframework.http.converter.json.MappingJackson2HttpMessageConverter;
+import org.springframework.web.client.RestTemplate;
+
+import DataSchema.Greeting;
+
+/**
+ * Created by shverm on 1/31/2016.
+ */
+public class Helpers {
+    public static void helloWorld() {
+        String s = "hola";
+    }
+    public static void interceptSentMessage(int userID, String message, String channelID) {
+        String url = "http://botchaapis.appspot.com/sendmessage?channelId=" + channelID + "&userId=" + userID + "&message=" + message;
+        Log.i("Botcha send message url", url);
+        new HttpRequestTask().execute(url);
+    }
+
+    private static class HttpRequestTask extends AsyncTask<Void, Void, Greeting> {
+        String urlToCall = "http://rest-service.guides.spring.io/greeting";
+        @Override
+        protected Greeting doInBackground(Void... params) {
+            try {
+                //final String url2 = "http://rest-service.guides.spring.io/greeting";
+                //final String url = "http://botchaapis.appspot.com/sendmessage?channelId=192493113:AAEd8UGh8sum7P02Np39m2cGhuFRyT7xkj4&userId=113462548&message=dffd";
+                RestTemplate restTemplate = new RestTemplate();
+                restTemplate.getMessageConverters().add(new MappingJackson2HttpMessageConverter());
+                return restTemplate.getForObject(urlToCall, Greeting.class);
+            } catch (Exception e) {
+                Log.e("MainActivity", e.getMessage(), e);
+            }
+
+            return null;
+        }
+
+        @Override
+        protected void onPostExecute(Greeting greeting) {
+            Log.i("botcha executed url", urlToCall);
+            //Log.i("botcha", String.format("value of greeting content: %s", greeting.getContent()));
+        }
+
+        public void execute(String url) {
+            this.urlToCall = url;
+        }
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/LocationService.java b/TMessagesProj/src/main/java/org/telegram/messenger/LocationService.java
index b78f6550b..b58b7faf3 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/LocationService.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/LocationService.java
@@ -190,6 +190,8 @@ public void onStatusChanged(String provider, int status, Bundle extras)
 
         @Override
         protected void onPostExecute(List<Channel> channels) {
+            if (channels == null || channels.size() == 0)
+                return;
             Toast.makeText(getApplicationContext(), "Id: " + channels.get(0).getChannelTag(), Toast.LENGTH_SHORT).show();
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 95a9ededf..0d4ce7955 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -373,6 +373,7 @@ public boolean onFragmentCreate() {
 
         if (chatId != 0) {
             currentChat = MessagesController.getInstance().getChat(chatId);
+            Log.i("Bocha creating currentChat", "current chat");
             if (currentChat == null) {
                 final Semaphore semaphore = new Semaphore(0);
                 MessagesStorage.getInstance().getStorageQueue().postRunnable(new Runnable() {
@@ -1966,6 +1967,18 @@ public void onMessageSend(String message) {
                     mentionsAdapter.addHashtagsFromMessage(message);
                 }
                 Log.i("botcha sent messages", String.format("the message on messge send: %S", message));
+                int userID = UserConfig.getClientUserId();
+                Log.i("botcha id", Integer.toString(userID));
+                Log.i("botcha message", message);
+                if (currentChat == null) {
+                    Log.i("botcha null current chat", "current chat null");
+
+                } else {
+                    Log.i("botcha id", String.format("id: %d", currentChat.id));
+                    BotchaHelper.Helpers.interceptSentMessage(userID, message, Integer.toString(currentChat.id));
+                }
+
+
             }
 
             @Override
