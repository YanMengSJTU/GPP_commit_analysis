diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 3f53876b9..07945bee6 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -9723,6 +9723,30 @@ private boolean updatePrintingUsersWithNewMessages(long uid, ArrayList<MessageOb
         return false;
     }
 
+    public ArrayList<MessageObject> filterBlockedMessages(ArrayList<MessageObject> messages, boolean remove) {
+        final ArrayList<MessageObject> filtered = new ArrayList<>();
+        for (MessageObject message : messages) {
+            if (message.isFromUser() && blockedUsers.indexOfKey(message.messageOwner.from_id) >= 0) {
+                if (!remove) {
+                    TLRPC.Message blockMsg = new TLRPC.TL_message();
+                    blockMsg.message = "Blocked message";
+                    blockMsg.id = message.getId();
+                    blockMsg.date = message.messageOwner.date;
+                    MessageObject blockObj = new MessageObject(currentAccount, blockMsg, false);
+                    blockObj.type = 10;
+                    blockObj.contentType = 1;
+
+                    filtered.add(blockObj);
+                }
+                continue;
+            }
+
+            filtered.add(message);
+        }
+
+        return filtered;
+    }
+
     protected void updateInterfaceWithMessages(long uid, ArrayList<MessageObject> messages) {
         updateInterfaceWithMessages(uid, messages, false);
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java
index 3656f5c65..ec12365fa 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/NotificationsController.java
@@ -589,6 +589,7 @@ public void processNewMessages(final ArrayList<MessageObject> messageObjects, fi
             }
             return;
         }
+
         final ArrayList<MessageObject> popupArrayAdd = new ArrayList<>(0);
         notificationsQueue.postRunnable(() -> {
             boolean added = false;
@@ -598,8 +599,9 @@ public void processNewMessages(final ArrayList<MessageObject> messageObjects, fi
             boolean allowPinned = preferences.getBoolean("PinnedMessages", true);
             int popup = 0;
 
-            for (int a = 0; a < messageObjects.size(); a++) {
-                MessageObject messageObject = messageObjects.get(a);
+            final ArrayList<MessageObject> filteredMessages = MessagesController.getInstance(currentAccount).filterBlockedMessages(messageObjects, true);
+            for (int a = 0; a < filteredMessages.size(); a++) {
+                MessageObject messageObject = filteredMessages.get(a);
                 long mid = messageObject.getId();
                 long random_id = messageObject.isFcmMessage() ? messageObject.messageOwner.random_id : 0;
                 long dialog_id = messageObject.getDialogId();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 8fb63ab9c..d302f5154 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -7227,6 +7227,7 @@ public void didReceivedNotification(int id, int account, final Object... args) {
                     waitingForLoad.remove(index);
                 }
                 ArrayList<MessageObject> messArr = (ArrayList<MessageObject>) args[2];
+                messArr = MessagesController.getInstance(currentAccount).filterBlockedMessages(messArr, false);
                 boolean createUnreadLoading = false;
                 if (waitingForReplyMessageLoad) {
                     if (!createUnreadMessageAfterIdLoading) {
@@ -7917,6 +7918,7 @@ public void didReceivedNotification(int id, int account, final Object... args) {
                 boolean updateChat = false;
                 boolean hasFromMe = false;
                 ArrayList<MessageObject> arr = (ArrayList<MessageObject>) args[1];
+                arr = MessagesController.getInstance(currentAccount).filterBlockedMessages(arr, false);
                 if (currentEncryptedChat != null && arr.size() == 1) {
                     MessageObject obj = arr.get(0);
 
