diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index 6cd896cc3..24c5e8949 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -80,7 +80,7 @@ android {
     defaultConfig {
         minSdkVersion 8
         targetSdkVersion 21
-        versionCode 391
-        versionName "2.0.2"
+        versionCode 395
+        versionName "2.0.4"
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/ContactsController.java b/TMessagesProj/src/main/java/org/telegram/android/ContactsController.java
index d10ae4e71..8fe61f985 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/ContactsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/ContactsController.java
@@ -1636,6 +1636,9 @@ public void run() {
                                     TLRPC.User toDbUser = new TLRPC.User();
                                     TLRPC.TL_contactStatus status = (TLRPC.TL_contactStatus) object;
 
+                                    if (status == null) {
+                                        continue;
+                                    }
                                     if (status.status instanceof TLRPC.TL_userStatusRecently) {
                                         status.status.expires = -100;
                                     } else if (status.status instanceof TLRPC.TL_userStatusLastWeek) {
diff --git a/TMessagesProj/src/main/java/org/telegram/android/LocaleController.java b/TMessagesProj/src/main/java/org/telegram/android/LocaleController.java
index 6da2ae3b1..ce0f24729 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/LocaleController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/LocaleController.java
@@ -791,6 +791,11 @@ public static String formatUserStatus(TLRPC.User user) {
                 user.status.expires = -102;
             }
         }
+        if (user != null && user.status != null && user.status.expires <= 0) {
+            if (MessagesController.getInstance().onlinePrivacy.containsKey(user.id)) {
+                return getString("Online", R.string.Online);
+            }
+        }
         if (user == null || user.status == null || user.status.expires == 0 || user instanceof TLRPC.TL_userDeleted || user instanceof TLRPC.TL_userEmpty) {
             return getString("ALongTimeAgo", R.string.ALongTimeAgo);
         } else {
diff --git a/TMessagesProj/src/main/java/org/telegram/android/MediaController.java b/TMessagesProj/src/main/java/org/telegram/android/MediaController.java
index 1bc67365a..b87fa1760 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MediaController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MediaController.java
@@ -1542,13 +1542,17 @@ public static void saveFile(String fullPath, Context context, final int type, fi
         if (sourceFile.exists()) {
             ProgressDialog progressDialog = null;
             if (context != null) {
-                progressDialog = new ProgressDialog(context);
-                progressDialog.setMessage(LocaleController.getString("Loading", R.string.Loading));
-                progressDialog.setCanceledOnTouchOutside(false);
-                progressDialog.setCancelable(false);
-                progressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
-                progressDialog.setMax(100);
-                progressDialog.show();
+                try {
+                    progressDialog = new ProgressDialog(context);
+                    progressDialog.setMessage(LocaleController.getString("Loading", R.string.Loading));
+                    progressDialog.setCanceledOnTouchOutside(false);
+                    progressDialog.setCancelable(false);
+                    progressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
+                    progressDialog.setMax(100);
+                    progressDialog.show();
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                }
             }
 
             final ProgressDialog finalProgress = progressDialog;
diff --git a/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
index 69f5f2fff..21c5c2307 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
@@ -52,9 +52,10 @@
     public ArrayList<TLRPC.TL_dialog> dialogsServerOnly = new ArrayList<TLRPC.TL_dialog>();
     public ConcurrentHashMap<Long, TLRPC.TL_dialog> dialogs_dict = new ConcurrentHashMap<Long, TLRPC.TL_dialog>(100, 1.0f, 2);
     public HashMap<Integer, MessageObject> dialogMessage = new HashMap<Integer, MessageObject>();
-    public ConcurrentHashMap<Long, ArrayList<PrintingUser>> printingUsers = new ConcurrentHashMap<Long, ArrayList<PrintingUser>>(100, 1.0f, 2);
+    public ConcurrentHashMap<Long, ArrayList<PrintingUser>> printingUsers = new ConcurrentHashMap<Long, ArrayList<PrintingUser>>(20, 1.0f, 2);
     public HashMap<Long, CharSequence> printingStrings = new HashMap<Long, CharSequence>();
     public HashMap<Long, Boolean> sendingTypings = new HashMap<Long, Boolean>();
+    public ConcurrentHashMap<Integer, Integer> onlinePrivacy = new ConcurrentHashMap<Integer, Integer>(20, 1.0f, 2);
     private int lastPrintingStringCount = 0;
 
     public boolean loadingBlockedUsers = false;
@@ -316,6 +317,7 @@ public void cleanUp() {
         dialogMessage.clear();
         printingUsers.clear();
         printingStrings.clear();
+        onlinePrivacy.clear();
         totalDialogsCount = 0;
         lastPrintingStringCount = 0;
         updatesQueue.clear();
@@ -1062,12 +1064,13 @@ public void deleteDialog(final long did, int offset, final boolean onlyHistory)
         if (offset == 0) {
             MessagesStorage.getInstance().deleteDialog(did, onlyHistory);
         }
-        TLRPC.TL_dialog dialog = dialogs_dict.get(did);
-        if (dialog != null) {
-            int lower_part = (int)did;
-            int high_id = (int)(did >> 32);
 
-            if (offset == 0) {
+        int lower_part = (int)did;
+        int high_id = (int)(did >> 32);
+
+        if (offset == 0) {
+            TLRPC.TL_dialog dialog = dialogs_dict.get(did);
+            if (dialog != null) {
                 if (!onlyHistory) {
                     dialogs.remove(dialog);
                     dialogsServerOnly.remove(dialog);
@@ -1077,62 +1080,62 @@ public void deleteDialog(final long did, int offset, final boolean onlyHistory)
                     dialog.unread_count = 0;
                 }
                 dialogMessage.remove(dialog.top_message);
-                MessagesStorage.getInstance().getStorageQueue().postRunnable(new Runnable() {
-                    @Override
-                    public void run() {
-                        AndroidUtilities.runOnUIThread(new Runnable() {
-                            @Override
-                            public void run() {
-                                NotificationsController.getInstance().processReadMessages(null, did, 0, Integer.MAX_VALUE, false);
-                                HashMap<Long, Integer> dialogsToUpdate = new HashMap<Long, Integer>();
-                                dialogsToUpdate.put(did, 0);
-                                NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate);
-                            }
-                        });
-                    }
-                });
-                NotificationCenter.getInstance().postNotificationName(NotificationCenter.removeAllMessagesFromDialog, did);
-                NotificationCenter.getInstance().postNotificationName(NotificationCenter.dialogsNeedReload);
             }
+            MessagesStorage.getInstance().getStorageQueue().postRunnable(new Runnable() {
+                @Override
+                public void run() {
+                    AndroidUtilities.runOnUIThread(new Runnable() {
+                        @Override
+                        public void run() {
+                            NotificationsController.getInstance().processReadMessages(null, did, 0, Integer.MAX_VALUE, false);
+                            HashMap<Long, Integer> dialogsToUpdate = new HashMap<Long, Integer>();
+                            dialogsToUpdate.put(did, 0);
+                            NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate);
+                        }
+                    });
+                }
+            });
+            NotificationCenter.getInstance().postNotificationName(NotificationCenter.removeAllMessagesFromDialog, did);
+            NotificationCenter.getInstance().postNotificationName(NotificationCenter.dialogsNeedReload);
+        }
 
-            if (high_id == 1) {
-                return;
-            }
+        if (high_id == 1) {
+            return;
+        }
 
-            if (lower_part != 0) {
-                TLRPC.TL_messages_deleteHistory req = new TLRPC.TL_messages_deleteHistory();
-                req.offset = offset;
-                if (did < 0) {
-                    req.peer = new TLRPC.TL_inputPeerChat();
-                    req.peer.chat_id = -lower_part;
+        if (lower_part != 0) {
+            TLRPC.TL_messages_deleteHistory req = new TLRPC.TL_messages_deleteHistory();
+            req.offset = offset;
+            if (did < 0) {
+                req.peer = new TLRPC.TL_inputPeerChat();
+                req.peer.chat_id = -lower_part;
+            } else {
+                TLRPC.User user = getUser(lower_part);
+                if (user instanceof TLRPC.TL_userForeign || user instanceof TLRPC.TL_userRequest) {
+                    req.peer = new TLRPC.TL_inputPeerForeign();
+                    req.peer.access_hash = user.access_hash;
                 } else {
-                    TLRPC.User user = getUser(lower_part);
-                    if (user instanceof TLRPC.TL_userForeign || user instanceof TLRPC.TL_userRequest) {
-                        req.peer = new TLRPC.TL_inputPeerForeign();
-                        req.peer.access_hash = user.access_hash;
-                    } else {
-                        req.peer = new TLRPC.TL_inputPeerContact();
-                    }
-                    req.peer.user_id = lower_part;
+                    req.peer = new TLRPC.TL_inputPeerContact();
                 }
-                ConnectionsManager.getInstance().performRpc(req, new RPCRequest.RPCRequestDelegate() {
-                    @Override
-                    public void run(TLObject response, TLRPC.TL_error error) {
-                        if (error == null) {
-                            TLRPC.TL_messages_affectedHistory res = (TLRPC.TL_messages_affectedHistory) response;
-                            if (res.offset > 0) {
-                                deleteDialog(did, res.offset, onlyHistory);
-                            }
-                            processNewDifferenceParams(res.seq, res.pts, -1);
+                req.peer.user_id = lower_part;
+            }
+            ConnectionsManager.getInstance().performRpc(req, new RPCRequest.RPCRequestDelegate() {
+                @Override
+                public void run(TLObject response, TLRPC.TL_error error) {
+                    if (error == null) {
+                        TLRPC.TL_messages_affectedHistory res = (TLRPC.TL_messages_affectedHistory) response;
+                        if (res.offset > 0) {
+                            deleteDialog(did, res.offset, onlyHistory);
                         }
+                        processNewDifferenceParams(res.seq, res.pts, -1);
                     }
-                });
-            } else {
-                if (onlyHistory) {
-                    SendMessagesHelper.getInstance().sendClearHistoryMessage(getEncryptedChat(high_id), null);
-                } else {
-                    declineSecretChat(high_id);
                 }
+            });
+        } else {
+            if (onlyHistory) {
+                SendMessagesHelper.getInstance().sendClearHistoryMessage(getEncryptedChat(high_id), null);
+            } else {
+                declineSecretChat(high_id);
             }
         }
     }
@@ -1215,6 +1218,29 @@ public void run(TLObject response, TLRPC.TL_error error) {
                 processUpdatesQueue(0);
             }
         }
+        if (!onlinePrivacy.isEmpty()) {
+            ArrayList<Integer> toRemove = null;
+            int currentServerTime = ConnectionsManager.getInstance().getCurrentTime();
+            for (ConcurrentHashMap.Entry<Integer, Integer> entry : onlinePrivacy.entrySet()) {
+                if (entry.getValue() < currentServerTime - 30) {
+                    if (toRemove == null) {
+                        toRemove = new ArrayList<Integer>();
+                    }
+                    toRemove.add(entry.getKey());
+                }
+            }
+            if (toRemove != null) {
+                for (Integer uid : toRemove) {
+                    onlinePrivacy.remove(uid);
+                }
+                AndroidUtilities.runOnUIThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        NotificationCenter.getInstance().postNotificationName(NotificationCenter.updateInterfaces, UPDATE_MASK_STATUS);
+                    }
+                });
+            }
+        }
         if (!printingUsers.isEmpty() || lastPrintingStringCount != printingUsers.size()) {
             boolean updated = false;
             ArrayList<Long> keys = new ArrayList<Long>(printingUsers.keySet());
@@ -1455,6 +1481,7 @@ public void loadDialogs(final int offset, final int serverOffset, final int coun
             return;
         }
         loadingDialogs = true;
+        NotificationCenter.getInstance().postNotificationName(NotificationCenter.dialogsNeedReload);
 
         if (fromCache) {
             MessagesStorage.getInstance().getDialogs(offset, serverOffset, count);
@@ -2678,12 +2705,18 @@ public void processUpdates(final TLRPC.Updates updates, boolean fromQueue) {
         boolean needGetDiff = false;
         boolean needReceivedQueue = false;
         boolean addedToQueue = false;
+        boolean updateStatus = false;
         if (updates instanceof TLRPC.TL_updateShort) {
             ArrayList<TLRPC.Update> arr = new ArrayList<TLRPC.Update>();
             arr.add(updates.update);
             processUpdateArray(arr, null, null);
         } else if (updates instanceof TLRPC.TL_updateShortChatMessage) {
-            boolean missingData = getChat(updates.chat_id) == null || getUser(updates.from_id) == null;
+            TLRPC.User user = getUser(updates.from_id);
+            if (user != null && user.status != null && user.status.expires <= 0) {
+                onlinePrivacy.put(user.id, ConnectionsManager.getInstance().getCurrentTime());
+                updateStatus = true;
+            }
+            boolean missingData = getChat(updates.chat_id) == null || user == null;
             if (missingData) {
                 needGetDiff = true;
             } else {
@@ -2748,7 +2781,12 @@ public void run() {
                 }
             }
         } else if (updates instanceof TLRPC.TL_updateShortMessage) {
-            boolean missingData = getUser(updates.from_id) == null;
+            TLRPC.User user = getUser(updates.from_id);
+            if (user != null && user.status != null && user.status.expires <= 0) {
+                onlinePrivacy.put(user.id, ConnectionsManager.getInstance().getCurrentTime());
+                updateStatus = true;
+            }
+            boolean missingData = user == null;
             if (missingData) {
                 needGetDiff = true;
             } else {
@@ -2895,6 +2933,14 @@ public void run(TLObject response, TLRPC.TL_error error) {
                 }
             });
         }
+        if (updateStatus) {
+            AndroidUtilities.runOnUIThread(new Runnable() {
+                @Override
+                public void run() {
+                    NotificationCenter.getInstance().postNotificationName(NotificationCenter.updateInterfaces, UPDATE_MASK_STATUS);
+                }
+            });
+        }
         MessagesStorage.getInstance().saveDiffParams(MessagesStorage.lastSeqValue, MessagesStorage.lastPtsValue, MessagesStorage.lastDateValue, MessagesStorage.lastQtsValue);
     }
 
@@ -2954,9 +3000,15 @@ public void run() {
             if (update instanceof TLRPC.TL_updateNewMessage) {
                 TLRPC.TL_updateNewMessage upd = (TLRPC.TL_updateNewMessage)update;
                 if (checkForUsers) {
-                    if (usersDict.get(upd.message.from_id) == null && getUser(upd.message.from_id) == null || upd.message.to_id.chat_id != 0 && chatsDict.get(upd.message.to_id.chat_id) == null && getChat(upd.message.to_id.chat_id) == null) {
+                    TLRPC.User user = getUser(upd.message.from_id);
+                    if (usersDict.get(upd.message.from_id) == null && user == null || upd.message.to_id.chat_id != 0 && chatsDict.get(upd.message.to_id.chat_id) == null && getChat(upd.message.to_id.chat_id) == null) {
                         return false;
                     }
+
+                    if (user != null && user.status != null && user.status.expires <= 0) {
+                        onlinePrivacy.put(upd.message.from_id, ConnectionsManager.getInstance().getCurrentTime());
+                        interfaceUpdateMask |= UPDATE_MASK_STATUS;
+                    }
                 }
                 messagesArr.add(upd.message);
                 MessageObject obj = new MessageObject(upd.message, usersDict, 2);
@@ -3018,6 +3070,7 @@ public void run() {
                         arr.add(newUser);
                         printChanged = true;
                     }
+                    onlinePrivacy.put(update.user_id, ConnectionsManager.getInstance().getCurrentTime());
                 }
             } else if (update instanceof TLRPC.TL_updateChatParticipants) {
                 interfaceUpdateMask |= UPDATE_MASK_CHAT_MEMBERS;
@@ -3143,6 +3196,7 @@ public void run() {
                         arr.add(newUser);
                         printChanged = true;
                     }
+                    onlinePrivacy.put(update.user_id, ConnectionsManager.getInstance().getCurrentTime());
                 }
             } else if (update instanceof TLRPC.TL_updateEncryptedMessagesRead) {
                 markAsReadEncrypted.put(update.chat_id, Math.max(update.max_date, update.date));
diff --git a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
index 3aa873fac..e63e291d8 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
@@ -8,6 +8,7 @@
 
 package org.telegram.android;
 
+import android.app.Activity;
 import android.app.AlarmManager;
 import android.app.PendingIntent;
 import android.content.Context;
@@ -235,8 +236,10 @@ private void scheduleNotificationRepeat() {
         try {
             AlarmManager alarm = (AlarmManager) ApplicationLoader.applicationContext.getSystemService(Context.ALARM_SERVICE);
             PendingIntent pintent = PendingIntent.getService(ApplicationLoader.applicationContext, 0, new Intent(ApplicationLoader.applicationContext, NotificationRepeat.class), 0);
-            if (personal_count > 0) {
-                alarm.set(AlarmManager.ELAPSED_REALTIME_WAKEUP, SystemClock.elapsedRealtime() + 60 * 60 * 1000, pintent);
+            SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+            int minutes = preferences.getInt("repeat_messages", 60);
+            if (minutes > 0 && personal_count > 0) {
+                alarm.set(AlarmManager.RTC_WAKEUP, System.currentTimeMillis() + minutes * 60 * 1000, pintent);
             } else {
                 alarm.cancel(pintent);
             }
@@ -289,6 +292,9 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
             boolean inAppSounds = false;
             boolean inAppVibrate = false;
             boolean inAppPreview = false;
+            boolean inAppPriority = false;
+            int priority = 0;
+            int priority_override = 0;
             int vibrate_override = 0;
 
             SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
@@ -302,7 +308,9 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                 inAppSounds = preferences.getBoolean("EnableInAppSounds", true);
                 inAppVibrate = preferences.getBoolean("EnableInAppVibrate", true);
                 inAppPreview = preferences.getBoolean("EnableInAppPreview", true);
+                inAppPriority = preferences.getBoolean("EnableInAppPriority", false);
                 vibrate_override = preferences.getInt("vibrate_" + dialog_id, 0);
+                priority_override = preferences.getInt("priority_" + dialog_id, 3);
 
                 choosenSoundPath = preferences.getString("sound_path_" + dialog_id, null);
                 if (chat_id != 0) {
@@ -312,6 +320,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                         choosenSoundPath = preferences.getString("GroupSoundPath", defaultPath);
                     }
                     needVibrate = preferences.getInt("vibrate_group", 0);
+                    priority = preferences.getInt("priority_group", 1);
                     ledColor = preferences.getInt("GroupLed", 0xff00ff00);
                 } else if (user_id != 0) {
                     if (choosenSoundPath != null && choosenSoundPath.equals(defaultPath)) {
@@ -320,12 +329,17 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                         choosenSoundPath = preferences.getString("GlobalSoundPath", defaultPath);
                     }
                     needVibrate = preferences.getInt("vibrate_messages", 0);
+                    priority = preferences.getInt("priority_group", 1);
                     ledColor = preferences.getInt("MessagesLed", 0xff00ff00);
                 }
                 if (preferences.contains("color_" + dialog_id)) {
                     ledColor = preferences.getInt("color_" + dialog_id, 0);
                 }
 
+                if (priority_override != 3) {
+                    priority = priority_override;
+                }
+
                 if (needVibrate == 2 && (vibrate_override == 1 || vibrate_override == 3 || vibrate_override == 5) || needVibrate != 2 && vibrate_override == 2 || vibrate_override != 0) {
                     needVibrate = vibrate_override;
                 }
@@ -336,6 +350,11 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                     if (!inAppVibrate) {
                         needVibrate = 2;
                     }
+                    if (!inAppPriority) {
+                        priority = 0;
+                    } else if (priority == 2) {
+                        priority = 1;
+                    }
                 }
             }
 
@@ -397,6 +416,14 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                     .setGroup("messages")
                     .setGroupSummary(true);
 
+            if (priority == 0) {
+                mBuilder.setPriority(NotificationCompat.PRIORITY_DEFAULT);
+            } else if (priority == 1) {
+                mBuilder.setPriority(NotificationCompat.PRIORITY_HIGH);
+            } else if (priority == 2) {
+                mBuilder.setPriority(NotificationCompat.PRIORITY_MAX);
+            }
+
             String lastMessage = null;
             String lastMessageFull = null;
             if (pushMessages.size() == 1) {
diff --git a/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java
index be91dd15e..b815e734d 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java
@@ -17,6 +17,7 @@
 import android.os.Build;
 import android.provider.MediaStore;
 import android.webkit.MimeTypeMap;
+import android.widget.Toast;
 
 import org.telegram.messenger.BuffersStorage;
 import org.telegram.messenger.ByteBufferDesc;
@@ -24,6 +25,7 @@
 import org.telegram.messenger.FileLoader;
 import org.telegram.messenger.FileLog;
 import org.telegram.messenger.MessageKeyData;
+import org.telegram.messenger.R;
 import org.telegram.messenger.RPCRequest;
 import org.telegram.messenger.TLObject;
 import org.telegram.messenger.TLRPC;
@@ -1858,13 +1860,27 @@ public void run() {
         }
     }
 
-    private static void prepareSendingDocumentInternal(final String path, String originalPath, final long dialog_id) {
-        if (path == null || path.length() == 0) {
-            return;
+    private static boolean prepareSendingDocumentInternal(String path, String originalPath, Uri uri, String mime, final long dialog_id) {
+        if ((path == null || path.length() == 0) && uri == null) {
+            return false;
+        }
+        MimeTypeMap myMime = MimeTypeMap.getSingleton();
+        if (uri != null) {
+            String extension = null;
+            if (mime != null) {
+                extension = myMime.getExtensionFromMimeType(mime);
+            }
+            if (extension == null) {
+                extension = "txt";
+            }
+            path = MediaController.copyDocumentToCache(uri, extension);
+            if (path == null) {
+                return false;
+            }
         }
         final File f = new File(path);
         if (!f.exists() || f.length() == 0) {
-            return;
+            return false;
         }
 
         boolean isEncrypted = (int)dialog_id == 0;
@@ -1895,7 +1911,6 @@ private static void prepareSendingDocumentInternal(final String path, String ori
             document.size = (int)f.length();
             document.dc_id = 0;
             if (ext.length() != 0) {
-                MimeTypeMap myMime = MimeTypeMap.getSingleton();
                 String mimeType = myMime.getMimeTypeFromExtension(ext.toLowerCase());
                 if (mimeType != null) {
                     document.mime_type = mimeType;
@@ -1923,34 +1938,65 @@ private static void prepareSendingDocumentInternal(final String path, String ori
 
         final TLRPC.TL_document documentFinal = document;
         final String originalPathFinal = originalPath;
+        final String pathFinal = path;
         AndroidUtilities.runOnUIThread(new Runnable() {
             @Override
             public void run() {
-                SendMessagesHelper.getInstance().sendMessage(documentFinal, originalPathFinal, path, dialog_id);
+                SendMessagesHelper.getInstance().sendMessage(documentFinal, originalPathFinal, pathFinal, dialog_id);
             }
         });
+        return true;
     }
 
-    public static void prepareSendingDocument(String path, String originalPath, long dialog_id) {
-        if (path == null || originalPath == null) {
+    public static void prepareSendingDocument(String path, String originalPath, Uri uri, String mine, long dialog_id) {
+        if ((path == null || originalPath == null) && uri == null) {
             return;
         }
         ArrayList<String> paths = new ArrayList<String>();
         ArrayList<String> originalPaths = new ArrayList<String>();
+        ArrayList<Uri> uris = null;
+        if (uri != null) {
+            uris = new ArrayList<Uri>();
+        }
         paths.add(path);
         originalPaths.add(originalPath);
-        prepareSendingDocuments(paths, originalPaths, dialog_id);
+        prepareSendingDocuments(paths, originalPaths, uris, mine, dialog_id);
     }
 
-    public static void prepareSendingDocuments(final ArrayList<String> paths, final ArrayList<String> originalPaths, final long dialog_id) {
-        if (paths == null && originalPaths == null || paths != null && originalPaths != null && paths.size() != originalPaths.size()) {
+    public static void prepareSendingDocuments(final ArrayList<String> paths, final ArrayList<String> originalPaths, final ArrayList<Uri> uris, final String mime, final long dialog_id) {
+        if (paths == null && originalPaths == null && uris == null || paths != null && originalPaths != null && paths.size() != originalPaths.size()) {
             return;
         }
         new Thread(new Runnable() {
             @Override
             public void run() {
-                for (int a = 0; a < paths.size(); a++) {
-                    prepareSendingDocumentInternal(paths.get(a), originalPaths.get(a), dialog_id);
+                boolean error = false;
+                if (paths != null) {
+                    for (int a = 0; a < paths.size(); a++) {
+                        if (!prepareSendingDocumentInternal(paths.get(a), originalPaths.get(a), null, mime, dialog_id)) {
+                            error = true;
+                        }
+                    }
+                }
+                if (uris != null) {
+                    for (int a = 0; a < uris.size(); a++) {
+                        if (!prepareSendingDocumentInternal(null, null, uris.get(a), mime, dialog_id)) {
+                            error = true;
+                        }
+                    }
+                }
+                if (error) {
+                    AndroidUtilities.runOnUIThread(new Runnable() {
+                        @Override
+                        public void run() {
+                            try {
+                                Toast toast = Toast.makeText(ApplicationLoader.applicationContext, LocaleController.getString("UnsupportedAttachment", R.string.UnsupportedAttachment), Toast.LENGTH_SHORT);
+                                toast.show();
+                            } catch (Exception e) {
+                                FileLog.e("tmessages", e);
+                            }
+                        }
+                    });
                 }
             }
         }).start();
@@ -2052,7 +2098,7 @@ public void run() {
                 }
                 if (sendAsDocuments != null && !sendAsDocuments.isEmpty()) {
                     for (int a = 0; a < sendAsDocuments.size(); a++) {
-                        prepareSendingDocumentInternal(sendAsDocuments.get(a), sendAsDocumentsOriginal.get(a), dialog_id);
+                        prepareSendingDocumentInternal(sendAsDocuments.get(a), sendAsDocumentsOriginal.get(a), null, "gif", dialog_id);
                     }
                 }
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java b/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
index 06570717a..dc7201798 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
@@ -2236,6 +2236,17 @@ public void run() {
 
                 lastOutgoingMessageId = Math.max(messageId, lastOutgoingMessageId);
             }
+            long resultMid = ((TLRPC.TL_bad_server_salt) message).bad_msg_id;
+            if (resultMid != 0) {
+                for (RPCRequest request : runningRequests) {
+                    if ((request.flags & RPCRequest.RPCRequestClassDownloadMedia) == 0) {
+                        continue;
+                    }
+                    if (request.respondsToMessageId(resultMid)) {
+                        request.retryCount = 0;
+                    }
+                }
+            }
 
             datacenter.clearServerSalts();
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
index 224a7b1d9..5a9d53fb5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarLayout.java
@@ -567,6 +567,7 @@ public boolean presentFragment(final BaseFragment fragment, final boolean remove
             containerViewBack.addView(fragment.actionBar);
             fragment.actionBar.setTitleOverlayText(titleOverlayText);
         }
+
         containerViewBack.addView(fragmentView);
         ViewGroup.LayoutParams layoutParams = fragmentView.getLayoutParams();
         layoutParams.width = FrameLayout.LayoutParams.MATCH_PARENT;
@@ -623,13 +624,13 @@ public void onAnimationEnd(Object animation) {
                     public void run() {
                         presentFragmentInternalRemoveOld(removeLast, currentFragment);
                         fragment.onOpenAnimationEnd();
+                        ViewProxy.setTranslationX(containerView, 0);
                     }
                 };
                 currentAnimation = new AnimatorSetProxy();
                 currentAnimation.playTogether(
                         ObjectAnimatorProxy.ofFloat(containerView, "alpha", 0.0f, 1.0f),
-                        ObjectAnimatorProxy.ofFloat(containerView, "scaleX", 0.8f, 1.0f),
-                        ObjectAnimatorProxy.ofFloat(containerView, "scaleY", 0.8f, 1.0f));
+                        ObjectAnimatorProxy.ofFloat(containerView, "translationX", AndroidUtilities.dp(48), 0));
                 currentAnimation.setInterpolator(new DecelerateInterpolator(1.5f));
                 currentAnimation.setDuration(200);
                 currentAnimation.addListener(new AnimatorListenerAdapterProxy() {
@@ -731,14 +732,14 @@ public void closeLastFragment(boolean animated) {
                     @Override
                     public void run() {
                         closeLastFragmentInternalRemoveOld(currentFragment);
+                        ViewProxy.setTranslationX(containerViewBack, 0);
                     }
                 };
 
                 currentAnimation = new AnimatorSetProxy();
                 currentAnimation.playTogether(
                         ObjectAnimatorProxy.ofFloat(containerViewBack, "alpha", 1.0f, 0.0f),
-                        ObjectAnimatorProxy.ofFloat(containerViewBack, "scaleX", 1.0f, 0.8f),
-                        ObjectAnimatorProxy.ofFloat(containerViewBack, "scaleY", 1.0f, 0.8f));
+                        ObjectAnimatorProxy.ofFloat(containerViewBack, "translationX", 0, AndroidUtilities.dp(48)));
                 currentAnimation.setInterpolator(new DecelerateInterpolator(1.5f));
                 currentAnimation.setDuration(200);
                 currentAnimation.addListener(new AnimatorListenerAdapterProxy() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenu.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenu.java
index 8af54572a..7b9d202a0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenu.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarMenu.java
@@ -134,8 +134,9 @@ public void onMenuButtonPressed() {
             View view = getChildAt(a);
             if (view instanceof ActionBarMenuItem) {
                 ActionBarMenuItem item = (ActionBarMenuItem)view;
-                if (item.hasSubMenu()) {
+                if (item.hasSubMenu() && item.getVisibility() == VISIBLE) {
                     item.toggleSubMenu();
+                    break;
                 }
             }
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarPopupWindow.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarPopupWindow.java
index 5e5a302bb..c6f960c0e 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarPopupWindow.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/ActionBarPopupWindow.java
@@ -18,6 +18,8 @@
 import android.widget.LinearLayout;
 import android.widget.PopupWindow;
 
+import org.telegram.messenger.FileLog;
+
 import java.lang.reflect.Field;
 
 public class ActionBarPopupWindow extends PopupWindow {
@@ -157,8 +159,12 @@ private void registerListener(View anchor) {
 
     @Override
     public void showAsDropDown(View anchor, int xoff, int yoff) {
-        super.showAsDropDown(anchor, xoff, yoff);
-        registerListener(anchor);
+        try {
+            super.showAsDropDown(anchor, xoff, yoff);
+            registerListener(anchor);
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+        }
     }
 
     @Override
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
index 072ef79cc..8646005b2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BaseFragment.java
@@ -214,15 +214,19 @@ protected void showAlertDialog(AlertDialog.Builder builder) {
         } catch (Exception e) {
             FileLog.e("tmessages", e);
         }
-        visibleDialog = builder.show();
-        visibleDialog.setCanceledOnTouchOutside(true);
-        visibleDialog.setOnDismissListener(new DialogInterface.OnDismissListener() {
-            @Override
-            public void onDismiss(DialogInterface dialog) {
-                visibleDialog = null;
-                onDialogDismiss();
-            }
-        });
+        try {
+            visibleDialog = builder.show();
+            visibleDialog.setCanceledOnTouchOutside(true);
+            visibleDialog.setOnDismissListener(new DialogInterface.OnDismissListener() {
+                @Override
+                public void onDismiss(DialogInterface dialog) {
+                    visibleDialog = null;
+                    onDialogDismiss();
+                }
+            });
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+        }
     }
 
     protected void onDialogDismiss() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java
index ed57814ce..5cf62fbff 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/ContactsAdapter.java
@@ -52,7 +52,9 @@ public Object getItem(int section, int position) {
         if (onlyUsers) {
             if (section < ContactsController.getInstance().sortedUsersSectionsArray.size()) {
                 ArrayList<TLRPC.TL_contact> arr = ContactsController.getInstance().usersSectionsDict.get(ContactsController.getInstance().sortedUsersSectionsArray.get(section));
-                return MessagesController.getInstance().getUser(arr.get(position).user_id);
+                if (position < arr.size()) {
+                    return MessagesController.getInstance().getUser(arr.get(position).user_id);
+                }
             }
             return null;
         } else {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java
index 01ca05857..79c194fd8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java
@@ -52,6 +52,7 @@
     private boolean needMessagesSearch;
     private boolean messagesSearchEndReached;
     private String lastMessagesSearchString;
+    private int lastSearchId = 0;
 
     public static interface MessagesActivitySearchAdapterDelegate {
         public abstract void searchStateChanged(boolean searching);
@@ -137,15 +138,17 @@ public void run() {
         }, true, RPCRequest.RPCRequestClassGeneric | RPCRequest.RPCRequestClassFailOnServerErrors);
     }
 
-    private void searchDialogsInternal(final String query, final boolean serverOnly) {
+    private void searchDialogsInternal(final String query, final boolean serverOnly, final int searchId) {
         MessagesStorage.getInstance().getStorageQueue().postRunnable(new Runnable() {
             @Override
             public void run() {
                 try {
+                    FileLog.e("tmessages", "trigger search");
                     ArrayList<TLRPC.User> encUsers = new ArrayList<TLRPC.User>();
                     String q = query.trim().toLowerCase();
                     if (q.length() == 0) {
-                        updateSearchResults(new ArrayList<TLObject>(), new ArrayList<CharSequence>(), new ArrayList<TLRPC.User>());
+                        lastSearchId = -1;
+                        updateSearchResults(new ArrayList<TLObject>(), new ArrayList<CharSequence>(), new ArrayList<TLRPC.User>(), lastSearchId);
                         return;
                     }
                     ArrayList<TLObject> resultArray = new ArrayList<TLObject>();
@@ -253,7 +256,7 @@ public void run() {
                         }
                     }
                     cursor.dispose();
-                    updateSearchResults(resultArray, resultArrayNames, encUsers);
+                    updateSearchResults(resultArray, resultArrayNames, encUsers, searchId);
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
                 }
@@ -261,10 +264,13 @@ public void run() {
         });
     }
 
-    private void updateSearchResults(final ArrayList<TLObject> result, final ArrayList<CharSequence> names, final ArrayList<TLRPC.User> encUsers) {
+    private void updateSearchResults(final ArrayList<TLObject> result, final ArrayList<CharSequence> names, final ArrayList<TLRPC.User> encUsers, final int searchId) {
         AndroidUtilities.runOnUIThread(new Runnable() {
             @Override
             public void run() {
+                if (searchId != lastSearchId) {
+                    return;
+                }
                 for (TLObject obj : result) {
                     if (obj instanceof TLRPC.User) {
                         TLRPC.User user = (TLRPC.User) obj;
@@ -313,6 +319,7 @@ public void searchDialogs(final String query, final boolean serverOnly) {
             queryServerSearch(null);
             notifyDataSetChanged();
         } else {
+            final int searchId = ++lastSearchId;
             searchTimer = new Timer();
             searchTimer.schedule(new TimerTask() {
                 @Override
@@ -323,7 +330,7 @@ public void run() {
                     } catch (Exception e) {
                         FileLog.e("tmessages", e);
                     }
-                    searchDialogsInternal(query, serverOnly);
+                    searchDialogsInternal(query, serverOnly, searchId);
                     AndroidUtilities.runOnUIThread(new Runnable() {
                         @Override
                         public void run() {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
index 6da2759dc..0f0eb843d 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/BlockedUsersActivity.java
@@ -290,7 +290,9 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     view = new UserCell(mContext, 1);
                 }
                 TLRPC.User user = MessagesController.getInstance().getUser(MessagesController.getInstance().blockedUsers.get(i));
-                ((UserCell)view).setData(user, null, user.phone != null && user.phone.length() != 0 ? PhoneFormat.getInstance().format("+" + user.phone) : LocaleController.getString("NumberUnknown", R.string.NumberUnknown), 0);
+                if (user != null) {
+                    ((UserCell) view).setData(user, null, user.phone != null && user.phone.length() != 0 ? PhoneFormat.getInstance().format("+" + user.phone) : LocaleController.getString("NumberUnknown", R.string.NumberUnknown), 0);
+                }
             } else if (type == 1) {
                 if (view == null) {
                     view = new TextInfoCell(mContext);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
index 26bc739b0..decbc68ea 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/DialogCell.java
@@ -458,6 +458,7 @@ public void buildLayout() {
             }
         }
 
+        nameWidth = Math.max(AndroidUtilities.dp(12), nameWidth);
         CharSequence nameStringFinal = TextUtils.ellipsize(nameString.replace("\n", " "), currentNamePaint, nameWidth - AndroidUtilities.dp(12), TextUtils.TruncateAt.END);
         try {
             nameLayout = new StaticLayout(nameStringFinal, currentNamePaint, nameWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
@@ -510,9 +511,13 @@ public void buildLayout() {
             }
             messageString = Emoji.replaceEmoji(mess, messagePaint.getFontMetricsInt(), AndroidUtilities.dp(17));
         }
-
+        messageWidth = Math.max(AndroidUtilities.dp(12), messageWidth);
         CharSequence messageStringFinal = TextUtils.ellipsize(messageString, currentMessagePaint, messageWidth - AndroidUtilities.dp(12), TextUtils.TruncateAt.END);
-        messageLayout = new StaticLayout(messageStringFinal, currentMessagePaint, messageWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
+        try {
+            messageLayout = new StaticLayout(messageStringFinal, currentMessagePaint, messageWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+        }
 
         double widthpx = 0;
         float left = 0;
@@ -526,7 +531,7 @@ public void buildLayout() {
                     }
                 }
             }
-            if (messageLayout.getLineCount() > 0) {
+            if (messageLayout != null && messageLayout.getLineCount() > 0) {
                 left = messageLayout.getLineLeft(0);
                 if (left == 0) {
                     widthpx = Math.ceil(messageLayout.getLineWidth(0));
@@ -545,7 +550,7 @@ public void buildLayout() {
                     }
                 }
             }
-            if (messageLayout.getLineCount() > 0) {
+            if (messageLayout != null && messageLayout.getLineCount() > 0) {
                 left = messageLayout.getLineRight(0);
                 if (left == messageWidth) {
                     widthpx = Math.ceil(messageLayout.getLineWidth(0));
@@ -677,10 +682,12 @@ protected void onDraw(Canvas canvas) {
         timeLayout.draw(canvas);
         canvas.restore();
 
-        canvas.save();
-        canvas.translate(messageLeft, messageTop);
-        messageLayout.draw(canvas);
-        canvas.restore();
+        if (messageLayout != null) {
+            canvas.save();
+            canvas.translate(messageLeft, messageTop);
+            messageLayout.draw(canvas);
+            canvas.restore();
+        }
 
         if (drawClock) {
             setDrawableBounds(clockDrawable, checkDrawLeft, checkDrawTop);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
index 29b6d31a5..6ebeae2dd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChangeUsernameActivity.java
@@ -236,6 +236,11 @@ private boolean checkUserName(final String name, boolean alert) {
         }
         lastNameAvailable = false;
         if (name != null) {
+            if (name.startsWith("_") || name.endsWith("_")) {
+                checkTextView.setText(LocaleController.getString("UsernameInvalid", R.string.UsernameInvalid));
+                checkTextView.setTextColor(0xffcf3030);
+                return false;
+            }
             for (int a = 0; a < name.length(); a++) {
                 char ch = name.charAt(a);
                 if (a == 0 && ch >= '0' && ch <= '9') {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index 28a79f472..7819062b8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -476,7 +476,7 @@ public void onFragmentDestroy() {
         if (currentUser != null) {
             MessagesController.getInstance().cancelLoadFullUser(currentUser.id);
         }
-        if (!AndroidUtilities.isTablet()) {
+        if (!AndroidUtilities.isTablet() && getParentActivity() != null) {
             getParentActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);
         }
         AndroidUtilities.unlockOrientation(getParentActivity());
@@ -577,7 +577,7 @@ public void didSelectLocation(double latitude, double longitude) {
                             @Override
                             public void didSelectFile(DocumentSelectActivity activity, String path) {
                                 activity.finishFragment();
-                                SendMessagesHelper.prepareSendingDocument(path, path, dialog_id);
+                                SendMessagesHelper.prepareSendingDocument(path, path, null, null, dialog_id);
                             }
 
                             @Override
@@ -862,7 +862,7 @@ public void onClick(View v) {
                 addContactItem = headerItem.addSubItem(share_contact, "", 0);
             }
             if (currentEncryptedChat != null) {
-                timeItem2 = headerItem.addSubItem(chat_enc_timer, LocaleController.getString("MessageLifetime", R.string.MessageLifetime), 0);
+                timeItem2 = headerItem.addSubItem(chat_enc_timer, LocaleController.getString("SetTimer", R.string.SetTimer), 0);
             }
             headerItem.addSubItem(clear_history, LocaleController.getString("ClearHistory", R.string.ClearHistory), 0);
             if (currentChat != null && !isBroadcast) {
@@ -966,14 +966,16 @@ public boolean onTouch(View v, MotionEvent event) {
             } else {
                 chatListView.setCacheColorHint(0);
                 try {
-                    if (selectedBackground == 1000001) {
-                        ((SizeNotifierRelativeLayout) contentView).setBackgroundImage(R.drawable.background_hd);
+                    if (ApplicationLoader.cachedWallpaper != null) {
+                        isCustomTheme = selectedBackground != 1000001;
+                        ((SizeNotifierRelativeLayout) contentView).setBackgroundImage(ApplicationLoader.cachedWallpaper);
                     } else {
-                        File toFile = new File(ApplicationLoader.applicationContext.getFilesDir(), "wallpaper.jpg");
-                        if (toFile.exists()) {
-                            if (ApplicationLoader.cachedWallpaper != null) {
-                                ((SizeNotifierRelativeLayout) contentView).setBackgroundImage(ApplicationLoader.cachedWallpaper);
-                            } else {
+                        if (selectedBackground == 1000001) {
+                            ((SizeNotifierRelativeLayout) contentView).setBackgroundImage(R.drawable.background_hd);
+                            ApplicationLoader.cachedWallpaper = ((SizeNotifierRelativeLayout) contentView).getBackgroundImage();
+                        } else {
+                            File toFile = new File(ApplicationLoader.applicationContext.getFilesDir(), "wallpaper.jpg");
+                            if (toFile.exists()) {
                                 Drawable drawable = Drawable.createFromPath(toFile.getAbsolutePath());
                                 if (drawable != null) {
                                     ((SizeNotifierRelativeLayout) contentView).setBackgroundImage(drawable);
@@ -982,10 +984,12 @@ public boolean onTouch(View v, MotionEvent event) {
                                     contentView.setBackgroundColor(-2693905);
                                     chatListView.setCacheColorHint(-2693905);
                                 }
+                                isCustomTheme = true;
+                            } else {
+                                ((SizeNotifierRelativeLayout) contentView).setBackgroundImage(R.drawable.background_hd);
+                                ApplicationLoader.cachedWallpaper = ((SizeNotifierRelativeLayout) contentView).getBackgroundImage();
+                                isCustomTheme = false;
                             }
-                            isCustomTheme = true;
-                        } else {
-                            ((SizeNotifierRelativeLayout) contentView).setBackgroundImage(R.drawable.background_hd);
                         }
                     }
                 } catch (Throwable e) {
@@ -1279,7 +1283,7 @@ private boolean sendSecretMessageRead(MessageObject messageObject) {
     }
 
     private void scrollToLastMessage() {
-        if ((forward_end_reached || first_unread_id == 0) && startLoadFromMessageId == 0) {
+        if (forward_end_reached && first_unread_id == 0 && startLoadFromMessageId == 0) {
             chatListView.setSelectionFromTop(messages.size() - 1, -100000 - chatListView.getPaddingTop());
         } else {
             messages.clear();
@@ -1801,7 +1805,7 @@ public void onActivityResultFragment(int requestCode, int resultCode, Intent dat
                     showAttachmentError();
                     return;
                 }
-                SendMessagesHelper.prepareSendingDocument(tempPath, originalPath, dialog_id);
+                SendMessagesHelper.prepareSendingDocument(tempPath, originalPath, null, null, dialog_id);
             }
         }
     }
@@ -3153,7 +3157,13 @@ public void didSelectDialog(MessagesActivity activity, long did, boolean param)
                     presentFragment(chatActivity, true);
                     if (!AndroidUtilities.isTablet()) {
                         removeSelfFromStack();
-                        chatActivity.getParentActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);
+                        Activity parentActivity = getParentActivity();
+                        if (parentActivity == null) {
+                            parentActivity = chatActivity.getParentActivity();
+                        }
+                        if (parentActivity != null) {
+                            parentActivity.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);
+                        }
                     }
                 } else {
                     activity.finishFragment();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index 6364dd49c..604f0de21 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -65,6 +65,8 @@
     private String sendingText;
     private ArrayList<Uri> photoPathsArray;
     private ArrayList<String> documentsPathsArray;
+    private ArrayList<Uri> documentsUrisArray;
+    private String documentsMimeType;
     private ArrayList<String> documentsOriginalPathsArray;
     private ArrayList<TLRPC.User> contactsToSend;
     private int currentConnectionState;
@@ -375,6 +377,8 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
         sendingText = null;
         documentsPathsArray = null;
         documentsOriginalPathsArray = null;
+        documentsMimeType = null;
+        documentsUrisArray = null;
         contactsToSend = null;
 
         if ((intent.getFlags() & Intent.FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY) == 0) {
@@ -382,7 +386,7 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
                 if (Intent.ACTION_SEND.equals(intent.getAction())) {
                     boolean error = false;
                     String type = intent.getType();
-                    if (type != null && type.equals("text/plain")) {
+                    if (type != null && type.equals("text/plain") && intent.getStringExtra(Intent.EXTRA_TEXT) != null) {
                         String text = intent.getStringExtra(Intent.EXTRA_TEXT);
                         String subject = intent.getStringExtra(Intent.EXTRA_SUBJECT);
 
@@ -501,7 +505,11 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
                                     documentsOriginalPathsArray.add(uri.toString());
                                 }
                             } else {
-                                error = true;
+                                if (documentsUrisArray == null) {
+                                    documentsUrisArray = new ArrayList<Uri>();
+                                }
+                                documentsUrisArray.add(uri);
+                                documentsMimeType = type;
                             }
                         }
                         if (error) {
@@ -628,7 +636,7 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
             pushOpened = false;
             isNew = false;
         }
-        if (videoPath != null || photoPathsArray != null || sendingText != null || documentsPathsArray != null || contactsToSend != null) {
+        if (videoPath != null || photoPathsArray != null || sendingText != null || documentsPathsArray != null || contactsToSend != null || documentsUrisArray != null) {
             if (!AndroidUtilities.isTablet()) {
                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
             }
@@ -753,8 +761,8 @@ public void didSelectDialog(MessagesActivity messageFragment, long dialog_id, bo
                 if (photoPathsArray != null) {
                     SendMessagesHelper.prepareSendingPhotos(null, photoPathsArray, dialog_id);
                 }
-                if (documentsPathsArray != null) {
-                    SendMessagesHelper.prepareSendingDocuments(documentsPathsArray, documentsOriginalPathsArray, dialog_id);
+                if (documentsPathsArray != null || documentsUrisArray != null) {
+                    SendMessagesHelper.prepareSendingDocuments(documentsPathsArray, documentsOriginalPathsArray, documentsUrisArray, documentsMimeType, dialog_id);
                 }
                 if (contactsToSend != null && !contactsToSend.isEmpty()) {
                     for (TLRPC.User user : contactsToSend) {
@@ -942,6 +950,9 @@ public void onConfigurationChanged(android.content.res.Configuration newConfig)
     @SuppressWarnings("unchecked")
     public void didReceivedNotification(int id, Object... args) {
         if (id == NotificationCenter.appDidLogout) {
+            if (drawerLayoutAdapter != null) {
+                drawerLayoutAdapter.notifyDataSetChanged();
+            }
             for (BaseFragment fragment : actionBarLayout.fragmentsStack) {
                 fragment.onFragmentDestroy();
             }
@@ -1095,16 +1106,26 @@ public boolean onPreIme() {
 
     @Override
     public boolean onKeyUp(int keyCode, KeyEvent event) {
-        if (AndroidUtilities.isTablet()) {
-            if (layersActionBarLayout.getVisibility() == View.VISIBLE && !layersActionBarLayout.fragmentsStack.isEmpty()) {
-                layersActionBarLayout.onKeyUp(keyCode, event);
-            } else if (rightActionBarLayout.getVisibility() == View.VISIBLE && !rightActionBarLayout.fragmentsStack.isEmpty()) {
-                rightActionBarLayout.onKeyUp(keyCode, event);
+        if (keyCode == KeyEvent.KEYCODE_MENU) {
+            if (AndroidUtilities.isTablet()) {
+                if (layersActionBarLayout.getVisibility() == View.VISIBLE && !layersActionBarLayout.fragmentsStack.isEmpty()) {
+                    layersActionBarLayout.onKeyUp(keyCode, event);
+                } else if (rightActionBarLayout.getVisibility() == View.VISIBLE && !rightActionBarLayout.fragmentsStack.isEmpty()) {
+                    rightActionBarLayout.onKeyUp(keyCode, event);
+                } else {
+                    actionBarLayout.onKeyUp(keyCode, event);
+                }
             } else {
-                actionBarLayout.onKeyUp(keyCode, event);
+                if (actionBarLayout.fragmentsStack.size() == 1) {
+                    if (!drawerLayoutContainer.isDrawerOpened()) {
+                        drawerLayoutContainer.openDrawer(false);
+                    } else {
+                        drawerLayoutContainer.closeDrawer(false);
+                    }
+                } else {
+                    actionBarLayout.onKeyUp(keyCode, event);
+                }
             }
-        } else {
-            actionBarLayout.onKeyUp(keyCode, event);
         }
         return super.onKeyUp(keyCode, event);
     }
@@ -1131,7 +1152,16 @@ public boolean needPresentFragment(BaseFragment fragment, boolean removeLast, bo
                 }
             }
             if (fragment instanceof ChatActivity) {
-                if (!tabletFullSize && layout != rightActionBarLayout) {
+                if (!tabletFullSize && layout == rightActionBarLayout || tabletFullSize && layout == actionBarLayout) {
+                    if (!layersActionBarLayout.fragmentsStack.isEmpty()) {
+                        for (int a = 0; a < layersActionBarLayout.fragmentsStack.size() - 1; a++) {
+                            layersActionBarLayout.removeFragmentFromStack(layersActionBarLayout.fragmentsStack.get(0));
+                            a--;
+                        }
+                        layersActionBarLayout.closeLastFragment(!forceWithoutAnimation);
+                    }
+                    return true;
+                } else if (!tabletFullSize && layout != rightActionBarLayout) {
                     rightActionBarLayout.setVisibility(View.VISIBLE);
                     backgroundTablet.setVisibility(View.GONE);
                     rightActionBarLayout.removeAllFragments();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
index 0ed361085..a906231cc 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LoginActivity.java
@@ -778,23 +778,27 @@ public void selectCountry(String name) {
 
         private void updatePhoneField() {
             ignoreOnPhoneChange = true;
-            String codeText = codeField.getText().toString();
-            String phone = PhoneFormat.getInstance().format("+" + codeText + phoneField.getText().toString());
-            int idx = phone.indexOf(" ");
-            if (idx != -1) {
-                String resultCode = PhoneFormat.stripExceptNumbers(phone.substring(0, idx));
-                if (!codeText.equals(resultCode)) {
-                    phone = PhoneFormat.getInstance().format(phoneField.getText().toString()).trim();
-                    phoneField.setText(phone);
-                    int len = phoneField.length();
-                    phoneField.setSelection(phoneField.length());
+            try {
+                String codeText = codeField.getText().toString();
+                String phone = PhoneFormat.getInstance().format("+" + codeText + phoneField.getText().toString());
+                int idx = phone.indexOf(" ");
+                if (idx != -1) {
+                    String resultCode = PhoneFormat.stripExceptNumbers(phone.substring(0, idx));
+                    if (!codeText.equals(resultCode)) {
+                        phone = PhoneFormat.getInstance().format(phoneField.getText().toString()).trim();
+                        phoneField.setText(phone);
+                        int len = phoneField.length();
+                        phoneField.setSelection(phoneField.length());
+                    } else {
+                        phoneField.setText(phone.substring(idx).trim());
+                        int len = phoneField.length();
+                        phoneField.setSelection(phoneField.length());
+                    }
                 } else {
-                    phoneField.setText(phone.substring(idx).trim());
-                    int len = phoneField.length();
                     phoneField.setSelection(phoneField.length());
                 }
-            } else {
-                phoneField.setSelection(phoneField.length());
+            } catch (Exception e) {
+                FileLog.e("tmessages", e);
             }
             ignoreOnPhoneChange = false;
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/MessagesActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/MessagesActivity.java
index 732a99d82..fd10cf9d1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/MessagesActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/MessagesActivity.java
@@ -22,6 +22,7 @@
 import android.view.animation.AccelerateDecelerateInterpolator;
 import android.widget.AbsListView;
 import android.widget.AdapterView;
+import android.widget.BaseAdapter;
 import android.widget.CheckBox;
 import android.widget.EditText;
 import android.widget.FrameLayout;
@@ -32,6 +33,7 @@
 import org.telegram.android.AndroidUtilities;
 import org.telegram.android.LocaleController;
 import org.telegram.android.MessageObject;
+import org.telegram.messenger.FileLog;
 import org.telegram.messenger.TLRPC;
 import org.telegram.android.ContactsController;
 import org.telegram.android.MessagesController;
@@ -530,39 +532,33 @@ public void onGlobalLayout() {
     @SuppressWarnings("unchecked")
     public void didReceivedNotification(int id, Object... args) {
         if (id == NotificationCenter.dialogsNeedReload) {
+            if (dialogsAdapter != null) {
+                dialogsAdapter.notifyDataSetChanged();
+            }
+            if (dialogsSearchAdapter != null) {
+                dialogsSearchAdapter.notifyDataSetChanged();
+            }
             if (messagesListView != null) {
-                if (MessagesController.getInstance().loadingDialogs && MessagesController.getInstance().dialogs.isEmpty()) {
-                    searchEmptyView.setVisibility(View.GONE);
-                    emptyView.setVisibility(View.GONE);
-                    messagesListView.setEmptyView(progressView);
-                } else {
-                    if (searching && searchWas) {
-                        if (dialogsAdapter != null) {
-                            dialogsAdapter.notifyDataSetChanged();
-                        }
-                        if (dialogsSearchAdapter != null) {
-                            dialogsSearchAdapter.notifyDataSetChanged();
-                        }
-                        messagesListView.setEmptyView(searchEmptyView);
+                try {
+                    if (messagesListView.getAdapter() != null && messagesListView.getAdapter() instanceof BaseAdapter) {
+                        ((BaseAdapter) messagesListView.getAdapter()).notifyDataSetChanged();
+                    }
+                    if (MessagesController.getInstance().loadingDialogs && MessagesController.getInstance().dialogs.isEmpty()) {
+                        searchEmptyView.setVisibility(View.GONE);
                         emptyView.setVisibility(View.GONE);
+                        messagesListView.setEmptyView(progressView);
                     } else {
-                        if (dialogsAdapter != null) {
-                            dialogsAdapter.notifyDataSetChanged();
-                        }
-                        if (dialogsSearchAdapter != null) {
-                            dialogsSearchAdapter.notifyDataSetChanged();
+                        if (searching && searchWas) {
+                            messagesListView.setEmptyView(searchEmptyView);
+                            emptyView.setVisibility(View.GONE);
+                        } else {
+                            messagesListView.setEmptyView(emptyView);
+                            searchEmptyView.setVisibility(View.GONE);
                         }
-                        messagesListView.setEmptyView(emptyView);
-                        searchEmptyView.setVisibility(View.GONE);
+                        progressView.setVisibility(View.GONE);
                     }
-                    progressView.setVisibility(View.GONE);
-                }
-            } else {
-                if (dialogsAdapter != null) {
-                    dialogsAdapter.notifyDataSetChanged();
-                }
-                if (dialogsSearchAdapter != null) {
-                    dialogsSearchAdapter.notifyDataSetChanged();
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e); //TODO fix it in other way?
                 }
             }
         } else if (id == NotificationCenter.emojiDidLoaded) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
index 53f473bc5..cfdeee9b8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/NotificationsSettingsActivity.java
@@ -17,6 +17,7 @@
 import android.media.Ringtone;
 import android.media.RingtoneManager;
 import android.net.Uri;
+import android.os.Build;
 import android.provider.Settings;
 import android.view.LayoutInflater;
 import android.view.View;
@@ -60,6 +61,7 @@
     private int messageSoundRow;
     private int messageLedRow;
     private int messagePopupNotificationRow;
+    private int messagePriorityRow;
     private int groupSectionRow2;
     private int groupSectionRow;
     private int groupAlertRow;
@@ -68,11 +70,13 @@
     private int groupSoundRow;
     private int groupLedRow;
     private int groupPopupNotificationRow;
+    private int groupPriorityRow;
     private int inappSectionRow2;
     private int inappSectionRow;
     private int inappSoundRow;
     private int inappVibrateRow;
     private int inappPreviewRow;
+    private int inappPriorityRow;
     private int eventsSectionRow2;
     private int eventsSectionRow;
     private int contactJoinedRow;
@@ -80,6 +84,7 @@
     private int otherSectionRow;
     private int badgeNumberRow;
     private int pebbleAlertRow;
+    private int repeatRow;
     private int resetSectionRow2;
     private int resetSectionRow;
     private int resetNotificationsRow;
@@ -96,6 +101,11 @@ public boolean onFragmentCreate() {
         messageVibrateRow = rowCount++;
         messagePopupNotificationRow = rowCount++;
         messageSoundRow = rowCount++;
+        if (Build.VERSION.SDK_INT >= 21) {
+            messagePriorityRow = rowCount++;
+        } else {
+            messagePriorityRow = -1;
+        }
         groupSectionRow2 = rowCount++;
         groupSectionRow = rowCount++;
         groupAlertRow = rowCount++;
@@ -104,11 +114,21 @@ public boolean onFragmentCreate() {
         groupVibrateRow = rowCount++;
         groupPopupNotificationRow = rowCount++;
         groupSoundRow = rowCount++;
+        if (Build.VERSION.SDK_INT >= 21) {
+            groupPriorityRow = rowCount++;
+        } else {
+            groupPriorityRow = -1;
+        }
         inappSectionRow2 = rowCount++;
         inappSectionRow = rowCount++;
         inappSoundRow = rowCount++;
         inappVibrateRow = rowCount++;
         inappPreviewRow = rowCount++;
+        if (Build.VERSION.SDK_INT >= 21) {
+            inappPriorityRow = rowCount++;
+        } else {
+            inappPriorityRow = -1;
+        }
         eventsSectionRow2 = rowCount++;
         eventsSectionRow = rowCount++;
         contactJoinedRow = rowCount++;
@@ -116,6 +136,7 @@ public boolean onFragmentCreate() {
         otherSectionRow = rowCount++;
         badgeNumberRow = rowCount++;
         pebbleAlertRow = rowCount++;
+        repeatRow = rowCount++;
         resetSectionRow2 = rowCount++;
         resetSectionRow = rowCount++;
         resetNotificationsRow = rowCount++;
@@ -273,6 +294,12 @@ public void run() {
                         enabled = preferences.getBoolean("EnableInAppPreview", true);
                         editor.putBoolean("EnableInAppPreview", !enabled);
                         editor.commit();
+                    } else if (i == inappPriorityRow) {
+                        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                        SharedPreferences.Editor editor = preferences.edit();
+                        enabled = preferences.getBoolean("EnableInAppPriority", false);
+                        editor.putBoolean("EnableInAppPriority", !enabled);
+                        editor.commit();
                     } else if (i == contactJoinedRow) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
@@ -429,6 +456,66 @@ public void onClick(DialogInterface dialog, int which) {
                         });
                         builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
                         showAlertDialog(builder);
+                    } else if (i == messagePriorityRow || i == groupPriorityRow) {
+                        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+                        builder.setTitle(LocaleController.getString("NotificationsPriority", R.string.NotificationsPriority));
+                        builder.setItems(new CharSequence[] {
+                                LocaleController.getString("NotificationsPriorityDefault", R.string.NotificationsPriorityDefault),
+                                LocaleController.getString("NotificationsPriorityHigh", R.string.NotificationsPriorityHigh),
+                                LocaleController.getString("NotificationsPriorityMax", R.string.NotificationsPriorityMax)
+                        }, new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                                if (i == messagePriorityRow) {
+                                    preferences.edit().putInt("priority_messages", which).commit();
+                                } else if (i == groupPriorityRow) {
+                                    preferences.edit().putInt("priority_group", which).commit();
+                                }
+                                if (listView != null) {
+                                    listView.invalidateViews();
+                                }
+                            }
+                        });
+                        builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                        showAlertDialog(builder);
+                    } else if (i == repeatRow) {
+                        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+                        builder.setTitle(LocaleController.getString("RepeatNotifications", R.string.RepeatNotifications));
+                        builder.setItems(new CharSequence[] {
+                                LocaleController.getString("ShortMessageLifetimeForever", R.string.ShortMessageLifetimeForever),
+                                LocaleController.formatPluralString("Minutes", 5),
+                                LocaleController.formatPluralString("Minutes", 10),
+                                LocaleController.formatPluralString("Minutes", 30),
+                                LocaleController.formatPluralString("Hours", 1),
+                                LocaleController.formatPluralString("Hours", 2),
+                                LocaleController.formatPluralString("Hours", 4)
+                        }, new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                int minutes = 0;
+                                if (which == 1) {
+                                    minutes = 5;
+                                } else if (which == 2) {
+                                    minutes = 10;
+                                } else if (which == 3) {
+                                    minutes = 30;
+                                } else if (which == 4) {
+                                    minutes = 60;
+                                } else if (which == 5) {
+                                    minutes = 60 * 2;
+                                } else if (which == 6) {
+                                    minutes = 60 * 4;
+                                }
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                                preferences.edit().putInt("repeat_messages", minutes).commit();
+                                if (listView != null) {
+                                    listView.invalidateViews();
+                                }
+                            }
+                        });
+                        builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                        showAlertDialog(builder);
                     }
                     if (view instanceof TextCheckCell) {
                         ((TextCheckCell) view).setChecked(!enabled);
@@ -597,11 +684,13 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 } else if (i == inappVibrateRow) {
                     checkCell.setTextAndCheck(LocaleController.getString("InAppVibrate", R.string.InAppVibrate), preferences.getBoolean("EnableInAppVibrate", true), true);
                 } else if (i == inappPreviewRow) {
-                    checkCell.setTextAndCheck(LocaleController.getString("InAppPreview", R.string.InAppPreview), preferences.getBoolean("EnableInAppPreview", true), false);
+                    checkCell.setTextAndCheck(LocaleController.getString("InAppPreview", R.string.InAppPreview), preferences.getBoolean("EnableInAppPreview", true), true);
+                } else if (i == inappPriorityRow) {
+                    checkCell.setTextAndCheck(LocaleController.getString("NotificationsPriority", R.string.NotificationsPriority), preferences.getBoolean("EnableInAppPriority", false), false);
                 } else if (i == contactJoinedRow) {
                     checkCell.setTextAndCheck(LocaleController.getString("ContactJoined", R.string.ContactJoined), preferences.getBoolean("EnableContactJoined", true), false);
                 } else if (i == pebbleAlertRow) {
-                    checkCell.setTextAndCheck(LocaleController.getString("Pebble", R.string.Pebble), preferences.getBoolean("EnablePebbleNotifications", false), false);
+                    checkCell.setTextAndCheck(LocaleController.getString("Pebble", R.string.Pebble), preferences.getBoolean("EnablePebbleNotifications", false), true);
                 } else if (i == notificationsServiceRow) {
                     checkCell.setTextAndCheck(LocaleController.getString("NotificationsService", R.string.NotificationsService), preferences.getBoolean("pushService", true), false);
                 } else if (i == badgeNumberRow) {
@@ -627,7 +716,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     if (value.equals("NoSound")) {
                         value = LocaleController.getString("NoSound", R.string.NoSound);
                     }
-                    textCell.setTextAndValue(LocaleController.getString("Sound", R.string.Sound), value, false);
+                    textCell.setTextAndValue(LocaleController.getString("Sound", R.string.Sound), value, true);
                 } else if (i == resetNotificationsRow) {
                     textCell.setMultilineDetail(true);
                     textCell.setTextAndValue(LocaleController.getString("ResetAllNotifications", R.string.ResetAllNotifications), LocaleController.getString("UndoAllCustom", R.string.UndoAllCustom), false);
@@ -667,6 +756,33 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     } else if (value == 3) {
                         textCell.setTextAndValue(LocaleController.getString("Vibrate", R.string.Vibrate), LocaleController.getString("Long", R.string.Long), true);
                     }
+                } else if (i == repeatRow) {
+                    textCell.setMultilineDetail(false);
+                    int minutes = preferences.getInt("repeat_messages", 60);
+                    String value;
+                    if (minutes == 0) {
+                        value = LocaleController.getString("ShortMessageLifetimeForever", R.string.ShortMessageLifetimeForever);
+                    } else if (minutes < 60) {
+                        value = LocaleController.formatPluralString("Minutes", minutes);
+                    } else {
+                        value = LocaleController.formatPluralString("Hours", minutes / 60);
+                    }
+                    textCell.setTextAndValue(LocaleController.getString("RepeatNotifications", R.string.RepeatNotifications), value, false);
+                } else if (i == messagePriorityRow || i == groupPriorityRow) {
+                    textCell.setMultilineDetail(false);
+                    int value = 0;
+                    if (i == messagePriorityRow) {
+                        value = preferences.getInt("priority_messages", 1);
+                    } else if (i == groupPriorityRow) {
+                        value = preferences.getInt("priority_group", 1);
+                    }
+                    if (value == 0) {
+                        textCell.setTextAndValue(LocaleController.getString("NotificationsPriority", R.string.NotificationsPriority), LocaleController.getString("NotificationsPriorityDefault", R.string.NotificationsPriorityDefault), false);
+                    } else if (value == 1) {
+                        textCell.setTextAndValue(LocaleController.getString("NotificationsPriority", R.string.NotificationsPriority), LocaleController.getString("NotificationsPriorityHigh", R.string.NotificationsPriorityHigh), false);
+                    } else if (value == 2) {
+                        textCell.setTextAndValue(LocaleController.getString("NotificationsPriority", R.string.NotificationsPriority), LocaleController.getString("NotificationsPriorityMax", R.string.NotificationsPriorityMax), false);
+                    }
                 }
             } else if (type == 3) {
                 if (view == null) {
@@ -697,7 +813,7 @@ public int getItemViewType(int i) {
             } else if (i == messageAlertRow || i == messagePreviewRow || i == groupAlertRow ||
                     i == groupPreviewRow || i == inappSoundRow || i == inappVibrateRow ||
                     i == inappPreviewRow || i == contactJoinedRow || i == pebbleAlertRow ||
-                    i == notificationsServiceRow || i == badgeNumberRow) {
+                    i == notificationsServiceRow || i == badgeNumberRow || i == inappPriorityRow) {
                 return 1;
             } else if (i == messageLedRow || i == groupLedRow) {
                 return 3;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java
index 93b346eb8..1376b549a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoCropActivity.java
@@ -242,12 +242,12 @@ public Bitmap getBitmap() {
             }
             try {
                 return Bitmap.createBitmap(imageToCrop, x, y, size, size);
-            } catch (Exception e) {
+            } catch (Throwable e) {
                 FileLog.e("tmessags", e);
                 System.gc();
                 try {
                     return Bitmap.createBitmap(imageToCrop, x, y, size, size);
-                } catch (Exception e2) {
+                } catch (Throwable e2) {
                     FileLog.e("tmessages", e2);
                 }
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index c581a3bd2..e6c749153 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -1579,14 +1579,6 @@ public void openPhoto(final MessageObject messageObject, final TLRPC.FileLocatio
             return;
         }
 
-        actionBar.setTitle(LocaleController.formatString("Of", R.string.Of, 1, 1));
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileDidFailedLoad);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileDidLoaded);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileLoadProgressChanged);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.mediaCountDidLoaded);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.mediaDidLoaded);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.userPhotosLoaded);
-
         try {
             if (windowView.getParent() != null) {
                 WindowManager wm = (WindowManager) parentActivity.getSystemService(Context.WINDOW_SERVICE);
@@ -1596,9 +1588,24 @@ public void openPhoto(final MessageObject messageObject, final TLRPC.FileLocatio
             FileLog.e("tmessages", e);
         }
 
-        placeProvider = provider;
+
         WindowManager wm = (WindowManager) parentActivity.getSystemService(Context.WINDOW_SERVICE);
-        wm.addView(windowView, windowLayoutParams);
+        try {
+            wm.addView(windowView, windowLayoutParams);
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+            return;
+        }
+
+        actionBar.setTitle(LocaleController.formatString("Of", R.string.Of, 1, 1));
+        NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileDidFailedLoad);
+        NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileDidLoaded);
+        NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileLoadProgressChanged);
+        NotificationCenter.getInstance().addObserver(this, NotificationCenter.mediaCountDidLoaded);
+        NotificationCenter.getInstance().addObserver(this, NotificationCenter.mediaDidLoaded);
+        NotificationCenter.getInstance().addObserver(this, NotificationCenter.userPhotosLoaded);
+
+        placeProvider = provider;
 
         if (velocityTracker == null) {
             velocityTracker = VelocityTracker.obtain();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
index db3551741..54b5515fa 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java
@@ -183,7 +183,7 @@ public void onClick(DialogInterface dialog, int which) {
                                 if (which == 0) {
                                     value = 30;
                                 } else if (which == 1) {
-                                    value = 60;
+                                    value = 90;
                                 } else if (which == 2) {
                                     value = 182;
                                 } else if (which == 3) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
index 6e2cadb66..634d6052a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java
@@ -937,8 +937,8 @@ private void updateOnlineCount() {
             public int compare(Integer lhs, Integer rhs) {
                 TLRPC.User user1 = MessagesController.getInstance().getUser(info.participants.get(rhs).user_id);
                 TLRPC.User user2 = MessagesController.getInstance().getUser(info.participants.get(lhs).user_id);
-                Integer status1 = 0;
-                Integer status2 = 0;
+                int status1 = 0;
+                int status2 = 0;
                 if (user1 != null && user1.status != null) {
                     if (user1.id == UserConfig.getClientUserId()) {
                         status1 = ConnectionsManager.getInstance().getCurrentTime() + 50000;
@@ -953,7 +953,26 @@ public int compare(Integer lhs, Integer rhs) {
                         status2 = user2.status.expires;
                     }
                 }
-                return status1.compareTo(status2);
+                if (status1 > 0 && status2 > 0) {
+                    if (status1 > status2) {
+                        return 1;
+                    } else if (status1 < status2) {
+                        return -1;
+                    }
+                    return 0;
+                } else if (status1 < 0 && status2 < 0) {
+                    if (status1 > status2) {
+                        return 1;
+                    } else if (status1 < status2) {
+                        return -1;
+                    }
+                    return 0;
+                } else if (status1 < 0 && status2 > 0 || status1 == 0 && status2 != 0) {
+                    return -1;
+                } else if (status2 < 0 && status1 > 0 || status2 == 0 && status1 != 0) {
+                    return 1;
+                }
+                return 0;
             }
         });
 
@@ -1106,11 +1125,12 @@ private void createActionBarMenu() {
             }
         } else if (chat_id != 0) {
             ActionBarMenuItem item = menu.addItem(0, R.drawable.ic_ab_other);
-            item.addSubItem(edit_name, LocaleController.getString("EditName", R.string.EditName), 0);
             if (chat_id > 0) {
                 item.addSubItem(add_member, LocaleController.getString("AddMember", R.string.AddMember), 0);
+                item.addSubItem(edit_name, LocaleController.getString("EditName", R.string.EditName), 0);
                 item.addSubItem(leave_group, LocaleController.getString("DeleteAndExit", R.string.DeleteAndExit), 0);
             } else {
+                item.addSubItem(edit_name, LocaleController.getString("EditName", R.string.EditName), 0);
                 item.addSubItem(add_member, LocaleController.getString("AddRecipient", R.string.AddRecipient), 0);
             }
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
index c6ea5482c..a56eab28c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ProfileNotificationsActivity.java
@@ -17,6 +17,7 @@
 import android.media.Ringtone;
 import android.media.RingtoneManager;
 import android.net.Uri;
+import android.os.Build;
 import android.os.Bundle;
 import android.provider.Settings;
 import android.view.LayoutInflater;
@@ -53,6 +54,7 @@
     private int settingsNotificationsRow;
     private int settingsVibrateRow;
     private int settingsSoundRow;
+    private int settingsPriorityRow;
     private int settingsLedRow;
     private int rowCount = 0;
 
@@ -66,6 +68,11 @@ public boolean onFragmentCreate() {
         settingsNotificationsRow = rowCount++;
         settingsVibrateRow = rowCount++;
         settingsSoundRow = rowCount++;
+        if (Build.VERSION.SDK_INT >= 21) {
+            settingsPriorityRow = rowCount++;
+        } else {
+            settingsPriorityRow = -1;
+        }
         settingsLedRow = rowCount++;
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.notificationsSettingsUpdated);
         return super.onFragmentCreate();
@@ -253,6 +260,31 @@ public void onClick(DialogInterface dialog, int which) {
                             }
                         });
                         showAlertDialog(builder);
+                    } else if (i == settingsPriorityRow) {
+                        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+                        builder.setTitle(LocaleController.getString("NotificationsPriority", R.string.NotificationsPriority));
+                        builder.setItems(new CharSequence[] {
+                                LocaleController.getString("SettingsDefault", R.string.SettingsDefault),
+                                LocaleController.getString("NotificationsPriorityDefault", R.string.NotificationsPriorityDefault),
+                                LocaleController.getString("NotificationsPriorityHigh", R.string.NotificationsPriorityHigh),
+                                LocaleController.getString("NotificationsPriorityMax", R.string.NotificationsPriorityMax)
+                        }, new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                if (which == 0) {
+                                    which = 3;
+                                } else {
+                                    which--;
+                                }
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                                preferences.edit().putInt("priority_" + dialog_id, which).commit();
+                                if (listView != null) {
+                                    listView.invalidateViews();
+                                }
+                            }
+                        });
+                        builder.setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null);
+                        showAlertDialog(builder);
                     }
                 }
             });
@@ -425,6 +457,17 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                         value = LocaleController.getString("NoSound", R.string.NoSound);
                     }
                     textCell.setTextAndValue(LocaleController.getString("Sound", R.string.Sound), value, true);
+                } else if (i == settingsPriorityRow) {
+                    int value = preferences.getInt("priority_" + dialog_id, 3);
+                    if (value == 0) {
+                        textCell.setTextAndValue(LocaleController.getString("NotificationsPriority", R.string.NotificationsPriority), LocaleController.getString("NotificationsPriorityDefault", R.string.NotificationsPriorityDefault), true);
+                    } else if (value == 1) {
+                        textCell.setTextAndValue(LocaleController.getString("NotificationsPriority", R.string.NotificationsPriority), LocaleController.getString("NotificationsPriorityHigh", R.string.NotificationsPriorityHigh), true);
+                    } else if (value == 2) {
+                        textCell.setTextAndValue(LocaleController.getString("NotificationsPriority", R.string.NotificationsPriority), LocaleController.getString("NotificationsPriorityMax", R.string.NotificationsPriorityMax), true);
+                    } else if (value == 3) {
+                        textCell.setTextAndValue(LocaleController.getString("NotificationsPriority", R.string.NotificationsPriority), LocaleController.getString("SettingsDefault", R.string.SettingsDefault), true);
+                    }
                 }
             } else if (type == 1) {
                 if (view == null) {
@@ -450,7 +493,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
 
         @Override
         public int getItemViewType(int i) {
-            if (i == settingsNotificationsRow || i == settingsVibrateRow || i == settingsSoundRow) {
+            if (i == settingsNotificationsRow || i == settingsVibrateRow || i == settingsSoundRow || i == settingsPriorityRow) {
                 return 0;
             } else if (i == settingsLedRow) {
                 return 1;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 4020d7f16..e50b8e740 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -289,10 +289,10 @@ public void onClick(DialogInterface dialogInterface, int i) {
                                 SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                                 SharedPreferences.Editor editor = preferences.edit();
                                 editor.clear().commit();
-                                NotificationCenter.getInstance().postNotificationName(NotificationCenter.appDidLogout);
                                 MessagesController.getInstance().unregistedPush();
                                 MessagesController.getInstance().logOut();
                                 UserConfig.clearConfig();
+                                NotificationCenter.getInstance().postNotificationName(NotificationCenter.appDidLogout);
                                 MessagesStorage.getInstance().cleanUp(false);
                                 MessagesController.getInstance().cleanUp();
                                 ContactsController.getInstance().deleteAllAppAccounts();
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
index 24d4837e3..4c9aca489 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/VideoEditorActivity.java
@@ -184,7 +184,9 @@ public void run() {
             @Override
             public void onPrepared(MediaPlayer mp) {
                 playerPrepared = true;
-                videoPlayer.seekTo((int) (videoTimelineView.getLeftProgress() * videoDuration));
+                if (videoTimelineView != null && videoPlayer != null) {
+                    videoPlayer.seekTo((int) (videoTimelineView.getLeftProgress() * videoDuration));
+                }
             }
         });
         try {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/AvatarDrawable.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/AvatarDrawable.java
index d053bd882..b38772f3c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/AvatarDrawable.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/AvatarDrawable.java
@@ -44,6 +44,7 @@
     private StaticLayout textLayout;
     private float textWidth;
     private float textHeight;
+    private float textLeft;
     private boolean isProfile;
     private boolean drawBrodcast;
     private boolean drawPhoto;
@@ -168,6 +169,7 @@ public void setInfo(int id, String firstName, String lastName, boolean isBroadca
             try {
                 textLayout = new StaticLayout(text, namePaint, AndroidUtilities.dp(100), Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
                 if (textLayout.getLineCount() > 0) {
+                    textLeft = textLayout.getLineLeft(0);
                     textWidth = textLayout.getLineWidth(0);
                     textHeight = textLayout.getLineBottom(0);
                 }
@@ -205,7 +207,7 @@ public void draw(Canvas canvas) {
             broadcastDrawable.draw(canvas);
         } else {
             if (textLayout != null) {
-                canvas.translate((size - textWidth) / 2, (size - textHeight) / 2);
+                canvas.translate((size - textWidth) / 2 - textLeft, (size - textHeight) / 2);
                 textLayout.draw(canvas);
             } else if (drawPhoto && photoDrawable != null) {
                 int x = (size - photoDrawable.getIntrinsicWidth()) / 2;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/ChatActivityEnterView.java
index fd0e60191..d4e7d5671 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/ChatActivityEnterView.java
@@ -145,6 +145,9 @@ public void setContainerView(Activity activity, View containerView) {
 
         sendButton = (ImageButton) containerView.findViewById(R.id.chat_send_button);
         sendButton.setVisibility(View.INVISIBLE);
+        ViewProxy.setScaleX(sendButton, 0.1f);
+        ViewProxy.setScaleY(sendButton, 0.1f);
+        ViewProxy.setAlpha(sendButton, 0.0f);
         emojiButton = (ImageView) containerView.findViewById(R.id.chat_smile_button);
         audioSendButton = (ImageButton) containerView.findViewById(R.id.chat_audio_send_button);
         recordPanel = containerView.findViewById(R.id.record_panel);
@@ -400,9 +403,11 @@ public void onAnimationEnd(Object animation) {
                         });
                         runningAnimation2.start();
 
-                        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) messsageEditText.getLayoutParams();
-                        layoutParams.rightMargin = AndroidUtilities.dp(0);
-                        messsageEditText.setLayoutParams(layoutParams);
+                        if (messsageEditText != null) {
+                            FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) messsageEditText.getLayoutParams();
+                            layoutParams.rightMargin = AndroidUtilities.dp(0);
+                            messsageEditText.setLayoutParams(layoutParams);
+                        }
 
                         delegate.onAttachButtonHidden();
                     }
@@ -479,9 +484,11 @@ public void onAnimationEnd(Object animation) {
                     runningAnimation2.setDuration(100);
                     runningAnimation2.start();
 
-                    FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) messsageEditText.getLayoutParams();
-                    layoutParams.rightMargin = AndroidUtilities.dp(50);
-                    messsageEditText.setLayoutParams(layoutParams);
+                    if (messsageEditText != null) {
+                        FrameLayout.LayoutParams layoutParams = (FrameLayout.LayoutParams) messsageEditText.getLayoutParams();
+                        layoutParams.rightMargin = AndroidUtilities.dp(50);
+                        messsageEditText.setLayoutParams(layoutParams);
+                    }
 
                     delegate.onAttachButtonShow();
                 }
@@ -633,7 +640,11 @@ private void showEmojiPopup(boolean show) {
                 emojiPopup.setWidth(View.MeasureSpec.makeMeasureSpec(AndroidUtilities.displaySize.x, View.MeasureSpec.EXACTLY));
             }
 
-            emojiPopup.showAtLocation(parentActivity.getWindow().getDecorView(), Gravity.BOTTOM | Gravity.LEFT, 0, 0);
+            try {
+                emojiPopup.showAtLocation(parentActivity.getWindow().getDecorView(), Gravity.BOTTOM | Gravity.LEFT, 0, 0);
+            } catch (Exception e) {
+                FileLog.e("tmessages", e);
+            }
             if (!keyboardVisible) {
                 if (sizeNotifierRelativeLayout != null) {
                     sizeNotifierRelativeLayout.setPadding(0, 0, 0, currentHeight);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/SectionsListView.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/SectionsListView.java
index ca3b4e248..90898f5b2 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/SectionsListView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/SectionsListView.java
@@ -132,6 +132,8 @@ public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCoun
                 View child = getChildAt(itemNum - firstVisibleItem);
                 if (child != null) {
                     header.setTag(child.getTop());
+                } else {
+                    header.setTag(-AndroidUtilities.dp(100));
                 }
                 itemNum += count;
             }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/SizeNotifierRelativeLayout.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/SizeNotifierRelativeLayout.java
index b34b31170..f74e2a4cd 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/SizeNotifierRelativeLayout.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/SizeNotifierRelativeLayout.java
@@ -52,6 +52,10 @@ public void setBackgroundImage(Drawable bitmap) {
         backgroundDrawable = bitmap;
     }
 
+    public Drawable getBackgroundImage() {
+        return backgroundDrawable;
+    }
+
     @Override
     protected void onLayout(boolean changed, int l, int t, int r, int b) {
         super.onLayout(changed, l, t, r, b);
diff --git a/TMessagesProj/src/main/res/layout/chat_layout.xml b/TMessagesProj/src/main/res/layout/chat_layout.xml
index 3f1af3dd1..6e4d6975c 100644
--- a/TMessagesProj/src/main/res/layout/chat_layout.xml
+++ b/TMessagesProj/src/main/res/layout/chat_layout.xml
@@ -118,7 +118,7 @@
                 android:layout_marginLeft="52dp"
                 android:layout_marginRight="2dp"
                 android:background="@null"
-                android:layout_marginBottom="12dp"
+                android:paddingBottom="12dp"
                 android:paddingTop="11dp"
                 android:textCursorDrawable="@null"
                 android:textColor="#000000"/>
diff --git a/TMessagesProj/src/main/res/layout/popup_notification_layout.xml b/TMessagesProj/src/main/res/layout/popup_notification_layout.xml
index 664c5af34..12ade2adc 100644
--- a/TMessagesProj/src/main/res/layout/popup_notification_layout.xml
+++ b/TMessagesProj/src/main/res/layout/popup_notification_layout.xml
@@ -60,7 +60,7 @@
                         android:layout_marginLeft="52dp"
                         android:layout_marginRight="2dp"
                         android:background="@null"
-                        android:layout_marginBottom="12dp"
+                        android:paddingBottom="12dp"
                         android:paddingTop="11dp"
                         android:textCursorDrawable="@null"
                         android:textColor="#000000"/>
diff --git a/TMessagesProj/src/main/res/values-ar/strings.xml b/TMessagesProj/src/main/res/values-ar/strings.xml
index d73f96e3d..730fa9b9c 100644
--- a/TMessagesProj/src/main/res/values-ar/strings.xml
+++ b/TMessagesProj/src/main/res/values-ar/strings.xml
@@ -109,6 +109,7 @@
     <string name="SaveToDownloads">حفظ في الجهاز</string>
     <string name="ApplyLocalizationFile">تطبيق ملف التعريب</string>
     <string name="UnsupportedAttachment">المرفق غير مدعوم</string>
+    <string name="SetTimer">عداد التدمير الذاتي</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s قام بتعيين عداد التدمير الذاتي إلى to %2$s</string>
     <string name="MessageLifetimeChangedOutgoing">لقد قمت بتعيين التدمير الذاتي إلى %1$s</string>
@@ -146,7 +147,6 @@
     <string name="ReplyToUser">الرد على %1$s</string>
     <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
     <!--contacts view-->
-    <string name="NewMessageTitle">رسالة جديدة</string>
     <string name="SelectContact">اختر جهة اتصال</string>
     <string name="NoContacts">لا توجد جهات اتصال بعد</string>
     <string name="InviteText">http://telegram.org/dl2 مرحبا! هيا نستخدم تيليجرام: </string>
@@ -161,6 +161,7 @@
     <string name="WithinAWeek">آخر ظهور خلال أسبوع</string>
     <string name="WithinAMonth">آخر ظهور خلال شهر</string>
     <string name="ALongTimeAgo">آخر ظهور خلال فترة طويلة</string>
+    <string name="NewMessageTitle">رسالة جديدة</string>
     <!--group create view-->
     <string name="SendMessageTo">إرسال الرسالة إلى...</string>
     <string name="EnterGroupNamePlaceholder">أدخل اسم للمجموعة</string>
@@ -275,6 +276,12 @@
     <string name="NoMediaAutoDownload">لا يوجد وسائط</string>
     <string name="SaveToGallerySettings">حفظ في الجهاز</string>
     <string name="EditName">تعديل الاسم</string>
+    <string name="NotificationsPriority">Priority</string>
+    <string name="NotificationsPriorityDefault">Default</string>
+    <string name="NotificationsPriorityLow">Low</string>
+    <string name="NotificationsPriorityHigh">High</string>
+    <string name="NotificationsPriorityMax">Max</string>
+    <string name="RepeatNotifications">Repeat Notifications</string>
     <!--media view-->
     <string name="NoMedia">لا توجد وسائط بعد</string>
     <!--map view-->
diff --git a/TMessagesProj/src/main/res/values-de/strings.xml b/TMessagesProj/src/main/res/values-de/strings.xml
index 1fc0994bb..734f2086a 100644
--- a/TMessagesProj/src/main/res/values-de/strings.xml
+++ b/TMessagesProj/src/main/res/values-de/strings.xml
@@ -46,7 +46,7 @@
     <string name="EncryptedChatStartedIncoming">Du bist dem geheimen Chat beigetreten.</string>
     <string name="ClearHistory">Verlauf löschen</string>
     <string name="DeleteChat">Löschen und beenden</string>
-    <string name="DeleteChatUser">Lösche Chat</string>
+    <string name="DeleteChatUser">Chat löschen</string>
     <string name="HiddenName">Gelöschtes Konto</string>
     <string name="SelectChat">Chat auswählen</string>
     <string name="PhotoTip">Tippen und Halten</string>
@@ -106,6 +106,7 @@
     <string name="SaveToDownloads">In Downloads speichern</string>
     <string name="ApplyLocalizationFile">Sprachdatei benutzen</string>
     <string name="UnsupportedAttachment">Nicht unterstützte Datei</string>
+    <string name="SetTimer">Wähle einen Selbstzerstörungs-Timer</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s hat den Selbstzerstörungs-Timer auf %2$s gesetzt</string>
     <string name="MessageLifetimeChangedOutgoing">Du hast den Selbstzerstörungs-Timer auf %1$s gesetzt</string>
@@ -143,7 +144,6 @@
     <string name="ReplyToUser">%1$s antworten</string>
     <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
     <!--contacts view-->
-    <string name="NewMessageTitle">Neue Nachricht</string>
     <string name="SelectContact">Kontakt auswählen</string>
     <string name="NoContacts">Noch keine Kontakte</string>
     <string name="InviteText">Hey, lass uns zu Telegram wechseln: http://telegram.org/dl2</string>
@@ -158,6 +158,7 @@
     <string name="WithinAWeek">diese Woche gesehen</string>
     <string name="WithinAMonth">diesen Monat gesehen</string>
     <string name="ALongTimeAgo">vor langer Zeit gesehen</string>
+    <string name="NewMessageTitle">Neue Nachricht</string>
     <!--group create view-->
     <string name="SendMessageTo">Sende Nachricht an…</string>
     <string name="EnterGroupNamePlaceholder">Gruppenname</string>
@@ -272,6 +273,12 @@
     <string name="NoMediaAutoDownload">kein automatischer Download</string>
     <string name="SaveToGallerySettings">In der Galerie speichern</string>
     <string name="EditName">Name bearbeiten</string>
+    <string name="NotificationsPriority">Priorität</string>
+    <string name="NotificationsPriorityDefault">Standard</string>
+    <string name="NotificationsPriorityLow">Niedrig</string>
+    <string name="NotificationsPriorityHigh">Hoch</string>
+    <string name="NotificationsPriorityMax">Max</string>
+    <string name="RepeatNotifications">Wiederholen Benachrichtigungen</string>
     <!--media view-->
     <string name="NoMedia">Noch keine geteilten Medien vorhanden</string>
     <!--map view-->
diff --git a/TMessagesProj/src/main/res/values-es/strings.xml b/TMessagesProj/src/main/res/values-es/strings.xml
index 12edacac5..19641a4b7 100644
--- a/TMessagesProj/src/main/res/values-es/strings.xml
+++ b/TMessagesProj/src/main/res/values-es/strings.xml
@@ -106,6 +106,7 @@
     <string name="SaveToDownloads">Guardar en descargas</string>
     <string name="ApplyLocalizationFile">Aplicar traducción</string>
     <string name="UnsupportedAttachment">Adjunto no soportado</string>
+    <string name="SetTimer">Establecer autodestrucción</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s activó la autodestrucción en %2$s</string>
     <string name="MessageLifetimeChangedOutgoing">Activaste la autodestrucción en %1$s</string>
@@ -143,7 +144,6 @@
     <string name="ReplyToUser">Responder a %1$s</string>
     <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
     <!--contacts view-->
-    <string name="NewMessageTitle">Nuevo mensaje</string>
     <string name="SelectContact">Elegir contacto</string>
     <string name="NoContacts">Aún sin contactos</string>
     <string name="InviteText">Oye, cambiémonos a Telegram: http://telegram.org/dl2</string>
@@ -158,6 +158,7 @@
     <string name="WithinAWeek">últ. vez hace unos días</string>
     <string name="WithinAMonth">últ. vez hace unas semanas</string>
     <string name="ALongTimeAgo">últ. vez hace mucho tiempo</string>
+    <string name="NewMessageTitle">Nuevo mensaje</string>
     <!--group create view-->
     <string name="SendMessageTo">Enviar mensaje a...</string>
     <string name="EnterGroupNamePlaceholder">Nombre del grupo</string>
@@ -272,6 +273,12 @@
     <string name="NoMediaAutoDownload">Ningún contenido multimedia</string>
     <string name="SaveToGallerySettings">Guardar en galería</string>
     <string name="EditName">Editar nombre</string>
+    <string name="NotificationsPriority">Prioridad</string>
+    <string name="NotificationsPriorityDefault">Por defecto</string>
+    <string name="NotificationsPriorityLow">Baja</string>
+    <string name="NotificationsPriorityHigh">Alta</string>
+    <string name="NotificationsPriorityMax">Máxima</string>
+    <string name="RepeatNotifications">Repetir notificaciones</string>
     <!--media view-->
     <string name="NoMedia">Aún no hay fotos ni vídeos</string>
     <!--map view-->
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 7fd2ade26..117a782ce 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -106,6 +106,7 @@
     <string name="SaveToDownloads">Salva in download</string>
     <string name="ApplyLocalizationFile">Applica file di localizzazione</string>
     <string name="UnsupportedAttachment">Allegato non supportato</string>
+    <string name="SetTimer">Timer di autodistruzione</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s ha impostato il timer di autodistruzione a %2$s</string>
     <string name="MessageLifetimeChangedOutgoing">Hai impostato il timer di autodistruzione a %1$s</string>
@@ -143,7 +144,6 @@
     <string name="ReplyToUser">Rispondi a %1$s</string>
     <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
     <!--contacts view-->
-    <string name="NewMessageTitle">Nuovo messaggio</string>
     <string name="SelectContact">Seleziona contatto</string>
     <string name="NoContacts">Ancora nessun contatto</string>
     <string name="InviteText">Ehi, è il momento di passare a Telegram: http://telegram.org/dl2</string>
@@ -158,6 +158,7 @@
     <string name="WithinAWeek">ultimo accesso entro una settimana</string>
     <string name="WithinAMonth">ultimo accesso entro un mese</string>
     <string name="ALongTimeAgo">ultimo accesso molto tempo fa</string>
+    <string name="NewMessageTitle">Nuovo messaggio</string>
     <!--group create view-->
     <string name="SendMessageTo">Invia messaggio a...</string>
     <string name="EnterGroupNamePlaceholder">Immetti il nome del gruppo</string>
@@ -272,6 +273,12 @@
     <string name="NoMediaAutoDownload">Nessun media</string>
     <string name="SaveToGallerySettings">Salva nella galleria</string>
     <string name="EditName">Modifica nome</string>
+    <string name="NotificationsPriority">Priorità</string>
+    <string name="NotificationsPriorityDefault">Default</string>
+    <string name="NotificationsPriorityLow">Bassa</string>
+    <string name="NotificationsPriorityHigh">Alta</string>
+    <string name="NotificationsPriorityMax">Massima</string>
+    <string name="RepeatNotifications">Ripeti Notifiche</string>
     <!--media view-->
     <string name="NoMedia">Nessun media condiviso</string>
     <!--map view-->
diff --git a/TMessagesProj/src/main/res/values-ko/strings.xml b/TMessagesProj/src/main/res/values-ko/strings.xml
index a5611165e..be84f2b17 100644
--- a/TMessagesProj/src/main/res/values-ko/strings.xml
+++ b/TMessagesProj/src/main/res/values-ko/strings.xml
@@ -106,6 +106,7 @@
     <string name="SaveToDownloads">다운로드 폴더에 저장</string>
     <string name="ApplyLocalizationFile">언어 파일 적용</string>
     <string name="UnsupportedAttachment">지원하지 않는 형식입니다</string>
+    <string name="SetTimer">자동삭제 타이머 설정</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s님이 자동삭제를 %2$s 후로 설정했습니다</string>
     <string name="MessageLifetimeChangedOutgoing">자동삭제를 %1$s 후로 설정했습니다</string>
@@ -143,7 +144,6 @@
     <string name="ReplyToUser">%1$s님에게 답장하기</string>
     <string name="NotificationMessagesPeopleDisplayOrder">%2$s %1$s</string>
     <!--contacts view-->
-    <string name="NewMessageTitle">새 메시지</string>
     <string name="SelectContact">대화상대 선택</string>
     <string name="NoContacts">대화상대가 없습니다</string>
     <string name="InviteText">텔레그램으로 초대합니다! http://telegram.org/dl2</string>
@@ -158,6 +158,7 @@
     <string name="WithinAWeek">일주일 이내 마지막으로 접속</string>
     <string name="WithinAMonth">한 달 이내 마지막으로 접속</string>
     <string name="ALongTimeAgo">마지막으로 접속한 지 오래됨</string>
+    <string name="NewMessageTitle">새 메시지</string>
     <!--group create view-->
     <string name="SendMessageTo">메시지 보내기...</string>
     <string name="EnterGroupNamePlaceholder">그룹 이름 입력</string>
@@ -272,6 +273,12 @@
     <string name="NoMediaAutoDownload">다운로드 안함</string>
     <string name="SaveToGallerySettings">앨범에 자동 저장</string>
     <string name="EditName">이름 편집</string>
+    <string name="NotificationsPriority">우선순위</string>
+    <string name="NotificationsPriorityDefault">기본</string>
+    <string name="NotificationsPriorityLow">낮음</string>
+    <string name="NotificationsPriorityHigh">높음</string>
+    <string name="NotificationsPriorityMax">최우선</string>
+    <string name="RepeatNotifications">Repeat Notifications</string>
     <!--media view-->
     <string name="NoMedia">공유한 미디어가 없습니다</string>
     <!--map view-->
diff --git a/TMessagesProj/src/main/res/values-nl/strings.xml b/TMessagesProj/src/main/res/values-nl/strings.xml
index 42ce111a3..da6912ab4 100644
--- a/TMessagesProj/src/main/res/values-nl/strings.xml
+++ b/TMessagesProj/src/main/res/values-nl/strings.xml
@@ -106,6 +106,7 @@
     <string name="SaveToDownloads">Opslaan in Downloads</string>
     <string name="ApplyLocalizationFile">Vertaling toepassen</string>
     <string name="UnsupportedAttachment">Bestandstype niet ondersteund</string>
+    <string name="SetTimer">Zelfvernietigingstimer instellen</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s heeft de zelfvernietigingstimer ingesteld op %2$s</string>
     <string name="MessageLifetimeChangedOutgoing">Je hebt de zelfvernietigingstimer ingesteld op %1$s</string>
@@ -143,7 +144,6 @@
     <string name="ReplyToUser">Antwoord op %1$s</string>
     <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
     <!--contacts view-->
-    <string name="NewMessageTitle">Nieuw bericht</string>
     <string name="SelectContact">Kies een contact</string>
     <string name="NoContacts">Nog geen contacten</string>
     <string name="InviteText">Hey! Zullen we overstappen op Telegram? http://telegram.org/dl2</string>
@@ -158,6 +158,7 @@
     <string name="WithinAWeek">afgelopen week gezien</string>
     <string name="WithinAMonth">afgelopen maand gezien</string>
     <string name="ALongTimeAgo">lang geleden gezien</string>
+    <string name="NewMessageTitle">Nieuw bericht</string>
     <!--group create view-->
     <string name="SendMessageTo">Bericht verzenden naar…</string>
     <string name="EnterGroupNamePlaceholder">Groepsnaam...</string>
@@ -272,6 +273,12 @@
     <string name="NoMediaAutoDownload">Geen media</string>
     <string name="SaveToGallerySettings">Opslaan in galerij</string>
     <string name="EditName">Naam bewerken</string>
+    <string name="NotificationsPriority">Prioriteit</string>
+    <string name="NotificationsPriorityDefault">Standaard</string>
+    <string name="NotificationsPriorityLow">Laag</string>
+    <string name="NotificationsPriorityHigh">Hoog</string>
+    <string name="NotificationsPriorityMax">Max</string>
+    <string name="RepeatNotifications">Meldingen herhalen</string>
     <!--media view-->
     <string name="NoMedia">Nog geen media gedeeld</string>
     <!--map view-->
@@ -395,11 +402,11 @@
     <string name="AreYouSureLogout">Weet je zeker dat je wilt uitloggen?\n\nTelegram kun je naadloos op al je apparaten tegelijkertijd gebruiken.\n\nLet op! Als je uitlogt worden al je geheime chats verwijderd.</string>
     <string name="AreYouSureSessions">Alle apparaten behalve het huidige apparaat uitloggen?</string>
     <string name="AreYouSureDeleteAndExit">Echt alles verwijderen en de groep verlaten?</string>
-    <string name="AreYouSureDeleteThisChat">Weet je zeker dat je dit gesprek wilt verwijderen?</string>
+    <string name="AreYouSureDeleteThisChat">Gesprek echt verwijderen?</string>
     <string name="AreYouSureShareMyContactInfo">Weet je zeker dat je je contactinformatie wilt delen?</string>
     <string name="AreYouSureBlockContact">Weet je zeker dat je deze persoon wilt blokkeren?</string>
     <string name="AreYouSureUnblockContact">Weet je zeker dat je deze persoon wilt deblokkeren?</string>
-    <string name="AreYouSureDeleteContact">Weet je zeker dat je deze contactpersoon wilt verwijderen?</string>
+    <string name="AreYouSureDeleteContact">Contactpersoon echt verwijderen?</string>
     <string name="AreYouSureSecretChat">Weet je zeker dat je een geheime chat wilt starten?</string>
     <string name="AreYouSureRegistration">Weet je zeker dat je de registratie wilt annuleren?</string>
     <string name="AreYouSureClearHistory">Geschiedenis echt wissen? </string>
diff --git a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
index 49a4cdf79..847a187c5 100644
--- a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
@@ -106,6 +106,7 @@
     <string name="SaveToDownloads">Salvar em downloads</string>
     <string name="ApplyLocalizationFile">Aplicar arquivo de localização</string>
     <string name="UnsupportedAttachment">Anexo não suportado</string>
+    <string name="SetTimer">Tempo de autodestruição</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s estabeleceu o tempo de autodestruição para %2$s </string>
     <string name="MessageLifetimeChangedOutgoing">Você estabeleceu o tempo de autodestruição para %1$s</string>
@@ -143,7 +144,6 @@
     <string name="ReplyToUser">Responder para %1$s</string>
     <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
     <!--contacts view-->
-    <string name="NewMessageTitle">Nova Mensagem</string>
     <string name="SelectContact">Selecionar Contato</string>
     <string name="NoContacts">Ainda não há contatos</string>
     <string name="InviteText">Ei, vamos mudar para o Telegram: http://telegram.org/dl2</string>
@@ -158,6 +158,7 @@
     <string name="WithinAWeek">visto na última semana</string>
     <string name="WithinAMonth">visto no último mês</string>
     <string name="ALongTimeAgo">visto há muito tempo atrás</string>
+    <string name="NewMessageTitle">Nova Mensagem</string>
     <!--group create view-->
     <string name="SendMessageTo">Enviar mensagem para...</string>
     <string name="EnterGroupNamePlaceholder">Digite o nome do grupo</string>
@@ -272,6 +273,12 @@
     <string name="NoMediaAutoDownload">Sem mídia</string>
     <string name="SaveToGallerySettings">Salvar na galeria</string>
     <string name="EditName">Editar nome</string>
+    <string name="NotificationsPriority">Priority</string>
+    <string name="NotificationsPriorityDefault">Default</string>
+    <string name="NotificationsPriorityLow">Low</string>
+    <string name="NotificationsPriorityHigh">High</string>
+    <string name="NotificationsPriorityMax">Max</string>
+    <string name="RepeatNotifications">Repeat Notifications</string>
     <!--media view-->
     <string name="NoMedia">Ainda não há mídia compartilhada</string>
     <!--map view-->
diff --git a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
index 726b2da81..0a8e683d1 100644
--- a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
@@ -106,6 +106,7 @@
     <string name="SaveToDownloads">Salvar em downloads</string>
     <string name="ApplyLocalizationFile">Aplicar arquivo de localização</string>
     <string name="UnsupportedAttachment">Anexo não suportado</string>
+    <string name="SetTimer">Tempo de autodestruição</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s estabeleceu o tempo de autodestruição para %2$s </string>
     <string name="MessageLifetimeChangedOutgoing">Você estabeleceu o tempo de autodestruição para %1$s</string>
@@ -143,7 +144,6 @@
     <string name="ReplyToUser">Responder para %1$s</string>
     <string name="NotificationMessagesPeopleDisplayOrder">%1$s %2$s</string>
     <!--contacts view-->
-    <string name="NewMessageTitle">Nova Mensagem</string>
     <string name="SelectContact">Selecionar Contato</string>
     <string name="NoContacts">Ainda não há contatos</string>
     <string name="InviteText">Ei, vamos mudar para o Telegram: http://telegram.org/dl2</string>
@@ -158,6 +158,7 @@
     <string name="WithinAWeek">visto na última semana</string>
     <string name="WithinAMonth">visto no último mês</string>
     <string name="ALongTimeAgo">visto há muito tempo atrás</string>
+    <string name="NewMessageTitle">Nova Mensagem</string>
     <!--group create view-->
     <string name="SendMessageTo">Enviar mensagem para...</string>
     <string name="EnterGroupNamePlaceholder">Digite o nome do grupo</string>
@@ -272,6 +273,12 @@
     <string name="NoMediaAutoDownload">Sem mídia</string>
     <string name="SaveToGallerySettings">Salvar na galeria</string>
     <string name="EditName">Editar nome</string>
+    <string name="NotificationsPriority">Priority</string>
+    <string name="NotificationsPriorityDefault">Default</string>
+    <string name="NotificationsPriorityLow">Low</string>
+    <string name="NotificationsPriorityHigh">High</string>
+    <string name="NotificationsPriorityMax">Max</string>
+    <string name="RepeatNotifications">Repeat Notifications</string>
     <!--media view-->
     <string name="NoMedia">Ainda não há mídia compartilhada</string>
     <!--map view-->
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index b1bd3d7cb..96402f007 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -106,6 +106,7 @@
     <string name="SaveToDownloads">Save to downloads</string>
     <string name="ApplyLocalizationFile">Apply localization file</string>
     <string name="UnsupportedAttachment">Unsupported attachment</string>
+    <string name="SetTimer">Set self-destruct timer</string>
     <!--notification-->
     <string name="MessageLifetimeChanged">%1$s set the self-destruct timer to %2$s</string>
     <string name="MessageLifetimeChangedOutgoing">You set the self-destruct timer to %1$s</string>
@@ -272,6 +273,12 @@
     <string name="NoMediaAutoDownload">No media</string>
     <string name="SaveToGallerySettings">Save to gallery</string>
     <string name="EditName">Edit name</string>
+    <string name="NotificationsPriority">Priority</string>
+    <string name="NotificationsPriorityDefault">Default</string>
+    <string name="NotificationsPriorityLow">Low</string>
+    <string name="NotificationsPriorityHigh">High</string>
+    <string name="NotificationsPriorityMax">Max</string>
+    <string name="RepeatNotifications">Repeat Notifications</string>
     <!--media view-->
     <string name="NoMedia">No shared media yet</string>
     <!--map view-->
