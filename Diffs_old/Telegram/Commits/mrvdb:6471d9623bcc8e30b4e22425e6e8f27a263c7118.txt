diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
index 9341b1759..0c667aae8 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessagesController.java
@@ -4119,6 +4119,9 @@ private void showInAppNotification(MessageObject messageObject) {
             String userSoundPath = null;
             String chatSoundPath = null;
 
+            int globalLight = preferences.getInt("GlobalLight", 0xff00ff00);
+            int groupLight = preferences.getInt("GroupLight", 0xff0000ff);
+
             NotificationManager mNotificationManager = (NotificationManager)ApplicationLoader.applicationContext.getSystemService(Context.NOTIFICATION_SERVICE);
             Intent intent = new Intent(ApplicationLoader.applicationContext, LaunchActivity.class);
             String msg = null;
@@ -4266,20 +4269,42 @@ private void showInAppNotification(MessageObject messageObject) {
 
             String choosenSoundPath = null;
 
+            int chosenLight = 0;
+
             if (user_id != 0) {
                 if (userSoundPath != null) {
                     choosenSoundPath = userSoundPath;
                 } else if (globalSound != null) {
                     choosenSoundPath = globalSound;
                 }
+
+                int userLight = preferences.getInt("light_"+user_id, 0xAA000000);
+
+                if(userLight != 0xAA000000) {
+                    chosenLight = userLight;
+                } else {
+                    chosenLight = globalLight;
+                }
             } else if (chat_id != 0) {
                 if (chatSoundPath != null) {
                     choosenSoundPath = chatSoundPath;
                 } else if (chatSound != null) {
                     choosenSoundPath = chatSound;
                 }
+
+                int specificLight = preferences.getInt("light_chat_"+chat_id, 0xAA000000);
+
+                if(specificLight != 0xAA000000) {
+                    chosenLight = specificLight;
+                } else {
+                    chosenLight = globalLight;
+                }
+
+                chosenLight = groupLight;
             } else {
                 choosenSoundPath = globalSound;
+
+                chosenLight = globalLight;
             }
 
             intent.setAction("com.tmessages.openchat" + Math.random() + Integer.MAX_VALUE);
@@ -4321,7 +4346,7 @@ private void showInAppNotification(MessageObject messageObject) {
             mBuilder.setContentIntent(contentIntent);
             mNotificationManager.cancel(1);
             Notification notification = mBuilder.build();
-            notification.ledARGB = 0xff00ff00;
+            notification.ledARGB = chosenLight;
             notification.ledOnMS = 1000;
             notification.ledOffMS = 1000;
             notification.flags |= Notification.FLAG_SHOW_LIGHTS;
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java
index 7932cae35..487bcf696 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatProfileActivity.java
@@ -67,6 +67,21 @@
     private int onlineCount = -1;
     private ArrayList<Integer> sortedUsers = new ArrayList<Integer>();
 
+
+    private final int[] colors = {
+            0x00000000,
+            0xFFFFFFFF,
+            0xFFFF0000,
+            0xFFFF7F00,
+            0xFFFFFF00,
+            0xFF00FF00,
+            0xFF00FFFF,
+            0xFF007FFF,
+            0xFF0000FF,
+            0xFF7F00FF,
+            0xFFFF00FF
+    };
+
     @Override
     public boolean onFragmentCreate() {
         super.onFragmentCreate();
@@ -121,8 +136,8 @@ public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, lon
                     if (info != null) {
                         size += info.participants.size();
                     }
-                    if (i > 6 && i < size + 7) {
-                        TLRPC.TL_chatParticipant user = info.participants.get(sortedUsers.get(i - 7));
+                    if (i > 7 && i < size + 8) {
+                        TLRPC.TL_chatParticipant user = info.participants.get(sortedUsers.get(i - 8));
                         if (user.user_id == UserConfig.clientUserId) {
                             return false;
                         }
@@ -189,7 +204,37 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                         } catch (Exception e) {
                             FileLog.e("tmessages", e);
                         }
-                    } else if (i == 5) {
+                    } else if (i == 4) {
+                        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
+                        builder.setTitle(getStringEntry(R.string.ChooseColor));
+
+                        final String userLightSetting = "light_chat_" + chat_id;
+
+                        builder.setItems(R.array.choose_color, new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialogInterface, int i) {
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+
+                                int globalLight = preferences.getInt("GlobalLight", 0xAA000000);
+
+                                SharedPreferences.Editor editor = preferences.edit();
+
+                                int color = colors[i];
+
+                                if(color == globalLight) {
+                                    editor.remove(userLightSetting);
+                                } else {
+                                    editor.putInt(userLightSetting, color);
+                                }
+                                editor.commit();
+                                listView.invalidateViews();
+                            }
+                        });
+
+                        AlertDialog alertDialog = builder.create();
+                        alertDialog.show();
+
+                    } else if (i == 6) {
                         MediaActivity fragment = new MediaActivity();
                         Bundle bundle = new Bundle();
                         bundle.putLong("dialog_id", -chat_id);
@@ -200,8 +245,8 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                         if (info != null) {
                             size += info.participants.size();
                         }
-                        if (i > 6 && i < size + 7) {
-                            int user_id = info.participants.get(sortedUsers.get(i - 7)).user_id;
+                        if (i > 7 && i < size + 8) {
+                            int user_id = info.participants.get(sortedUsers.get(i - 8)).user_id;
                             if (user_id == UserConfig.clientUserId) {
                                 return;
                             }
@@ -211,13 +256,13 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                             fragment.setArguments(args);
                             ((ApplicationActivity)parentActivity).presentFragment(fragment, "user_" + user_id, false);
                         } else {
-                            if (size + 7 == i) {
+                            if (size + 8 == i) {
                                 if (info.participants.size() < 200) {
                                     openAddMenu();
                                 } else {
                                     kickUser(null);
                                 }
-                            } else if (size + 7 == i + 1) {
+                            } else if (size + 8 == i + 1) {
                                 kickUser(null);
                             }
                         }
@@ -505,12 +550,12 @@ public boolean areAllItemsEnabled() {
 
         @Override
         public boolean isEnabled(int i) {
-            return (i == 2 || i == 3 || i == 5 || i > 6) && i != getCount() - 1;
+            return (i == 2 || i == 3 || i == 4 || i == 6 || i > 7) && i != getCount() - 1;
         }
 
         @Override
         public int getCount() {
-            int count = 6;
+            int count = 7;
             if (info != null && !(info instanceof TLRPC.TL_chatParticipantsForbidden)) {
                 count += info.participants.size() + 2;
                 if (info.participants.size() < 200) {
@@ -633,9 +678,9 @@ public void onClick(DialogInterface dialogInterface, int i) {
                 TextView textView = (TextView)view.findViewById(R.id.settings_section_text);
                 if (i == 1) {
                     textView.setText(getStringEntry(R.string.SETTINGS));
-                } else if (i == 4) {
+                } else if (i == 5) {
                     textView.setText(getStringEntry(R.string.SHAREDMEDIA));
-                } else if (i == 6) {
+                } else if (i == 7) {
                     TLRPC.Chat chat = MessagesController.Instance.chats.get(chat_id);
                     textView.setText(String.format("%d %s", chat.participants_count, getStringEntry(R.string.MEMBERS)));
                 }
@@ -677,7 +722,18 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     }
                     textView.setText(R.string.Sound);
                     divider.setVisibility(View.INVISIBLE);
-                } else if (i == 5) {
+                } else if (i == 4) {
+                    SharedPreferences preferences = mContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    int color = preferences.getInt("light_chat_" + chat_id, 0xAA000000);
+
+                    if (color == 0xAA000000) {
+                        detailTextView.setText(getStringEntry(R.string.Default));
+                    } else {
+                        detailTextView.setText(intToColor(color));
+                    }
+                    textView.setText(R.string.Light);
+                    divider.setVisibility(View.INVISIBLE);
+                } else if (i == 6) {
                     textView.setText(R.string.SharedMedia);
                     if (totalMediaCount == -1) {
                         detailTextView.setText(getStringEntry(R.string.Loading));
@@ -687,7 +743,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
                     divider.setVisibility(View.INVISIBLE);
                 }
             } else if (type == 4) {
-                TLRPC.TL_chatParticipant part = info.participants.get(sortedUsers.get(i - 7));
+                TLRPC.TL_chatParticipant part = info.participants.get(sortedUsers.get(i - 8));
                 TLRPC.User user = MessagesController.Instance.users.get(part.user_id);
 
                 if (view == null) {
@@ -742,27 +798,27 @@ public void onClick(DialogInterface dialogInterface, int i) {
         public int getItemViewType(int i) {
             if (i == 0) {
                 return 0;
-            } else if (i == 1 || i == 4 || i == 6) {
+            } else if (i == 1 || i == 5 || i == 7) {
                 return 1;
             } else if (i == 2) {
                 return 2;
-            } else if (i == 3 || i == 5) {
+            } else if (i == 3 || i ==4 || i == 6) {
                 return 3;
-            } else if (i > 6) {
+            } else if (i > 7) {
                 int size = 0;
                 if (info != null) {
                     size += info.participants.size();
                 }
-                if (i > 6 && i < size + 7) {
+                if (i > 7 && i < size + 8) {
                     return 4;
                 } else {
-                    if (size + 7 == i) {
+                    if (size + 8 == i) {
                         if (info != null && info.participants.size() < 200) {
                             return 5;
                         } else {
                             return 6;
                         }
-                    } else if (size + 8 == i) {
+                    } else if (size + 9 == i) {
                         return 6;
                     }
                 }
@@ -779,5 +835,27 @@ public int getViewTypeCount() {
         public boolean isEmpty() {
             return false;
         }
+
+        private String intToColor(int value) {
+            String colorText = "unknown";
+
+            int pos=-1;
+
+            for(int i=0;i<colors.length; i++)
+            {
+                if(value == colors[i]) {
+                    pos = i;
+                    break;
+                }
+            }
+
+            if(pos>= 0) {
+                String[] allColors = getResources().getStringArray(R.array.choose_color);
+
+                colorText = allColors[pos];
+            }
+
+            return colorText;
+        }
     }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
index 18d1dba47..a6c223e7a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsNotificationsActivity.java
@@ -9,7 +9,9 @@
 package org.telegram.ui;
 
 import android.app.Activity;
+import android.app.AlertDialog;
 import android.content.Context;
+import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.media.Ringtone;
@@ -43,7 +45,21 @@
 
 public class SettingsNotificationsActivity extends BaseFragment {
     private ListView listView;
-    private boolean reseting = false;
+    private boolean resetting = false;
+
+    private final int[] colors = {
+            0x00000000,
+            0xFFFFFFFF,
+            0xFFFF0000,
+            0xFFFF7F00,
+            0xFFFFFF00,
+            0xFF00FF00,
+            0xFF00FFFF,
+            0xFF007FFF,
+            0xFF0000FF,
+            0xFF7F00FF,
+            0xFFFF00FF
+    };
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -61,20 +77,20 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
             listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                 @Override
                 public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
-                    if (i == 1 || i == 6) {
+                    if (i == 1 || i == 7) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         boolean enabled;
                         if (i == 1) {
                             enabled = preferences.getBoolean("EnableAll", true);
                             editor.putBoolean("EnableAll", !enabled);
-                        } else if (i == 6) {
+                        } else if (i == 7) {
                             enabled = preferences.getBoolean("EnableGroup", true);
                             editor.putBoolean("EnableGroup", !enabled);
                         }
                         editor.commit();
                         listView.invalidateViews();
-                    } else if (i == 2 || i == 7) {
+                    } else if (i == 2 || i == 8) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         boolean enabledAll = true;
@@ -82,26 +98,26 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                         if (i == 2) {
                             enabled = preferences.getBoolean("EnablePreviewAll", true);
                             editor.putBoolean("EnablePreviewAll", !enabled);
-                        } else if (i == 7) {
+                        } else if (i == 8) {
                             enabled = preferences.getBoolean("EnablePreviewGroup", true);
                             editor.putBoolean("EnablePreviewGroup", !enabled);
                         }
                         editor.commit();
                         listView.invalidateViews();
-                    } else if (i == 3 || i == 8) {
+                    } else if (i == 3 || i == 9) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         boolean enabled;
                         if (i == 3) {
                             enabled = preferences.getBoolean("EnableVibrateAll", true);
                             editor.putBoolean("EnableVibrateAll", !enabled);
-                        } else if (i == 8) {
+                        } else if (i == 9) {
                             enabled = preferences.getBoolean("EnableVibrateGroup", true);
                             editor.putBoolean("EnableVibrateGroup", !enabled);
                         }
                         editor.commit();
                         listView.invalidateViews();
-                    } else if (i == 4 || i == 9) {
+                    } else if (i == 4 || i == 10) {
                         try {
                             SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                             Intent tmpIntent = new Intent(RingtoneManager.ACTION_RINGTONE_PICKER);
@@ -124,7 +140,7 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                                         currentSound = Uri.parse(path);
                                     }
                                 }
-                            } else if (i == 9) {
+                            } else if (i == 10) {
                                 String path = preferences.getString("GroupSoundPath", defaultPath);
                                 if (path != null && !path.equals("NoSound")) {
                                     if (path.equals(defaultPath)) {
@@ -139,11 +155,40 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                         } catch (Exception e) {
                             FileLog.e("tmessages", e);
                         }
-                    } else if (i == 17) {
-                        if (reseting) {
+                    }
+                    else if (i == 5 || i == 11) {
+                        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
+                        builder.setTitle(getStringEntry(R.string.ChooseColor));
+
+                        final boolean groupLightSetting = i == 11;
+
+                        builder.setItems(R.array.choose_color, new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialogInterface, int i) {
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                                SharedPreferences.Editor editor = preferences.edit();
+
+                                int color = colors[i];
+
+                                if(!groupLightSetting) {
+                                    editor.putInt("GlobalLight", color);
+                                } else {
+                                    editor.putInt("GroupLight", color);
+                                }
+
+                                editor.commit();
+                                listView.invalidateViews();
+                            }
+                        });
+
+                        AlertDialog alertDialog = builder.create();
+                        alertDialog.show();
+                    }
+                    else if (i == 19) {
+                        if (resetting) {
                             return;
                         }
-                        reseting = true;
+                        resetting = true;
                         TLRPC.TL_account_resetNotifySettings req = new TLRPC.TL_account_resetNotifySettings();
                         ConnectionsManager.Instance.performRpc(req, new RPCRequest.RPCRequestDelegate() {
                             @Override
@@ -159,7 +204,7 @@ public void run() {
                                         if (inflaterActivity == null) {
                                             return;
                                         }
-                                        reseting = false;
+                                        resetting = false;
                                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                                         SharedPreferences.Editor editor = preferences.edit();
                                         editor.clear();
@@ -171,28 +216,28 @@ public void run() {
                                 });
                             }
                         }, null, true, RPCRequest.RPCRequestClassGeneric);
-                    } else if (i == 11) {
+                    } else if (i == 13) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         boolean enabled = preferences.getBoolean("EnableInAppSounds", true);
                         editor.putBoolean("EnableInAppSounds", !enabled);
                         editor.commit();
                         listView.invalidateViews();
-                    } else if (i == 12) {
+                    } else if (i == 14) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         boolean enabled = preferences.getBoolean("EnableInAppVibrate", true);
                         editor.putBoolean("EnableInAppVibrate", !enabled);
                         editor.commit();
                         listView.invalidateViews();
-                    } else if (i == 13) {
+                    } else if (i == 15) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         boolean enabled = preferences.getBoolean("EnableInAppPreview", true);
                         editor.putBoolean("EnableInAppPreview", !enabled);
                         editor.commit();
                         listView.invalidateViews();
-                    } else if (i == 15) {
+                    } else if (i == 17) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                         SharedPreferences.Editor editor = preferences.edit();
                         boolean enabled = preferences.getBoolean("EnableContactJoined", true);
@@ -243,7 +288,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
                     editor.putString("GlobalSound", "NoSound");
                     editor.putString("GlobalSoundPath", "NoSound");
                 }
-            } else if (requestCode == 9) {
+            } else if (requestCode == 10) {
                 if (name != null && ringtone != null) {
                     editor.putString("GroupSound", name);
                     editor.putString("GroupSoundPath", ringtone.toString());
@@ -328,15 +373,15 @@ public boolean areAllItemsEnabled() {
         public boolean isEnabled(int i) {
             SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
             boolean enabledAll = preferences.getBoolean("EnableAll", true);
-            if (i == 17 || i == 15) {
+            if (i == 19 || i == 17) {
                 return true;
             }
-            return !(i != 1 && !enabledAll && i != 13) && (i > 0 && i < 5 || i > 5 && i < 10 || i > 10 && i < 14);
+            return !(i != 1 && !enabledAll && i != 15) && (i > 0 && i < 6 || i > 6 && i < 12 || i > 12 && i < 16);
         }
 
         @Override
         public int getCount() {
-            return 18;
+            return 20;
         }
 
         @Override
@@ -365,13 +410,13 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 TextView textView = (TextView)view.findViewById(R.id.settings_section_text);
                 if (i == 0) {
                     textView.setText(getStringEntry(R.string.MessageNotifications));
-                } else if (i == 5) {
+                } else if (i == 6) {
                     textView.setText(getStringEntry(R.string.GroupNotifications));
-                } else if (i == 10) {
+                } else if (i == 12) {
                     textView.setText(getStringEntry(R.string.InAppNotifications));
-                } else if (i == 14) {
-                    textView.setText(getStringEntry(R.string.Events));
                 } else if (i == 16) {
+                    textView.setText(getStringEntry(R.string.Events));
+                } else if (i == 18) {
                     textView.setText(getStringEntry(R.string.Reset));
                 }
             } if (type == 1) {
@@ -387,43 +432,43 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 boolean enabled = false;
                 boolean enabledAll = preferences.getBoolean("EnableAll", true);
 
-                if (i == 1 || i == 6) {
+                if (i == 1 || i == 7) {
                     if (i == 1) {
                         enabled = enabledAll;
-                    } else if (i == 6) {
+                    } else if (i == 7) {
                         enabled = preferences.getBoolean("EnableGroup", true);
                     }
                     textView.setText(getStringEntry(R.string.Alert));
                     divider.setVisibility(View.VISIBLE);
-                } else if (i == 2 || i == 7) {
+                } else if (i == 2 || i == 8) {
                     if (i == 2) {
                         enabled = preferences.getBoolean("EnablePreviewAll", true);
-                    } else if (i == 7) {
+                    } else if (i == 8) {
                         enabled = preferences.getBoolean("EnablePreviewGroup", true);
                     }
                     textView.setText(getStringEntry(R.string.MessagePreview));
                     divider.setVisibility(View.VISIBLE);
-                } else if (i == 3 || i == 8) {
+                } else if (i == 3 || i == 9) {
                     if (i == 3) {
                         enabled = preferences.getBoolean("EnableVibrateAll", true);
-                    } else if (i == 8) {
+                    } else if (i == 9) {
                         enabled = preferences.getBoolean("EnableVibrateGroup", true);
                     }
                     textView.setText(getStringEntry(R.string.Vibrate));
                     divider.setVisibility(View.VISIBLE);
-                } else if (i == 11) {
+                } else if (i == 13) {
                     enabled = preferences.getBoolean("EnableInAppSounds", true);
                     textView.setText(getStringEntry(R.string.InAppSounds));
                     divider.setVisibility(View.VISIBLE);
-                } else if (i == 12) {
+                } else if (i == 14) {
                     enabled = preferences.getBoolean("EnableInAppVibrate", true);
                     textView.setText(getStringEntry(R.string.InAppVibrate));
                     divider.setVisibility(View.VISIBLE);
-                } else if (i == 13) {
+                } else if (i == 15) {
                     enabled = preferences.getBoolean("EnableInAppPreview", true);
                     textView.setText(getStringEntry(R.string.InAppPreview));
                     divider.setVisibility(View.INVISIBLE);
-                } else if (i == 15) {
+                } else if (i == 17) {
                     enabled = preferences.getBoolean("EnableContactJoined", true);
                     textView.setText(getStringEntry(R.string.ContactJoined));
                     divider.setVisibility(View.INVISIBLE);
@@ -433,7 +478,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 } else {
                     checkButton.setImageResource(R.drawable.btn_check_off);
                 }
-                if (i != 1 && !enabledAll && i != 15) {
+                if (i != 1 && !enabledAll && i != 17) {
                     view.setEnabled(false);
                     if(android.os.Build.VERSION.SDK_INT >= 11) {
                         checkButton.setAlpha(0.3f);
@@ -456,7 +501,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                 View divider = view.findViewById(R.id.settings_row_divider);
                 SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
                 boolean enabledAll = preferences.getBoolean("EnableAll", true);
-                if (i == 4 || i == 9) {
+                if (i == 4 || i == 10) {
                     if (i == 4) {
                         String name = preferences.getString("GlobalSound", getStringEntry(R.string.Default));
                         if (name.equals("NoSound")) {
@@ -464,7 +509,7 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                         } else {
                             textViewDetail.setText(name);
                         }
-                    } else if (i == 9) {
+                    } else if (i == 10) {
                         String name = preferences.getString("GroupSound", getStringEntry(R.string.Default));
                         if (name.equals("NoSound")) {
                             textViewDetail.setText(getStringEntry(R.string.NoSound));
@@ -474,12 +519,29 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     }
                     textView.setText(getStringEntry(R.string.Sound));
                     divider.setVisibility(View.INVISIBLE);
-                } else if (i == 17) {
+                }
+                else if(i == 5 || i == 11) {
+                    if(i == 5) {
+                        int value = preferences.getInt("GlobalLight", 0xff00ff00);
+                        String colorText = intToColor(value);
+
+                        textViewDetail.setText(colorText);
+                    }
+                    else {
+                        int value = preferences.getInt("GroupLight", 0xff0000ff);
+                        String colorText = intToColor(value);
+
+                        textViewDetail.setText(colorText);
+                    }
+                    textView.setText(getStringEntry(R.string.Light));
+                    divider.setVisibility(View.INVISIBLE);
+                }
+                else if (i == 19) {
                     textView.setText(getStringEntry(R.string.ResetAllNotifications));
                     textViewDetail.setText(getStringEntry(R.string.UndoAllCustom));
                     divider.setVisibility(View.INVISIBLE);
                 }
-                if (i != 17 && !enabledAll) {
+                if (i != 19 && !enabledAll) {
                     view.setEnabled(false);
                     if(android.os.Build.VERSION.SDK_INT >= 11) {
                         textView.setAlpha(0.3f);
@@ -501,9 +563,9 @@ public View getView(int i, View view, ViewGroup viewGroup) {
 
         @Override
         public int getItemViewType(int i) {
-            if (i == 0 || i == 5 || i == 10 || i == 14 || i == 16) {
+            if (i == 0 || i == 6 || i == 12 || i == 16 || i == 18) {
                 return 0;
-            } else if (i > 0 && i < 4 || i > 5 && i < 9 || i > 10 && i < 14 || i == 15) {
+            } else if (i > 0 && i < 4 || i > 6 && i < 10 || i > 12 && i < 16 || i == 17) {
                 return 1;
             } else {
                 return 2;
@@ -520,4 +582,26 @@ public boolean isEmpty() {
             return false;
         }
     }
+
+    private String intToColor(int value) {
+        String colorText = "unknown";
+
+        int pos=-1;
+
+        for(int i=0;i<this.colors.length; i++)
+        {
+            if(value == this.colors[i]) {
+                pos = i;
+                break;
+            }
+        }
+
+        if(pos>= 0) {
+            String[] allColors = getResources().getStringArray(R.array.choose_color);
+
+            colorText = allColors[pos];
+        }
+
+        return colorText;
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java
index f81cc5ab1..8ff551e69 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/UserProfileActivity.java
@@ -65,6 +65,21 @@
     private long dialog_id;
     private TLRPC.EncryptedChat currentEncryptedChat;
 
+
+    private final int[] colors = {
+            0x00000000,
+            0xFFFFFFFF,
+            0xFFFF0000,
+            0xFFFF7F00,
+            0xFFFFFF00,
+            0xFF00FF00,
+            0xFF00FFFF,
+            0xFF007FFF,
+            0xFF0000FF,
+            0xFF7F00FF,
+            0xFFFF00FF
+    };
+
     @Override
     public boolean onFragmentCreate() {
         super.onFragmentCreate();
@@ -167,9 +182,40 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                         } catch (Exception e) {
                             FileLog.e("tmessages", e);
                         }
-                    } else if (i == 7 && dialog_id == 0 ||
-                            dialog_id != 0 && (i == 9 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat ||
-                                    i == 7 && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) {
+                    } else if (i == 6 && dialog_id == 0 ||
+                            dialog_id != 0 && (i == 8 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat ||
+                                    i == 6 && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) {
+                        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
+                        builder.setTitle(getStringEntry(R.string.ChooseColor));
+
+                        final String userLightSetting = "light_" + user_id;
+
+                        builder.setItems(R.array.choose_color, new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialogInterface, int i) {
+                                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+
+                                int globalLight = preferences.getInt("GlobalLight", 0xAA000000);
+
+                                SharedPreferences.Editor editor = preferences.edit();
+
+                                int color = colors[i];
+
+                                if(color == globalLight) {
+                                    editor.remove(userLightSetting);
+                                } else {
+                                    editor.putInt(userLightSetting, color);
+                                }
+                                editor.commit();
+                                listView.invalidateViews();
+                            }
+                        });
+
+                        AlertDialog alertDialog = builder.create();
+                        alertDialog.show();
+                    } else if (i == 8 && dialog_id == 0 ||
+                            dialog_id != 0 && (i == 10 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat ||
+                                    i == 8 && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) {
                         MediaActivity fragment = new MediaActivity();
                         Bundle bundle = new Bundle();
                         if (dialog_id != 0) {
@@ -555,12 +601,12 @@ public boolean areAllItemsEnabled() {
         @Override
         public boolean isEnabled(int i) {
             if (dialog_id == 0) {
-                return i == 2 || i == 4 || i == 5 || i == 7;
+                return i == 2 || i == 4 || i == 5 || i == 6 || i == 8;
             } else {
                 if (currentEncryptedChat instanceof TLRPC.TL_encryptedChat) {
-                    return i == 2 || i == 4 || i == 5 || i == 6 || i == 7 || i == 9;
+                    return i == 2 || i == 4 || i == 5 || i == 6 || i == 7 || i == 8 || i == 10;
                 } else {
-                    return i == 2 || i == 4 || i == 5 || i == 9;
+                    return i == 2 || i == 4 || i == 5 || i == 6 || i == 10;
                 }
             }
         }
@@ -568,12 +614,12 @@ public boolean isEnabled(int i) {
         @Override
         public int getCount() {
             if (dialog_id == 0) {
-                return 8;
+                return 9;
             } else {
                 if (currentEncryptedChat instanceof TLRPC.TL_encryptedChat) {
-                    return 10;
+                    return 11;
                 } else {
-                    return 8;
+                    return 9;
                 }
             }
         }
@@ -663,9 +709,9 @@ public void onClick(View view) {
                     textView.setText(getStringEntry(R.string.PHONE));
                 } else if (i == 3) {
                     textView.setText(getStringEntry(R.string.SETTINGS));
-                } else if (i == 6 && dialog_id == 0 ||
-                        dialog_id != 0 && (i == 8 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat ||
-                                i == 6 && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) {
+                } else if (i == 7 && dialog_id == 0 ||
+                        dialog_id != 0 && (i == 9 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat ||
+                                i == 7 && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) {
                     textView.setText(getStringEntry(R.string.SHAREDMEDIA));
                 }
             } else if (type == 2) {
@@ -794,9 +840,24 @@ public void onClick(View view) {
                     }
                     textView.setText(R.string.Sound);
                     divider.setVisibility(View.INVISIBLE);
-                } else if (i == 7 && dialog_id == 0 ||
-                        dialog_id != 0 && (i == 9 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat ||
-                                i == 7 && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) {
+                }
+                else if (i == 6 && dialog_id == 0 ||
+                        dialog_id != 0 && (i == 8 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat ||
+                                i == 6 && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) {
+                    SharedPreferences preferences = mContext.getSharedPreferences("Notifications", Activity.MODE_PRIVATE);
+                    int color = preferences.getInt("light_" + user_id, 0xAA000000);
+
+                    if (color == 0xAA000000) {
+                        detailTextView.setText(getStringEntry(R.string.Default));
+                    } else {
+                        detailTextView.setText(intToColor(color));
+                    }
+                    textView.setText(R.string.Light);
+                    divider.setVisibility(View.INVISIBLE);
+                }
+                else if (i == 8 && dialog_id == 0 ||
+                        dialog_id != 0 && (i == 10 && currentEncryptedChat instanceof TLRPC.TL_encryptedChat ||
+                                i == 8 && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat))) {
                     textView.setText(R.string.SharedMedia);
                     if (totalMediaCount == -1) {
                         detailTextView.setText(getStringEntry(R.string.Loading));
@@ -849,13 +910,13 @@ public int getItemViewType(int i) {
                 if (currentEncryptedChat instanceof TLRPC.TL_encryptedChat) {
                     if (i == 0) {
                         return 0;
-                    } else if (i == 1 || i == 3 || i == 8) {
+                    } else if (i == 1 || i == 3 || i == 9) {
                         return 1;
                     } else if (i == 2) {
                         return 2;
                     } else if (i == 6) {
                         return 3;
-                    } else if (i == 7 || i == 9 || i == 4) {
+                    } else if (i == 7 || i == 8 || i == 10 || i == 4) {
                         return 4;
                     } else if (i == 5) {
                         return 5;
@@ -863,26 +924,26 @@ public int getItemViewType(int i) {
                 } else {
                     if (i == 0) {
                         return 0;
-                    } else if (i == 1 || i == 3 || i == 6) {
+                    } else if (i == 1 || i == 3 || i == 7) {
                         return 1;
                     } else if (i == 2) {
                         return 2;
                     } else if (i == 4) {
                         return 3;
-                    } else if (i == 5 || i == 7) {
+                    } else if (i == 5 || i == 6 || i == 8) {
                         return 4;
                     }
                 }
             } else {
                 if (i == 0) {
                     return 0;
-                } else if (i == 1 || i == 3 || i == 6) {
+                } else if (i == 1 || i == 3 || i == 7) {
                     return 1;
                 } else if (i == 2) {
                     return 2;
                 } else if (i == 4) {
                     return 3;
-                } else if (i == 5 || i == 7) {
+                } else if (i == 5 || i == 6 || i == 8) {
                     return 4;
                 }
             }
@@ -898,5 +959,27 @@ public int getViewTypeCount() {
         public boolean isEmpty() {
             return false;
         }
+
+        private String intToColor(int value) {
+            String colorText = "unknown";
+
+            int pos=-1;
+
+            for(int i=0;i<colors.length; i++)
+            {
+                if(value == colors[i]) {
+                    pos = i;
+                    break;
+                }
+            }
+
+            if(pos>= 0) {
+                String[] allColors = getResources().getStringArray(R.array.choose_color);
+
+                colorText = allColors[pos];
+            }
+
+            return colorText;
+        }
     }
 }
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 3b850b794..5a2481f8b 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -247,6 +247,23 @@
     <string name="Events">EVENTS</string>
     <string name="ContactJoined">Contact joined Telegram</string>
 
+    <string name="Light">Light</string>
+    <string name="ChooseColor">Choose color</string>
+
+    <string-array name="choose_color">
+        <item>none</item>
+        <item>white</item>
+        <item>red</item>
+        <item>orange</item>
+        <item>yellow</item>
+        <item>green</item>
+        <item>cyan</item>
+        <item>azure</item>
+        <item>blue</item>
+        <item>violet</item>
+        <item>magenta</item>
+    </string-array>
+
     <!--media view-->
     <string name="NoMedia">No shared media yet</string>
     <string name="CancelDownload">Cancel Download</string>
