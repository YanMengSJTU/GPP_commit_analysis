diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DefaultTextWatcher.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DefaultTextWatcher.java
index 0fe3e42ab..fa8309636 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DefaultTextWatcher.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DefaultTextWatcher.java
@@ -1,7 +1,21 @@
 package org.pollgram.decision.ui;
 
+import android.text.Editable;
+import android.text.TextWatcher;
+
 /**
  * Created by davide on 24/01/16.
  */
-public class DefaultTextWatcher {
+public class DefaultTextWatcher implements TextWatcher{
+    @Override
+    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+    }
+
+    @Override
+    public void onTextChanged(CharSequence s, int start, int before, int count) {
+    }
+
+    @Override
+    public void afterTextChanged(Editable s) {
+    }
 }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/EditOptionsFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/EditOptionsFragment.java
index 70e412304..9f1f1dccd 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/EditOptionsFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/EditOptionsFragment.java
@@ -36,6 +36,7 @@
 public class EditOptionsFragment extends BaseFragment {
 
     public static final String PAR_DECISION_ID = "PAR_DECISION_ID";
+    public static final String PAR_NEW_OPTION_LONG_DESC = "PAR_NEW_OPTION_LONG_DESC";
 
     private static final int SAVE_MENU_ITEM_ID = 1;
 
@@ -58,9 +59,14 @@ public boolean onFragmentCreate() {
         pollgramDAO = PollgramFactory.getDAO();
         pollgramService = PollgramFactory.getService();
         long decisionId  = getArguments().getLong(PAR_DECISION_ID);
+        String newOptionLongDesc = getArguments().getString(PAR_NEW_OPTION_LONG_DESC);
+
+        options = new ArrayList<TextOption>();
+        if (newOptionLongDesc != null)
+            options.add(new TextOption(null, newOptionLongDesc, decisionId));
+
         decision = pollgramDAO.getDecision(decisionId);
         List<Option> resultOptions = pollgramDAO.getOptions(decision);
-        options = new ArrayList<TextOption>();
         for (Option o : resultOptions)
             options.add((TextOption)o);
 
@@ -154,7 +160,7 @@ private void saveDecision(List<Option> newOptions, List<Option> deleteOptions) {
             pollgramService.notifyDeleteOptions(decision, deleteOptions);
 
         Toast.makeText(getParentActivity(), R.string.decisionSaved, Toast.LENGTH_LONG).show();
-        super.finishFragment();
+        EditOptionsFragment.this.finishFragment();
         return;
     }
 
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/SelectDecisionFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/SelectDecisionFragment.java
index fb4cc4019..d01741bdf 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/SelectDecisionFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/SelectDecisionFragment.java
@@ -81,7 +81,10 @@ public void onItemClick(int id) {
             public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                 Decision decision = (Decision) parent.getAdapter().getItem(position);
                 Bundle bundle = new Bundle();
-                //TODO put this newOptionLongDescription
+                bundle.putLong(EditOptionsFragment.PAR_DECISION_ID, decision.getId());
+                bundle.putString(EditOptionsFragment.PAR_NEW_OPTION_LONG_DESC, newOptionLongDescription);
+                presentFragment(new EditOptionsFragment(bundle));
+                removeSelfFromStack();
             }
         });
 
