diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/OptionsAdapter.java b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/OptionsAdapter.java
index d72e204a8..6ba7272c4 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/OptionsAdapter.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/OptionsAdapter.java
@@ -20,6 +20,7 @@
 
 import java.util.ArrayList;
 import java.util.HashSet;
+import java.util.LinkedList;
 import java.util.List;
 import java.util.Set;
 
@@ -29,25 +30,21 @@
 public class OptionsAdapter extends ArrayAdapter<Option> {
     private static final int LAYOUT_RES_ID = R.layout.item_new_option_list;
 
-    private final List<TextOption> options;
+    private final LinkedList<TextOption> options;
     private final LayoutInflater inflater;
-    private int lastIdx;
     private final boolean editable;
     private List<TextOption> deletedOptions;
 
 
     public OptionsAdapter(Context context) {
-        this(context,new ArrayList<TextOption>(),true);
-        // put one first empty option
-        options.add(new TextOption());
+        this(context, new LinkedList<TextOption>(), true);
     }
 
     public OptionsAdapter(Context context, List<TextOption> options, boolean editable){
         super(context, LAYOUT_RES_ID);
-        this.options = options;
+        this.options = new LinkedList<>(options);
         this.deletedOptions  = new ArrayList<>();
-        this.lastIdx = options.size() -1;
-        this.editable =editable;
+        this.editable = editable;
         inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
     }
 
@@ -56,10 +53,8 @@ public OptionsAdapter(Context context, List<TextOption> options, boolean editabl
      * @return the list of the selected options
      * @throws PollgramException if some value is invalid
      */
-    public List<Option> getOptions() throws PollgramException{
+    public List<Option> getNewOptions() throws PollgramException{
         Set<String> titleSet = new HashSet<>();
-        List<Option> out = new ArrayList<Option>();
-
         // check for duplicated titles
         for(Option o : options){
             if (titleSet.contains(o.getTitle())){
@@ -68,17 +63,18 @@ public OptionsAdapter(Context context, List<TextOption> options, boolean editabl
             titleSet.add(o.getTitle());
         }
 
-        for (int i = lastIdx + 1 ; i<options.size() ; i++)
-            out.add(options.get(i));
-
-        for (int i = 0; i < out.size(); i++) {
-            String title = out.get(i).getTitle();
+        List<Option> out = new ArrayList<Option>();
+        for (int i = 0; i < options.size(); i++) {
+            TextOption opt = options.get(i);
+            String title = opt.getTitle();
             if (title == null || title.trim().isEmpty()) {
-                if (i == out.size() -1)
+                if (i == 0)
                     throw new PollgramException(getContext().getString(R.string.emptyTitleOnLastOption));
                 else
                     throw new PollgramException(getContext().getString(R.string.emptyTitleOnOption, i + 1));
             }
+            if (opt.getId() == DBBean.ID_NOT_SET)
+                out.add(opt);
         }
         return out;
     }
@@ -96,18 +92,19 @@ public int getCount() {
     }
 
     @Override
-    public View getView(final int position, View convertView, ViewGroup parent) {
+    public View getView(int position, View convertView, ViewGroup parent) {
         View rowView;
-        if (position == getCount() - 1) {
+        if (position == 0) {
             rowView = inflater.inflate(R.layout.item_add_new_option_list, parent, false);
             Button buttonAdd = (Button) rowView.findViewById(R.id.new_option_add_button);
             buttonAdd.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
-                    if (options.get(position-1).getTitle() == null){
+                    TextOption first = options.size() == 0 ? null : options.getFirst();
+                    if (first != null && first.getTitle() == null){
                         Toast.makeText(getContext(), R.string.pleaseSelectATitleForOption, Toast.LENGTH_LONG).show();
                     } else {
-                        options.add(new TextOption());
+                        options.addFirst(new TextOption());
                         notifyDataSetChanged();
                     }
                 }
@@ -121,11 +118,13 @@ public void onClick(View v) {
             ImageButton deleteItem = (ImageButton) rowView.findViewById(R.id.new_option_delete_button);
 
             // Set data
-            final TextOption o = options.get(position);
+            final int optionPos = position - 1;
+            final TextOption o = options.get(optionPos);
+            final boolean alreadyOnDB = o.getId() != DBBean.ID_NOT_SET;
             edTitle.setText(o.getTitle());
             edLongDescription.setText(o.getLongDescription());
             // make grey the lines that are already present and therefore not editable
-            if(o.getId() != DBBean.ID_NOT_SET) {
+            if(alreadyOnDB) {
 //                rowView.setBackgroundColor(Color.LTGRAY);
                 // prevent EditText hint to be showed for existing decision with not long description
                 if (o.getLongDescription() == null || o.getLongDescription().isEmpty()) {
@@ -138,11 +137,11 @@ public void onClick(View v) {
             deleteItem.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
-                    if (position <= lastIdx) {
-                        lastIdx--;
-                        deletedOptions.add(options.get(position));
+                    TextOption optionToDelete = options.get(optionPos);
+                    if (alreadyOnDB) {
+                        deletedOptions.add(optionToDelete);
                     }
-                    options.remove(position);
+                    options.remove(optionPos);
                     notifyDataSetChanged();
                 }
             });
@@ -175,11 +174,10 @@ public void afterTextChanged(Editable s) {
                 }
             });
 
-            boolean enableFields = position > lastIdx && editable;
+            boolean enableFields = !alreadyOnDB && editable;
             edTitle.setEnabled(enableFields);
             edLongDescription.setEnabled(enableFields);
             deleteItem.setVisibility(editable ? View.VISIBLE : View.INVISIBLE);
-
         }
 
         return rowView;
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
index 43cb8bb85..97a7ff3be 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
@@ -113,7 +113,11 @@ public View getView(final int position, View convertView, ViewGroup parent) {
         final Vote vote = getItem(position);
         final Option c = PollgramFactory.getDAO().getOption(vote.getOptionId());
         if (c instanceof TimeRangeOption){
-            Log.e("ChoiceAdapter", "TimeRangeOption not supported yet");
+            Log.e(LOG_TAG, "TimeRangeOption not supported yet");
+            return null;
+        }
+        if (c == null) {
+            Log.e(LOG_TAG, "Decision not found for id ["+vote.getOptionId()+"]");
             return null;
         }
         final TextOption o = (TextOption)c;
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/EditOptionsFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/EditOptionsFragment.java
index bb3e34cbb..70e412304 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/EditOptionsFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/EditOptionsFragment.java
@@ -93,20 +93,20 @@ public void onItemClick(int id) {
                         final List<Option> newOptions;
                         final List<Option> deletedOptions;
                         try {
-                            newOptions = optionsAdapter.getOptions();
+                            newOptions = optionsAdapter.getNewOptions();
                         } catch (PollgramException e) {
                             Log.w(LOG_TAG, "Error in getOption", e);
                             Toast.makeText(getParentActivity(), e.getMessage(), Toast.LENGTH_LONG).show();
                             return;
                         }
                         deletedOptions = optionsAdapter.getDeletedOptions();
-                        Log.i(LOG_TAG, "option added["+newOptions+"] option deleted["+deletedOptions+"]");
 
+                        Log.i(LOG_TAG, "option added["+newOptions+"] option deleted["+deletedOptions+"]");
                         String message;
 
                         if (deletedOptions.size() == 0) {
                             if (newOptions.size() == 0){
-                                Toast.makeText(context,R.string.nothingToSave,Toast.LENGTH_SHORT);
+                                Toast.makeText(context,R.string.nothingToSave,Toast.LENGTH_SHORT).show();
                                 return;
                             }
                             message = context.getString(R.string.addOptionToDecisionQuestion,
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
index dbde88e98..f9f906592 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
@@ -132,7 +132,7 @@ public void onItemClick(int id) {
     private void showPage2() {
         currentPage = PAGE_2;
         reset();
-        actionBar.setTitle(getParentActivity().getString(R.string.selectOptions));
+        actionBar.setTitle(getParentActivity().getString(R.string.addOptionsTitle));
         actionBar.setBackButtonImage(R.drawable.ic_arrow_back_white_24dp);
         nextItemMenu.setBackgroundResource(R.drawable.ic_done_white_36dp);
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick(){
@@ -145,7 +145,7 @@ public void onItemClick(int id) {
                     case NEXT_MENU_ITEM_ID:
                         final List<Option> options;
                         try {
-                            options = newOptionAdapter.getOptions();
+                            options = newOptionAdapter.getNewOptions();
                         } catch (PollgramException e) {
                             Log.w(LOG_TAG, "Error in getOption",e);
                             Toast.makeText(getParentActivity(), e.getMessage(), Toast.LENGTH_LONG).show();
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
index 3869e5af5..73c3c35ff 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerTabsFragment.java
@@ -74,6 +74,7 @@
     private VoteListAdapter voteListAdapter;
     private int[] participantsUserIds;
     private LayoutInflater inflater;
+    private PagerAdapter pagerAdapter;
 
 
     public VotesManagerTabsFragment(BaseFragment parentFragment) {
@@ -107,7 +108,8 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container,
     @Override
     public void onViewCreated(View view, Bundle savedInstanceState) {
         viewPager = (ViewPager) view.findViewById(R.id.viewpager);
-        viewPager.setAdapter(new DecisionPagerAdapter());
+        pagerAdapter = new DecisionPagerAdapter();
+        viewPager.setAdapter(pagerAdapter);
 
         slidingTabLayout = (SlidingTabLayout) view.findViewById(R.id.sliding_tabs);
         slidingTabLayout.setViewPager(viewPager);
@@ -170,25 +172,26 @@ public CharSequence getPageTitle(int position) {
         @Override
         public Object instantiateItem(ViewGroup container, int position) {
             View rootView = null;
-            if (areThereNoOptions()) {
-                rootView = inflater.inflate(R.layout.votes_manager_no_option_present, container, false);
-            } else {
-                switch (position) {
-                    case OPTION_ID: {
-                        rootView = getOptionsListView(container, inflater);
-                        break;
-                    }
-                    case TABLE_VIEW_ID: {
-                        optionTableViewContainer = new LinearLayout(getContext());
-                        updateOptionsTableView(optionTableViewContainer, inflater);
-                        rootView = optionTableViewContainer;
-                        break;
-                    }
-                    default:
-                        rootView = null;
-                        break;
+
+            switch (position) {
+                case OPTION_ID: {
+                    rootView = getOptionsListView(container, inflater);
+                    break;
+                }
+                case TABLE_VIEW_ID: {
+                    optionTableViewContainer = new LinearLayout(getContext());
+                    updateOptionsTableView(optionTableViewContainer, inflater);
+                    rootView = optionTableViewContainer;
+                    break;
                 }
+                default:
+                    rootView = null;
+                    break;
             }
+
+            if (areThereNoOptions())
+                rootView = inflater.inflate(R.layout.votes_manager_no_option_present, container, false);
+
             container.addView(rootView);
             return rootView;
         }
@@ -258,12 +261,16 @@ public void voteChanges(boolean areThereChangesToSave) {
     protected void updateView() {
         if (usersDecisionVotes == null)
             return;
+
+        boolean wereNoOptions = areThereNoOptions();
         usersDecisionVotes = PollgramFactory.getService().
                 getUsersDecisionVotes(usersDecisionVotes.getDecision().getId(),
                         usersDecisionVotes.getUsers());
 
-        if (!areThereNoOptions()) {
-
+        if (wereNoOptions != areThereNoOptions()){
+            // force tabbed pane to rebuild itself
+            viewPager.setAdapter(pagerAdapter);
+        } else {
             // set new sorted  votes in the voteListAdapter
             voteListAdapter.setData(usersDecisionVotes, currentUserId);
             voteListAdapter.setEditable(usersDecisionVotes.getDecision().isOpen());
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 0502d918d..349bad54d 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -1144,11 +1144,11 @@
     <string name="insertOptionTitleHint">Inserire il titolo del opzione qui</string>
     <string name="insertLongDescriptionHint">Inserire qui le note (opzionale)</string>
     <string name="newDecision">Nuova decisione</string>
-    <string name="selectOptions">Selezionare le opzioni</string>
+    <string name="addOptionsTitle">Aggiungi opzioni</string>
     <string name="pleaseSelectATitle">Scegliere un titolo</string>
     <string name="newOption">Aggiungi nuova opzione</string>
     <string name="decisionSaved">La decisione è stata salvata</string>
-    <string name="pleaseSelectATitleForOption">È necessario selezionafdre un titolo per l\'ultima opzione, prima aggiungerne una nuova.</string>
+    <string name="pleaseSelectATitleForOption">Selezionare un titolo per l\'ultima opzione, prima aggiungerne una nuova.</string>
     <string name="decisionAlreadyExist">Attenzione! Esiste già una decisione con questo titolo per questo!</string>
     <string name="emptyTitleOnOption">Prego selezionare un titolo per l\'opzione %1$d.</string>
     <string name="emptyTitleOnLastOption">Prego selezionare un titolo per l\'ultima opzione.</string>
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index 1215a971c..d5a13ed87 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -1139,14 +1139,14 @@
     <string name="deleteDecisionQuestion">Are you sure you want to delete this decision ?
         This will remove this decision for ALL users involved, not just yourself.\nAre you sure ?</string>
     <string name="insertTitleHint">Insert title here</string>
-    <string name="insertOptionTitleHint">Insert option\'s title here</string>
+    <string name="insertOptionTitleHint">Insert option title here</string>
     <string name="insertLongDescriptionHint">Insert notes here (optional)</string>
     <string name="newDecision">New decision</string>
-    <string name="selectOptions">Select options</string>
+    <string name="addOptionsTitle">Add options</string>
     <string name="pleaseSelectATitle">Please select a title</string>
     <string name="newOption">Add new Option</string>
     <string name="decisionSaved">Decision has been saved</string>
-    <string name="pleaseSelectATitleForOption">Pleace select a value for the title of the last option, before adding a new one</string>
+    <string name="pleaseSelectATitleForOption">Pleace select a value for the title of the last option added, before adding a new one</string>
     <string name="decisionAlreadyExist">Already exist a decision with this title on the current group !</string>
     <string name="emptyTitleOnOption">Please select a title for the %1$d option.</string>
     <string name="emptyTitleOnLastOption">Please select a title for the last option.</string>
