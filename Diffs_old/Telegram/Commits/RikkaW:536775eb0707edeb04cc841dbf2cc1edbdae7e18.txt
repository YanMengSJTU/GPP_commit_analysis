diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/browser/Browser.java b/TMessagesProj/src/main/java/org/telegram/messenger/browser/Browser.java
index 0248a9ae8..261eb5fe1 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/browser/Browser.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/browser/Browser.java
@@ -13,6 +13,7 @@
 import android.content.ComponentName;
 import android.content.Context;
 import android.content.Intent;
+import android.content.SharedPreferences;
 import android.graphics.BitmapFactory;
 import android.net.Uri;
 import android.os.Build;
@@ -34,6 +35,7 @@
 import org.telegram.messenger.support.customtabsclient.shared.ServiceConnection;
 import org.telegram.messenger.support.customtabsclient.shared.ServiceConnectionCallback;
 import org.telegram.ui.ActionBar.Theme;
+import org.telegram.ui.ForceExternalLinksActivity;
 import org.telegram.ui.LaunchActivity;
 
 import java.lang.ref.WeakReference;
@@ -161,7 +163,21 @@ public static void openUrl(Context context, Uri uri, boolean allowCustom) {
         try {
             String scheme = uri.getScheme() != null ? uri.getScheme().toLowerCase() : "";
             boolean internalUri = isInternalUri(uri);
-            if (Build.VERSION.SDK_INT >= 15 && allowCustom && MediaController.getInstance().canCustomTabs() && !internalUri && !scheme.equals("tel")) {
+            boolean forceExternalUrl = false;
+
+            if (!internalUri) {
+                forceExternalUrl = false;
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+                String[] urls = preferences.getString("force_external_urls", ForceExternalLinksActivity.getDefaultUrlsString()).split(",");
+                for (String url : urls) {
+                    if (uri.getHost() != null && uri.getHost().endsWith(url)) {
+                        forceExternalUrl = true;
+                        break;
+                    }
+                }
+            }
+
+            if (Build.VERSION.SDK_INT >= 15 && allowCustom && MediaController.getInstance().canCustomTabs() && !internalUri && !scheme.equals("tel") && !forceExternalUrl) {
                 Intent share = new Intent(ApplicationLoader.applicationContext, ShareBroadcastReceiver.class);
                 share.setAction(Intent.ACTION_SEND);
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ForceExternalLinksActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ForceExternalLinksActivity.java
new file mode 100644
index 000000000..f90fd87e2
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ForceExternalLinksActivity.java
@@ -0,0 +1,265 @@
+package org.telegram.ui;
+
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.SharedPreferences;
+import android.graphics.Canvas;
+import android.graphics.Rect;
+import android.graphics.drawable.Drawable;
+import android.support.v4.content.ContextCompat;
+import android.text.TextUtils;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.inputmethod.InputMethodManager;
+import android.widget.EditText;
+import android.widget.FrameLayout;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import org.telegram.messenger.AndroidUtilities;
+import org.telegram.messenger.ApplicationLoader;
+import org.telegram.messenger.LocaleController;
+import org.telegram.messenger.R;
+import org.telegram.messenger.support.widget.LinearLayoutManager;
+import org.telegram.messenger.support.widget.RecyclerView;
+import org.telegram.ui.ActionBar.ActionBar;
+import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.ui.Components.LayoutHelper;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+/**
+ * Created by Rikka on 2016/10/26.
+ */
+
+public class ForceExternalLinksActivity extends BaseFragment {
+
+    private Adapter adapter;
+
+    private SharedPreferences preferences;
+    private List<String> urls;
+
+    @Override
+    public View createView(Context context) {
+        actionBar.setBackButtonImage(R.drawable.ic_ab_back);
+        actionBar.setAllowOverlayTitle(true);
+        actionBar.setTitle(LocaleController.getString("ExternalLinks", R.string.ExternalLinks));
+        actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
+            @Override
+            public void onItemClick(int id) {
+                if (id == -1) {
+                    finishFragment();
+                }
+            }
+        });
+
+        fragmentView = new FrameLayout(context);
+        fragmentView.setOnTouchListener(new View.OnTouchListener() {
+            @Override
+            public boolean onTouch(View v, MotionEvent event) {
+                return true;
+            }
+        });
+        fragmentView.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
+        fragmentView.setBackgroundColor(ContextCompat.getColor(context, R.color.card_background));
+
+        preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
+        urls = new ArrayList<>();
+        urls.addAll(Arrays.asList(preferences.getString("force_external_urls", getDefaultUrlsString()).split(",")));
+
+        adapter = new Adapter();
+
+        RecyclerView recyclerView = new RecyclerView(context);
+        recyclerView.setAdapter(adapter);
+        recyclerView.setLayoutManager(new LinearLayoutManager(context));
+        int padding = (int) (context.getResources().getDimension(R.dimen.list_padding) + AndroidUtilities.dp(24 + 16));
+        recyclerView.addItemDecoration(new DividerDecoration(context, LocaleController.isRTL ? 0 : padding, LocaleController.isRTL ? padding : 0));
+        ((FrameLayout) fragmentView).addView(recyclerView, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.MATCH_PARENT));
+
+        return fragmentView;
+    }
+
+    private void showAddDialog() {
+        FrameLayout frameLayout = new FrameLayout(getParentActivity());
+        frameLayout.setPadding(AndroidUtilities.dp(24), AndroidUtilities.dp(16), AndroidUtilities.dp(24), 0);
+
+        final EditText editText = new EditText(getParentActivity());
+        editText.setMaxLines(1);
+        frameLayout.addView(editText, LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT, LayoutHelper.WRAP_CONTENT, Gravity.CENTER_VERTICAL));
+
+        editText.post(new Runnable() {
+            @Override
+            public void run() {
+                InputMethodManager imm = (InputMethodManager) getParentActivity().getSystemService(Context.INPUT_METHOD_SERVICE);
+                imm.showSoftInput(editText, InputMethodManager.SHOW_IMPLICIT);
+            }
+        });
+
+        showDialog(new AlertDialog.Builder(getParentActivity())
+                .setTitle(LocaleController.getString("ExternalLinksAddDomain", R.string.ExternalLinksAddDomain))
+                .setPositiveButton(LocaleController.getString("OK", R.string.OK), new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialogInterface, int i) {
+                        if (!TextUtils.isEmpty(editText.getText().toString())) {
+                            urls.add(editText.getText().toString().replace(",", "").toLowerCase());
+                            adapter.notifyItemInserted(adapter.getItemCount() - 1);
+                        }
+                    }
+                })
+                .setNegativeButton(LocaleController.getString("Cancel", R.string.Cancel), null)
+                .setView(frameLayout)
+                .create());
+    }
+
+    public static String getDefaultUrlsString() {
+        return "youtube.com" + "," +
+                "youtu.be" + "," +
+                "play.google.com" + "," +
+                "bilibili.com";
+    }
+
+    public void save() {
+        StringBuilder sb = new StringBuilder();
+        for (String url : urls) {
+            sb.append(url).append(",");
+        }
+        sb.deleteCharAt(sb.length() - 1);
+
+        preferences.edit().putString("force_external_urls", sb.toString()).apply();
+    }
+
+    private class Adapter extends RecyclerView.Adapter {
+
+        @Override
+        public int getItemViewType(int position) {
+            return position == getItemCount() - 1 ? 1 : 0;
+        }
+
+        @Override
+        public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+            switch (viewType) {
+                case 0:
+                    return new ItemViewHolder(LayoutInflater.from(parent.getContext()).inflate(R.layout.list_force_external_item_layout, parent, false));
+                case 1:
+                    return new AddViewHolder(LayoutInflater.from(parent.getContext()).inflate(R.layout.list_force_external_add_layout, parent, false));
+            }
+            return null;
+        }
+
+        @Override
+        public void onBindViewHolder(final RecyclerView.ViewHolder holder, int position) {
+            if (getItemViewType(position) == 1) {
+                holder.itemView.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View view) {
+                        showAddDialog();
+                    }
+                });
+
+                ((AddViewHolder) holder).text.setText(LocaleController.getString("ExternalLinksAddDomain", R.string.ExternalLinksAddDomain));
+            } else {
+                ((ItemViewHolder) holder).text.setText(urls.get(position));
+                ((ItemViewHolder) holder).delete.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View view) {
+                        int position = holder.getAdapterPosition();
+                        urls.remove(position);
+                        notifyItemRemoved(position);
+
+                        save();
+                    }
+                });
+            }
+        }
+
+        @Override
+        public int getItemCount() {
+            return urls.size() + 1;
+        }
+    }
+
+    private static class ItemViewHolder extends RecyclerView.ViewHolder {
+
+        public TextView text;
+        public ImageView delete;
+
+        public ItemViewHolder(View itemView) {
+            super(itemView);
+
+            text = (TextView) itemView.findViewById(android.R.id.text1);
+            delete = (ImageView) itemView.findViewById(android.R.id.button1);
+        }
+    }
+
+    private static class AddViewHolder extends RecyclerView.ViewHolder {
+
+        public TextView text;
+
+        public AddViewHolder(View itemView) {
+            super(itemView);
+
+            text = (TextView) itemView.findViewById(android.R.id.text1);
+        }
+    }
+
+    private static class DividerDecoration extends RecyclerView.ItemDecoration {
+
+        private Drawable drawable;
+
+        private int left, right;
+
+        public DividerDecoration(Context context, int extra_left, int extra_right) {
+            drawable = context.getDrawable(R.drawable.divider);
+            left = extra_left;
+            right = extra_right;
+        }
+
+        public int getHeight() {
+            return drawable.getIntrinsicHeight();
+        }
+
+        public boolean canDraw(RecyclerView parent, int position) {
+            return position != parent.getAdapter().getItemCount() - 1;
+        }
+
+        @Override
+        public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {
+            int left = parent.getPaddingLeft() + this.left;
+            int right = parent.getWidth() - parent.getPaddingRight() - this.right;
+
+            int childCount = parent.getChildCount();
+            for (int i = 0; i < childCount; i++) {
+                if (!canDraw(parent, i)) {
+                    continue;
+                }
+
+                View child = parent.getChildAt(i);
+
+                RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child.getLayoutParams();
+
+                int top = child.getBottom() + params.bottomMargin;
+                int bottom = top + getHeight();
+
+                drawable.setBounds(left, top, right, bottom);
+                drawable.draw(c);
+            }
+        }
+
+        @Override
+        public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {
+            int position = parent.getChildAdapterPosition(view);
+            if (!canDraw(parent, position)) {
+                return;
+            }
+
+            outRect.top = getHeight();
+        }
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
index 47b5dd24e..caf67387b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsActivity.java
@@ -151,6 +151,7 @@
     private int googleEmojiRow;
     private int fakeBoldRow;
     private int nightModeRow;
+    private int forceExternalRow;
 
     private int raiseToSpeakRow;
     private int sendByEnterRow;
@@ -268,6 +269,7 @@ public void run() {
         messagesSectionRow = rowCount++;
         messagesSectionRow2 = rowCount++;
         customTabsRow = rowCount++;
+        forceExternalRow = rowCount++;
         if (Build.VERSION.SDK_INT >= 23) {
             directShareRow = rowCount++;
         }
@@ -740,6 +742,8 @@ public void onClick(View v) {
                     }
                 } else if (position == nightModeRow) {
                     presentFragment(new NightModeActivity());
+                } else if (position == forceExternalRow) {
+                    presentFragment(new ForceExternalLinksActivity());
                 }
             }
         });
@@ -1362,6 +1366,8 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("mainconfig", Activity.MODE_PRIVATE);
                         int nightMode = preferences.getInt("nightMode", DayNightActivity.MODE_NIGHT_FOLLOW_SYSTEM);
                         textCell.setTextAndValue(LocaleController.getString("NightMode", R.string.NightMode), NightModeActivity.getNightModeStatus(nightMode), true);
+                    } else if (position == forceExternalRow) {
+                        textCell.setText(LocaleController.getString("ExternalLinks", R.string.ExternalLinks), true);
                     }
                     break;
                 }
@@ -1489,7 +1495,7 @@ public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
                         position == mobileDownloadRow || position == clearLogsRow || position == roamingDownloadRow || position == languageRow || position == usernameRow ||
                         position == switchBackendButtonRow || position == telegramFaqRow || position == contactsSortRow || position == contactsReimportRow || position == saveToGalleryRow ||
                         position == stickersRow || position == cacheRow || position == raiseToSpeakRow || position == privacyPolicyRow || position == customTabsRow || position == directShareRow || position == versionRow ||
-                        position == emojiRow || position == googleEmojiRow || position == fakeBoldRow || position == nightModeRow) {
+                        position == emojiRow || position == googleEmojiRow || position == fakeBoldRow || position == nightModeRow || position == forceExternalRow) {
                     if (holder.itemView instanceof ForegroundFrameLayout) {
                         ForegroundFrameLayout view = (ForegroundFrameLayout) holder.itemView;
                         if (view.getForeground() == null) {
@@ -1568,7 +1574,7 @@ public int getItemViewType(int position) {
                 return 1;
             } else if (position == enableAnimationsRow || position == sendByEnterRow || position == saveToGalleryRow || position == autoplayGifsRow || position == raiseToSpeakRow || position == customTabsRow || position == directShareRow || position == googleEmojiRow || position == fakeBoldRow) {
                 return 3;
-            } else if (position == notificationRow || position == backgroundRow || position == askQuestionRow || position == sendLogsRow || position == privacyRow || position == clearLogsRow || position == switchBackendButtonRow || position == telegramFaqRow || position == contactsReimportRow || position == textSizeRow || position == languageRow || position == contactsSortRow || position == stickersRow || position == cacheRow || position == privacyPolicyRow || position == emojiRow || position == nightModeRow) {
+            } else if (position == notificationRow || position == backgroundRow || position == askQuestionRow || position == sendLogsRow || position == privacyRow || position == clearLogsRow || position == switchBackendButtonRow || position == telegramFaqRow || position == contactsReimportRow || position == textSizeRow || position == languageRow || position == contactsSortRow || position == stickersRow || position == cacheRow || position == privacyPolicyRow || position == emojiRow || position == nightModeRow || position == forceExternalRow) {
                 return 2;
             } else if (position == versionRow) {
                 return 5;
diff --git a/TMessagesProj/src/main/res/drawable/divider.xml b/TMessagesProj/src/main/res/drawable/divider.xml
new file mode 100644
index 000000000..1564822f3
--- /dev/null
+++ b/TMessagesProj/src/main/res/drawable/divider.xml
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+  Copyright (C) 2015 The Android Open Source Project
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+       http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License
+  -->
+
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+       android:tint="?android:attr/colorForeground">
+    <solid android:color="#15000000" />
+    <size
+        android:height="1dp"
+        android:width="1dp" />
+</shape>
diff --git a/TMessagesProj/src/main/res/drawable/ic_add_circle_24dp.xml b/TMessagesProj/src/main/res/drawable/ic_add_circle_24dp.xml
new file mode 100644
index 000000000..1e08da294
--- /dev/null
+++ b/TMessagesProj/src/main/res/drawable/ic_add_circle_24dp.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="@color/primary_text"
+        android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM17,13h-4v4h-2v-4L7,13v-2h4L11,7h2v4h4v2z"/>
+</vector>
diff --git a/TMessagesProj/src/main/res/drawable/ic_delete_24dp.xml b/TMessagesProj/src/main/res/drawable/ic_delete_24dp.xml
new file mode 100644
index 000000000..428fa1de4
--- /dev/null
+++ b/TMessagesProj/src/main/res/drawable/ic_delete_24dp.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="@color/disabled_text"
+        android:pathData="M6,19c0,1.1 0.9,2 2,2h8c1.1,0 2,-0.9 2,-2V7H6v12zM19,4h-3.5l-1,-1h-5l-1,1H5v2h14V4z"/>
+</vector>
diff --git a/TMessagesProj/src/main/res/drawable/ic_open_in_new_24dp.xml b/TMessagesProj/src/main/res/drawable/ic_open_in_new_24dp.xml
new file mode 100644
index 000000000..b604bb8f4
--- /dev/null
+++ b/TMessagesProj/src/main/res/drawable/ic_open_in_new_24dp.xml
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+        android:width="24dp"
+        android:height="24dp"
+        android:viewportWidth="24.0"
+        android:viewportHeight="24.0">
+    <path
+        android:fillColor="@color/primary_text"
+        android:pathData="M19,19H5V5h7V3H5c-1.11,0 -2,0.9 -2,2v14c0,1.1 0.89,2 2,2h14c1.1,0 2,-0.9 2,-2v-7h-2v7zM14,3v2h3.59l-9.83,9.83 1.41,1.41L19,6.41V10h2V3h-7z"/>
+</vector>
diff --git a/TMessagesProj/src/main/res/layout/list_force_external_add_layout.xml b/TMessagesProj/src/main/res/layout/list_force_external_add_layout.xml
new file mode 100644
index 000000000..dae4f8e71
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/list_force_external_add_layout.xml
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+             android:layout_width="match_parent"
+             android:layout_height="56dp"
+             android:paddingLeft="@dimen/list_padding"
+             android:paddingRight="@dimen/list_padding"
+             android:background="?android:attr/selectableItemBackground"
+             xmlns:tools="http://schemas.android.com/tools">
+
+    <TextView
+        android:id="@android:id/text1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_vertical"
+        android:gravity="center"
+        android:textSize="16sp"
+        android:textAppearance="@android:style/TextAppearance.Material"
+        android:drawableStart="@drawable/ic_add_circle_24dp"
+        android:drawablePadding="16dp"
+        tools:text="Add domain">
+
+    </TextView>
+
+</FrameLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/list_force_external_item_layout.xml b/TMessagesProj/src/main/res/layout/list_force_external_item_layout.xml
new file mode 100644
index 000000000..63059e4b1
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/list_force_external_item_layout.xml
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+             android:layout_width="match_parent"
+             android:layout_height="56dp"
+             android:paddingLeft="@dimen/list_padding"
+             android:paddingRight="@dimen/list_padding"
+             android:clickable="true"
+             android:focusable="true"
+             android:background="?android:attr/selectableItemBackground"
+             xmlns:tools="http://schemas.android.com/tools">
+
+    <TextView
+        android:id="@android:id/text1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_vertical"
+        android:gravity="center_vertical"
+        android:textSize="16sp"
+        android:textAppearance="@android:style/TextAppearance.Material"
+        android:drawableStart="@drawable/ic_open_in_new_24dp"
+        android:drawablePadding="16dp"
+        tools:text="youtu.be">
+
+    </TextView>
+
+    <ImageView
+        android:id="@android:id/button1"
+        android:layout_width="36dp"
+        android:layout_height="36dp"
+        android:padding="6dp"
+        android:background="?android:attr/selectableItemBackgroundBorderless"
+        android:layout_gravity="end|center_vertical"
+        android:src="@drawable/ic_delete_24dp"
+        android:contentDescription="@null"/>
+
+</FrameLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-ar/strings.xml b/TMessagesProj/src/main/res/values-ar/strings.xml
index b5d3360d2..9cd07f021 100644
--- a/TMessagesProj/src/main/res/values-ar/strings.xml
+++ b/TMessagesProj/src/main/res/values-ar/strings.xml
@@ -1312,4 +1312,8 @@
     <string name="NightModeFollowSystemInfo">Restart of the app may be required for \'Follow System\' to come into effect.</string>
     <string name="NightModeLocation">Location enhancement</string>
     <string name="NightModeLocationInfo">Use location to calculate sunset and sun rise time</string>
+
+    <string name="ExternalLinks">Links open externally</string>
+    <string name="ExternalLinksAddDomain">Add domain</string>
+
 </resources>
diff --git a/TMessagesProj/src/main/res/values-de/strings.xml b/TMessagesProj/src/main/res/values-de/strings.xml
index f2a20a494..4d794fbb9 100644
--- a/TMessagesProj/src/main/res/values-de/strings.xml
+++ b/TMessagesProj/src/main/res/values-de/strings.xml
@@ -1312,4 +1312,7 @@
     <string name="NightModeFollowSystemInfo">Restart of the app may be required for \'Follow System\' to come into effect.</string>
     <string name="NightModeLocation">Location enhancement</string>
     <string name="NightModeLocationInfo">Use location to calculate sunset and sun rise time</string>
+
+    <string name="ExternalLinks">Links open externally</string>
+    <string name="ExternalLinksAddDomain">Add domain</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-es/strings.xml b/TMessagesProj/src/main/res/values-es/strings.xml
index 9dad30f06..41bf06e5f 100644
--- a/TMessagesProj/src/main/res/values-es/strings.xml
+++ b/TMessagesProj/src/main/res/values-es/strings.xml
@@ -1312,4 +1312,7 @@
     <string name="NightModeFollowSystemInfo">Restart of the app may be required for \'Follow System\' to come into effect.</string>
     <string name="NightModeLocation">Location enhancement</string>
     <string name="NightModeLocationInfo">Use location to calculate sunset and sun rise time</string>
+
+    <string name="ExternalLinks">Links open externally</string>
+    <string name="ExternalLinksAddDomain">Add domain</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 6da3a3243..93ea2f2fa 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -1312,4 +1312,7 @@
     <string name="NightModeFollowSystemInfo">Restart of the app may be required for \'Follow System\' to come into effect.</string>
     <string name="NightModeLocation">Location enhancement</string>
     <string name="NightModeLocationInfo">Use location to calculate sunset and sun rise time</string>
+
+    <string name="ExternalLinks">Links open externally</string>
+    <string name="ExternalLinksAddDomain">Add domain</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-ko/strings.xml b/TMessagesProj/src/main/res/values-ko/strings.xml
index 7296207a3..a41ae034e 100644
--- a/TMessagesProj/src/main/res/values-ko/strings.xml
+++ b/TMessagesProj/src/main/res/values-ko/strings.xml
@@ -1312,4 +1312,7 @@
     <string name="NightModeFollowSystemInfo">Restart of the app may be required for \'Follow System\' to come into effect.</string>
     <string name="NightModeLocation">Location enhancement</string>
     <string name="NightModeLocationInfo">Use location to calculate sunset and sun rise time</string>
+
+    <string name="ExternalLinks">Links open externally</string>
+    <string name="ExternalLinksAddDomain">Add domain</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-nl/strings.xml b/TMessagesProj/src/main/res/values-nl/strings.xml
index 4ca9451f2..879f920e9 100644
--- a/TMessagesProj/src/main/res/values-nl/strings.xml
+++ b/TMessagesProj/src/main/res/values-nl/strings.xml
@@ -1312,4 +1312,7 @@
     <string name="NightModeFollowSystemInfo">Restart of the app may be required for \'Follow System\' to come into effect.</string>
     <string name="NightModeLocation">Location enhancement</string>
     <string name="NightModeLocationInfo">Use location to calculate sunset and sun rise time</string>
+
+    <string name="ExternalLinks">Links open externally</string>
+    <string name="ExternalLinksAddDomain">Add domain</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
index a6e5ceba5..a4985c92f 100644
--- a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
@@ -1312,4 +1312,7 @@
     <string name="NightModeFollowSystemInfo">Restart of the app may be required for \'Follow System\' to come into effect.</string>
     <string name="NightModeLocation">Location enhancement</string>
     <string name="NightModeLocationInfo">Use location to calculate sunset and sun rise time</string>
+
+    <string name="ExternalLinks">Links open externally</string>
+    <string name="ExternalLinksAddDomain">Add domain</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
index 74ced8882..62913d6c7 100644
--- a/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rPT/strings.xml
@@ -1312,4 +1312,7 @@
     <string name="NightModeFollowSystemInfo">Restart of the app may be required for \'Follow System\' to come into effect.</string>
     <string name="NightModeLocation">Location enhancement</string>
     <string name="NightModeLocationInfo">Use location to calculate sunset and sun rise time</string>
+
+    <string name="ExternalLinks">Links open externally</string>
+    <string name="ExternalLinksAddDomain">Add domain</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values-sw600dp/dimens.xml b/TMessagesProj/src/main/res/values-sw600dp/dimens.xml
new file mode 100644
index 000000000..176d89ec7
--- /dev/null
+++ b/TMessagesProj/src/main/res/values-sw600dp/dimens.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <dimen name="list_padding">24dp</dimen>
+</resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-v21/styles.xml b/TMessagesProj/src/main/res/values-v21/styles.xml
index ffbb83c13..815b812b0 100644
--- a/TMessagesProj/src/main/res/values-v21/styles.xml
+++ b/TMessagesProj/src/main/res/values-v21/styles.xml
@@ -120,8 +120,8 @@
     <!--EDIT TEXT-->
 
     <style name="Theme.TMessages.EditText" parent="android:Widget.Material.Light.EditText">
-        <item name="android:background">@drawable/edit_text</item>
-        <item name="android:textColor">#000000</item>
+        <!--<item name="android:background">@drawable/edit_text</item>
+        <item name="android:textColor">#000000</item>-->
     </style>
 
     <!--ALERT DIALOG-->
diff --git a/TMessagesProj/src/main/res/values-zh-rCN/strings.xml b/TMessagesProj/src/main/res/values-zh-rCN/strings.xml
index 94df1dc47..5af7f3bae 100644
--- a/TMessagesProj/src/main/res/values-zh-rCN/strings.xml
+++ b/TMessagesProj/src/main/res/values-zh-rCN/strings.xml
@@ -1315,4 +1315,7 @@
     <string name="NightModeFollowSystemInfo">跟随系统可能需要您重启应用才能生效。</string>
     <string name="NightModeLocation">位置增强</string>
     <string name="NightModeLocationInfo">使用位置来计算日落和日出时间</string>
+
+    <string name="ExternalLinks">用外部浏览器打开的链接</string>
+    <string name="ExternalLinksAddDomain">添加域名</string>
 </resources>
diff --git a/TMessagesProj/src/main/res/values/dimens.xml b/TMessagesProj/src/main/res/values/dimens.xml
new file mode 100644
index 000000000..191f6f62d
--- /dev/null
+++ b/TMessagesProj/src/main/res/values/dimens.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <dimen name="list_padding">16dp</dimen>
+</resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index c75fee79f..8ae9f73f9 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -1314,4 +1314,7 @@
     <string name="NightModeFollowSystemInfo">Restart of the app may be required for \'Follow System\' to come into effect.</string>
     <string name="NightModeLocation">Location enhancement</string>
     <string name="NightModeLocationInfo">Use location to calculate sunset and sun rise time</string>
+    
+    <string name="ExternalLinks">Links open externally</string>
+    <string name="ExternalLinksAddDomain">Add domain</string>
 </resources>
