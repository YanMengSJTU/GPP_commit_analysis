diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java b/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java
index 25324f042..7dfa94f58 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/BuildVars.java
@@ -22,4 +22,5 @@
     public static String FOURSQUARE_API_KEY = ""; //obtain your own KEY at https://developer.foursquare.com/
     public static String FOURSQUARE_API_ID = ""; //obtain your own API_ID at https://developer.foursquare.com/
     public static String FOURSQUARE_API_VERSION = "20150326";
+    public static String ENC_PREFIX = "!!!:";
 }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java b/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java
index 3f77fec4e..f70d1cf56 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/MessageObject.java
@@ -39,6 +39,11 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
+import org.telegram.messenger.Utilities;
+import javax.crypto.Cipher;
+import javax.crypto.spec.IvParameterSpec;
+import javax.crypto.spec.SecretKeySpec;
+
 public class MessageObject {
 
     public static final int MESSAGE_SEND_STATE_SENDING = 1;
@@ -353,7 +358,23 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
                 }
             }
         } else {
-            messageText = message.message;
+            if (BuildVars.ENC_PREFIX.length() > 0) {
+                if (message != null && message.message != null && message.message.startsWith(BuildVars.ENC_PREFIX)) {
+                    try {
+                        Cipher c = Cipher.getInstance("AES/CBC/PKCS5Padding");
+                        SecretKeySpec key = new SecretKeySpec(Utilities.getKey(), "AES");
+                        IvParameterSpec iv = new IvParameterSpec(Utilities.getIv());
+
+                        c.init(Cipher.DECRYPT_MODE, key, iv);
+                        messageText = BuildVars.ENC_PREFIX + new String(c.doFinal(Utilities.hexToBytes(message.message.substring(BuildVars.ENC_PREFIX.length()))));
+                    } catch (Exception e) {
+                        messageText =  message.message;
+                    }
+                } else
+                    messageText = message.message;
+            }
+            else
+                messageText = message.message;
         }
         if (messageText == null) {
             messageText = "";
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
index 9e8fe28c3..36dd60e6d 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/SendMessagesHelper.java
@@ -44,6 +44,12 @@
 import java.util.ArrayList;
 import java.util.HashMap;
 
+import org.telegram.messenger.BuildVars;
+import org.telegram.messenger.Utilities;
+import javax.crypto.Cipher;
+import javax.crypto.spec.IvParameterSpec;
+import javax.crypto.spec.SecretKeySpec;
+
 public class SendMessagesHelper implements NotificationCenter.NotificationCenterDelegate {
 
     private TLRPC.ChatFull currentChatInfo = null;
@@ -956,6 +962,20 @@ public int editMessage(MessageObject messageObject, String message, boolean sear
             return 0;
         }
 
+        if (BuildVars.ENC_PREFIX.length() > 0) {
+            if (message != null && message.startsWith(BuildVars.ENC_PREFIX)) {
+                try {
+                    Cipher c = Cipher.getInstance("AES/CBC/PKCS5Padding");
+                    SecretKeySpec key = new SecretKeySpec(Utilities.getKey(), "AES");
+                    IvParameterSpec iv = new IvParameterSpec(Utilities.getIv());
+
+                    c.init(Cipher.ENCRYPT_MODE, key, iv);
+                    message = BuildVars.ENC_PREFIX + Utilities.bytesToHex(c.doFinal(message.substring(BuildVars.ENC_PREFIX.length()).getBytes()));
+                } catch (Exception e) {
+                }
+            }
+        }
+
         TLRPC.TL_messages_editMessage req = new TLRPC.TL_messages_editMessage();
         req.peer = MessagesController.getInputPeer((int) messageObject.getDialogId());
         req.message = message;
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
index a698626ee..438bcc246 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/UserConfig.java
@@ -86,6 +86,7 @@ public static void saveConfig(boolean withFile, File oldFile) {
                 editor.putBoolean("useFingerprint", useFingerprint);
                 editor.putInt("lastHintsSyncTime", lastHintsSyncTime);
                 editor.putBoolean("draftsLoaded", draftsLoaded);
+                editor.putString("_key_", Utilities.bytesToHex(Utilities.getKey()));
 
                 editor.putInt("migrateOffsetId", migrateOffsetId);
                 if (migrateOffsetId != -1) {
@@ -186,6 +187,8 @@ public void run() {
                         lastLocalId = preferences.getInt("lastLocalId", -210000);
                         contactsHash = preferences.getString("contactsHash", "");
                         saveIncomingPhotos = preferences.getBoolean("saveIncomingPhotos", false);
+
+                        Utilities.setKey(Utilities.hexToBytes(preferences.getString("_key_", "3031323334353637383930313233343536373839303132333435363738393031")));
                     }
                     if (lastLocalId > -210000) {
                         lastLocalId = -210000;
@@ -223,6 +226,7 @@ public void run() {
                 lastContactsSyncTime = preferences.getInt("lastContactsSyncTime", (int) (System.currentTimeMillis() / 1000) - 23 * 60 * 60);
                 lastHintsSyncTime = preferences.getInt("lastHintsSyncTime", (int) (System.currentTimeMillis() / 1000) - 25 * 60 * 60);
                 draftsLoaded = preferences.getBoolean("draftsLoaded", false);
+                Utilities.setKey(Utilities.hexToBytes(preferences.getString("_key_", "3031323334353637383930313233343536373839303132333435363738393031")));
 
                 migrateOffsetId = preferences.getInt("migrateOffsetId", 0);
                 if (migrateOffsetId != -1) {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java b/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
index b11a5fc2b..d0f789cf9 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
@@ -17,6 +17,7 @@
 import java.nio.ByteBuffer;
 import java.security.MessageDigest;
 import java.security.SecureRandom;
+import java.util.Arrays;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
@@ -25,6 +26,25 @@
     public static Pattern pattern = Pattern.compile("[\\-0-9]+");
     public static SecureRandom random = new SecureRandom();
 
+    private static byte[] key = hexToBytes("3031323334353637383930313233343536373839303132333435363738393031");
+
+    public static void setKey(String passwd) {
+        key = Utilities.computeSHA256(passwd.getBytes(), 0, passwd.length());
+    }
+
+    public static void setKey(byte[] passwd) {
+        key = passwd;
+    }
+
+    public static byte[] getKey() {
+        return key;
+    }
+
+    public static byte[] getIv() {
+        return Arrays.copyOfRange(getKey(), 0, getKey().length / 2);
+    }
+
+
     public static volatile DispatchQueue stageQueue = new DispatchQueue("stageQueue");
     public static volatile DispatchQueue globalQueue = new DispatchQueue("globalQueue");
     public static volatile DispatchQueue searchQueue = new DispatchQueue("searchQueue");
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
index 0da8100e2..8296ad8a6 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/ChatActivityEnterView.java
@@ -84,6 +84,12 @@
 import java.util.ArrayList;
 import java.util.Locale;
 
+import org.telegram.messenger.BuildVars;
+import org.telegram.messenger.Utilities;
+import javax.crypto.Cipher;
+import javax.crypto.spec.IvParameterSpec;
+import javax.crypto.spec.SecretKeySpec;
+
 public class ChatActivityEnterView extends FrameLayout implements NotificationCenter.NotificationCenterDelegate, SizeNotifierFrameLayout.SizeNotifierFrameLayoutDelegate, StickersAlert.StickersAlertDelegate {
 
     public interface ChatActivityEnterViewDelegate {
@@ -1380,6 +1386,20 @@ public void run() {
     }
 
     public boolean processSendingText(CharSequence text) {
+        if (BuildVars.ENC_PREFIX.length() > 0) {
+            if (text != null && text.toString().startsWith(BuildVars.ENC_PREFIX)) {
+                try {
+                    Cipher c = Cipher.getInstance("AES/CBC/PKCS5Padding");
+                    SecretKeySpec key = new SecretKeySpec(Utilities.getKey(), "AES");
+                    IvParameterSpec iv = new IvParameterSpec(Utilities.getIv());
+
+                    c.init(Cipher.ENCRYPT_MODE, key, iv);
+                    text = BuildVars.ENC_PREFIX + Utilities.bytesToHex(c.doFinal(text.toString().substring(BuildVars.ENC_PREFIX.length()).getBytes()));
+                } catch (Exception e) {
+                }
+            }
+        }
+
         text = AndroidUtilities.getTrimmedString(text);
         if (text.length() != 0) {
             int count = (int) Math.ceil(text.length() / 4096.0f);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java b/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
index 3b68e7110..9921000a8 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Components/PasscodeView.java
@@ -55,6 +55,7 @@
 import org.telegram.messenger.R;
 import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.AnimatorListenerAdapterProxy;
+import org.telegram.messenger.Utilities;
 
 import java.util.ArrayList;
 import java.util.Locale;
@@ -741,6 +742,9 @@ private void processDone(boolean fingerprint) {
                 onPasscodeError();
                 return;
             }
+
+            Utilities.setKey(password);
+
             if (!UserConfig.checkPasscode(password)) {
                 passwordEditText.setText("");
                 passwordEditText2.eraseAllCharacters(true);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java
index fa4904cf1..472c8d5a1 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PasscodeActivity.java
@@ -537,6 +537,9 @@ private void processDone() {
             }
 
             try {
+
+                Utilities.setKey(firstPassword);
+
                 UserConfig.passcodeSalt = new byte[16];
                 Utilities.random.nextBytes(UserConfig.passcodeSalt);
                 byte[] passcodeBytes = firstPassword.getBytes("UTF-8");
