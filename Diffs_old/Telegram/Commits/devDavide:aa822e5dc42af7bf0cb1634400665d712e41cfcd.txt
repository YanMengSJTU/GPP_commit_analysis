diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java
index eb8f9d863..f2a9972a7 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/DecisionAdapter.java
@@ -25,17 +25,19 @@
     private static final int LAYOUT_RES_ID = R.layout.item_decision_list;
     private final int groupMemberCount;
     private final PollgramService pollgramService;
+    private final LayoutInflater inflater;
 
     public DecisionAdapter(Context context,  List<Decision> items, int groupMemberCount) {
         super(context, LAYOUT_RES_ID, items);
         this.groupMemberCount = groupMemberCount;
         pollgramService = PollgramFactory.getPollgramService();
+        inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
     }
 
     @Override
     public View getView(int position, View convertView, ViewGroup parent) {
+
         // init layout
-        LayoutInflater inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
         View rowView = inflater.inflate(LAYOUT_RES_ID, parent, false);
         ImageView decisionImage = (ImageView)rowView.findViewById(R.id.item_decision_iv_image);
         TextView decisionTitle = (TextView)rowView.findViewById(R.id.item_decision_tv_title);
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/NewOptionsAdapter.java b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/NewOptionsAdapter.java
new file mode 100644
index 000000000..815089fd9
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/NewOptionsAdapter.java
@@ -0,0 +1,121 @@
+package org.pollgram.decision.adapter;
+
+import android.content.Context;
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.ImageButton;
+import android.widget.Toast;
+
+import org.pollgram.R;
+import org.pollgram.decision.data.Option;
+import org.pollgram.decision.data.TextOption;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by davide on 23/12/15.
+ */
+public class NewOptionsAdapter extends ArrayAdapter<Option> {
+    private static final int LAYOUT_RES_ID = R.layout.item_new_option_list;
+
+    private final List<TextOption> options;
+    private final LayoutInflater inflater;
+
+    public NewOptionsAdapter(Context context) {
+        super(context, LAYOUT_RES_ID);
+        inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+        options = new ArrayList<>();
+        // put one first empty option
+        options.add(new TextOption());
+    }
+
+    public List<Option> getOptions() {
+        List<Option> out = new ArrayList<Option>();
+        for (TextOption to : options)
+            out.add(to);
+        return out;
+    }
+
+    @Override
+    public int getCount() {
+        return options.size() + 1;
+    }
+
+    @Override
+    public View getView(final int position, View convertView, ViewGroup parent) {
+        View rowView;
+        if (position == getCount() - 1) {
+            rowView = inflater.inflate(R.layout.item_add_new_option_list, parent, false);
+            Button buttonAdd = (Button) rowView.findViewById(R.id.new_option_add_button);
+            buttonAdd.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    if (options.get(position-1).getTitle() == null){
+                        Toast.makeText(getContext(), R.string.please_select_a_title_for_option, Toast.LENGTH_LONG).show();
+                    } else {
+                        options.add(new TextOption());
+                        notifyDataSetChanged();
+                    }
+                }
+            });
+        } else {
+            // Create view for item
+            rowView = inflater.inflate(LAYOUT_RES_ID, parent, false);
+            EditText edTitle = (EditText) rowView.findViewById(R.id.new_option_ed_title);
+            EditText edLongDescription = (EditText) rowView.findViewById(R.id.new_option_ed_long_description);
+            ImageButton deleteItem = (ImageButton) rowView.findViewById(R.id.new_option_delete_button);
+
+            // Set data
+            final TextOption o = options.get(position);
+            edTitle.setText(o.getTitle());
+            edLongDescription.setText(o.getLongDescription());
+
+            // Register listener
+            deleteItem.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    options.remove(position);
+                    notifyDataSetChanged();
+                }
+            });
+            edTitle.addTextChangedListener(new TextWatcher() {
+                @Override
+                public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+                }
+
+                @Override
+                public void onTextChanged(CharSequence s, int start, int before, int count) {
+                }
+
+                @Override
+                public void afterTextChanged(Editable s) {
+                    o.setTitle(s.toString());
+                }
+            });
+            edLongDescription.addTextChangedListener(new TextWatcher() {
+                @Override
+                public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+                }
+
+                @Override
+                public void onTextChanged(CharSequence s, int start, int before, int count) {
+                }
+
+                @Override
+                public void afterTextChanged(Editable s) {
+                    o.setLongDescription(s.toString());
+                }
+            });
+        }
+
+        return rowView;
+    }
+}
+
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
index d4aee5315..e19f5d6f5 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/adapter/VoteListAdapter.java
@@ -34,6 +34,7 @@
     private static final String LOG_TAG = "ChoiceAdapter";
 
     private static final int LAYOUT_RES_ID = R.layout.item_vote_list;
+    private final LayoutInflater inflater;
     private boolean editable;
     private int maxVote;
     private List<Vote> votes;
@@ -48,6 +49,7 @@
 
     public VoteListAdapter(Context context, boolean editable) {
         super(context, LAYOUT_RES_ID);
+        inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
         this.editable = editable;
         this.onVoteChangeListener = new OnVoteChangeListener() {
             @Override
@@ -115,7 +117,7 @@ public View getView(final int position, View convertView, ViewGroup parent) {
             return null;
         }
         final TextOption o = (TextOption)c;
-        LayoutInflater inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+
         View rowView = inflater.inflate(LAYOUT_RES_ID, parent, false);
         ImageView optionImage = (ImageView)rowView.findViewById(R.id.item_option_iv_image);
         TextView optionTitle = (TextView)rowView.findViewById(R.id.item_option_tv_title);
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/data/Decision.java b/TMessagesProj/src/main/java/org/pollgram/decision/data/Decision.java
index 1bfdda816..2de73f604 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/data/Decision.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/data/Decision.java
@@ -85,10 +85,19 @@ public boolean equals(Object o) {
         if (isOpen() != decision.isOpen()) return false;
         if (getTitle() != null ? !getTitle().equals(decision.getTitle()) : decision.getTitle() != null)
             return false;
-        return !(getLongDescription() != null ? !getLongDescription().equals(decision.getLongDescription()) : decision.getLongDescription() != null);
+        return equalString(getLongDescription(), decision.getLongDescription());
 
     }
 
+    private boolean equalString(String s1, String s2) {
+        boolean isS1Emtpy = s1 == null || s1.trim().isEmpty() || s1.equals(""+null);
+        boolean isS2Emtpy = s2 == null || s2.trim().isEmpty() || s2.equals(""+null);
+        if (isS1Emtpy && isS2Emtpy)
+            return true;
+        else
+            return s1.equals(s2);
+    }
+
     @Override
     public int hashCode() {
         int result = super.hashCode();
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/data/TextOption.java b/TMessagesProj/src/main/java/org/pollgram/decision/data/TextOption.java
index 6470a06ac..8bc50814b 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/data/TextOption.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/data/TextOption.java
@@ -20,6 +20,11 @@ public TextOption(long id, String title, String longDescription, long decisionId
         this(title,longDescription,decisionId);
         setId(id);
     }
+
+    public TextOption() {
+        this(null,null,ID_NOT_SET);
+    }
+
     @Override
     public String getTitle() {
         return title;
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/EmojiUtils.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/EmojiUtils.java
new file mode 100644
index 000000000..06cea1183
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/EmojiUtils.java
@@ -0,0 +1,13 @@
+package org.pollgram.decision.service;
+
+import java.nio.charset.Charset;
+
+/**
+ * Created by davide on 23/12/15.
+ */
+class EmojiUtils {
+
+    public static String getEmojiAsString(byte... emojiBytes){
+        return new String(emojiBytes, Charset.forName("UTF-8"));
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java
index aca654a14..6ccb4f31f 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramDAODBImpl.java
@@ -12,7 +12,6 @@
 import org.pollgram.decision.data.Vote;
 
 import java.util.ArrayList;
-import java.util.Collections;
 import java.util.Date;
 import java.util.List;
 
@@ -38,20 +37,10 @@ public void purgeData() {
     @Override
     public void putStubData(int chatId, int creatorId) {
         // TODO remove it one day
-
         Log.i(LOG_TAG, "Put Stub test data");
 
-        List<Decision> decisions = new ArrayList<>();
         Date creationDate = new Date();
-        decisions.add(new Decision(chatId, creatorId, "what present do we buy ?", "huge bla bla bla", creationDate, true));
-        decisions.add(new Decision(chatId, creatorId, "Where do we go ?", "huge bla bla bla", creationDate, true));
-        decisions.add(new Decision(chatId, creatorId, "When will the party be ?", "huge bla bla bla", creationDate, true));
-        decisions.add(new Decision(chatId, creatorId, "Do we add Slomp to the group ?", "huge bla bla bla", creationDate, false));
-        for (Decision d : decisions) {
-            Decision newD = save(d);
-            Log.i(LOG_TAG, "inserted decision id:" + newD.getId());
-            Decision found = getDecision(newD.getId());
-        }
+        Decision d =  new Decision(chatId, creatorId, "what present do we buy ?", "huge bla bla bla", creationDate, true);
 
         Decision decision1 = getDecisions(chatId, null).get(0);
         List<Option> options = new ArrayList<>();
@@ -60,27 +49,7 @@ public void putStubData(int chatId, int creatorId) {
         options.add(new TextOption("Trip", "Yeah a trip trought Europe can be a nice idea", decision1.getId()));
         options.add(new TextOption("A stupid idea", "it is late and i have no more ideas ;-/", decision1.getId()));
 
-        for (Decision d : getDecisions(chatId, true)) {
-            if (d.equals(decisions.get(0)))
-                PollgramFactory.getPollgramService().notifyNewDecision(d, options);
-            else
-                PollgramFactory.getPollgramService().notifyNewDecision(d, Collections.<Option>emptyList());
-        }
-        // }
-        // Do some test query
-        Log.i(LOG_TAG, "query getDecisions(null)");
-        for (Decision d : getDecisions(chatId, null)) {
-            Log.d(LOG_TAG, "found-1: " + d);
-        }
-
-        Log.i(LOG_TAG, "query getDecisions(true)");
-
-        Log.i(LOG_TAG, "query getDecisions(false)");
-        for (Decision d : getDecisions(chatId, false)) {
-            Log.d(LOG_TAG, "found-3 " + d);
-        }
-
-
+        PollgramFactory.getPollgramService().notifyNewDecision(d, options);
     }
 
     @Override
@@ -200,6 +169,8 @@ public Option save(Option o) {
             throw new RuntimeException("Not yet supported :-(");
 
         TextOption tOpt = (TextOption) o;
+        if (tOpt.getLongDescription() == null)// mask null values
+            tOpt.setLongDescription("");
         Option foundOption = getOption(tOpt.getTitle(), o.getDecisionId());
         if (foundOption == null)
             return helper.insert(tOpt, helper.TEXT_OPTION_MAPPER);
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java
index 707502a25..c90051396 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManager.java
@@ -7,7 +7,6 @@
 import org.pollgram.decision.data.Decision;
 import org.pollgram.decision.data.Option;
 import org.pollgram.decision.data.Vote;
-import org.pollgram.decision.utils.PollgramUtils;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.MessageObject;
 
@@ -38,7 +37,7 @@
         private String descriptionString;
 
         private MessageType(int descrStringRes, byte... emojiBytes) {
-            this.emoji = PollgramUtils.getEmojiAsString(emojiBytes);
+            this.emoji = EmojiUtils.getEmojiAsString(emojiBytes);
             this.descrStringRes = descrStringRes;
         }
 
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java
index c298ba186..fb98a071f 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramMessagesManagerImpl.java
@@ -10,7 +10,6 @@
 import org.pollgram.decision.data.Option;
 import org.pollgram.decision.data.TextOption;
 import org.pollgram.decision.data.Vote;
-import org.pollgram.decision.utils.PollgramUtils;
 import org.telegram.messenger.ApplicationLoader;
 import org.telegram.messenger.ChatObject;
 import org.telegram.messenger.MessageObject;
@@ -37,10 +36,10 @@
     protected static final char QUOTE_CHAR = '\'';
     private static final char NEW_LINE = '\n';
 
-    private static final String WINKING_FACE_EMOJI = PollgramUtils.getEmojiAsString((byte) 0xF0, (byte) 0x9F, (byte) 0x98, (byte)0x89);// winking face
-    private static final String TRUE_EMOJI = PollgramUtils.getEmojiAsString((byte) 0xE2, (byte) 0x9C, (byte) 0x85);// WHITE HEAVY CHECK MARK
-    private static final String FALSE_EMOJI = PollgramUtils.getEmojiAsString((byte) 0xE2, (byte) 0x9D, (byte) 0x8C);// CROSS MARK
-    private static final String BULLET_LIST_EMOJI = PollgramUtils.getEmojiAsString((byte) 0xE2, (byte) 0x96, (byte) 0xAB);// white small square
+    private static final String WINKING_FACE_EMOJI = EmojiUtils.getEmojiAsString((byte) 0xF0, (byte) 0x9F, (byte) 0x98, (byte)0x89);// winking face
+    private static final String TRUE_EMOJI = EmojiUtils.getEmojiAsString((byte) 0xE2, (byte) 0x9C, (byte) 0x85);// WHITE HEAVY CHECK MARK
+    private static final String FALSE_EMOJI = EmojiUtils.getEmojiAsString((byte) 0xE2, (byte) 0x9D, (byte) 0x8C);// CROSS MARK
+    private static final String BULLET_LIST_EMOJI = EmojiUtils.getEmojiAsString((byte) 0xE2, (byte) 0x96, (byte) 0xAB);// white small square
 
     private final PollgramDAO pollgramDAO;
     private final Context context;
@@ -76,6 +75,9 @@ private String format(Object obj){
         } else
             strValue = "" + obj;
 
+        if (strValue.length() == 0)
+            strValue = " ";
+
         strValue = QUOTE_CHAR + strValue + QUOTE_CHAR;
         return strValue;
     }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
index a1e389f7d..13783c17c 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/service/PollgramServiceImpl.java
@@ -6,6 +6,7 @@
 import android.widget.Toast;
 
 import org.pollgram.R;
+import org.pollgram.decision.data.DBBean;
 import org.pollgram.decision.data.Decision;
 import org.pollgram.decision.data.Option;
 import org.pollgram.decision.data.UsersDecisionVotes;
@@ -17,6 +18,7 @@
 import org.telegram.messenger.MessageObject;
 import org.telegram.messenger.MessagesController;
 import org.telegram.messenger.SendMessagesHelper;
+import org.telegram.messenger.UserConfig;
 import org.telegram.messenger.UserObject;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.Components.URLSpanNoUnderline;
@@ -124,15 +126,16 @@ public void notifyDelete(Decision decision) {
     @Override
     public void notifyNewDecision(Decision decision, List<Option> options) {
         Log.d(LOG_TAG, "notifyNewDecision decision[" + decision + "] decision[" + decision + "] options[" + options + "]");
-        pollgramDAO.save(decision);
-        for(Option o : options){
-            if (o.getDecisionId() != decision.getId()) {
-                Log.e(LOG_TAG, "Option decisionid["+o.getDecisionId()+"] != decision.getId()["+decision.getId()+"]");
+        decision = pollgramDAO.save(decision);
+        for(Option o : options) {
+            if (o.getDecisionId() == DBBean.ID_NOT_SET) {
+                o.setDecisionId(decision.getId());
+            } else if (o.getDecisionId() != decision.getId()) {
+                Log.e(LOG_TAG, "Option decisionid[" + o.getDecisionId() + "] != decision.getId()[" + decision.getId() + "]");
                 continue;
             }
             pollgramDAO.save(o);
         }
-
         String message = messageManager.buildNotifyNewDecision(decision, options);
         sendMessage(decision.getChatId(), message);
     }
@@ -169,6 +172,9 @@ public void processMessage(MessageObject message) {
                     if (resut == null){
                         throw new PollgramParseException("Decision not found for NEW_DECISION messsage");
                     }
+                    if (pollgramDAO.getDecision(resut.decision.getTitle(),resut.decision.getChatId()) != null){
+                        Log.d(LOG_TAG,"New decision already found will not insert twice");
+                    }
                     Decision d = pollgramDAO.save(resut.decision);
                     for (Option o : resut.optionList) {
                         o.setDecisionId(d.getId());
@@ -241,6 +247,9 @@ protected void sendMessage(long groupChatId, String message) {
 
     @Override
     public String asString(TLRPC.User user){
+        if (user.id == UserConfig.getCurrentUser().id)
+            return ApplicationLoader.applicationContext.getString(R.string.you);
+
         if (user.id / 1000 != 777 && user.id / 1000 != 333 &&
                 ContactsController.getInstance().contactsDict.get(user.id) == null &&
                 (ContactsController.getInstance().contactsDict.size() != 0 || !ContactsController.getInstance().isLoadingContacts())) {
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
index 917ae4bc7..642810067 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/DecisionsListFragment.java
@@ -22,11 +22,9 @@
 import org.pollgram.decision.data.Decision;
 import org.pollgram.decision.service.PollgramDAO;
 import org.pollgram.decision.service.PollgramFactory;
-import org.pollgram.decision.utils.PollgramUtils;
 import org.telegram.messenger.AndroidUtilities;
 import org.telegram.messenger.LocaleController;
 import org.telegram.messenger.MessagesController;
-import org.telegram.messenger.UserConfig;
 import org.telegram.tgnet.TLRPC;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
@@ -47,7 +45,7 @@
     private static int nextId = 1;
     private static final int ID_TOGGLE_OPEN_CLOSE_DECISIONS = nextId++;
     private static final int ID_PURGE_ALL_DATA = nextId++;
-    private static final int ID_PUT_STUB_DATA_DATA = nextId++;
+    //private static final int ID_PUT_STUB_DATA_DATA = nextId++;
 
     private TLRPC.ChatFull chatInfo;
     private TLRPC.Chat currentChat;
@@ -79,19 +77,19 @@ public View createView(final Context context) {
 
         // set up action bar
 
-        tvSubtitle = PollgramUtils.init(actionBar, R.string.groupDecision, R.drawable.decision);
+        tvSubtitle = UIUtils.init(actionBar, R.string.groupDecision, R.drawable.decision);
         actionBar.setBackButtonImage(R.drawable.ic_ab_back);
         // Create menu
         ActionBarMenu menu = actionBar.createMenu();
         ActionBarMenuItem headerItem = menu.addItem(0, R.drawable.ic_ab_other);
         final TextView viewOpenCloseTextView =  headerItem.addSubItem(ID_TOGGLE_OPEN_CLOSE_DECISIONS,
                 context.getString(hideCloseDecision ? R.string.viewCloseDecision : R.string.hideCloseDecision),0 );
-        headerItem.addSubItem(ID_PURGE_ALL_DATA, "Remove current chat decisions data", 0);
-        headerItem.addSubItem(ID_PUT_STUB_DATA_DATA, "Put stub data for current chat", 0);
+        headerItem.addSubItem(ID_PURGE_ALL_DATA, "Remove current chat decisions", 0);
+        //headerItem.addSubItem(ID_PUT_STUB_DATA_DATA, "Put stub data for current chat", 0);
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
             @Override
             public void onItemClick(int id) {
-                if (id == -1) {
+                if (id == UIUtils.ACTION_BAR_BACK_ITEM_ID) {
                     finishFragment();
                     return;
                 } else if (id == ID_TOGGLE_OPEN_CLOSE_DECISIONS) {
@@ -105,8 +103,8 @@ public void onItemClick(int id) {
                     for (Decision d : allDecisions){
                         pollgramDAO.delete(d);
                     }
-                } else if (id == ID_PUT_STUB_DATA_DATA){
-                    pollgramDAO.putStubData(currentChat.id, UserConfig.getCurrentUser().id);
+//                } else if (id == ID_PUT_STUB_DATA_DATA){
+//                    pollgramDAO.putStubData(currentChat.id, UserConfig.getCurrentUser().id);
                 }
                 updateResult();
             }
@@ -114,7 +112,6 @@ public void onItemClick(int id) {
 
         // inflate xml main layout
         fragmentView = new SizeNotifierFrameLayout(context);
-        SizeNotifierFrameLayout contentView = (SizeNotifierFrameLayout) fragmentView;
         LayoutInflater li = LayoutInflater.from(context);
         View myView = li.inflate(R.layout.decision_list_layout, (ViewGroup) fragmentView);
         TextView tvTitle = (TextView) myView.findViewById(R.id.decision_list_tv_title);
@@ -163,12 +160,15 @@ public void getOutline(View view, Outline outline) {
                 }
             });
         }
+
+        SizeNotifierFrameLayout contentView = (SizeNotifierFrameLayout) fragmentView;
         contentView.addView(floatingButton, LayoutHelper.createFrame(LayoutHelper.WRAP_CONTENT, LayoutHelper.WRAP_CONTENT, (LocaleController.isRTL ? Gravity.LEFT : Gravity.RIGHT) | Gravity.BOTTOM, LocaleController.isRTL ? 14 : 0, 0, LocaleController.isRTL ? 0 : 14, 14));
         floatingButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 Bundle args = new Bundle();
-                presentFragment(new NewDecisionFragment(args));
+                args.putInt(NewDecisionStep1TitleFragment.PAR_GROUP_CHAT_ID, chatInfo.id);
+                presentFragment(new NewDecisionStep1TitleFragment(DecisionsListFragment.this, args));
             }
         });
         return fragmentView;
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
deleted file mode 100644
index 7b694a96c..000000000
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionFragment.java
+++ /dev/null
@@ -1,40 +0,0 @@
-package org.pollgram.decision.ui;
-
-import android.content.Context;
-import android.os.Bundle;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import org.pollgram.R;
-import org.telegram.ui.ActionBar.BaseFragment;
-import org.telegram.ui.Components.SizeNotifierFrameLayout;
-
-/**
- * Created by davide on 13/12/15.
- */
-public class NewDecisionFragment extends BaseFragment {
-
-    public NewDecisionFragment(Bundle args) {
-        super(args);
-    }
-
-    @Override
-    public boolean onFragmentCreate() {
-        // put here fields init
-        return true;
-    }
-
-    @Override
-    public View createView(Context context) {
-        fragmentView = new SizeNotifierFrameLayout(context);
-        SizeNotifierFrameLayout contentView = (SizeNotifierFrameLayout) fragmentView;
-        LayoutInflater li = LayoutInflater.from(context);
-        ViewGroup myView = (ViewGroup) li.inflate(R.layout.new_decision_layout, (ViewGroup) fragmentView);
-
-        StackedBar dv = new StackedBar(getParentActivity(), 10, 4, 7);
-        myView.addView(dv, ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT);
-
-        return  fragmentView;
-    }
-}
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionStep1TitleFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionStep1TitleFragment.java
new file mode 100644
index 000000000..0dc0c7872
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionStep1TitleFragment.java
@@ -0,0 +1,111 @@
+package org.pollgram.decision.ui;
+
+import android.content.Context;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.EditText;
+import android.widget.Toast;
+
+import org.pollgram.R;
+import org.pollgram.decision.data.Decision;
+import org.pollgram.decision.service.PollgramDAO;
+import org.pollgram.decision.service.PollgramFactory;
+import org.telegram.ui.ActionBar.ActionBar;
+import org.telegram.ui.ActionBar.ActionBarMenu;
+import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.ui.Components.SizeNotifierFrameLayout;
+
+/**
+ * Created by davide on 13/12/15.
+ */
+public class NewDecisionStep1TitleFragment extends BaseFragment {
+
+    static final String PAR_DECISION_TITLE = "PAR_DECISION_TITLE";
+    static final String PAR_DECISION_LONG_DESCRIPTION = "PAR_DECISION_LONG_DESCRIPTION";
+    static final String PAR_GROUP_CHAT_ID = "PAR_GROUP_CHAT_ID";
+
+    private static final int NEXT_MENU_ITEM_ID = 1;
+    private static final String LOG_TAG = "NEW_DEC_FRAG";
+    private final BaseFragment previousFragemnt;
+    private EditText edTitle;
+    private EditText edLongDescription;
+
+    private NewDecisionStep2OptionsFragment newDecisionStep2OptionsFragment;
+    private Bundle wizardBundleArgs;
+    private PollgramDAO pollgramDAO;
+    private int groupChatId;
+
+    public NewDecisionStep1TitleFragment(BaseFragment previousFragemnt, Bundle args) {
+        super(args);
+        this.previousFragemnt =previousFragemnt;
+    }
+
+    @Override
+    public boolean onFragmentCreate() {
+        pollgramDAO = PollgramFactory.getPollgramDAO();
+        wizardBundleArgs = new Bundle();
+        newDecisionStep2OptionsFragment = new NewDecisionStep2OptionsFragment(previousFragemnt,wizardBundleArgs);
+        groupChatId = getArguments().getInt(PAR_GROUP_CHAT_ID);
+
+        return true;
+    }
+
+
+    @Override
+    public View createView(Context context) {
+        UIUtils.init(actionBar, R.string.new_decision, R.drawable.decision);
+        ActionBarMenu menu = actionBar.createMenu();
+        actionBar.setBackButtonImage(R.drawable.ic_close_white);
+        menu.addItem(NEXT_MENU_ITEM_ID, R.drawable.ic_arrow_forward_white_24dp);
+        actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
+            @Override
+            public void onItemClick(int id) {
+                switch (id) {
+                    case UIUtils.ACTION_BAR_BACK_ITEM_ID:
+                        finishFragment();
+                        break;
+                    case NEXT_MENU_ITEM_ID:
+                        nextStep();
+                        break;
+                    default:
+                        Log.w(LOG_TAG, "unknown action bar menu id [" + id + "]");
+                }
+            }
+
+        });
+        fragmentView = new SizeNotifierFrameLayout(context);
+        LayoutInflater li = LayoutInflater.from(context);
+        View myView = li.inflate(R.layout.new_decision_step1_layout, (ViewGroup) fragmentView);
+
+        edTitle = (EditText) myView.findViewById(R.id.new_decision_ed_title);
+        edLongDescription = (EditText) myView.findViewById(R.id.new_decision_ed_long_description);
+
+        return fragmentView;
+    }
+
+    private void nextStep() {
+        String title = edTitle.getText().toString();
+        if (title == null || title.trim().isEmpty()){
+            Toast.makeText(getParentActivity(), R.string.please_select_a_title, Toast.LENGTH_SHORT).show();
+            return;
+        }
+        Decision decision = pollgramDAO.getDecision(title, groupChatId);
+        if (decision != null){
+            Toast.makeText(getParentActivity(),R.string.decisionAlreadyExist,Toast.LENGTH_LONG).show();
+            return;
+        }
+
+        wizardBundleArgs.putInt(PAR_GROUP_CHAT_ID,groupChatId);
+        wizardBundleArgs.putString(PAR_DECISION_TITLE, title);
+        wizardBundleArgs.putString(PAR_DECISION_LONG_DESCRIPTION, edLongDescription.getText().toString());
+        presentFragment(newDecisionStep2OptionsFragment);
+    }
+
+    @Override
+    public void onResume() {
+
+    }
+}
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionStep2OptionsFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionStep2OptionsFragment.java
new file mode 100644
index 000000000..0edc959a1
--- /dev/null
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/NewDecisionStep2OptionsFragment.java
@@ -0,0 +1,139 @@
+package org.pollgram.decision.ui;
+
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.WindowManager;
+import android.widget.ListView;
+import android.widget.Toast;
+
+import org.pollgram.R;
+import org.pollgram.decision.adapter.NewOptionsAdapter;
+import org.pollgram.decision.data.Decision;
+import org.pollgram.decision.data.Option;
+import org.pollgram.decision.service.PollgramFactory;
+import org.pollgram.decision.service.PollgramService;
+import org.telegram.messenger.UserConfig;
+import org.telegram.ui.ActionBar.ActionBar;
+import org.telegram.ui.ActionBar.ActionBarMenu;
+import org.telegram.ui.ActionBar.BaseFragment;
+import org.telegram.ui.Components.SizeNotifierFrameLayout;
+
+import java.util.Date;
+import java.util.List;
+
+/**
+ * Created by davide on 13/12/15.
+ */
+public class NewDecisionStep2OptionsFragment extends BaseFragment {
+
+    private static final int SAVE_DECISION_MENU_ITEM_ID = 1;
+    private static final String LOG_TAG = "NEW_DEC_FRAG";
+    private final BaseFragment previousFragemnt;
+
+    // Decision fields
+    private int fullChatId;
+    private String decisionLongDescription;
+    private String decisionTitle;
+
+    private NewOptionsAdapter newOptionAdapter;
+    private PollgramService pollgramService;
+
+    public NewDecisionStep2OptionsFragment(BaseFragment previousFragemnt, Bundle args) {
+        super(args);
+        this.previousFragemnt = previousFragemnt;
+    }
+
+    @Override
+    public boolean onFragmentCreate() {
+        pollgramService = PollgramFactory.getPollgramService();
+        fullChatId = getArguments().getInt(NewDecisionStep1TitleFragment.PAR_GROUP_CHAT_ID);
+        decisionTitle = getArguments().getString(NewDecisionStep1TitleFragment.PAR_DECISION_TITLE);
+        decisionLongDescription = getArguments().getString(NewDecisionStep1TitleFragment.PAR_DECISION_LONG_DESCRIPTION);
+        return true;
+    }
+
+    @Override
+    public View createView(Context context) {
+
+        getParentActivity().getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN);
+
+        UIUtils.init(actionBar,R.string.select_options, R.drawable.decision);
+        ActionBarMenu menu = actionBar.createMenu();
+        actionBar.setBackButtonImage(R.drawable.ic_arrow_back_white_24dp);
+        menu.addItem(SAVE_DECISION_MENU_ITEM_ID, R.drawable.ic_done_white_36dp);
+        actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick(){
+            @Override
+            public void onItemClick(int id) {
+                switch (id){
+                    case UIUtils.ACTION_BAR_BACK_ITEM_ID :
+                        finishFragment();
+                        break;
+                    case SAVE_DECISION_MENU_ITEM_ID:
+                        final List<Option> options = newOptionAdapter.getOptions();
+                        // check if the last option is not empty !!!
+                        for (int i=0;i<options.size();i++){
+                            if (options.get(i).getTitle() == null) {
+                                Toast.makeText(getParentActivity(), getParentActivity().getString(R.string.emptyTitleOnOption,i),
+                                        Toast.LENGTH_LONG).show();
+                                return;
+                            }
+                        }
+
+                        AlertDialog.Builder builder = new AlertDialog.Builder(getParentActivity());
+                        builder.setMessage(getParentActivity().getString(R.string.saveDecisionQuestion,
+                                decisionTitle ,options.size()));
+                        builder.setPositiveButton(R.string.yes,
+                                new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                saveDecision(options);
+                            }
+                        }).setNegativeButton(R.string.no, new DialogInterface.OnClickListener() {
+                            @Override
+                            public void onClick(DialogInterface dialog, int which) {
+                                // nothing to do11
+                            }
+                        }).show();
+
+                        break;
+                    default:
+                        Log.w(LOG_TAG,"unknown action bar menu id ["+id +"]");
+                }
+            }
+
+        });
+
+        fragmentView = new SizeNotifierFrameLayout(context);
+        LayoutInflater li = LayoutInflater.from(context);
+        ViewGroup myView = (ViewGroup) li.inflate(R.layout.new_decision_step2_layout, (ViewGroup) fragmentView);
+        ListView newOptionListView = (ListView) myView.findViewById(R.id.new_decisions_option_list_view);
+        newOptionListView.setAdapter(newOptionAdapter = new NewOptionsAdapter(getParentActivity()));
+        return  fragmentView;
+    }
+
+    private void saveDecision(List<Option> options) {
+        if (decisionTitle == null || decisionTitle.isEmpty()){
+            Toast.makeText(getParentActivity(), R.string.please_select_a_title, Toast.LENGTH_SHORT).show();
+            return;
+        }
+
+        Decision decision = new Decision(fullChatId,
+                UserConfig.getCurrentUser().id, decisionTitle,
+                decisionLongDescription, new Date(), true);
+
+
+        pollgramService.notifyNewDecision(decision, options);
+        Toast.makeText(getParentActivity(), R.string.decisionSaved, Toast.LENGTH_LONG).show();
+
+        // TODO not so goood :-(
+        presentFragment(previousFragemnt);
+        return;
+    }
+
+}
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/utils/PollgramUtils.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/UIUtils.java
similarity index 93%
rename from TMessagesProj/src/main/java/org/pollgram/decision/utils/PollgramUtils.java
rename to TMessagesProj/src/main/java/org/pollgram/decision/ui/UIUtils.java
index dc70baac7..32eb9d5f7 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/utils/PollgramUtils.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/UIUtils.java
@@ -1,4 +1,4 @@
-package org.pollgram.decision.utils;
+package org.pollgram.decision.ui;
 
 import android.content.Context;
 import android.text.TextUtils;
@@ -13,12 +13,12 @@
 import org.telegram.ui.Components.FrameLayoutFixed;
 import org.telegram.ui.Components.LayoutHelper;
 
-import java.nio.charset.Charset;
-
 /**
  * Created by davide on 08/10/15.
  */
-public class PollgramUtils {
+class UIUtils {
+
+    public static final int ACTION_BAR_BACK_ITEM_ID = -1;
 
     private static final float TITLE_FONT_SIZE = 19;
 
@@ -77,8 +77,5 @@ public static TextView init(ActionBar actionBar, String title,int drawableIcon){
         return subtitleTextView;
     }
 
-    public static String getEmojiAsString(byte... emojiBytes){
-        return new String(emojiBytes, Charset.forName("UTF-8"));
-    }
 
 }
diff --git a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
index 37fc05114..ff84480ff 100644
--- a/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
+++ b/TMessagesProj/src/main/java/org/pollgram/decision/ui/VotesManagerFragment.java
@@ -17,7 +17,6 @@
 import org.pollgram.decision.service.PollgramDAO;
 import org.pollgram.decision.service.PollgramFactory;
 import org.pollgram.decision.service.PollgramService;
-import org.pollgram.decision.utils.PollgramUtils;
 import org.telegram.messenger.UserConfig;
 import org.telegram.ui.ActionBar.ActionBar;
 import org.telegram.ui.ActionBar.ActionBarMenu;
@@ -80,7 +79,7 @@ public boolean onFragmentCreate() {
     public View createView(final Context context) {
         // TODO add real icon
         // set up action bar
-        tvUserVoteCount = PollgramUtils.init(actionBar, decision.getTitle(), R.drawable.check_list);
+        tvUserVoteCount = UIUtils.init(actionBar, decision.getTitle(), R.drawable.check_list);
         menu = actionBar.createMenu();
         ActionBarMenuItem headerItem = menu.addItem(0, R.drawable.ic_ab_other);
         menuCloseDecisionItem = headerItem.addSubItem(ID_CLOSE_DECISOIN, context.getString(R.string.closeDecision), 0);
@@ -91,7 +90,7 @@ public View createView(final Context context) {
         actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick() {
             @Override
             public void onItemClick(int id) {
-                if (id == -1) {
+                if (id == UIUtils.ACTION_BAR_BACK_ITEM_ID) {
                     finishFragment();
                     return;
                 }
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/ic_add_white_24dp.png b/TMessagesProj/src/main/res/drawable-hdpi/ic_add_white_24dp.png
new file mode 100644
index 000000000..694179bd4
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/ic_add_white_24dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/ic_arrow_back_white_24dp.png b/TMessagesProj/src/main/res/drawable-hdpi/ic_arrow_back_white_24dp.png
new file mode 100644
index 000000000..cd1972677
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/ic_arrow_back_white_24dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/ic_arrow_forward_white_24dp.png b/TMessagesProj/src/main/res/drawable-hdpi/ic_arrow_forward_white_24dp.png
new file mode 100644
index 000000000..b8c16a383
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/ic_arrow_forward_white_24dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/ic_done_white_36dp.png b/TMessagesProj/src/main/res/drawable-hdpi/ic_done_white_36dp.png
new file mode 100644
index 000000000..e389d2535
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/ic_done_white_36dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/ic_add_white_24dp.png b/TMessagesProj/src/main/res/drawable-mdpi/ic_add_white_24dp.png
new file mode 100644
index 000000000..3856041d7
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/ic_add_white_24dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/ic_arrow_back_white_24dp.png b/TMessagesProj/src/main/res/drawable-mdpi/ic_arrow_back_white_24dp.png
new file mode 100644
index 000000000..4ef72eec9
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/ic_arrow_back_white_24dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/ic_arrow_forward_white_24dp.png b/TMessagesProj/src/main/res/drawable-mdpi/ic_arrow_forward_white_24dp.png
new file mode 100644
index 000000000..552d40ded
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/ic_arrow_forward_white_24dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/ic_done_white_36dp.png b/TMessagesProj/src/main/res/drawable-mdpi/ic_done_white_36dp.png
new file mode 100644
index 000000000..c278b6c2b
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/ic_done_white_36dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/ic_add_white_24dp.png b/TMessagesProj/src/main/res/drawable-xhdpi/ic_add_white_24dp.png
new file mode 100644
index 000000000..67bb598e5
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/ic_add_white_24dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/ic_arrow_back_white_24dp.png b/TMessagesProj/src/main/res/drawable-xhdpi/ic_arrow_back_white_24dp.png
new file mode 100644
index 000000000..832f5a361
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/ic_arrow_back_white_24dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/ic_arrow_forward_white_24dp.png b/TMessagesProj/src/main/res/drawable-xhdpi/ic_arrow_forward_white_24dp.png
new file mode 100644
index 000000000..878b6e5e8
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/ic_arrow_forward_white_24dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/ic_done_white_36dp.png b/TMessagesProj/src/main/res/drawable-xhdpi/ic_done_white_36dp.png
new file mode 100644
index 000000000..0ebb55559
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/ic_done_white_36dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_add_white_24dp.png b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_add_white_24dp.png
new file mode 100644
index 000000000..0fdced8fc
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_add_white_24dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_arrow_back_white_24dp.png b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_arrow_back_white_24dp.png
new file mode 100644
index 000000000..32a6d91ce
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_arrow_back_white_24dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_arrow_forward_white_24dp.png b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_arrow_forward_white_24dp.png
new file mode 100644
index 000000000..8c4c394e4
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_arrow_forward_white_24dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/ic_done_white_36dp.png b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_done_white_36dp.png
new file mode 100644
index 000000000..200dc7330
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/ic_done_white_36dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_add_white_24dp.png b/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_add_white_24dp.png
new file mode 100644
index 000000000..d64c22e9e
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_add_white_24dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_arrow_back_white_24dp.png b/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_arrow_back_white_24dp.png
new file mode 100644
index 000000000..e27034d67
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_arrow_back_white_24dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_arrow_forward_white_24dp.png b/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_arrow_forward_white_24dp.png
new file mode 100644
index 000000000..5e93f8862
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_arrow_forward_white_24dp.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_done_white_36dp.png b/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_done_white_36dp.png
new file mode 100644
index 000000000..bfd7b82aa
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxxhdpi/ic_done_white_36dp.png differ
diff --git a/TMessagesProj/src/main/res/layout/item_add_new_option_list.xml b/TMessagesProj/src/main/res/layout/item_add_new_option_list.xml
new file mode 100644
index 000000000..159b82f6c
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/item_add_new_option_list.xml
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:padding="10dp"
+    android:layout_height="match_parent">
+
+
+    <Button
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/new_option"
+        android:drawableLeft="@drawable/ic_add_white_24dp"
+        android:id="@+id/new_option_add_button"
+        android:layout_alignParentTop="true"
+        android:layout_centerHorizontal="true" />
+</RelativeLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/item_new_option_list.xml b/TMessagesProj/src/main/res/layout/item_new_option_list.xml
new file mode 100644
index 000000000..b512590e5
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/item_new_option_list.xml
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:padding="10dp"
+    android:layout_height="match_parent">
+
+    <ImageView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="@drawable/option"
+        android:paddingRight="10dp"
+        android:id="@+id/imageView" />
+
+    <EditText
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/new_option_ed_title"
+        android:hint="@string/insert_the_title_here"
+        android:singleLine = "true"
+        android:layout_alignBottom="@+id/imageView"
+        android:layout_toRightOf="@+id/imageView"
+        android:layout_below="@+id/new_option_tv_title"
+        android:layout_alignRight="@+id/new_option_ed_long_description"
+        android:layout_alignEnd="@+id/new_option_ed_long_description" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textAppearance="?android:attr/textAppearanceMedium"
+        android:text="@string/notes"
+        android:id="@+id/new_option_tv_notes"
+        android:layout_below="@+id/imageView"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true" />
+
+    <EditText
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/new_option_ed_long_description"
+        android:hint="@string/insert_the_long_description_here"
+        android:layout_below="@+id/new_option_tv_notes"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_toLeftOf="@+id/new_option_delete_button"
+        android:layout_toStartOf="@+id/new_option_delete_button" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textAppearance="?android:attr/textAppearanceMedium"
+        android:text="@string/title"
+        android:id="@+id/new_option_tv_title"
+        android:layout_alignLeft="@+id/new_option_ed_title"
+        android:layout_alignStart="@+id/new_option_ed_title"
+        android:layout_alignParentRight="true"
+        android:layout_alignParentEnd="true"
+        android:layout_alignParentTop="true" />
+
+    <ImageButton
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/new_option_delete_button"
+        android:background="@drawable/ic_ab_fwd_delete"
+        android:layout_below="@+id/new_option_ed_title"
+        android:layout_alignParentRight="true"
+        android:layout_alignParentEnd="true" />
+
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/new_decision_layout.xml b/TMessagesProj/src/main/res/layout/new_decision_layout.xml
deleted file mode 100644
index 3509b8411..000000000
--- a/TMessagesProj/src/main/res/layout/new_decision_layout.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical" android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-</LinearLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/new_decision_step1_layout.xml b/TMessagesProj/src/main/res/layout/new_decision_step1_layout.xml
new file mode 100644
index 000000000..ba425f896
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/new_decision_step1_layout.xml
@@ -0,0 +1,62 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:padding="10dp"
+    android:layout_height="match_parent">
+
+    <ImageView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="@drawable/check_list"
+        android:paddingRight="10dp"
+        android:id="@+id/imageView" />
+
+    <EditText
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/new_decision_ed_title"
+        android:singleLine = "true"
+        android:hint="@string/insert_the_title_here"
+        android:layout_alignBottom="@+id/imageView"
+        android:layout_alignRight="@+id/new_decision_ed_long_description"
+        android:layout_alignEnd="@+id/new_decision_ed_long_description"
+        android:layout_toEndOf="@+id/imageView"
+        android:layout_toRightOf="@+id/imageView"
+        android:layout_below="@+id/new_decision_tv_title" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textAppearance="?android:attr/textAppearanceMedium"
+        android:text="@string/notes"
+        android:id="@+id/new_decision_tv_notes"
+        android:layout_marginTop="25dp"
+        android:layout_below="@+id/imageView"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true" />
+
+    <EditText
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/new_decision_ed_long_description"
+        android:hint="@string/insert_the_long_description_here"
+        android:layout_below="@+id/new_decision_tv_notes"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentRight="true"
+        android:layout_alignParentEnd="true" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textAppearance="?android:attr/textAppearanceMedium"
+        android:text="@string/title"
+        android:id="@+id/new_decision_tv_title"
+        android:layout_alignLeft="@+id/new_decision_ed_title"
+        android:layout_alignStart="@+id/new_decision_ed_title"
+        android:layout_alignParentRight="true"
+        android:layout_alignParentEnd="true"
+        android:layout_alignParentTop="true" />
+
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/new_decision_step2_layout.xml b/TMessagesProj/src/main/res/layout/new_decision_step2_layout.xml
new file mode 100644
index 000000000..ee68a3b89
--- /dev/null
+++ b/TMessagesProj/src/main/res/layout/new_decision_step2_layout.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ListView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/new_decisions_option_list_view"
+        android:descendantFocusability="beforeDescendants"
+        android:layout_weight="1" />
+</LinearLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values/strings.xml b/TMessagesProj/src/main/res/values/strings.xml
index f912c2151..ad487f486 100644
--- a/TMessagesProj/src/main/res/values/strings.xml
+++ b/TMessagesProj/src/main/res/values/strings.xml
@@ -953,33 +953,6 @@
     <string name="updateBuild">614</string>
 
     <!-- START of Pollgram text -->
-    <string name="howManyMemberVote">%1$d on %2$d have voted yet</string>
-    <string name="createdByUserOnDayNewLine">Created by %1$s \non %2$s</string>
-    <string name="createdByUserOnDay">Created by %1$s on %2$s</string>
-    <string name="decisionStatus">Decision is %1$s</string>
-    <string name="statusOpen">open</string>
-    <string name="statusClose">close</string>
-    <string name="groupDecision">Group decisions</string>
-    <string name="decisionsCount">%1$d open, %2$d closed</string>
-
-    <string name="viewCloseDecision">View closed decision</string>
-    <string name="hideCloseDecision">Hide closed decision</string>
-
-    <string name="optionTabName">Options</string>
-    <string name="tableViewTabName">Table View</string>
-    <string name="saveVotes">Save votes</string>
-    <string name="voteSaved">Vote saved</string>
-    <string name="no_vote_desc">\?</string>
-    <string name="noOptionPresent">There are no option\n for this decision</string>
-    <string name="remindToUserSent">Remind sent to %1$s</string>
-    <string name="closeDecision">Close Decision</string>
-    <string name="reopenDecision">Reopen decision</string>
-    <string name="deleteDecision">Delete decision</string>
-    <string name="decisionClosed">Decision closed</string>
-    <string name="decisionReopened">Decision reopened</string>
-    <string name="decisionDeleted">Decision deleted</string>
-    <string name="decisionNotFound">Decision %1$s not found, it may has been deleted.</string>
-
 
     <!-- START of POLLGRAM transaction messages -->
     <string name="downloadPollgramFromMarket">Install Pollgram at </string>
@@ -1025,9 +998,52 @@
     <string name="MessageType_CLOSE_DECISION">Close decision</string>
     <string name="MessageType_REOPEN_DECISION">Reopen decision</string>
     <string name="MessageType_DELETE_DECISION">Delete decision</string>
-    <string name="deleteDecisionQuestion">Are you sure you want to delete this decision ? This will remove this decision for ALL users involved, not just yourself.</string>
     <!-- END MessageType descriptions -->
 
+
+
+    <string name="howManyMemberVote">%1$d on %2$d have voted yet</string>
+    <string name="createdByUserOnDayNewLine">Created by %1$s \non %2$s</string>
+    <string name="createdByUserOnDay">Created by %1$s on %2$s</string>
+    <string name="decisionStatus">Decision is %1$s</string>
+    <string name="statusOpen">open</string>
+    <string name="statusClose">close</string>
+    <string name="groupDecision">Group decisions</string>
+    <string name="decisionsCount">%1$d open, %2$d closed</string>
+
+    <string name="viewCloseDecision">View closed decision</string>
+    <string name="hideCloseDecision">Hide closed decision</string>
+
+    <string name="optionTabName">Options</string>
+    <string name="tableViewTabName">Table View</string>
+    <string name="saveVotes">Save votes</string>
+    <string name="voteSaved">Vote saved</string>
+    <string name="no_vote_desc">\?</string>
+    <string name="noOptionPresent">There are no option\n for this decision</string>
+    <string name="remindToUserSent">Remind sent to %1$s</string>
+    <string name="closeDecision">Close Decision</string>
+    <string name="reopenDecision">Reopen decision</string>
+    <string name="deleteDecision">Delete decision</string>
+    <string name="decisionClosed">Decision closed</string>
+    <string name="decisionReopened">Decision reopened</string>
+    <string name="decisionDeleted">Decision deleted</string>
+    <string name="decisionNotFound">Decision %1$s not found, it may has been deleted.</string>
+    <string name="title">Title</string>
+    <string name="notes">Notes</string>
+    <string name="deleteDecisionQuestion">Are you sure you want to delete this decision ? This will remove this decision for ALL users involved, not just yourself.</string>
+    <string name="insert_the_title_here">Insert the title here</string>
+    <string name="insert_the_long_description_here">Insert the long description here</string>
+    <string name="new_decision">New decision</string>
+    <string name="select_options">Select options</string>
+    <string name="please_select_a_title">Please select a title</string>
+    <string name="decisionSaved">Decision has been saved</string>
+    <string name="new_option">New Option</string>
+    <string name="please_select_a_title_for_option">Pleace select a value for the title of the last option, before adding a new one</string>
+    <string name="decisionAlreadyExist">Already exist a decision with this title on the current group !</string>
+    <string name="emptyTitleOnOption">Please select a title for the %1$d option.</string>
+    <string name="saveDecisionQuestion">Save decision %1$s with %2$d options ?</string>
+    <string name="you">you</string>
+
     <!-- END of Pollgram text -->
 
 </resources>
\ No newline at end of file
diff --git a/TMessagesProj/src/test/java/org/pollgram/decision/service/MessagesManagerTest.java b/TMessagesProj/src/test/java/org/pollgram/decision/service/MessagesManagerTest.java
index 3a662f8b0..30d8b06eb 100644
--- a/TMessagesProj/src/test/java/org/pollgram/decision/service/MessagesManagerTest.java
+++ b/TMessagesProj/src/test/java/org/pollgram/decision/service/MessagesManagerTest.java
@@ -117,15 +117,18 @@ public void testSendRemind() throws ParseException {
 
     @Test
     public void testNewDecision() throws ParseException, PollgramParseException {
-        List<Option> options = dao.getOptions(decision);
-        String message = messageManager.buildNotifyNewDecision(decision, options);
-
-        PollgramMessagesManager.MessageType type = messageManager.getMessageType(message);
-        Assert.assertEquals(type, PollgramMessagesManager.MessageType.NEW_DECISION);
+        for (Decision decision : dao.getDecisions(chat.id, null)) {
+            if (!decision.isOpen())
+                continue;
+            List<Option> options = dao.getOptions(decision);
+            String message = messageManager.buildNotifyNewDecision(decision, options);
 
-        assertNewDecision(decision, options, message);
-        assertNewDecision(decision, options, messageManager.reformatMessage(message));
+            PollgramMessagesManager.MessageType type = messageManager.getMessageType(message);
+            Assert.assertEquals(type, PollgramMessagesManager.MessageType.NEW_DECISION);
 
+            assertNewDecision(decision, options, message);
+            assertNewDecision(decision, options, messageManager.reformatMessage(message));
+        }
     }
 
     private void assertNewDecision(Decision decision, List<Option> options, String message) throws PollgramParseException {
diff --git a/TMessagesProj/src/test/java/org/pollgram/decision/service/PollgramDAOTestImpl.java b/TMessagesProj/src/test/java/org/pollgram/decision/service/PollgramDAOTestImpl.java
index a25edb7ae..1accb7f7b 100644
--- a/TMessagesProj/src/test/java/org/pollgram/decision/service/PollgramDAOTestImpl.java
+++ b/TMessagesProj/src/test/java/org/pollgram/decision/service/PollgramDAOTestImpl.java
@@ -33,8 +33,8 @@
         Date date = new Date();
 
         decisions.add(new Decision(id++,chatId, creatorId,"what present do we buy ?", id+"huge bla bla bla",date ,true));
-        decisions.add(new Decision(id++, chatId, creatorId, "Where do we go ?", id + "huge bla bla bla",date, true));
-        decisions.add(new Decision(id++, chatId, creatorId, "When will the party be ?", id + "huge bla bla bla",date, true));
+        decisions.add(new Decision(id++, chatId, creatorId, "Where do we go ?", "",date, true));
+        decisions.add(new Decision(id++, chatId, creatorId, "When will the party be ?", null,date, true));
         decisions.add(new Decision(id++, chatId, creatorId, "Do we add Slomp to the group ?", id + "huge bla bla bla",date, false));
 
         textOptions.add(new TextOption(id++, "Ski", "They cost 385EUR i saw them at the corner shop", decisions.get(0).getId()));
