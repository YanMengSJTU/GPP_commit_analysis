diff --git a/TMessagesProj/src/main/AndroidManifest.xml b/TMessagesProj/src/main/AndroidManifest.xml
index 6a5a4e0cd..aaeb59d44 100644
--- a/TMessagesProj/src/main/AndroidManifest.xml
+++ b/TMessagesProj/src/main/AndroidManifest.xml
@@ -502,9 +502,9 @@
         <meta-data
                 android:name="com.google.android.gms.car.notification.SmallIcon"
                 android:resource="@drawable/ic_player"/>
-        <meta-data
-                android:name="com.google.android.gms.car.application"
-                android:resource="@xml/automotive_app_desc"/>
+        <!--<meta-data-->
+                <!--android:name="com.google.android.gms.car.application"-->
+                <!--android:resource="@xml/automotive_app_desc"/>-->
         <meta-data
                 android:name="com.google.android.gms.vision.DEPENDENCIES"
                 android:value="face"/>
diff --git a/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java b/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java
index 78e327741..8d216e975 100644
--- a/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java
+++ b/TMessagesProj/src/main/java/io/bettergram/adapters/CryptoAdapter.java
@@ -107,7 +107,7 @@ public void onRefresh(PullRefreshLayout ptrLayout) {
         if (this.ptrLayout == null) {
             this.ptrLayout = ptrLayout;
         }
-        startService(activity);
+        startService();
     }
 
     @Override
@@ -549,12 +549,17 @@ public SpannableStringBuilder formatHeaderValue(Context context, String s1, Stri
         return spanBuilder.build();
     }
 
-    public void startService(Activity activity) {
+    public void startService() {
+        CryptoCurrencyDataService.isCurrentActive = true;
         Intent intent = new Intent(activity, CryptoCurrencyDataService.class);
         intent.putExtra(EXTRA_LIMIT, 100);
         activity.startService(intent);
     }
 
+    public void pauseService() {
+        CryptoCurrencyDataService.isCurrentActive = false;
+    }
+
     /**
      * Register {@link BroadcastReceiver} of {@link CryptoCurrencyDataService}
      */
diff --git a/TMessagesProj/src/main/java/io/bettergram/service/CryptoCurrencyDataService.java b/TMessagesProj/src/main/java/io/bettergram/service/CryptoCurrencyDataService.java
index 9e6ff519c..21ddf7f9f 100644
--- a/TMessagesProj/src/main/java/io/bettergram/service/CryptoCurrencyDataService.java
+++ b/TMessagesProj/src/main/java/io/bettergram/service/CryptoCurrencyDataService.java
@@ -4,6 +4,7 @@
 import android.content.Intent;
 import android.content.SharedPreferences;
 import android.support.annotation.Nullable;
+import android.util.Log;
 
 import java.io.IOException;
 import java.util.ArrayList;
@@ -49,6 +50,7 @@
     public static final String EXTRA_LIMIT = "EXTRA_LIMIT";
     public static final String EXTRA_FAVORITE = "EXTRA_FAVORITE";
     public static final String EXTRA__CURRENCY = "EXTRA__CURRENCY";
+    public static final String EXTRA_RUN_FROM_START = "EXTRA_RUN_FROM_START";
 
     public static final String RESULT = "result";
     public static final String NOTIFICATION = "io.bettergram.service.CryptoCurrencyDataService";
@@ -57,6 +59,7 @@
     public static final String CURRENCY_COINS_URL = "https://http-api.livecoinwatch.com/bettergram/coins";
     public static final String CURRENCY_STATS_URL = "https://http-api.livecoinwatch.com/stats";
 
+    public static boolean isCurrentActive = false;
     private static final OkHttpClient client = okhttp_client();
     public static final int notify = 60000;
     private Timer mTimer = null;
@@ -87,8 +90,7 @@ protected void onHandleIntent(@Nullable Intent intent) {
                 canStart = false;
             } catch (IllegalStateException e) {
                 e.printStackTrace();
-                String savedCryptoInfoJson = preferences
-                        .getString(KEY_CRYPTO_CURRENCIES_SAVED, null);
+                String savedCryptoInfoJson = preferences.getString(KEY_CRYPTO_CURRENCIES_SAVED, null);
                 if (!isEmpty(savedCryptoInfoJson)) {
                     NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateCurrencyData, savedCryptoInfoJson);
                 }
@@ -128,93 +130,96 @@ private void startTimer(Intent intent) {
 
         @Override
         public void run() {
-            String savedCryptoInfoJson = preferences.getString(KEY_CRYPTO_CURRENCIES_SAVED, null);
-            if (!isEmpty(savedCryptoInfoJson)) {
-                NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateCurrencyData, savedCryptoInfoJson);
-            }
+            final boolean runFromStart = preferences.getBoolean(EXTRA_RUN_FROM_START, false);
+            if (runFromStart || isCurrentActive) {
+                String savedCryptoInfoJson = preferences.getString(KEY_CRYPTO_CURRENCIES_SAVED, null);
+                if (!isEmpty(savedCryptoInfoJson)) {
+                    NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateCurrencyData, savedCryptoInfoJson);
+                }
 
-            boolean fetchCryptoCurrencies = intent.getBooleanExtra(KEY_CRYPTO_CURRENCIES, false);
-            String savedCryptoJson = preferences.getString(KEY_CRYPTO_CURRENCIES, null);
-            List<CryptoCurrency> currencies = new ArrayList<>();
+                boolean fetchCryptoCurrencies = intent.getBooleanExtra(KEY_CRYPTO_CURRENCIES, false);
+                String savedCryptoJson = preferences.getString(KEY_CRYPTO_CURRENCIES, null);
+                List<CryptoCurrency> currencies = new ArrayList<>();
+                Log.e("test", "Point A");
+                if (fetchCryptoCurrencies || isEmpty(savedCryptoJson)) {
+                    Log.e("test", "Point B");
+                    Request request = new Request.Builder().url(CURRENCY_URL).build();
+                    try {
+                        Response response = okhttp_client().newCall(request).execute();
+
+                        if (response.isSuccessful() && response.body() != null) {
+                            String fetchedCryptoJson = response.body().string();
+                            preferences.edit().putString(KEY_CRYPTO_CURRENCIES, fetchedCryptoJson).apply();
+                            savedCryptoJson = fetchedCryptoJson;
+                        } else {
+                            if (response.code() == 410) {
+                                NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateToLatestApiVersion);
+                            }
+                        }
+                    } catch (IOException e) {
+                        e.printStackTrace();
+                    }
+                }
 
-            if (fetchCryptoCurrencies || isEmpty(savedCryptoJson)) {
-                Request request = new Request.Builder().url(CURRENCY_URL).build();
                 try {
-                    Response response = okhttp_client().newCall(request).execute();
-
-                    if (response.isSuccessful() && response.body() != null) {
-                        String fetchedCryptoJson = response.body().string();
-                        preferences.edit().putString(KEY_CRYPTO_CURRENCIES, fetchedCryptoJson).apply();
-                        savedCryptoJson = fetchedCryptoJson;
-                    } else {
-                        if (response.code() == 410) {
-                            NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateToLatestApiVersion);
-                        }
+                    if (!isEmpty(savedCryptoJson)) {
+                        CryptoCurrencyData currencyData = CryptoCurrencyData__JsonHelper.parseFromJson(savedCryptoJson);
+                        currencies.addAll(currencyData.data);
                     }
                 } catch (IOException e) {
                     e.printStackTrace();
                 }
-            }
-
-            try {
-                if (!isEmpty(savedCryptoJson)) {
-                    CryptoCurrencyData currencyData = CryptoCurrencyData__JsonHelper
-                            .parseFromJson(savedCryptoJson);
-                    currencies.addAll(currencyData.data);
-                }
-            } catch (IOException e) {
-                e.printStackTrace();
-            }
-
-            String sortBy = intent.getStringExtra(EXTRA_SORT_BY);
-            String orderBy = intent.getStringExtra(EXTRA_ORDER_BY);
-            int offset = intent.getIntExtra(EXTRA_OFFSET, 0);
-            int limit = intent.getIntExtra(EXTRA_LIMIT, 10);
-            String favorites = intent.getStringExtra(EXTRA_FAVORITE);
-            String currency = intent.getStringExtra(EXTRA__CURRENCY);
-
-            HttpUrl.Builder urlBuilder = Objects.requireNonNull(HttpUrl.parse(CURRENCY_COINS_URL)).newBuilder();
-            urlBuilder.addQueryParameter("sort", !isEmpty(sortBy) ? sortBy : "rank");
-            urlBuilder.addQueryParameter("order", !isEmpty(orderBy) ? orderBy : "ascending");
-            urlBuilder.addQueryParameter("offset", String.valueOf(offset));
-            urlBuilder.addQueryParameter("limit", String.valueOf(limit));
-            urlBuilder.addQueryParameter("favorites", !isEmpty(favorites) ? favorites : String.valueOf(false));
-            urlBuilder.addQueryParameter("currency", currency);
-
-            CurrencyApi.cancelCallsByTag("request_currency_coins");
-            String url = urlBuilder.build().toString();
-            Request request = new Request.Builder().tag("request_currency_coins").url(url).build();
-
-            okhttp_client().newCall(request).enqueue(new Callback() {
-                @Override
-                public void onFailure(Call call, IOException e) {
-                }
+                Log.e("test", "Point C");
+                String sortBy = intent.getStringExtra(EXTRA_SORT_BY);
+                String orderBy = intent.getStringExtra(EXTRA_ORDER_BY);
+                int offset = intent.getIntExtra(EXTRA_OFFSET, 0);
+                int limit = intent.getIntExtra(EXTRA_LIMIT, 10);
+                String favorites = intent.getStringExtra(EXTRA_FAVORITE);
+                String currency = intent.getStringExtra(EXTRA__CURRENCY);
+
+                HttpUrl.Builder urlBuilder = Objects.requireNonNull(HttpUrl.parse(CURRENCY_COINS_URL)).newBuilder();
+                urlBuilder.addQueryParameter("sort", !isEmpty(sortBy) ? sortBy : "rank");
+                urlBuilder.addQueryParameter("order", !isEmpty(orderBy) ? orderBy : "ascending");
+                urlBuilder.addQueryParameter("offset", String.valueOf(offset));
+                urlBuilder.addQueryParameter("limit", String.valueOf(limit));
+                urlBuilder.addQueryParameter("favorites", !isEmpty(favorites) ? favorites : String.valueOf(false));
+                urlBuilder.addQueryParameter("currency", currency);
+
+                CurrencyApi.cancelCallsByTag("request_currency_coins");
+                String url = urlBuilder.build().toString();
+                Request request = new Request.Builder().tag("request_currency_coins").url(url).build();
+
+                okhttp_client().newCall(request).enqueue(new Callback() {
+                    @Override
+                    public void onFailure(Call call, IOException e) {
+                    }
 
-                @Override
-                public void onResponse(Call call, Response response) throws IOException {
-                    if (!call.isCanceled() && response != null && response.isSuccessful() && response.body() != null) {
-                        String fetchedCurrencyJson = response.body().string();
-                        CryptoCurrencyInfoResponse cryptoResponse = CryptoCurrencyInfoResponse__JsonHelper.parseFromJson(fetchedCurrencyJson);
-                        cryptoResponse.data.list = addIcons(cryptoResponse.data.list, currencies);
-                        String savedFaveCryptoJson = preferences.getString(KEY_CRYPTO_CURRENCIES_FAVORITE, null);
-                        if (!isEmpty(savedFaveCryptoJson)) {
-                            CryptoCurrencyInfoData data = CryptoCurrencyInfoData__JsonHelper.parseFromJson(savedFaveCryptoJson);
-                            if (data != null && data.list != null && !data.list.isEmpty()) {
-                                for (int i = 0, size = cryptoResponse.data.list.size(); i < size; i++) {
-                                    final int index = i;
-                                    CryptoCurrencyInfo inf = CollectionUtil.find(data.list,
-                                            item -> cryptoResponse.data.list
-                                                    .get(index).code.equals(item.code));
-                                    cryptoResponse.data.list.get(index).favorite = inf != null;
+                    @Override
+                    public void onResponse(Call call, Response response) throws IOException {
+                        if (!call.isCanceled() && response != null && response.isSuccessful() && response.body() != null) {
+                            String fetchedCurrencyJson = response.body().string();
+                            CryptoCurrencyInfoResponse cryptoResponse = CryptoCurrencyInfoResponse__JsonHelper.parseFromJson(fetchedCurrencyJson);
+                            cryptoResponse.data.list = addIcons(cryptoResponse.data.list, currencies);
+                            String savedFaveCryptoJson = preferences.getString(KEY_CRYPTO_CURRENCIES_FAVORITE, null);
+                            if (!isEmpty(savedFaveCryptoJson)) {
+                                CryptoCurrencyInfoData data = CryptoCurrencyInfoData__JsonHelper.parseFromJson(savedFaveCryptoJson);
+                                if (data != null && data.list != null && !data.list.isEmpty()) {
+                                    for (int i = 0, size = cryptoResponse.data.list.size(); i < size; i++) {
+                                        final int index = i;
+                                        CryptoCurrencyInfo inf = CollectionUtil.find(data.list,
+                                                item -> cryptoResponse.data.list
+                                                        .get(index).code.equals(item.code));
+                                        cryptoResponse.data.list.get(index).favorite = inf != null;
+                                    }
                                 }
                             }
+                            String json = CryptoCurrencyInfoResponse__JsonHelper.serializeToJson(cryptoResponse);
+                            preferences.edit().putString(KEY_CRYPTO_CURRENCIES_SAVED, json).apply();
+                            NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateCurrencyData, json);
                         }
-                        String json = CryptoCurrencyInfoResponse__JsonHelper.serializeToJson(cryptoResponse);
-                        preferences.edit().putString(KEY_CRYPTO_CURRENCIES_SAVED, json).apply();
-                        NotificationCenter.getGlobalInstance().postNotificationName(NotificationCenter.updateCurrencyData, json);
                     }
-                }
-            });
+                });
+            }
         }
     }
 
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java
index 07f48dbb1..b783ea52c 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/ApplicationLoader.java
@@ -13,7 +13,11 @@
 import android.app.AlarmManager;
 import android.app.Application;
 import android.app.PendingIntent;
-import android.content.*;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.content.SharedPreferences;
 import android.content.pm.ApplicationInfo;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
@@ -21,6 +25,7 @@
 import android.os.Handler;
 import android.os.PowerManager;
 import android.text.TextUtils;
+
 import com.crashlytics.android.Crashlytics;
 import com.google.android.gms.common.ConnectionResult;
 import com.google.android.gms.common.GooglePlayServicesNotAvailableException;
@@ -28,6 +33,17 @@
 import com.google.android.gms.common.GooglePlayServicesUtil;
 import com.google.android.gms.security.ProviderInstaller;
 import com.google.firebase.iid.FirebaseInstanceId;
+
+import java.io.File;
+import java.security.KeyManagementException;
+import java.security.NoSuchAlgorithmException;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import java.util.concurrent.TimeUnit;
+
+import javax.net.ssl.SSLContext;
+
 import io.bettergram.service.CryptoCurrencyDataService;
 import io.bettergram.service.NewsDataService;
 import io.bettergram.service.ResourcesDataService;
@@ -41,16 +57,8 @@
 import okhttp3.OkHttpClient;
 import okhttp3.TlsVersion;
 
-import javax.net.ssl.SSLContext;
-import java.io.File;
-import java.security.KeyManagementException;
-import java.security.NoSuchAlgorithmException;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-import java.util.concurrent.TimeUnit;
-
 import static io.bettergram.service.CryptoCurrencyDataService.EXTRA_LIMIT;
+import static io.bettergram.service.CryptoCurrencyDataService.EXTRA_RUN_FROM_START;
 
 public class ApplicationLoader extends Application {
 
@@ -290,6 +298,7 @@ private void updateAndroidSecurityProvider() {
     public static void warmupBettergramData(Activity activity) {
         Intent intent = new Intent(activity, CryptoCurrencyDataService.class);
         intent.putExtra(EXTRA_LIMIT, 100);
+        intent.putExtra(EXTRA_RUN_FROM_START, true);
         activity.startService(intent);
 
         Intent intent2 = new Intent(activity, NewsDataService.class);
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java
index a1673a01a..ac79f268b 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/messenger/MessagesController.java
@@ -6626,7 +6626,7 @@ public int getDialogFavoriteDate(final long did) {
                 return dialogs.get(i).favorite_date;
             }
         }
-        return dialogs_dict.get(did).favorite_date;
+        return dialogs_dict.get(did) != null ? dialogs_dict.get(did).favorite_date : 0;
     }
 
     public boolean pinDialog(long did, boolean pin, TLRPC.InputPeer peer, long taskId) {
@@ -8665,6 +8665,7 @@ public boolean processUpdateArray(ArrayList<TLRPC.Update> updates, final ArrayLi
                         toDbUser.username = update.username;
                         dbUsers.add(toDbUser);
                     } else if (baseUpdate instanceof TLRPC.TL_updateDialogPinned) {
+                        /**
                         TLRPC.TL_updateDialogPinned updateDialogPinned = (TLRPC.TL_updateDialogPinned) baseUpdate;
                         long did;
                         if (updateDialogPinned.peer instanceof TLRPC.TL_dialogPeer) {
@@ -8682,9 +8683,11 @@ public boolean processUpdateArray(ArrayList<TLRPC.Update> updates, final ArrayLi
                         if (!pinDialog(did, updateDialogPinned.pinned, null, -1)) {
                             UserConfig.getInstance(currentAccount).pinnedDialogsLoaded = false;
                             UserConfig.getInstance(currentAccount).saveConfig(false);
-                            //loadPinnedDialogs(did, null);
+                            loadPinnedDialogs(did, null);
                         }
+                         **/
                     } else if (baseUpdate instanceof TLRPC.TL_updatePinnedDialogs) {
+                        /*
                         TLRPC.TL_updatePinnedDialogs update = (TLRPC.TL_updatePinnedDialogs) baseUpdate;
                         UserConfig.getInstance(currentAccount).pinnedDialogsLoaded = false;
                         UserConfig.getInstance(currentAccount).saveConfig(false);
@@ -8712,7 +8715,8 @@ public boolean processUpdateArray(ArrayList<TLRPC.Update> updates, final ArrayLi
                         } else {
                             order = null;
                         }
-                        //loadPinnedDialogs(0, order);
+                        loadPinnedDialogs(0, order);
+                        */
                     } else if (baseUpdate instanceof TLRPC.TL_updateUserPhoto) {
                         TLRPC.TL_updateUserPhoto update = (TLRPC.TL_updateUserPhoto) baseUpdate;
                         final TLRPC.User currentUser = getUser(update.user_id);
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/tgnet/ConnectionsManager.java b/TMessagesProj/src/main/java/io/bettergram/telegram/tgnet/ConnectionsManager.java
index 5479d1eca..59a746e71 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/tgnet/ConnectionsManager.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/tgnet/ConnectionsManager.java
@@ -16,7 +16,6 @@
 import android.telephony.TelephonyManager;
 import android.text.TextUtils;
 import android.util.Base64;
-import android.util.Log;
 
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
@@ -426,14 +425,11 @@ public static void onUnparsedMessageReceived(long address, final int currentAcco
                 if (BuildVars.LOGS_ENABLED) {
                     FileLog.d("java received " + message);
                 }
-                Log.e("test", "the fucking flags: " + ((TLRPC.Updates) message).flags);
                 KeepAliveJob.finishJob();
                 Utilities.stageQueue.postRunnable(new Runnable() {
                     @Override
                     public void run() {
-                        if (((TLRPC.Updates) message).flags != 0) {
-                            MessagesController.getInstance(currentAccount).processUpdates((TLRPC.Updates) message, false);
-                        }
+                        MessagesController.getInstance(currentAccount).processUpdates((TLRPC.Updates) message, false);
                     }
                 });
             }
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/ChatActivity.java
index a6bb1d733..3ce4f90bf 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/ChatActivity.java
@@ -18,11 +18,23 @@
 import android.app.Activity;
 import android.app.DatePickerDialog;
 import android.app.Dialog;
-import android.content.*;
+import android.content.ClipData;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.SharedPreferences;
 import android.content.pm.PackageManager;
 import android.content.res.Configuration;
-import android.graphics.*;
+import android.graphics.Bitmap;
+import android.graphics.Canvas;
+import android.graphics.Outline;
+import android.graphics.Paint;
+import android.graphics.Path;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffColorFilter;
+import android.graphics.PorterDuffXfermode;
 import android.graphics.Rect;
+import android.graphics.Typeface;
 import android.graphics.drawable.Drawable;
 import android.media.ThumbnailUtils;
 import android.net.Uri;
@@ -30,45 +42,142 @@
 import android.os.Bundle;
 import android.provider.MediaStore;
 import android.support.v4.content.FileProvider;
-import android.text.*;
+import android.text.Spannable;
+import android.text.SpannableString;
+import android.text.SpannableStringBuilder;
+import android.text.Spanned;
+import android.text.TextUtils;
 import android.text.style.CharacterStyle;
 import android.text.style.ClickableSpan;
 import android.text.style.ForegroundColorSpan;
 import android.text.style.URLSpan;
-import android.util.*;
-import android.view.*;
+import android.util.LongSparseArray;
+import android.util.SparseArray;
+import android.util.SparseBooleanArray;
+import android.util.SparseIntArray;
+import android.util.TypedValue;
+import android.view.Gravity;
+import android.view.HapticFeedbackConstants;
+import android.view.Menu;
+import android.view.MotionEvent;
+import android.view.TextureView;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.ViewOutlineProvider;
+import android.view.ViewTreeObserver;
 import android.view.animation.DecelerateInterpolator;
-import android.widget.*;
+import android.widget.DatePicker;
+import android.widget.EditText;
+import android.widget.FrameLayout;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+import android.widget.Toast;
+
 import com.google.android.exoplayer2.ui.AspectRatioFrameLayout;
+
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileWriter;
+import java.net.URLDecoder;
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.concurrent.CountDownLatch;
+import java.util.regex.Matcher;
+
 import io.bettergram.messenger.BuildConfig;
 import io.bettergram.messenger.R;
 import io.bettergram.telegram.PhoneFormat.PhoneFormat;
-import io.bettergram.telegram.messenger.*;
+import io.bettergram.telegram.messenger.AndroidUtilities;
+import io.bettergram.telegram.messenger.ApplicationLoader;
+import io.bettergram.telegram.messenger.BuildVars;
+import io.bettergram.telegram.messenger.ChatObject;
+import io.bettergram.telegram.messenger.ContactsController;
+import io.bettergram.telegram.messenger.DataQuery;
+import io.bettergram.telegram.messenger.DownloadController;
+import io.bettergram.telegram.messenger.Emoji;
+import io.bettergram.telegram.messenger.EmojiSuggestion;
+import io.bettergram.telegram.messenger.FileLoader;
+import io.bettergram.telegram.messenger.FileLog;
+import io.bettergram.telegram.messenger.ImageReceiver;
+import io.bettergram.telegram.messenger.LocaleController;
 import io.bettergram.telegram.messenger.MediaController;
+import io.bettergram.telegram.messenger.MessageObject;
+import io.bettergram.telegram.messenger.MessagesController;
+import io.bettergram.telegram.messenger.MessagesStorage;
+import io.bettergram.telegram.messenger.NotificationCenter;
+import io.bettergram.telegram.messenger.NotificationsController;
+import io.bettergram.telegram.messenger.SecretChatHelper;
+import io.bettergram.telegram.messenger.SendMessagesHelper;
+import io.bettergram.telegram.messenger.SharedConfig;
+import io.bettergram.telegram.messenger.UserConfig;
+import io.bettergram.telegram.messenger.UserObject;
+import io.bettergram.telegram.messenger.Utilities;
+import io.bettergram.telegram.messenger.VideoEditedInfo;
 import io.bettergram.telegram.messenger.browser.Browser;
 import io.bettergram.telegram.messenger.support.SparseLongArray;
-import io.bettergram.telegram.messenger.support.widget.*;
+import io.bettergram.telegram.messenger.support.widget.GridLayoutManager;
+import io.bettergram.telegram.messenger.support.widget.GridLayoutManagerFixed;
+import io.bettergram.telegram.messenger.support.widget.LinearLayoutManager;
+import io.bettergram.telegram.messenger.support.widget.LinearSmoothScrollerMiddle;
+import io.bettergram.telegram.messenger.support.widget.RecyclerView;
 import io.bettergram.telegram.tgnet.ConnectionsManager;
 import io.bettergram.telegram.tgnet.TLRPC;
-import io.bettergram.telegram.ui.ActionBar.*;
+import io.bettergram.telegram.ui.ActionBar.ActionBar;
+import io.bettergram.telegram.ui.ActionBar.ActionBarLayout;
+import io.bettergram.telegram.ui.ActionBar.ActionBarMenu;
+import io.bettergram.telegram.ui.ActionBar.ActionBarMenuItem;
+import io.bettergram.telegram.ui.ActionBar.AlertDialog;
+import io.bettergram.telegram.ui.ActionBar.BackDrawable;
+import io.bettergram.telegram.ui.ActionBar.BaseFragment;
+import io.bettergram.telegram.ui.ActionBar.BottomSheet;
+import io.bettergram.telegram.ui.ActionBar.SimpleTextView;
+import io.bettergram.telegram.ui.ActionBar.Theme;
+import io.bettergram.telegram.ui.ActionBar.ThemeDescription;
 import io.bettergram.telegram.ui.Adapters.MentionsAdapter;
 import io.bettergram.telegram.ui.Adapters.StickersAdapter;
-import io.bettergram.telegram.ui.Cells.*;
-import io.bettergram.telegram.ui.Components.*;
+import io.bettergram.telegram.ui.Cells.BotHelpCell;
+import io.bettergram.telegram.ui.Cells.BotSwitchCell;
+import io.bettergram.telegram.ui.Cells.ChatActionCell;
+import io.bettergram.telegram.ui.Cells.ChatLoadingCell;
+import io.bettergram.telegram.ui.Cells.ChatMessageCell;
+import io.bettergram.telegram.ui.Cells.ChatUnreadCell;
+import io.bettergram.telegram.ui.Cells.CheckBoxCell;
+import io.bettergram.telegram.ui.Cells.ContextLinkCell;
+import io.bettergram.telegram.ui.Cells.MentionCell;
+import io.bettergram.telegram.ui.Cells.StickerCell;
+import io.bettergram.telegram.ui.Components.AlertsCreator;
+import io.bettergram.telegram.ui.Components.BackupImageView;
+import io.bettergram.telegram.ui.Components.ChatActivityEnterView;
+import io.bettergram.telegram.ui.Components.ChatAttachAlert;
+import io.bettergram.telegram.ui.Components.ChatAvatarContainer;
+import io.bettergram.telegram.ui.Components.ChatBigEmptyView;
+import io.bettergram.telegram.ui.Components.CombinedDrawable;
+import io.bettergram.telegram.ui.Components.CorrectlyMeasuringTextView;
+import io.bettergram.telegram.ui.Components.EmbedBottomSheet;
+import io.bettergram.telegram.ui.Components.EmojiView;
+import io.bettergram.telegram.ui.Components.ExtendedGridLayoutManager;
+import io.bettergram.telegram.ui.Components.FragmentContextView;
+import io.bettergram.telegram.ui.Components.InstantCameraView;
+import io.bettergram.telegram.ui.Components.LayoutHelper;
+import io.bettergram.telegram.ui.Components.NumberTextView;
+import io.bettergram.telegram.ui.Components.PipRoundVideoView;
+import io.bettergram.telegram.ui.Components.RadialProgressView;
+import io.bettergram.telegram.ui.Components.RecyclerListView;
+import io.bettergram.telegram.ui.Components.ShareAlert;
 import io.bettergram.telegram.ui.Components.Size;
+import io.bettergram.telegram.ui.Components.SizeNotifierFrameLayout;
+import io.bettergram.telegram.ui.Components.StickersAlert;
+import io.bettergram.telegram.ui.Components.TypefaceSpan;
+import io.bettergram.telegram.ui.Components.URLSpanBotCommand;
+import io.bettergram.telegram.ui.Components.URLSpanMono;
+import io.bettergram.telegram.ui.Components.URLSpanNoUnderline;
+import io.bettergram.telegram.ui.Components.URLSpanReplacement;
+import io.bettergram.telegram.ui.Components.URLSpanUserMention;
 import io.bettergram.telegram.ui.Components.voip.VoIPHelper;
 
-import java.io.BufferedWriter;
-import java.io.File;
-import java.io.FileWriter;
-import java.net.URLDecoder;
-import java.util.ArrayList;
-import java.util.Calendar;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.concurrent.CountDownLatch;
-import java.util.regex.Matcher;
-
 @SuppressWarnings("unchecked")
 public class ChatActivity extends BaseFragment implements NotificationCenter.NotificationCenterDelegate, DialogsActivity.DialogsActivityDelegate, LocationActivity.LocationActivityDelegate {
 
@@ -1078,7 +1187,9 @@ public void onItemClick(final int id) {
                     openSearchWithText(null);
                 } else if (id == pin) {
                     TLRPC.TL_dialog dialog = MessagesController.getInstance(currentAccount).dialogs_dict.get(dialog_id);
-                    MessagesController.getInstance(currentAccount).pinDialog(dialog.id, !dialog.pinned, null, 0);
+                    if (dialog != null) {
+                        MessagesController.getInstance(currentAccount).pinDialog(dialog.id, !dialog.pinned, null, 0);
+                    }
                 } else if (id == call) {
                     if (currentUser != null && getParentActivity() != null) {
                         VoIPHelper.startCall(currentUser, getParentActivity(), MessagesController.getInstance(currentAccount).getUserFull(currentUser.id));
diff --git a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
index a1aaf9b98..8b5491945 100644
--- a/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
+++ b/TMessagesProj/src/main/java/io/bettergram/telegram/ui/DialogsActivity.java
@@ -1559,7 +1559,7 @@ public void onMessageSend(CharSequence message) {
                 if (cryptoAdapter == null) {
                     cryptoAdapter = new CryptoAdapter(activity);
                 }
-                cryptoAdapter.startService(activity);
+                cryptoAdapter.startService();
                 if (newsAdapter == null) {
                     newsAdapter = new NewsAdapter(activity);
                 }
@@ -1586,6 +1586,9 @@ public void onMessageSend(CharSequence message) {
                         ActionBarMenuItem itemSearch = menu.getItem(0);
                         itemSearch.setVisibility(!shouldOpen ? View.GONE : View.VISIBLE);
                         actionBar.closeSearchField();
+                        if (position != 1) {
+                            cryptoAdapter.pauseService();
+                        }
                         switch (position) {
                             case 0:
                                 if (!(listView.getAdapter() instanceof BetterDialogsAdapter)) {
@@ -1596,6 +1599,7 @@ public void onMessageSend(CharSequence message) {
                                 if (!(listView.getAdapter() instanceof CryptoAdapter)) {
                                     listView.setAdapter(cryptoAdapter);
                                     ptrLayout.setOnRefreshListener(cryptoAdapter);
+                                    cryptoAdapter.startService();
                                 }
                                 break;
                             case 2:
@@ -1738,7 +1742,8 @@ public void onResume() {
         getAvailableActivity(activity -> {
             if (activity != null) {
                 if (cryptoAdapter != null) {
-                    cryptoAdapter.registerReceiver(activity);
+                    //cryptoAdapter.registerReceiver(activity);
+                    cryptoAdapter.startService();
                 }
                 if (newsAdapter != null) {
                     newsAdapter.registerReceiver(activity);
@@ -1762,7 +1767,8 @@ public void onPause() {
         getAvailableActivity(activity -> {
             if (activity != null) {
                 if (cryptoAdapter != null) {
-                    cryptoAdapter.unregisterReceiver(activity);
+                    //cryptoAdapter.unregisterReceiver(activity);
+                    cryptoAdapter.pauseService();
                 }
                 if (newsAdapter != null) {
                     newsAdapter.unregisterReceiver(activity);
