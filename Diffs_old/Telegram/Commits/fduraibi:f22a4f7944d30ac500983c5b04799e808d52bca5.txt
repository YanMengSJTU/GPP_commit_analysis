diff --git a/TMessagesProj/build.gradle b/TMessagesProj/build.gradle
index e3e72fe76..78ffb1925 100644
--- a/TMessagesProj/build.gradle
+++ b/TMessagesProj/build.gradle
@@ -80,7 +80,7 @@ android {
     defaultConfig {
         minSdkVersion 8
         targetSdkVersion 19
-        versionCode 310
+        versionCode 319
         versionName "1.8.0"
     }
 }
diff --git a/TMessagesProj/jni/image.c b/TMessagesProj/jni/image.c
index ef63bfbf0..57a7f0dea 100644
--- a/TMessagesProj/jni/image.c
+++ b/TMessagesProj/jni/image.c
@@ -110,6 +110,16 @@ METHODDEF(void) my_error_exit(j_common_ptr cinfo) {
 }
 
 JNIEXPORT void Java_org_telegram_messenger_Utilities_blurBitmap(JNIEnv *env, jclass class, jobject bitmap, int width, int height, int stride) {
+    AndroidBitmapInfo info;
+    
+    if (AndroidBitmap_getInfo(env, bitmap, &info) < 0) {
+        return;
+    }
+    
+    if (info.format != ANDROID_BITMAP_FORMAT_RGBA_8888) {
+        return;
+    }
+    
     void *pixels = 0;
     if (AndroidBitmap_lockPixels(env, bitmap, &pixels) < 0) {
         return;
diff --git a/TMessagesProj/libs/armeabi-v7a/libtmessages.so b/TMessagesProj/libs/armeabi-v7a/libtmessages.so
index a5f1bd92a..4edaba154 100755
Binary files a/TMessagesProj/libs/armeabi-v7a/libtmessages.so and b/TMessagesProj/libs/armeabi-v7a/libtmessages.so differ
diff --git a/TMessagesProj/libs/armeabi/libtmessages.so b/TMessagesProj/libs/armeabi/libtmessages.so
index 7a0c442c1..e6c292aea 100755
Binary files a/TMessagesProj/libs/armeabi/libtmessages.so and b/TMessagesProj/libs/armeabi/libtmessages.so differ
diff --git a/TMessagesProj/libs/x86/libtmessages.so b/TMessagesProj/libs/x86/libtmessages.so
index ff282dc07..e57fed702 100755
Binary files a/TMessagesProj/libs/x86/libtmessages.so and b/TMessagesProj/libs/x86/libtmessages.so differ
diff --git a/TMessagesProj/src/main/java/org/telegram/android/GcmBroadcastReceiver.java b/TMessagesProj/src/main/java/org/telegram/android/GcmBroadcastReceiver.java
index e93db41a5..ebd061984 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/GcmBroadcastReceiver.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/GcmBroadcastReceiver.java
@@ -53,13 +53,6 @@ public void run() {
                         FileLog.e("tmessages", e);
                     }
 
-                    /*SharedPreferences preferences = context.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
-                    boolean globalEnabled = preferences.getBoolean("EnableAll", true);
-                    if (!globalEnabled) {
-                        FileLog.d("tmessages", "GCM disabled");
-                        return;
-                    }*/
-
                     ConnectionsManager.getInstance().resumeNetworkMaybe();
                 }
             });
diff --git a/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java b/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java
index 47ee4924a..714479e38 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/ImageLoader.java
@@ -278,10 +278,7 @@ protected BitmapDrawable doInBackground(Void... voids) {
                     }
                 }
             } catch (Exception e) {
-                if (canDeleteFile && cacheFileFinal != null && cacheFileFinal.length() == 0) {
-                    cacheFileFinal.delete();
-                }
-                FileLog.e("tmessages", e);
+                //don't promt
             }
             return image != null ? new BitmapDrawable(image) : null;
         }
@@ -628,7 +625,7 @@ public void cancelLoadingForImageView(ImageReceiver imageView) {
         }
     }
 
-    public BitmapDrawable getImageFromMemory(TLRPC.FileLocation url, String httpUrl, String filter) {
+    public BitmapDrawable getImageFromMemory(TLRPC.FileLocation url, String httpUrl, String filter, ImageReceiver imageReceiver) {
         if (url == null && httpUrl == null) {
             return null;
         }
@@ -641,7 +638,17 @@ public BitmapDrawable getImageFromMemory(TLRPC.FileLocation url, String httpUrl,
         if (filter != null) {
             key += "@" + filter;
         }
-        return memCache.get(key);
+        BitmapDrawable bitmapDrawable = memCache.get(key);
+        if (bitmapDrawable != null && imageReceiver != null) {
+            Integer TAG = imageReceiver.getTag();
+            if (TAG != null) {
+                CacheImage alreadyLoadingImage = imageLoadingByTag.get(TAG);
+                if (alreadyLoadingImage != null) {
+                    alreadyLoadingImage.removeImageView(imageReceiver);
+                }
+            }
+        }
+        return bitmapDrawable;
     }
 
     public void replaceImageInCache(final String oldKey, final String newKey) {
@@ -668,8 +675,8 @@ public void loadImage(final TLRPC.FileLocation fileLocation, final String httpUr
         String url;
         String key;
         if (httpUrl != null) {
-            url = httpUrl;
             key = Utilities.MD5(httpUrl);
+            url = key + ".jpg";
         } else {
             key = fileLocation.volume_id + "_" + fileLocation.local_id;
             url = key + ".jpg";
@@ -735,7 +742,8 @@ public void loadImage(final TLRPC.FileLocation fileLocation, final String httpUr
                 }
                 img.addImageView(imageView);
                 imageLoadingByKeys.put(key, img);
-                cacheOutTasks.add(new CacheOutTask(img));
+                img.cacheTask = new CacheOutTask(img);
+                cacheOutTasks.add(img.cacheTask);
                 runCacheTasks(false);
             } else {
                 img.url = url;
diff --git a/TMessagesProj/src/main/java/org/telegram/android/ImageReceiver.java b/TMessagesProj/src/main/java/org/telegram/android/ImageReceiver.java
index 9fa11db9e..02aca6378 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/ImageReceiver.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/ImageReceiver.java
@@ -33,7 +33,6 @@
     private int imageX = 0, imageY = 0, imageW = 0, imageH = 0;
     private Rect drawRegion = new Rect();
     private boolean isVisible = true;
-    private boolean selfSetting = false;
     private boolean isAspectFit = false;
 
     public ImageReceiver() {
@@ -88,14 +87,14 @@ public void setImage(TLRPC.FileLocation fileLocation, String httpUrl, String fil
                 if (currentImage != null) {
                     return;
                 } else {
-                    img = ImageLoader.getInstance().getImageFromMemory(fileLocation, httpUrl, filter);
+                    img = ImageLoader.getInstance().getImageFromMemory(fileLocation, httpUrl, filter, this);
                 }
             } else {
-                img = ImageLoader.getInstance().getImageFromMemory(fileLocation, httpUrl, filter);
+                img = ImageLoader.getInstance().getImageFromMemory(fileLocation, httpUrl, filter, this);
                 recycleBitmap(img);
             }
         }
-        img = ImageLoader.getInstance().getImageFromMemory(fileLocation, httpUrl, filter);
+        img = ImageLoader.getInstance().getImageFromMemory(fileLocation, httpUrl, filter, this);
         currentPath = key;
         last_path = fileLocation;
         last_httpUrl = httpUrl;
@@ -106,12 +105,7 @@ public void setImage(TLRPC.FileLocation fileLocation, String httpUrl, String fil
             isPlaceholder = true;
             ImageLoader.getInstance().loadImage(fileLocation, httpUrl, this, size);
         } else {
-            selfSetting = true;
             setImageBitmap(img, currentPath);
-            selfSetting = false;
-        }
-        if (parentView != null) {
-            parentView.invalidate();
         }
     }
 
@@ -122,7 +116,7 @@ public void setImageBitmap(BitmapDrawable bitmap, String imgKey) {
         isPlaceholder = false;
         ImageLoader.getInstance().incrementUseCount(currentPath);
         currentImage = bitmap;
-        if (!selfSetting && parentView != null) {
+        if (parentView != null) {
             parentView.invalidate();
         }
     }
@@ -193,7 +187,7 @@ private void recycleBitmap(BitmapDrawable newBitmap) {
         }
     }
 
-    public void draw(Canvas canvas, int x, int y, int w, int h) {
+    public boolean draw(Canvas canvas, int x, int y, int w, int h) {
         try {
             Drawable bitmapDrawable = currentImage;
             if (bitmapDrawable == null && last_placeholder != null && last_placeholder instanceof BitmapDrawable) {
@@ -240,12 +234,14 @@ public void draw(Canvas canvas, int x, int y, int w, int h) {
                         }
                     }
                 }
+                return true;
             } else if (last_placeholder != null) {
                 drawRegion.set(x, y, x + w, y + h);
                 last_placeholder.setBounds(drawRegion);
                 if (isVisible) {
                     last_placeholder.draw(canvas);
                 }
+                return true;
             }
         } catch (Exception e) {
             if (currentPath != null) {
@@ -255,6 +251,7 @@ public void draw(Canvas canvas, int x, int y, int w, int h) {
             setImage(last_path, last_httpUrl, last_filter, last_placeholder, last_size);
             FileLog.e("tmessages", e);
         }
+        return false;
     }
 
     public Bitmap getBitmap() {
diff --git a/TMessagesProj/src/main/java/org/telegram/android/MessageObject.java b/TMessagesProj/src/main/java/org/telegram/android/MessageObject.java
index c17b7fbf9..d6d2765d6 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MessageObject.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MessageObject.java
@@ -292,24 +292,20 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
                 type = 3;
             } else if (message.media != null && message.media instanceof TLRPC.TL_messageMediaContact) {
                 if (isFromMe()) {
-                    contentType = 4;
+                    contentType = 3;
                     type = 12;
                 } else {
-                    contentType = 5;
+                    contentType = 4;
                     type = 13;
                 }
             } else if (message.media != null && message.media instanceof TLRPC.TL_messageMediaUnsupported) {
                 contentType = type = 0;
             } else if (message.media != null && message.media instanceof TLRPC.TL_messageMediaDocument) {
+                contentType = 1;
                 if (message.media.document.thumb != null && !(message.media.document.thumb instanceof TLRPC.TL_photoSizeEmpty) && message.media.document.mime_type != null && message.media.document.mime_type.equals("image/gif")) {
-                    contentType = 1;
                     type = 8;
                 } else {
-                    if (isFromMe()) {
-                        contentType = type = 8;
-                    } else {
-                        contentType = type = 9;
-                    }
+                    type = 9;
                 }
             } else if (message.media != null && message.media instanceof TLRPC.TL_messageMediaAudio) {
                 contentType = type = 2;
@@ -318,9 +314,11 @@ public MessageObject(TLRPC.Message message, AbstractMap<Integer, TLRPC.User> use
             if (message.action instanceof TLRPC.TL_messageActionLoginUnknownLocation) {
                 contentType = type = 0;
             } else if (message.action instanceof TLRPC.TL_messageActionChatEditPhoto || message.action instanceof TLRPC.TL_messageActionUserUpdatedPhoto) {
-                contentType = type = 11;
+                contentType = 8;
+                type = 11;
             } else {
-                contentType = type = 10;
+                contentType = 7;
+                type = 10;
             }
         } else if (message instanceof TLRPC.TL_messageForwarded) {
             contentType = type = 0;
@@ -430,7 +428,7 @@ public String getFileName() {
     }
 
     private void generateLayout() {
-        if (type != 0 && type != 1 && type != 8 && type != 9 || messageOwner.to_id == null || messageText == null || messageText.length() == 0) {
+        if (type != 0 || messageOwner.to_id == null || messageText == null || messageText.length() == 0) {
             return;
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java b/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
index 2376f01b1..a5efd8426 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MessagesController.java
@@ -170,6 +170,15 @@ public void addSupportUser() {
         user.status = null;
         user.photo = new TLRPC.TL_userProfilePhotoEmpty();
         putUser(user, true);
+
+        user = new TLRPC.TL_userForeign();
+        user.phone = "42777";
+        user.id = 777000;
+        user.first_name = "Telegram";
+        user.last_name = "Notifications";
+        user.status = null;
+        user.photo = new TLRPC.TL_userProfilePhotoEmpty();
+        putUser(user, true);
     }
 
     public static TLRPC.InputUser getInputUser(TLRPC.User user) {
@@ -963,7 +972,7 @@ public void run() {
                                 NotificationsController.getInstance().processReadMessages(null, did, 0, Integer.MAX_VALUE, false);
                                 HashMap<Long, Integer> dialogsToUpdate = new HashMap<Long, Integer>();
                                 dialogsToUpdate.put(did, 0);
-                                NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate, true);
+                                NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate);
                             }
                         });
                     }
@@ -1395,7 +1404,7 @@ public void run() {
                         currentDialog.unread_count = entry.getValue();
                     }
                 }
-                NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate, true);
+                NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate);
                 NotificationCenter.getInstance().postNotificationName(NotificationCenter.dialogsNeedReload);
             }
         });
@@ -1491,7 +1500,7 @@ public int compare(TLRPC.TL_dialog tl_dialog, TLRPC.TL_dialog tl_dialog2) {
                                 dialogsServerOnly.add(d);
                             }
                         }
-                        NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate, true);
+                        NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate);
                         NotificationCenter.getInstance().postNotificationName(NotificationCenter.dialogsNeedReload);
                     }
                 });
@@ -1711,12 +1720,12 @@ public void run() {
                                     NotificationsController.getInstance().processReadMessages(null, dialog_id, 0, max_positive_id, false);
                                     HashMap<Long, Integer> dialogsToUpdate = new HashMap<Long, Integer>();
                                     dialogsToUpdate.put(dialog_id, 0);
-                                    NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate, true);
+                                    NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate);
                                 } else {
                                     NotificationsController.getInstance().processReadMessages(null, dialog_id, 0, max_positive_id, true);
                                     HashMap<Long, Integer> dialogsToUpdate = new HashMap<Long, Integer>();
-                                    dialogsToUpdate.put(dialog_id, 2000001);
-                                    NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate, false);
+                                    dialogsToUpdate.put(dialog_id, -1);
+                                    NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate);
                                 }
                             }
                         });
@@ -1784,7 +1793,7 @@ public void run() {
                             }
                             HashMap<Long, Integer> dialogsToUpdate = new HashMap<Long, Integer>();
                             dialogsToUpdate.put(dialog_id, 0);
-                            NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate, true);
+                            NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate);
                         }
                     });
                 }
@@ -2991,11 +3000,11 @@ public void run() {
                 UserConfig.saveConfig(false);
                 newMessage.unread = true;
                 newMessage.date = update.date;
-                newMessage.from_id = 333000;
+                newMessage.from_id = 777000;
                 newMessage.to_id = new TLRPC.TL_peerUser();
                 newMessage.to_id.user_id = UserConfig.getClientUserId();
                 newMessage.out = false;
-                newMessage.dialog_id = 333000;
+                newMessage.dialog_id = 777000;
 
                 messagesArr.add(newMessage);
                 MessageObject obj = new MessageObject(newMessage, usersDict);
@@ -3417,27 +3426,6 @@ private boolean updatePrintingUsersWithNewMessages(long uid, ArrayList<MessageOb
         return false;
     }
 
-    public void dialogsUnreadCountIncr(final HashMap<Long, Integer> values) {
-        AndroidUtilities.RunOnUIThread(new Runnable() {
-            @Override
-            public void run() {
-                for (HashMap.Entry<Long, Integer> entry : values.entrySet()) {
-                    TLRPC.TL_dialog dialog = dialogs_dict.get(entry.getKey());
-                    if (dialog != null) {
-                        int value = entry.getValue();
-                        if (value < 0) {
-                            dialog.unread_count = -value;
-                        } else {
-                            dialog.unread_count += value;
-                        }
-                    }
-                }
-                NotificationsController.getInstance().processDialogsUpdateRead(values, false);
-                NotificationCenter.getInstance().postNotificationName(NotificationCenter.dialogsNeedReload);
-            }
-        });
-    }
-
     protected void updateInterfaceWithMessages(long uid, ArrayList<MessageObject> messages) {
         updateInterfaceWithMessages(uid, messages, false);
     }
@@ -3718,7 +3706,7 @@ public void run() {
                                                 NotificationsController.getInstance().processReadMessages(null, did, 0, Integer.MAX_VALUE, false);
                                                 HashMap<Long, Integer> dialogsToUpdate = new HashMap<Long, Integer>();
                                                 dialogsToUpdate.put(did, 0);
-                                                NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate, true);
+                                                NotificationsController.getInstance().processDialogsUpdateRead(dialogsToUpdate);
                                             }
                                         });
                                     }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java b/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java
index 0cb3893ae..86f151365 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/MessagesStorage.java
@@ -31,6 +31,7 @@
 
 import java.io.File;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.HashMap;
 import java.util.Locale;
 import java.util.Map;
@@ -90,7 +91,7 @@ public void openDatabase() {
                 database.executeFast("CREATE TABLE messages(mid INTEGER PRIMARY KEY, uid INTEGER, read_state INTEGER, send_state INTEGER, date INTEGER, data BLOB, out INTEGER, ttl INTEGER)").stepThis().dispose();
                 database.executeFast("CREATE TABLE chats(uid INTEGER PRIMARY KEY, name TEXT, data BLOB)").stepThis().dispose();
                 database.executeFast("CREATE TABLE enc_chats(uid INTEGER PRIMARY KEY, user INTEGER, name TEXT, data BLOB, g BLOB, authkey BLOB, ttl INTEGER)").stepThis().dispose();
-                database.executeFast("CREATE TABLE dialogs(did INTEGER PRIMARY KEY, date INTEGER, unread_count INTEGER, last_mid INTEGER, flags INTEGER)").stepThis().dispose();
+                database.executeFast("CREATE TABLE dialogs(did INTEGER PRIMARY KEY, date INTEGER, unread_count INTEGER, last_mid INTEGER)").stepThis().dispose();
                 database.executeFast("CREATE TABLE chat_settings(uid INTEGER PRIMARY KEY, participants BLOB)").stepThis().dispose();
                 database.executeFast("CREATE TABLE contacts(uid INTEGER PRIMARY KEY, mutual INTEGER)").stepThis().dispose();
                 database.executeFast("CREATE TABLE pending_read(uid INTEGER PRIMARY KEY, max_id INTEGER)").stepThis().dispose();
@@ -104,6 +105,7 @@ public void openDatabase() {
                 database.executeFast("CREATE TABLE user_photos(uid INTEGER, id INTEGER, data BLOB, PRIMARY KEY (uid, id))").stepThis().dispose();
                 database.executeFast("CREATE TABLE blocked_users(uid INTEGER PRIMARY KEY)").stepThis().dispose();
                 database.executeFast("CREATE TABLE download_queue(uid INTEGER, type INTEGER, date INTEGER, data BLOB, PRIMARY KEY (uid, type));").stepThis().dispose();
+                database.executeFast("CREATE TABLE dialog_settings(did INTEGER PRIMARY KEY, flags INTEGER);").stepThis().dispose();
                 //database.executeFast("CREATE TABLE attach_data(uid INTEGER, id INTEGER, data BLOB, PRIMARY KEY (uid, id))").stepThis().dispose();
 
                 database.executeFast("CREATE TABLE user_contacts_v6(uid INTEGER PRIMARY KEY, fname TEXT, sname TEXT)").stepThis().dispose();
@@ -120,7 +122,7 @@ public void openDatabase() {
                 database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_dialogs ON dialogs(date);").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS date_idx_enc_tasks ON enc_tasks(date);").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS last_mid_idx_dialogs ON dialogs(last_mid);").stepThis().dispose();
-                database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_flags_idx_dialogs ON dialogs(unread_count, flags);").stepThis().dispose();
+                database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_idx_dialogs ON dialogs(unread_count);").stepThis().dispose();
 
                 database.executeFast("CREATE INDEX IF NOT EXISTS uid_mid_idx_media ON media(uid, mid);").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS mid_idx_media ON media(mid);").stepThis().dispose();
@@ -131,44 +133,53 @@ public void openDatabase() {
                 database.executeFast("CREATE INDEX IF NOT EXISTS mid_out_idx_messages ON messages(mid, out);").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS task_idx_messages ON messages(uid, out, read_state, ttl, date, send_state);").stepThis().dispose();
                 database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_messages ON messages(mid, send_state, date) WHERE mid < 0 AND send_state = 1;").stepThis().dispose();
-                database.executeFast("PRAGMA user_version = 3").stepThis().dispose();
+                database.executeFast("PRAGMA user_version = 4").stepThis().dispose();
             } else {
-                int version = database.executeInt("PRAGMA user_version");
-                if (version < 3) {
-                    SQLiteCursor cursor = database.queryFinalized("SELECT count(*) FROM sqlite_master WHERE type='table' AND name='params'");
-                    boolean create = false;
+                try {
+                    SQLiteCursor cursor = database.queryFinalized("SELECT seq, pts, date, qts, lsv, sg, pbytes FROM params WHERE id = 1");
                     if (cursor.next()) {
-                        int count = cursor.intValue(0);
-                        if (count == 0) {
-                            create = true;
+                        lastSeqValue = cursor.intValue(0);
+                        lastPtsValue = cursor.intValue(1);
+                        lastDateValue = cursor.intValue(2);
+                        lastQtsValue = cursor.intValue(3);
+                        lastSecretVersion = cursor.intValue(4);
+                        secretG = cursor.intValue(5);
+                        if (cursor.isNull(6)) {
+                            secretPBytes = null;
+                        } else {
+                            secretPBytes = cursor.byteArrayValue(6);
+                            if (secretPBytes != null && secretPBytes.length == 1) {
+                                secretPBytes = null;
+                            }
                         }
-                    } else {
-                        create = true;
                     }
                     cursor.dispose();
-                    if (create) {
-                        database.executeFast("CREATE TABLE params(id INTEGER PRIMARY KEY, seq INTEGER, pts INTEGER, date INTEGER, qts INTEGER, lsv INTEGER, sg INTEGER, pbytes BLOB)").stepThis().dispose();
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                    try {
+                        database.executeFast("CREATE TABLE IF NOT EXISTS params(id INTEGER PRIMARY KEY, seq INTEGER, pts INTEGER, date INTEGER, qts INTEGER, lsv INTEGER, sg INTEGER, pbytes BLOB)").stepThis().dispose();
                         database.executeFast("INSERT INTO params VALUES(1, 0, 0, 0, 0, 0, 0, NULL)").stepThis().dispose();
-                    } else {
-                        cursor = database.queryFinalized("SELECT seq, pts, date, qts, lsv, sg, pbytes FROM params WHERE id = 1");
-                        if (cursor.next()) {
-                            lastSeqValue = cursor.intValue(0);
-                            lastPtsValue = cursor.intValue(1);
-                            lastDateValue = cursor.intValue(2);
-                            lastQtsValue = cursor.intValue(3);
-                            lastSecretVersion = cursor.intValue(4);
-                            secretG = cursor.intValue(5);
-                            if (cursor.isNull(6)) {
-                                secretPBytes = null;
-                            } else {
-                                secretPBytes = cursor.byteArrayValue(6);
-                                if (secretPBytes != null && secretPBytes.length == 1) {
-                                    secretPBytes = null;
-                                }
-                            }
-                        }
-                        cursor.dispose();
+                    } catch (Exception e2) {
+                        FileLog.e("tmessages", e2);
                     }
+                }
+
+                int version = database.executeInt("PRAGMA user_version");
+                if (version < 4) {
+                    updateDbToVersion4();
+                }
+            }
+        } catch (Exception e) {
+            FileLog.e("tmessages", e);
+        }
+        loadUnreadMessages();
+    }
+
+    public void updateDbToVersion4() {
+        storageQueue.postRunnable(new Runnable() {
+            @Override
+            public void run() {
+                try {
                     database.executeFast("CREATE TABLE IF NOT EXISTS user_photos(uid INTEGER, id INTEGER, data BLOB, PRIMARY KEY (uid, id))").stepThis().dispose();
 
                     database.executeFast("CREATE INDEX IF NOT EXISTS mid_idx_media ON media(mid);").stepThis().dispose();
@@ -177,7 +188,6 @@ public void openDatabase() {
                     database.executeFast("DROP INDEX IF EXISTS read_state_out_idx_messages;").stepThis().dispose();
                     database.executeFast("DROP INDEX IF EXISTS ttl_idx_messages;").stepThis().dispose();
                     database.executeFast("DROP INDEX IF EXISTS date_idx_messages;").stepThis().dispose();
-                    database.executeFast("DROP INDEX IF EXISTS unread_count_idx_dialogs;").stepThis().dispose();
 
                     database.executeFast("CREATE INDEX IF NOT EXISTS mid_out_idx_messages ON messages(mid, out);").stepThis().dispose();
                     database.executeFast("CREATE INDEX IF NOT EXISTS task_idx_messages ON messages(uid, out, read_state, ttl, date, send_state);").stepThis().dispose();
@@ -196,18 +206,19 @@ public void openDatabase() {
                     database.executeFast("CREATE TABLE IF NOT EXISTS download_queue(uid INTEGER, type INTEGER, date INTEGER, data BLOB, PRIMARY KEY (uid, type));").stepThis().dispose();
                     database.executeFast("CREATE INDEX IF NOT EXISTS type_date_idx_download_queue ON download_queue(type, date);").stepThis().dispose();
 
+                    database.executeFast("CREATE TABLE IF NOT EXISTS dialog_settings(did INTEGER PRIMARY KEY, flags INTEGER);").stepThis().dispose();
+
                     database.executeFast("CREATE INDEX IF NOT EXISTS send_state_idx_messages ON messages(mid, send_state, date) WHERE mid < 0 AND send_state = 1;").stepThis().dispose();
 
-                    database.executeFast("UPDATE messages SET send_state = 2 WHERE mid < 0 AND send_state = 1").stepThis().dispose();
+                    database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_idx_dialogs ON dialogs(unread_count);").stepThis().dispose();
 
-                    database.executeFast("ALTER TABLE dialogs ADD COLUMN flags INTEGER NOT NULL default 0;").stepThis().dispose();
-                    database.executeFast("CREATE INDEX IF NOT EXISTS unread_count_flags_idx_dialogs ON dialogs(unread_count, flags);").stepThis().dispose();
+                    database.executeFast("UPDATE messages SET send_state = 2 WHERE mid < 0 AND send_state = 1").stepThis().dispose();
 
-                    database.executeFast("PRAGMA user_version = 3").stepThis().dispose();
+                    database.executeFast("PRAGMA user_version = 4").stepThis().dispose();
                     storageQueue.postRunnable(new Runnable() {
                         @Override
                         public void run() {
-                            String ids = "";
+                            ArrayList<Integer> ids = new ArrayList<Integer>();
                             SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
                             Map<String, ?> values = preferences.getAll();
                             for (Map.Entry<String, ?> entry : values.entrySet()) {
@@ -216,45 +227,35 @@ public void run() {
                                     Integer value = (Integer)entry.getValue();
                                     if (value == 2) {
                                         key = key.replace("notify2_", "");
-                                        if (ids.length() != 0) {
-                                            ids += ",";
+                                        try {
+                                            ids.add(Integer.parseInt(key));
+                                        } catch (Exception e) {
+                                            e.printStackTrace();
                                         }
-                                        ids += key;
                                     }
                                 }
                             }
                             try {
-                                database.executeFast("UPDATE dialogs SET flags = 1 WHERE did IN (" + ids + ");").stepThis().dispose();
+                                database.beginTransaction();
+                                SQLitePreparedStatement state = database.executeFast("REPLACE INTO dialog_settings VALUES(?, ?)");
+                                for (Integer id : ids) {
+                                    state.requery();
+                                    state.bindLong(1, id);
+                                    state.bindInteger(2, 1);
+                                    state.step();
+                                }
+                                state.dispose();
+                                database.commitTransaction();
                             } catch (Exception e) {
                                 FileLog.e("tmessages", e);
                             }
                         }
                     });
-                } else {
-                    SQLiteCursor cursor = database.queryFinalized("SELECT seq, pts, date, qts, lsv, sg, pbytes FROM params WHERE id = 1");
-                    if (cursor.next()) {
-                        lastSeqValue = cursor.intValue(0);
-                        lastPtsValue = cursor.intValue(1);
-                        lastDateValue = cursor.intValue(2);
-                        lastQtsValue = cursor.intValue(3);
-                        lastSecretVersion = cursor.intValue(4);
-                        secretG = cursor.intValue(5);
-                        if (cursor.isNull(6)) {
-                            secretPBytes = null;
-                        } else {
-                            secretPBytes = cursor.byteArrayValue(6);
-                            if (secretPBytes != null && secretPBytes.length == 1) {
-                                secretPBytes = null;
-                            }
-                        }
-                    }
-                    cursor.dispose();
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
                 }
             }
-        } catch (Exception e) {
-            FileLog.e("tmessages", e);
-        }
-        loadUnreadMessages(false);
+        });
     }
 
     public void cleanUp(final boolean isLogin) {
@@ -350,7 +351,7 @@ public void setDialogFlags(final long did, final int flags) {
             @Override
             public void run() {
                 try {
-                    database.executeFast("UPDATE dialogs SET flags = " + flags + " WHERE did = " + did).stepThis().dispose();
+                    database.executeFast(String.format(Locale.US, "REPLACE INTO dialog_settings VALUES(%d, %d)", did, flags)).stepThis().dispose();
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
                 }
@@ -358,19 +359,19 @@ public void run() {
         });
     }
 
-    public void loadUnreadMessages(final boolean onlyCount) {
+    public void loadUnreadMessages() {
         storageQueue.postRunnable(new Runnable() {
             @Override
             public void run() {
                 try {
                     final HashMap<Long, Integer> pushDialogs = new HashMap<Long, Integer>();
-                    SQLiteCursor cursor = database.queryFinalized("SELECT did, unread_count FROM dialogs WHERE unread_count != 0 AND flags != 1");
+                    SQLiteCursor cursor = database.queryFinalized("SELECT d.did, d.unread_count, s.flags FROM dialogs as d LEFT JOIN dialog_settings as s ON d.did = s.did WHERE d.unread_count != 0");
                     String ids = "";
                     while (cursor.next()) {
-                        long did = cursor.longValue(0);
-                        int count = cursor.intValue(1);
-                        pushDialogs.put(did, count);
-                        if (!onlyCount) {
+                        if (cursor.isNull(2) || cursor.intValue(2) != 1) {
+                            long did = cursor.longValue(0);
+                            int count = cursor.intValue(1);
+                            pushDialogs.put(did, count);
                             if (ids.length() != 0) {
                                 ids += ",";
                             }
@@ -379,11 +380,11 @@ public void run() {
                     }
                     cursor.dispose();
 
-                    final ArrayList<TLRPC.Message> messages = onlyCount ? null : new ArrayList<TLRPC.Message>();
-                    final ArrayList<TLRPC.User> users = onlyCount ? null : new ArrayList<TLRPC.User>();
-                    final ArrayList<TLRPC.Chat> chats = onlyCount ? null : new ArrayList<TLRPC.Chat>();
-                    final ArrayList<TLRPC.EncryptedChat> encryptedChats = onlyCount ? null : new ArrayList<TLRPC.EncryptedChat>();
-                    if (messages != null && ids.length() > 0) {
+                    final ArrayList<TLRPC.Message> messages = new ArrayList<TLRPC.Message>();
+                    final ArrayList<TLRPC.User> users = new ArrayList<TLRPC.User>();
+                    final ArrayList<TLRPC.Chat> chats = new ArrayList<TLRPC.Chat>();
+                    final ArrayList<TLRPC.EncryptedChat> encryptedChats = new ArrayList<TLRPC.EncryptedChat>();
+                    if (ids.length() > 0) {
                         ArrayList<Integer> userIds = new ArrayList<Integer>();
                         ArrayList<Integer> chatIds = new ArrayList<Integer>();
                         ArrayList<Integer> encryptedChatIds = new ArrayList<Integer>();
@@ -516,7 +517,7 @@ public void run() {
                             cursor.dispose();
                         }
                     }
-
+                    Collections.reverse(messages);
                     AndroidUtilities.RunOnUIThread(new Runnable() {
                         @Override
                         public void run() {
@@ -2244,12 +2245,11 @@ public void run() {
                     buffersStorage.reuseFreeBuffer(data3);
 
                     if (dialog != null) {
-                        state = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?)");
+                        state = database.executeFast("REPLACE INTO dialogs(did, date, unread_count, last_mid) VALUES(?, ?, ?, ?)");
                         state.bindLong(1, dialog.id);
                         state.bindInteger(2, dialog.last_message_date);
                         state.bindInteger(3, dialog.unread_count);
                         state.bindInteger(4, dialog.top_message);
-                        state.bindInteger(5, dialog.flags);
                         state.step();
                         state.dispose();
                     }
@@ -2416,36 +2416,24 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
             SQLitePreparedStatement state4 = database.executeFast("REPLACE INTO download_queue VALUES(?, ?, ?, ?)");
 
             for (TLRPC.Message message : messages) {
-                long dialog_id = 0;
+                long dialog_id = message.dialog_id;
+                if (dialog_id == 0) {
+                    if (message.to_id.chat_id != 0) {
+                        dialog_id = -message.to_id.chat_id;
+                    } else if (message.to_id.user_id != 0) {
+                        dialog_id = message.to_id.user_id;
+                    }
+                }
+
                 if (message.unread && !message.out) {
                     if (messageIds.length() > 0) {
                         messageIds += ",";
                     }
                     messageIds += message.id;
-
-                    dialog_id = message.dialog_id;
-                    if (dialog_id == 0) {
-                        if (message.to_id.chat_id != 0) {
-                            dialog_id = -message.to_id.chat_id;
-                        } else if (message.to_id.user_id != 0) {
-                            dialog_id = message.to_id.user_id;
-                        }
-                    }
-
                     messagesIdsMap.put(message.id, dialog_id);
                 }
 
                 if (message.media instanceof TLRPC.TL_messageMediaVideo || message.media instanceof TLRPC.TL_messageMediaPhoto) {
-                    if (dialog_id == 0) {
-                        dialog_id = message.dialog_id;
-                        if (dialog_id == 0) {
-                            if (message.to_id.chat_id != 0) {
-                                dialog_id = -message.to_id.chat_id;
-                            } else if (message.to_id.user_id != 0) {
-                                dialog_id = message.to_id.user_id;
-                            }
-                        }
-                    }
                     if (messageMediaIds.length() > 0) {
                         messageMediaIds += ",";
                     }
@@ -2591,18 +2579,16 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
             state3.dispose();
             state4.dispose();
 
-            state = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?)");
+            state = database.executeFast("REPLACE INTO dialogs(did, date, unread_count, last_mid) VALUES(?, ?, ?, ?)");
             for (HashMap.Entry<Long, TLRPC.Message> pair : messagesMap.entrySet()) {
                 Long key = pair.getKey();
 
                 int dialog_date = 0;
                 int old_unread_count = 0;
-                int old_flags = 0;
-                SQLiteCursor cursor = database.queryFinalized("SELECT date, unread_count, flags FROM dialogs WHERE did = " + key);
+                SQLiteCursor cursor = database.queryFinalized("SELECT date, unread_count FROM dialogs WHERE did = " + key);
                 if (cursor.next()) {
                     dialog_date = cursor.intValue(0);
                     old_unread_count = cursor.intValue(1);
-                    old_flags = cursor.intValue(2);
                 }
                 cursor.dispose();
 
@@ -2612,7 +2598,7 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                 if (unread_count == null) {
                     unread_count = 0;
                 } else {
-                    messagesCounts.put(key, -(unread_count + old_unread_count));
+                    messagesCounts.put(key, unread_count + old_unread_count);
                 }
                 int messageId = value.id;
                 if (value.local_id != 0) {
@@ -2626,14 +2612,13 @@ private void putMessagesInternal(final ArrayList<TLRPC.Message> messages, final
                 }
                 state.bindInteger(3, old_unread_count + unread_count);
                 state.bindInteger(4, messageId);
-                state.bindInteger(5, old_flags);
                 state.step();
             }
             state.dispose();
             if (withTransaction) {
                 database.commitTransaction();
             }
-            MessagesController.getInstance().dialogsUnreadCountIncr(messagesCounts);
+            MessagesController.getInstance().processDialogsUpdateRead(messagesCounts);
 
             if (!mediaCounts.isEmpty()) {
                 state = database.executeFast("REPLACE INTO media_counts VALUES(?, ?)");
@@ -2687,6 +2672,19 @@ public void run() {
         }
     }
 
+    public void markMessageAsSendError(final int mid) {
+        storageQueue.postRunnable(new Runnable() {
+            @Override
+            public void run() {
+                try {
+                    database.executeFast("UPDATE messages SET send_state = 2 WHERE mid = " + mid).stepThis().dispose();
+                } catch (Exception e) {
+                    FileLog.e("tmessages", e);
+                }
+            }
+        });
+    }
+
     private Integer updateMessageStateAndIdInternal(long random_id, Integer _oldId, int newId, int date) {
         if (_oldId != null && _oldId == newId && date != 0) {
             SQLitePreparedStatement state = null;
@@ -3049,14 +3047,13 @@ private void updateDialogsWithDeletedMessagesInternal(final ArrayList<Integer> m
             ArrayList<Integer> usersToLoad = new ArrayList<Integer>();
             ArrayList<Integer> chatsToLoad = new ArrayList<Integer>();
             ArrayList<Integer> encryptedToLoad = new ArrayList<Integer>();
-            cursor = database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, d.flags FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid WHERE d.did IN(%s)", ids));
+            cursor = database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid WHERE d.did IN(%s)", ids));
             while (cursor.next()) {
                 TLRPC.TL_dialog dialog = new TLRPC.TL_dialog();
                 dialog.id = cursor.longValue(0);
                 dialog.top_message = cursor.intValue(1);
                 dialog.unread_count = cursor.intValue(2);
                 dialog.last_message_date = cursor.intValue(3);
-                dialog.flags = cursor.intValue(8);
                 dialogs.dialogs.add(dialog);
 
                 ByteBufferDesc data = buffersStorage.getFreeBuffer(cursor.byteArrayLength(4));
@@ -3321,14 +3318,13 @@ public void run() {
                     usersToLoad.add(UserConfig.getClientUserId());
                     ArrayList<Integer> chatsToLoad = new ArrayList<Integer>();
                     ArrayList<Integer> encryptedToLoad = new ArrayList<Integer>();
-                    SQLiteCursor cursor = database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state, d.flags FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid ORDER BY d.date DESC LIMIT %d,%d", offset, count));
+                    SQLiteCursor cursor = database.queryFinalized(String.format(Locale.US, "SELECT d.did, d.last_mid, d.unread_count, d.date, m.data, m.read_state, m.mid, m.send_state FROM dialogs as d LEFT JOIN messages as m ON d.last_mid = m.mid ORDER BY d.date DESC LIMIT %d,%d", offset, count));
                     while (cursor.next()) {
                         TLRPC.TL_dialog dialog = new TLRPC.TL_dialog();
                         dialog.id = cursor.longValue(0);
                         dialog.top_message = cursor.intValue(1);
                         dialog.unread_count = cursor.intValue(2);
                         dialog.last_message_date = cursor.intValue(3);
-                        dialog.flags = cursor.intValue(8);
                         dialogs.dialogs.add(dialog);
 
                         ByteBufferDesc data = buffersStorage.getFreeBuffer(cursor.byteArrayLength(4));
@@ -3504,12 +3500,14 @@ public void run() {
 
                     if (!dialogs.dialogs.isEmpty()) {
                         SQLitePreparedStatement state = database.executeFast("REPLACE INTO messages VALUES(?, ?, ?, ?, ?, ?, ?, ?)");
-                        SQLitePreparedStatement state2 = database.executeFast("REPLACE INTO dialogs VALUES(?, ?, ?, ?, ?)");
+                        SQLitePreparedStatement state2 = database.executeFast("REPLACE INTO dialogs(did, date, unread_count, last_mid) VALUES(?, ?, ?, ?)");
                         SQLitePreparedStatement state3 = database.executeFast("REPLACE INTO media VALUES(?, ?, ?, ?)");
+                        SQLitePreparedStatement state4 = database.executeFast("REPLACE INTO dialog_settings VALUES(?, ?)");
 
                         for (TLRPC.TL_dialog dialog : dialogs.dialogs) {
                             state.requery();
                             state2.requery();
+                            state4.requery();
                             int uid = dialog.peer.user_id;
                             if (uid == 0) {
                                 uid = -dialog.peer.chat_id;
@@ -3532,12 +3530,12 @@ public void run() {
                             state2.bindInteger(2, message.date);
                             state2.bindInteger(3, dialog.unread_count);
                             state2.bindInteger(4, dialog.top_message);
-                            if (dialog.notify_settings.mute_until != 0) {
-                                dialog.flags = 1;
-                            }
-                            state2.bindInteger(5, dialog.flags);
                             state2.step();
 
+                            state4.bindLong(1, uid);
+                            state4.bindInteger(2, dialog.notify_settings.mute_until != 0 ? 1 : 0);
+                            state4.step();
+
                             if (message.media instanceof TLRPC.TL_messageMediaVideo || message.media instanceof TLRPC.TL_messageMediaPhoto) {
                                 state3.requery();
                                 state3.bindLong(1, message.id);
@@ -3551,6 +3549,7 @@ public void run() {
                         state.dispose();
                         state2.dispose();
                         state3.dispose();
+                        state4.dispose();
                     }
 
                     if (!dialogs.users.isEmpty()) {
@@ -3600,7 +3599,7 @@ public void run() {
 
                     database.commitTransaction();
 
-                    loadUnreadMessages(true);
+                    loadUnreadMessages();
                 } catch (Exception e) {
                     FileLog.e("tmessages", e);
                 }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
index cfec53cc7..71b44953d 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/NotificationsController.java
@@ -373,6 +373,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                     .setContentTitle(name)
                     .setSmallIcon(R.drawable.notification)
                     .setAutoCancel(true)
+                    .setNumber(total_unread_count)
                     .setContentIntent(contentIntent);
 
             String lastMessage = null;
@@ -419,7 +420,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
             }
 
             if (photoPath != null) {
-                BitmapDrawable img = ImageLoader.getInstance().getImageFromMemory(photoPath, null, "50_50");
+                BitmapDrawable img = ImageLoader.getInstance().getImageFromMemory(photoPath, null, "50_50", null);
                 if (img != null) {
                     mBuilder.setLargeIcon(img.getBitmap());
                 }
@@ -446,7 +447,7 @@ private void showOrUpdateNotification(boolean notifyAboutLast) {
                 } else if (needVibrate == 0 || needVibrate == 5) {
                     mBuilder.setDefaults(NotificationCompat.DEFAULT_VIBRATE);
                 } else if (needVibrate == 3) {
-                    mBuilder.setVibrate(new long[]{0, 300, 100, 300});
+                    mBuilder.setVibrate(new long[]{0, 500});
                 }
             } else {
                 mBuilder.setVibrate(new long[]{0, 0});
@@ -575,8 +576,8 @@ public void processNewMessages(ArrayList<MessageObject> messageObjects, boolean
                 if (popup != 0) {
                     popupMessages.add(0, messageObject);
                 }
-                pushMessagesDict.put(messageObject.messageOwner.id, messageObject);
                 pushMessages.add(0, messageObject);
+                pushMessagesDict.put(messageObject.messageOwner.id, messageObject);
             }
         }
 
@@ -596,50 +597,42 @@ public void processNewMessages(ArrayList<MessageObject> messageObjects, boolean
         }
     }
 
-    public void processDialogsUpdateRead(final HashMap<Long, Integer> dialogsToUpdate, boolean replace) {
+    public void processDialogsUpdateRead(final HashMap<Long, Integer> dialogsToUpdate) {
         int old_unread_count = total_unread_count;
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
         for (HashMap.Entry<Long, Integer> entry : dialogsToUpdate.entrySet()) {
             long dialog_id = entry.getKey();
 
             int notify_override = preferences.getInt("notify2_" + dialog_id, 0);
-            boolean isChat = (int)dialog_id < 0;
-            Integer currentCount = pushDialogs.get(dialog_id);
-            boolean canAddValue = !(notify_override == 2 || (!preferences.getBoolean("EnableAll", true) || isChat && !preferences.getBoolean("EnableGroup", true)) && notify_override == 0);
+            boolean canAddValue = !(notify_override == 2 || (!preferences.getBoolean("EnableAll", true) || ((int)dialog_id < 0) && !preferences.getBoolean("EnableGroup", true)) && notify_override == 0);
 
+            Integer currentCount = pushDialogs.get(dialog_id);
             Integer newCount = entry.getValue();
-            if (replace || newCount < 0) {
-                if (newCount < 0) {
-                    newCount *= -1;
+            if (newCount < 0) {
+                if (currentCount == null) {
+                    continue;
                 }
+                newCount = currentCount + newCount;
+            }
+            if (canAddValue || newCount == 0) {
                 if (currentCount != null) {
                     total_unread_count -= currentCount;
                 }
-                if (newCount == 0) {
-                    pushDialogs.remove(dialog_id);
-                    for (int a = 0; a < pushMessages.size(); a++) {
-                        MessageObject messageObject = pushMessages.get(a);
-                        if (messageObject.getDialogId() == dialog_id) {
-                            pushMessages.remove(a);
-                            a--;
-                            pushMessagesDict.remove(messageObject.messageOwner.id);
-                            popupMessages.remove(messageObject);
-                        }
+            }
+            if (newCount == 0) {
+                pushDialogs.remove(dialog_id);
+                for (int a = 0; a < pushMessages.size(); a++) {
+                    MessageObject messageObject = pushMessages.get(a);
+                    if (messageObject.getDialogId() == dialog_id) {
+                        pushMessages.remove(a);
+                        a--;
+                        pushMessagesDict.remove(messageObject.messageOwner.id);
+                        popupMessages.remove(messageObject);
                     }
-                } else if (canAddValue) {
-                    total_unread_count += newCount;
-                    pushDialogs.put(dialog_id, newCount);
                 }
             } else if (canAddValue) {
-                if (newCount > 2000000) {
-                    newCount = 2000000 - newCount;
-                }
-                if (currentCount == null) {
-                    currentCount = 0;
-                }
-                currentCount += newCount;
                 total_unread_count += newCount;
-                pushDialogs.put(dialog_id, currentCount);
+                pushDialogs.put(dialog_id, newCount);
             }
         }
         if (old_unread_count != total_unread_count) {
@@ -656,6 +649,28 @@ public void processLoadedUnreadMessages(HashMap<Long, Integer> dialogs, ArrayLis
         MessagesController.getInstance().putChats(chats, true);
         MessagesController.getInstance().putEncryptedChats(encryptedChats, true);
 
+        pushDialogs.clear();
+        pushMessages.clear();
+        pushMessagesDict.clear();
+        total_unread_count = 0;
+        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
+        HashMap<Long, Boolean> settingsCache = new HashMap<Long, Boolean>();
+
+        for (HashMap.Entry<Long, Integer> entry : dialogs.entrySet()) {
+            long dialog_id = entry.getKey();
+            Boolean value = settingsCache.get(dialog_id);
+            if (value == null) {
+                int notify_override = preferences.getInt("notify2_" + dialog_id, 0);
+                value = !(notify_override == 2 || (!preferences.getBoolean("EnableAll", true) || ((int) dialog_id < 0) && !preferences.getBoolean("EnableGroup", true)) && notify_override == 0);
+                settingsCache.put(dialog_id, value);
+            }
+            if (!value) {
+                continue;
+            }
+            int count = entry.getValue();
+            pushDialogs.put(dialog_id, count);
+            total_unread_count += count;
+        }
         if (messages != null) {
             for (TLRPC.Message message : messages) {
                 if (pushMessagesDict.containsKey(message.id)) {
@@ -663,28 +678,25 @@ public void processLoadedUnreadMessages(HashMap<Long, Integer> dialogs, ArrayLis
                 }
                 MessageObject messageObject = new MessageObject(message, null, 0);
                 long dialog_id = messageObject.getDialogId();
-                if (dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {
+                Boolean value = settingsCache.get(dialog_id);
+                if (value == null) {
+                    int notify_override = preferences.getInt("notify2_" + dialog_id, 0);
+                    value = !(notify_override == 2 || (!preferences.getBoolean("EnableAll", true) || ((int) dialog_id < 0) && !preferences.getBoolean("EnableGroup", true)) && notify_override == 0);
+                    settingsCache.put(dialog_id, value);
+                }
+                if (!value || dialog_id == openned_dialog_id && ApplicationLoader.isScreenOn) {
                     continue;
                 }
                 pushMessagesDict.put(messageObject.messageOwner.id, messageObject);
                 pushMessages.add(0, messageObject);
             }
         }
-
-        pushDialogs.clear();
-        total_unread_count = 0;
-        SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("Notifications", Context.MODE_PRIVATE);
-        for (HashMap.Entry<Long, Integer> entry : dialogs.entrySet()) {
-            pushDialogs.put(entry.getKey(), entry.getValue());
-            total_unread_count += entry.getValue();
-        }
         if (total_unread_count == 0) {
-            pushMessages.clear();
-            pushMessagesDict.clear();
             popupMessages.clear();
             showOrUpdateNotification(false);
             NotificationCenter.getInstance().postNotificationName(NotificationCenter.pushMessagesUpdated);
         }
+
         if (preferences.getBoolean("badgeNumber", true)) {
             setBadge(ApplicationLoader.applicationContext, total_unread_count);
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java b/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java
index 60a345117..ed4f128f7 100644
--- a/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java
+++ b/TMessagesProj/src/main/java/org/telegram/android/SendMessagesHelper.java
@@ -147,6 +147,7 @@ public void run() {
                         for (int a = 0; a < arr.size(); a++) {
                             DelayedMessage obj = arr.get(a);
                             if (enc && obj.sendEncryptedRequest != null || !enc && obj.sendRequest != null) {
+                                MessagesStorage.getInstance().markMessageAsSendError(obj.obj.messageOwner.id);
                                 obj.obj.messageOwner.send_state = MessageObject.MESSAGE_SEND_STATE_SEND_ERROR;
                                 arr.remove(a);
                                 a--;
@@ -392,6 +393,7 @@ private void sendMessage(String message, double lat, double lon, TLRPC.TL_photo
             newMsg.from_id = UserConfig.getClientUserId();
             newMsg.out = true;
             newMsg.date = ConnectionsManager.getInstance().getCurrentTime();
+            UserConfig.saveConfig(false);
         }
         if (newMsg.random_id == 0) {
             newMsg.random_id = getNextRandomId();
@@ -453,11 +455,11 @@ private void sendMessage(String message, double lat, double lon, TLRPC.TL_photo
             newMsg.ttl = encryptedChat.ttl;
         }
 
-        UserConfig.saveConfig(false);
-        final MessageObject newMsgObj = new MessageObject(newMsg, null, 2);
+
+        MessageObject newMsgObj = new MessageObject(newMsg, null, 2);
         newMsgObj.messageOwner.send_state = MessageObject.MESSAGE_SEND_STATE_SENDING;
 
-        final ArrayList<MessageObject> objArr = new ArrayList<MessageObject>();
+        ArrayList<MessageObject> objArr = new ArrayList<MessageObject>();
         objArr.add(newMsgObj);
         ArrayList<TLRPC.Message> arr = new ArrayList<TLRPC.Message>();
         arr.add(newMsg);
@@ -553,7 +555,6 @@ private void sendMessage(String message, double lat, double lon, TLRPC.TL_photo
                         delayedMessage.obj = newMsgObj;
                         delayedMessage.documentLocation = document;
                         delayedMessage.location = document.thumb.location;
-                        performSendDelayedMessage(delayedMessage);
                     } else {
                         TLRPC.TL_inputMediaDocument media = new TLRPC.TL_inputMediaDocument();
                         media.id = new TLRPC.TL_inputDocument();
@@ -889,6 +890,7 @@ public void run() {
                         }
                     });
                 } else {
+                    MessagesStorage.getInstance().markMessageAsSendError(newMsgObj.messageOwner.id);
                     AndroidUtilities.RunOnUIThread(new Runnable() {
                         @Override
                         public void run() {
@@ -994,6 +996,7 @@ public void run() {
                             }
                         });
                     } else {
+                        MessagesStorage.getInstance().markMessageAsSendError(newMsgObj.messageOwner.id);
                         AndroidUtilities.RunOnUIThread(new Runnable() {
                             @Override
                             public void run() {
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java b/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
index 0198496f0..5acd0bcf3 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/ConnectionsManager.java
@@ -988,7 +988,6 @@ public static boolean isConnectedToWiFi() {
             }
         } catch(Exception e) {
             FileLog.e("tmessages", e);
-            return true;
         }
         return false;
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/FileUploadOperation.java b/TMessagesProj/src/main/java/org/telegram/messenger/FileUploadOperation.java
index b2c09ab3c..d967d7b88 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/FileUploadOperation.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/FileUploadOperation.java
@@ -37,6 +37,7 @@
     private byte[] key;
     private byte[] iv;
     private byte[] ivChange;
+    private boolean isEncrypted = false;
     private int fingerprint = 0;
     private boolean isBigFile = false;
     private String fileKey;
@@ -51,32 +52,7 @@
 
     public FileUploadOperation(String location, boolean encrypted) {
         uploadingFilePath = location;
-        if (encrypted) {
-            iv = new byte[32];
-            key = new byte[32];
-            ivChange = new byte[32];
-            Utilities.random.nextBytes(iv);
-            Utilities.random.nextBytes(key);
-            System.arraycopy(iv, 0, ivChange, 0, 32);
-            try {
-                java.security.MessageDigest md = java.security.MessageDigest.getInstance("MD5");
-                byte[] arr = new byte[64];
-                System.arraycopy(key, 0, arr, 0, 32);
-                System.arraycopy(iv, 0, arr, 32, 32);
-                byte[] digest = md.digest(arr);
-                for (int a = 0; a < 4; a++) {
-                    fingerprint |= ((digest[a] ^ digest[a + 4]) & 0xFF) << (a * 8);
-                }
-            } catch (Exception e) {
-                FileLog.e("tmessages", e);
-            }
-        }
-        currentFileId = Utilities.random.nextLong();
-        try {
-            mdEnc = MessageDigest.getInstance("MD5");
-        } catch (NoSuchAlgorithmException e) {
-            FileLog.e("tmessages", e);
-        }
+        isEncrypted = encrypted;
     }
 
     public void start() {
@@ -101,7 +77,13 @@ public void cancel() {
 
     private void cleanup() {
         SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("uploadinfo", Activity.MODE_PRIVATE);
-        preferences.edit().remove(fileKey + "_time").remove(fileKey + "_size").remove(fileKey + "_uploaded").commit();
+        preferences.edit().remove(fileKey + "_time").
+                remove(fileKey + "_size").
+                remove(fileKey + "_uploaded").
+                remove(fileKey + "_id").
+                remove(fileKey + "_iv").
+                remove(fileKey + "_key").
+                remove(fileKey + "_ivc").commit();
     }
 
     private void startUploadRequest() {
@@ -118,6 +100,12 @@ private void startUploadRequest() {
                 totalFileSize = cacheFile.length();
                 if (totalFileSize > 10 * 1024 * 1024) {
                     isBigFile = true;
+                } else {
+                    try {
+                        mdEnc = MessageDigest.getInstance("MD5");
+                    } catch (NoSuchAlgorithmException e) {
+                        FileLog.e("tmessages", e);
+                    }
                 }
 
                 uploadChunkSize = (int) Math.max(32, Math.ceil(totalFileSize / (1024.0f * 3000)));
@@ -133,28 +121,72 @@ private void startUploadRequest() {
                 totalPartsCount = (int) Math.ceil((float) totalFileSize / (float) uploadChunkSize);
                 readBuffer = new byte[uploadChunkSize];
 
-                fileKey = Utilities.MD5(uploadingFilePath);
-                /*SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("uploadinfo", Activity.MODE_PRIVATE); TODO
+                fileKey = Utilities.MD5(uploadingFilePath + (isEncrypted ? "enc" : ""));
+                SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("uploadinfo", Activity.MODE_PRIVATE);
                 long fileSize = preferences.getLong(fileKey + "_size", 0);
                 int currentTime = (int)(System.currentTimeMillis() / 1000);
                 boolean rewrite = false;
                 if (fileSize == totalFileSize) {
+                    currentFileId = preferences.getLong(fileKey + "_id", 0);
                     int date = preferences.getInt(fileKey + "_time", 0);
                     long uploadedSize = preferences.getLong(fileKey + "_uploaded", 0);
-                    if (date != 0) {
+                    if (isEncrypted) {
+                        String ivString = preferences.getString(fileKey + "_iv", null);
+                        String keyString = preferences.getString(fileKey + "_key", null);
+                        if (ivString != null && keyString != null) {
+                            key = Utilities.hexToBytes(keyString);
+                            iv = Utilities.hexToBytes(ivString);
+                            ivChange = new byte[32];
+                            System.arraycopy(iv, 0, ivChange, 0, 32);
+                        } else {
+                            rewrite = true;
+                        }
+                    }
+                    if (!rewrite && date != 0) {
                         if (isBigFile && date < currentTime - 60 * 60 * 24) {
                             date = 0;
                         } else if (!isBigFile && date < currentTime - 60 * 60 * 1.5f) {
                             date = 0;
                         }
                         if (date != 0) {
-                            if (isBigFile) {
-                                uploadedSize = uploadedSize / (1024 * 1024) * (1024 * 1024);
-                            }
                             if (uploadedSize > 0) {
                                 currentUploaded = uploadedSize;
-                                stream.skip(uploadedSize);
                                 currentPartNum = (int) (uploadedSize / uploadChunkSize);
+                                if (!isBigFile) {
+                                    for (int b = 0; b < currentUploaded / uploadChunkSize; b++) {
+                                        int read = stream.read(readBuffer);
+                                        int toAdd = 0;
+                                        if (isEncrypted && read % 16 != 0) {
+                                            toAdd += 16 - read % 16;
+                                        }
+                                        ByteBufferDesc sendBuffer = BuffersStorage.getInstance().getFreeBuffer(read + toAdd);
+                                        if (read != uploadChunkSize || totalPartsCount == currentPartNum + 1) {
+                                            isLastPart = true;
+                                        }
+                                        sendBuffer.writeRaw(readBuffer, 0, read);
+                                        if (isEncrypted) {
+                                            for (int a = 0; a < toAdd; a++) {
+                                                sendBuffer.writeByte(0);
+                                            }
+                                            Utilities.aesIgeEncryption(sendBuffer.buffer, key, ivChange, true, true, 0, read + toAdd);
+                                        }
+                                        sendBuffer.rewind();
+                                        mdEnc.update(sendBuffer.buffer);
+                                        BuffersStorage.getInstance().reuseFreeBuffer(sendBuffer);
+                                    }
+                                } else {
+                                    stream.skip(uploadedSize);
+                                    if (isEncrypted) {
+                                        String ivcString = preferences.getString(fileKey + "_ivc", null);
+                                        if (ivcString != null) {
+                                            ivChange = Utilities.hexToBytes(ivcString);
+                                        } else {
+                                            rewrite = true;
+                                            currentUploaded = 0;
+                                            currentPartNum = 0;
+                                        }
+                                    }
+                                }
                             } else {
                                 rewrite = true;
                             }
@@ -166,34 +198,73 @@ private void startUploadRequest() {
                     rewrite = true;
                 }
                 if (rewrite) {
-                    preferences.edit().putInt(fileKey + "_time", currentTime).putLong(fileKey + "_size", totalFileSize).commit();
-                }*/
+                    if (isEncrypted) {
+                        iv = new byte[32];
+                        key = new byte[32];
+                        ivChange = new byte[32];
+                        Utilities.random.nextBytes(iv);
+                        Utilities.random.nextBytes(key);
+                        System.arraycopy(iv, 0, ivChange, 0, 32);
+                    }
+                    currentFileId = Utilities.random.nextLong();
+                    SharedPreferences.Editor editor = preferences.edit();
+                    editor.putInt(fileKey + "_time", currentTime);
+                    editor.putLong(fileKey + "_size", totalFileSize);
+                    editor.putLong(fileKey + "_id", currentFileId);
+                    editor.remove(fileKey + "_uploaded");
+                    if (isEncrypted) {
+                        editor.putString(fileKey + "_iv", Utilities.bytesToHex(iv));
+                        editor.putString(fileKey + "_ivc", Utilities.bytesToHex(ivChange));
+                        editor.putString(fileKey + "_key", Utilities.bytesToHex(key));
+                    }
+                    editor.commit();
+                }
+
+                if (isEncrypted) {
+                    try {
+                        java.security.MessageDigest md = java.security.MessageDigest.getInstance("MD5");
+                        byte[] arr = new byte[64];
+                        System.arraycopy(key, 0, arr, 0, 32);
+                        System.arraycopy(iv, 0, arr, 32, 32);
+                        byte[] digest = md.digest(arr);
+                        for (int a = 0; a < 4; a++) {
+                            fingerprint |= ((digest[a] ^ digest[a + 4]) & 0xFF) << (a * 8);
+                        }
+                    } catch (Exception e) {
+                        FileLog.e("tmessages", e);
+                    }
+                }
             } else {
-                /*if (saveInfoTimes >= 4) {
+                if (saveInfoTimes >= 4) {
                     saveInfoTimes = 0;
                 }
-                if (saveInfoTimes == 0) {
+                if (isBigFile && currentUploaded % (1024 * 1024) == 0 || !isBigFile && saveInfoTimes == 0) {
                     SharedPreferences preferences = ApplicationLoader.applicationContext.getSharedPreferences("uploadinfo", Activity.MODE_PRIVATE);
-                    preferences.edit().putLong(fileKey + "_uploaded", currentUploaded).commit();
+                    SharedPreferences.Editor editor = preferences.edit();
+                    editor.putLong(fileKey + "_uploaded", currentUploaded);
+                    if (isEncrypted) {
+                        editor.putString(fileKey + "_ivc", Utilities.bytesToHex(ivChange));
+                    }
+                    editor.commit();
                 }
-                saveInfoTimes++;*/
+                saveInfoTimes++;
             }
 
-            int readed = stream.read(readBuffer);
+            int read = stream.read(readBuffer);
             int toAdd = 0;
-            if (key != null && readed % 16 != 0) {
-                toAdd += 16 - readed % 16;
+            if (isEncrypted && read % 16 != 0) {
+                toAdd += 16 - read % 16;
             }
-            ByteBufferDesc sendBuffer = BuffersStorage.getInstance().getFreeBuffer(readed + toAdd);
-            if (readed != uploadChunkSize || totalPartsCount == currentPartNum + 1) {
+            ByteBufferDesc sendBuffer = BuffersStorage.getInstance().getFreeBuffer(read + toAdd);
+            if (read != uploadChunkSize || totalPartsCount == currentPartNum + 1) {
                 isLastPart = true;
             }
-            sendBuffer.writeRaw(readBuffer, 0, readed);
-            if (key != null) {
+            sendBuffer.writeRaw(readBuffer, 0, read);
+            if (isEncrypted) {
                 for (int a = 0; a < toAdd; a++) {
                     sendBuffer.writeByte(0);
                 }
-                Utilities.aesIgeEncryption(sendBuffer.buffer, key, ivChange, true, true, 0, readed + toAdd);
+                Utilities.aesIgeEncryption(sendBuffer.buffer, key, ivChange, true, true, 0, read + toAdd);
             }
             sendBuffer.rewind();
             if (!isBigFile) {
@@ -213,7 +284,7 @@ private void startUploadRequest() {
                 req.bytes = sendBuffer;
                 finalRequest = req;
             }
-            currentUploaded += readed;
+            currentUploaded += read;
         } catch (Exception e) {
             FileLog.e("tmessages", e);
             delegate.didFailedUploadingFile(this);
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java b/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
index 0e0f9fde6..ca4be6f9a 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/TLRPC.java
@@ -8886,7 +8886,6 @@ public void serializeToStream(AbsSerializedData stream) {
         public int last_message_date;
         public long id;
         public int last_read;
-        public int flags;
 
         public void readParams(AbsSerializedData stream) {
             peer = (Peer)TLClassStore.Instance().TLdeserialize(stream, stream.readInt32());
diff --git a/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java b/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
index 2160506da..163b54a69 100644
--- a/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
+++ b/TMessagesProj/src/main/java/org/telegram/messenger/Utilities.java
@@ -166,7 +166,7 @@ public static String parseIntToString(String value) {
     public static String bytesToHex(byte[] bytes) {
         char[] hexChars = new char[bytes.length * 2];
         int v;
-        for ( int j = 0; j < bytes.length; j++ ) {
+        for (int j = 0; j < bytes.length; j++) {
             v = bytes[j] & 0xFF;
             hexChars[j * 2] = hexArray[v >>> 4];
             hexChars[j * 2 + 1] = hexArray[v & 0x0F];
@@ -174,6 +174,15 @@ public static String bytesToHex(byte[] bytes) {
         return new String(hexChars);
     }
 
+    public static byte[] hexToBytes(String hex) {
+        int len = hex.length();
+        byte[] data = new byte[len / 2];
+        for (int i = 0; i < len; i += 2) {
+            data[i / 2] = (byte) ((Character.digit(hex.charAt(i), 16) << 4) + Character.digit(hex.charAt(i + 1), 16));
+        }
+        return data;
+    }
+
     public static boolean isGoodPrime(byte[] prime, int g) {
         if (!(g >= 2 && g <= 7)) {
             return false;
@@ -538,7 +547,7 @@ public static int getColorForId(int id) {
     }
 
     public static int getUserAvatarForId(int id) {
-        if (id / 1000 == 333) {
+        if (id / 1000 == 333 || id / 1000 == 777) {
             return R.drawable.telegram_avatar;
         }
         return arrUsersAvatars[getColorIndex(id)];
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java
index 2798d818b..bedb1568f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatAudioCell.java
@@ -60,7 +60,7 @@
     private String currentNameString;
 
     public ChatAudioCell(Context context) {
-        super(context, false);
+        super(context);
         TAG = MediaController.getInstance().generateObserverTag();
 
         avatarImage = new ImageReceiver(this);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
index f9c357ab7..41365d4e0 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatBaseCell.java
@@ -146,10 +146,9 @@ public void run() {
         }
     }
 
-    public ChatBaseCell(Context context, boolean isMedia) {
+    public ChatBaseCell(Context context) {
         super(context);
         init();
-        media = isMedia;
         avatarImage = new ImageReceiver(this);
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java
index 65abaa294..8b641e69b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMediaCell.java
@@ -16,12 +16,13 @@
 import android.text.Layout;
 import android.text.StaticLayout;
 import android.text.TextPaint;
+import android.text.TextUtils;
 import android.view.MotionEvent;
 import android.view.SoundEffectConstants;
 
 import org.telegram.android.AndroidUtilities;
 import org.telegram.android.ImageLoader;
-import org.telegram.android.MessagesController;
+import org.telegram.android.LocaleController;
 import org.telegram.messenger.FileLoader;
 import org.telegram.android.MediaController;
 import org.telegram.messenger.R;
@@ -45,10 +46,15 @@
 
     private static Drawable placeholderInDrawable;
     private static Drawable placeholderOutDrawable;
+    private static Drawable placeholderDocInDrawable;
+    private static Drawable placeholderDocOutDrawable;
     private static Drawable videoIconDrawable;
     private static Drawable[] buttonStatesDrawables = new Drawable[4];
+    private static Drawable[][] buttonStatesDrawablesDoc = new Drawable[2][2];
     private static TextPaint infoPaint;
     private static MessageObject lastDownloadedGifMessage = null;
+    private static TextPaint namePaint;
+    private static Paint docBackPaint;
 
     private GifDrawable gifDrawable = null;
 
@@ -78,23 +84,38 @@
     private int infoOffset = 0;
     private String currentInfoString;
 
+    private StaticLayout nameLayout;
+    private int nameWidth = 0;
+    private String currentNameString;
+
     public ChatMediaCellDelegate mediaDelegate = null;
 
     public ChatMediaCell(Context context) {
-        super(context, true);
+        super(context);
 
         if (placeholderInDrawable == null) {
             placeholderInDrawable = getResources().getDrawable(R.drawable.photo_placeholder_in);
             placeholderOutDrawable = getResources().getDrawable(R.drawable.photo_placeholder_out);
+            placeholderDocInDrawable = getResources().getDrawable(R.drawable.doc_blue);
+            placeholderDocOutDrawable = getResources().getDrawable(R.drawable.doc_green);
             buttonStatesDrawables[0] = getResources().getDrawable(R.drawable.photoload);
             buttonStatesDrawables[1] = getResources().getDrawable(R.drawable.photocancel);
             buttonStatesDrawables[2] = getResources().getDrawable(R.drawable.photogif);
             buttonStatesDrawables[3] = getResources().getDrawable(R.drawable.playvideo);
+            buttonStatesDrawablesDoc[0][0] = getResources().getDrawable(R.drawable.docload_b);
+            buttonStatesDrawablesDoc[1][0] = getResources().getDrawable(R.drawable.doccancel_b);
+            buttonStatesDrawablesDoc[0][1] = getResources().getDrawable(R.drawable.docload_g);
+            buttonStatesDrawablesDoc[1][1] = getResources().getDrawable(R.drawable.doccancel_g);
             videoIconDrawable = getResources().getDrawable(R.drawable.ic_video);
 
             infoPaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
-            infoPaint.setColor(0xffffffff);
             infoPaint.setTextSize(AndroidUtilities.dp(12));
+
+            namePaint = new TextPaint(Paint.ANTI_ALIAS_FLAG);
+            namePaint.setColor(0xff000000);
+            namePaint.setTextSize(AndroidUtilities.dp(16));
+
+            docBackPaint = new Paint();
         }
 
         TAG = MediaController.getInstance().generateObserverTag();
@@ -139,7 +160,7 @@ public boolean onTouchEvent(MotionEvent event) {
                     buttonPressed = 1;
                     invalidate();
                     result = true;
-                } else if (photoImage.isInsideImage(x, y)) {
+                } else if (x >= photoImage.getImageX() && x <= photoImage.getImageX() + backgroundWidth && y >= photoImage.getImageY() && y <= photoImage.getImageY() + photoImage.getImageHeight()) {
                     imagePressed = true;
                     result = true;
                 }
@@ -217,6 +238,12 @@ private void didPressedImage() {
             if (mediaDelegate != null) {
                 mediaDelegate.didPressedImage(this);
             }
+        } else if (currentMessageObject.type == 9) {
+            if (buttonState == -1) {
+                if (mediaDelegate != null) {
+                    mediaDelegate.didPressedImage(this);
+                }
+            }
         }
     }
 
@@ -229,7 +256,7 @@ private void didPressedButton() {
                 } else {
                     photoImage.setImage(currentPhotoObject.photoOwner.location, currentPhotoFilter, currentMessageObject.isOut() ? placeholderOutDrawable : placeholderInDrawable, currentPhotoObject.photoOwner.size);
                 }
-            } else if (currentMessageObject.type == 8) {
+            } else if (currentMessageObject.type == 8 || currentMessageObject.type == 9) {
                 FileLoader.getInstance().loadFile(currentMessageObject.messageOwner.media.document);
                 lastDownloadedGifMessage = currentMessageObject;
             } else if (currentMessageObject.type == 3) {
@@ -247,7 +274,7 @@ private void didPressedButton() {
                 cancelLoading = true;
                 if (currentMessageObject.type == 1) {
                     ImageLoader.getInstance().cancelLoadingForImageView(photoImage);
-                } else if (currentMessageObject.type == 8) {
+                } else if (currentMessageObject.type == 8 || currentMessageObject.type == 9) {
                     FileLoader.getInstance().cancelLoadFile(currentMessageObject.messageOwner.media.document);
                     if (lastDownloadedGifMessage != null && lastDownloadedGifMessage.messageOwner.id == currentMessageObject.messageOwner.id) {
                         lastDownloadedGifMessage = null;
@@ -301,6 +328,7 @@ private boolean isPhotoDataChanged(MessageObject object) {
 
     @Override
     public void setMessageObject(MessageObject messageObject) {
+        media = messageObject.type != 9;
         if (currentMessageObject != messageObject || isPhotoDataChanged(messageObject) || isUserDataChanged()) {
             super.setMessageObject(messageObject);
             cancelLoading = false;
@@ -312,7 +340,41 @@ public void setMessageObject(MessageObject messageObject) {
             currentUrl = null;
             photoNotSet = false;
 
-            if (messageObject.type == 8) {
+            if (messageObject.type == 9) {
+                String name = messageObject.messageOwner.media.document.file_name;
+                if (name == null || name.length() == 0) {
+                    name = LocaleController.getString("AttachDocument", R.string.AttachDocument);
+                }
+                int maxWidth = Math.min(AndroidUtilities.displaySize.x, AndroidUtilities.displaySize.y) - AndroidUtilities.dp(122 + 86 + 24);
+                if (currentNameString == null || !currentNameString.equals(name)) {
+                    currentNameString = name;
+                    nameWidth = (int) Math.ceil(namePaint.measureText(currentNameString));
+                    nameWidth = Math.min(maxWidth, (int) Math.ceil(namePaint.measureText(currentNameString)));
+                    CharSequence str = TextUtils.ellipsize(currentNameString, namePaint, nameWidth, TextUtils.TruncateAt.END);
+                    nameLayout = new StaticLayout(str, namePaint, nameWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
+                }
+
+                String fileName = messageObject.getFileName();
+                int idx = fileName.lastIndexOf(".");
+                String ext = null;
+                if (idx != -1) {
+                    ext = fileName.substring(idx + 1);
+                }
+                if (ext == null || ext.length() == 0) {
+                    ext = messageObject.messageOwner.media.document.mime_type;
+                }
+                ext = ext.toUpperCase();
+
+                String str = Utilities.formatFileSize(messageObject.messageOwner.media.document.size) + " " + ext;
+
+                if (currentInfoString == null || !currentInfoString.equals(str)) {
+                    currentInfoString = str;
+                    infoOffset = 0;
+                    infoWidth = Math.min(maxWidth, (int) Math.ceil(infoPaint.measureText(currentInfoString)));
+                    CharSequence str2 = TextUtils.ellipsize(currentInfoString, infoPaint, infoWidth, TextUtils.TruncateAt.END);
+                    infoLayout = new StaticLayout(str2, infoPaint, infoWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
+                }
+            } else if (messageObject.type == 8) {
                 gifDrawable = MediaController.getInstance().getGifDrawable(this, false);
 
                 String str = Utilities.formatFileSize(messageObject.messageOwner.media.document.size);
@@ -326,6 +388,8 @@ public void setMessageObject(MessageObject messageObject) {
                     infoLayout = new StaticLayout(senderName, infoPaint, infoWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
                     infoLayout2 = new StaticLayout(currentInfoString, infoPaint, infoWidth2, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
                 }
+                nameLayout = null;
+                currentNameString = null;
             } else if (messageObject.type == 3) {
                 int duration = messageObject.messageOwner.media.video.duration;
                 int minutes = duration / 60;
@@ -350,13 +414,31 @@ public void setMessageObject(MessageObject messageObject) {
                     infoLayout = new StaticLayout(currentInfoString, infoPaint, infoWidth, Layout.Alignment.ALIGN_NORMAL, 1.0f, 0.0f, false);
                     infoLayout2 = null;
                 }
+                nameLayout = null;
+                currentNameString = null;
             } else {
                 currentInfoString = null;
+                currentNameString = null;
                 infoLayout = null;
-                infoLayout2 = null;
+                nameLayout = null;
             }
 
-            if (messageObject.type == 4) {
+            if (messageObject.type == 9) {
+                photoWidth = AndroidUtilities.dp(86);
+                photoHeight = AndroidUtilities.dp(86);
+                backgroundWidth = photoWidth + Math.max(nameWidth, infoWidth) + AndroidUtilities.dp(40);
+                currentPhotoObject = PhotoObject.getClosestImageWithSize(messageObject.photoThumbs, 800, 800);
+                if (currentPhotoObject != null) {
+                    if (currentPhotoObject.image != null) {
+                        photoImage.setImageBitmap(currentPhotoObject.image);
+                    } else {
+                        currentPhotoFilter = String.format(Locale.US, "%d_%d_b", photoWidth, photoHeight);
+                        photoImage.setImage(currentPhotoObject.photoOwner.location, currentPhotoFilter, null, currentPhotoObject.photoOwner.size);
+                    }
+                } else {
+                    photoImage.setImageBitmap((BitmapDrawable)null);
+                }
+            } else if (messageObject.type == 4) {
                 photoWidth = AndroidUtilities.dp(100);
                 photoHeight = AndroidUtilities.dp(100);
                 backgroundWidth = photoWidth + AndroidUtilities.dp(12);
@@ -468,7 +550,7 @@ public void updateButtonState() {
             }
             fileName = FileLoader.getAttachFileName(currentPhotoObject.photoOwner);
             cacheFile = new File(AndroidUtilities.getCacheDir(), fileName);
-        } else if (currentMessageObject.type == 8 || currentMessageObject.type == 3) {
+        } else if (currentMessageObject.type == 8 || currentMessageObject.type == 3 || currentMessageObject.type == 9) {
             if (currentMessageObject.messageOwner.attachPath != null && currentMessageObject.messageOwner.attachPath.length() != 0) {
                 File f = new File(currentMessageObject.messageOwner.attachPath);
                 if (f.exists()) {
@@ -552,7 +634,11 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
 
         int x;
         if (currentMessageObject.isOut()) {
-            x = layoutWidth - backgroundWidth - AndroidUtilities.dp(3);
+            if (media) {
+                x = layoutWidth - backgroundWidth - AndroidUtilities.dp(3);
+            } else {
+                x = layoutWidth - backgroundWidth + AndroidUtilities.dp(6);
+            }
         } else {
             if (isChat) {
                 x = AndroidUtilities.dp(67);
@@ -564,11 +650,12 @@ protected void onLayout(boolean changed, int left, int top, int right, int botto
         int size = AndroidUtilities.dp(44);
         buttonX = (int)(x + (photoWidth - size) / 2.0f);
         buttonY = (int)(AndroidUtilities.dp(7) + (photoHeight - size) / 2.0f);
-        progressView.rect.set(buttonX + AndroidUtilities.dp(2), buttonY + AndroidUtilities.dp(2), buttonX + AndroidUtilities.dp(42), buttonY + AndroidUtilities.dp(42));
+        progressView.rect.set(buttonX + AndroidUtilities.dp(1), buttonY + AndroidUtilities.dp(1), buttonX + AndroidUtilities.dp(43), buttonY + AndroidUtilities.dp(43));
     }
 
     @Override
     protected void onAfterBackgroundDraw(Canvas canvas) {
+        boolean imageDrawn = false;
         if (gifDrawable != null) {
             canvas.save();
             gifDrawable.setBounds(photoImage.getImageX(), photoImage.getImageY(), photoImage.getImageX() + photoWidth, photoImage.getImageY() + photoHeight);
@@ -576,12 +663,46 @@ protected void onAfterBackgroundDraw(Canvas canvas) {
             canvas.restore();
         } else {
             photoImage.setVisible(!PhotoViewer.getInstance().isShowingImage(currentMessageObject), false);
-            photoImage.draw(canvas, photoImage.getImageX(), photoImage.getImageY(), photoWidth, photoHeight);
+            imageDrawn = photoImage.draw(canvas, photoImage.getImageX(), photoImage.getImageY(), photoWidth, photoHeight);
             drawTime = photoImage.getVisible();
         }
 
+        if (currentMessageObject.type == 9) {
+            if (currentMessageObject.isOut()) {
+                infoPaint.setColor(0xff75b166);
+                docBackPaint.setColor(0xffd0f3b3);
+            } else {
+                infoPaint.setColor(0xffa1adbb);
+                docBackPaint.setColor(0xffebf0f5);
+            }
+
+            if (!imageDrawn) {
+                canvas.drawRect(photoImage.getImageX(), photoImage.getImageY(), photoImage.getImageX() + photoImage.getImageWidth(), photoImage.getImageY() + photoImage.getImageHeight(), docBackPaint);
+
+                if (buttonState == -1) {
+                    Drawable drawable = currentMessageObject.isOut() ? placeholderDocOutDrawable : placeholderDocInDrawable;
+                    setDrawableBounds(drawable, photoImage.getImageX() + AndroidUtilities.dp(27), photoImage.getImageY() + AndroidUtilities.dp(27));
+                    drawable.draw(canvas);
+                }
+                if (currentMessageObject.isOut()) {
+                    progressView.setColor(0xff81bd72);
+                } else {
+                    progressView.setColor(0xffadbdcc);
+                }
+            } else {
+                progressView.setColor(0xffffffff);
+            }
+        } else {
+            progressView.setColor(0xffffffff);
+        }
+
         if (buttonState >= 0 && buttonState < 4) {
-            Drawable currentButtonDrawable = buttonStatesDrawables[buttonState];
+            Drawable currentButtonDrawable = null;
+            if (currentMessageObject.type == 9 && !imageDrawn) {
+                currentButtonDrawable = buttonStatesDrawablesDoc[buttonState][currentMessageObject.isOut() ? 1 : 0];
+            } else {
+                currentButtonDrawable = buttonStatesDrawables[buttonState];
+            }
             setDrawableBounds(currentButtonDrawable, buttonX, buttonY);
             currentButtonDrawable.draw(canvas);
         }
@@ -590,13 +711,21 @@ protected void onAfterBackgroundDraw(Canvas canvas) {
             progressView.draw(canvas);
         }
 
-        if (infoLayout != null && ((buttonState >= 0 && buttonState < 4) || currentMessageObject.type == 1)) {
+        if (nameLayout != null) {
+            canvas.save();
+            canvas.translate(photoImage.getImageX() + photoImage.getImageWidth() + AndroidUtilities.dp(10), photoImage.getImageY() + AndroidUtilities.dp(8));
+            nameLayout.draw(canvas);
+            canvas.restore();
 
-            if (currentMessageObject.type == 1){
-                setDrawableBounds(mediaBackgroundDrawable, photoImage.getImageX() + AndroidUtilities.dp(4), photoImage.getImageY() + AndroidUtilities.dp(4), infoWidth + AndroidUtilities.dp(8), AndroidUtilities.dpf(16.5f));
-            } else {
-                setDrawableBounds(mediaBackgroundDrawable, photoImage.getImageX() + AndroidUtilities.dp(4), photoImage.getImageY() + AndroidUtilities.dp(4), Math.max(infoWidth , infoWidth2 + infoOffset) + AndroidUtilities.dp(8), 2 * AndroidUtilities.dpf(16.5f));
+            if (infoLayout != null) {
+                canvas.save();
+                canvas.translate(photoImage.getImageX() + photoImage.getImageWidth() + AndroidUtilities.dp(10), photoImage.getImageY() + AndroidUtilities.dp(30));
+                infoLayout.draw(canvas);
+                canvas.restore();
             }
+        } else if (infoLayout != null && (buttonState == 1 || buttonState == 0 || buttonState == 3)) {
+            infoPaint.setColor(0xffffffff);
+            setDrawableBounds(mediaBackgroundDrawable, photoImage.getImageX() + AndroidUtilities.dp(4), photoImage.getImageY() + AndroidUtilities.dp(4), infoWidth + AndroidUtilities.dp(8) + infoOffset, AndroidUtilities.dpf(16.5f));
             mediaBackgroundDrawable.draw(canvas);
 
             if (currentMessageObject.type == 3) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
index 85693349a..8d03bfb04 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatMessageCell.java
@@ -29,7 +29,7 @@
     private int totalVisibleBlocksCount = 0;
 
     public ChatMessageCell(Context context) {
-        super(context, false);
+        super(context);
         drawForwardedName = true;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatOrUserCell.java b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatOrUserCell.java
index 823a5ae19..202138373 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatOrUserCell.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Cells/ChatOrUserCell.java
@@ -405,6 +405,7 @@ public void build(int width, int height) {
             }
             avatarImage.setImageCoords(avatarLeft, avatarTop, AndroidUtilities.dp(50), AndroidUtilities.dp(50));
 
+
             double widthpx = 0;
             float left = 0;
             if (LocaleController.isRTL) {
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
index c4a948779..201a3664c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/ChatActivity.java
@@ -43,7 +43,6 @@
 import android.widget.FrameLayout;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
-import android.widget.ProgressBar;
 import android.widget.RelativeLayout;
 import android.widget.TextView;
 import android.widget.Toast;
@@ -62,7 +61,6 @@
 import org.telegram.android.MessageObject;
 import org.telegram.android.PhotoObject;
 import org.telegram.messenger.ConnectionsManager;
-import org.telegram.messenger.FileLoader;
 import org.telegram.android.MessagesController;
 import org.telegram.android.NotificationCenter;
 import org.telegram.messenger.R;
@@ -149,7 +147,6 @@
     private boolean firstLoading = true;
 
     private int minDate = 0;
-    private int progressTag = 0;
     private boolean first = true;
     private int unread_to_load = 0;
     private int first_unread_id = 0;
@@ -163,10 +160,6 @@
     private TLRPC.ChatParticipants info = null;
     private int onlineCount = -1;
 
-    private HashMap<String, ProgressBar> progressBarMap = new HashMap<String, ProgressBar>();
-    private HashMap<String, ArrayList<ProgressBar>> loadingFile = new HashMap<String, ArrayList<ProgressBar>>();
-    private HashMap<Integer, String> progressByTag = new HashMap<Integer, String>();
-
     private CharSequence lastPrintString;
 
     private long chatEnterTime = 0;
@@ -344,10 +337,6 @@ public void needSendTyping() {
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.encryptedChatUpdated);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.messagesReadedEncrypted);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.removeAllMessagesFromDialog);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileUploadProgressChanged);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileDidFailedLoad);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileDidLoaded);
-        NotificationCenter.getInstance().addObserver(this, NotificationCenter.FileLoadProgressChanged);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.audioProgressDidChanged);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.audioDidReset);
         NotificationCenter.getInstance().addObserver(this, NotificationCenter.screenshotTook);
@@ -384,10 +373,6 @@ public void onFragmentDestroy() {
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.encryptedChatUpdated);
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.messagesReadedEncrypted);
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.removeAllMessagesFromDialog);
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.FileUploadProgressChanged);
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.FileDidFailedLoad);
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.FileDidLoaded);
-        NotificationCenter.getInstance().removeObserver(this, NotificationCenter.FileLoadProgressChanged);
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.contactsDidLoaded);
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.audioProgressDidChanged);
         NotificationCenter.getInstance().removeObserver(this, NotificationCenter.audioDidReset);
@@ -724,7 +709,7 @@ public boolean onTouch(View v, MotionEvent event) {
             }
             emptyView.setPadding(AndroidUtilities.dp(7), AndroidUtilities.dp(1), AndroidUtilities.dp(7), AndroidUtilities.dp(1));
 
-            if (currentUser != null && currentUser.id / 1000 == 333) {
+            if (currentUser != null && (currentUser.id / 1000 == 333 || currentUser.id % 1000 == 0)) {
                 emptyView.setText(LocaleController.getString("GotAQuestion", R.string.GotAQuestion));
             }
 
@@ -1057,22 +1042,6 @@ public void onClick(DialogInterface dialog, int which) {
         }
     }
 
-    private void addToLoadingFile(String path, ProgressBar bar) {
-        ArrayList<ProgressBar> arr = loadingFile.get(path);
-        if (arr == null) {
-            arr = new ArrayList<ProgressBar>();
-            loadingFile.put(path, arr);
-        }
-        arr.add(bar);
-    }
-
-    private void removeFromloadingFile(String path, ProgressBar bar) {
-        ArrayList<ProgressBar> arr = loadingFile.get(path);
-        if (arr != null) {
-            arr.remove(bar);
-        }
-    }
-
     private void updateOnlineCount() {
         if (info == null) {
             return;
@@ -1103,7 +1072,7 @@ private int getMessageType(MessageObject messageObject) {
                     return -1;
                 }
             } else {
-                if (messageObject.type == 7) {
+                if (messageObject.type == 6) {
                     return -1;
                 } else if (messageObject.type == 10 || messageObject.type == 11) {
                     if (messageObject.messageOwner.id == 0) {
@@ -1145,7 +1114,7 @@ private int getMessageType(MessageObject messageObject) {
                 }
             }
         } else {
-            if (messageObject.type == 7) {
+            if (messageObject.type == 6) {
                 return -1;
             } else if (messageObject.messageOwner.send_state == MessageObject.MESSAGE_SEND_STATE_SEND_ERROR) {
                 if (!(messageObject.messageOwner.media instanceof TLRPC.TL_messageMediaEmpty)) {
@@ -1784,7 +1753,8 @@ public void didReceivedNotification(int id, final Object... args) {
                         dateMsg.message = LocaleController.formatDateChat(obj.messageOwner.date);
                         dateMsg.id = 0;
                         MessageObject dateObj = new MessageObject(dateMsg, null);
-                        dateObj.contentType = dateObj.type = 10;
+                        dateObj.type = 10;
+                        dateObj.contentType = 7;
                         if (forwardLoad) {
                             messages.add(0, dateObj);
                         } else {
@@ -1807,7 +1777,7 @@ public void didReceivedNotification(int id, final Object... args) {
                             dateMsg.message = "";
                             dateMsg.id = 0;
                             MessageObject dateObj = new MessageObject(dateMsg, null);
-                            dateObj.contentType = dateObj.type = 7;
+                            dateObj.contentType = dateObj.type = 6;
                             boolean dateAdded = true;
                             if (a != messArr.size() - 1) {
                                 MessageObject next = messArr.get(a + 1);
@@ -2021,9 +1991,6 @@ public void run() {
                         if (minDate == 0 || obj.messageOwner.date < minDate) {
                             minDate = obj.messageOwner.date;
                         }
-                        if (obj.messageOwner.attachPath != null && obj.messageOwner.attachPath.length() != 0) {
-                            progressBarMap.put(obj.messageOwner.attachPath, null);
-                        }
 
                         if (obj.isOut()) {
                             removeUnreadPlane(false);
@@ -2051,7 +2018,8 @@ public void run() {
                             dateMsg.message = LocaleController.formatDateChat(obj.messageOwner.date);
                             dateMsg.id = 0;
                             MessageObject dateObj = new MessageObject(dateMsg, null);
-                            dateObj.contentType = dateObj.type = 10;
+                            dateObj.type = 10;
+                            dateObj.contentType = 7;
                             messages.add(0, dateObj);
                         }
                         if (!obj.isOut() && obj.messageOwner.unread) {
@@ -2186,17 +2154,11 @@ public void run() {
                 obj.messageOwner.id = newMsgId;
                 obj.messageOwner.send_state = MessageObject.MESSAGE_SEND_STATE_SENT;
                 updateVisibleRows();
-                if (obj.messageOwner.attachPath != null && obj.messageOwner.attachPath.length() != 0) {
-                    progressBarMap.remove(obj.messageOwner.attachPath);
-                }
             }
         } else if (id == NotificationCenter.messageReceivedByAck) {
             Integer msgId = (Integer)args[0];
             MessageObject obj = messagesDict.get(msgId);
             if (obj != null) {
-                if (obj.messageOwner.attachPath != null && obj.messageOwner.attachPath.length() != 0) {
-                    progressBarMap.remove(obj.messageOwner.attachPath);
-                }
                 obj.messageOwner.send_state = MessageObject.MESSAGE_SEND_STATE_SENT;
                 updateVisibleRows();
             }
@@ -2206,9 +2168,6 @@ public void run() {
             if (obj != null) {
                 obj.messageOwner.send_state = MessageObject.MESSAGE_SEND_STATE_SEND_ERROR;
                 updateVisibleRows();
-                if (obj.messageOwner.attachPath != null && obj.messageOwner.attachPath.length() != 0) {
-                    progressBarMap.remove(obj.messageOwner.attachPath);
-                }
             }
         } else if (id == NotificationCenter.chatInfoDidLoaded) {
             int chatId = (Integer)args[0];
@@ -2219,40 +2178,6 @@ public void run() {
                     SendMessagesHelper.getInstance().setCurrentChatInfo(info);
                 }
             }
-        } else if (id == NotificationCenter.FileUploadProgressChanged) {
-            String location = (String)args[0];
-            boolean enc = (Boolean)args[2];
-            if (enc && currentEncryptedChat == null) {
-                return;
-            } else if (!enc && currentEncryptedChat != null) {
-                return;
-            }
-            ProgressBar bar;
-            if ((bar = progressBarMap.get(location)) != null) {
-                Float progress = (Float)args[1];
-                bar.setProgress((int) (progress * 100));
-            }
-        } else if (id == NotificationCenter.FileDidFailedLoad) {
-            String location = (String)args[0];
-            if (loadingFile.containsKey(location)) {
-                loadingFile.remove(location);
-                updateVisibleRows();
-            }
-        } else if (id == NotificationCenter.FileDidLoaded) {
-            String location = (String)args[0];
-            if (loadingFile.containsKey(location)) {
-                loadingFile.remove(location);
-                updateVisibleRows();
-            }
-        } else if (id == NotificationCenter.FileLoadProgressChanged) {
-            String location = (String)args[0];
-            ArrayList<ProgressBar> arr = loadingFile.get(location);
-            if (arr != null) {
-                Float progress = (Float)args[1];
-                for (ProgressBar bar : arr) {
-                    bar.setProgress((int)(progress * 100));
-                }
-            }
         } else if (id == NotificationCenter.contactsDidLoaded) {
             updateContactStatus();
             updateSubtitle();
@@ -2377,12 +2302,10 @@ private void updateContactStatus() {
                 currentUser = user;
             }
             if (currentEncryptedChat != null && !(currentEncryptedChat instanceof TLRPC.TL_encryptedChat)
-                    || currentUser.id / 1000 == 333
-                    || currentUser.id / 1000 == 777
+                    || currentUser.id / 1000 == 333 || currentUser.id / 1000 == 777
                     || currentUser instanceof TLRPC.TL_userEmpty || currentUser instanceof TLRPC.TL_userDeleted
-                    || (currentUser.phone != null && currentUser.phone.length() != 0 &&
-                    ContactsController.getInstance().contactsDict.get(currentUser.id) != null &&
-                    (ContactsController.getInstance().contactsDict.size() != 0 || !ContactsController.getInstance().isLoadingContacts()))) {
+                    || ContactsController.getInstance().isLoadingContacts()
+                    || (currentUser.phone != null && currentUser.phone.length() != 0 && ContactsController.getInstance().contactsDict.get(currentUser.id) != null && (ContactsController.getInstance().contactsDict.size() != 0 || !ContactsController.getInstance().isLoadingContacts()))) {
                 topPanel.setVisibility(View.GONE);
             } else {
                 topPanel.setVisibility(View.VISIBLE);
@@ -3146,12 +3069,6 @@ private void updateRowBackground(ChatListRowHolderEx holder, boolean disableSele
             } else if (messageType == 13) {
                 holder.chatBubbleView.setBackgroundResource(R.drawable.chat_incoming_text_states);
                 holder.chatBubbleView.setPadding(AndroidUtilities.dp(15), AndroidUtilities.dp(6), AndroidUtilities.dp(9), 0);
-            } else if (messageType == 8) {
-                holder.chatBubbleView.setBackgroundResource(R.drawable.chat_outgoing_text_states);
-                holder.chatBubbleView.setPadding(AndroidUtilities.dp(9), AndroidUtilities.dp(9), AndroidUtilities.dp(18), 0);
-            } else if (messageType == 9) {
-                holder.chatBubbleView.setBackgroundResource(R.drawable.chat_incoming_text_states);
-                holder.chatBubbleView.setPadding(AndroidUtilities.dp(18), AndroidUtilities.dp(9), AndroidUtilities.dp(9), 0);
             }
         } else {
             if (messageType == 12) {
@@ -3168,20 +3085,6 @@ private void updateRowBackground(ChatListRowHolderEx holder, boolean disableSele
                     holder.chatBubbleView.setBackgroundResource(R.drawable.msg_in);
                 }
                 holder.chatBubbleView.setPadding(AndroidUtilities.dp(15), AndroidUtilities.dp(6), AndroidUtilities.dp(9), 0);
-            } else if (messageType == 8) {
-                if (selected) {
-                    holder.chatBubbleView.setBackgroundResource(R.drawable.msg_out_selected);
-                } else {
-                    holder.chatBubbleView.setBackgroundResource(R.drawable.msg_out);
-                }
-                holder.chatBubbleView.setPadding(AndroidUtilities.dp(9), AndroidUtilities.dp(9), AndroidUtilities.dp(18), 0);
-            } else if (messageType == 9) {
-                if (selected) {
-                    holder.chatBubbleView.setBackgroundResource(R.drawable.msg_in_selected);
-                } else {
-                    holder.chatBubbleView.setBackgroundResource(R.drawable.msg_in);
-                }
-                holder.chatBubbleView.setPadding(AndroidUtilities.dp(18), AndroidUtilities.dp(9), AndroidUtilities.dp(9), 0);
             }
         }
     }
@@ -3343,28 +3246,20 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                     view = new ChatMessageCell(mContext);
                 } if (type == 1) {
                     view = new ChatMediaCell(mContext);
-                } else if (type == 10) {
+                } else if (type == 7) {
                     view = li.inflate(R.layout.chat_action_message_layout, viewGroup, false);
-                } else if (type == 11) {
+                } else if (type == 8) {
                     view = li.inflate(R.layout.chat_action_change_photo_layout, viewGroup, false);
-                } else if (type == 4) {
+                } else if (type == 3) {
                     view = li.inflate(R.layout.chat_outgoing_contact_layout, viewGroup, false);
-                } else if (type == 5) {
+                } else if (type == 4) {
                     if (currentChat != null) {
                         view = li.inflate(R.layout.chat_group_incoming_contact_layout, viewGroup, false);
                     } else {
                         view = li.inflate(R.layout.chat_incoming_contact_layout, viewGroup, false);
                     }
-                } else if (type == 7) {
+                } else if (type == 6) {
                     view = li.inflate(R.layout.chat_unread_layout, viewGroup, false);
-                } else if (type == 8) {
-                    view = li.inflate(R.layout.chat_outgoing_document_layout, viewGroup, false);
-                } else if (type == 9) {
-                    if (currentChat != null) {
-                        view = li.inflate(R.layout.chat_group_incoming_document_layout, viewGroup, false);
-                    } else {
-                        view = li.inflate(R.layout.chat_incoming_document_layout, viewGroup, false);
-                    }
                 } else if (type == 2) {
                     view = new ChatAudioCell(mContext);
                 }
@@ -3449,6 +3344,48 @@ public void didPressedImage(ChatMediaCell cell) {
                                 LocationActivity fragment = new LocationActivity();
                                 fragment.setMessageObject(message);
                                 presentFragment(fragment);
+                            } else if (message.type == 9) {
+                                File f = null;
+                                String fileName = message.getFileName();
+                                if (message.messageOwner.attachPath != null && message.messageOwner.attachPath.length() != 0) {
+                                    f = new File(message.messageOwner.attachPath);
+                                }
+                                if (f == null || f != null && !f.exists()) {
+                                    f = new File(AndroidUtilities.getCacheDir(), fileName);
+                                }
+                                if (f != null && f.exists()) {
+                                    String realMimeType = null;
+                                    try {
+                                        Intent intent = new Intent(Intent.ACTION_VIEW);
+                                        if (message.type == 8 || message.type == 9) {
+                                            MimeTypeMap myMime = MimeTypeMap.getSingleton();
+                                            int idx = fileName.lastIndexOf(".");
+                                            if (idx != -1) {
+                                                String ext = fileName.substring(idx + 1);
+                                                realMimeType = myMime.getMimeTypeFromExtension(ext.toLowerCase());
+                                                if (realMimeType != null) {
+                                                    intent.setDataAndType(Uri.fromFile(f), realMimeType);
+                                                } else {
+                                                    intent.setDataAndType(Uri.fromFile(f), "text/plain");
+                                                }
+                                            } else {
+                                                intent.setDataAndType(Uri.fromFile(f), "text/plain");
+                                            }
+                                        }
+                                        if (realMimeType != null) {
+                                            try {
+                                                getParentActivity().startActivity(intent);
+                                            } catch (Exception e) {
+                                                intent.setDataAndType(Uri.fromFile(f), "text/plain");
+                                                getParentActivity().startActivity(intent);
+                                            }
+                                        } else {
+                                            getParentActivity().startActivity(intent);
+                                        }
+                                    } catch (Exception e) {
+                                        alertUserOpenError(message);
+                                    }
+                                }
                             }
                         }
                     };
@@ -3480,11 +3417,11 @@ public int getItemViewType(int i) {
             if (!endReached && messages.size() != 0) {
                 offset = 0;
                 if (i == 0) {
-                    return 6;
+                    return 5;
                 }
             }
             if (!unread_end_reached && i == (messages.size() + 1 - offset)) {
-                return 6;
+                return 5;
             }
             MessageObject message = messages.get(messages.size() - i - offset);
             return message.contentType;
@@ -3492,7 +3429,7 @@ public int getItemViewType(int i) {
 
         @Override
         public int getViewTypeCount() {
-            return 12;
+            return 9;
         }
 
         @Override
@@ -3519,8 +3456,6 @@ public boolean isEmpty() {
         public BackupImageView photoImage;
         public ImageView halfCheckImage;
         public ImageView checkImage;
-        public TextView actionAttachButton;
-        public TextView videoTimeText;
         public MessageObject message;
         public TextView phoneTextView;
         public BackupImageView contactAvatar;
@@ -3529,14 +3464,6 @@ public boolean isEmpty() {
         public View addContactView;
         public View chatBubbleView;
 
-        public ProgressBar actionProgress;
-        public View actionView;
-        public ImageView actionCancelButton;
-
-        private PhotoObject photoObjectToSet = null;
-        private File photoFile = null;
-        private String photoFilter = null;
-
         public void update() {
             TLRPC.User fromUser = MessagesController.getInstance().getUser(message.messageOwner.from_id);
 
@@ -3622,51 +3549,9 @@ public void update() {
                     contactAvatar.setImageResource(Utilities.getUserAvatarForId(message.messageOwner.media.user_id));
                     addContactView.setVisibility(View.GONE);
                 }
-            } else if (type == 7) {
+            } else if (type == 6) {
                 messageTextView.setTextSize(16);
                 messageTextView.setText(LocaleController.formatPluralString("NewMessages", unread_to_load));
-            } else if (type == 8 || type == 9) {
-                TLRPC.Document document = message.messageOwner.media.document;
-                if (document instanceof TLRPC.TL_document || document instanceof TLRPC.TL_documentEncrypted) {
-                    nameTextView.setText(message.messageOwner.media.document.file_name);
-
-                    String fileName = message.getFileName();
-                    int idx = fileName.lastIndexOf(".");
-                    String ext = null;
-                    if (idx != -1) {
-                        ext = fileName.substring(idx + 1);
-                    }
-                    if (ext == null || ext.length() == 0) {
-                        ext = message.messageOwner.media.document.mime_type;
-                    }
-                    ext = ext.toUpperCase();
-                    if (document.size < 1024) {
-                        phoneTextView.setText(String.format("%d B %s", document.size, ext));
-                    } else if (document.size < 1024 * 1024) {
-                        phoneTextView.setText(String.format("%.1f KB %s", document.size / 1024.0f, ext));
-                    } else {
-                        phoneTextView.setText(String.format("%.1f MB %s", document.size / 1024.0f / 1024.0f, ext));
-                    }
-                    if (document.thumb instanceof TLRPC.TL_photoSize) {
-                        contactAvatar.setImage(document.thumb.location, "50_50", type == 8 ? R.drawable.doc_green : R.drawable.doc_blue);
-                    } else if (document.thumb instanceof TLRPC.TL_photoCachedSize) {
-                        contactAvatar.setImage(document.thumb.location, "50_50", type == 8 ? R.drawable.doc_green : R.drawable.doc_blue);
-                    } else {
-                        if (type == 8) {
-                            contactAvatar.setImageResource(R.drawable.doc_green);
-                        } else {
-                            contactAvatar.setImageResource(R.drawable.doc_blue);
-                        }
-                    }
-                } else {
-                    nameTextView.setText("Error");
-                    phoneTextView.setText("Error");
-                    if (type == 8) {
-                        contactAvatar.setImageResource(R.drawable.doc_green);
-                    } else {
-                        contactAvatar.setImageResource(R.drawable.doc_blue);
-                    }
-                }
             }
 
             if (message.isFromMe()) {
@@ -3675,37 +3560,12 @@ public void update() {
                         checkImage.setVisibility(View.INVISIBLE);
                         halfCheckImage.setImageResource(R.drawable.msg_clock);
                         halfCheckImage.setVisibility(View.VISIBLE);
-                        if (actionView != null) {
-                            if (actionView != null) {
-                                actionView.setVisibility(View.VISIBLE);
-                            }
-                            Float progress = null;
-                            if (message.messageOwner.attachPath != null && message.messageOwner.attachPath.length() != 0) {
-                                progress = FileLoader.getInstance().getFileProgress(message.messageOwner.attachPath);
-                                progressByTag.put((Integer)actionProgress.getTag(), message.messageOwner.attachPath);
-                                progressBarMap.put(message.messageOwner.attachPath, actionProgress);
-                            }
-                            if (progress != null) {
-                                actionProgress.setProgress((int)(progress * 100));
-                            } else {
-                                actionProgress.setProgress(0);
-                            }
-                        }
-                        if (actionAttachButton != null) {
-                            actionAttachButton.setVisibility(View.GONE);
-                        }
                     } else if (message.messageOwner.send_state == MessageObject.MESSAGE_SEND_STATE_SEND_ERROR) {
                         halfCheckImage.setVisibility(View.VISIBLE);
                         halfCheckImage.setImageResource(R.drawable.msg_warning);
                         if (checkImage != null) {
                             checkImage.setVisibility(View.INVISIBLE);
                         }
-                        if (actionView != null) {
-                            actionView.setVisibility(View.GONE);
-                        }
-                        if (actionAttachButton != null) {
-                            actionAttachButton.setVisibility(View.GONE);
-                        }
                     } else if (message.messageOwner.send_state == MessageObject.MESSAGE_SEND_STATE_SENT) {
                         if (!message.messageOwner.unread) {
                             halfCheckImage.setVisibility(View.VISIBLE);
@@ -3716,108 +3576,9 @@ public void update() {
                             checkImage.setVisibility(View.INVISIBLE);
                             halfCheckImage.setImageResource(R.drawable.msg_check);
                         }
-                        if (actionView != null) {
-                            actionView.setVisibility(View.GONE);
-                        }
-                        if (actionAttachButton != null) {
-                            actionAttachButton.setVisibility(View.VISIBLE);
-                        }
                     }
                 }
             }
-            if (message.type == 8 || message.type == 9) {
-                Integer tag = (Integer)actionProgress.getTag();
-                String file = progressByTag.get(tag);
-                if (file != null) {
-                    removeFromloadingFile(file, actionProgress);
-                }
-                if (message.messageOwner.send_state != MessageObject.MESSAGE_SEND_STATE_SENDING && message.messageOwner.send_state != MessageObject.MESSAGE_SEND_STATE_SEND_ERROR) {
-                    if (file != null) {
-                        progressBarMap.remove(file);
-                    }
-                    String fileName = message.getFileName();
-                    boolean load = false;
-                    if (message.type != 2 && message.type != 3 && message.messageOwner.attachPath != null && message.messageOwner.attachPath.length() != 0) {
-                        File f = new File(message.messageOwner.attachPath);
-                        if (f.exists()) {
-                            if (actionAttachButton != null) {
-                                actionAttachButton.setVisibility(View.VISIBLE);
-                                if (message.type == 8 || message.type == 9) {
-                                    actionAttachButton.setText(LocaleController.getString("Open", R.string.Open));
-                                }
-                            }
-                            if (actionView != null) {
-                                actionView.setVisibility(View.GONE);
-                            }
-                        } else {
-                            load = true;
-                        }
-                    }
-                    if (load && message.messageOwner.attachPath != null && message.messageOwner.attachPath.length() != 0 || !load && (message.messageOwner.attachPath == null || message.messageOwner.attachPath.length() == 0)) {
-                        File cacheFile = null;
-                        if ((cacheFile = new File(AndroidUtilities.getCacheDir(), fileName)).exists()) {
-                            if (actionAttachButton != null) {
-                                actionAttachButton.setVisibility(View.VISIBLE);
-                                if (message.type == 8 || message.type == 9) {
-                                    actionAttachButton.setText(LocaleController.getString("Open", R.string.Open));
-                                }
-                            }
-                            if (actionView != null) {
-                                actionView.setVisibility(View.GONE);
-                            }
-                            load = false;
-                        } else {
-                            load = true;
-                        }
-                    }
-                    if (load) {
-                        Float progress = FileLoader.getInstance().getFileProgress(fileName);
-                        if (loadingFile.containsKey(fileName) || progress != null) {
-                            if (progress != null) {
-                                actionProgress.setProgress((int)(progress * 100));
-                            } else {
-                                actionProgress.setProgress(0);
-                            }
-                            progressByTag.put((Integer)actionProgress.getTag(), fileName);
-                            addToLoadingFile(fileName, actionProgress);
-                            if (actionView != null) {
-                                actionView.setVisibility(View.VISIBLE);
-                            }
-                            if (actionAttachButton != null) {
-                                actionAttachButton.setVisibility(View.GONE);
-                            }
-                        } else {
-                            if (actionView != null) {
-                                actionView.setVisibility(View.GONE);
-                            }
-                            if (actionAttachButton != null) {
-                                actionAttachButton.setVisibility(View.VISIBLE);
-                                if (message.type == 8 || message.type == 9) {
-                                    actionAttachButton.setText(LocaleController.getString("DOWNLOAD", R.string.DOWNLOAD));
-                                }
-                            }
-                        }
-                    }
-                }
-                if (message.type == 8 || message.type == 9) {
-                    int width;
-                    if (currentChat != null && type != 8) {
-                        if (actionView.getVisibility() == View.VISIBLE) {
-                            width = AndroidUtilities.displaySize.x - AndroidUtilities.dp(290);
-                        } else {
-                            width = AndroidUtilities.displaySize.x - AndroidUtilities.dp(270);
-                        }
-                    } else {
-                        if (actionView.getVisibility() == View.VISIBLE) {
-                            width = AndroidUtilities.displaySize.x - AndroidUtilities.dp(240);
-                        } else {
-                            width = AndroidUtilities.displaySize.x - AndroidUtilities.dp(220);
-                        }
-                    }
-                    nameTextView.setMaxWidth(width);
-                    phoneTextView.setMaxWidth(width);
-                }
-            }
         }
 
         public ChatListRowHolderEx(View view, int type) {
@@ -3828,12 +3589,7 @@ public ChatListRowHolderEx(View view, int type) {
             photoImage = (BackupImageView)view.findViewById(R.id.chat_photo_image);
             halfCheckImage = (ImageView)view.findViewById(R.id.chat_row_halfcheck);
             checkImage = (ImageView)view.findViewById(R.id.chat_row_check);
-            actionAttachButton = (TextView)view.findViewById(R.id.chat_view_action_button);
             messageTextView = (TextView)view.findViewById(R.id.chat_message_text);
-            videoTimeText = (TextView)view.findViewById(R.id.chat_video_time);
-            actionView = view.findViewById(R.id.chat_view_action_layout);
-            actionProgress = (ProgressBar)view.findViewById(R.id.chat_view_action_progress);
-            actionCancelButton = (ImageView)view.findViewById(R.id.chat_view_action_cancel_button);
             phoneTextView = (TextView)view.findViewById(R.id.phone_text_view);
             contactAvatar = (BackupImageView)view.findViewById(R.id.contact_avatar);
             contactView = view.findViewById(R.id.shared_layout);
@@ -3844,21 +3600,6 @@ public ChatListRowHolderEx(View view, int type) {
                 messageTextView.setTextSize(TypedValue.COMPLEX_UNIT_SP, MessagesController.getInstance().fontSize);
             }
 
-            if (actionProgress != null) {
-                actionProgress.setTag(progressTag);
-                progressTag++;
-            }
-
-            if (type != 2 && type != 3) {
-                if (actionView != null) {
-                    if (isCustomTheme) {
-                        actionView.setBackgroundResource(R.drawable.system_black);
-                    } else {
-                        actionView.setBackgroundResource(R.drawable.system_blue);
-                    }
-                }
-            }
-
             if (messageLayoutAction != null) {
                 if (isCustomTheme) {
                     messageLayoutAction.setBackgroundResource(R.drawable.system_black);
@@ -3895,9 +3636,7 @@ public boolean onLongClick(View v) {
                 contactView.setOnClickListener(new View.OnClickListener() {
                     @Override
                     public void onClick(View view) {
-                        if (message.type == 8 || message.type == 9) {
-                            processOnClick(view);
-                        } else if (message.type == 12 || message.type == 13) {
+                        if (message.type == 12 || message.type == 13) {
                             if (actionBarLayer.isActionModeShowed()) {
                                 processRowSelect(view);
                                 return;
@@ -3969,15 +3708,6 @@ public void onClick(View view) {
                 });
             }
 
-            if (actionAttachButton != null) {
-                actionAttachButton.setOnClickListener(new View.OnClickListener() {
-                    @Override
-                    public void onClick(View view) {
-                        processOnClick(view);
-                    }
-                });
-            }
-
             if (avatarImageView != null) {
                 avatarImageView.setOnClickListener(new View.OnClickListener() {
                     @Override
@@ -3995,33 +3725,6 @@ public void onClick(View view) {
                 });
             }
 
-            if (actionCancelButton != null) {
-                actionCancelButton.setOnClickListener(new View.OnClickListener() {
-                    @Override
-                    public void onClick(View view) {
-                        if (message != null) {
-                            Integer tag = (Integer)actionProgress.getTag();
-                            if (message.messageOwner.send_state != 0) {
-                                SendMessagesHelper.getInstance().cancelSendingMessage(message);
-                                String file = progressByTag.get(tag);
-                                if (file != null) {
-                                    progressBarMap.remove(file);
-                                }
-                            } else if (message.type == 8 || message.type == 9) {
-                                String file = progressByTag.get(tag);
-                                if (file != null) {
-                                    loadingFile.remove(file);
-                                    if (message.type == 8 || message.type == 9) {
-                                        FileLoader.getInstance().cancelLoadFile(message.messageOwner.media.document);
-                                    }
-                                    updateVisibleRows();
-                                }
-                            }
-                        }
-                    }
-                });
-            }
-
             if (photoImage != null) {
                 photoImage.setOnClickListener(new View.OnClickListener() {
                     @Override
@@ -4049,63 +3752,6 @@ private void processOnClick(View view) {
                 if (message.type == 11) {
                     PhotoViewer.getInstance().setParentActivity(getParentActivity());
                     PhotoViewer.getInstance().openPhoto(message, ChatActivity.this);
-                } else if (message.type == 8 || message.type == 9) {
-                    File f = null;
-                    String fileName = message.getFileName();
-                    if (message.messageOwner.attachPath != null && message.messageOwner.attachPath.length() != 0) {
-                        f = new File(message.messageOwner.attachPath);
-                    }
-                    if (f == null || f != null && !f.exists()) {
-                        f = new File(AndroidUtilities.getCacheDir(), fileName);
-                    }
-                    if (f != null && f.exists()) {
-                        String realMimeType = null;
-                        try {
-                            Intent intent = new Intent(Intent.ACTION_VIEW);
-                            if (message.type == 8 || message.type == 9) {
-                                MimeTypeMap myMime = MimeTypeMap.getSingleton();
-                                int idx = fileName.lastIndexOf(".");
-                                if (idx != -1) {
-                                    String ext = fileName.substring(idx + 1);
-                                    realMimeType = myMime.getMimeTypeFromExtension(ext.toLowerCase());
-                                    if (realMimeType != null) {
-                                        intent.setDataAndType(Uri.fromFile(f), realMimeType);
-                                    } else {
-                                        intent.setDataAndType(Uri.fromFile(f), "text/plain");
-                                    }
-                                } else {
-                                    intent.setDataAndType(Uri.fromFile(f), "text/plain");
-                                }
-                            }
-                            if (realMimeType != null) {
-                                try {
-                                    getParentActivity().startActivity(intent);
-                                } catch (Exception e) {
-                                    intent.setDataAndType(Uri.fromFile(f), "text/plain");
-                                    getParentActivity().startActivity(intent);
-                                }
-                            } else {
-                                getParentActivity().startActivity(intent);
-                            }
-                        } catch (Exception e) {
-                            alertUserOpenError(message);
-                        }
-                    } else {
-                        if (message.messageOwner.send_state != MessageObject.MESSAGE_SEND_STATE_SEND_ERROR && message.messageOwner.send_state != MessageObject.MESSAGE_SEND_STATE_SENDING || !message.isOut()) {
-                            if (!loadingFile.containsKey(fileName)) {
-                                progressByTag.put((Integer)actionProgress.getTag(), fileName);
-                                addToLoadingFile(fileName, actionProgress);
-                                if (message.type == 8 || message.type == 9) {
-                                    FileLoader.getInstance().loadFile(message.messageOwner.media.document);
-                                }
-                                updateVisibleRows();
-                            }
-                        } else {
-                            if (message.messageOwner.send_state == MessageObject.MESSAGE_SEND_STATE_SEND_ERROR) {
-                                createMenu(view, false);
-                            }
-                        }
-                    }
                 }
             }
         }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
index aa793fd7e..5b322ec4c 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/LaunchActivity.java
@@ -26,7 +26,6 @@
 import org.telegram.messenger.ConnectionsManager;
 import org.telegram.messenger.FileLog;
 import org.telegram.android.LocaleController;
-import org.telegram.android.MessagesController;
 import org.telegram.android.NotificationCenter;
 import org.telegram.messenger.R;
 import org.telegram.messenger.TLRPC;
@@ -362,23 +361,14 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
                 int userId = intent.getIntExtra("userId", 0);
                 int encId = intent.getIntExtra("encId", 0);
                 if (chatId != 0) {
-                    TLRPC.Chat chat = MessagesController.getInstance().getChat(chatId);
-                    if (chat != null) {
-                        NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
-                        push_chat_id = chatId;
-                    }
+                    NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
+                    push_chat_id = chatId;
                 } else if (userId != 0) {
-                    TLRPC.User user = MessagesController.getInstance().getUser(userId);
-                    if (user != null) {
-                        NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
-                        push_user_id = userId;
-                    }
+                    NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
+                    push_user_id = userId;
                 } else if (encId != 0) {
-                    TLRPC.EncryptedChat chat = MessagesController.getInstance().getEncryptedChat(encId);
-                    if (chat != null) {
-                        NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
-                        push_enc_id = encId;
-                    }
+                    NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
+                    push_enc_id = encId;
                 } else {
                     showDialogsList = true;
                 }
@@ -415,6 +405,8 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
                 removeFragmentFromStack(fragmentsStack.get(a));
                 a--;
             }
+            pushOpened = false;
+            isNew = false;
         }
         if (videoPath != null || photoPathsArray != null || sendingText != null || documentsPathsArray != null || contactsToSend != null) {
             NotificationCenter.getInstance().postNotificationName(NotificationCenter.closeChats);
@@ -425,6 +417,9 @@ private void handleIntent(Intent intent, boolean isNew, boolean restore) {
             fragment.setDelegate(this);
             presentFragment(fragment, false, true);
             pushOpened = true;
+            if (PhotoViewer.getInstance().isVisible()) {
+                PhotoViewer.getInstance().closePhoto(true);
+            }
         }
         if (open_settings != 0) {
             presentFragment(new SettingsActivity(), false, true);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
index ada07e370..210ca91c5 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/PhotoViewer.java
@@ -489,7 +489,7 @@ public void setParentActivity(Activity activity) {
         windowLayoutParams.format = PixelFormat.TRANSLUCENT;
         windowLayoutParams.width = WindowManager.LayoutParams.MATCH_PARENT;
         windowLayoutParams.gravity = Gravity.TOP;
-        windowLayoutParams.type = WindowManager.LayoutParams.TYPE_APPLICATION;
+        windowLayoutParams.type = WindowManager.LayoutParams.LAST_APPLICATION_WINDOW;
         windowLayoutParams.flags = WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;
 
         actionBar = new ActionBar(activity);
@@ -1212,6 +1212,7 @@ public void setImageIndex(int index, boolean init) {
         int prevIndex = currentIndex;
         currentIndex = index;
         currentFileName = getFileName(index, null);
+        boolean sameImage = false;
 
         if (!imagesArr.isEmpty()) {
             deleteButton.setVisibility(View.VISIBLE);
@@ -1240,7 +1241,11 @@ public void setImageIndex(int index, boolean init) {
             } else {
                 deleteButton.setVisibility(View.GONE);
             }
+            TLRPC.FileLocation old = currentFileLocation;
             currentFileLocation = imagesArrLocations.get(index);
+            if (old != null && currentFileLocation != null && old.local_id == currentFileLocation.local_id && old.volume_id == currentFileLocation.volume_id) {
+                sameImage = true;
+            }
             actionBarLayer.setTitle(LocaleController.formatString("Of", R.string.Of, currentIndex + 1, imagesArrLocations.size()));
         } else if (!imagesArrLocals.isEmpty()) {
             currentPathObject = imagesArrLocals.get(index).path;
@@ -1270,33 +1275,35 @@ public void setImageIndex(int index, boolean init) {
             }
         }
 
-        draggingDown = false;
-        translationX = 0;
-        translationY = 0;
-        scale = 1;
-        animateToX = 0;
-        animateToY = 0;
-        animateToScale = 1;
-        animationDuration = 0;
-        animationStartTime = 0;
-
-        pinchStartDistance = 0;
-        pinchStartScale = 1;
-        pinchCenterX = 0;
-        pinchCenterY = 0;
-        pinchStartX = 0;
-        pinchStartY = 0;
-        moveStartX = 0;
-        moveStartY = 0;
-        zooming = false;
-        moving = false;
-        doubleTap = false;
-        invalidCoords = false;
-        canDragDown = true;
-        changingPage = false;
-        switchImageAfterAnimation = 0;
-        canZoom = currentFileName == null || !currentFileName.endsWith("mp4");
-        updateMinMax(scale);
+        if (!sameImage) {
+            draggingDown = false;
+            translationX = 0;
+            translationY = 0;
+            scale = 1;
+            animateToX = 0;
+            animateToY = 0;
+            animateToScale = 1;
+            animationDuration = 0;
+            animationStartTime = 0;
+
+            pinchStartDistance = 0;
+            pinchStartScale = 1;
+            pinchCenterX = 0;
+            pinchCenterY = 0;
+            pinchStartX = 0;
+            pinchStartY = 0;
+            moveStartX = 0;
+            moveStartY = 0;
+            zooming = false;
+            moving = false;
+            doubleTap = false;
+            invalidCoords = false;
+            canDragDown = true;
+            changingPage = false;
+            switchImageAfterAnimation = 0;
+            canZoom = currentFileName == null || !currentFileName.endsWith("mp4");
+            updateMinMax(scale);
+        }
 
         if (prevIndex == -1) {
             setIndexToImage(centerImage, currentIndex);
@@ -1915,7 +1922,7 @@ private boolean onTouchEvent(MotionEvent ev) {
                     draggingDown = true;
                     moving = false;
                     dragY = ev.getY();
-                    if (isActionBarVisible) {
+                    if (isActionBarVisible && canShowBottom) {
                         toggleActionBar(false, true);
                     }
                     return true;
@@ -2334,7 +2341,11 @@ public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float ve
 
     @Override
     public boolean onSingleTapConfirmed(MotionEvent e) {
-        toggleActionBar(!isActionBarVisible, true);
+        if (canShowBottom) {
+            toggleActionBar(!isActionBarVisible, true);
+        } else {
+            checkImageView.performClick();
+        }
         return true;
     }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/SettingsWallpapersActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/SettingsWallpapersActivity.java
index fc454b834..7347e7b4b 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/SettingsWallpapersActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/SettingsWallpapersActivity.java
@@ -177,18 +177,22 @@ public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                         builder.setItems(items, new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialogInterface, int i) {
-                                if (i == 0) {
-                                    Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
-                                    File image = Utilities.generatePicturePath();
-                                    if (image != null) {
-                                        takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(image));
-                                        currentPicturePath = image.getAbsolutePath();
+                                try {
+                                    if (i == 0) {
+                                        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
+                                        File image = Utilities.generatePicturePath();
+                                        if (image != null) {
+                                            takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(image));
+                                            currentPicturePath = image.getAbsolutePath();
+                                        }
+                                        getParentActivity().startActivityForResult(takePictureIntent, 10);
+                                    } else if (i == 1) {
+                                        Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);
+                                        photoPickerIntent.setType("image/*");
+                                        getParentActivity().startActivityForResult(photoPickerIntent, 11);
                                     }
-                                    getParentActivity().startActivityForResult(takePictureIntent, 10);
-                                } else if (i == 1) {
-                                    Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);
-                                    photoPickerIntent.setType("image/*");
-                                    getParentActivity().startActivityForResult(photoPickerIntent, 11);
+                                } catch (Exception e) {
+                                    FileLog.e("tmessages", e);
                                 }
                             }
                         });
@@ -521,7 +525,6 @@ public View getView(int i, View view, ViewGroup viewGroup) {
                         selection.setVisibility(View.INVISIBLE);
                     }
                 }
-
             } else if (type == 1) {
                 if (view == null) {
                     LayoutInflater li = (LayoutInflater)mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarActivity.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarActivity.java
index 40b72321a..8aaee775a 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarActivity.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/ActionBar/ActionBarActivity.java
@@ -744,19 +744,11 @@ public void startActivityForResult(final Intent intent, final int requestCode) {
             }
             containerView.invalidate();
             if (intent != null) {
-                try {
-                    ActionBarActivity.super.startActivityForResult(intent, requestCode);
-                } catch (Exception e) {
-                    FileLog.e("tmessages", e);
-                }
+                super.startActivityForResult(intent, requestCode);
             }
         } else {
             if (intent != null) {
-                try {
-                    super.startActivityForResult(intent, requestCode);
-                } catch (Exception e) {
-                    FileLog.e("tmessages", e);
-                }
+                super.startActivityForResult(intent, requestCode);
             }
         }
     }
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/HorizontalListView.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/HorizontalListView.java
index d9cad0479..277ea468f 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/HorizontalListView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/HorizontalListView.java
@@ -43,7 +43,6 @@
     private OnItemLongClickListener mOnItemLongClicked;
     private boolean mDataChanged = false;
 
-
     public HorizontalListView(Context context, AttributeSet attrs) {
         super(context, attrs);
         initView();
@@ -66,7 +65,7 @@ public void setOnItemSelectedListener(AdapterView.OnItemSelectedListener listene
     }
 
     @Override
-    public void setOnItemClickListener(AdapterView.OnItemClickListener listener){
+    public void setOnItemClickListener(AdapterView.OnItemClickListener listener) {
         mOnItemClicked = listener;
     }
 
@@ -76,10 +75,9 @@ public void setOnItemLongClickListener(AdapterView.OnItemLongClickListener liste
     }
 
     private DataSetObserver mDataObserver = new DataSetObserver() {
-
         @Override
         public void onChanged() {
-            synchronized(HorizontalListView.this){
+            synchronized (HorizontalListView.this) {
                 mDataChanged = true;
             }
             invalidate();
@@ -92,7 +90,6 @@ public void onInvalidated() {
             invalidate();
             requestLayout();
         }
-
     };
 
     @Override
@@ -113,7 +110,7 @@ public void setSelection(int position) {
 
     @Override
     public void setAdapter(ListAdapter adapter) {
-        if(mAdapter != null && mDataObserver != null) {
+        if (mAdapter != null && mDataObserver != null) {
             mAdapter.unregisterDataSetObserver(mDataObserver);
         }
         mAdapter = adapter;
@@ -121,35 +118,33 @@ public void setAdapter(ListAdapter adapter) {
         reset();
     }
 
-    private synchronized void reset(){
+    private synchronized void reset() {
         initView();
+        mRemovedViewQueue.clear();
         removeAllViewsInLayout();
         requestLayout();
     }
 
     private void addAndMeasureChild(final View child, int viewPos) {
         LayoutParams params = child.getLayoutParams();
-        if(params == null) {
+        if (params == null) {
             params = new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT);
         }
-
         addViewInLayout(child, viewPos, params, true);
-        child.measure(MeasureSpec.makeMeasureSpec(getWidth(), MeasureSpec.AT_MOST),
-                MeasureSpec.makeMeasureSpec(getHeight(), MeasureSpec.AT_MOST));
+        child.measure(MeasureSpec.makeMeasureSpec(getWidth(), MeasureSpec.AT_MOST), MeasureSpec.makeMeasureSpec(getHeight(), MeasureSpec.AT_MOST));
     }
 
 
-
     @SuppressLint("DrawAllocation")
     @Override
     protected synchronized void onLayout(boolean changed, int left, int top, int right, int bottom) {
         super.onLayout(changed, left, top, right, bottom);
 
-        if(mAdapter == null){
+        if (mAdapter == null) {
             return;
         }
 
-        if(mDataChanged){
+        if (mDataChanged) {
             int oldCurrentX = mCurrentX;
             initView();
             removeAllViewsInLayout();
@@ -157,15 +152,15 @@ protected synchronized void onLayout(boolean changed, int left, int top, int rig
             mDataChanged = false;
         }
 
-        if(mScroller.computeScrollOffset()){
+        if (mScroller.computeScrollOffset()) {
             mNextX = mScroller.getCurrX();
         }
 
-        if(mNextX <= 0){
+        if (mNextX <= 0) {
             mNextX = 0;
             mScroller.forceFinished(true);
         }
-        if(mNextX >= mMaxX) {
+        if (mNextX >= mMaxX) {
             mNextX = mMaxX;
             mScroller.forceFinished(true);
         }
@@ -178,35 +173,34 @@ protected synchronized void onLayout(boolean changed, int left, int top, int rig
 
         mCurrentX = mNextX;
 
-        if(!mScroller.isFinished()){
-            post(new Runnable(){
+        if (!mScroller.isFinished()) {
+            post(new Runnable() {
                 @Override
                 public void run() {
                     requestLayout();
                 }
             });
-
         }
     }
 
     private void fillList(final int dx) {
         int edge = 0;
-        View child = getChildAt(getChildCount()-1);
-        if(child != null) {
+        View child = getChildAt(getChildCount() - 1);
+        if (child != null) {
             edge = child.getRight();
         }
         fillListRight(edge, dx);
 
         edge = 0;
         child = getChildAt(0);
-        if(child != null) {
+        if (child != null) {
             edge = child.getLeft();
         }
         fillListLeft(edge, dx);
     }
 
     private void fillListRight(int rightEdge, final int dx) {
-        while(rightEdge + dx < getWidth() && mRightViewIndex < mAdapter.getCount()) {
+        while (rightEdge + dx < getWidth() && mRightViewIndex < mAdapter.getCount()) {
 
             View v = null;
             int type = mAdapter.getItemViewType(mRightViewIndex);
@@ -219,8 +213,9 @@ private void fillListRight(int rightEdge, final int dx) {
 
             addAndMeasureChild(child, -1);
             rightEdge += child.getMeasuredWidth();
+            child.invalidate();
 
-            if(mRightViewIndex == mAdapter.getCount() - 1) {
+            if (mRightViewIndex == mAdapter.getCount() - 1) {
                 mMaxX = mCurrentX + rightEdge - getWidth() + getPaddingLeft();
             }
 
@@ -233,7 +228,7 @@ private void fillListRight(int rightEdge, final int dx) {
     }
 
     private void fillListLeft(int leftEdge, final int dx) {
-        while(leftEdge + dx > 0 && mLeftViewIndex >= 0) {
+        while (leftEdge + dx > 0 && mLeftViewIndex >= 0) {
             View v = null;
             int type = mAdapter.getItemViewType(mLeftViewIndex);
             LinkedList<View> list = mRemovedViewQueue.get(type);
@@ -252,44 +247,43 @@ private void fillListLeft(int leftEdge, final int dx) {
 
     private void removeNonVisibleItems(final int dx) {
         View child = getChildAt(0);
-        while(child != null && child.getRight() + dx <= 0) {
+        while (child != null && child.getRight() + dx <= 0) {
             mDisplayOffset += child.getMeasuredWidth();
 
-            int type = (Integer)child.getTag(R.string.CacheTag);
+            int type = (Integer) child.getTag(R.string.CacheTag);
             LinkedList<View> list = mRemovedViewQueue.get(type);
             if (list == null) {
                 list = new LinkedList<View>();
                 mRemovedViewQueue.put(type, list);
             }
-            list.offer(child);
+            list.add(child);
 
             removeViewInLayout(child);
             mLeftViewIndex++;
             child = getChildAt(0);
-
         }
 
         child = getChildAt(getChildCount() - 1);
-        while(child != null && child.getLeft() + dx >= getWidth()) {
-            int type = (Integer)child.getTag(R.string.CacheTag);
+        while (child != null && child.getLeft() + dx >= getWidth()) {
+            int type = (Integer) child.getTag(R.string.CacheTag);
             LinkedList<View> list = mRemovedViewQueue.get(type);
             if (list == null) {
                 list = new LinkedList<View>();
                 mRemovedViewQueue.put(type, list);
             }
-            list.offer(child);
+            list.add(child);
 
             removeViewInLayout(child);
             mRightViewIndex--;
-            child = getChildAt(getChildCount()-1);
+            child = getChildAt(getChildCount() - 1);
         }
     }
 
     private void positionItems(final int dx) {
-        if(getChildCount() > 0){
+        if (getChildCount() > 0) {
             mDisplayOffset += dx;
             int left = mDisplayOffset;
-            for(int i=0;i<getChildCount();i++){
+            for (int i = 0; i < getChildCount(); i++) {
                 View child = getChildAt(i);
                 int childWidth = child.getMeasuredWidth();
                 child.layout(left + getPaddingLeft(), 0, left + childWidth + getPaddingLeft(), child.getMeasuredHeight());
@@ -316,10 +310,9 @@ public boolean onInterceptTouchEvent(MotionEvent ev) {
         return super.onInterceptTouchEvent(ev);
     }
 
-    protected boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX,
-                              float velocityY) {
-        synchronized(HorizontalListView.this){
-            mScroller.fling(mNextX, 0, (int)-velocityX, 0, 0, mMaxX, 0, 0);
+    protected boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
+        synchronized (HorizontalListView.this) {
+            mScroller.fling(mNextX, 0, (int) -velocityX, 0, 0, mMaxX, 0, 0);
         }
         requestLayout();
 
@@ -339,37 +332,32 @@ public boolean onDown(MotionEvent e) {
         }
 
         @Override
-        public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX,
-                               float velocityY) {
+        public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
             return HorizontalListView.this.onFling(e1, e2, velocityX, velocityY);
         }
 
         @Override
-        public boolean onScroll(MotionEvent e1, MotionEvent e2,
-                                float distanceX, float distanceY) {
-
-            synchronized(HorizontalListView.this){
-                mNextX += (int)distanceX;
+        public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) {
+            synchronized (HorizontalListView.this) {
+                mNextX += (int) distanceX;
             }
             requestLayout();
-
             return true;
         }
 
         @Override
         public boolean onSingleTapUp(MotionEvent e) {
-            for(int i=0;i<getChildCount();i++){
+            for (int i = 0; i < getChildCount(); i++) {
                 View child = getChildAt(i);
                 if (isEventWithinView(e, child)) {
-                    if(mOnItemClicked != null){
-                        mOnItemClicked.onItemClick(HorizontalListView.this, child, mLeftViewIndex + 1 + i, mAdapter.getItemId( mLeftViewIndex + 1 + i ));
+                    if (mOnItemClicked != null) {
+                        mOnItemClicked.onItemClick(HorizontalListView.this, child, mLeftViewIndex + 1 + i, mAdapter.getItemId(mLeftViewIndex + 1 + i));
                     }
-                    if(mOnItemSelected != null){
-                        mOnItemSelected.onItemSelected(HorizontalListView.this, child, mLeftViewIndex + 1 + i, mAdapter.getItemId( mLeftViewIndex + 1 + i ));
+                    if (mOnItemSelected != null) {
+                        mOnItemSelected.onItemSelected(HorizontalListView.this, child, mLeftViewIndex + 1 + i, mAdapter.getItemId(mLeftViewIndex + 1 + i));
                     }
                     break;
                 }
-
             }
             return true;
         }
@@ -385,7 +373,6 @@ public void onLongPress(MotionEvent e) {
                     }
                     break;
                 }
-
             }
         }
 
diff --git a/TMessagesProj/src/main/java/org/telegram/ui/Views/RoundProgressView.java b/TMessagesProj/src/main/java/org/telegram/ui/Views/RoundProgressView.java
index df1ddaa9c..551b49441 100644
--- a/TMessagesProj/src/main/java/org/telegram/ui/Views/RoundProgressView.java
+++ b/TMessagesProj/src/main/java/org/telegram/ui/Views/RoundProgressView.java
@@ -24,10 +24,14 @@ public RoundProgressView() {
         paint = new Paint();
         paint.setColor(0xffffffff);
         paint.setStyle(Paint.Style.STROKE);
-        paint.setStrokeWidth(AndroidUtilities.dp(1));
+        paint.setStrokeWidth(AndroidUtilities.dp(2));
         paint.setAntiAlias(true);
     }
 
+    public void setColor(int color) {
+        paint.setColor(color);
+    }
+
     public void setProgress(float progress) {
         currentProgress = progress;
         if (currentProgress < 0) {
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/doc_blue.png b/TMessagesProj/src/main/res/drawable-hdpi/doc_blue.png
old mode 100755
new mode 100644
index c9cd69113..1c1b3cdfe
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/doc_blue.png and b/TMessagesProj/src/main/res/drawable-hdpi/doc_blue.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/doc_green.png b/TMessagesProj/src/main/res/drawable-hdpi/doc_green.png
old mode 100755
new mode 100644
index 890cc33fb..68b721425
Binary files a/TMessagesProj/src/main/res/drawable-hdpi/doc_green.png and b/TMessagesProj/src/main/res/drawable-hdpi/doc_green.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/doccancel_b.png.png b/TMessagesProj/src/main/res/drawable-hdpi/doccancel_b.png.png
new file mode 100644
index 000000000..5fe1295c2
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/doccancel_b.png.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/doccancel_g.png b/TMessagesProj/src/main/res/drawable-hdpi/doccancel_g.png
new file mode 100644
index 000000000..00716eef0
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/doccancel_g.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/docload_b.png.png b/TMessagesProj/src/main/res/drawable-hdpi/docload_b.png.png
new file mode 100644
index 000000000..a39c692e4
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/docload_b.png.png differ
diff --git a/TMessagesProj/src/main/res/drawable-hdpi/docload_g.png.png b/TMessagesProj/src/main/res/drawable-hdpi/docload_g.png.png
new file mode 100644
index 000000000..c8ac99dec
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-hdpi/docload_g.png.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/doc_blue.png b/TMessagesProj/src/main/res/drawable-ldpi/doc_blue.png
old mode 100755
new mode 100644
index d39e47fe4..e757044d7
Binary files a/TMessagesProj/src/main/res/drawable-ldpi/doc_blue.png and b/TMessagesProj/src/main/res/drawable-ldpi/doc_blue.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/doc_green.png b/TMessagesProj/src/main/res/drawable-ldpi/doc_green.png
old mode 100755
new mode 100644
index d279bca65..5eef56f38
Binary files a/TMessagesProj/src/main/res/drawable-ldpi/doc_green.png and b/TMessagesProj/src/main/res/drawable-ldpi/doc_green.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/doccancel_b.png b/TMessagesProj/src/main/res/drawable-ldpi/doccancel_b.png
new file mode 100644
index 000000000..7e3eafac5
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-ldpi/doccancel_b.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/doccancel_g.png b/TMessagesProj/src/main/res/drawable-ldpi/doccancel_g.png
new file mode 100644
index 000000000..608f103c5
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-ldpi/doccancel_g.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/docload_b.png b/TMessagesProj/src/main/res/drawable-ldpi/docload_b.png
new file mode 100644
index 000000000..84b9884ad
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-ldpi/docload_b.png differ
diff --git a/TMessagesProj/src/main/res/drawable-ldpi/docload_g.png b/TMessagesProj/src/main/res/drawable-ldpi/docload_g.png
new file mode 100644
index 000000000..6c2a38b5c
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-ldpi/docload_g.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/doc_blue.png b/TMessagesProj/src/main/res/drawable-mdpi/doc_blue.png
old mode 100755
new mode 100644
index 69b5351ea..3364e7377
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/doc_blue.png and b/TMessagesProj/src/main/res/drawable-mdpi/doc_blue.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/doc_green.png b/TMessagesProj/src/main/res/drawable-mdpi/doc_green.png
old mode 100755
new mode 100644
index ebb8cbf7a..91549a4dd
Binary files a/TMessagesProj/src/main/res/drawable-mdpi/doc_green.png and b/TMessagesProj/src/main/res/drawable-mdpi/doc_green.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/doccancel_b.png b/TMessagesProj/src/main/res/drawable-mdpi/doccancel_b.png
new file mode 100644
index 000000000..ee9762fdf
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/doccancel_b.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/doccancel_g.png b/TMessagesProj/src/main/res/drawable-mdpi/doccancel_g.png
new file mode 100644
index 000000000..371d6a4c7
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/doccancel_g.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/docload_b.png b/TMessagesProj/src/main/res/drawable-mdpi/docload_b.png
new file mode 100644
index 000000000..fed5ef3e5
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/docload_b.png differ
diff --git a/TMessagesProj/src/main/res/drawable-mdpi/docload_g.png b/TMessagesProj/src/main/res/drawable-mdpi/docload_g.png
new file mode 100644
index 000000000..80620158b
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-mdpi/docload_g.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/doc_blue.png b/TMessagesProj/src/main/res/drawable-xhdpi/doc_blue.png
old mode 100755
new mode 100644
index f8cfa704a..459d5c979
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/doc_blue.png and b/TMessagesProj/src/main/res/drawable-xhdpi/doc_blue.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/doc_green.png b/TMessagesProj/src/main/res/drawable-xhdpi/doc_green.png
old mode 100755
new mode 100644
index ff5df25e4..39b34fcd3
Binary files a/TMessagesProj/src/main/res/drawable-xhdpi/doc_green.png and b/TMessagesProj/src/main/res/drawable-xhdpi/doc_green.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/doccancel_b.png b/TMessagesProj/src/main/res/drawable-xhdpi/doccancel_b.png
new file mode 100644
index 000000000..932492f42
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/doccancel_b.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/doccancel_g.png b/TMessagesProj/src/main/res/drawable-xhdpi/doccancel_g.png
new file mode 100644
index 000000000..4b1ad66d6
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/doccancel_g.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/docload_b.png b/TMessagesProj/src/main/res/drawable-xhdpi/docload_b.png
new file mode 100644
index 000000000..7b8c18cc6
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/docload_b.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xhdpi/docload_g.png b/TMessagesProj/src/main/res/drawable-xhdpi/docload_g.png
new file mode 100644
index 000000000..52d94e79f
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xhdpi/docload_g.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/doc_blue.png b/TMessagesProj/src/main/res/drawable-xxhdpi/doc_blue.png
old mode 100755
new mode 100644
index f9e72f34d..5c8fc8d73
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/doc_blue.png and b/TMessagesProj/src/main/res/drawable-xxhdpi/doc_blue.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/doc_green.png b/TMessagesProj/src/main/res/drawable-xxhdpi/doc_green.png
old mode 100755
new mode 100644
index e7d32c22e..8e08cbccc
Binary files a/TMessagesProj/src/main/res/drawable-xxhdpi/doc_green.png and b/TMessagesProj/src/main/res/drawable-xxhdpi/doc_green.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/doccancel_b.png b/TMessagesProj/src/main/res/drawable-xxhdpi/doccancel_b.png
new file mode 100644
index 000000000..782b89422
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/doccancel_b.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/doccancel_g.png b/TMessagesProj/src/main/res/drawable-xxhdpi/doccancel_g.png
new file mode 100644
index 000000000..cd2f08dc1
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/doccancel_g.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/docload_b.png b/TMessagesProj/src/main/res/drawable-xxhdpi/docload_b.png
new file mode 100644
index 000000000..05cae54b7
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/docload_b.png differ
diff --git a/TMessagesProj/src/main/res/drawable-xxhdpi/docload_g.png b/TMessagesProj/src/main/res/drawable-xxhdpi/docload_g.png
new file mode 100644
index 000000000..4b44c5ef3
Binary files /dev/null and b/TMessagesProj/src/main/res/drawable-xxhdpi/docload_g.png differ
diff --git a/TMessagesProj/src/main/res/layout/chat_group_incoming_document_layout.xml b/TMessagesProj/src/main/res/layout/chat_group_incoming_document_layout.xml
deleted file mode 100644
index 85bf92b61..000000000
--- a/TMessagesProj/src/main/res/layout/chat_group_incoming_document_layout.xml
+++ /dev/null
@@ -1,134 +0,0 @@
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="horizontal"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:paddingBottom="1dp"
-    android:paddingTop="1dp"
-    android:layout_gravity="top"
-    android:gravity="left">
-
-    <org.telegram.ui.Views.BackupImageView
-        android:layout_width="42dp"
-        android:layout_height="42dp"
-        android:layout_marginLeft="6dp"
-        android:id="@+id/chat_group_avatar_image"
-        android:layout_marginBottom="2dp"
-        android:layout_marginRight="4dp"
-        android:layout_gravity="bottom"/>
-
-    <org.telegram.ui.Views.FrameLayoutFixed
-        android:orientation="horizontal"
-        android:layout_height="78dp"
-        android:layout_width="wrap_content"
-        android:paddingTop="9dp"
-        android:paddingLeft="18dp"
-        android:paddingRight="9dp"
-        android:layout_gravity="top|left"
-        android:id="@+id/chat_bubble_layout">
-
-        <org.telegram.ui.Views.FrameLayoutFixed
-            android:layout_height="69dp"
-            android:layout_width="wrap_content"
-            android:layout_gravity="top|right"
-            android:id="@+id/shared_layout">
-
-            <org.telegram.ui.Views.BackupImageView
-                android:layout_width="42dp"
-                android:layout_height="42dp"
-                android:background="#40b7c9d7"
-                android:id="@+id/contact_avatar"/>
-
-            <org.telegram.ui.Views.TightTextView
-                android:layout_height="wrap_content"
-                android:layout_width="wrap_content"
-                android:layout_marginTop="3dp"
-                android:textSize="14dp"
-                android:lines="1"
-                android:singleLine="true"
-                android:layout_gravity="top"
-                android:ellipsize="end"
-                android:maxLines="1"
-                android:textColor="#000000"
-                android:layout_marginRight="2dp"
-                android:id="@+id/chat_user_group_name"
-                android:layout_marginLeft="50dp"/>
-
-            <org.telegram.ui.Views.TightTextView
-                android:layout_height="wrap_content"
-                android:layout_width="wrap_content"
-                android:layout_marginLeft="50dp"
-                android:singleLine="true"
-                android:layout_marginTop="22dp"
-                android:layout_gravity="top"
-                android:layout_marginRight="2dp"
-                android:textSize="11dp"
-                android:maxLines="1"
-                android:textColor="#9daab8"
-                android:id="@+id/phone_text_view"/>
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:id="@+id/chat_time_text"
-                android:textColor="#a1aab3"
-                android:textSize="12dp"
-                android:layout_marginBottom="5dp"
-                android:layout_gravity="bottom|right"/>
-
-        </org.telegram.ui.Views.FrameLayoutFixed>
-
-    </org.telegram.ui.Views.FrameLayoutFixed>
-
-    <org.telegram.ui.Views.FrameLayoutFixed
-        android:layout_height="wrap_content"
-        android:layout_width="140dp"
-        android:layout_marginLeft="10dp"
-        android:layout_marginRight="10dp"
-        android:layout_gravity="center_vertical"
-        android:id="@+id/chat_view_action_layout"
-        android:visibility="gone">
-
-        <ImageView
-            android:layout_width="30dp"
-            android:layout_height="30dp"
-            android:scaleType="centerInside"
-            android:layout_marginRight="4dp"
-            android:layout_gravity="right|center"
-            android:id="@+id/chat_view_action_cancel_button"
-            android:src="@drawable/ic_msg_btn_cross_custom"
-            android:clickable="true"/>
-
-        <ProgressBar
-            android:layout_width="fill_parent"
-            android:layout_height="3dp"
-            android:layout_gravity="left|center_vertical"
-            android:progressDrawable="@drawable/progress_chat"
-            style="?android:attr/progressBarStyleHorizontal"
-            android:progress="50"
-            android:layout_marginLeft="12dp"
-            android:layout_marginRight="36dp"
-            android:id="@+id/chat_view_action_progress"
-            android:max="100"/>
-
-    </org.telegram.ui.Views.FrameLayoutFixed>
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:textColor="#54759e"
-        android:background="@drawable/chat_incoming_media_states"
-        android:paddingLeft="12dp"
-        android:paddingRight="12dp"
-        android:id="@+id/chat_view_action_button"
-        android:textSize="14dp"
-        android:layout_marginLeft="10dp"
-        android:layout_marginRight="10dp"
-        android:descendantFocusability="blocksDescendants"
-        android:clickable="true"
-        android:gravity="center|left"
-        android:visibility="gone"
-        android:textStyle="bold"
-        android:layout_gravity="center_vertical|left"/>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/chat_group_incoming_location_layout.xml b/TMessagesProj/src/main/res/layout/chat_group_incoming_location_layout.xml
deleted file mode 100644
index d10dbcf43..000000000
--- a/TMessagesProj/src/main/res/layout/chat_group_incoming_location_layout.xml
+++ /dev/null
@@ -1,75 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="horizontal"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:paddingBottom="1dp"
-    android:paddingTop="1dp"
-    android:layout_gravity="top">
-
-    <org.telegram.ui.Views.BackupImageView
-        android:layout_width="42dp"
-        android:layout_height="42dp"
-        android:layout_marginLeft="6dp"
-        android:id="@+id/chat_group_avatar_image"
-        android:layout_marginBottom="2dp"
-        android:layout_gravity="bottom"/>
-
-    <org.telegram.ui.Views.FrameLayoutFixed
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="13dp"
-        android:layout_gravity="top"
-        android:id="@+id/chat_bubble_layout"
-        android:addStatesFromChildren="true">
-
-        <org.telegram.ui.Views.BackupImageView
-            android:layout_height="100dp"
-            android:layout_width="100dp"
-            android:layout_margin="6dp"
-            android:layout_gravity="top"
-            android:id="@+id/chat_photo_image"/>
-
-        <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="16dp"
-            android:id="@+id/chat_time_layout"
-            android:paddingLeft="3dp"
-            android:paddingRight="3dp"
-            android:layout_marginRight="8dp"
-            android:layout_marginBottom="8dp"
-            android:layout_gravity="right|bottom"
-            android:background="@drawable/phototime">
-
-            <TextView
-                android:layout_height="wrap_content"
-                android:layout_width="wrap_content"
-                android:textColor="#ffffff"
-                android:textSize="12dp"
-                android:layout_gravity="bottom"
-                android:layout_marginBottom="1dp"
-                android:id="@+id/chat_time_text"/>
-
-        </LinearLayout>
-
-    </org.telegram.ui.Views.FrameLayoutFixed>
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:paddingLeft="12dp"
-        android:paddingRight="12dp"
-        android:textStyle="bold"
-        android:id="@+id/chat_view_action_button"
-        android:layout_gravity="center"
-        android:gravity="center"
-        android:textSize="14dp"
-        android:textColor="#54759e"
-        android:background="@drawable/chat_incoming_media_states"
-        android:descendantFocusability="blocksDescendants"
-        android:clickable="true"
-        android:layout_marginLeft="10dp"/>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/chat_incoming_document_layout.xml b/TMessagesProj/src/main/res/layout/chat_incoming_document_layout.xml
deleted file mode 100644
index eb562cf14..000000000
--- a/TMessagesProj/src/main/res/layout/chat_incoming_document_layout.xml
+++ /dev/null
@@ -1,126 +0,0 @@
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="horizontal"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:paddingBottom="1dp"
-    android:paddingTop="1dp"
-    android:layout_gravity="top"
-    android:gravity="left">
-
-    <org.telegram.ui.Views.FrameLayoutFixed
-        android:orientation="horizontal"
-        android:layout_height="78dp"
-        android:layout_width="wrap_content"
-        android:paddingTop="9dp"
-        android:paddingLeft="18dp"
-        android:paddingRight="9dp"
-        android:layout_gravity="top|left"
-        android:id="@+id/chat_bubble_layout">
-
-        <org.telegram.ui.Views.FrameLayoutFixed
-            android:layout_height="69dp"
-            android:layout_width="wrap_content"
-            android:layout_gravity="top|right"
-            android:id="@+id/shared_layout">
-
-            <org.telegram.ui.Views.BackupImageView
-                android:layout_width="42dp"
-                android:layout_height="42dp"
-                android:background="#40b7c9d7"
-                android:src="@drawable/doc_blue"
-                android:id="@+id/contact_avatar"/>
-
-            <TextView
-                android:layout_height="wrap_content"
-                android:layout_width="wrap_content"
-                android:scrollHorizontally="true"
-                android:layout_marginTop="3dp"
-                android:textSize="14dp"
-                android:lines="1"
-                android:singleLine="true"
-                android:layout_marginRight="2dp"
-                android:layout_gravity="top"
-                android:ellipsize="end"
-                android:textColor="#000000"
-                android:id="@+id/chat_user_group_name"
-                android:maxLines="1"
-                android:layout_marginLeft="50dp"/>
-
-            <TextView android:layout_height="wrap_content"
-                android:layout_width="wrap_content"
-                android:layout_marginLeft="50dp"
-                android:layout_marginTop="22dp"
-                android:layout_gravity="top"
-                android:layout_marginRight="2dp"
-                android:textSize="11dp"
-                android:maxLines="1"
-                android:singleLine="true"
-                android:textColor="#9daab8"
-                android:id="@+id/phone_text_view"/>
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:id="@+id/chat_time_text"
-                android:textColor="#a1aab3"
-                android:textSize="12dp"
-                android:layout_gravity="bottom|right"
-                android:layout_marginBottom="5dp"/>
-
-        </org.telegram.ui.Views.FrameLayoutFixed>
-
-    </org.telegram.ui.Views.FrameLayoutFixed>
-
-    <org.telegram.ui.Views.FrameLayoutFixed
-        android:layout_height="wrap_content"
-        android:layout_width="140dp"
-        android:layout_marginLeft="10dp"
-        android:layout_marginRight="10dp"
-        android:layout_gravity="center_vertical"
-        android:id="@+id/chat_view_action_layout"
-        android:visibility="gone">
-
-        <ImageView
-            android:layout_width="30dp"
-            android:layout_height="30dp"
-            android:scaleType="centerInside"
-            android:layout_marginRight="4dp"
-            android:layout_gravity="right|center"
-            android:id="@+id/chat_view_action_cancel_button"
-            android:src="@drawable/ic_msg_btn_cross_custom"
-            android:clickable="true"/>
-
-        <ProgressBar
-            android:layout_width="fill_parent"
-            android:layout_height="3dp"
-            android:layout_gravity="left|center_vertical"
-            android:progressDrawable="@drawable/progress_chat"
-            style="?android:attr/progressBarStyleHorizontal"
-            android:progress="50"
-            android:layout_marginLeft="12dp"
-            android:layout_marginRight="36dp"
-            android:id="@+id/chat_view_action_progress"
-            android:max="100"/>
-
-    </org.telegram.ui.Views.FrameLayoutFixed>
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:textColor="#54759e"
-        android:background="@drawable/chat_incoming_media_states"
-        android:paddingLeft="12dp"
-        android:paddingRight="12dp"
-        android:id="@+id/chat_view_action_button"
-        android:textSize="14dp"
-        android:layout_marginLeft="10dp"
-        android:layout_marginRight="10dp"
-        android:descendantFocusability="blocksDescendants"
-        android:clickable="true"
-        android:gravity="center"
-        android:visibility="gone"
-        android:textStyle="bold"
-        android:layout_gravity="center_vertical"/>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/chat_incoming_location_layout.xml b/TMessagesProj/src/main/res/layout/chat_incoming_location_layout.xml
deleted file mode 100644
index 5e25a7a86..000000000
--- a/TMessagesProj/src/main/res/layout/chat_incoming_location_layout.xml
+++ /dev/null
@@ -1,69 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="horizontal"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:paddingBottom="1dp"
-    android:paddingTop="1dp"
-    android:layout_gravity="top">
-
-    <org.telegram.ui.Views.FrameLayoutFixed
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="9dp"
-        android:id="@+id/chat_bubble_layout"
-        android:layout_gravity="top"
-        android:addStatesFromChildren="true">
-
-        <org.telegram.ui.Views.BackupImageView
-            android:layout_height="wrap_content"
-            android:layout_width="wrap_content"
-            android:layout_margin="6dp"
-            android:layout_gravity="top"
-            android:minHeight="100dp"
-            android:minWidth="100dp"
-            android:id="@+id/chat_photo_image"/>
-
-        <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="16dp"
-            android:id="@+id/chat_time_layout"
-            android:paddingLeft="3dp"
-            android:paddingRight="3dp"
-            android:layout_marginRight="8dp"
-            android:layout_marginBottom="8dp"
-            android:layout_gravity="right|bottom"
-            android:background="@drawable/phototime">
-
-            <TextView
-                android:layout_height="wrap_content"
-                android:layout_width="wrap_content"
-                android:textColor="#ffffff"
-                android:textSize="12dp"
-                android:layout_gravity="bottom"
-                android:layout_marginBottom="1dp"
-                android:id="@+id/chat_time_text"/>
-
-        </LinearLayout>
-
-    </org.telegram.ui.Views.FrameLayoutFixed>
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:textColor="#54759e"
-        android:background="@drawable/chat_incoming_media_states"
-        android:paddingLeft="12dp"
-        android:paddingRight="12dp"
-        android:layout_gravity="center"
-        android:gravity="center"
-        android:textStyle="bold"
-        android:id="@+id/chat_view_action_button"
-        android:textSize="14dp"
-        android:layout_marginLeft="10dp"
-        android:descendantFocusability="blocksDescendants"
-        android:clickable="true"/>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/chat_outgoing_document_layout.xml b/TMessagesProj/src/main/res/layout/chat_outgoing_document_layout.xml
deleted file mode 100644
index 66044546d..000000000
--- a/TMessagesProj/src/main/res/layout/chat_outgoing_document_layout.xml
+++ /dev/null
@@ -1,152 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="horizontal"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:paddingBottom="1dp"
-    android:paddingTop="1dp"
-    android:layout_gravity="top"
-    android:gravity="right">
-
-    <org.telegram.ui.Views.FrameLayoutFixed
-        android:layout_height="wrap_content"
-        android:layout_width="140dp"
-        android:layout_marginRight="10dp"
-        android:layout_marginLeft="10dp"
-        android:id="@+id/chat_view_action_layout"
-        android:layout_gravity="center"
-        android:visibility="gone">
-
-        <ImageView
-            android:layout_width="30dp"
-            android:layout_height="30dp"
-            android:scaleType="centerInside"
-            android:layout_marginLeft="4dp"
-            android:id="@+id/chat_view_action_cancel_button"
-            android:src="@drawable/ic_msg_btn_cross_custom"
-            android:layout_gravity="left|center"
-            android:clickable="true"/>
-
-        <ProgressBar
-            android:layout_width="fill_parent"
-            android:layout_height="3dp"
-            style="?android:attr/progressBarStyleHorizontal"
-            android:progress="50"
-            android:layout_marginLeft="36dp"
-            android:layout_marginRight="12dp"
-            android:layout_gravity="right|center_vertical"
-            android:progressDrawable="@drawable/progress_chat"
-            android:id="@+id/chat_view_action_progress"
-            android:max="100"/>
-
-    </org.telegram.ui.Views.FrameLayoutFixed>
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:textColor="#54759e"
-        android:background="@drawable/chat_incoming_media_states"
-        android:paddingLeft="12dp"
-        android:paddingRight="12dp"
-        android:id="@+id/chat_view_action_button"
-        android:textSize="14dp"
-        android:layout_marginRight="10dp"
-        android:layout_marginLeft="10dp"
-        android:descendantFocusability="blocksDescendants"
-        android:clickable="true"
-        android:gravity="center"
-        android:visibility="gone"
-        android:textStyle="bold"
-        android:layout_gravity="center"/>
-
-    <org.telegram.ui.Views.FrameLayoutFixed
-        android:layout_height="78dp"
-        android:layout_width="wrap_content"
-        android:paddingTop="9dp"
-        android:paddingLeft="9dp"
-        android:paddingRight="18dp"
-        android:layout_gravity="top|right"
-        android:id="@+id/chat_bubble_layout">
-
-        <org.telegram.ui.Views.FrameLayoutFixed
-            android:layout_height="69dp"
-            android:layout_width="wrap_content"
-            android:layout_gravity="top|right"
-            android:id="@+id/shared_layout">
-
-            <org.telegram.ui.Views.BackupImageView
-                android:layout_width="42dp"
-                android:layout_height="42dp"
-                android:background="#408ed057"
-                android:id="@+id/contact_avatar"/>
-
-            <org.telegram.ui.Views.TightTextView
-                android:layout_height="wrap_content"
-                android:layout_width="wrap_content"
-                android:scrollHorizontally="true"
-                android:layout_marginTop="3dp"
-                android:textSize="14dp"
-                android:lines="1"
-                android:singleLine="true"
-                android:layout_marginRight="2dp"
-                android:layout_gravity="top"
-                android:ellipsize="end"
-                android:textColor="#000000"
-                android:id="@+id/chat_user_group_name"
-                android:layout_marginLeft="50dp"/>
-
-            <org.telegram.ui.Views.TightTextView
-                android:layout_height="wrap_content"
-                android:layout_width="wrap_content"
-                android:layout_marginLeft="50dp"
-                android:layout_marginTop="22dp"
-                android:layout_gravity="top"
-                android:layout_marginRight="2dp"
-                android:textSize="11dp"
-                android:maxLines="1"
-                android:textColor="#75b166"
-                android:id="@+id/phone_text_view"/>
-
-            <LinearLayout
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:id="@+id/chat_time_layout"
-                android:layout_gravity="bottom|right"
-                android:layout_marginBottom="5dp">
-
-                <TextView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:id="@+id/chat_time_text"
-                    android:textColor="#70b15c"
-                    android:textSize="12dp"/>
-
-                <ImageView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:src="@drawable/msg_check"
-                    android:layout_marginTop="2dp"
-                    android:layout_marginLeft="4dp"
-                    android:layout_marginRight="-8dp"
-                    android:id="@+id/chat_row_check"
-                    android:visibility="visible"
-                    android:layout_gravity="top"/>
-
-                <ImageView
-                    android:layout_width="wrap_content"
-                    android:layout_height="wrap_content"
-                    android:src="@drawable/msg_halfcheck"
-                    android:layout_marginTop="2dp"
-                    android:id="@+id/chat_row_halfcheck"
-                    android:visibility="visible"
-                    android:layout_gravity="top"/>
-
-            </LinearLayout>
-
-        </org.telegram.ui.Views.FrameLayoutFixed>
-
-    </org.telegram.ui.Views.FrameLayoutFixed>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/layout/chat_outgoing_location_layout.xml b/TMessagesProj/src/main/res/layout/chat_outgoing_location_layout.xml
deleted file mode 100644
index 459e185f9..000000000
--- a/TMessagesProj/src/main/res/layout/chat_outgoing_location_layout.xml
+++ /dev/null
@@ -1,90 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="horizontal"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:gravity="right"
-    android:paddingBottom="1dp"
-    android:paddingTop="1dp"
-    android:layout_gravity="top">
-
-    <TextView
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:textColor="#54759e"
-        android:background="@drawable/chat_incoming_media_states"
-        android:paddingLeft="12dp"
-        android:paddingRight="12dp"
-        android:id="@+id/chat_view_action_button"
-        android:textSize="14dp"
-        android:layout_marginRight="10dp"
-        android:textStyle="bold"
-        android:descendantFocusability="blocksDescendants"
-        android:clickable="true"
-        android:gravity="center"
-        android:layout_gravity="center"/>
-
-    <org.telegram.ui.Views.FrameLayoutFixed
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginRight="9dp"
-        android:id="@+id/chat_bubble_layout"
-        android:layout_gravity="top"
-        android:addStatesFromChildren="true">
-
-        <org.telegram.ui.Views.BackupImageView
-            android:layout_height="wrap_content"
-            android:layout_width="wrap_content"
-            android:layout_margin="6dp"
-            android:layout_gravity="top"
-            android:minHeight="100dp"
-            android:minWidth="100dp"
-            android:id="@+id/chat_photo_image"/>
-
-        <LinearLayout
-            android:layout_width="wrap_content"
-            android:layout_height="16dp"
-            android:id="@+id/chat_time_layout"
-            android:paddingLeft="3dp"
-            android:paddingRight="3dp"
-            android:layout_marginRight="8dp"
-            android:layout_marginBottom="8dp"
-            android:layout_gravity="right|bottom"
-            android:background="@drawable/phototime">
-
-            <TextView
-                android:layout_height="wrap_content"
-                android:layout_width="wrap_content"
-                android:textColor="#ffffff"
-                android:textSize="12dp"
-                android:layout_gravity="bottom"
-                android:layout_marginBottom="1dp"
-                android:id="@+id/chat_time_text"/>
-
-            <ImageView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:src="@drawable/msg_check_w"
-                android:layout_marginTop="1dp"
-                android:layout_marginLeft="3dp"
-                android:layout_marginRight="-8dp"
-                android:id="@+id/chat_row_check"
-                android:visibility="visible"
-                android:layout_gravity="top"/>
-
-            <ImageView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_marginTop="1dp"
-                android:id="@+id/chat_row_halfcheck"
-                android:visibility="visible"
-                android:src="@drawable/msg_halfcheck_w"
-                android:layout_gravity="top"/>
-
-        </LinearLayout>
-
-    </org.telegram.ui.Views.FrameLayoutFixed>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/TMessagesProj/src/main/res/values-ar/strings.xml b/TMessagesProj/src/main/res/values-ar/strings.xml
index 42c9bb274..d0c4ac429 100644
--- a/TMessagesProj/src/main/res/values-ar/strings.xml
+++ b/TMessagesProj/src/main/res/values-ar/strings.xml
@@ -42,7 +42,7 @@
     <string name="Yesterday">أمس</string>
     <string name="NoResult">لا توجد نتائج</string>
     <string name="NoChats">...لا توجد محادثات بعد</string>
-    <string name="NoChatsHelp">إبدأ المراسلة بالضغط على \nأيقونة النقاط في أعلى يمين الشاشة\nأو اذهب لقسم جهات الاتصال.</string>
+    <string name="NoChatsHelp">إبدأ المراسلة بالضغط على\nأيقونة النقاط في أعلى يمين الشاشة\nأو اذهب لقسم جهات الاتصال.</string>
     <string name="WaitingForNetwork">في إنتظار الشبكة...</string>
     <string name="Connecting">جاري الاتصال...</string>
     <string name="Updating">جاري التحديث...</string>
@@ -160,7 +160,7 @@
     <string name="NotificationContactJoined">%1$s قام بالتسجيل في تيليجرام!</string>
     <string name="NotificationUnrecognizedDevice">%1$s,\nتم تسجيل الدخول لحسابك من جهاز جديد يوم %2$s\n\nالجهاز: %3$s\nالموقع: %4$s\n\nإذا لم يكن أنت من سجل الدخول، يمكنك الذهاب للإعدادات ثم تسجيل الخروج من كافة الأجهزة الأخرى.\n\nشكرًا,\nفريق عمل تيليجرام</string>
     <string name="NotificationContactNewPhoto">%1$s قام بتغيير صورته الشخصية</string>
-    <string name="Reply">Reply</string>
+    <string name="Reply">الرد</string>
 
     <!--contacts view-->
     <string name="SelectContact">اختر جهة اتصال</string>
@@ -275,21 +275,21 @@
     <string name="SortFirstName">الاسم الأول</string>
     <string name="SortLastName">اسم العائلة</string>
     <string name="LedColor">لون إضاءة الـ LED</string>
-    <string name="PopupNotification">إشعارات منبثقة</string>
+    <string name="PopupNotification">الإشعارات المنبثقة</string>
     <string name="NoPopup">بدون إشعارات منبثقة</string>
     <string name="OnlyWhenScreenOn">فقط عندما تكون الشاشة تعمل</string>
     <string name="OnlyWhenScreenOff">فقط عندما تكون الشاشة مطفأة</string>
     <string name="AlwaysShowPopup">دائمًا أظهر الإشعارات المنبثقة</string>
-    <string name="BadgeNumber">Badge Number</string>
-    <string name="Short">Short</string>
-    <string name="Long">Long</string>
-    <string name="SystemDefault">System default</string>
-    <string name="SettingsDefault">Settings default</string>
-    <string name="AutomaticMediaDownload">AUTOMATIC MEDIA DOWNLOAD</string>
-    <string name="WhenUsingMobileData">When using mobile data</string>
-    <string name="WhenConnectedOnWiFi">When connected on Wi-Fi</string>
-    <string name="WhenRoaming">When roaming</string>
-    <string name="NoMediaAutoDownload">No media</string>
+    <string name="BadgeNumber">عداد الشارات</string>
+    <string name="Short">قصير</string>
+    <string name="Long">طويل</string>
+    <string name="SystemDefault">النظام الإفتراضي</string>
+    <string name="SettingsDefault">الإعدادات الإفتراضية</string>
+    <string name="AutomaticMediaDownload">تنزيل الوسائط تلقائيا</string>
+    <string name="WhenUsingMobileData">عند استخدام البيانات الخلوية</string>
+    <string name="WhenConnectedOnWiFi">عند الاتصال بالشبكة اللاسلكية</string>
+    <string name="WhenRoaming">عند تواجدك خارج البلاد</string>
+    <string name="NoMediaAutoDownload">لا يوجد وسائط</string>
 
     <!--media view-->
     <string name="NoMedia">لا توجد وسائط بعد</string>
@@ -378,24 +378,24 @@
     <string name="InvalidLastName">اسم العائلة غير صحيح</string>
     <string name="Loading">جاري التحميل ...</string>
     <string name="NoPlayerInstalled">ليس لديك أي مشغل مقاطع مرئية، يرجى تنزيل أية مشغل</string>
-    <string name="NoMailInstalled">يرجى التفضل بإرسال بريد الكتروني إلى sms@telegram.org وشرح مشكلتك.</string>
+    <string name="NoMailInstalled">يرجى إرسال رسالة بواسطة البريد الإلكتروني إلى sms@telegram.org لتخبرنا عن مشكلتك.</string>
     <string name="NoHandleAppInstalled">لا يوجد لديك تطبيق يمكنه فتح \'%1$s\'، يرجى تنزيل تطبيق مناسب للإستمرار</string>
     <string name="InviteUser">هذا المستخدم ليس لديه تيليجرام بعد ، هل ترغب في دعوته الآن؟</string>
     <string name="AreYouSure">هل أنت متأكد؟</string>
     <string name="AddContactQ">هل تريد إضافة جهة اتصال؟</string>
-    <string name="AddToTheGroup">هل ترغب في إضافة %1$s للمجموعة؟\n\n\n\nعدد الرسائل الحديثة المراد إعادة تحويلها:</string>
+    <string name="AddToTheGroup">هل ترغب في إضافة %1$s للمجموعة؟\n\nعدد الرسائل الحديثة المراد إعادة تحويلها:</string>
     <string name="ForwardMessagesTo">؟%1$s هل تريد إعادة توجيه الرسائل إلى</string>
     <string name="DeleteChatQuestion">هل تريد حذف هذه الدردشة؟</string>
     <string name="SendMessagesTo">هل ترغب في إرسال رسالة إلى %1$s؟</string>
-    <string name="AreYouSureLogout">هل أنت متأكد من رغبتك في تسجيل الخروج؟</string>
+    <string name="AreYouSureLogout">هل أنت متأكد من أنك تريد تسجيل الخروج؟</string>
     <string name="AreYouSureSessions">هل أنت متأكد من تسجيل الخروج من جميع الأجهزة الأخرى باستثناء هذا الجهاز؟</string>
-    <string name="AreYouSureDeleteAndExit">هل أنت متأكد من رغبتك في مغادرة المجموعة وحذفها؟</string>
+    <string name="AreYouSureDeleteAndExit">هل أنت متأكد من أنك تريد حذف المجموعة والخروج منها؟</string>
     <string name="AreYouSureDeleteThisChat">هل أنت متأكد من رغبتك في حذف المجموعة؟</string>
-    <string name="AreYouSureShareMyContactInfo">هل أنت متأكد من رغبتك في مشاركة جهة الاتصال الخاصة بك؟</string>
+    <string name="AreYouSureShareMyContactInfo">هل أنت متأكد من أنك تريد مشاركة معلومات جهة الاتصال الخاصة بك؟</string>
     <string name="AreYouSureBlockContact">هل أنت متأكد من رغبتك في حظر جهة الاتصال هذه؟</string>
     <string name="AreYouSureUnblockContact">هل أنت متأكد من رغبتك في إزالة الحظر عن جهة الاتصال هذه؟</string>
     <string name="AreYouSureDeleteContact">هل أنت متأكد من رغبتك في حذف جهة الاتصال هذه؟</string>
-    <string name="AreYouSureSecretChat">هل أنت متأكد من رغبتك في بدء محادثة سرية؟</string>
+    <string name="AreYouSureSecretChat">هل أنت متأكد من أنك تريد بدء محادثة سرية؟</string>
     <string name="ForwardFromMyName">أعد الإرسال باستخدام اسمي</string>
 
     <!--Intro view-->
diff --git a/TMessagesProj/src/main/res/values-de/strings.xml b/TMessagesProj/src/main/res/values-de/strings.xml
index ee34393a7..70fb3bd65 100644
--- a/TMessagesProj/src/main/res/values-de/strings.xml
+++ b/TMessagesProj/src/main/res/values-de/strings.xml
@@ -80,7 +80,7 @@
     <string name="SdCard">SD-Karte</string>
 
     <!--chat view-->
-    <string name="Invisible">unsichtbar</string>
+    <string name="Invisible">offline</string>
     <string name="Typing">schreibt…</string>
     <string name="Attach">Anhängen</string>
     <string name="IsTyping">schreibt...</string>
@@ -158,9 +158,9 @@
     <string name="NotificationGroupKickYou">%1$s hat dich aus der Gruppe %2$s entfernt</string>
     <string name="NotificationGroupLeftMember">%1$s hat die Gruppe %2$s verlassen</string>
     <string name="NotificationContactJoined">%1$s benutzt jetzt Telegram!</string>
-    <string name="NotificationUnrecognizedDevice">%1$s,\nWir haben eine Anmeldung von einem neuen Gerät mit der IP-Adresse %2$s festgestellt.\n\nGerät: %3$s\nStandort: %4$s\n\nWenn du es nicht selbst gewesen bist, melde alle anderen Sitzungen in den Telegram Einstellungen unverzüglich ab. \n\n\nMit freundlichen Grüßen,\nDas Telegram Team</string>
+    <string name="NotificationUnrecognizedDevice">%1$s,\nWir haben eine Anmeldung von einem neuen Gerät am %2$s festgestellt.\n\nGerät: %3$s\nStandort: %4$s\n\nWenn du das nicht selbst gewesen bist, melde alle anderen Sitzungen in den Telegram Einstellungen unverzüglich ab.\n\nMit freundlichen Grüßen,\nDas Telegram Team</string>
     <string name="NotificationContactNewPhoto">%1$s hat das Profilbild geändert</string>
-    <string name="Reply">Reply</string>
+    <string name="Reply">Beantworten</string>
 
     <!--contacts view-->
     <string name="SelectContact">Kontakt auswählen</string>
@@ -281,15 +281,15 @@
     <string name="OnlyWhenScreenOff">Nur wenn Bildschirm „aus“</string>
     <string name="AlwaysShowPopup">Popups immer anzeigen</string>
     <string name="BadgeNumber">BADGE (Anzahl)</string>
-    <string name="Short">Short</string>
-    <string name="Long">Long</string>
-    <string name="SystemDefault">System default</string>
-    <string name="SettingsDefault">Settings default</string>
-    <string name="AutomaticMediaDownload">AUTOMATIC MEDIA DOWNLOAD</string>
-    <string name="WhenUsingMobileData">When using mobile data</string>
-    <string name="WhenConnectedOnWiFi">When connected on Wi-Fi</string>
-    <string name="WhenRoaming">When roaming</string>
-    <string name="NoMediaAutoDownload">No media</string>
+    <string name="Short">Kurz</string>
+    <string name="Long">Lang</string>
+    <string name="SystemDefault">Systemstandard</string>
+    <string name="SettingsDefault">Standardeinstellungen</string>
+    <string name="AutomaticMediaDownload">AUTOMATISCHER DOWNLOAD VON MEDIEN</string>
+    <string name="WhenUsingMobileData">über Mobilfunk</string>
+    <string name="WhenConnectedOnWiFi">über W-LAN</string>
+    <string name="WhenRoaming">bei Roaming</string>
+    <string name="NoMediaAutoDownload">kein automatischer Download</string>
 
     <!--media view-->
     <string name="NoMedia">Noch keine geteilten Medien vorhanden</string>
diff --git a/TMessagesProj/src/main/res/values-es/strings.xml b/TMessagesProj/src/main/res/values-es/strings.xml
index 1d21da828..f6e542f41 100644
--- a/TMessagesProj/src/main/res/values-es/strings.xml
+++ b/TMessagesProj/src/main/res/values-es/strings.xml
@@ -158,9 +158,9 @@
     <string name="NotificationGroupKickYou">%1$s te ha expulsado del grupo %2$s</string>
     <string name="NotificationGroupLeftMember">%1$s abandonó el grupo %2$s</string>
     <string name="NotificationContactJoined">¡%1$s se unió a Telegram!</string>
-    <string name="NotificationUnrecognizedDevice">%1$s,\nHemos detectado un inicio de sesión en tu cuenta desde un nuevo dispositivo, el %2$s\n\nDispositivo: %3$s\nUbicación: %4$s\n\nSi no eras tú, puedes ir a Ajustes - Cerrar todas las otras sesiones. \n\nAtentamente,\nEl Equipo de Telegram</string>
+    <string name="NotificationUnrecognizedDevice">%1$s,\nHemos detectado un inicio de sesión en tu cuenta desde un nuevo dispositivo, el %2$s\n\nDispositivo: %3$s\nUbicación: %4$s\n\nSi no eras tú, puedes ir a Ajustes - Cerrar todas las otras sesiones.\n\nAtentamente,\nEl Equipo de Telegram</string>
     <string name="NotificationContactNewPhoto">%1$s actualizó su foto de perfil</string>
-    <string name="Reply">Reply</string>
+    <string name="Reply">Responder</string>
 
     <!--contacts view-->
     <string name="SelectContact">Seleccionar contacto</string>
@@ -281,15 +281,15 @@
     <string name="OnlyWhenScreenOff">Sólo con pantalla apagada</string>
     <string name="AlwaysShowPopup">Siempre mostrar notificación emergente</string>
     <string name="BadgeNumber">Globo en el ícono</string>
-    <string name="Short">Short</string>
-    <string name="Long">Long</string>
-    <string name="SystemDefault">System default</string>
-    <string name="SettingsDefault">Settings default</string>
-    <string name="AutomaticMediaDownload">AUTOMATIC MEDIA DOWNLOAD</string>
-    <string name="WhenUsingMobileData">When using mobile data</string>
-    <string name="WhenConnectedOnWiFi">When connected on Wi-Fi</string>
-    <string name="WhenRoaming">When roaming</string>
-    <string name="NoMediaAutoDownload">No media</string>
+    <string name="Short">Corto</string>
+    <string name="Long">Largo</string>
+    <string name="SystemDefault">Por defecto del sistema</string>
+    <string name="SettingsDefault">Ajustes por defecto</string>
+    <string name="AutomaticMediaDownload">DESCARGA AUTOMÁTICA DE MULTIMEDIA</string>
+    <string name="WhenUsingMobileData">Con uso de datos móviles</string>
+    <string name="WhenConnectedOnWiFi">Con conexión a Wi-Fi</string>
+    <string name="WhenRoaming">Con itinerancia de datos</string>
+    <string name="NoMediaAutoDownload">Ningún contenido multimedia</string>
 
     <!--media view-->
     <string name="NoMedia">No hay fotos ni vídeos compartidos aún</string>
diff --git a/TMessagesProj/src/main/res/values-it/strings.xml b/TMessagesProj/src/main/res/values-it/strings.xml
index 38d72acd7..90792c253 100644
--- a/TMessagesProj/src/main/res/values-it/strings.xml
+++ b/TMessagesProj/src/main/res/values-it/strings.xml
@@ -11,14 +11,14 @@
 
     <!--signin view-->
     <string name="YourPhone">Il tuo telefono</string>
-    <string name="StartText">Conferma il prefisso della tua nazione \ne inserisci il tuo numero di telefono.</string>
+    <string name="StartText">Conferma il prefisso della tua nazione\ne inserisci il tuo numero di telefono.</string>
     <string name="ChooseCountry">Scegli una nazione</string>
     <string name="WrongCountry">Prefisso errato</string>
 
     <!--code enter view-->
     <string name="YourCode">Il tuo codice</string>
     <string name="SentSmsCode">Abbiamo inviato un SMS al tuo telefono con il codice di attivazione</string>
-    <string name="CallText">Ti chiameremo tra</string>
+    <string name="CallText">Ti telefoneremo tra</string>
     <string name="Calling">Ti stiamo chiamando…</string>
     <string name="Code">Codice</string>
     <string name="WrongNumber">Numero errato?</string>
@@ -58,11 +58,11 @@
     <string name="SelectChat">Seleziona chat</string>
 
     <!--broadcasts-->
-    <string name="BroadcastList">Lista Broadcast</string>
-    <string name="NewBroadcastList">Nuova Lista Broadcast</string>
+    <string name="BroadcastList">Lista broadcast</string>
+    <string name="NewBroadcastList">Nuova lista broadcast</string>
     <string name="EnterListName">Immetti il nome della lista</string>
     <string name="YouCreatedBroadcastList">Hai creato una lista broadcast</string>
-    <string name="AddRecipient">Aggiungi Destinatario</string>
+    <string name="AddRecipient">Aggiungi destinatario</string>
     <string name="KickFromBroadcast">Rimuovi dalla lista broadcast</string>
 
     <!--documents view-->
@@ -76,12 +76,12 @@
     <string name="UsbActive">Trasferimento USB attivo</string>
     <string name="InternalStorage">Archiviazione interna</string>
     <string name="ExternalStorage">Archiviazione esterna</string>
-    <string name="SystemRoot">Radice di sistema</string>
+    <string name="SystemRoot">Root di sistema</string>
     <string name="SdCard">Scheda SD</string>
 
     <!--chat view-->
     <string name="Invisible">invisibile</string>
-    <string name="Typing">scrivendo…</string>
+    <string name="Typing">sta scrivendo…</string>
     <string name="Attach">Allega</string>
     <string name="IsTyping">sta scrivendo…</string>
     <string name="AreTyping">stanno scrivendo…</string>
@@ -104,10 +104,10 @@
     <string name="Selected">Selezionati: %d</string>
     <string name="ShareMyContactInfo">CONDIVIDI LE MIE INFORMAZIONI DI CONTATTO</string>
     <string name="AddToContacts">AGGIUNGI AI CONTATTI</string>
-    <string name="EncryptedPlaceholderTitleIncoming">%s ti ha mandato un invito a una chat privata.</string>
+    <string name="EncryptedPlaceholderTitleIncoming">%s ti ha mandato un invito a una chat segreta.</string>
     <string name="EncryptedPlaceholderTitleOutgoing">Hai invitato %s a entrare in una chat segreta.</string>
     <string name="EncryptedDescriptionTitle">Chat segrete:</string>
-    <string name="EncryptedDescription1">Utilizzano la cifratura punto-punto</string>
+    <string name="EncryptedDescription1">Utilizzano la crittografia end-to-end</string>
     <string name="EncryptedDescription2">Non lasciano traccia sui nostri server</string>
     <string name="EncryptedDescription3">Hanno un contatore di autodistruzione</string>
     <string name="EncryptedDescription4">Non permettono l’inoltro</string>
@@ -115,7 +115,7 @@
     <string name="YouLeft">Hai lasciato il gruppo</string>
     <string name="DeleteThisGroup">Elimina questo gruppo</string>
     <string name="DeleteThisChat">Elimina questa chat</string>
-    <string name="SlideToCancel">TRASCINA PER ANNULLARE</string>
+    <string name="SlideToCancel">CANCELLA</string>
     <string name="SaveToDownloads">Salva in download</string>
     <string name="ApplyLocalizationFile">Applica file di localizzazione</string>
     <string name="UnsupportedAttachment">Allegato non supportato</string>
@@ -123,10 +123,10 @@
     <!--notification-->
     <string name="EncryptedChatRequested">Chat segreta richiesta</string>
     <string name="EncryptedChatAccepted">Chat segreta iniziata</string>
-    <string name="MessageLifetimeChanged">%1$s imposta il contatore di autodistruzione a %2$s</string>
-    <string name="MessageLifetimeChangedOutgoing">Hai impostato il contatore di autodistruzione a %1$s</string>
-    <string name="MessageLifetimeRemoved">%1$s ha disabilitato il contatore di autodistruzione</string>
-    <string name="MessageLifetimeYouRemoved">Hai disabilitato il contatore di autodistruzione</string>
+    <string name="MessageLifetimeChanged">%1$s ha impostato il timer di autodistruzione a %2$s</string>
+    <string name="MessageLifetimeChangedOutgoing">Hai impostato il timer di autodistruzione a %1$s</string>
+    <string name="MessageLifetimeRemoved">%1$s ha disabilitato il timer di autodistruzione</string>
+    <string name="MessageLifetimeYouRemoved">Hai disabilitato il timer di autodistruzione</string>
     <string name="MessageLifetime2s">2 secondi</string>
     <string name="MessageLifetime5s">5 secondi</string>
     <string name="MessageLifetime1m">1 minuto</string>
@@ -141,7 +141,7 @@
     <string name="NotificationMessageContact">%1$s ha condiviso un contatto con te</string>
     <string name="NotificationMessageMap">%1$s ti ha inviato una posizione</string>
     <string name="NotificationMessageDocument">%1$s ti ha inviato un documento</string>
-    <string name="NotificationMessageAudio">%1$s ti ha inviato dell\'audio</string>
+    <string name="NotificationMessageAudio">%1$s ti ha inviato un audio</string>
     <string name="NotificationMessageGroupText">%1$s @ %2$s: %3$s</string>
     <string name="NotificationMessageGroupNoText">%1$s ha inviato un messaggio al gruppo %2$s</string>
     <string name="NotificationMessageGroupPhoto">%1$s ha inviato una foto al gruppo %2$s</string>
@@ -149,7 +149,7 @@
     <string name="NotificationMessageGroupContact">%1$s ha condiviso un contatto con il gruppo %2$s</string>
     <string name="NotificationMessageGroupMap">%1$s ha inviato una posizione al gruppo %2$s</string>
     <string name="NotificationMessageGroupDocument">%1$s ha inviato un documento al gruppo %2$s</string>
-    <string name="NotificationMessageGroupAudio">%1$s ha inviato dell\'audio al gruppo %2$s</string>
+    <string name="NotificationMessageGroupAudio">%1$s ha inviato un audio al gruppo %2$s</string>
     <string name="NotificationInvitedToGroup">%1$s ti ha invitato nel gruppo %2$s</string>
     <string name="NotificationEditedGroupName">%1$s ha modificato il nome del gruppo %2$s</string>
     <string name="NotificationEditedGroupPhoto">%1$s ha modificato la foto del gruppo %2$s</string>
@@ -158,9 +158,9 @@
     <string name="NotificationGroupKickYou">%1$s ti ha rimosso dal gruppo %2$s</string>
     <string name="NotificationGroupLeftMember">%1$s ha lasciato il gruppo %2$s</string>
     <string name="NotificationContactJoined">%1$s ha iniziato a usare Telegram!</string>
-    <string name="NotificationUnrecognizedDevice">%1$s,\nAbbiamo rilevato un accesso al tuo account da un nuovo dispositivo %2$s\n\nDispositivo: %3$s\nPosizione: %4$s\n\nSe non sei stato tu, puoi andare su Impostazioni - Termina tutte le sessioni.\n\nGrazie,\nIl Team di Telegram</string>
+    <string name="NotificationUnrecognizedDevice">%1$s,\nAbbiamo rilevato un accesso al tuo account da un nuovo dispositivo %2$s\n\nDispositivo: %3$s\nPosizione: %4$s\n\nSe non sei stato tu, puoi andare su Impostazioni - Termina tutte le sessioni.\n\nGrazie,\nil team di Telegram</string>
     <string name="NotificationContactNewPhoto">%1$s ha aggiornato la foto del profilo</string>
-    <string name="Reply">Reply</string>
+    <string name="Reply">Rispondi</string>
 
     <!--contacts view-->
     <string name="SelectContact">Seleziona contatto</string>
@@ -211,7 +211,7 @@
     <string name="CreateEncryptedChatOutdatedError">Impossibile creare una chat segreta con %1$s.\n\n%2$s sta usando una vecchia versione di Telegram e deve prima aggiornarla.</string>
     <string name="SecretTitle">Chat segreta</string>
     <string name="EncryptionKey">Chiave di cifratura</string>
-    <string name="MessageLifetime">Contatore di autodistruzione</string>
+    <string name="MessageLifetime">Timer di autodistruzione</string>
     <string name="ShortMessageLifetimeForever">Spento</string>
     <string name="ShortMessageLifetime2s">2s</string>
     <string name="ShortMessageLifetime5s">5s</string>
@@ -259,37 +259,37 @@
     <string name="ContactJoined">Un contatto si è collegato a Telegram</string>
     <string name="Pebble">PEBBLE</string>
     <string name="Language">Lingua</string>
-    <string name="AskAQuestionInfo">Nota che il supporto di Telegram è fornito da volontari. Proviamo a rispondere non appena possibile, ma potrebbe richiedere del tempo.<![CDATA[<br><br>]]>Dai un\'occhiata alle <![CDATA[<a href="http://telegram.org/faq#general">Domande frequenti</a>]]>: troverai risposte alla maggior parte delle domande e suggerimenti importanti per <![CDATA[<a href="http://telegram.org/faq#troubleshooting">l\'individuazione del problema</a>]]>.</string>
+    <string name="AskAQuestionInfo">Nota che il supporto di Telegram è fornito da volontari. Proviamo a rispondere non appena possibile, ma potrebbe richiedere del tempo.<![CDATA[<br><br>]]>Dai un\'occhiata alle <![CDATA[<a href="https://telegram.org/faq/it#domande-generali">Domande frequenti</a>]]>: troverai risposte alla maggior parte delle domande e suggerimenti importanti per <![CDATA[<a href="https://telegram.org/faq/it#risoluzione-dei-problemi">l\'individuazione del problema</a>]]>.</string>
     <string name="AskButton">Chiedi a un volontario</string>
     <string name="TelegramFaq">Domande frequenti</string>
-    <string name="TelegramFaqUrl">https://telegram.org/faq</string>
+    <string name="TelegramFaqUrl">https://telegram.org/faq/it</string>
     <string name="DeleteLocalization">Eliminare la localizzazione?</string>
     <string name="IncorrectLocalization">File della localizzazione non valido</string>
     <string name="Enabled">Abilitato</string>
     <string name="Disabled">Disabilitato</string>
     <string name="NotificationsService">Servizio notifiche</string>
-    <string name="NotificationsServiceDisableInfo">Se i servizi di Google Play sono sufficienti per ricevere le notifiche, è possibile disabilitare il Servizio Notifiche. Ti raccomandiamo comunque di lasciarlo abilitato per lasciare l\'app attiva in background e ricevere le notifiche istantanee.</string>
+    <string name="NotificationsServiceDisableInfo">Se i servizi di Google Play sono sufficienti per ricevere le notifiche, è possibile disabilitare il Servizio notifiche. Ti raccomandiamo comunque di lasciarlo abilitato per lasciare l\'app attiva in background e ricevere le notifiche istantanee.</string>
     <string name="SortBy">Ordina per</string>
     <string name="ImportContacts">Importa contatti</string>
     <string name="WiFiOnly">Solo tramite WiFi</string>
     <string name="SortFirstName">Nome</string>
     <string name="SortLastName">Cognome</string>
     <string name="LedColor">Colore LED</string>
-    <string name="PopupNotification">Notifiche Popup</string>
+    <string name="PopupNotification">Notifiche popup</string>
     <string name="NoPopup">Nessun popup</string>
     <string name="OnlyWhenScreenOn">Solo con schermo acceso</string>
     <string name="OnlyWhenScreenOff">Solo con schermo spento</string>
     <string name="AlwaysShowPopup">Mostra sempre i popup</string>
     <string name="BadgeNumber">Contatore Badge</string>
-    <string name="Short">Short</string>
-    <string name="Long">Long</string>
-    <string name="SystemDefault">System default</string>
-    <string name="SettingsDefault">Settings default</string>
-    <string name="AutomaticMediaDownload">AUTOMATIC MEDIA DOWNLOAD</string>
-    <string name="WhenUsingMobileData">When using mobile data</string>
-    <string name="WhenConnectedOnWiFi">When connected on Wi-Fi</string>
-    <string name="WhenRoaming">When roaming</string>
-    <string name="NoMediaAutoDownload">No media</string>
+    <string name="Short">Breve</string>
+    <string name="Long">Lungo</string>
+    <string name="SystemDefault">Predefinito di sistema</string>
+    <string name="SettingsDefault">Impostazioni predefinite</string>
+    <string name="AutomaticMediaDownload">SCARICAMENTO AUTOMATICO MEDIA</string>
+    <string name="WhenUsingMobileData">Quando si utilizza la rete dati</string>
+    <string name="WhenConnectedOnWiFi">Quando si utilizza il Wi-Fi</string>
+    <string name="WhenRoaming">In roaming</string>
+    <string name="NoMediaAutoDownload">Nessun media</string>
 
     <!--media view-->
     <string name="NoMedia">Nessun media condiviso</string>
@@ -314,9 +314,9 @@
     <string name="NoPhotos">Ancora nessuna foto</string>
 
     <!--edit video view-->
-    <string name="EditVideo">Modifica Video</string>
-    <string name="OriginalVideo">Video Originale</string>
-    <string name="EditedVideo">Video Modificato</string>
+    <string name="EditVideo">Modifica video</string>
+    <string name="OriginalVideo">Video originale</string>
+    <string name="EditedVideo">Video modificato</string>
 
     <!--button titles-->
     <string name="Next">Avanti</string>
@@ -378,8 +378,8 @@
     <string name="InvalidLastName">Cognome non valido</string>
     <string name="Loading">Caricamento…</string>
     <string name="NoPlayerInstalled">Non hai un lettore video, per favore installane uno per continuare</string>
-    <string name="NoMailInstalled">Invia un’email a sms@telegram.org e parlaci del tuo problema.</string>
-    <string name="NoHandleAppInstalled">Nessuna applicazione può gestire il tipo di file \'%1$s\', per favore installane una per proseguire</string>
+    <string name="NoMailInstalled">Invia un’email a sms@telegram.org spiegandoci il problema.</string>
+    <string name="NoHandleAppInstalled">Non hai nessuna applicazione che può gestire il tipo di file \'%1$s\': installane una per proseguire</string>
     <string name="InviteUser">Questo utente non ha ancora Telegram, vuoi invitarlo?</string>
     <string name="AreYouSure">Sei sicuro?</string>
     <string name="AddContactQ">Vuoi aggiungere il contatto?</string>
diff --git a/TMessagesProj/src/main/res/values-nl/strings.xml b/TMessagesProj/src/main/res/values-nl/strings.xml
index ad8a09322..9f02f32a8 100644
--- a/TMessagesProj/src/main/res/values-nl/strings.xml
+++ b/TMessagesProj/src/main/res/values-nl/strings.xml
@@ -160,7 +160,7 @@
     <string name="NotificationContactJoined">%1$s heeft nu Telegram!</string>
     <string name="NotificationUnrecognizedDevice">%1$s,\nEr is op je account ingelogd vanaf een nieuw apparaat op %2$s\n\nApparaat: %3$s\nLocatie: %4$s\n\nAls jij dit niet was, kun je alle sessies beëindigen via Instellingen – Beëindig alle andere sessies.\n\nBedankt,\nHet Telegram-team</string>
     <string name="NotificationContactNewPhoto">%1$s heeft zijn/haar profielfoto gewijzigd</string>
-    <string name="Reply">Reply</string>
+    <string name="Reply">Antwoord</string>
 
     <!--contacts view-->
     <string name="SelectContact">Kies een contact</string>
@@ -259,7 +259,7 @@
     <string name="ContactJoined">Contact lid geworden van Telegram</string>
     <string name="Pebble">PEBBLE</string>
     <string name="Language">Taal</string>
-    <string name="AskAQuestionInfo">Houd er rekening mee dat de ondersteuning van Telegram door vrijwilligers wordt gedaan. We doen ons best om zo snel mogelijk te antwoorden, maar het kan even even duren.<![CDATA[<br><br>]]>Bekijk ook de <![CDATA[<a href="http://telegram.org/faq#general">veelgestelde vragen</a>]]>: hier staan de antwoorden op de meeste vragen en belangrijke tips voor <![CDATA[<a href="http://telegram.org/faq#troubleshooting">het oplossen van problemen</a>]]>.</string>
+    <string name="AskAQuestionInfo">Houd er rekening mee dat de ondersteuning van Telegram door vrijwilligers wordt gedaan. We doen ons best om zo snel mogelijk te antwoorden, maar het kan even even duren.<![CDATA[<br><br>]]>Bekijk ook de <![CDATA[<a href=\"http://telegram.org/faq#general\">veelgestelde vragen</a>]]>: hier staan de antwoorden op de meeste vragen en belangrijke tips voor <![CDATA[<a href=\"http://telegram.org/faq#troubleshooting\">het oplossen van problemen</a>]]>.</string>
     <string name="AskButton">Vraag een vrijwilliger</string>
     <string name="TelegramFaq">Veelgestelde vragen</string>
     <string name="TelegramFaqUrl">https://telegram.org/faq</string>
@@ -281,15 +281,15 @@
     <string name="OnlyWhenScreenOff">Alleen wanneer scherm \"uit\" staat</string>
     <string name="AlwaysShowPopup">Altijd popup tonen</string>
     <string name="BadgeNumber">Badgenummer</string>
-    <string name="Short">Short</string>
-    <string name="Long">Long</string>
-    <string name="SystemDefault">System default</string>
-    <string name="SettingsDefault">Settings default</string>
-    <string name="AutomaticMediaDownload">AUTOMATIC MEDIA DOWNLOAD</string>
-    <string name="WhenUsingMobileData">When using mobile data</string>
-    <string name="WhenConnectedOnWiFi">When connected on Wi-Fi</string>
-    <string name="WhenRoaming">When roaming</string>
-    <string name="NoMediaAutoDownload">No media</string>
+    <string name="Short">Kort</string>
+    <string name="Long">Lang</string>
+    <string name="SystemDefault">Standaardinstelling</string>
+    <string name="SettingsDefault">Standaardinstelling</string>
+    <string name="AutomaticMediaDownload">AUTOMATISCH MEDIA OPHALEN</string>
+    <string name="WhenUsingMobileData">Bij mobiel datagebruik</string>
+    <string name="WhenConnectedOnWiFi">Bij Wi-Fi verbinding</string>
+    <string name="WhenRoaming">Bij roamen</string>
+    <string name="NoMediaAutoDownload">Geen media</string>
 
     <!--media view-->
     <string name="NoMedia">Nog geen media gedeeld</string>
diff --git a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
index 82ffc4e4f..a9498169d 100644
--- a/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
+++ b/TMessagesProj/src/main/res/values-pt-rBR/strings.xml
@@ -58,12 +58,12 @@
     <string name="SelectChat">Selecione uma Conversa</string>
 
     <!--broadcasts-->
-    <string name="BroadcastList">Lista de Broadcast</string>
-    <string name="NewBroadcastList">Nova lista de Broadcast</string>
+    <string name="BroadcastList">Lista de Transmissão</string>
+    <string name="NewBroadcastList">Nova Lista de Transmissão</string>
     <string name="EnterListName">Digite o nome da lista</string>
-    <string name="YouCreatedBroadcastList">Você criou uma lista de broadcast</string>
+    <string name="YouCreatedBroadcastList">Você criou uma lista de transmissão</string>
     <string name="AddRecipient">Adicionar Recipiente</string>
-    <string name="KickFromBroadcast">Remover da lista de broadcast</string>
+    <string name="KickFromBroadcast">Remover da lista de trasmissão</string>
 
     <!--documents view-->
     <string name="SelectFile">Selecione um Arquivo</string>
@@ -160,7 +160,7 @@
     <string name="NotificationContactJoined">%1$s entrou para o Telegram!</string>
     <string name="NotificationUnrecognizedDevice">%1$s,\nNós detectamos um login na sua conta de um novo dispositivo %2$s\n\nDispositivo: %3$s\nLocalização: %4$s\n\nSe não foi você, você pode ir para Configurações - Terminar todas as sessões.\n\nAtenciosamente,\nTime do Telegram</string>
     <string name="NotificationContactNewPhoto">%1$s atualizou a foto do perfil</string>
-    <string name="Reply">Reply</string>
+    <string name="Reply">Responder</string>
 
     <!--contacts view-->
     <string name="SelectContact">Selecionar Contato</string>
@@ -281,15 +281,15 @@
     <string name="OnlyWhenScreenOff">Somente com a tela desligada</string>
     <string name="AlwaysShowPopup">Sempre mostrar popup</string>
     <string name="BadgeNumber">Contador de medalhas</string>
-    <string name="Short">Short</string>
-    <string name="Long">Long</string>
-    <string name="SystemDefault">System default</string>
-    <string name="SettingsDefault">Settings default</string>
-    <string name="AutomaticMediaDownload">AUTOMATIC MEDIA DOWNLOAD</string>
-    <string name="WhenUsingMobileData">When using mobile data</string>
-    <string name="WhenConnectedOnWiFi">When connected on Wi-Fi</string>
-    <string name="WhenRoaming">When roaming</string>
-    <string name="NoMediaAutoDownload">No media</string>
+    <string name="Short">Curta</string>
+    <string name="Long">Longa</string>
+    <string name="SystemDefault">Padrão do sistema</string>
+    <string name="SettingsDefault">Configurações padrão</string>
+    <string name="AutomaticMediaDownload">DOWNLOAD AUTOMÁTICO DE MÍDIA</string>
+    <string name="WhenUsingMobileData">Ao usar dados móveis</string>
+    <string name="WhenConnectedOnWiFi">Quando conectado em Wi-Fi</string>
+    <string name="WhenRoaming">Em roaming</string>
+    <string name="NoMediaAutoDownload">Sem mídia</string>
 
     <!--media view-->
     <string name="NoMedia">Ainda não há mídia compartilhada</string>
