diff --git a/query.html b/query.html
index f35890ad..1fd5763b 100644
--- a/query.html
+++ b/query.html
@@ -67,15 +67,89 @@
 <header class="jumbotron subhead" id="overview">
   <div class="container">
     
-    <p class="lead">Work in progress..</p>
+    <p class="lead">Query Builder (Beta)</p>
   </div>
 </header>
 
 
   <div class="container">
 
+    <!-- Docs nav
+    ================================================== -->
+    <div class="row">
+      <div class="span3 bs-docs-sidebar">
+        <ul class="nav nav-list bs-docs-sidenav affix-top">
+          <li class="active"><a href="#define"><i class="icon-chevron-right"></i> Overview</a></li>
+          
+          </ul>
+      </div>
+      <div class="span9">
+
+
+
+        <!-- Download
+        ================================================== -->
+        <section id="define">
+          <div class="page-header">
+            <h1>1. Overview</h1>
+          </div>
+          <p class="lead">The default way to query currently is by using the find method, where you pass the where clause and the arguments. It follows the same conventions as <a href="http://developer.android.com/reference/android/database/sqlite/SQLiteDatabase.html#query(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String)">SQLiteDatabase query method </a> </p>. 
+          
+          <div class="bs-docs-example">
+
+      <pre class="prettyprint linenums">
+Note.find(Note.class, "name = ? and title = ?", "satya", "title1");
+</pre>
+</div>
+
+<p class="lead">If you have other conditions like group by, order by or limit, you could use the following method on the domain entity.</code>. 
+          
+          <div class="bs-docs-example">
+
+      <pre class="prettyprint linenums">
+
+find(Class<T> type, String whereClause, String[] whereArgs, String groupBy, String orderBy, String limit)
+</pre>
+</div>
+
+<p class="lead">In case you're looking to execute a custom query, you could use the following methods:</code>. 
+          
+          <div class="bs-docs-example">
+
+      <pre class="prettyprint linenums">
+
+// Could execute other raw queries too here..
+Note.executeQuery("VACUUM");
+
+// for finders using raw query. 
+List&lt;Note&gt; notes = Note.findWithQuery(Note.class, "Select * from Note where name = ?", "satya");
+
+</pre>
+</div>
+
+<p class="lead">With a Query Builder approach, you could do the following:</p> 
+          
+          <div class="bs-docs-example">
+
+      <pre class="prettyprint linenums">
+Select.from(TestRecord.class)
+.where(Condition.prop("test").eq("satya"),
+            Condition.prop("prop").eq(2))
+.list();
+</pre>
+</div>
+<p class="lead">Property names are not converted currently. So, it'd be the table column names (conversion eg: testUnderscore => test_underscore).
+  You could fine few more examples in the <a href="https://github.com/satyan/sugar/blob/master/library/test/com/orm/query/SelectTest.java">SelectTest.java</a> class.
+</p>
+        </section>
+
+
+
+      </div>
     </div>
 
+  </div>
+
         </section>
 
       </div>
@@ -137,5 +211,3 @@
 
 </script>
 
-  
-
