diff --git a/library/AndroidManifest.xml b/library/AndroidManifest.xml
index 65bb4873..e37ad6f3 100644
--- a/library/AndroidManifest.xml
+++ b/library/AndroidManifest.xml
@@ -1,8 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.orm.dsl"
-          android:versionCode="1"
-          android:versionName="1.0">
-    <uses-sdk android:minSdkVersion="4" />
+    package="com.orm.dsl"
+    android:versionCode="1"
+    android:versionName="1.0" >
+
+    <uses-sdk android:minSdkVersion="11" />
 
 </manifest>
\ No newline at end of file
diff --git a/library/src/com/orm/SugarRecord.java b/library/src/com/orm/SugarRecord.java
index f27cd932..39cd1f41 100644
--- a/library/src/com/orm/SugarRecord.java
+++ b/library/src/com/orm/SugarRecord.java
@@ -3,6 +3,7 @@
 import android.content.ContentValues;
 import android.content.Context;
 import android.database.Cursor;
+import android.database.DatabaseUtils;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteException;
 import android.net.Uri;
@@ -58,6 +59,12 @@ public void delete() {
         sqLiteDatabase.delete(getTableName(type), whereClause, whereArgs);
     }
 
+    public static <T extends SugarRecord<?>> void deleteById(Class<T> type, Long id) {
+        Database db = getSugarContext().database;
+        SQLiteDatabase sqLiteDatabase = db.getDB();
+        sqLiteDatabase.delete(getTableName(type), "id=?", new String[]{String.valueOf(id)});
+    }
+    
     public void save() {
         SQLiteDatabase sqLiteDatabase = getSugarContext().database.getDB();
         save(sqLiteDatabase);
@@ -81,7 +88,6 @@ public void save() {
             sqLiteDatabase.endTransaction();
             sqLiteDatabase.setLockingEnabled(true);
         }
-
     }
 
     @SuppressWarnings("deprecation")
@@ -234,7 +240,27 @@ public static void executeQuery(String query, String... arguments){
         }
         return toRet;
     }
+    
+    public static <T extends SugarRecord<?>> long count(Class<T> type){
+        return count(type, null, new String[]{});
+    }
+
+    public static <T extends SugarRecord<?>> long count(Class<T> type, String query){
+        return count(type, query, new String[]{});
+    }
 
+    public static <T extends SugarRecord<?>> long count(Class<T> type, String query, String... arguments){
+         Database db = getSugarContext().database;
+         SQLiteDatabase sqLiteDatabase = db.getDB();
+         String table = getTableName(type);
+         try {
+             return DatabaseUtils.queryNumEntries(sqLiteDatabase, table, query, arguments);
+         } catch (Exception e) {
+             e.printStackTrace();
+             return -1;
+         } 
+    }
+    
     @SuppressWarnings("unchecked")
     protected void inflate(Cursor cursor) {
         Map<Field, Long> entities = new HashMap<Field, Long>();
