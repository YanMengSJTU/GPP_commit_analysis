diff --git a/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/SugarRecordTest.java b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/SugarRecordTest.java
index 47bf4f72..ed1797c7 100644
--- a/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/SugarRecordTest.java
+++ b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/SugarRecordTest.java
@@ -46,7 +46,7 @@ public void testInsertUniqueId() {
         List<Project> projects = Select.from(Project.class).list();
         assertNotNull(projects);
         assertEquals(1, projects.size());
-        assertEquals(projects.iterator().next().getTitle(), firstProjectTitle);
+        assertEquals(projects.iterator().next().getName(), firstProjectTitle);
 
         String secondProjectTitle = "SecondTitle";
         project = new Project(1, secondProjectTitle);
@@ -56,6 +56,17 @@ public void testInsertUniqueId() {
         projects = Select.from(Project.class).list();
         assertNotNull(projects);
         assertEquals(1, projects.size());
-        assertEquals(projects.iterator().next().getTitle(), secondProjectTitle);
+        assertEquals(projects.iterator().next().getName(), secondProjectTitle);
+    }
+
+    @Test
+    public void findById() {
+        String projectName = "Title";
+        Project project = new Project(5, projectName);
+        SugarRecord.save(project);
+
+        Project retrievedProject = SugarRecord.findById(Project.class, 1);
+        assertNotNull(project);
+        assertEquals(retrievedProject.getName(), projectName);
     }
 }
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/Project.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/Project.java
index 6797a814..d48a56c1 100644
--- a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/Project.java
+++ b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/Project.java
@@ -8,11 +8,11 @@
 public class Project {
     @Column(name = "projectId", unique = true, notNull = true)
     private int id;
-    @NotNull private String title;
+    @NotNull private String name;
 
-    public Project(int id, String title) {
+    public Project(int id, String name) {
         this.id = id;
-        this.title = title;
+        this.name = name;
     }
 
     public Project() {
@@ -22,8 +22,8 @@ public int getId() {
         return id;
     }
 
-    public String getTitle() {
-        return title;
+    public String getName() {
+        return name;
     }
 
     @Override
@@ -34,7 +34,7 @@ public boolean equals(Object o) {
         Project project = (Project) o;
 
         if (id != project.id) return false;
-        if (title != null ? !title.equals(project.title) : project.title != null) return false;
+        if (name != null ? !name.equals(project.name) : project.name != null) return false;
 
         return true;
     }
@@ -42,7 +42,7 @@ public boolean equals(Object o) {
     @Override
     public int hashCode() {
         int result = id;
-        result = 31 * result + (title != null ? title.hashCode() : 0);
+        result = 31 * result + (name != null ? name.hashCode() : 0);
         return result;
     }
 
@@ -50,7 +50,7 @@ public int hashCode() {
     public String toString() {
         return "Project{" +
                 "id=" + id +
-                ", title='" + title + '\'' +
+                ", name='" + name + '\'' +
                 '}';
     }
 }
