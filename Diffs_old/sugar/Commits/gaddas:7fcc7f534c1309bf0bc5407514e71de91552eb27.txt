diff --git a/library/src/com/orm/QueryBuilder.java b/library/src/com/orm/QueryBuilder.java
index bf3cfd93..4cb1160b 100644
--- a/library/src/com/orm/QueryBuilder.java
+++ b/library/src/com/orm/QueryBuilder.java
@@ -18,12 +18,16 @@ public static String getColumnType(Class<?> type) {
             return "INTEGER";
         }
 
-        if ((type.equals(Double.class)) || (type.equals(Double.TYPE)) || (type.equals(Float.class)) ||
+        if ((type.equals(Double.class)) || 
+                (type.equals(Double.TYPE)) || 
+                (type.equals(Float.class)) ||
                 (type.equals(Float.TYPE))) {
             return "FLOAT";
         }
 
-        if ((type.equals(String.class)) || (type.equals(Character.TYPE))) {
+        if ((type.equals(String.class)) || 
+                (type.equals(Character.TYPE)) ||
+                (type.equals(android.net.Uri.class))) {
             return "TEXT";
         }
 
diff --git a/library/src/com/orm/SugarRecord.java b/library/src/com/orm/SugarRecord.java
index 19ae3c8d..db47ccbc 100644
--- a/library/src/com/orm/SugarRecord.java
+++ b/library/src/com/orm/SugarRecord.java
@@ -5,6 +5,7 @@
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteException;
+import android.net.Uri;
 import android.util.Log;
 import com.orm.dsl.Ignore;
 
@@ -104,7 +105,7 @@ public void save() {
 
     }
 
-    void save(SQLiteDatabase db) {
+    protected void save(SQLiteDatabase db) {
         
         List<Field> columns = getTableFields();
         ContentValues values = new ContentValues(columns.size());
@@ -144,6 +145,9 @@ else if (columnType.equals(Date.class)) {
                         else if (columnType.equals(Calendar.class)) {
                             values.put(columnName, column.get(this) != null ? ((Calendar) column.get(this)).getTimeInMillis() : null);
                         }
+                        else if (columnType.equals(Uri.class)) {
+                            values.put(columnName, columnValue.toString());
+                        }
                         else {
                             values.put(columnName, String.valueOf(columnValue));
                         }
@@ -229,7 +233,7 @@ public static void executeQuery(String query, String... arguments){
     }
 
     @SuppressWarnings("unchecked")
-    void inflate(Cursor cursor) {
+    protected void inflate(Cursor cursor) {
         Map<Field, Long> entities = new HashMap<Field, Long>();
         List<Field> columns = getTableFields();
         for (Field field : columns) {
@@ -271,6 +275,10 @@ else if (fieldType.equals(float.class) || fieldType.equals(Float.class)) {
                 else if (fieldType.equals(short.class) || fieldType.equals(Short.class)) {
                     field.setShort(this, cursor.getShort(index));
                 } 
+                else if (fieldType.equals(Uri.class)) {
+                    String uri = cursor.getString(index);
+                    field.set(this, Uri.parse(uri));
+                } 
                 else if (fieldType.equals(Timestamp.class)) {
                     long l = cursor.getLong(index);
                     field.set(this, new Timestamp(l));
