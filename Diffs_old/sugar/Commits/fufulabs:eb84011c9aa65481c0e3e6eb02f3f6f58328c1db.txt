diff --git a/.gitignore b/.gitignore
index 76806924..0b42a033 100644
--- a/.gitignore
+++ b/.gitignore
@@ -7,3 +7,6 @@ library/library.iml
 library/.gradle
 *.class
 .DS_Store
+
+# For cases where this library gets added as a submodule 
+*.iml
diff --git a/library/src/com/orm/SchemaGenerator.java b/library/src/com/orm/SchemaGenerator.java
index a7f25b51..bf9c4f68 100644
--- a/library/src/com/orm/SchemaGenerator.java
+++ b/library/src/com/orm/SchemaGenerator.java
@@ -22,26 +22,34 @@
 import java.util.Collections;
 import java.util.List;
 
-import static com.orm.util.ReflectionUtil.getDomainClasses;
-
 public class SchemaGenerator {
 
     private Context context;
+    private List<Class> domainClasses;
 
     public SchemaGenerator(Context context) {
         this.context = context;
     }
 
+    private List<Class> getDomainClasses() {
+      if (domainClasses == null) {
+        domainClasses = ReflectionUtil.getDomainClasses(context);
+      }
+      return domainClasses;
+    }
+
+    public void addDomainClass(Class<? extends SugarRecord> domainClass) {
+        getDomainClasses().add(domainClass);
+    }
+
     public void createDatabase(SQLiteDatabase sqLiteDatabase) {
-        List<Class> domainClasses = getDomainClasses(context);
-        for (Class domain : domainClasses) {
+        for (Class domain : getDomainClasses()) {
             createTable(domain, sqLiteDatabase);
         }
     }
 
     public void doUpgrade(SQLiteDatabase sqLiteDatabase, int oldVersion, int newVersion) {
-        List<Class> domainClasses = getDomainClasses(context);
-        for (Class domain : domainClasses) {
+        for (Class domain : getDomainClasses()) {
             try {  // we try to do a select, if fails then (?) there isn't the table
                 sqLiteDatabase.query(NamingHelper.toSQLName(domain), null, null, null, null, null, null);
             } catch (SQLiteException e) {
@@ -54,8 +62,7 @@ public void doUpgrade(SQLiteDatabase sqLiteDatabase, int oldVersion, int newVers
     }
 
     public void deleteTables(SQLiteDatabase sqLiteDatabase) {
-        List<Class> tables = getDomainClasses(context);
-        for (Class table : tables) {
+        for (Class table : getDomainClasses()) {
             sqLiteDatabase.execSQL("DROP TABLE IF EXISTS " + NamingHelper.toSQLName(table));
         }
     }
diff --git a/library/src/com/orm/SugarContext.java b/library/src/com/orm/SugarContext.java
index ea853766..380de303 100644
--- a/library/src/com/orm/SugarContext.java
+++ b/library/src/com/orm/SugarContext.java
@@ -4,15 +4,19 @@
 
 public class SugarContext {
 
-    private static SugarContext instance = null;
-    private SugarDb sugarDb;
-    private Context context;
+    protected static SugarContext instance = null;
+    protected SugarDb sugarDb;
+    protected Context context;
+
+    public SugarContext() {
+
+    }
 
     private SugarContext(Context context) {
         this.context = context;
         this.sugarDb = new SugarDb(context);
     }
-    
+
     public static SugarContext getSugarContext() {
         if (instance == null) {
             throw new NullPointerException("SugarContext has not been initialized properly. Call SugarContext.init(Context) in your Application.onCreate() method and SugarContext.terminate() in your Application.onTerminate() method.");
diff --git a/library/src/com/orm/SugarDb.java b/library/src/com/orm/SugarDb.java
index a15110a3..5f5b7a94 100644
--- a/library/src/com/orm/SugarDb.java
+++ b/library/src/com/orm/SugarDb.java
@@ -12,7 +12,7 @@
 
 public class SugarDb extends SQLiteOpenHelper {
 
-    private final SchemaGenerator schemaGenerator;
+    protected SchemaGenerator schemaGenerator;
     private SQLiteDatabase sqLiteDatabase;
 
     public SugarDb(Context context) {
@@ -21,6 +21,11 @@ public SugarDb(Context context) {
         schemaGenerator = new SchemaGenerator(context);
     }
 
+    public SugarDb(Context context, String databaseName, int databaseVersion, boolean debugEnabled) {
+        super(context, databaseName, new SugarCursorFactory(debugEnabled), databaseVersion);
+        schemaGenerator = new SchemaGenerator(context);
+    }
+
     @Override
     public void onCreate(SQLiteDatabase sqLiteDatabase) {
         schemaGenerator.createDatabase(sqLiteDatabase);
