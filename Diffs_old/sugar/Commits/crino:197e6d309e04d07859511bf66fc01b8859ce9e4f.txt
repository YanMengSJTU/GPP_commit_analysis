diff --git a/example/src/com/example/NoteListActivity.java b/example/src/com/example/NoteListActivity.java
index 8bb3d3a5..2005fcb5 100755
--- a/example/src/com/example/NoteListActivity.java
+++ b/example/src/com/example/NoteListActivity.java
@@ -29,7 +29,7 @@ public void onClick(View view) {
         });
         
         // TEST COUNT
-        android.util.Log.d("COUNT", "Count: " + Select.from(Note.class).where("title like '%ba%'").count() +"/"+notes.size());
+        android.util.Log.d("COUNT", "Count: " + Select.from(Note.class).where("title like '%atr%'").count() +"/"+notes.size());
     }
 
 }
\ No newline at end of file
diff --git a/library/src/com/orm/SugarRecord.java b/library/src/com/orm/SugarRecord.java
index 478d2855..9a47d3ab 100644
--- a/library/src/com/orm/SugarRecord.java
+++ b/library/src/com/orm/SugarRecord.java
@@ -5,6 +5,8 @@
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteException;
+import android.database.sqlite.SQLiteStatement;
+import android.text.TextUtils;
 import android.util.Log;
 import com.orm.dsl.Ignore;
 
@@ -260,28 +262,30 @@ public static void executeQuery(String query, String... arguments){
         return toRet;
     }
     
-    public static <T extends SugarRecord<?>> int count(Class<?> type,
+    public static <T extends SugarRecord<?>> long count(Class<?> type,
             String whereClause, String[] whereArgs) {
     	return count(type, whereClause, whereArgs, null, null, null);
     }
     
-    public static <T extends SugarRecord<?>> int count(Class<?> type,
+    public static <T extends SugarRecord<?>> long count(Class<?> type,
             String whereClause, String[] whereArgs,
             String groupBy, String orderBy, String limit) {
     	
     	Database db = getSugarContext().getDatabase();
         SQLiteDatabase sqLiteDatabase = db.getDB();
         
-        int toRet = -1;
-        Cursor c = sqLiteDatabase.query(getTableName(type), null,
-                whereClause, whereArgs, groupBy, null, orderBy, limit);
-                
+        long toRet = -1;
+        
+        String filter = (!TextUtils.isEmpty(whereClause)) ? " where " + whereClause : "";
+        SQLiteStatement sqLiteStatament = sqLiteDatabase.compileStatement("SELECT count(*) FROM " + getTableName(type) + filter);
+        sqLiteStatament.bindAllArgsAsStrings(whereArgs);
+              
         try {
-        	toRet = c.getCount();
+        	toRet = sqLiteStatament.simpleQueryForLong();
         } catch (Exception e) {
             e.printStackTrace();
         } finally {
-            c.close();
+        	sqLiteStatament.close();
         }
         
     	return toRet;
diff --git a/library/src/com/orm/query/Select.java b/library/src/com/orm/query/Select.java
index b277aa76..cee4b14f 100644
--- a/library/src/com/orm/query/Select.java
+++ b/library/src/com/orm/query/Select.java
@@ -103,7 +103,7 @@ private void mergeConditions(Condition[] conditions, Condition.Type type) {
 
     }
     
-    public int count() {
+    public long count() {
     	
     	if(arguments == null) arguments = convertArgs(args);
     	
