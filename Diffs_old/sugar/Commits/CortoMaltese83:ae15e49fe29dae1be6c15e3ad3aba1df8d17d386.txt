diff --git a/build.gradle b/build.gradle
index 030e1cb3..d6d84828 100644
--- a/build.gradle
+++ b/build.gradle
@@ -7,7 +7,7 @@ buildscript {
         mavenCentral()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.0.0'
+        classpath 'com.android.tools.build:gradle:2.1.3'
         classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1'
     }
 }
diff --git a/example/build.gradle b/example/build.gradle
index a8b90f05..fa15400d 100644
--- a/example/build.gradle
+++ b/example/build.gradle
@@ -8,6 +8,7 @@ android {
         applicationId "com.example"
         minSdkVersion 9
         targetSdkVersion 23
+
     }
     buildTypes {
         release {
@@ -20,6 +21,6 @@ android {
 }
 
 dependencies {
-    compile project (':library')
+    compile project(':library')
     compile 'com.android.support:appcompat-v7:23.3.0'
 }
diff --git a/example/src/main/AndroidManifest.xml b/example/src/main/AndroidManifest.xml
index eb802533..af46f5c7 100644
--- a/example/src/main/AndroidManifest.xml
+++ b/example/src/main/AndroidManifest.xml
@@ -3,15 +3,17 @@
       package="com.example"
       android:versionCode="1"
       android:versionName="1.0">
-    <application android:label="@string/app_name" android:icon="@drawable/icon" android:name="ClientApp">
+    <application android:label="@string/app_name" android:icon="@drawable/icon" android:name="com.orm.SugarApp">
         <activity android:name=".activities.SugarActivity" android:label="@string/app_name">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
+
         <meta-data android:name="DATABASE" android:value="sugar_example.db" />
         <meta-data android:name="VERSION" android:value="3" />
         <meta-data android:name="QUERY_LOG" android:value="true" />
+
     </application>
 </manifest> 
diff --git a/gradle.properties b/gradle.properties
index 35b4c26f..d66e37d5 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,34 +1,30 @@
-# Project-wide Gradle settings.
-
-# IDE (e.g. Android Studio) users:
-# Settings specified in this file will override any Gradle settings
-# configured through the IDE.
-
+## Project-wide Gradle settings.
+#
 # For more details on how to configure your build environment visit
 # http://www.gradle.org/docs/current/userguide/build_environment.html
-
+#
 # Specifies the JVM arguments used for the daemon process.
 # The setting is particularly useful for tweaking memory settings.
 # Default value: -Xmx10248m -XX:MaxPermSize=256m
 # org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
-
+#
 # When configured, Gradle will run in incubating parallel mode.
 # This option should only be used with decoupled projects. More details, visit
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
 # org.gradle.parallel=true
+#Mon Sep 19 15:17:11 CEST 2016
+android.useDeprecatedNdk=true
+POM_LICENCE_URL=http\://www.apache.org/licenses/LICENSE-2.0.txt
 org.gradle.daemon=true
-
 VERSION_NAME=2
 VERSION_CODE=2
+POM_DEVELOPER_ID=satyan
+POM_SCM_DEV_CONNECTION=scm\:git@github.com\:satyan/sugar.git
+POM_SCM_URL=https\://github.com/satyan/sugar
 GROUP=com.github.satyan
-
-POM_DESCRIPTION=Sugar ORM - Insanely easy way to work with android database
-POM_URL=https://github.com/satyan/sugar
-POM_SCM_URL=https://github.com/satyan/sugar
-POM_SCM_CONNECTION=scm:git@github.com:satyan/sugar.git
-POM_SCM_DEV_CONNECTION=scm:git@github.com:satyan/sugar.git
-POM_LICENCE_NAME=The Apache Software License, Version 2.0
-POM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt
 POM_LICENCE_DIST=repo
-POM_DEVELOPER_ID=satyan
-POM_DEVELOPER_NAME=Satya Narayan
\ No newline at end of file
+POM_DEVELOPER_NAME=Satya Narayan
+POM_URL=https\://github.com/satyan/sugar
+POM_SCM_CONNECTION=scm\:git@github.com\:satyan/sugar.git
+POM_LICENCE_NAME=The Apache Software License, Version 2.0
+POM_DESCRIPTION=Sugar ORM - Insanely easy way to work with android database
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index b0bb3ffb..d80c1add 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Sat Apr 09 17:51:14 ART 2016
+#Mon Sep 19 14:59:29 CEST 2016
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.10-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.14.1-all.zip
diff --git a/library/build.gradle b/library/build.gradle
index 907162ee..68a956e2 100644
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -25,6 +25,7 @@ android {
 dependencies {
     testCompile 'junit:junit:4.12'
     testCompile 'org.robolectric:robolectric:3.0'
+    compile files('libs/sqlcipher.jar')
 }
 
 task libraryJar(type: Jar) {
diff --git a/library/src/main/java/com/orm/SugarApp.java b/library/src/main/java/com/orm/SugarApp.java
index cab35ca7..74275532 100644
--- a/library/src/main/java/com/orm/SugarApp.java
+++ b/library/src/main/java/com/orm/SugarApp.java
@@ -2,11 +2,15 @@
 
 import android.app.Application;
 
+import net.sqlcipher.database.SQLiteDatabase;
+
+
 public class SugarApp extends Application {
 
     @Override
     public void onCreate() {
         super.onCreate();
+        InitializeSQLCipher();
         SugarContext.init(this);
     }
 
@@ -16,4 +20,14 @@ public void onTerminate() {
         SugarContext.terminate();
     }
 
+    private void InitializeSQLCipher() {
+        SQLiteDatabase.loadLibs(this);
+/*        File databaseFile = getDatabasePath("demo.db");
+        databaseFile.mkdirs();
+        databaseFile.delete();
+        SQLiteDatabase database = SQLiteDatabase.openOrCreateDatabase(databaseFile, "test123", null);
+        database.execSQL("create table t1(a, b)");
+        database.execSQL("insert into t1(a, b) values(?, ?)", new Object[]{"one for the money", "two for the show"});*/
+    }
+
 }
