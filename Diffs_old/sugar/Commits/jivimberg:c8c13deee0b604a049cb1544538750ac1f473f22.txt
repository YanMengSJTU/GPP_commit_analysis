diff --git a/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/SugarAbstractCRUDTestCase.java b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/SugarAbstractCRUDTestCase.java
new file mode 100644
index 00000000..b3037e58
--- /dev/null
+++ b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/SugarAbstractCRUDTestCase.java
@@ -0,0 +1,99 @@
+package me.jivimberg.android.sugartestapp.robolectric;
+
+import com.orm.SugarRecord;
+import com.orm.dsl.NotNull;
+import com.orm.query.Select;
+
+import org.junit.After;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.RobolectricTestRunner;
+import org.robolectric.annotation.Config;
+
+import java.util.List;
+
+import me.jivimberg.android.sugartestapp.model.entities.annotated.ParentAnnotated;
+import me.jivimberg.android.sugartestapp.model.entities.SugarEntity;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotNull;
+
+@Config(emulateSdk = 18) //see http://goo.gl/3lqkX6
+@RunWith(RobolectricTestRunner.class)
+public abstract class SugarAbstractCRUDTestCase<T extends SugarEntity> {
+
+    @NotNull
+    private final Class<T> clazz;
+
+
+    public SugarAbstractCRUDTestCase(@NotNull final Class<T> clazz){
+        this.clazz = clazz;
+    }
+
+    protected abstract T createEntity(@NotNull String name);
+
+    @After
+    public void cleanup(){
+        SugarRecord.deleteAll(clazz);
+    }
+
+    @Test
+    public void testInsert() {
+        String name = "John";
+        SugarEntity entity = createEntity(name);
+        SugarRecord.save(entity);
+
+        List<? extends SugarEntity> entities = Select.from(clazz).list();
+        assertNotNull(entities);
+        assertEquals(1, entities.size());
+        assertEquals(entities.iterator().next().getName(), name);
+    }
+
+    @Test
+    public void testUpdate() {
+        String name = "Name1";
+        SugarEntity entity = createEntity(name);
+        SugarRecord.save(entity);
+
+        String name2 = "Name2";
+        entity.setName(name2);
+        SugarRecord.save(entity);
+
+        List<? extends SugarEntity> entities = Select.from(clazz).list();
+        assertNotNull(entities);
+        assertEquals(1, entities.size());
+        entity = entities.iterator().next();
+        assertEquals(entity.getName(), name2);
+    }
+
+    @Test
+    public void findById() {
+        String name = "Name1";
+        SugarEntity entity = createEntity(name);
+        SugarRecord.save(entity);
+
+        SugarEntity retrievedProject = SugarRecord.findById(clazz, 1);
+        assertNotNull(retrievedProject);
+        assertEquals(retrievedProject.getName(), name);
+    }
+
+    // Issue #250
+    @Test
+    public void deleteAllAndSave() {
+        String name = "Name1";
+        SugarEntity entity = createEntity(name);
+        SugarRecord.save(entity);
+
+        List<? extends SugarEntity> entities = Select.from(clazz).list();
+        assertNotNull(entities);
+        assertEquals(1, entities.size());
+
+        SugarRecord.deleteAll(ParentAnnotated.class);
+        SugarRecord.save(entity);
+
+        entities = Select.from(clazz).list();
+        assertNotNull(entities);
+        assertEquals(1, entities.size());
+    }
+
+}
diff --git a/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/SugarRecordTest.java b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/SugarRecordTest.java
deleted file mode 100644
index 197e0fdb..00000000
--- a/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/SugarRecordTest.java
+++ /dev/null
@@ -1,267 +0,0 @@
-package me.jivimberg.android.sugartestapp.robolectric;
-
-import com.orm.SugarRecord;
-import com.orm.query.Select;
-
-import org.junit.After;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.annotation.Config;
-
-import java.util.List;
-
-import me.jivimberg.android.sugartestapp.model.annotated.Car;
-import me.jivimberg.android.sugartestapp.model.annotated.Category;
-import me.jivimberg.android.sugartestapp.model.annotated.Contact;
-import me.jivimberg.android.sugartestapp.model.annotated.Project;
-import me.jivimberg.android.sugartestapp.model.extended.CarExtending;
-import me.jivimberg.android.sugartestapp.model.extended.CategoryExtending;
-import me.jivimberg.android.sugartestapp.model.extended.ProjectExtending;
-import me.jivimberg.android.sugartestapp.model.annotated.SubCategory;
-import me.jivimberg.android.sugartestapp.model.extended.SubCategoryExtending;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNotNull;
-
-@Config(emulateSdk = 18) //see http://goo.gl/3lqkX6
-@RunWith(RobolectricTestRunner.class)
-public class SugarRecordTest {
-
-    @After
-    public void cleanup(){
-        SugarRecord.deleteAll(Category.class);
-        SugarRecord.deleteAll(Contact.class);
-        SugarRecord.deleteAll(Project.class);
-        SugarRecord.deleteAll(SubCategory.class);
-        SugarRecord.deleteAll(CategoryExtending.class);
-        SugarRecord.deleteAll(ProjectExtending.class);
-        SugarRecord.deleteAll(SubCategoryExtending.class);
-        SugarRecord.deleteAll(Car.class);
-        SugarRecord.deleteAll(CarExtending.class);
-    }
-
-    @Test
-    public void testInsert() {
-        Contact contact = new Contact("Jack", 23, 45.4f, 1.87d, true);
-        SugarRecord.save(contact);
-
-        List<Contact> contacts = Select.from(Contact.class).list();
-        assertNotNull(contacts);
-        assertEquals(1, contacts.size());
-    }
-
-    @Test
-    public void testUpdateAnnotated() {
-        String firstProjectTitle = "FirstTitle";
-        Project project = new Project(1, firstProjectTitle);
-        SugarRecord.save(project);
-
-        List<Project> projects = Select.from(Project.class).list();
-        assertNotNull(projects);
-        assertEquals(1, projects.size());
-
-        Project projectToUpdate = projects.iterator().next();
-        assertEquals(projectToUpdate.getName(), firstProjectTitle);
-
-        String secondProjectTitle = "SecondTitle";
-        projectToUpdate.setName(secondProjectTitle);
-        SugarRecord.save(projectToUpdate);
-
-        projects = Select.from(Project.class).list();
-        assertNotNull(projects);
-        assertEquals(1, projects.size());
-        assertEquals(projectToUpdate.getName(), secondProjectTitle);
-    }
-
-    @Test
-    public void testAnnotationMultipleSave() {
-        Car car = new Car("Nissan");
-        SugarRecord.save(car);
-
-        List<Car> carList = Select.from(Car.class).list();
-        assertNotNull(carList);
-        assertEquals(1, carList.size());
-
-        car.setName("Honda");
-        SugarRecord.save(car);
-
-        carList = Select.from(Car.class).list();
-        assertNotNull(carList);
-        assertEquals(1, carList.size());
-    }
-
-    @Test
-    public void testExtendingMultipleSave() {
-        CarExtending carExtending = new CarExtending("Nissan");
-        carExtending.save();
-
-        List<CarExtending> carExtendingList = Select.from(CarExtending.class).list();
-        assertNotNull(carExtendingList);
-        assertEquals(1, carExtendingList.size());
-
-        carExtending.setName("Honda");
-        carExtending.save();
-
-        carExtendingList = Select.from(CarExtending.class).list();
-        assertNotNull(carExtendingList);
-        assertEquals(1, carExtendingList.size());
-    }
-
-    // Issue #213
-    @Test
-    public void testInsertWithUnderlinedField() {
-        Car contact = new Car("Nissan");
-        SugarRecord.save(contact);
-
-        List<Car> contacts = Select.from(Car.class).list();
-        assertNotNull(contacts);
-        assertEquals(1, contacts.size());
-    }
-
-    // Issue #213
-    @Test
-    public void testInsertWithUnderlinedFieldExtending() {
-        CarExtending contact = new CarExtending("Nissan");
-        SugarRecord.save(contact);
-
-        List<CarExtending> contacts = Select.from(CarExtending.class).list();
-        assertNotNull(contacts);
-        assertEquals(1, contacts.size());
-    }
-
-    @Test
-    public void testInsertUniqueId() {
-        String firstProjectTitle = "FirstTitle";
-        Project project = new Project(1, firstProjectTitle);
-        SugarRecord.save(project);
-
-        List<Project> projects = Select.from(Project.class).list();
-        assertNotNull(projects);
-        assertEquals(1, projects.size());
-        assertEquals(projects.iterator().next().getName(), firstProjectTitle);
-
-        String secondProjectTitle = "SecondTitle";
-        project = new Project(1, secondProjectTitle);
-
-        SugarRecord.save(project);
-
-        projects = Select.from(Project.class).list();
-        assertNotNull(projects);
-        assertEquals(1, projects.size());
-        assertEquals(projects.iterator().next().getName(), secondProjectTitle);
-    }
-
-    @Test
-    public void findById() {
-        String projectName = "Title";
-        Project project = new Project(5, projectName);
-        SugarRecord.save(project);
-
-        Project retrievedProject = SugarRecord.findById(Project.class, 1);
-        assertNotNull(retrievedProject);
-        assertEquals(retrievedProject.getName(), projectName);
-    }
-
-    @Test
-    public void findByIdOverloaded() {
-        String projectName = "Title";
-        ProjectExtending project = new ProjectExtending(projectName);
-        ProjectExtending.save(project);
-
-        ProjectExtending retrievedProject = ProjectExtending.findById(1L);
-        assertNotNull(retrievedProject);
-        assertEquals(retrievedProject.getName(), projectName);
-        assertEquals(1L, retrievedProject.getId().doubleValue(), 0.001);
-    }
-
-    // Issue #201
-    @Test
-    public void saveSetId() {
-        String projectName = "Title";
-        ProjectExtending project = new ProjectExtending(projectName);
-        ProjectExtending.save(project);
-
-        String newName = "newName";
-        project.setName(newName);
-        ProjectExtending.save(project);
-
-        List<ProjectExtending> projects = Select.from(ProjectExtending.class).list();
-        assertNotNull(projects);
-        assertEquals(1, projects.size());
-
-        assertEquals(1L, project.getId().doubleValue(), 0.001);
-    }
-
-    // Issue #215
-    @Test
-    public void persistingRelationships() {
-        String name = "Name";
-        Category category = new Category(name);
-        SugarRecord.save(category);
-
-        SubCategory subCategory = new SubCategory(category);
-        SugarRecord.save(subCategory);
-
-        List<SubCategory> subCategoryList = Select.from(SubCategory.class).list();
-        assertNotNull(subCategoryList);
-        assertEquals(1, subCategoryList.size());
-
-        assertNotNull(subCategoryList.iterator().next().getCategory());
-    }
-
-    // Issue #215
-    @Test
-    public void persistingRelationshipsExtending() {
-        String name = "Name";
-        CategoryExtending category = new CategoryExtending(name);
-        category.save();
-
-        SubCategoryExtending subCategory = new SubCategoryExtending(category);
-        subCategory.save();
-
-        List<SubCategoryExtending> subCategoryList = Select.from(SubCategoryExtending.class).list();
-        assertNotNull(subCategoryList);
-        assertEquals(1, subCategoryList.size());
-
-        assertNotNull(subCategoryList.iterator().next().getCategory());
-    }
-
-    // Issue #250
-    @Test
-    public void deleteAllAndSave() {
-        String name = "Name";
-        Category category = new Category(name);
-        SugarRecord.save(category);
-
-        List<Category> categoryList = Select.from(Category.class).list();
-        assertNotNull(categoryList);
-        assertEquals(1, categoryList.size());
-
-        SugarRecord.deleteAll(Category.class);
-        SugarRecord.save(category);
-
-        List<Category> categoryListAfterDelete = Select.from(Category.class).list();
-        assertNotNull(categoryListAfterDelete);
-        assertEquals(1, categoryListAfterDelete.size());
-    }
-
-    // Issue #250
-    @Test
-    public void deleteAllAndSaveExtending() {
-        String name = "Name";
-        CategoryExtending category = new CategoryExtending(name);
-        SugarRecord.save(category);
-
-        List<CategoryExtending> categoryList = Select.from(CategoryExtending.class).list();
-        assertNotNull(categoryList);
-        assertEquals(1, categoryList.size());
-
-        SugarRecord.deleteAll(CategoryExtending.class);
-        SugarRecord.save(category);
-
-        List<CategoryExtending> categoryListAfterDelete = Select.from(CategoryExtending.class).list();
-        assertNotNull(categoryListAfterDelete);
-        assertEquals(1, categoryListAfterDelete.size());
-    }
-}
diff --git a/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/annotated/AnnotatedCRUDTest.java b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/annotated/AnnotatedCRUDTest.java
new file mode 100644
index 00000000..6a3f20ab
--- /dev/null
+++ b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/annotated/AnnotatedCRUDTest.java
@@ -0,0 +1,24 @@
+package me.jivimberg.android.sugartestapp.robolectric.annotated;
+
+import com.orm.dsl.NotNull;
+
+import org.junit.runner.RunWith;
+import org.robolectric.RobolectricTestRunner;
+import org.robolectric.annotation.Config;
+
+import me.jivimberg.android.sugartestapp.model.entities.AnnotatedSugarEntity;
+import me.jivimberg.android.sugartestapp.robolectric.SugarAbstractCRUDTestCase;
+
+@Config(emulateSdk = 18) //see http://goo.gl/3lqkX6
+@RunWith(RobolectricTestRunner.class)
+public class AnnotatedCRUDTest extends SugarAbstractCRUDTestCase<AnnotatedSugarEntity> {
+
+    public AnnotatedCRUDTest() {
+        super(AnnotatedSugarEntity.class);
+    }
+
+    @Override
+    protected AnnotatedSugarEntity createEntity(@NotNull String name) {
+        return new AnnotatedSugarEntity(name);
+    }
+}
diff --git a/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/annotated/RelationshipAnnotatedTest.java b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/annotated/RelationshipAnnotatedTest.java
new file mode 100644
index 00000000..7e9582d0
--- /dev/null
+++ b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/annotated/RelationshipAnnotatedTest.java
@@ -0,0 +1,52 @@
+package me.jivimberg.android.sugartestapp.robolectric.annotated;
+
+import com.orm.SugarRecord;
+import com.orm.dsl.NotNull;
+import com.orm.query.Select;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.RobolectricTestRunner;
+import org.robolectric.annotation.Config;
+
+import java.util.List;
+
+import me.jivimberg.android.sugartestapp.model.entities.ExtendedSugarEntity;
+import me.jivimberg.android.sugartestapp.model.entities.annotated.ChildAnnotated;
+import me.jivimberg.android.sugartestapp.model.entities.annotated.ParentAnnotated;
+import me.jivimberg.android.sugartestapp.robolectric.SugarAbstractCRUDTestCase;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotNull;
+
+@Config(emulateSdk = 18) //see http://goo.gl/3lqkX6
+@RunWith(RobolectricTestRunner.class)
+public class RelationshipAnnotatedTest extends SugarAbstractCRUDTestCase<ParentAnnotated> {
+
+    public RelationshipAnnotatedTest() {
+        super(ParentAnnotated.class);
+    }
+
+    @Override
+    protected ParentAnnotated createEntity(@NotNull String name) {
+        return new ParentAnnotated(name);
+    }
+
+    //Suggestion from issue #224
+    // Issue #215
+    @Test
+    public void persistingRelationships() {
+        String name = "Name";
+        ParentAnnotated parentAnnotated = new ParentAnnotated(name);
+        SugarRecord.save(parentAnnotated);
+
+        ChildAnnotated childAnnotated = new ChildAnnotated(parentAnnotated);
+        SugarRecord.save(childAnnotated);
+
+        List<ChildAnnotated> childAnnotatedList = Select.from(ChildAnnotated.class).list();
+        assertNotNull(childAnnotatedList);
+        assertEquals(1, childAnnotatedList.size());
+
+        assertNotNull(childAnnotatedList.iterator().next().getParent());
+    }
+}
diff --git a/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/annotated/UnderlinedPropertyAnnotatedTest.java b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/annotated/UnderlinedPropertyAnnotatedTest.java
new file mode 100644
index 00000000..a033d9dd
--- /dev/null
+++ b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/annotated/UnderlinedPropertyAnnotatedTest.java
@@ -0,0 +1,44 @@
+package me.jivimberg.android.sugartestapp.robolectric.annotated;
+
+import com.orm.SugarRecord;
+import com.orm.dsl.NotNull;
+import com.orm.query.Select;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.RobolectricTestRunner;
+import org.robolectric.annotation.Config;
+
+import java.util.List;
+
+import me.jivimberg.android.sugartestapp.model.entities.annotated.UnderlinedPropertyNameAnnotated;
+import me.jivimberg.android.sugartestapp.model.entities.extended.UnderlinedPropertyNameExtended;
+import me.jivimberg.android.sugartestapp.robolectric.SugarAbstractCRUDTestCase;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotNull;
+
+@Config(emulateSdk = 18) //see http://goo.gl/3lqkX6
+@RunWith(RobolectricTestRunner.class)
+public class UnderlinedPropertyAnnotatedTest extends SugarAbstractCRUDTestCase<UnderlinedPropertyNameAnnotated> {
+
+    public UnderlinedPropertyAnnotatedTest() {
+        super(UnderlinedPropertyNameAnnotated.class);
+    }
+
+    @Override
+    protected UnderlinedPropertyNameAnnotated createEntity(@NotNull String name) {
+        return new UnderlinedPropertyNameAnnotated(name);
+    }
+
+    // Issue #213
+    @Test
+    public void testInsertWithUnderlinedFieldExtending() {
+        UnderlinedPropertyNameExtended contact = new UnderlinedPropertyNameExtended("Nissan");
+        SugarRecord.save(contact);
+
+        List<UnderlinedPropertyNameExtended> contacts = Select.from(UnderlinedPropertyNameExtended.class).list();
+        assertNotNull(contacts);
+        assertEquals(1, contacts.size());
+    }
+}
diff --git a/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/annotated/UniqueFieldTest.java b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/annotated/UniqueFieldTest.java
new file mode 100644
index 00000000..4b2eb515
--- /dev/null
+++ b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/annotated/UniqueFieldTest.java
@@ -0,0 +1,55 @@
+package me.jivimberg.android.sugartestapp.robolectric.annotated;
+
+import com.orm.SugarRecord;
+import com.orm.dsl.NotNull;
+import com.orm.query.Select;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.RobolectricTestRunner;
+import org.robolectric.annotation.Config;
+
+import java.util.List;
+
+import me.jivimberg.android.sugartestapp.model.entities.annotated.UniqueField;
+import me.jivimberg.android.sugartestapp.robolectric.SugarAbstractCRUDTestCase;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotNull;
+
+@Config(emulateSdk = 18) //see http://goo.gl/3lqkX6
+@RunWith(RobolectricTestRunner.class)
+public class UniqueFieldTest extends SugarAbstractCRUDTestCase<UniqueField> {
+
+    public UniqueFieldTest() {
+        super(UniqueField.class);
+    }
+
+    @Override
+    protected UniqueField createEntity(@NotNull String name) {
+        return new UniqueField(1, name);
+    }
+
+    @Test
+    public void testUpdateAnnotated() {
+        String firstProjectTitle = "FirstTitle";
+        UniqueField uniqueField = new UniqueField(1, firstProjectTitle);
+        SugarRecord.save(uniqueField);
+
+        List<UniqueField> uniqueFields = Select.from(UniqueField.class).list();
+        assertNotNull(uniqueFields);
+        assertEquals(1, uniqueFields.size());
+
+        UniqueField uniqueFieldToUpdate = uniqueFields.iterator().next();
+        assertEquals(uniqueFieldToUpdate.getName(), firstProjectTitle);
+
+        String secondProjectTitle = "SecondTitle";
+        uniqueFieldToUpdate.setName(secondProjectTitle);
+        SugarRecord.save(uniqueFieldToUpdate);
+
+        uniqueFields = Select.from(UniqueField.class).list();
+        assertNotNull(uniqueFields);
+        assertEquals(1, uniqueFields.size());
+        assertEquals(uniqueFields.iterator().next().getName(), secondProjectTitle);
+    }
+}
diff --git a/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/extended/ExtendedCRUDTest.java b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/extended/ExtendedCRUDTest.java
new file mode 100644
index 00000000..387a6979
--- /dev/null
+++ b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/extended/ExtendedCRUDTest.java
@@ -0,0 +1,41 @@
+package me.jivimberg.android.sugartestapp.robolectric.extended;
+
+import com.orm.dsl.NotNull;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.RobolectricTestRunner;
+import org.robolectric.annotation.Config;
+
+import me.jivimberg.android.sugartestapp.model.entities.ExtendedSugarEntity;
+import me.jivimberg.android.sugartestapp.robolectric.SugarAbstractCRUDTestCase;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotNull;
+
+@Config(emulateSdk = 18) //see http://goo.gl/3lqkX6
+@RunWith(RobolectricTestRunner.class)
+public class ExtendedCRUDTest extends SugarAbstractCRUDTestCase<ExtendedSugarEntity> {
+
+    public ExtendedCRUDTest() {
+        super(ExtendedSugarEntity.class);
+    }
+
+    @Override
+    protected ExtendedSugarEntity createEntity(@NotNull String name) {
+        return new ExtendedSugarEntity(name);
+    }
+
+    //Suggestion from issue #224
+    @Test
+    public void findByIdOverloaded() {
+        String name = "Name1";
+        ExtendedSugarEntity project = createEntity(name);
+        ExtendedSugarEntity.save(project);
+
+        ExtendedSugarEntity retrievedEntity = ExtendedSugarEntity.findById(1L);
+        assertNotNull(retrievedEntity);
+        assertEquals(retrievedEntity.getName(), name);
+        assertEquals(1L, retrievedEntity.getId().doubleValue(), 0.001);
+    }
+}
diff --git a/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/extended/RelationshipExtendedTest.java b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/extended/RelationshipExtendedTest.java
new file mode 100644
index 00000000..37ad447c
--- /dev/null
+++ b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/extended/RelationshipExtendedTest.java
@@ -0,0 +1,49 @@
+package me.jivimberg.android.sugartestapp.robolectric.extended;
+
+import com.orm.dsl.NotNull;
+import com.orm.query.Select;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.RobolectricTestRunner;
+import org.robolectric.annotation.Config;
+
+import java.util.List;
+
+import me.jivimberg.android.sugartestapp.model.entities.extended.ChildExtended;
+import me.jivimberg.android.sugartestapp.model.entities.extended.ParentExtended;
+import me.jivimberg.android.sugartestapp.robolectric.SugarAbstractCRUDTestCase;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotNull;
+
+@Config(emulateSdk = 18) //see http://goo.gl/3lqkX6
+@RunWith(RobolectricTestRunner.class)
+public class RelationshipExtendedTest extends SugarAbstractCRUDTestCase<ParentExtended> {
+
+    public RelationshipExtendedTest() {
+        super(ParentExtended.class);
+    }
+
+    @Override
+    protected ParentExtended createEntity(@NotNull String name) {
+        return new ParentExtended(name);
+    }
+
+    // Issue #215
+    @Test
+    public void persistingRelationshipsExtending() {
+        String name = "Name";
+        ParentExtended category = new ParentExtended(name);
+        category.save();
+
+        ChildExtended subCategory = new ChildExtended(category);
+        subCategory.save();
+
+        List<ChildExtended> subCategoryList = Select.from(ChildExtended.class).list();
+        assertNotNull(subCategoryList);
+        assertEquals(1, subCategoryList.size());
+
+        assertNotNull(subCategoryList.iterator().next().getCategory());
+    }
+}
diff --git a/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/extended/UnderlinedPropertyExtendedTest.java b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/extended/UnderlinedPropertyExtendedTest.java
new file mode 100644
index 00000000..ee9a19b0
--- /dev/null
+++ b/sugartestapp/src/androidTest/java/me/jivimberg/android/sugartestapp/robolectric/extended/UnderlinedPropertyExtendedTest.java
@@ -0,0 +1,44 @@
+package me.jivimberg.android.sugartestapp.robolectric.extended;
+
+import com.orm.SugarRecord;
+import com.orm.dsl.NotNull;
+import com.orm.query.Select;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.robolectric.RobolectricTestRunner;
+import org.robolectric.annotation.Config;
+
+import java.util.List;
+
+import me.jivimberg.android.sugartestapp.model.entities.annotated.UnderlinedPropertyNameAnnotated;
+import me.jivimberg.android.sugartestapp.model.entities.extended.UnderlinedPropertyNameExtended;
+import me.jivimberg.android.sugartestapp.robolectric.SugarAbstractCRUDTestCase;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotNull;
+
+@Config(emulateSdk = 18) //see http://goo.gl/3lqkX6
+@RunWith(RobolectricTestRunner.class)
+public class UnderlinedPropertyExtendedTest extends SugarAbstractCRUDTestCase<UnderlinedPropertyNameExtended> {
+
+    public UnderlinedPropertyExtendedTest() {
+        super(UnderlinedPropertyNameExtended.class);
+    }
+
+    @Override
+    protected UnderlinedPropertyNameExtended createEntity(@NotNull String name) {
+        return new UnderlinedPropertyNameExtended(name);
+    }
+
+    // Issue #213
+    @Test
+    public void testInsertWithUnderlinedField() {
+        UnderlinedPropertyNameAnnotated contact = new UnderlinedPropertyNameAnnotated("Nissan");
+        SugarRecord.save(contact);
+
+        List<UnderlinedPropertyNameAnnotated> contacts = Select.from(UnderlinedPropertyNameAnnotated.class).list();
+        assertNotNull(contacts);
+        assertEquals(1, contacts.size());
+    }
+}
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/MainActivity.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/MainActivity.java
index 66f93b12..6a20de9d 100644
--- a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/MainActivity.java
+++ b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/MainActivity.java
@@ -3,11 +3,6 @@
 import android.app.ListActivity;
 import android.os.Bundle;
 
-import com.orm.query.Select;
-
-import java.util.List;
-
-import me.jivimberg.android.sugartestapp.model.annotated.Contact;
 
 
 public class MainActivity extends ListActivity {
@@ -17,8 +12,6 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 
-        List<Contact> contacts = Select.from(Contact.class).list();
-
     }
 
 
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/annotated/Car.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/annotated/Car.java
deleted file mode 100644
index 85c5508a..00000000
--- a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/annotated/Car.java
+++ /dev/null
@@ -1,25 +0,0 @@
-package me.jivimberg.android.sugartestapp.model.annotated;
-
-import com.orm.SugarRecord;
-import com.orm.dsl.Table;
-
-@Table(name = "car")
-public class Car {
-    private String car_name;
-
-    public Car(){
-
-    }
-
-    public Car(String car_name) {
-        this.car_name = car_name;
-    }
-
-    public String getName() {
-        return car_name;
-    }
-
-    public void setName(String car_name) {
-        this.car_name = car_name;
-    }
-}
\ No newline at end of file
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/annotated/Category.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/annotated/Category.java
deleted file mode 100644
index 3c840d9b..00000000
--- a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/annotated/Category.java
+++ /dev/null
@@ -1,21 +0,0 @@
-package me.jivimberg.android.sugartestapp.model.annotated;
-
-import com.orm.SugarRecord;
-import com.orm.dsl.Table;
-
-@Table(name = "category")
-public class Category {
-    private String name;
-
-    public Category(){
-
-    }
-
-    public Category(String name) {
-        this.name = name;
-    }
-
-    public String getName() {
-        return name;
-    }
-}
\ No newline at end of file
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/annotated/Contact.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/annotated/Contact.java
deleted file mode 100644
index 6153f519..00000000
--- a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/annotated/Contact.java
+++ /dev/null
@@ -1,46 +0,0 @@
-package me.jivimberg.android.sugartestapp.model.annotated;
-
-import com.orm.dsl.NotNull;
-import com.orm.dsl.Table;
-
-@Table(name = "Contact")
-public final class Contact {
-
-    @NotNull private String name;
-    @NotNull private int age;
-    @NotNull private float weight;
-    @NotNull private double height;
-    @NotNull private boolean isVIP;
-
-    public Contact(String name, int age, float weight, double height, boolean isVIP) {
-        this.name = name;
-        this.age = age;
-        this.weight = weight;
-        this.height = height;
-        this.isVIP = isVIP;
-    }
-
-    public Contact(){
-
-    }
-
-    public String getName() {
-        return name;
-    }
-
-    public int getAge() {
-        return age;
-    }
-
-    public float getWeight() {
-        return weight;
-    }
-
-    public double getHeight() {
-        return height;
-    }
-
-    public boolean isVIP() {
-        return isVIP;
-    }
-}
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/annotated/SubCategory.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/annotated/SubCategory.java
deleted file mode 100644
index 76ec3464..00000000
--- a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/annotated/SubCategory.java
+++ /dev/null
@@ -1,21 +0,0 @@
-package me.jivimberg.android.sugartestapp.model.annotated;
-
-import com.orm.SugarRecord;
-import com.orm.dsl.Table;
-
-@Table(name = "subcategory")
-public class SubCategory {
-    private Category category;
-
-    public SubCategory(){
-
-    }
-
-    public SubCategory(Category category) {
-        this.category = category;
-    }
-
-    public Category getCategory() {
-        return category;
-    }
-}
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/AnnotatedSugarEntity.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/AnnotatedSugarEntity.java
new file mode 100644
index 00000000..20884519
--- /dev/null
+++ b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/AnnotatedSugarEntity.java
@@ -0,0 +1,28 @@
+package me.jivimberg.android.sugartestapp.model.entities;
+
+import com.orm.dsl.NotNull;
+import com.orm.dsl.Table;
+
+import me.jivimberg.android.sugartestapp.model.entities.SugarEntity;
+
+@Table
+public class AnnotatedSugarEntity implements SugarEntity {
+
+    @NotNull
+    private String name;
+
+    public AnnotatedSugarEntity(String name) {
+        this.name = name;
+    }
+
+    public AnnotatedSugarEntity() {
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+}
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/ExtendedSugarEntity.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/ExtendedSugarEntity.java
new file mode 100644
index 00000000..a2480e4e
--- /dev/null
+++ b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/ExtendedSugarEntity.java
@@ -0,0 +1,32 @@
+package me.jivimberg.android.sugartestapp.model.entities;
+
+import com.orm.SugarRecord;
+import com.orm.dsl.NotNull;
+import com.orm.dsl.Table;
+
+import me.jivimberg.android.sugartestapp.model.entities.SugarEntity;
+
+public class ExtendedSugarEntity extends SugarRecord implements SugarEntity{
+
+    @NotNull
+    private String name;
+
+    public ExtendedSugarEntity(String name) {
+        this.name = name;
+    }
+
+    public ExtendedSugarEntity() {
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public void setName(String name) {
+        this.name = name;
+    }
+
+    public static ExtendedSugarEntity findById(Long id) {
+        return findById(ExtendedSugarEntity.class, id);
+    }
+}
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/SugarEntity.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/SugarEntity.java
new file mode 100644
index 00000000..85566af9
--- /dev/null
+++ b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/SugarEntity.java
@@ -0,0 +1,9 @@
+package me.jivimberg.android.sugartestapp.model.entities;
+
+public interface SugarEntity {
+
+    String getName();
+
+    void setName(String name);
+
+}
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/annotated/ChildAnnotated.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/annotated/ChildAnnotated.java
new file mode 100644
index 00000000..39970529
--- /dev/null
+++ b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/annotated/ChildAnnotated.java
@@ -0,0 +1,20 @@
+package me.jivimberg.android.sugartestapp.model.entities.annotated;
+
+import com.orm.dsl.Table;
+
+@Table(name = "subcategory")
+public class ChildAnnotated {
+    private ParentAnnotated parentAnnotated;
+
+    public ChildAnnotated(){
+
+    }
+
+    public ChildAnnotated(ParentAnnotated parentAnnotated) {
+        this.parentAnnotated = parentAnnotated;
+    }
+
+    public ParentAnnotated getParent() {
+        return parentAnnotated;
+    }
+}
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/annotated/ParentAnnotated.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/annotated/ParentAnnotated.java
new file mode 100644
index 00000000..1e978d01
--- /dev/null
+++ b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/annotated/ParentAnnotated.java
@@ -0,0 +1,27 @@
+package me.jivimberg.android.sugartestapp.model.entities.annotated;
+
+import com.orm.dsl.Table;
+
+import me.jivimberg.android.sugartestapp.model.entities.SugarEntity;
+
+@Table(name = "category")
+public class ParentAnnotated implements SugarEntity{
+    private String name;
+
+    public ParentAnnotated(){
+
+    }
+
+    public ParentAnnotated(String name) {
+        this.name = name;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    @Override
+    public void setName(String name) {
+        this.name = name;
+    }
+}
\ No newline at end of file
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/annotated/UnderlinedPropertyNameAnnotated.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/annotated/UnderlinedPropertyNameAnnotated.java
new file mode 100644
index 00000000..b0982f26
--- /dev/null
+++ b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/annotated/UnderlinedPropertyNameAnnotated.java
@@ -0,0 +1,27 @@
+package me.jivimberg.android.sugartestapp.model.entities.annotated;
+
+import com.orm.dsl.Table;
+
+import me.jivimberg.android.sugartestapp.model.entities.SugarEntity;
+
+// Issue #213
+@Table(name = "car")
+public class UnderlinedPropertyNameAnnotated implements SugarEntity {
+    private String car_name;
+
+    public UnderlinedPropertyNameAnnotated(){
+
+    }
+
+    public UnderlinedPropertyNameAnnotated(String car_name) {
+        this.car_name = car_name;
+    }
+
+    public String getName() {
+        return car_name;
+    }
+
+    public void setName(String car_name) {
+        this.car_name = car_name;
+    }
+}
\ No newline at end of file
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/annotated/Project.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/annotated/UniqueField.java
similarity index 64%
rename from sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/annotated/Project.java
rename to sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/annotated/UniqueField.java
index 538bb30b..36d00363 100644
--- a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/annotated/Project.java
+++ b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/annotated/UniqueField.java
@@ -1,21 +1,23 @@
-package me.jivimberg.android.sugartestapp.model.annotated;
+package me.jivimberg.android.sugartestapp.model.entities.annotated;
 
 import com.orm.dsl.Column;
 import com.orm.dsl.NotNull;
 import com.orm.dsl.Table;
 
+import me.jivimberg.android.sugartestapp.model.entities.SugarEntity;
+
 @Table(name = "Project")
-public class Project {
+public class UniqueField implements SugarEntity {
     @Column(name = "projectId", unique = true, notNull = true)
     private int id;
     @NotNull private String name;
 
-    public Project(int id, String name) {
+    public UniqueField(int id, String name) {
         this.id = id;
         this.name = name;
     }
 
-    public Project() {
+    public UniqueField() {
     }
 
     public int getId() {
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/extended/ChildExtended.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/extended/ChildExtended.java
new file mode 100644
index 00000000..9d223bf8
--- /dev/null
+++ b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/extended/ChildExtended.java
@@ -0,0 +1,19 @@
+package me.jivimberg.android.sugartestapp.model.entities.extended;
+
+import com.orm.SugarRecord;
+
+public class ChildExtended extends SugarRecord {
+    private ParentExtended category;
+
+    public ChildExtended(){
+
+    }
+
+    public ChildExtended(ParentExtended category) {
+        this.category = category;
+    }
+
+    public ParentExtended getCategory() {
+        return category;
+    }
+}
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/extended/ParentExtended.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/extended/ParentExtended.java
new file mode 100644
index 00000000..4ae70d03
--- /dev/null
+++ b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/extended/ParentExtended.java
@@ -0,0 +1,26 @@
+package me.jivimberg.android.sugartestapp.model.entities.extended;
+
+import com.orm.SugarRecord;
+
+import me.jivimberg.android.sugartestapp.model.entities.SugarEntity;
+
+public class ParentExtended extends SugarRecord implements SugarEntity {
+    private String name;
+
+    public ParentExtended(){
+
+    }
+
+    public ParentExtended(String name) {
+        this.name = name;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    @Override
+    public void setName(String name) {
+        this.name = name;
+    }
+}
\ No newline at end of file
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/extended/UnderlinedPropertyNameExtended.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/extended/UnderlinedPropertyNameExtended.java
new file mode 100644
index 00000000..9b0521d9
--- /dev/null
+++ b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/entities/extended/UnderlinedPropertyNameExtended.java
@@ -0,0 +1,25 @@
+package me.jivimberg.android.sugartestapp.model.entities.extended;
+
+import com.orm.SugarRecord;
+
+import me.jivimberg.android.sugartestapp.model.entities.SugarEntity;
+
+public class UnderlinedPropertyNameExtended extends SugarRecord implements SugarEntity {
+    private String car_name;
+
+    public UnderlinedPropertyNameExtended(){
+
+    }
+
+    public UnderlinedPropertyNameExtended(String car_name) {
+        this.car_name = car_name;
+    }
+
+    public String getName() {
+        return car_name;
+    }
+
+    public void setName(String car_name) {
+        this.car_name = car_name;
+    }
+}
\ No newline at end of file
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/extended/CarExtending.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/extended/CarExtending.java
deleted file mode 100644
index c2d96ea0..00000000
--- a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/extended/CarExtending.java
+++ /dev/null
@@ -1,24 +0,0 @@
-package me.jivimberg.android.sugartestapp.model.extended;
-
-import com.orm.SugarRecord;
-import com.orm.dsl.Table;
-
-public class CarExtending extends SugarRecord {
-    private String car_name;
-
-    public CarExtending(){
-
-    }
-
-    public CarExtending(String car_name) {
-        this.car_name = car_name;
-    }
-
-    public String getName() {
-        return car_name;
-    }
-
-    public void setName(String car_name) {
-        this.car_name = car_name;
-    }
-}
\ No newline at end of file
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/extended/CategoryExtending.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/extended/CategoryExtending.java
deleted file mode 100644
index d2c08b1e..00000000
--- a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/extended/CategoryExtending.java
+++ /dev/null
@@ -1,20 +0,0 @@
-package me.jivimberg.android.sugartestapp.model.extended;
-
-import com.orm.SugarRecord;
-import com.orm.dsl.Table;
-
-public class CategoryExtending extends SugarRecord {
-    private String name;
-
-    public CategoryExtending(){
-
-    }
-
-    public CategoryExtending(String name) {
-        this.name = name;
-    }
-
-    public String getName() {
-        return name;
-    }
-}
\ No newline at end of file
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/extended/ProjectExtending.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/extended/ProjectExtending.java
deleted file mode 100644
index 93d8087c..00000000
--- a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/extended/ProjectExtending.java
+++ /dev/null
@@ -1,27 +0,0 @@
-package me.jivimberg.android.sugartestapp.model.extended;
-
-import com.orm.SugarRecord;
-import com.orm.dsl.NotNull;
-
-public class ProjectExtending extends SugarRecord {
-    @NotNull private String name;
-
-    public ProjectExtending(@NotNull String name) {
-        this.name = name;
-    }
-
-    public ProjectExtending() {
-    }
-
-    public String getName() {
-        return name;
-    }
-
-    public void setName(String name) {
-        this.name = name;
-    }
-
-    public static ProjectExtending findById(Long id) {
-        return findById(ProjectExtending.class, id);
-    }
-}
diff --git a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/extended/SubCategoryExtending.java b/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/extended/SubCategoryExtending.java
deleted file mode 100644
index 6c8ceeda..00000000
--- a/sugartestapp/src/main/java/me/jivimberg/android/sugartestapp/model/extended/SubCategoryExtending.java
+++ /dev/null
@@ -1,20 +0,0 @@
-package me.jivimberg.android.sugartestapp.model.extended;
-
-import com.orm.SugarRecord;
-import com.orm.dsl.Table;
-
-public class SubCategoryExtending extends SugarRecord {
-    private CategoryExtending category;
-
-    public SubCategoryExtending(){
-
-    }
-
-    public SubCategoryExtending(CategoryExtending category) {
-        this.category = category;
-    }
-
-    public CategoryExtending getCategory() {
-        return category;
-    }
-}
