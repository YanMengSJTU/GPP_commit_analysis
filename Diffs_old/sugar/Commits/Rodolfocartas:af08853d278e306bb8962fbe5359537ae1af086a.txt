diff --git a/library/src/com/orm/SugarDb.java b/library/src/com/orm/SugarDb.java
index 0f859afc..6cd30f4a 100644
--- a/library/src/com/orm/SugarDb.java
+++ b/library/src/com/orm/SugarDb.java
@@ -17,6 +17,8 @@
 import java.lang.reflect.Modifier;
 import java.util.*;
 
+import com.orm.dsl.Index;
+
 import static com.orm.SugarConfig.getDatabaseVersion;
 import static com.orm.SugarConfig.getDebugEnabled;
 
@@ -113,6 +115,7 @@ public void onCreate(SQLiteDatabase sqLiteDatabase) {
         StringBuilder sb = new StringBuilder("CREATE TABLE ").append(table.getSqlName()).append(
                 " ( ID INTEGER PRIMARY KEY AUTOINCREMENT ");
 
+        List<String> indexStatements = new ArrayList<String>();
         for (Field column : fields) {
             String columnName = StringUtil.toSQLName(column.getName());
             String columnType = QueryBuilder.getColumnType(column.getType());
@@ -124,6 +127,12 @@ public void onCreate(SQLiteDatabase sqLiteDatabase) {
                 }
                 sb.append(", ").append(columnName).append(" ").append(columnType);
             }
+            
+            if(column.isAnnotationPresent(Index.class)) {
+            	String idxStr = column.getAnnotation(Index.class).unique() ? "CREATE UNIQUE INDEX" : "CREATE INDEX";
+            	StringBuilder indexBuilder = new StringBuilder(idxStr).append(" IF NOT EXISTS ").append(columnName).append("_idx");
+            	indexBuilder.append(" ON ").append(table.getSqlName()).append(" (").append(columnName).append(" asc)");
+            }
         }
         sb.append(" ) ");
 
@@ -131,6 +140,10 @@ public void onCreate(SQLiteDatabase sqLiteDatabase) {
 
         if (!"".equals(sb.toString()))
             sqLiteDatabase.execSQL(sb.toString());
+        
+        for (String indexStatement : indexStatements) {
+			sqLiteDatabase.execSQL(indexStatement);
+		}
     }
 
     @Override
diff --git a/library/src/com/orm/dsl/Index.java b/library/src/com/orm/dsl/Index.java
new file mode 100644
index 00000000..ed2ea240
--- /dev/null
+++ b/library/src/com/orm/dsl/Index.java
@@ -0,0 +1,10 @@
+package com.orm.dsl;
+
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+
+@Retention(RetentionPolicy.RUNTIME)
+public @interface Index {
+	
+	boolean unique() default false;
+}
