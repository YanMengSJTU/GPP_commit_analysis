diff --git a/library/src/com/orm/SugarDb.java b/library/src/com/orm/SugarDb.java
index 7ef08294..9349ab03 100644
--- a/library/src/com/orm/SugarDb.java
+++ b/library/src/com/orm/SugarDb.java
@@ -56,7 +56,7 @@ public SugarDb(Context context) {
 
     @SuppressWarnings("unchecked")
     private <T extends SugarRecord<?>> T getDomainClass(String className, Context context) {
-        Log.i("Sugar", "domain class");
+        Log.d("Sugar", "domain class");
         Class<?> discoveredClass = null;
         try {
             discoveredClass = Class.forName(className, true, context.getClass().getClassLoader());
@@ -98,7 +98,7 @@ private String getSourcePath(Context context) throws PackageManager.NameNotFound
 
     @Override
     public void onCreate(SQLiteDatabase sqLiteDatabase) {
-        Log.i("Sugar", "on create");
+        Log.d("Sugar", "on create");
         createDatabase(sqLiteDatabase);
     }
 
@@ -110,7 +110,7 @@ public void onCreate(SQLiteDatabase sqLiteDatabase) {
     }
 
     private <T extends SugarRecord<?>> void createTable(T table, SQLiteDatabase sqLiteDatabase) {
-        Log.i("Sugar", "create table");
+        Log.d("Sugar", "create table");
         List<Field> fields = table.getTableFields();
         StringBuilder sb = new StringBuilder("CREATE TABLE ").append(table.getSqlName()).append(
                 " ( ID INTEGER PRIMARY KEY AUTOINCREMENT ");
@@ -130,27 +130,27 @@ public void onCreate(SQLiteDatabase sqLiteDatabase) {
             
             if(column.isAnnotationPresent(Index.class)) {
             	String idxStr = column.getAnnotation(Index.class).unique() ? "CREATE UNIQUE INDEX" : "CREATE INDEX";
-            	StringBuilder indexBuilder = new StringBuilder(idxStr).append(" IF NOT EXISTS ").append(columnName).append("_idx");
+            	StringBuilder indexBuilder = new StringBuilder(idxStr).append(" IF NOT EXISTS ").append(table.getSqlName()).append("_").append(columnName).append("_IDX");
             	indexBuilder.append(" ON ").append(table.getSqlName()).append(" (").append(columnName).append(" asc)");
             	indexStatements.add(indexBuilder.toString());
             }
         }
         sb.append(" ) ");
 
-        Log.i("Sugar", "creating table " + table.getSqlName());
+        Log.d("Sugar", "creating table " + table.getSqlName());
 
         if (!"".equals(sb.toString()))
             sqLiteDatabase.execSQL(sb.toString());
         
         for (String indexStatement : indexStatements) {
-        	Log.i("Sugar", "creating index " + table.getSqlName());
+        	Log.d("Sugar", "creating index " + indexStatement);
 			sqLiteDatabase.execSQL(indexStatement);
 		}
     }
 
     @Override
     public void onUpgrade(SQLiteDatabase sqLiteDatabase, int oldVersion, int newVersion) {
-        Log.i("Sugar", "upgrading sugar");
+        Log.d("Sugar", "upgrading sugar");
         // check if some tables are to be created
         doUpgrade(sqLiteDatabase);
 
@@ -169,7 +169,7 @@ public void onUpgrade(SQLiteDatabase sqLiteDatabase, int oldVersion, int newVers
             try {// we try to do a select, if fails then (?) there isn't the table
                 sqLiteDatabase.query(domain.tableName, null, null, null, null, null, null);
             } catch (SQLiteException e) {
-                Log.i("Sugar", String.format("creating table on update (error was '%s')", e.getMessage()));
+                Log.d("Sugar", String.format("creating table on update (error was '%s')", e.getMessage()));
                 createTable(domain, sqLiteDatabase);
             }
         }
@@ -190,7 +190,7 @@ private boolean executeSugarUpgrade(SQLiteDatabase db, int oldVersion, int newVe
             Collections.sort(files, new NumberComparator());
 
             for (String file : files){
-                Log.i("Sugar", "filename : " + file);
+                Log.d("Sugar", "filename : " + file);
                 try {
                     int version = Integer.valueOf(file.replace(".sql", ""));
 
@@ -199,7 +199,7 @@ private boolean executeSugarUpgrade(SQLiteDatabase db, int oldVersion, int newVe
                         isSuccess = true;
                     }
                 } catch (NumberFormatException e) {
-                    Log.i("Sugar", "not a sugar script. ignored." + file);
+                    Log.d("Sugar", "not a sugar script. ignored." + file);
                 }
             }
         } catch (IOException e) {
@@ -215,13 +215,13 @@ private void executeScript(SQLiteDatabase db, String file) {
             BufferedReader reader = new BufferedReader(new InputStreamReader(is));
             String line;
             while ((line = reader.readLine()) != null) {
-                Log.i("Sugar script", line);
+                Log.d("Sugar script", line);
                 db.execSQL(line.toString());
             }
         } catch (IOException e) {
             Log.e("Sugar", e.getMessage());
         }
 
-        Log.i("Sugar", "script executed");
+        Log.d("Sugar", "script executed");
     }
 }
