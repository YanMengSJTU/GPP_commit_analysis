diff --git a/example/.classpath b/example/.classpath
new file mode 100644
index 00000000..51769745
--- /dev/null
+++ b/example/.classpath
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+	<classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
+	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
+	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.DEPENDENCIES"/>
+	<classpathentry kind="src" path="src"/>
+	<classpathentry kind="src" path="gen"/>
+	<classpathentry kind="output" path="bin/classes"/>
+</classpath>
diff --git a/example/.project b/example/.project
new file mode 100644
index 00000000..8687ca72
--- /dev/null
+++ b/example/.project
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>SugarActivity</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>com.android.ide.eclipse.adt.ResourceManagerBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>com.android.ide.eclipse.adt.PreCompilerBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.jdt.core.javabuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>com.android.ide.eclipse.adt.ApkBuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>com.android.ide.eclipse.adt.AndroidNature</nature>
+		<nature>org.eclipse.jdt.core.javanature</nature>
+	</natures>
+</projectDescription>
diff --git a/example/bin/AndroidManifest.xml b/example/bin/AndroidManifest.xml
new file mode 100644
index 00000000..e03f036a
--- /dev/null
+++ b/example/bin/AndroidManifest.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+      package="com.example"
+      android:versionCode="1"
+      android:versionName="1.0">
+    <application android:label="@string/app_name" android:icon="@drawable/icon" android:name="ClientApp">
+        <activity android:name="SugarActivity"
+                  android:label="@string/app_name">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity android:name=".NoteListActivity"/>
+        <activity android:name=".AddNoteActivity"/>
+
+        <meta-data android:name="DATABASE" android:value="sugar_example.db" />
+        <meta-data android:name="VERSION" android:value="3" />
+        <meta-data android:name="QUERY_LOG" android:value="true" />
+    </application>
+</manifest> 
diff --git a/example/bin/R.txt b/example/bin/R.txt
new file mode 100644
index 00000000..86a6ff05
--- /dev/null
+++ b/example/bin/R.txt
@@ -0,0 +1,7 @@
+int drawable icon 0x7f020000
+int id Button01 0x7f050002
+int id LinearLayout01 0x7f050001
+int id layout 0x7f050000
+int layout main 0x7f030000
+int layout notelist 0x7f030001
+int string app_name 0x7f040000
diff --git a/example/bin/SugarActivity.apk b/example/bin/SugarActivity.apk
new file mode 100644
index 00000000..34b06a7e
Binary files /dev/null and b/example/bin/SugarActivity.apk differ
diff --git a/example/bin/classes.dex b/example/bin/classes.dex
new file mode 100644
index 00000000..a898f86d
Binary files /dev/null and b/example/bin/classes.dex differ
diff --git a/example/bin/dexedLibs/annotations-491211698f03bc96aa7913a2d971c7cb.jar b/example/bin/dexedLibs/annotations-491211698f03bc96aa7913a2d971c7cb.jar
new file mode 100644
index 00000000..7d1c0e25
Binary files /dev/null and b/example/bin/dexedLibs/annotations-491211698f03bc96aa7913a2d971c7cb.jar differ
diff --git a/example/bin/dexedLibs/library-5db8e778f645fe86b7c3df57d8c7124c.jar b/example/bin/dexedLibs/library-5db8e778f645fe86b7c3df57d8c7124c.jar
new file mode 100644
index 00000000..9e5245c8
Binary files /dev/null and b/example/bin/dexedLibs/library-5db8e778f645fe86b7c3df57d8c7124c.jar differ
diff --git a/example/bin/jarlist.cache b/example/bin/jarlist.cache
new file mode 100644
index 00000000..0565465f
--- /dev/null
+++ b/example/bin/jarlist.cache
@@ -0,0 +1,3 @@
+# cache for current jar dependency. DO NOT EDIT.
+# format is <lastModified> <length> <SHA-1> <path>
+# Encoding is UTF-8
diff --git a/example/bin/res/crunch/drawable-hdpi/icon.png b/example/bin/res/crunch/drawable-hdpi/icon.png
new file mode 100644
index 00000000..882eb148
Binary files /dev/null and b/example/bin/res/crunch/drawable-hdpi/icon.png differ
diff --git a/example/bin/res/crunch/drawable-ldpi/icon.png b/example/bin/res/crunch/drawable-ldpi/icon.png
new file mode 100644
index 00000000..18689f65
Binary files /dev/null and b/example/bin/res/crunch/drawable-ldpi/icon.png differ
diff --git a/example/bin/res/crunch/drawable-mdpi/icon.png b/example/bin/res/crunch/drawable-mdpi/icon.png
new file mode 100644
index 00000000..02e96b96
Binary files /dev/null and b/example/bin/res/crunch/drawable-mdpi/icon.png differ
diff --git a/example/bin/resources.ap_ b/example/bin/resources.ap_
new file mode 100644
index 00000000..50c30c65
Binary files /dev/null and b/example/bin/resources.ap_ differ
diff --git a/example/gen/com/example/BuildConfig.java b/example/gen/com/example/BuildConfig.java
new file mode 100644
index 00000000..24dc7a0d
--- /dev/null
+++ b/example/gen/com/example/BuildConfig.java
@@ -0,0 +1,6 @@
+/** Automatically generated file. DO NOT MODIFY */
+package com.example;
+
+public final class BuildConfig {
+    public final static boolean DEBUG = true;
+}
\ No newline at end of file
diff --git a/example/gen/com/example/R.java b/example/gen/com/example/R.java
new file mode 100644
index 00000000..b971424d
--- /dev/null
+++ b/example/gen/com/example/R.java
@@ -0,0 +1,28 @@
+/* AUTO-GENERATED FILE.  DO NOT MODIFY.
+ *
+ * This class was automatically generated by the
+ * aapt tool from the resource data it found.  It
+ * should not be modified by hand.
+ */
+
+package com.example;
+
+public final class R {
+    public static final class attr {
+    }
+    public static final class drawable {
+        public static final int icon=0x7f020000;
+    }
+    public static final class id {
+        public static final int Button01=0x7f050002;
+        public static final int LinearLayout01=0x7f050001;
+        public static final int layout=0x7f050000;
+    }
+    public static final class layout {
+        public static final int main=0x7f030000;
+        public static final int notelist=0x7f030001;
+    }
+    public static final class string {
+        public static final int app_name=0x7f040000;
+    }
+}
diff --git a/example/project.properties b/example/project.properties
new file mode 100644
index 00000000..1f5794f3
--- /dev/null
+++ b/example/project.properties
@@ -0,0 +1,15 @@
+# This file is automatically generated by Android Tools.
+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
+#
+# This file must be checked in Version Control Systems.
+#
+# To customize properties used by the Ant build system edit
+# "ant.properties", and override values to adapt the script to your
+# project structure.
+#
+# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):
+#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
+
+# Project target.
+target=android-14
+android.library.reference.1=../library
diff --git a/library/.gradle/1.10/taskArtifacts/cache.properties b/library/.gradle/1.10/taskArtifacts/cache.properties
new file mode 100644
index 00000000..a1a7cb4f
--- /dev/null
+++ b/library/.gradle/1.10/taskArtifacts/cache.properties
@@ -0,0 +1 @@
+#Tue Nov 04 15:12:25 GMT+07:00 2014
diff --git a/library/.gradle/1.10/taskArtifacts/cache.properties.lock b/library/.gradle/1.10/taskArtifacts/cache.properties.lock
new file mode 100644
index 00000000..d4ad8bc0
Binary files /dev/null and b/library/.gradle/1.10/taskArtifacts/cache.properties.lock differ
diff --git a/library/.gradle/1.10/taskArtifacts/fileHashes.bin b/library/.gradle/1.10/taskArtifacts/fileHashes.bin
new file mode 100644
index 00000000..f03c88f6
Binary files /dev/null and b/library/.gradle/1.10/taskArtifacts/fileHashes.bin differ
diff --git a/library/.gradle/1.10/taskArtifacts/fileSnapshots.bin b/library/.gradle/1.10/taskArtifacts/fileSnapshots.bin
new file mode 100644
index 00000000..5b1d2bd1
Binary files /dev/null and b/library/.gradle/1.10/taskArtifacts/fileSnapshots.bin differ
diff --git a/library/.gradle/1.10/taskArtifacts/outputFileStates.bin b/library/.gradle/1.10/taskArtifacts/outputFileStates.bin
new file mode 100644
index 00000000..48bce71a
Binary files /dev/null and b/library/.gradle/1.10/taskArtifacts/outputFileStates.bin differ
diff --git a/library/.gradle/1.10/taskArtifacts/taskArtifacts.bin b/library/.gradle/1.10/taskArtifacts/taskArtifacts.bin
new file mode 100644
index 00000000..d99b97c5
Binary files /dev/null and b/library/.gradle/1.10/taskArtifacts/taskArtifacts.bin differ
diff --git a/library/src/com/orm/SugarApp.java b/library/src/com/orm/SugarApp.java
index ac7da99d..27149699 100644
--- a/library/src/com/orm/SugarApp.java
+++ b/library/src/com/orm/SugarApp.java
@@ -20,6 +20,7 @@ public void onCreate(){
     public void onTerminate(){
         if (this.database != null) {
             this.database.getDB().close();
+            SugarCache.dispose();
         }
         super.onTerminate();
     }
diff --git a/library/src/com/orm/SugarCache.java b/library/src/com/orm/SugarCache.java
new file mode 100644
index 00000000..0a9d1536
--- /dev/null
+++ b/library/src/com/orm/SugarCache.java
@@ -0,0 +1,55 @@
+package com.orm;
+
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.util.LruCache;
+
+@SuppressLint("NewApi")
+@SuppressWarnings("unused")
+public final class SugarCache {
+	public static final int DEFAULT_CACHE_SIZE = 1024;
+	private static Context sContext;
+	private static SugarDb sSugarDb;
+	private static LruCache<String, SugarRecord<?>> sEntities;
+	private static boolean sIsInitialized = false;
+	
+	public static synchronized void initialize(SugarDb sugarDb) {
+		if (sIsInitialized) {
+			return;
+		}
+		sSugarDb = sugarDb;
+		sContext = sugarDb.getContext();
+		sEntities = new LruCache<String, SugarRecord<?>>(DEFAULT_CACHE_SIZE);
+		sIsInitialized = true;
+	}
+	
+	public static synchronized void clear() {
+		sEntities.evictAll();
+	}
+
+	public static synchronized void dispose() {
+		sEntities = null;
+		sIsInitialized = false;
+	}
+
+	public static String getIdentifier(Class<? extends SugarRecord<?>> type, Long id) {
+		return SugarRecord.getTableName(type) + "@" + id;
+	}
+
+	@SuppressWarnings("unchecked")
+	public static String getIdentifier(SugarRecord<?> entity) {
+		return getIdentifier((Class<? extends SugarRecord<?>>) entity.getClass(), entity.getId());
+	}
+
+	public static synchronized void addEntity(SugarRecord<?> entity) {
+		sEntities.put(getIdentifier(entity), entity);
+	}
+
+	public static synchronized SugarRecord<?> getEntity(Class<? extends SugarRecord<?>> type, long id) {
+		return sEntities.get(getIdentifier(type, id));
+	}
+
+	public static synchronized void removeEntity(SugarRecord<?> entity) {
+		sEntities.remove(getIdentifier(entity));
+	}
+}
diff --git a/library/src/com/orm/SugarDb.java b/library/src/com/orm/SugarDb.java
index dafdd97b..a2806982 100644
--- a/library/src/com/orm/SugarDb.java
+++ b/library/src/com/orm/SugarDb.java
@@ -32,11 +32,15 @@
 
 public class SugarDb extends SQLiteOpenHelper {
     private Context context;
+    
+    public Context getContext() {
+    	return this.context;
+    }
 
-    public SugarDb(Context context) {
+	public SugarDb(Context context) {
         super(context, SugarConfig.getDatabaseName(context), new SugarCursorFactory(getDebugEnabled(context)), getDatabaseVersion(context));
         this.context = context;
-
+        SugarCache.initialize(this);
     }
 
     private <T extends SugarRecord<?>> List<T> getDomainClasses(Context context) {
diff --git a/library/src/com/orm/SugarRecord.java b/library/src/com/orm/SugarRecord.java
index f87630b4..db0b2dff 100644
--- a/library/src/com/orm/SugarRecord.java
+++ b/library/src/com/orm/SugarRecord.java
@@ -1,7 +1,6 @@
 package com.orm;
 
 import android.content.ContentValues;
-import android.content.Context;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteException;
@@ -10,7 +9,6 @@
 import android.util.Log;
 import com.orm.dsl.Ignore;
 
-import java.lang.reflect.Constructor;
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
 import java.lang.reflect.Modifier;
@@ -47,12 +45,10 @@ public long save() {
         return save(getSugarContext().getDatabase().getDB());
     }
 
-    @SuppressWarnings("deprecation")
     public static <T extends SugarRecord<?>> void saveInTx(T... objects ) {
         saveInTx(Arrays.asList(objects));
     }
 
-    @SuppressWarnings("deprecation")
     public static <T extends SugarRecord<?>> void saveInTx(Collection<T> objects ) {
         SQLiteDatabase sqLiteDatabase = getSugarContext().getDatabase().getDB();
 
@@ -72,7 +68,8 @@ public long save() {
 
     }
 
-    long save(SQLiteDatabase db) {
+    @SuppressWarnings("rawtypes")
+	long save(SQLiteDatabase db) {
 
         List<Field> columns = getTableFields();
         ContentValues values = new ContentValues(columns.size());
@@ -264,7 +261,7 @@ public static void executeQuery(String query, String... arguments){
     	return toRet;
     }
 
-    @SuppressWarnings("unchecked")
+    @SuppressWarnings({ "unchecked", "rawtypes" })
     void inflate(Cursor cursor) {
         Map<Field, Long> entities = new HashMap<Field, Long>();
         List<Field> columns = getTableFields();
@@ -345,8 +342,12 @@ void inflate(Cursor cursor) {
 
         for (Field f : entities.keySet()) {
             try {
-                f.set(this, findById((Class<? extends SugarRecord<?>>) f.getType(), 
-                        entities.get(f)));
+            	SugarRecord<?> entity = SugarCache.getEntity((Class<? extends SugarRecord<?>>) f.getType(), entities.get(f));
+            	if (entity == null) {
+            		entity = findById((Class<? extends SugarRecord<?>>) f.getType(), entities.get(f));
+            		SugarCache.addEntity(entity);
+            	}
+                f.set(this, entity);
             } catch (SQLiteException e) {
             } catch (IllegalArgumentException e) {
             } catch (IllegalAccessException e) {
diff --git a/library/src/com/orm/query/Select.java b/library/src/com/orm/query/Select.java
index ceaac65c..f6b11c4d 100644
--- a/library/src/com/orm/query/Select.java
+++ b/library/src/com/orm/query/Select.java
@@ -6,6 +6,7 @@
 import java.util.Iterator;
 import java.util.List;
 
+@SuppressWarnings("rawtypes")
 public class Select<T extends SugarRecord<?>> implements Iterable {
 
     private Class<T> record;
