diff --git a/library/src/com/orm/SugarRecord.java b/library/src/com/orm/SugarRecord.java
index 64763081..2f4be96f 100644
--- a/library/src/com/orm/SugarRecord.java
+++ b/library/src/com/orm/SugarRecord.java
@@ -133,7 +133,7 @@ else if (columnType.equals(byte[].class)) {
         }
 
         if (id == null) {
-            id = db.insert(getSqlName(), null, values);
+            id = db.insertOrThrow(getSqlName(), null, values);
             Log.i("Sugar", getClass().getSimpleName() + " saved: " + id);
         } else {
             db.update(getSqlName(), values, "ID = ?", new String[]{String.valueOf(id)});
@@ -284,30 +284,45 @@ else if(colName.equalsIgnoreCase("id")){
                     long cid = cursor.getLong(index);
                     field.set(this, Long.valueOf(cid));
                 }
-                else if (fieldType.equals(long.class) || fieldType.equals(Long.class)) {
-                    field.setLong(this, cursor.getLong(index));
+                else if (fieldType.equals(long.class)) {
+                    field.set(this, cursor.getLong(index));
+                } 
+                else if (fieldType.equals(Long.class)) {
+                    field.set(this, (Long) cursor.getLong(index));
                 } 
                 else if (fieldType.equals(String.class)) {
                     String val = cursor.getString(index);
                     field.set(this, val != null && val.equals("null") ? null : val);
                 } 
-                else if (fieldType.equals(double.class) || fieldType.equals(Double.class)) {
-                    field.setDouble(this, cursor.getDouble(index));
+                else if (fieldType.equals(double.class)) {
+                    field.set(this, cursor.getDouble(index));
+                } 
+                else if (fieldType.equals(Double.class)) {
+                    field.set(this, (Double) cursor.getDouble(index));
                 } 
                 else if (fieldType.equals(boolean.class) || fieldType.equals(Boolean.class)) {
-                    field.setBoolean(this, Boolean.parseBoolean(cursor.getString(index)) || cursor.getString(index).equals("1"));
+                    field.set(this, Boolean.parseBoolean(cursor.getString(index)) || cursor.getString(index).equals("1"));
                 } 
                 else if (fieldType.equals(byte[].class)) {
                     field.set(this, cursor.getBlob(index));
                 } 
-                else if (fieldType.equals(int.class) || fieldType.equals(Integer.class)) {
-                    field.setInt(this, cursor.getInt(index));
+                else if (fieldType.equals(int.class)) {
+                    field.set(this, cursor.getInt(index));
+                } 
+                else if (fieldType.equals(Integer.class)) {
+                    field.set(this, (Integer) cursor.getInt(index));
                 } 
-                else if (fieldType.equals(float.class) || fieldType.equals(Float.class)) {
-                    field.setFloat(this, cursor.getFloat(index));
+                else if (fieldType.equals(float.class)) {
+                    field.set(this, cursor.getFloat(index));
                 } 
-                else if (fieldType.equals(short.class) || fieldType.equals(Short.class)) {
-                    field.setShort(this, cursor.getShort(index));
+                else if (fieldType.equals(Float.class)) {
+                    field.set(this, (Float) cursor.getFloat(index));
+                } 
+                else if (fieldType.equals(short.class)) {
+                    field.set(this, cursor.getShort(index));
+                } 
+                else if (fieldType.equals(Short.class)) {
+                    field.set(this, (Short) cursor.getShort(index));
                 } 
                 else if (fieldType.equals(Uri.class)) {
                     String uri = cursor.getString(index);
@@ -347,17 +362,15 @@ else if (SugarRecord.class.isAssignableFrom(fieldType)) {
                 else
                     Log.e("Sugar", "Class cannot be read from Sqlite3 database. Please check the type of field " + field.getName() + "(" + fieldType.getName() + ")");
             } catch (IllegalArgumentException e) {
-                Log.e("field set error", e.getMessage());
+                Log.e("Sugar", "Field set error (IllegalArgumentException). Please check the field " + field.getName());
             } catch (IllegalAccessException e) {
-                Log.e("field set error", e.getMessage());
+                Log.e("Sugar", "Field set error (IllegalAccessException). Please check the field " + field.getName());
             }
-
         }
 
         for (Field f : entities.keySet()) {
             try {
-                f.set(this, findById((Class<? extends SugarRecord<?>>) f.getType(), 
-                        entities.get(f)));
+                f.set(this, findById((Class<? extends SugarRecord<?>>) f.getType(), entities.get(f)));
             } catch (SQLiteException e) {
             } catch (IllegalArgumentException e) {
             } catch (IllegalAccessException e) {
