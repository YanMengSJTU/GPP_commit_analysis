diff --git a/library/src/com/orm/SchemaGenerator.java b/library/src/com/orm/SchemaGenerator.java
index bf9c4f68..2d96d8fa 100644
--- a/library/src/com/orm/SchemaGenerator.java
+++ b/library/src/com/orm/SchemaGenerator.java
@@ -19,12 +19,13 @@
 import java.io.InputStreamReader;
 import java.lang.reflect.Field;
 import java.util.Arrays;
+import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
 
 public class SchemaGenerator {
 
-    private Context context;
+    protected Context context;
     private List<Class> domainClasses;
 
     public SchemaGenerator(Context context) {
@@ -70,34 +71,43 @@ public void deleteTables(SQLiteDatabase sqLiteDatabase) {
     private boolean executeSugarUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
         boolean isSuccess = false;
 
-        try {
-            List<String> files = Arrays.asList(this.context.getAssets().list("sugar_upgrades"));
-            Collections.sort(files, new NumberComparator());
-            for (String file : files) {
-                Log.i("Sugar", "filename : " + file);
+        List<String> files = getMigrationFiles();
+        Collections.sort(files, new NumberComparator());
+        for (String file : files) {
+            Log.i("Sugar", "filename : " + file);
 
-                try {
-                    int version = Integer.valueOf(file.replace(".sql", ""));
+            try {
+                int version = Integer.valueOf(file.replace(".sql", ""));
 
-                    if ((version > oldVersion) && (version <= newVersion)) {
-                        executeScript(db, file);
-                        isSuccess = true;
-                    }
-                } catch (NumberFormatException e) {
-                    Log.i("Sugar", "not a sugar script. ignored." + file);
+                if ((version > oldVersion) && (version <= newVersion)) {
+                    executeScript(db, file);
+                    isSuccess = true;
                 }
-
+            } catch (NumberFormatException e) {
+                Log.i("Sugar", "not a sugar script. ignored." + file);
             }
-        } catch (IOException e) {
-            Log.e("Sugar", e.getMessage());
         }
 
         return isSuccess;
     }
 
+    protected List<String> getMigrationFiles() {
+        try {
+            return Arrays.asList(this.context.getAssets().list("sugar_upgrades"));
+        } catch (IOException e) {
+            Log.e("Sugar", e.getMessage());
+            return new ArrayList<String>();
+        }
+    }
+
     private void executeScript(SQLiteDatabase db, String file) {
         try {
-            InputStream is = this.context.getAssets().open("sugar_upgrades/" + file);
+            InputStream is = getMigrationFileInputStream(file);
+            if (is == null) {
+                Log.i("Sugar", "not a sugar script. ignored." + file);
+                return;
+            }
+
             BufferedReader reader = new BufferedReader(new InputStreamReader(is));
             String line;
             while ((line = reader.readLine()) != null) {
@@ -111,6 +121,15 @@ private void executeScript(SQLiteDatabase db, String file) {
         Log.i("Sugar", "Script executed");
     }
 
+    protected InputStream getMigrationFileInputStream(String file) {
+        try {
+            return this.context.getAssets().open("sugar_upgrades/" + file);
+        } catch (IOException e) {
+            Log.e("Sugar", e.getMessage());
+            return null;
+        }
+      }
+
     private void createTable(Class<?> table, SQLiteDatabase sqLiteDatabase) {
         Log.i("Sugar", "Create table");
         List<Field> fields = ReflectionUtil.getTableFields(table);
