diff --git a/library/src/com/orm/Database.java b/library/src/com/orm/Database.java
index 2bbe9dd2..933211ce 100644
--- a/library/src/com/orm/Database.java
+++ b/library/src/com/orm/Database.java
@@ -7,7 +7,8 @@
 public class Database {
     private SugarDb sugarDb;
     private SQLiteDatabase sqLiteDatabase;
-
+    private int activeDatabaseCount = 0;
+    
     public Database(Context context){
         this.sugarDb  = new SugarDb(context);
     }
@@ -15,14 +16,20 @@ public Database(Context context){
 
   public SQLiteDatabase openDB() {
     this.sqLiteDatabase = this.sugarDb.getWritableDatabase();
+    activeDatabaseCount++;
 
     return this.sqLiteDatabase;
   }
 
   public void closeDB() {
-    if (this.sqLiteDatabase != null) {
-      this.sqLiteDatabase.close();
-      this.sqLiteDatabase = null;
+    
+    activeDatabaseCount--;
+    if (activeDatabaseCount == 0) {
+    	if (this.sqLiteDatabase != null) {
+    		if (sqLiteDatabase.isOpen()) {
+    			sqLiteDatabase.close();
+            }
+    	}
     }
   }
 }
diff --git a/library/src/com/orm/SugarRecord.java b/library/src/com/orm/SugarRecord.java
index 69d6ebfb..f6be113d 100644
--- a/library/src/com/orm/SugarRecord.java
+++ b/library/src/com/orm/SugarRecord.java
@@ -3,6 +3,7 @@
 import android.content.ContentValues;
 import android.content.Context;
 import android.database.Cursor;
+import android.database.DatabaseUtils;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteException;
 import android.util.Log;
@@ -65,8 +66,19 @@ public void save() {
                                     : "0");
                 } else {
                     if (!"id".equalsIgnoreCase(column.getName())) {
-                        values.put(StringUtil.toSQLName(column.getName()),
-                                String.valueOf(column.get(this)));
+                    	
+                    	if (column.getType().getName().equals("java.sql.Timestamp")) {
+							Timestamp timestamp = (Timestamp) column.get(this);
+							if(timestamp != null) {
+								values.put(StringUtil.toSQLName(column.getName()),
+										String.valueOf(timestamp.getTime()));
+							}
+							
+						} else {
+							values.put(StringUtil.toSQLName(column.getName()),
+									String.valueOf(column.get(this)));
+						}
+                        
                     }
                 }
 
@@ -149,6 +161,7 @@ public static void executeQuery(String query, String... arguments){
     }
 
     public void inflate(Cursor cursor) {
+
         Map<Field, Long> entities = new HashMap<Field, Long>();
         List<Field> columns = getTableFields();
         for (Field field : columns) {
@@ -187,6 +200,7 @@ public void inflate(Cursor cursor) {
                     field.setShort(this,
                             cursor.getShort(cursor.getColumnIndex(colName)));
                 } else if (typeString.equals("java.sql.Timestamp")) {
+         
                     long l = cursor.getLong(cursor.getColumnIndex(colName));
                     field.set(this, new Timestamp(l));
                 } else if (field.getType().getSuperclass() == SugarRecord.class) {
