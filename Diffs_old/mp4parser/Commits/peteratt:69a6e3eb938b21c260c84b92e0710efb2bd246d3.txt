diff --git a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MetaBox.java b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MetaBox.java
index 51072e8d..37e26957 100644
--- a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MetaBox.java
+++ b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MetaBox.java
@@ -18,6 +18,7 @@
 
 import org.mp4parser.BoxParser;
 import org.mp4parser.support.AbstractContainerBox;
+import org.mp4parser.tools.ByteBufferByteChannel;
 import org.mp4parser.tools.IsoTypeReader;
 import org.mp4parser.tools.IsoTypeWriter;
 
@@ -34,6 +35,8 @@
 public class MetaBox extends AbstractContainerBox {
     public static final String TYPE = "meta";
 
+    private boolean isFullBox = true;
+
     private int version;
     private int flags;
 
@@ -76,25 +79,43 @@ protected final void writeVersionAndFlags(ByteBuffer bb) {
 
     @Override
     public void parse(ReadableByteChannel dataSource, ByteBuffer header, long contentSize, BoxParser boxParser) throws IOException {
-        ByteBuffer bb = ByteBuffer.allocate(4);
+        ByteBuffer bb = ByteBuffer.allocate(8);
         dataSource.read(bb);
-        parseVersionAndFlags((ByteBuffer) bb.rewind());
-        initContainer(dataSource, contentSize - 4, boxParser);
+
+        String possibleHdlr = IsoTypeReader.read4cc(bb);
+
+        if ("hdlr".equals(possibleHdlr)) {
+            // QuickTime format
+            isFullBox = false;
+            ByteBuffer bb2 = ByteBuffer.allocate((int)contentSize);
+            bb.position(0);
+            bb2.put(bb);
+            dataSource.read(bb2);
+            bb2.position(0);
+            initContainer(new ByteBufferByteChannel(bb2), contentSize, boxParser);
+        } else {
+            isFullBox = true;
+            parseVersionAndFlags((ByteBuffer) bb.rewind());
+            initContainer(dataSource, contentSize - 4, boxParser);
+        }
     }
 
     @Override
     public void getBox(WritableByteChannel writableByteChannel) throws IOException {
         writableByteChannel.write(getHeader());
-        ByteBuffer bb = ByteBuffer.allocate(4);
-        writeVersionAndFlags(bb);
-        writableByteChannel.write((ByteBuffer) bb.rewind());
+
+        if (isFullBox) {
+            ByteBuffer bb = ByteBuffer.allocate(4);
+            writeVersionAndFlags(bb);
+            writableByteChannel.write((ByteBuffer) bb.rewind());
+        }
         writeContainer(writableByteChannel);
     }
 
     @Override
     public long getSize() {
         long s = getContainerSize();
-        long t = 4; // bytes to container start
+        long t = isFullBox ? 4 : 0; // bytes to container start
         return s + t + ((largeBox || (s + t) >= (1L << 32)) ? 16 : 8);
 
     }
