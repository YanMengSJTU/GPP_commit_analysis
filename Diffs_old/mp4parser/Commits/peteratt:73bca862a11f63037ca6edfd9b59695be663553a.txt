diff --git a/examples/src/main/java/org/mp4parser/examples/metadata/MetaDataInsert.java b/examples/src/main/java/org/mp4parser/examples/metadata/MetaDataInsert.java
index 66f6c35c..aea36af4 100644
--- a/examples/src/main/java/org/mp4parser/examples/metadata/MetaDataInsert.java
+++ b/examples/src/main/java/org/mp4parser/examples/metadata/MetaDataInsert.java
@@ -20,12 +20,12 @@
  */
 public class MetaDataInsert {
 
-
     public static void main(String[] args) throws IOException {
         MetaDataInsert cmd = new MetaDataInsert();
-        cmd.writeRandomMetadata("c:\\content\\Mobile_H264 - Kopie.mp4",
-                "lore ipsum tralalala");
+//        cmd.writeRandomMetadata("c:\\content\\Mobile_H264 - Kopie.mp4",
+//                "lore ipsum tralalala");
 
+        cmd.write360Metadata("~/Desktop/RYLO_20171026_150905_-0700_test.mp4");
     }
 
     public FileChannel splitFileAndInsert(File f, long pos, long length) throws IOException {
@@ -67,6 +67,51 @@ private boolean needsOffsetCorrection(IsoFile isoFile) {
         }
     }
 
+    private void write360Metadata(String videoFilePath) throws IOException {
+        File videoFile = new File(videoFilePath);
+        if (!videoFile.exists()) {
+            throw new FileNotFoundException("File " + videoFilePath + " not exists");
+        }
+
+        if (!videoFile.canWrite()) {
+            throw new IllegalStateException("No write permissions to file " + videoFilePath);
+        }
+        IsoFile isoFile = new IsoFile(videoFilePath);
+
+        MovieBox moov = isoFile.getBoxes(MovieBox.class).get(0);
+        FreeBox freeBox = findFreeBox(moov);
+
+        boolean correctOffset = needsOffsetCorrection(isoFile);
+        long sizeBefore = moov.getSize();
+        long offset = 0;
+
+        for (Box box : isoFile.getBoxes()) {
+            if ("moov".equals(box.getType())) {
+                break;
+            }
+            offset += box.getSize();
+        }
+
+        TrackBox videoTrack = null;
+        List<TrackBox> trackBoxes = moov.getBoxes(TrackBox.class);
+
+        for (TrackBox trackBox : trackBoxes) {
+            MediaBox mediaBox = trackBox.getMediaBox();
+            HandlerBox handlerBox = mediaBox.getHandlerBox();
+
+            String handlerType = handlerBox.getHandlerType();
+
+            if ("vide".equals(handlerType)) {
+                videoTrack = trackBox;
+                break;
+            }
+        }
+
+        if (videoTrack != null) {
+            System.out.println(videoTrack.toString());
+        }
+    }
+
     public void writeRandomMetadata(String videoFilePath, String title) throws IOException {
 
         File videoFile = new File(videoFilePath);
@@ -192,6 +237,4 @@ private void correctChunkOffsets(MovieBox movieBox, long correction) {
             return buf;
         }
     }
-
-
 }
diff --git a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MetaBox.java b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MetaBox.java
index 37e26957..11f77d7c 100644
--- a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MetaBox.java
+++ b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MetaBox.java
@@ -81,6 +81,7 @@ protected final void writeVersionAndFlags(ByteBuffer bb) {
     public void parse(ReadableByteChannel dataSource, ByteBuffer header, long contentSize, BoxParser boxParser) throws IOException {
         ByteBuffer bb = ByteBuffer.allocate(8);
         dataSource.read(bb);
+        bb.position(4);
 
         String possibleHdlr = IsoTypeReader.read4cc(bb);
 
