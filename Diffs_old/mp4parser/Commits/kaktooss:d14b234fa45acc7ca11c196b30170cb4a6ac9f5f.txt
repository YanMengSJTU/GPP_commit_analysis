diff --git a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/EditListBox.java b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/EditListBox.java
index 8eb19047..95ff57c5 100644
--- a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/EditListBox.java
+++ b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/EditListBox.java
@@ -1,17 +1,17 @@
-/*  
+/*
  * Copyright 2008 CoreMedia AG, Hamburg
  *
- * Licensed under the Apache License, Version 2.0 (the License); 
- * you may not use this file except in compliance with the License. 
- * You may obtain a copy of the License at 
- * 
- *     http://www.apache.org/licenses/LICENSE-2.0 
- * 
- * Unless required by applicable law or agreed to in writing, software 
- * distributed under the License is distributed on an AS IS BASIS, 
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
- * See the License for the specific language governing permissions and 
- * limitations under the License. 
+ * Licensed under the Apache License, Version 2.0 (the License);
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an AS IS BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
  */
 
 package org.mp4parser.boxes.iso14496.part12;
@@ -239,7 +239,7 @@ public void getContent(ByteBuffer bb) {
                 IsoTypeWriter.writeUInt64(bb, segmentDuration);
                 bb.putLong(mediaTime);
             } else {
-                IsoTypeWriter.writeUInt32(bb, CastUtils.l2i(segmentDuration));
+                IsoTypeWriter.writeUInt32(bb, segmentDuration);
                 bb.putInt(CastUtils.l2i(mediaTime));
             }
             IsoTypeWriter.writeFixedPoint1616(bb, mediaRate);
diff --git a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MediaHeaderBox.java b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MediaHeaderBox.java
index 4eee66de..e84831a6 100644
--- a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MediaHeaderBox.java
+++ b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MediaHeaderBox.java
@@ -110,7 +110,7 @@ public void _parseDetails(ByteBuffer content) {
             creationTime = DateHelper.convert(IsoTypeReader.readUInt32(content));
             modificationTime = DateHelper.convert(IsoTypeReader.readUInt32(content));
             timescale = IsoTypeReader.readUInt32(content);
-            duration = content.getInt();
+            duration = IsoTypeReader.readUInt32(content);
         }
         if (duration < -1) {
             LOG.warn("mdhd duration is not in expected range");
@@ -149,7 +149,7 @@ protected void getContent(ByteBuffer byteBuffer) {
             IsoTypeWriter.writeUInt32(byteBuffer, DateHelper.convert(creationTime));
             IsoTypeWriter.writeUInt32(byteBuffer, DateHelper.convert(modificationTime));
             IsoTypeWriter.writeUInt32(byteBuffer, timescale);
-            byteBuffer.putInt((int) duration);
+            IsoTypeWriter.writeUInt32(byteBuffer, duration);
         }
         IsoTypeWriter.writeIso639(byteBuffer, language);
         IsoTypeWriter.writeUInt16(byteBuffer, 0);
diff --git a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MovieHeaderBox.java b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MovieHeaderBox.java
index a9ddba34..a71c5a7f 100644
--- a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MovieHeaderBox.java
+++ b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/MovieHeaderBox.java
@@ -160,7 +160,7 @@ public void _parseDetails(ByteBuffer content) {
             creationTime = DateHelper.convert(IsoTypeReader.readUInt32(content));
             modificationTime = DateHelper.convert(IsoTypeReader.readUInt32(content));
             timescale = IsoTypeReader.readUInt32(content);
-            duration = content.getInt();
+            duration = IsoTypeReader.readUInt32(content);
         }
         if (duration < -1) {
             LOG.warn("mvhd duration is not in expected range");
@@ -220,7 +220,7 @@ protected void getContent(ByteBuffer byteBuffer) {
             IsoTypeWriter.writeUInt32(byteBuffer, DateHelper.convert(creationTime));
             IsoTypeWriter.writeUInt32(byteBuffer, DateHelper.convert(modificationTime));
             IsoTypeWriter.writeUInt32(byteBuffer, timescale);
-            byteBuffer.putInt((int) duration);
+            IsoTypeWriter.writeUInt32(byteBuffer, duration);
         }
         IsoTypeWriter.writeFixedPoint1616(byteBuffer, rate);
         IsoTypeWriter.writeFixedPoint88(byteBuffer, volume);
diff --git a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/TrackHeaderBox.java b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/TrackHeaderBox.java
index 7a7e8081..5ae2cc60 100644
--- a/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/TrackHeaderBox.java
+++ b/isoparser/src/main/java/org/mp4parser/boxes/iso14496/part12/TrackHeaderBox.java
@@ -174,7 +174,7 @@ public void _parseDetails(ByteBuffer content) {
             modificationTime = DateHelper.convert(IsoTypeReader.readUInt32(content));
             trackId = IsoTypeReader.readUInt32(content);
             IsoTypeReader.readUInt32(content);
-            duration = content.getInt();
+            duration = IsoTypeReader.readUInt32(content);
         } // 196
 
         if (duration < -1) {
@@ -205,7 +205,7 @@ public void getContent(ByteBuffer byteBuffer) {
             IsoTypeWriter.writeUInt32(byteBuffer, DateHelper.convert(modificationTime));
             IsoTypeWriter.writeUInt32(byteBuffer, trackId);
             IsoTypeWriter.writeUInt32(byteBuffer, 0);
-            byteBuffer.putInt((int) duration);
+            IsoTypeWriter.writeUInt32(byteBuffer, duration);
         } // 196
         IsoTypeWriter.writeUInt32(byteBuffer, 0);
         IsoTypeWriter.writeUInt32(byteBuffer, 0);
@@ -213,7 +213,6 @@ public void getContent(ByteBuffer byteBuffer) {
         IsoTypeWriter.writeUInt16(byteBuffer, alternateGroup);
         IsoTypeWriter.writeFixedPoint88(byteBuffer, volume);
         IsoTypeWriter.writeUInt16(byteBuffer, 0);
-        int i = 0;
         matrix.getContent(byteBuffer);
 
         IsoTypeWriter.writeFixedPoint1616(byteBuffer, width);
diff --git a/isoparser/src/main/java/org/mp4parser/tools/CastUtils.java b/isoparser/src/main/java/org/mp4parser/tools/CastUtils.java
index 5b1ea4d6..be29a2cc 100644
--- a/isoparser/src/main/java/org/mp4parser/tools/CastUtils.java
+++ b/isoparser/src/main/java/org/mp4parser/tools/CastUtils.java
@@ -31,4 +31,21 @@ public static int l2i(long l) {
         }
         return (int) l;
     }
+
+    /**
+     * Cast long to unsigned int
+     *
+     * @param l the long value
+     * @return the long value as int
+     */
+    public static long l2ui(long l) {
+        if (l > 4294967295L || l < 0) {
+            throw new RuntimeException("Unsigned int is out of range: " + l);
+        }
+        return l;
+    }
+
+    public static void main(String[] args) {
+        System.out.println(1L << 32);
+    }
 }
