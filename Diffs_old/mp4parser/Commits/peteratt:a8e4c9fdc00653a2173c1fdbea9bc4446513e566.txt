diff --git a/examples/src/main/java/org/mp4parser/examples/metadata/MetaDataInsert.java b/examples/src/main/java/org/mp4parser/examples/metadata/MetaDataInsert.java
index aea36af4..3dfc3a94 100644
--- a/examples/src/main/java/org/mp4parser/examples/metadata/MetaDataInsert.java
+++ b/examples/src/main/java/org/mp4parser/examples/metadata/MetaDataInsert.java
@@ -4,6 +4,7 @@
 import org.mp4parser.Box;
 import org.mp4parser.Container;
 import org.mp4parser.IsoFile;
+import org.mp4parser.boxes.UserBox;
 import org.mp4parser.boxes.apple.AppleItemListBox;
 import org.mp4parser.boxes.apple.AppleNameBox;
 import org.mp4parser.boxes.iso14496.part12.*;
@@ -20,12 +21,27 @@
  */
 public class MetaDataInsert {
 
+    private static final byte[] THREE_SIXTY_USER_TYPE = {(byte) 0xff, (byte) 0xcc, (byte) 0x82, 0x63, (byte) 0xf8, 0x55,
+            0x4a, (byte) 0x93, (byte) 0x88, 0x14, 0x58, 0x7a, 0x02, 0x52, 0x1f, (byte) 0xdd};
+
+    private static final String THREE_SIXTY_METADATA = "<?xml version=\"1.0\"?>" +
+            "<rdf:SphericalVideo\n" +
+            "xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n" +
+            "xmlns:GSpherical=\"http://ns.google.com/videos/1.0/spherical/\">" +
+            "<GSpherical:Spherical>true</GSpherical:Spherical>" +
+            "<GSpherical:Stitched>true</GSpherical:Stitched>" +
+            "<GSpherical:StitchingSoftware>" +
+            "Spherical Metadata Tool" +
+            "</GSpherical:StitchingSoftware>" +
+            "<GSpherical:ProjectionType>equirectangular</GSpherical:ProjectionType>" +
+            "</rdf:SphericalVideo>";
+
     public static void main(String[] args) throws IOException {
         MetaDataInsert cmd = new MetaDataInsert();
 //        cmd.writeRandomMetadata("c:\\content\\Mobile_H264 - Kopie.mp4",
 //                "lore ipsum tralalala");
 
-        cmd.write360Metadata("~/Desktop/RYLO_20171026_150905_-0700_test.mp4");
+        cmd.write360Metadata("/Users/peteratt/Desktop/RYLO_20171026_150905_-0700_test.mp4");
     }
 
     public FileChannel splitFileAndInsert(File f, long pos, long length) throws IOException {
@@ -79,7 +95,6 @@ private void write360Metadata(String videoFilePath) throws IOException {
         IsoFile isoFile = new IsoFile(videoFilePath);
 
         MovieBox moov = isoFile.getBoxes(MovieBox.class).get(0);
-        FreeBox freeBox = findFreeBox(moov);
 
         boolean correctOffset = needsOffsetCorrection(isoFile);
         long sizeBefore = moov.getSize();
@@ -98,6 +113,7 @@ private void write360Metadata(String videoFilePath) throws IOException {
         for (TrackBox trackBox : trackBoxes) {
             MediaBox mediaBox = trackBox.getMediaBox();
             HandlerBox handlerBox = mediaBox.getHandlerBox();
+            handlerBox.parseDetails();
 
             String handlerType = handlerBox.getHandlerType();
 
@@ -108,7 +124,26 @@ private void write360Metadata(String videoFilePath) throws IOException {
         }
 
         if (videoTrack != null) {
-            System.out.println(videoTrack.toString());
+            UserBox metadataBox = new UserBox(THREE_SIXTY_USER_TYPE);
+            metadataBox.setData(THREE_SIXTY_METADATA.getBytes("UTF-8"));
+            videoTrack.addBox(metadataBox);
+
+            long sizeAfter = moov.getSize();
+            long diff = sizeAfter - sizeBefore;
+            // This is the difference of before/after
+
+            if (correctOffset && diff != 0) {
+                correctChunkOffsets(moov, diff);
+            }
+            BetterByteArrayOutputStream baos = new BetterByteArrayOutputStream();
+            moov.getBox(Channels.newChannel(baos));
+            isoFile.close();
+            FileChannel fc;
+            fc = splitFileAndInsert(videoFile, offset, sizeAfter - sizeBefore);
+
+            fc.position(offset);
+            fc.write(ByteBuffer.wrap(baos.getBuffer(), 0, baos.size()));
+            fc.close();
         }
     }
 
