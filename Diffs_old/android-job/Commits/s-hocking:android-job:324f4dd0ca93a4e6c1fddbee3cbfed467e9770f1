diff --git a/build.gradle b/build.gradle
index 26592e6..0758b21 100644
--- a/build.gradle
+++ b/build.gradle
@@ -30,7 +30,7 @@ ext {
 
     supportLibVersion = '26.1.0'
     playServicesVersion = '15.0.1'
-    workVersion = "1.0.0-alpha02"
+    workVersion = "1.0.0-alpha03"
     stethoVersion = '1.5.0'
     junitVersion = '4.12'
     assertjVersion = '3.6.2'
@@ -39,6 +39,6 @@ ext {
 }
 
 task wrapper(type: Wrapper) {
-    gradleVersion = '4.7'
+    gradleVersion = '4.8.1'
     distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
 }
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 91ca28c..758de96 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index e6a3091..debd024 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.7-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.8.1-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
diff --git a/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java b/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
index f1c850a..0e10493 100644
--- a/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
+++ b/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
@@ -22,14 +22,14 @@
 
     @NonNull
     @Override
-    public WorkerResult doWork() {
+    public Result doWork() {
         final int jobId = getJobId();
         try {
             JobProxy.Common common = new JobProxy.Common(getApplicationContext(), CAT, jobId);
 
             JobRequest request = common.getPendingRequest(true, true);
             if (request == null) {
-                return WorkerResult.FAILURE;
+                return Result.FAILURE;
             }
 
             Bundle transientBundle = null;
@@ -37,15 +37,15 @@ public WorkerResult doWork() {
                 transientBundle = TransientBundleHolder.getBundle(jobId);
                 if (transientBundle == null) {
                     CAT.d("Transient bundle is gone for request %s", request);
-                    return WorkerResult.FAILURE;
+                    return Result.FAILURE;
                 }
             }
 
             Job.Result result = common.executeJobRequest(request, transientBundle);
             if (Job.Result.SUCCESS == result) {
-                return WorkerResult.SUCCESS;
+                return Result.SUCCESS;
             } else {
-                return WorkerResult.FAILURE;
+                return Result.FAILURE;
             }
         } finally {
             TransientBundleHolder.cleanUpBundle(jobId);
@@ -53,7 +53,7 @@ public WorkerResult doWork() {
     }
 
     @Override
-    public void onStopped() {
+    public void onStopped(boolean cancelled) {
         int jobId = getJobId();
         Job job = JobManager.create(getApplicationContext()).getJob(jobId);
 
