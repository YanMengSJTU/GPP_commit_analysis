diff --git a/CHANGELOG.md b/CHANGELOG.md
index fe4cf20..bbdc79c 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,17 @@
+## 1.4.1 (2019-09-30)
+* Remove appcompat as dependency, which was accidentally added in 1.4.0.
+
+## 1.4.0 (2019-09-29)
+* Migrate to AndroidX, see #583
+
+## 1.3.0 (2019-09-29)
+* (No changes compared to 1.3.0-rc1)
+* Implement an API that uses the `WorkManager` for scheduling work items
+* Initialize the job storage on a background thread, see #471
+* Restrict usage of internal classes for internal usage only, see #465
+* Use a `JobIntentService` implementation that doesn't crash, see #255
+* Offset the end time when rescheduling an inexact job, see #547
+
 ## 1.3.0-rc1 (2019-03-22)
 * Offset the end time when rescheduling an inexact job, see #547
 * Upgraded WorkManager to 1.0.0, see #561
diff --git a/README.md b/README.md
index 696aafd..97a2202 100644
--- a/README.md
+++ b/README.md
@@ -1,9 +1,10 @@
-# Android-Job
+# DEPRECATED
 
-A utility library for Android to run jobs delayed in the background. Depending on the Android version either the `JobScheduler`, `GcmNetworkManager` or `AlarmManager` is getting used. You can find out in [this blog post](https://blog.evernote.com/tech/2015/10/26/unified-job-library-android/) or in [these slides](https://speakerdeck.com/vrallev/doo-z-z-z-z-z-e?slide=50) why you should prefer this library than each separate API. All features from Android Oreo are backward compatible back to Ice Cream Sandwich.
+This library is not maintained anymore and there will be no further releases except for very critical bug fixes. Use [WorkManager](https://github.com/evernote/android-job#workmanager) instead of this library.
+
+# ~~Android-Job~~
 
-**Attention:**
-If you start a new project, you should be using [WorkManager](https://github.com/evernote/android-job#workmanager) instead of this library. You should also start migrating your code from this library to WorkManager. At some point in the future this library will be deprecated.
+A utility library for Android to run jobs delayed in the background. Depending on the Android version either the `JobScheduler`, `GcmNetworkManager` or `AlarmManager` is getting used. You can find out in [this blog post](https://blog.evernote.com/tech/2015/10/26/unified-job-library-android/) or in [these slides](https://speakerdeck.com/vrallev/doo-z-z-z-z-z-e?slide=50) why you should prefer this library than each separate API. All features from Android Oreo are backward compatible back to Ice Cream Sandwich.
 
 ## Download
 
@@ -11,10 +12,7 @@ Download [the latest version](http://search.maven.org/#search|gav|1|g:"com.evern
 
 ```groovy
 dependencies {
-    implementation 'com.evernote:android-job:1.2.6'
-
-    // or
-    implementation 'com.evernote:android-job:1.3.0-rc1'
+    implementation 'com.evernote:android-job:1.4.1'
 }
 ```
 
diff --git a/build.gradle b/build.gradle
index b65f6a5..b9b20c2 100644
--- a/build.gradle
+++ b/build.gradle
@@ -4,8 +4,8 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.3.2'
-        classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'
+        classpath 'com.android.tools.build:gradle:3.5.0'
+        classpath 'com.github.ben-manes:gradle-versions-plugin:0.25.0'
     }
 }
 
@@ -22,23 +22,23 @@ allprojects {
 }
 
 ext {
-    compileSdkVersion = 28
+    compileSdkVersion = 29
     targetSdkVersion = compileSdkVersion
     minSdkVersion = 14
 
-    buildToolsVersion = '28.0.3'
+    buildToolsVersion = '29.0.2'
 
-    supportLibVersion = '28.0.0'
-    playServicesVersion = '15.0.1'
-    workVersion = '1.0.0'
+    androidXLibVersion = '1.0.1'
+    playServicesVersion = '16.1.0'
+    workVersion = '2.0.1'
     stethoVersion = '1.5.0'
     junitVersion = '4.12'
     assertjVersion = '3.6.2'
     mockitoVersion = '2.7.22'
-    robolectricVersion = '3.8'
+    robolectricVersion = '4.3'
 }
 
 task updateWrapper(type: Wrapper) {
-    gradleVersion = '4.10.3'
+    gradleVersion = '5.6.2'
     distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
 }
diff --git a/demo/build.gradle b/demo/build.gradle
index 03756f5..8890783 100644
--- a/demo/build.gradle
+++ b/demo/build.gradle
@@ -46,12 +46,11 @@ android {
 
 dependencies {
     implementation project(':library')
-    implementation "com.android.support:support-v4:$supportLibVersion"
-    implementation "com.android.support:appcompat-v7:$supportLibVersion"
+    implementation "androidx.appcompat:appcompat:$androidXLibVersion"
     implementation "com.facebook.stetho:stetho:$stethoVersion"
 
     gcmImplementation "com.google.android.gms:play-services-gcm:$playServicesVersion"
-    gcmImplementation "android.arch.work:work-runtime:$workVersion"
+    gcmImplementation "androidx.work:work-runtime:$workVersion"
 }
 
 uploadArchives.enabled false
\ No newline at end of file
diff --git a/demo/src/main/java/com/evernote/android/job/demo/DemoJobCreator.java b/demo/src/main/java/com/evernote/android/job/demo/DemoJobCreator.java
index 5f2831b..ada260f 100644
--- a/demo/src/main/java/com/evernote/android/job/demo/DemoJobCreator.java
+++ b/demo/src/main/java/com/evernote/android/job/demo/DemoJobCreator.java
@@ -1,7 +1,7 @@
 package com.evernote.android.job.demo;
 
 import android.content.Context;
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import com.evernote.android.job.Job;
 import com.evernote.android.job.JobCreator;
diff --git a/demo/src/main/java/com/evernote/android/job/demo/DemoSyncEngine.java b/demo/src/main/java/com/evernote/android/job/demo/DemoSyncEngine.java
index ba6d921..0ba6b12 100644
--- a/demo/src/main/java/com/evernote/android/job/demo/DemoSyncEngine.java
+++ b/demo/src/main/java/com/evernote/android/job/demo/DemoSyncEngine.java
@@ -4,8 +4,8 @@
 import android.os.Looper;
 import android.os.NetworkOnMainThreadException;
 import android.os.SystemClock;
-import android.support.annotation.NonNull;
-import android.support.annotation.WorkerThread;
+import androidx.annotation.NonNull;
+import androidx.annotation.WorkerThread;
 import android.util.Log;
 
 import java.io.File;
diff --git a/demo/src/main/java/com/evernote/android/job/demo/DemoSyncJob.java b/demo/src/main/java/com/evernote/android/job/demo/DemoSyncJob.java
index d6fee00..fa98028 100644
--- a/demo/src/main/java/com/evernote/android/job/demo/DemoSyncJob.java
+++ b/demo/src/main/java/com/evernote/android/job/demo/DemoSyncJob.java
@@ -7,9 +7,9 @@
 import android.content.Intent;
 import android.graphics.Color;
 import android.os.Build;
-import android.support.annotation.NonNull;
-import android.support.v4.app.NotificationCompat;
-import android.support.v4.app.NotificationManagerCompat;
+import androidx.annotation.NonNull;
+import androidx.core.app.NotificationCompat;
+import androidx.core.app.NotificationManagerCompat;
 
 import com.evernote.android.job.Job;
 
diff --git a/demo/src/main/java/com/evernote/android/job/demo/MainActivity.java b/demo/src/main/java/com/evernote/android/job/demo/MainActivity.java
index b824184..c6a56f3 100644
--- a/demo/src/main/java/com/evernote/android/job/demo/MainActivity.java
+++ b/demo/src/main/java/com/evernote/android/job/demo/MainActivity.java
@@ -3,7 +3,7 @@
 import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 import android.util.Log;
 import android.view.Menu;
 import android.view.MenuItem;
diff --git a/gradle.properties b/gradle.properties
index f6e170b..c25bf4c 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,3 +1,5 @@
-#VERSION_NAME=1.3.0-rc1
-VERSION_NAME=1.3.0-SNAPSHOT
-VERSION_CODE=1
\ No newline at end of file
+#VERSION_NAME=1.4.1
+VERSION_NAME=1.4.1-SNAPSHOT
+VERSION_CODE=1
+android.useAndroidX=true
+android.enableJetifier=true
\ No newline at end of file
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 94336fc..5c2d1cf 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index ae45383..ca9d628 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.3-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-5.6.2-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
diff --git a/gradlew b/gradlew
index cccdd3d..83f2acf 100755
--- a/gradlew
+++ b/gradlew
@@ -1,5 +1,21 @@
 #!/usr/bin/env sh
 
+#
+# Copyright 2015 the original author or authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+
 ##############################################################################
 ##
 ##  Gradle start up script for UN*X
@@ -28,7 +44,7 @@ APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
 # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
 
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
@@ -109,8 +125,8 @@ if $darwin; then
     GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
 fi
 
-# For Cygwin, switch paths to Windows format before running java
-if $cygwin ; then
+# For Cygwin or MSYS, switch paths to Windows format before running java
+if [ "$cygwin" = "true" -o "$msys" = "true" ] ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
     JAVACMD=`cygpath --unix "$JAVACMD"`
diff --git a/gradlew.bat b/gradlew.bat
index e95643d..9618d8d 100644
--- a/gradlew.bat
+++ b/gradlew.bat
@@ -1,84 +1,100 @@
-@if "%DEBUG%" == "" @echo off
-@rem ##########################################################################
-@rem
-@rem  Gradle startup script for Windows
-@rem
-@rem ##########################################################################
-
-@rem Set local scope for the variables with windows NT shell
-if "%OS%"=="Windows_NT" setlocal
-
-set DIRNAME=%~dp0
-if "%DIRNAME%" == "" set DIRNAME=.
-set APP_BASE_NAME=%~n0
-set APP_HOME=%DIRNAME%
-
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
-@rem Find java.exe
-if defined JAVA_HOME goto findJavaFromJavaHome
-
-set JAVA_EXE=java.exe
-%JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto init
-
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:findJavaFromJavaHome
-set JAVA_HOME=%JAVA_HOME:"=%
-set JAVA_EXE=%JAVA_HOME%/bin/java.exe
-
-if exist "%JAVA_EXE%" goto init
-
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:init
-@rem Get command-line arguments, handling Windows variants
-
-if not "%OS%" == "Windows_NT" goto win9xME_args
-
-:win9xME_args
-@rem Slurp the command line arguments.
-set CMD_LINE_ARGS=
-set _SKIP=2
-
-:win9xME_args_slurp
-if "x%~1" == "x" goto execute
-
-set CMD_LINE_ARGS=%*
-
-:execute
-@rem Setup the command line
-
-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
-
-@rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
-
-:end
-@rem End local scope for the variables with windows NT shell
-if "%ERRORLEVEL%"=="0" goto mainEnd
-
-:fail
-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
-rem the _cmd.exe /c_ return code!
-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
-exit /b 1
-
-:mainEnd
-if "%OS%"=="Windows_NT" endlocal
-
-:omega
+@rem
+@rem Copyright 2015 the original author or authors.
+@rem
+@rem Licensed under the Apache License, Version 2.0 (the "License");
+@rem you may not use this file except in compliance with the License.
+@rem You may obtain a copy of the License at
+@rem
+@rem      https://www.apache.org/licenses/LICENSE-2.0
+@rem
+@rem Unless required by applicable law or agreed to in writing, software
+@rem distributed under the License is distributed on an "AS IS" BASIS,
+@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+@rem See the License for the specific language governing permissions and
+@rem limitations under the License.
+@rem
+
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windows variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
diff --git a/library/build.gradle b/library/build.gradle
index 0ec5375..80b2ebd 100644
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -6,26 +6,28 @@ archivesBaseName = 'android-job'
 
 dependencies {
     compileOnly "com.google.android.gms:play-services-gcm:$playServicesVersion"
-    compileOnly "android.arch.work:work-runtime:$workVersion"
+    compileOnly "androidx.work:work-runtime:$workVersion"
 
     //noinspection GradleCompatible,GradleDependency
-    api "com.android.support:support-compat:$supportLibVersion"
+    api "androidx.core:core:$androidXLibVersion"
 
-    androidTestImplementation 'com.android.support.test:runner:1.0.1'
-    androidTestImplementation 'com.android.support.test:rules:1.0.1'
-    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
+    androidTestImplementation 'androidx.test:runner:1.1.0'
+    androidTestImplementation 'androidx.test:rules:1.1.0'
+    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
     androidTestImplementation 'com.squareup.assertj:assertj-android:1.1.1'
     androidTestImplementation "com.google.android.gms:play-services-gcm:$playServicesVersion"
-    androidTestImplementation "android.arch.work:work-runtime:$workVersion"
-    androidTestImplementation "android.arch.work:work-testing:$workVersion"
+    androidTestImplementation "androidx.work:work-runtime:$workVersion"
+    androidTestImplementation "androidx.work:work-testing:$workVersion"
 
     androidTestImplementation "com.facebook.stetho:stetho:$stethoVersion"
-    androidTestImplementation "com.android.support:support-v4:$supportLibVersion"
+    androidTestImplementation "androidx.appcompat:appcompat:$androidXLibVersion"
+    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
 
     testImplementation "junit:junit:$junitVersion"
     testImplementation "org.mockito:mockito-core:$mockitoVersion"
     testImplementation "org.assertj:assertj-core:$assertjVersion"
     testImplementation "org.robolectric:robolectric:$robolectricVersion"
+    testImplementation 'androidx.test:core:1.0.0'
 }
 
 android {
@@ -45,7 +47,7 @@ android {
 
         consumerProguardFiles 'proguard.cfg'
 
-        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
     }
 
     compileOptions {
diff --git a/library/src/androidTest/java/com/evernote/android/job/DisabledServiceTest.java b/library/src/androidTest/java/com/evernote/android/job/DisabledServiceTest.java
index 7348af0..4fa4c3e 100644
--- a/library/src/androidTest/java/com/evernote/android/job/DisabledServiceTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/DisabledServiceTest.java
@@ -4,12 +4,10 @@
 import android.content.Context;
 import android.content.pm.PackageManager;
 import android.os.Build;
-import android.support.test.InstrumentationRegistry;
-import android.support.test.filters.LargeTest;
-import android.support.test.runner.AndroidJUnit4;
-
+import androidx.test.core.app.ApplicationProvider;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
+import androidx.test.filters.LargeTest;
 import com.evernote.android.job.v21.PlatformJobService;
-
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Rule;
@@ -36,7 +34,7 @@
 
     @Before
     public void prepare() {
-        mContext = InstrumentationRegistry.getTargetContext();
+        mContext = ApplicationProvider.getApplicationContext();
         mPackageManager = mContext.getPackageManager();
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
             mComponent = new ComponentName(mContext, PlatformJobService.class);
diff --git a/library/src/androidTest/java/com/evernote/android/job/Platform21Test.java b/library/src/androidTest/java/com/evernote/android/job/Platform21Test.java
index 896d647..f69e695 100644
--- a/library/src/androidTest/java/com/evernote/android/job/Platform21Test.java
+++ b/library/src/androidTest/java/com/evernote/android/job/Platform21Test.java
@@ -1,8 +1,8 @@
 package com.evernote.android.job;
 
 import android.os.Build;
-import android.support.test.filters.LargeTest;
-import android.support.test.runner.AndroidJUnit4;
+import androidx.test.filters.LargeTest;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 import org.junit.Rule;
 import org.junit.Test;
@@ -37,7 +37,7 @@ public void test100DistinctJobsLimit() {
     }
 
     @Test
-    public void testRescheduleService() throws Exception {
+    public void testRescheduleService() {
         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP);
 
         int jobId = new JobRequest.Builder("tag")
@@ -56,7 +56,7 @@ public void testRescheduleService() throws Exception {
     }
 
     @Test
-    public void verifyNotLandingInCrashLoop() throws Exception {
+    public void verifyNotLandingInCrashLoop() {
         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.N_MR1);
 
         try {
@@ -96,7 +96,7 @@ public void verifyNotLandingInCrashLoop() throws Exception {
         assertThat(mJobManagerRule.getAllPendingJobsFromScheduler().size()).isGreaterThanOrEqualTo(jobCount);
     }
 
-    private void waitForJobRescheduleService() throws InterruptedException {
+    private void waitForJobRescheduleService() {
         new JobRescheduleService().rescheduleJobs(mJobManagerRule.getManager());
     }
 }
diff --git a/library/src/androidTest/java/com/evernote/android/job/PlatformJobManagerRule.java b/library/src/androidTest/java/com/evernote/android/job/PlatformJobManagerRule.java
index 716db52..dcda31d 100644
--- a/library/src/androidTest/java/com/evernote/android/job/PlatformJobManagerRule.java
+++ b/library/src/androidTest/java/com/evernote/android/job/PlatformJobManagerRule.java
@@ -4,14 +4,12 @@
 import android.app.job.JobScheduler;
 import android.content.Context;
 import android.os.Build;
-import android.support.test.InstrumentationRegistry;
-
-import org.junit.rules.ExternalResource;
-
+import androidx.test.core.app.ApplicationProvider;
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
 import java.util.concurrent.TimeUnit;
+import org.junit.rules.ExternalResource;
 
 /**
  * @author rwondratschek
@@ -21,12 +19,12 @@
     private JobManager mManager;
 
     @Override
-    protected void before() throws Throwable {
+    protected void before() {
         JobConfig.setJobReschedulePause(0, TimeUnit.MILLISECONDS);
         JobConfig.setSkipJobReschedule(true);
         JobConfig.setApiEnabled(JobApi.WORK_MANAGER, false);
 
-        mManager = JobManager.create(InstrumentationRegistry.getTargetContext());
+        mManager = JobManager.create(ApplicationProvider.getApplicationContext());
         mManager.cancelAll();
     }
 
@@ -48,7 +46,7 @@ public JobManager getManager() {
     }
 
     public JobScheduler getJobScheduler() {
-        return (JobScheduler) InstrumentationRegistry.getTargetContext().getSystemService(Context.JOB_SCHEDULER_SERVICE);
+        return (JobScheduler) ApplicationProvider.getApplicationContext().getSystemService(Context.JOB_SCHEDULER_SERVICE);
     }
 
     public List<JobInfo> getAllPendingJobsFromScheduler() {
diff --git a/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java b/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java
index db80528..84e198b 100644
--- a/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java
@@ -3,25 +3,22 @@
 import android.app.Application;
 import android.content.Context;
 import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.test.InstrumentationRegistry;
-import android.support.test.filters.LargeTest;
-import android.support.test.runner.AndroidJUnit4;
-
+import androidx.annotation.NonNull;
+import androidx.test.core.app.ApplicationProvider;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
+import androidx.test.filters.LargeTest;
 import com.evernote.android.job.gcm.PlatformGcmService;
 import com.evernote.android.job.v14.PlatformAlarmService;
 import com.evernote.android.job.v14.PlatformAlarmServiceExact;
 import com.evernote.android.job.v21.PlatformJobService;
-
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
 import org.junit.Before;
 import org.junit.Ignore;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-import java.util.concurrent.CountDownLatch;
-import java.util.concurrent.TimeUnit;
-
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.junit.Assume.assumeTrue;
 
@@ -121,7 +118,7 @@ private void testOneOff(JobApi api) throws Exception {
 
     private void testOneOff(JobApi api, long wait, TimeUnit timeUnit) throws Exception {
         // ignore test if not supported
-        assumeTrue(api.isSupported(InstrumentationRegistry.getTargetContext()));
+        assumeTrue(api.isSupported(ApplicationProvider.getApplicationContext()));
 
         switch (api) {
             case V_14:
diff --git a/library/src/androidTest/java/com/evernote/android/job/PlatformWorkManagerRule.java b/library/src/androidTest/java/com/evernote/android/job/PlatformWorkManagerRule.java
index f01b2d1..31604c6 100644
--- a/library/src/androidTest/java/com/evernote/android/job/PlatformWorkManagerRule.java
+++ b/library/src/androidTest/java/com/evernote/android/job/PlatformWorkManagerRule.java
@@ -1,19 +1,16 @@
 package com.evernote.android.job;
 
 import android.content.Context;
-import android.support.annotation.NonNull;
-import android.support.test.InstrumentationRegistry;
-
-import org.junit.rules.ExternalResource;
-
-import java.util.List;
-import java.util.concurrent.Executor;
-import java.util.concurrent.TimeUnit;
-
+import androidx.annotation.NonNull;
+import androidx.test.core.app.ApplicationProvider;
 import androidx.work.Configuration;
 import androidx.work.WorkInfo;
 import androidx.work.WorkManager;
 import androidx.work.testing.WorkManagerTestInitHelper;
+import java.util.List;
+import java.util.concurrent.Executor;
+import java.util.concurrent.TimeUnit;
+import org.junit.rules.ExternalResource;
 
 /**
  * @author rwondratschek
@@ -24,7 +21,7 @@
 
     @Override
     protected void before() {
-        Context context = InstrumentationRegistry.getTargetContext();
+        Context context = ApplicationProvider.getApplicationContext();
 
         Executor executor = new Executor() {
             @Override
diff --git a/library/src/androidTest/java/com/evernote/android/job/TransientBundleRescheduleTest.java b/library/src/androidTest/java/com/evernote/android/job/TransientBundleRescheduleTest.java
index b5ae625..c7dcf1a 100644
--- a/library/src/androidTest/java/com/evernote/android/job/TransientBundleRescheduleTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/TransientBundleRescheduleTest.java
@@ -1,19 +1,17 @@
 package com.evernote.android.job;
 
 import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.test.InstrumentationRegistry;
-import android.support.test.filters.LargeTest;
-import android.support.test.runner.AndroidJUnit4;
-
+import androidx.annotation.NonNull;
+import androidx.test.core.app.ApplicationProvider;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
+import androidx.test.filters.LargeTest;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-import java.util.concurrent.CountDownLatch;
-import java.util.concurrent.TimeUnit;
-
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.junit.Assume.assumeTrue;
 
@@ -48,7 +46,7 @@ public void testRescheduleHasTransientBundle() throws Exception {
 
     private void testOneOff(JobApi api, long wait, TimeUnit timeUnit) throws Exception {
         // ignore test if not supported
-        assumeTrue(api.isSupported(InstrumentationRegistry.getTargetContext()));
+        assumeTrue(api.isSupported(ApplicationProvider.getApplicationContext()));
 
         JobConfig.forceApi(api);
 
@@ -62,7 +60,7 @@ private void testOneOff(JobApi api, long wait, TimeUnit timeUnit) throws Excepti
         JobRequest request = mManager.getJobRequest(jobId);
         assertThat(request).isNotNull();
 
-        boolean scheduled = api.getProxy(InstrumentationRegistry.getContext()).isPlatformJobScheduled(request);
+        boolean scheduled = api.getProxy(ApplicationProvider.getApplicationContext()).isPlatformJobScheduled(request);
         assertThat(scheduled).isTrue();
 
         assertThat(mLatch.await(wait, timeUnit)).isTrue();
diff --git a/library/src/androidTest/java/com/evernote/android/job/TransientBundleTest.java b/library/src/androidTest/java/com/evernote/android/job/TransientBundleTest.java
index 80b2f24..8114cd3 100644
--- a/library/src/androidTest/java/com/evernote/android/job/TransientBundleTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/TransientBundleTest.java
@@ -1,20 +1,18 @@
 package com.evernote.android.job;
 
 import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.test.InstrumentationRegistry;
-import android.support.test.filters.LargeTest;
-import android.support.test.runner.AndroidJUnit4;
-
+import androidx.annotation.NonNull;
+import androidx.test.core.app.ApplicationProvider;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
+import androidx.test.filters.LargeTest;
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
 import org.junit.Before;
 import org.junit.Ignore;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-import java.util.concurrent.CountDownLatch;
-import java.util.concurrent.TimeUnit;
-
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.junit.Assume.assumeTrue;
 
@@ -103,7 +101,7 @@ private void testOneOff(JobApi api, long wait, TimeUnit timeUnit) throws Excepti
         mJob = new TestJob();
 
         // ignore test if not supported
-        assumeTrue(api.isSupported(InstrumentationRegistry.getTargetContext()));
+        assumeTrue(api.isSupported(ApplicationProvider.getApplicationContext()));
 
         JobConfig.forceApi(api);
 
@@ -116,7 +114,7 @@ private void testOneOff(JobApi api, long wait, TimeUnit timeUnit) throws Excepti
         JobRequest request = mManager.getJobRequest(jobId);
         assertThat(request).isNotNull();
 
-        boolean scheduled = api.getProxy(InstrumentationRegistry.getContext()).isPlatformJobScheduled(request);
+        boolean scheduled = api.getProxy(ApplicationProvider.getApplicationContext()).isPlatformJobScheduled(request);
         assertThat(scheduled).isTrue();
 
         mJob.verifyJob(wait, timeUnit);
diff --git a/library/src/androidTest/java/com/evernote/android/job/TransientJobCleanUpTest.java b/library/src/androidTest/java/com/evernote/android/job/TransientJobCleanUpTest.java
index c258c64..a78777d 100644
--- a/library/src/androidTest/java/com/evernote/android/job/TransientJobCleanUpTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/TransientJobCleanUpTest.java
@@ -4,8 +4,8 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.os.Build;
 import android.os.Bundle;
-import android.support.test.filters.LargeTest;
-import android.support.test.runner.AndroidJUnit4;
+import androidx.test.filters.LargeTest;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 import org.junit.Before;
 import org.junit.Rule;
@@ -33,7 +33,7 @@ public void prepare() {
     }
 
     @Test
-    public void verifyJobDeletedFromDatabaseSpecific() throws Exception {
+    public void verifyJobDeletedFromDatabaseSpecific() {
         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP);
         JobConfig.forceApi(JobApi.V_21);
 
@@ -56,17 +56,14 @@ public void verifyJobDeletedFromDatabaseSpecific() throws Exception {
         // cached request gone
         assertThat(mManager.getJobRequest(jobId)).isNull();
 
-        SQLiteDatabase database = mManager.getJobStorage().getDatabase();
-        try {
+        try (SQLiteDatabase database = mManager.getJobStorage().getDatabase()) {
             long numEntries = DatabaseUtils.queryNumEntries(database, JobStorage.JOB_TABLE_NAME);
             assertThat(numEntries).isEqualTo(0);
-        } finally {
-            database.close();
         }
     }
 
     @Test
-    public void verifyJobDeletedFromDatabaseAll() throws Exception {
+    public void verifyJobDeletedFromDatabaseAll() {
         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP);
         JobConfig.forceApi(JobApi.V_21);
 
@@ -89,12 +86,9 @@ public void verifyJobDeletedFromDatabaseAll() throws Exception {
         // cached request gone
         assertThat(mManager.getAllJobRequests()).isEmpty();
 
-        SQLiteDatabase database = mManager.getJobStorage().getDatabase();
-        try {
+        try (SQLiteDatabase database = mManager.getJobStorage().getDatabase()) {
             long numEntries = DatabaseUtils.queryNumEntries(database, JobStorage.JOB_TABLE_NAME);
             assertThat(numEntries).isEqualTo(0);
-        } finally {
-            database.close();
         }
     }
 }
diff --git a/library/src/androidTest/java/com/evernote/android/job/v21/TransientBundleCompatTest.java b/library/src/androidTest/java/com/evernote/android/job/v21/TransientBundleCompatTest.java
index 1a7747e..641315f 100644
--- a/library/src/androidTest/java/com/evernote/android/job/v21/TransientBundleCompatTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/v21/TransientBundleCompatTest.java
@@ -5,23 +5,20 @@
 import android.content.Intent;
 import android.os.Build;
 import android.os.Bundle;
-import android.support.test.InstrumentationRegistry;
-import android.support.test.runner.AndroidJUnit4;
-
+import androidx.test.core.app.ApplicationProvider;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import com.evernote.android.job.JobApi;
 import com.evernote.android.job.JobConfig;
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.PlatformJobManagerRule;
 import com.evernote.android.job.v14.PlatformAlarmServiceExact;
-
+import java.util.concurrent.TimeUnit;
 import org.junit.FixMethodOrder;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.MethodSorters;
 
-import java.util.concurrent.TimeUnit;
-
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.junit.Assume.assumeTrue;
 
@@ -37,7 +34,7 @@
     public PlatformJobManagerRule mJobManagerRule = new PlatformJobManagerRule();
 
     @Test
-    public void verifyAlarmIsCanceled() throws Exception {
+    public void verifyAlarmIsCanceled() {
         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP);
         JobConfig.forceApi(JobApi.V_21);
 
@@ -54,7 +51,7 @@ public void verifyAlarmIsCanceled() throws Exception {
     }
 
     @Test
-    public void verifyAlarmIsCanceledAfterStart() throws Exception {
+    public void verifyAlarmIsCanceledAfterStart() {
         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP);
         JobConfig.forceApi(JobApi.V_21);
 
@@ -72,7 +69,7 @@ public void verifyAlarmIsCanceledAfterStart() throws Exception {
     }
 
     @Test
-    public void verifyAlarmNotCanceledForPeriodicAfterStart() throws Exception {
+    public void verifyAlarmNotCanceledForPeriodicAfterStart() {
         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP);
         JobConfig.forceApi(JobApi.V_21);
 
@@ -102,9 +99,9 @@ public void verifyAlarmNotCanceledForPeriodicAfterStart() throws Exception {
     }
 
     @Test
-    public void verifyNativeImplementationIsUsedWithO() throws Exception {
+    public void verifyNativeImplementationIsUsedWithO() {
         // ignore test if not supported
-        assumeTrue(JobApi.V_26.isSupported(InstrumentationRegistry.getTargetContext()));
+        assumeTrue(JobApi.V_26.isSupported(ApplicationProvider.getApplicationContext()));
         JobConfig.forceApi(JobApi.V_26);
 
         int jobId = scheduleJob();
@@ -115,7 +112,7 @@ public void verifyNativeImplementationIsUsedWithO() throws Exception {
     }
 
     private Context context() {
-        return InstrumentationRegistry.getContext();
+        return ApplicationProvider.getApplicationContext();
     }
 
     private int scheduleJob() {
diff --git a/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java b/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java
index cd8a984..7625cdc 100644
--- a/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java
@@ -1,26 +1,22 @@
 package com.evernote.android.job.work;
 
 import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.test.InstrumentationRegistry;
-import android.support.test.filters.LargeTest;
-import android.support.test.runner.AndroidJUnit4;
-
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.test.core.app.ApplicationProvider;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
+import androidx.test.filters.LargeTest;
+import androidx.work.WorkInfo;
 import com.evernote.android.job.Job;
 import com.evernote.android.job.JobCreator;
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.PlatformWorkManagerRule;
-
-import org.junit.Rule;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-
 import java.util.List;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicBoolean;
-
-import androidx.work.WorkInfo;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
 
 import static org.assertj.core.api.Assertions.assertThat;
 
@@ -59,7 +55,7 @@ public void testCancel() {
                 .schedule();
 
         JobRequest request = mWorkManagerRule.getManager().getJobRequest(jobId);
-        JobProxyWorkManager jobProxyWorkManager = new JobProxyWorkManager(InstrumentationRegistry.getTargetContext());
+        JobProxyWorkManager jobProxyWorkManager = new JobProxyWorkManager(ApplicationProvider.getApplicationContext());
         assertThat(jobProxyWorkManager.isPlatformJobScheduled(request)).isTrue();
 
         String tag = JobProxyWorkManager.createTag(jobId);
@@ -135,7 +131,6 @@ public Job create(@NonNull String tag) {
         assertThat(state).isEqualTo(WorkInfo.State.SUCCEEDED);
     }
 
-    @SuppressWarnings("ConstantConditions")
     private void testConstraints(JobRequest.Builder builder) {
         int jobId = builder
                 .setRequiredNetworkType(JobRequest.NetworkType.METERED)
diff --git a/library/src/main/java/android/support/v4/app/SafeJobIntentService.java b/library/src/main/java/android/support/v4/app/SafeJobIntentService.java
index cf42da7..fc34b25 100644
--- a/library/src/main/java/android/support/v4/app/SafeJobIntentService.java
+++ b/library/src/main/java/android/support/v4/app/SafeJobIntentService.java
@@ -1,7 +1,7 @@
-package android.support.v4.app;
+package androidx.core.app;
 
 import android.os.Build;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 
 /**
  * @author rwondratschek
diff --git a/library/src/main/java/android/support/v4/app/SafeJobServiceEngineImpl.java b/library/src/main/java/android/support/v4/app/SafeJobServiceEngineImpl.java
index 1ef9594..c025bc8 100644
--- a/library/src/main/java/android/support/v4/app/SafeJobServiceEngineImpl.java
+++ b/library/src/main/java/android/support/v4/app/SafeJobServiceEngineImpl.java
@@ -1,11 +1,11 @@
-package android.support.v4.app;
+package androidx.core.app;
 
 import android.app.job.JobParameters;
 import android.app.job.JobServiceEngine;
 import android.app.job.JobWorkItem;
 import android.content.Intent;
 import android.os.IBinder;
-import android.support.annotation.RequiresApi;
+import androidx.annotation.RequiresApi;
 import android.util.Log;
 
 /**
diff --git a/library/src/main/java/com/evernote/android/job/DailyJob.java b/library/src/main/java/com/evernote/android/job/DailyJob.java
index 8e58853..4633e87 100644
--- a/library/src/main/java/com/evernote/android/job/DailyJob.java
+++ b/library/src/main/java/com/evernote/android/job/DailyJob.java
@@ -16,9 +16,9 @@
 package com.evernote.android.job;
 
 import android.os.PowerManager.WakeLock;
-import android.support.annotation.NonNull;
-import android.support.annotation.VisibleForTesting;
-import android.support.annotation.WorkerThread;
+import androidx.annotation.NonNull;
+import androidx.annotation.VisibleForTesting;
+import androidx.annotation.WorkerThread;
 
 import com.evernote.android.job.util.JobCat;
 import com.evernote.android.job.util.JobPreconditions;
diff --git a/library/src/main/java/com/evernote/android/job/GcmAvailableHelper.java b/library/src/main/java/com/evernote/android/job/GcmAvailableHelper.java
index 8db56f0..ee0a551 100644
--- a/library/src/main/java/com/evernote/android/job/GcmAvailableHelper.java
+++ b/library/src/main/java/com/evernote/android/job/GcmAvailableHelper.java
@@ -20,7 +20,7 @@
 import android.content.Intent;
 import android.content.pm.PackageManager;
 import android.content.pm.ResolveInfo;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 
 import com.evernote.android.job.gcm.JobProxyGcm;
 import com.evernote.android.job.util.JobCat;
diff --git a/library/src/main/java/com/evernote/android/job/Job.java b/library/src/main/java/com/evernote/android/job/Job.java
index 2383f9f..ffb7d7b 100644
--- a/library/src/main/java/com/evernote/android/job/Job.java
+++ b/library/src/main/java/com/evernote/android/job/Job.java
@@ -19,8 +19,8 @@
 import android.content.Context;
 import android.os.Bundle;
 import android.os.PowerManager.WakeLock;
-import android.support.annotation.NonNull;
-import android.support.annotation.WorkerThread;
+import androidx.annotation.NonNull;
+import androidx.annotation.WorkerThread;
 
 import com.evernote.android.job.util.Device;
 import com.evernote.android.job.util.JobCat;
diff --git a/library/src/main/java/com/evernote/android/job/JobApi.java b/library/src/main/java/com/evernote/android/job/JobApi.java
index ff5ccf5..adc576f 100644
--- a/library/src/main/java/com/evernote/android/job/JobApi.java
+++ b/library/src/main/java/com/evernote/android/job/JobApi.java
@@ -23,7 +23,7 @@
 import android.content.Intent;
 import android.content.pm.ResolveInfo;
 import android.os.Build;
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import com.evernote.android.job.gcm.JobProxyGcm;
 import com.evernote.android.job.v14.JobProxy14;
diff --git a/library/src/main/java/com/evernote/android/job/JobBootReceiver.java b/library/src/main/java/com/evernote/android/job/JobBootReceiver.java
index 5e8f428..9d74d14 100644
--- a/library/src/main/java/com/evernote/android/job/JobBootReceiver.java
+++ b/library/src/main/java/com/evernote/android/job/JobBootReceiver.java
@@ -18,7 +18,7 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 
 /**
  * A {@code BroadcastReceiver} rescheduling jobs after a reboot, if the underlying {@link JobApi} can't
diff --git a/library/src/main/java/com/evernote/android/job/JobConfig.java b/library/src/main/java/com/evernote/android/job/JobConfig.java
index 4ae46ed..a949031 100644
--- a/library/src/main/java/com/evernote/android/job/JobConfig.java
+++ b/library/src/main/java/com/evernote/android/job/JobConfig.java
@@ -16,8 +16,8 @@
 package com.evernote.android.job;
 
 import android.os.Build;
-import android.support.annotation.NonNull;
-import android.support.annotation.VisibleForTesting;
+import androidx.annotation.NonNull;
+import androidx.annotation.VisibleForTesting;
 
 import com.evernote.android.job.util.Clock;
 import com.evernote.android.job.util.JobCat;
diff --git a/library/src/main/java/com/evernote/android/job/JobCreator.java b/library/src/main/java/com/evernote/android/job/JobCreator.java
index fad166e..48d5830 100644
--- a/library/src/main/java/com/evernote/android/job/JobCreator.java
+++ b/library/src/main/java/com/evernote/android/job/JobCreator.java
@@ -18,8 +18,8 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 
 /**
  * A {@code JobCreator} maps a tag to a specific {@link Job} class. You need to pass the tag in the
diff --git a/library/src/main/java/com/evernote/android/job/JobCreatorHolder.java b/library/src/main/java/com/evernote/android/job/JobCreatorHolder.java
index 31b2f7a..f2c068f 100644
--- a/library/src/main/java/com/evernote/android/job/JobCreatorHolder.java
+++ b/library/src/main/java/com/evernote/android/job/JobCreatorHolder.java
@@ -15,7 +15,7 @@
  */
 package com.evernote.android.job;
 
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 
 import com.evernote.android.job.util.JobCat;
 
diff --git a/library/src/main/java/com/evernote/android/job/JobExecutor.java b/library/src/main/java/com/evernote/android/job/JobExecutor.java
index c493dd0..d21034d 100644
--- a/library/src/main/java/com/evernote/android/job/JobExecutor.java
+++ b/library/src/main/java/com/evernote/android/job/JobExecutor.java
@@ -19,10 +19,10 @@
 import android.content.Context;
 import android.os.Bundle;
 import android.os.PowerManager;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.annotation.RestrictTo;
-import android.support.annotation.VisibleForTesting;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.annotation.RestrictTo;
+import androidx.annotation.VisibleForTesting;
 import android.util.LruCache;
 import android.util.SparseArray;
 
diff --git a/library/src/main/java/com/evernote/android/job/JobManager.java b/library/src/main/java/com/evernote/android/job/JobManager.java
index 79e3997..a49399b 100644
--- a/library/src/main/java/com/evernote/android/job/JobManager.java
+++ b/library/src/main/java/com/evernote/android/job/JobManager.java
@@ -23,8 +23,8 @@
 import android.content.Intent;
 import android.content.pm.ActivityInfo;
 import android.content.pm.ResolveInfo;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import android.text.TextUtils;
 import android.util.SparseArray;
 
diff --git a/library/src/main/java/com/evernote/android/job/JobManagerCreateException.java b/library/src/main/java/com/evernote/android/job/JobManagerCreateException.java
index 463f476..4b8c116 100644
--- a/library/src/main/java/com/evernote/android/job/JobManagerCreateException.java
+++ b/library/src/main/java/com/evernote/android/job/JobManagerCreateException.java
@@ -15,7 +15,7 @@
  */
 package com.evernote.android.job;
 
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 
 /**
  * Indicates illegal states during the creation of the {@link JobManager}.
diff --git a/library/src/main/java/com/evernote/android/job/JobProxy.java b/library/src/main/java/com/evernote/android/job/JobProxy.java
index 262d60f..a9cad39 100644
--- a/library/src/main/java/com/evernote/android/job/JobProxy.java
+++ b/library/src/main/java/com/evernote/android/job/JobProxy.java
@@ -20,9 +20,9 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.os.Looper;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.annotation.RestrictTo;
 
 import com.evernote.android.job.util.JobCat;
 import com.evernote.android.job.util.JobUtil;
diff --git a/library/src/main/java/com/evernote/android/job/JobProxyIllegalStateException.java b/library/src/main/java/com/evernote/android/job/JobProxyIllegalStateException.java
index 1a57d0d..58aa00b 100644
--- a/library/src/main/java/com/evernote/android/job/JobProxyIllegalStateException.java
+++ b/library/src/main/java/com/evernote/android/job/JobProxyIllegalStateException.java
@@ -15,7 +15,7 @@
  */
 package com.evernote.android.job;
 
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 
 /**
  * Indicates an illegal state when a proxy tries to schedule a job, but something weird happens.
diff --git a/library/src/main/java/com/evernote/android/job/JobRequest.java b/library/src/main/java/com/evernote/android/job/JobRequest.java
index 0f160a6..69ac8eb 100644
--- a/library/src/main/java/com/evernote/android/job/JobRequest.java
+++ b/library/src/main/java/com/evernote/android/job/JobRequest.java
@@ -21,8 +21,8 @@
 import android.content.Context;
 import android.database.Cursor;
 import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import android.text.TextUtils;
 
 import com.evernote.android.job.util.JobCat;
diff --git a/library/src/main/java/com/evernote/android/job/JobRescheduleService.java b/library/src/main/java/com/evernote/android/job/JobRescheduleService.java
index c0622dc..bf7f7e7 100644
--- a/library/src/main/java/com/evernote/android/job/JobRescheduleService.java
+++ b/library/src/main/java/com/evernote/android/job/JobRescheduleService.java
@@ -18,10 +18,10 @@
 import android.content.Context;
 import android.content.Intent;
 import android.os.SystemClock;
-import android.support.annotation.NonNull;
-import android.support.annotation.RestrictTo;
-import android.support.annotation.VisibleForTesting;
-import android.support.v4.app.SafeJobIntentService;
+import androidx.annotation.NonNull;
+import androidx.annotation.RestrictTo;
+import androidx.annotation.VisibleForTesting;
+import androidx.core.app.SafeJobIntentService;
 
 import com.evernote.android.job.util.JobCat;
 
diff --git a/library/src/main/java/com/evernote/android/job/JobStorage.java b/library/src/main/java/com/evernote/android/job/JobStorage.java
index a4c6df0..ffea76c 100644
--- a/library/src/main/java/com/evernote/android/job/JobStorage.java
+++ b/library/src/main/java/com/evernote/android/job/JobStorage.java
@@ -24,10 +24,10 @@
 import android.database.sqlite.SQLiteCantOpenDatabaseException;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.annotation.RestrictTo;
-import android.support.annotation.VisibleForTesting;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.annotation.RestrictTo;
+import androidx.annotation.VisibleForTesting;
 import android.text.TextUtils;
 import android.util.LruCache;
 
diff --git a/library/src/main/java/com/evernote/android/job/JobStorageDatabaseErrorHandler.java b/library/src/main/java/com/evernote/android/job/JobStorageDatabaseErrorHandler.java
index 4c58531..615c021 100644
--- a/library/src/main/java/com/evernote/android/job/JobStorageDatabaseErrorHandler.java
+++ b/library/src/main/java/com/evernote/android/job/JobStorageDatabaseErrorHandler.java
@@ -21,8 +21,8 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteException;
 import android.os.Build;
-import android.support.annotation.RestrictTo;
-import android.support.annotation.VisibleForTesting;
+import androidx.annotation.RestrictTo;
+import androidx.annotation.VisibleForTesting;
 import android.util.Pair;
 
 import com.evernote.android.job.util.JobCat;
diff --git a/library/src/main/java/com/evernote/android/job/WakeLockUtil.java b/library/src/main/java/com/evernote/android/job/WakeLockUtil.java
index 2a62477..d7abb03 100644
--- a/library/src/main/java/com/evernote/android/job/WakeLockUtil.java
+++ b/library/src/main/java/com/evernote/android/job/WakeLockUtil.java
@@ -19,9 +19,9 @@
 import android.content.Context;
 import android.content.Intent;
 import android.os.PowerManager;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.annotation.RestrictTo;
 import android.util.SparseArray;
 
 import com.evernote.android.job.util.JobCat;
diff --git a/library/src/main/java/com/evernote/android/job/WorkManagerAvailableHelper.java b/library/src/main/java/com/evernote/android/job/WorkManagerAvailableHelper.java
index bacc31b..17c9298 100644
--- a/library/src/main/java/com/evernote/android/job/WorkManagerAvailableHelper.java
+++ b/library/src/main/java/com/evernote/android/job/WorkManagerAvailableHelper.java
@@ -1,6 +1,6 @@
 package com.evernote.android.job;
 
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 
 /**
  * @author rwondratschek
diff --git a/library/src/main/java/com/evernote/android/job/gcm/JobProxyGcm.java b/library/src/main/java/com/evernote/android/job/gcm/JobProxyGcm.java
index c320808..b75df19 100644
--- a/library/src/main/java/com/evernote/android/job/gcm/JobProxyGcm.java
+++ b/library/src/main/java/com/evernote/android/job/gcm/JobProxyGcm.java
@@ -16,8 +16,8 @@
 package com.evernote.android.job.gcm;
 
 import android.content.Context;
-import android.support.annotation.NonNull;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.NonNull;
+import androidx.annotation.RestrictTo;
 
 import com.evernote.android.job.JobProxy;
 import com.evernote.android.job.JobProxyIllegalStateException;
diff --git a/library/src/main/java/com/evernote/android/job/gcm/PlatformGcmService.java b/library/src/main/java/com/evernote/android/job/gcm/PlatformGcmService.java
index 5217c7f..aaafcde 100644
--- a/library/src/main/java/com/evernote/android/job/gcm/PlatformGcmService.java
+++ b/library/src/main/java/com/evernote/android/job/gcm/PlatformGcmService.java
@@ -15,7 +15,7 @@
  */
 package com.evernote.android.job.gcm;
 
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 
 import com.evernote.android.job.Job;
 import com.evernote.android.job.JobManager;
diff --git a/library/src/main/java/com/evernote/android/job/util/BatteryStatus.java b/library/src/main/java/com/evernote/android/job/util/BatteryStatus.java
index 0f84905..da71367 100644
--- a/library/src/main/java/com/evernote/android/job/util/BatteryStatus.java
+++ b/library/src/main/java/com/evernote/android/job/util/BatteryStatus.java
@@ -15,7 +15,7 @@
  */
 package com.evernote.android.job.util;
 
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 
 /**
  * @author rwondratschek
diff --git a/library/src/main/java/com/evernote/android/job/util/Clock.java b/library/src/main/java/com/evernote/android/job/util/Clock.java
index b071d5a..8539256 100644
--- a/library/src/main/java/com/evernote/android/job/util/Clock.java
+++ b/library/src/main/java/com/evernote/android/job/util/Clock.java
@@ -16,7 +16,7 @@
 package com.evernote.android.job.util;
 
 import android.os.SystemClock;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 
 /**
  * @author rwondratschek
diff --git a/library/src/main/java/com/evernote/android/job/util/Device.java b/library/src/main/java/com/evernote/android/job/util/Device.java
index f7ef01a..b0920fa 100644
--- a/library/src/main/java/com/evernote/android/job/util/Device.java
+++ b/library/src/main/java/com/evernote/android/job/util/Device.java
@@ -25,9 +25,9 @@
 import android.os.BatteryManager;
 import android.os.Build;
 import android.os.PowerManager;
-import android.support.annotation.NonNull;
-import android.support.annotation.RestrictTo;
-import android.support.v4.net.ConnectivityManagerCompat;
+import androidx.annotation.NonNull;
+import androidx.annotation.RestrictTo;
+import androidx.core.net.ConnectivityManagerCompat;
 
 import com.evernote.android.job.JobRequest;
 
diff --git a/library/src/main/java/com/evernote/android/job/util/JobCat.java b/library/src/main/java/com/evernote/android/job/util/JobCat.java
index cbb16ff..9a26a53 100644
--- a/library/src/main/java/com/evernote/android/job/util/JobCat.java
+++ b/library/src/main/java/com/evernote/android/job/util/JobCat.java
@@ -15,9 +15,9 @@
  */
 package com.evernote.android.job.util;
 
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.annotation.RestrictTo;
 import android.util.Log;
 
 import java.util.Arrays;
diff --git a/library/src/main/java/com/evernote/android/job/util/JobLogger.java b/library/src/main/java/com/evernote/android/job/util/JobLogger.java
index 67526a8..52c8630 100644
--- a/library/src/main/java/com/evernote/android/job/util/JobLogger.java
+++ b/library/src/main/java/com/evernote/android/job/util/JobLogger.java
@@ -15,8 +15,8 @@
  */
 package com.evernote.android.job.util;
 
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import android.util.Log;
 
 /**
diff --git a/library/src/main/java/com/evernote/android/job/util/JobPreconditions.java b/library/src/main/java/com/evernote/android/job/util/JobPreconditions.java
index 32139a0..370758b 100644
--- a/library/src/main/java/com/evernote/android/job/util/JobPreconditions.java
+++ b/library/src/main/java/com/evernote/android/job/util/JobPreconditions.java
@@ -16,7 +16,7 @@
 
 package com.evernote.android.job.util;
 
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 import android.text.TextUtils;
 
 import java.util.Collection;
diff --git a/library/src/main/java/com/evernote/android/job/util/JobUtil.java b/library/src/main/java/com/evernote/android/job/util/JobUtil.java
index 2758073..b5f0b1a 100644
--- a/library/src/main/java/com/evernote/android/job/util/JobUtil.java
+++ b/library/src/main/java/com/evernote/android/job/util/JobUtil.java
@@ -18,7 +18,7 @@
 import android.Manifest;
 import android.content.Context;
 import android.content.pm.PackageManager;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 
 import java.text.SimpleDateFormat;
 import java.util.Date;
diff --git a/library/src/main/java/com/evernote/android/job/util/support/FastXmlSerializer.java b/library/src/main/java/com/evernote/android/job/util/support/FastXmlSerializer.java
index 72f76da..48afae6 100644
--- a/library/src/main/java/com/evernote/android/job/util/support/FastXmlSerializer.java
+++ b/library/src/main/java/com/evernote/android/job/util/support/FastXmlSerializer.java
@@ -16,7 +16,7 @@
 
 package com.evernote.android.job.util.support;
 
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 
 import org.xmlpull.v1.XmlSerializer;
 
diff --git a/library/src/main/java/com/evernote/android/job/util/support/PersistableBundleCompat.java b/library/src/main/java/com/evernote/android/job/util/support/PersistableBundleCompat.java
index 6e5c33b..a659fef 100644
--- a/library/src/main/java/com/evernote/android/job/util/support/PersistableBundleCompat.java
+++ b/library/src/main/java/com/evernote/android/job/util/support/PersistableBundleCompat.java
@@ -16,7 +16,7 @@
 package com.evernote.android.job.util.support;
 
 import android.os.PersistableBundle;
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import com.evernote.android.job.util.JobCat;
 
diff --git a/library/src/main/java/com/evernote/android/job/util/support/XmlUtils.java b/library/src/main/java/com/evernote/android/job/util/support/XmlUtils.java
index 751dcd2..234cf80 100644
--- a/library/src/main/java/com/evernote/android/job/util/support/XmlUtils.java
+++ b/library/src/main/java/com/evernote/android/job/util/support/XmlUtils.java
@@ -19,7 +19,7 @@
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.net.Uri;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 import android.util.Base64;
 import android.util.Xml;
 
diff --git a/library/src/main/java/com/evernote/android/job/v14/JobProxy14.java b/library/src/main/java/com/evernote/android/job/v14/JobProxy14.java
index dce1582..04a0780 100644
--- a/library/src/main/java/com/evernote/android/job/v14/JobProxy14.java
+++ b/library/src/main/java/com/evernote/android/job/v14/JobProxy14.java
@@ -21,8 +21,8 @@
 import android.content.Intent;
 import android.os.Build;
 import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.Nullable;
+import androidx.annotation.RestrictTo;
 
 import com.evernote.android.job.JobConfig;
 import com.evernote.android.job.JobProxy;
diff --git a/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmReceiver.java b/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmReceiver.java
index a495e20..1275318 100644
--- a/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmReceiver.java
+++ b/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmReceiver.java
@@ -19,8 +19,8 @@
 import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.Nullable;
+import androidx.annotation.RestrictTo;
 
 import com.evernote.android.job.JobProxy;
 
diff --git a/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmService.java b/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmService.java
index dea9b44..5f61e4c 100644
--- a/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmService.java
+++ b/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmService.java
@@ -19,10 +19,10 @@
 import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.annotation.RestrictTo;
-import android.support.v4.app.SafeJobIntentService;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.annotation.RestrictTo;
+import androidx.core.app.SafeJobIntentService;
 
 import com.evernote.android.job.JobIdsInternal;
 import com.evernote.android.job.JobProxy;
diff --git a/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmServiceExact.java b/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmServiceExact.java
index 1ab7a03..f15effd 100644
--- a/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmServiceExact.java
+++ b/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmServiceExact.java
@@ -20,8 +20,8 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.os.IBinder;
-import android.support.annotation.Nullable;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.Nullable;
+import androidx.annotation.RestrictTo;
 
 import com.evernote.android.job.JobConfig;
 import com.evernote.android.job.JobProxy;
diff --git a/library/src/main/java/com/evernote/android/job/v19/JobProxy19.java b/library/src/main/java/com/evernote/android/job/v19/JobProxy19.java
index 695f1d2..4bcecf7 100644
--- a/library/src/main/java/com/evernote/android/job/v19/JobProxy19.java
+++ b/library/src/main/java/com/evernote/android/job/v19/JobProxy19.java
@@ -20,7 +20,7 @@
 import android.app.PendingIntent;
 import android.content.Context;
 import android.os.Build;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.util.JobUtil;
diff --git a/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java b/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java
index 7cd2594..6761594 100644
--- a/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java
+++ b/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java
@@ -21,9 +21,9 @@
 import android.content.ComponentName;
 import android.content.Context;
 import android.os.Build;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.annotation.RestrictTo;
 
 import com.evernote.android.job.JobProxy;
 import com.evernote.android.job.JobProxyIllegalStateException;
diff --git a/library/src/main/java/com/evernote/android/job/v21/PlatformJobService.java b/library/src/main/java/com/evernote/android/job/v21/PlatformJobService.java
index 25e7827..94eae17 100644
--- a/library/src/main/java/com/evernote/android/job/v21/PlatformJobService.java
+++ b/library/src/main/java/com/evernote/android/job/v21/PlatformJobService.java
@@ -20,7 +20,7 @@
 import android.app.job.JobService;
 import android.os.Build;
 import android.os.Bundle;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.RestrictTo;
 
 import com.evernote.android.job.Job;
 import com.evernote.android.job.JobConfig;
diff --git a/library/src/main/java/com/evernote/android/job/v21/TransientBundleCompat.java b/library/src/main/java/com/evernote/android/job/v21/TransientBundleCompat.java
index 4fbdcdd..fedb956 100644
--- a/library/src/main/java/com/evernote/android/job/v21/TransientBundleCompat.java
+++ b/library/src/main/java/com/evernote/android/job/v21/TransientBundleCompat.java
@@ -21,9 +21,9 @@
 import android.content.Context;
 import android.content.Intent;
 import android.os.Build;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.annotation.RestrictTo;
 
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.util.JobCat;
diff --git a/library/src/main/java/com/evernote/android/job/v24/JobProxy24.java b/library/src/main/java/com/evernote/android/job/v24/JobProxy24.java
index dbbef7d..6b5d644 100644
--- a/library/src/main/java/com/evernote/android/job/v24/JobProxy24.java
+++ b/library/src/main/java/com/evernote/android/job/v24/JobProxy24.java
@@ -19,8 +19,8 @@
 import android.app.job.JobInfo;
 import android.content.Context;
 import android.os.Build;
-import android.support.annotation.NonNull;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.NonNull;
+import androidx.annotation.RestrictTo;
 
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.v21.JobProxy21;
diff --git a/library/src/main/java/com/evernote/android/job/v26/JobProxy26.java b/library/src/main/java/com/evernote/android/job/v26/JobProxy26.java
index 6547bcc..0f40d36 100644
--- a/library/src/main/java/com/evernote/android/job/v26/JobProxy26.java
+++ b/library/src/main/java/com/evernote/android/job/v26/JobProxy26.java
@@ -19,9 +19,9 @@
 import android.app.job.JobInfo;
 import android.content.Context;
 import android.os.Build;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.annotation.RestrictTo;
 
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.v24.JobProxy24;
diff --git a/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java b/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java
index 4b1520b..9a8e556 100644
--- a/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java
+++ b/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java
@@ -2,8 +2,8 @@
 
 import android.content.Context;
 import android.os.Build;
-import android.support.annotation.NonNull;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.NonNull;
+import androidx.annotation.RestrictTo;
 
 import androidx.work.WorkInfo;
 import com.evernote.android.job.JobProxy;
diff --git a/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java b/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
index 16d5d11..0e9d713 100644
--- a/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
+++ b/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
@@ -2,8 +2,8 @@
 
 import android.content.Context;
 import android.os.Bundle;
-import android.support.annotation.NonNull;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.NonNull;
+import androidx.annotation.RestrictTo;
 
 import com.evernote.android.job.Job;
 import com.evernote.android.job.JobManager;
diff --git a/library/src/main/java/com/evernote/android/job/work/TransientBundleHolder.java b/library/src/main/java/com/evernote/android/job/work/TransientBundleHolder.java
index 9e48e41..00447de 100644
--- a/library/src/main/java/com/evernote/android/job/work/TransientBundleHolder.java
+++ b/library/src/main/java/com/evernote/android/job/work/TransientBundleHolder.java
@@ -1,8 +1,8 @@
 package com.evernote.android.job.work;
 
 import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.Nullable;
+import androidx.annotation.RestrictTo;
 import android.util.SparseArray;
 
 /**
diff --git a/library/src/test/java/android/support/v4/app/JobIntentServiceReset.java b/library/src/test/java/android/support/v4/app/JobIntentServiceReset.java
index f3e20e4..aac41d2 100644
--- a/library/src/test/java/android/support/v4/app/JobIntentServiceReset.java
+++ b/library/src/test/java/android/support/v4/app/JobIntentServiceReset.java
@@ -1,4 +1,4 @@
-package android.support.v4.app;
+package androidx.core.app;
 
 /**
  * @author rwondratschek
diff --git a/library/src/test/java/com/evernote/android/job/AsyncScheduleTest.java b/library/src/test/java/com/evernote/android/job/AsyncScheduleTest.java
index f46a407..2813d82 100644
--- a/library/src/test/java/com/evernote/android/job/AsyncScheduleTest.java
+++ b/library/src/test/java/com/evernote/android/job/AsyncScheduleTest.java
@@ -3,8 +3,8 @@
 import android.app.job.JobInfo;
 import android.app.job.JobScheduler;
 import android.content.Context;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 
 import com.evernote.android.job.test.DummyJobs;
 import com.evernote.android.job.test.JobRobolectricTestRunner;
diff --git a/library/src/test/java/com/evernote/android/job/BaseJobManagerTest.java b/library/src/test/java/com/evernote/android/job/BaseJobManagerTest.java
index 641e3a3..1f9fa37 100644
--- a/library/src/test/java/com/evernote/android/job/BaseJobManagerTest.java
+++ b/library/src/test/java/com/evernote/android/job/BaseJobManagerTest.java
@@ -5,15 +5,11 @@
 import android.content.pm.PackageManager;
 import android.content.pm.ResolveInfo;
 import android.content.pm.ServiceInfo;
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 import android.test.mock.MockContext;
-
+import androidx.test.core.app.ApplicationProvider;
 import com.evernote.android.job.test.DummyJobs;
 import com.evernote.android.job.test.TestLogger;
-
-import org.junit.Rule;
-import org.robolectric.RuntimeEnvironment;
-
 import java.util.Collections;
 import java.util.concurrent.Callable;
 import java.util.concurrent.CountDownLatch;
@@ -21,6 +17,8 @@
 import java.util.concurrent.Executors;
 import java.util.concurrent.Future;
 import java.util.concurrent.TimeUnit;
+import org.junit.Rule;
+import org.robolectric.RuntimeEnvironment;
 
 import static org.assertj.core.api.Java6Assertions.assertThat;
 import static org.mockito.ArgumentMatchers.any;
@@ -129,7 +127,7 @@ public static Context createMockContext() {
         resolveInfo.serviceInfo.permission = "android.permission.BIND_JOB_SERVICE";
         when(packageManager.queryIntentServices(any(Intent.class), anyInt())).thenReturn(Collections.singletonList(resolveInfo));
 
-        Context context = spy(RuntimeEnvironment.application);
+        Context context = spy(ApplicationProvider.getApplicationContext());
         when(context.getPackageManager()).thenReturn(packageManager);
         when(context.getApplicationContext()).thenReturn(context);
 
diff --git a/library/src/test/java/com/evernote/android/job/DailyJobTest.java b/library/src/test/java/com/evernote/android/job/DailyJobTest.java
index 0696bed..341ed50 100644
--- a/library/src/test/java/com/evernote/android/job/DailyJobTest.java
+++ b/library/src/test/java/com/evernote/android/job/DailyJobTest.java
@@ -1,6 +1,6 @@
 package com.evernote.android.job;
 
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import com.evernote.android.job.test.DummyJobs;
 import com.evernote.android.job.test.JobRobolectricTestRunner;
diff --git a/library/src/test/java/com/evernote/android/job/DatabaseCorruptionTest.java b/library/src/test/java/com/evernote/android/job/DatabaseCorruptionTest.java
index ef5acab..ef9d693 100644
--- a/library/src/test/java/com/evernote/android/job/DatabaseCorruptionTest.java
+++ b/library/src/test/java/com/evernote/android/job/DatabaseCorruptionTest.java
@@ -2,16 +2,13 @@
 
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
-
+import androidx.test.core.app.ApplicationProvider;
 import com.evernote.android.job.test.JobRobolectricTestRunner;
-
+import java.io.File;
 import org.junit.FixMethodOrder;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.MethodSorters;
-import org.robolectric.RuntimeEnvironment;
-
-import java.io.File;
 
 import static org.assertj.core.api.Java6Assertions.assertThat;
 
@@ -24,7 +21,7 @@
 
     @Test
     public void verifyDeleteAfterCorruptionWhileOpen() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
 
         JobStorage jobStorage = new JobStorage(context);
         SQLiteDatabase database = jobStorage.getDatabase();
@@ -42,7 +39,7 @@ public void verifyDeleteAfterCorruptionWhileOpen() {
 
     @Test
     public void verifyDeleteAfterCorruptionWhileClosed() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
 
         JobStorage jobStorage = new JobStorage(context);
         SQLiteDatabase database = jobStorage.getDatabase();
@@ -62,7 +59,7 @@ public void verifyDeleteAfterCorruptionWhileClosed() {
 
     @Test
     public void verifyDeleteWithApi14() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
 
         JobStorage jobStorage = new JobStorage(context);
         SQLiteDatabase database = jobStorage.getDatabase();
@@ -80,7 +77,7 @@ public void verifyDeleteWithApi14() {
 
     @Test
     public void verifyDeleteWhileOpening() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
 
         String filePath = getClass().getResource("/databases/corrupted.db").getPath();
         final long originalLength = new File(filePath).length();
diff --git a/library/src/test/java/com/evernote/android/job/DatabaseManualUpgradeTest.java b/library/src/test/java/com/evernote/android/job/DatabaseManualUpgradeTest.java
index 3ceba46..ec66d0a 100644
--- a/library/src/test/java/com/evernote/android/job/DatabaseManualUpgradeTest.java
+++ b/library/src/test/java/com/evernote/android/job/DatabaseManualUpgradeTest.java
@@ -4,18 +4,15 @@
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
-import android.support.annotation.NonNull;
-
+import androidx.annotation.NonNull;
+import androidx.test.core.app.ApplicationProvider;
 import com.evernote.android.job.test.JobRobolectricTestRunner;
 import com.evernote.android.job.util.support.PersistableBundleCompat;
-
+import java.util.concurrent.TimeUnit;
 import org.junit.FixMethodOrder;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.MethodSorters;
-import org.robolectric.RuntimeEnvironment;
-
-import java.util.concurrent.TimeUnit;
 
 import static com.evernote.android.job.JobStorage.COLUMN_BACKOFF_MS;
 import static com.evernote.android.job.JobStorage.COLUMN_BACKOFF_POLICY;
@@ -53,7 +50,7 @@
 
     @Test
     public void testDatabaseUpgrade1to6() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
         context.deleteDatabase(DATABASE_NAME);
 
         JobOpenHelper1 openHelper = new JobOpenHelper1(context);
@@ -65,7 +62,7 @@ public void testDatabaseUpgrade1to6() {
 
     @Test
     public void testDatabaseUpgrade2to6() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
         context.deleteDatabase(DATABASE_NAME);
 
         JobOpenHelper2 openHelper = new JobOpenHelper2(context);
@@ -77,7 +74,7 @@ public void testDatabaseUpgrade2to6() {
 
     @Test
     public void testDatabaseUpgrade3to6() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
         context.deleteDatabase(DATABASE_NAME);
 
         JobOpenHelper3 openHelper = new JobOpenHelper3(context);
@@ -89,7 +86,7 @@ public void testDatabaseUpgrade3to6() {
 
     @Test
     public void testDatabaseUpgrade4to6() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
         context.deleteDatabase(DATABASE_NAME);
 
         JobOpenHelper4 openHelper = new JobOpenHelper4(context);
@@ -101,7 +98,7 @@ public void testDatabaseUpgrade4to6() {
 
     @Test
     public void testDatabaseUpgrade5to6() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
         context.deleteDatabase(DATABASE_NAME);
 
         JobOpenHelper5 openHelper = new JobOpenHelper5(context);
@@ -113,7 +110,7 @@ public void testDatabaseUpgrade5to6() {
 
     @Test
     public void testDatabaseUpgrade1to2to3to4to5to6() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
         context.deleteDatabase(DATABASE_NAME);
 
         JobOpenHelper1 openHelper = new JobOpenHelper1(context);
diff --git a/library/src/test/java/com/evernote/android/job/JobCanceledTest.java b/library/src/test/java/com/evernote/android/job/JobCanceledTest.java
index 3b16487..642a12b 100644
--- a/library/src/test/java/com/evernote/android/job/JobCanceledTest.java
+++ b/library/src/test/java/com/evernote/android/job/JobCanceledTest.java
@@ -1,6 +1,6 @@
 package com.evernote.android.job;
 
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import com.evernote.android.job.test.JobRobolectricTestRunner;
 
diff --git a/library/src/test/java/com/evernote/android/job/JobCreatorHolderTest.java b/library/src/test/java/com/evernote/android/job/JobCreatorHolderTest.java
index 9963b1b..1e9a41c 100644
--- a/library/src/test/java/com/evernote/android/job/JobCreatorHolderTest.java
+++ b/library/src/test/java/com/evernote/android/job/JobCreatorHolderTest.java
@@ -1,6 +1,6 @@
 package com.evernote.android.job;
 
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import com.evernote.android.job.util.JobLogger;
 
diff --git a/library/src/test/java/com/evernote/android/job/JobExecutionTest.java b/library/src/test/java/com/evernote/android/job/JobExecutionTest.java
index faf443e..c146c28 100644
--- a/library/src/test/java/com/evernote/android/job/JobExecutionTest.java
+++ b/library/src/test/java/com/evernote/android/job/JobExecutionTest.java
@@ -2,7 +2,7 @@
 
 import android.os.Build;
 import android.os.Bundle;
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import com.evernote.android.job.test.DummyJobs;
 import com.evernote.android.job.test.JobRobolectricTestRunner;
diff --git a/library/src/test/java/com/evernote/android/job/JobManagerRule.java b/library/src/test/java/com/evernote/android/job/JobManagerRule.java
index 0c05455..fe94497 100644
--- a/library/src/test/java/com/evernote/android/job/JobManagerRule.java
+++ b/library/src/test/java/com/evernote/android/job/JobManagerRule.java
@@ -1,8 +1,8 @@
 package com.evernote.android.job;
 
 import android.content.Context;
-import android.support.annotation.NonNull;
-import android.support.v4.app.JobIntentServiceReset;
+import androidx.annotation.NonNull;
+import androidx.core.app.JobIntentServiceReset;
 
 import com.evernote.android.job.test.TestLogger;
 
diff --git a/library/src/test/java/com/evernote/android/job/JobManagerTest.java b/library/src/test/java/com/evernote/android/job/JobManagerTest.java
index 7fc731c..dc5f1be 100644
--- a/library/src/test/java/com/evernote/android/job/JobManagerTest.java
+++ b/library/src/test/java/com/evernote/android/job/JobManagerTest.java
@@ -1,8 +1,8 @@
 package com.evernote.android.job;
 
 import android.content.Context;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 
 import com.evernote.android.job.test.DummyJobs;
 import com.evernote.android.job.test.JobRobolectricTestRunner;
diff --git a/library/src/test/java/com/evernote/android/job/JobPeriodicCancelTest.java b/library/src/test/java/com/evernote/android/job/JobPeriodicCancelTest.java
index 76ba08c..5b5ec7e 100644
--- a/library/src/test/java/com/evernote/android/job/JobPeriodicCancelTest.java
+++ b/library/src/test/java/com/evernote/android/job/JobPeriodicCancelTest.java
@@ -1,7 +1,7 @@
 package com.evernote.android.job;
 
 import android.os.Build;
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import com.evernote.android.job.test.JobRobolectricTestRunner;
 import com.evernote.android.job.test.TestLogger;
diff --git a/library/src/test/java/com/evernote/android/job/JobProxyTest.java b/library/src/test/java/com/evernote/android/job/JobProxyTest.java
index f956d50..0869638 100644
--- a/library/src/test/java/com/evernote/android/job/JobProxyTest.java
+++ b/library/src/test/java/com/evernote/android/job/JobProxyTest.java
@@ -4,7 +4,7 @@
 import android.app.job.JobInfo;
 import android.app.job.JobScheduler;
 import android.content.Context;
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import com.evernote.android.job.test.JobRobolectricTestRunner;
 
diff --git a/library/src/test/java/com/evernote/android/job/JobRequestTest.java b/library/src/test/java/com/evernote/android/job/JobRequestTest.java
index 6670601..eaf2fcf 100644
--- a/library/src/test/java/com/evernote/android/job/JobRequestTest.java
+++ b/library/src/test/java/com/evernote/android/job/JobRequestTest.java
@@ -1,7 +1,7 @@
 package com.evernote.android.job;
 
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 
 import com.evernote.android.job.test.DummyJobs;
 import com.evernote.android.job.test.JobRobolectricTestRunner;
diff --git a/library/src/test/java/com/evernote/android/job/test/DummyJobs.java b/library/src/test/java/com/evernote/android/job/test/DummyJobs.java
index 6c19dbe..3903043 100644
--- a/library/src/test/java/com/evernote/android/job/test/DummyJobs.java
+++ b/library/src/test/java/com/evernote/android/job/test/DummyJobs.java
@@ -1,6 +1,6 @@
 package com.evernote.android.job.test;
 
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 
 import com.evernote.android.job.DailyJob;
 import com.evernote.android.job.Job;
diff --git a/library/src/test/java/com/evernote/android/job/test/TestLogger.java b/library/src/test/java/com/evernote/android/job/test/TestLogger.java
index 8c9ab43..6467bc1 100644
--- a/library/src/test/java/com/evernote/android/job/test/TestLogger.java
+++ b/library/src/test/java/com/evernote/android/job/test/TestLogger.java
@@ -1,7 +1,7 @@
 package com.evernote.android.job.test;
 
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 
 import com.evernote.android.job.util.JobCat;
 
diff --git a/library/src/test/java/com/evernote/android/job/util/LoggerTest.java b/library/src/test/java/com/evernote/android/job/util/LoggerTest.java
index 07215d6..c218435 100644
--- a/library/src/test/java/com/evernote/android/job/util/LoggerTest.java
+++ b/library/src/test/java/com/evernote/android/job/util/LoggerTest.java
@@ -1,7 +1,7 @@
 package com.evernote.android.job.util;
 
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 
 import com.evernote.android.job.JobConfig;
 
