diff --git a/library/src/main/java/com/evernote/android/job/JobConfig.java b/library/src/main/java/com/evernote/android/job/JobConfig.java
index bdafbb1..177c17c 100644
--- a/library/src/main/java/com/evernote/android/job/JobConfig.java
+++ b/library/src/main/java/com/evernote/android/job/JobConfig.java
@@ -32,6 +32,7 @@
 import com.evernote.android.job.util.JobLogger;
 
 import java.util.EnumMap;
+import java.util.concurrent.TimeUnit;
 
 /**
  * A global configuration for the job library.
@@ -48,12 +49,16 @@ private JobConfig() {
         throw new UnsupportedOperationException();
     }
 
+    private static final long DEFAULT_JOB_RESCHEDULE_PAUSE = 3_000L;
+
     private static final EnumMap<JobApi, Boolean> ENABLED_APIS;
     private static final JobCat CAT = new JobCat("JobConfig");
 
     private static volatile boolean allowSmallerIntervals;
     private static volatile boolean forceAllowApi14 = false;
 
+    private static volatile long jobReschedulePause = DEFAULT_JOB_RESCHEDULE_PAUSE;
+
     static {
         ENABLED_APIS = new EnumMap<>(JobApi.class);
         for (JobApi api : JobApi.values()) {
@@ -184,6 +189,23 @@ public static boolean isLogcatEnabled() {
         return JobCat.isLogcatEnabled();
     }
 
+    /**
+     * @return The pause of job reschedule service in milliseconds.
+     */
+    public static long getJobReschedulePause() {
+        return jobReschedulePause;
+    }
+
+    /**
+     * Overrides the default job reschedule pause. The default value is 3 seconds.
+     *
+     * @param pause The new pause.
+     * @param timeUnit The time unit of the pause argument.
+     */
+    public static void setJobReschedulePause(long pause, @NonNull TimeUnit timeUnit) {
+        jobReschedulePause = timeUnit.toMillis(pause);
+    }
+
     /**
      * Resets all adjustments in the config.
      */
diff --git a/library/src/main/java/com/evernote/android/job/JobRescheduleService.java b/library/src/main/java/com/evernote/android/job/JobRescheduleService.java
index 7da69f2..647eb60 100644
--- a/library/src/main/java/com/evernote/android/job/JobRescheduleService.java
+++ b/library/src/main/java/com/evernote/android/job/JobRescheduleService.java
@@ -52,11 +52,11 @@ protected void onHandleWork(@NonNull Intent intent) {
          * Delay this slightly. This avoids a race condition if the app was launched by the
          * AlarmManager. Then the alarm was already removed, but the JobRequest might still
          * be available in the storage. We still catch this case, because we never execute
-         * a job with the same ID twice. However, the still save resources with the delay.
+         * a job with the same ID twice. Nonetheless, add the delay to save resources.
          */
         try {
             CAT.d("Reschedule service started");
-            SystemClock.sleep(10_000L);
+            SystemClock.sleep(JobConfig.getJobReschedulePause());
 
             JobManager manager;
             try {
