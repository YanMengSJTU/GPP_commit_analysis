diff --git a/CHANGELOG.md b/CHANGELOG.md
index b55ac43..c2be51b 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,6 @@
 ## 1.3.0-alpha02
 * Initialize the job storage on a background thread, see $471
+* Restrict usage of internal classes for internal usage only, see #465
 
 ## 1.3.0-alpha01 (2018-05-28)
 * Implement an API that uses the `WorkManager` for scheduling work items
diff --git a/library/src/main/java/com/evernote/android/job/GcmAvailableHelper.java b/library/src/main/java/com/evernote/android/job/GcmAvailableHelper.java
index c6a29ff..35a6f22 100644
--- a/library/src/main/java/com/evernote/android/job/GcmAvailableHelper.java
+++ b/library/src/main/java/com/evernote/android/job/GcmAvailableHelper.java
@@ -20,6 +20,7 @@
 import android.content.Intent;
 import android.content.pm.PackageManager;
 import android.content.pm.ResolveInfo;
+import android.support.annotation.RestrictTo;
 
 import com.evernote.android.job.gcm.JobProxyGcm;
 import com.evernote.android.job.gcm.PlatformGcmService;
@@ -32,6 +33,7 @@
 /**
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 /*package*/ final class GcmAvailableHelper {
 
     private static final JobCat CAT = new JobCat("GcmAvailableHelper");
diff --git a/library/src/main/java/com/evernote/android/job/JobBootReceiver.java b/library/src/main/java/com/evernote/android/job/JobBootReceiver.java
index c9ff2bf..5e8f428 100644
--- a/library/src/main/java/com/evernote/android/job/JobBootReceiver.java
+++ b/library/src/main/java/com/evernote/android/job/JobBootReceiver.java
@@ -18,6 +18,7 @@
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
+import android.support.annotation.RestrictTo;
 
 /**
  * A {@code BroadcastReceiver} rescheduling jobs after a reboot, if the underlying {@link JobApi} can't
@@ -25,6 +26,7 @@
  *
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public final class JobBootReceiver extends BroadcastReceiver {
 
     @Override
diff --git a/library/src/main/java/com/evernote/android/job/JobCreatorHolder.java b/library/src/main/java/com/evernote/android/job/JobCreatorHolder.java
index 54840c1..31b2f7a 100644
--- a/library/src/main/java/com/evernote/android/job/JobCreatorHolder.java
+++ b/library/src/main/java/com/evernote/android/job/JobCreatorHolder.java
@@ -15,6 +15,8 @@
  */
 package com.evernote.android.job;
 
+import android.support.annotation.RestrictTo;
+
 import com.evernote.android.job.util.JobCat;
 
 import java.util.List;
@@ -23,6 +25,7 @@
 /**
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 /*package*/ class JobCreatorHolder {
 
     private static final JobCat CAT = new JobCat("JobCreatorHolder");
diff --git a/library/src/main/java/com/evernote/android/job/JobExecutor.java b/library/src/main/java/com/evernote/android/job/JobExecutor.java
index e6e480e..c493dd0 100644
--- a/library/src/main/java/com/evernote/android/job/JobExecutor.java
+++ b/library/src/main/java/com/evernote/android/job/JobExecutor.java
@@ -21,6 +21,7 @@
 import android.os.PowerManager;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.annotation.RestrictTo;
 import android.support.annotation.VisibleForTesting;
 import android.util.LruCache;
 import android.util.SparseArray;
@@ -41,6 +42,7 @@
  * @author rwondratschek
  */
 @SuppressWarnings("WeakerAccess")
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 /*package*/ class JobExecutor {
 
     private static final JobCat CAT = new JobCat("JobExecutor");
diff --git a/library/src/main/java/com/evernote/android/job/JobManagerCreateException.java b/library/src/main/java/com/evernote/android/job/JobManagerCreateException.java
index a1e2872..463f476 100644
--- a/library/src/main/java/com/evernote/android/job/JobManagerCreateException.java
+++ b/library/src/main/java/com/evernote/android/job/JobManagerCreateException.java
@@ -15,6 +15,8 @@
  */
 package com.evernote.android.job;
 
+import android.support.annotation.RestrictTo;
+
 /**
  * Indicates illegal states during the creation of the {@link JobManager}.
  *
@@ -26,6 +28,7 @@
  * @author rwondratschek
  */
 public class JobManagerCreateException extends IllegalStateException {
+    @RestrictTo(RestrictTo.Scope.LIBRARY)
     public JobManagerCreateException(String s) {
         super(s);
     }
diff --git a/library/src/main/java/com/evernote/android/job/JobProxy.java b/library/src/main/java/com/evernote/android/job/JobProxy.java
index b8fcb97..2e03734 100644
--- a/library/src/main/java/com/evernote/android/job/JobProxy.java
+++ b/library/src/main/java/com/evernote/android/job/JobProxy.java
@@ -22,6 +22,7 @@
 import android.os.Looper;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.annotation.RestrictTo;
 
 import com.evernote.android.job.util.JobCat;
 import com.evernote.android.job.util.JobUtil;
@@ -35,6 +36,7 @@
  *
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public interface JobProxy {
 
     void plantOneOff(JobRequest request);
diff --git a/library/src/main/java/com/evernote/android/job/JobProxyIllegalStateException.java b/library/src/main/java/com/evernote/android/job/JobProxyIllegalStateException.java
index e791bc2..1a57d0d 100644
--- a/library/src/main/java/com/evernote/android/job/JobProxyIllegalStateException.java
+++ b/library/src/main/java/com/evernote/android/job/JobProxyIllegalStateException.java
@@ -15,16 +15,20 @@
  */
 package com.evernote.android.job;
 
+import android.support.annotation.RestrictTo;
+
 /**
  * Indicates an illegal state when a proxy tries to schedule a job, but something weird happens.
  *
  * @author rwondratschek
  */
 public class JobProxyIllegalStateException extends IllegalStateException {
+    @RestrictTo(RestrictTo.Scope.LIBRARY)
     public JobProxyIllegalStateException(String s) {
         super(s);
     }
 
+    @RestrictTo(RestrictTo.Scope.LIBRARY)
     public JobProxyIllegalStateException(Throwable cause) {
         super(cause);
     }
diff --git a/library/src/main/java/com/evernote/android/job/JobRescheduleService.java b/library/src/main/java/com/evernote/android/job/JobRescheduleService.java
index 1a6b500..9a589e7 100644
--- a/library/src/main/java/com/evernote/android/job/JobRescheduleService.java
+++ b/library/src/main/java/com/evernote/android/job/JobRescheduleService.java
@@ -19,6 +19,7 @@
 import android.content.Intent;
 import android.os.SystemClock;
 import android.support.annotation.NonNull;
+import android.support.annotation.RestrictTo;
 import android.support.annotation.VisibleForTesting;
 import android.support.v4.app.JobIntentService;
 
@@ -35,6 +36,7 @@
  *
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public final class JobRescheduleService extends JobIntentService {
 
     private static final JobCat CAT = new JobCat("JobRescheduleService", BuildConfig.DEBUG);
diff --git a/library/src/main/java/com/evernote/android/job/JobStorage.java b/library/src/main/java/com/evernote/android/job/JobStorage.java
index e6d7059..a4c6df0 100644
--- a/library/src/main/java/com/evernote/android/job/JobStorage.java
+++ b/library/src/main/java/com/evernote/android/job/JobStorage.java
@@ -26,6 +26,7 @@
 import android.database.sqlite.SQLiteOpenHelper;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.annotation.RestrictTo;
 import android.support.annotation.VisibleForTesting;
 import android.text.TextUtils;
 import android.util.LruCache;
@@ -44,6 +45,7 @@
  * @author rwondratschek
  */
 @SuppressWarnings("WeakerAccess")
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 /*package*/ class JobStorage {
 
     private static final JobCat CAT = new JobCat("JobStorage");
diff --git a/library/src/main/java/com/evernote/android/job/JobStorageDatabaseErrorHandler.java b/library/src/main/java/com/evernote/android/job/JobStorageDatabaseErrorHandler.java
index 8d2a38f..4c58531 100644
--- a/library/src/main/java/com/evernote/android/job/JobStorageDatabaseErrorHandler.java
+++ b/library/src/main/java/com/evernote/android/job/JobStorageDatabaseErrorHandler.java
@@ -21,6 +21,7 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteException;
 import android.os.Build;
+import android.support.annotation.RestrictTo;
 import android.support.annotation.VisibleForTesting;
 import android.util.Pair;
 
@@ -48,6 +49,7 @@
  * as the default {@link DatabaseErrorHandler}.
  */
 @SuppressWarnings("WeakerAccess")
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 /*package*/ final class JobStorageDatabaseErrorHandler implements DatabaseErrorHandler {
 
     private static final JobCat CAT = new JobCat("DatabaseErrorHandler");
diff --git a/library/src/main/java/com/evernote/android/job/WakeLockUtil.java b/library/src/main/java/com/evernote/android/job/WakeLockUtil.java
index a787344..2a62477 100644
--- a/library/src/main/java/com/evernote/android/job/WakeLockUtil.java
+++ b/library/src/main/java/com/evernote/android/job/WakeLockUtil.java
@@ -21,6 +21,7 @@
 import android.os.PowerManager;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.annotation.RestrictTo;
 import android.util.SparseArray;
 
 import com.evernote.android.job.util.JobCat;
@@ -31,6 +32,7 @@
 /**
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 /*package*/ final class WakeLockUtil {
 
     private static final JobCat CAT = new JobCat("WakeLockUtil");
diff --git a/library/src/main/java/com/evernote/android/job/WorkManagerAvailableHelper.java b/library/src/main/java/com/evernote/android/job/WorkManagerAvailableHelper.java
index 05f20cd..bacc31b 100644
--- a/library/src/main/java/com/evernote/android/job/WorkManagerAvailableHelper.java
+++ b/library/src/main/java/com/evernote/android/job/WorkManagerAvailableHelper.java
@@ -1,8 +1,11 @@
 package com.evernote.android.job;
 
+import android.support.annotation.RestrictTo;
+
 /**
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 /*package*/ final class WorkManagerAvailableHelper {
 
     private static final boolean MANAGER_IN_CLASSPATH;
diff --git a/library/src/main/java/com/evernote/android/job/gcm/JobProxyGcm.java b/library/src/main/java/com/evernote/android/job/gcm/JobProxyGcm.java
index a44f498..d36dac4 100644
--- a/library/src/main/java/com/evernote/android/job/gcm/JobProxyGcm.java
+++ b/library/src/main/java/com/evernote/android/job/gcm/JobProxyGcm.java
@@ -17,6 +17,7 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
+import android.support.annotation.RestrictTo;
 
 import com.evernote.android.job.JobProxy;
 import com.evernote.android.job.JobProxyIllegalStateException;
@@ -31,6 +32,7 @@
 /**
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public class JobProxyGcm implements JobProxy {
 
     private static final JobCat CAT = new JobCat("JobProxyGcm");
diff --git a/library/src/main/java/com/evernote/android/job/gcm/PlatformGcmService.java b/library/src/main/java/com/evernote/android/job/gcm/PlatformGcmService.java
index b7a2137..5217c7f 100644
--- a/library/src/main/java/com/evernote/android/job/gcm/PlatformGcmService.java
+++ b/library/src/main/java/com/evernote/android/job/gcm/PlatformGcmService.java
@@ -15,6 +15,8 @@
  */
 package com.evernote.android.job.gcm;
 
+import android.support.annotation.RestrictTo;
+
 import com.evernote.android.job.Job;
 import com.evernote.android.job.JobManager;
 import com.evernote.android.job.JobManagerCreateException;
@@ -28,6 +30,7 @@
 /**
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public class PlatformGcmService extends GcmTaskService {
 
     private static final JobCat CAT = new JobCat("PlatformGcmService");
diff --git a/library/src/main/java/com/evernote/android/job/util/BatteryStatus.java b/library/src/main/java/com/evernote/android/job/util/BatteryStatus.java
index 03d6744..0f84905 100644
--- a/library/src/main/java/com/evernote/android/job/util/BatteryStatus.java
+++ b/library/src/main/java/com/evernote/android/job/util/BatteryStatus.java
@@ -15,9 +15,12 @@
  */
 package com.evernote.android.job.util;
 
+import android.support.annotation.RestrictTo;
+
 /**
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public final class BatteryStatus {
 
     public static final BatteryStatus DEFAULT = new BatteryStatus(false, 1f);
diff --git a/library/src/main/java/com/evernote/android/job/util/Clock.java b/library/src/main/java/com/evernote/android/job/util/Clock.java
index 9e91756..b071d5a 100644
--- a/library/src/main/java/com/evernote/android/job/util/Clock.java
+++ b/library/src/main/java/com/evernote/android/job/util/Clock.java
@@ -16,10 +16,12 @@
 package com.evernote.android.job.util;
 
 import android.os.SystemClock;
+import android.support.annotation.RestrictTo;
 
 /**
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public interface Clock {
 
     long currentTimeMillis();
diff --git a/library/src/main/java/com/evernote/android/job/util/Device.java b/library/src/main/java/com/evernote/android/job/util/Device.java
index dd6472e..678a883 100644
--- a/library/src/main/java/com/evernote/android/job/util/Device.java
+++ b/library/src/main/java/com/evernote/android/job/util/Device.java
@@ -25,6 +25,7 @@
 import android.os.Build;
 import android.os.PowerManager;
 import android.support.annotation.NonNull;
+import android.support.annotation.RestrictTo;
 import android.support.v4.net.ConnectivityManagerCompat;
 
 import com.evernote.android.job.JobRequest;
@@ -34,6 +35,7 @@
  *
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public final class Device {
 
     private Device() {
diff --git a/library/src/main/java/com/evernote/android/job/util/JobCat.java b/library/src/main/java/com/evernote/android/job/util/JobCat.java
index 586f491..cbb16ff 100644
--- a/library/src/main/java/com/evernote/android/job/util/JobCat.java
+++ b/library/src/main/java/com/evernote/android/job/util/JobCat.java
@@ -17,6 +17,7 @@
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.annotation.RestrictTo;
 import android.util.Log;
 
 import java.util.Arrays;
@@ -26,6 +27,7 @@
  *
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public class JobCat implements JobLogger {
 
     private static volatile JobLogger[] loggers = new JobLogger[0]; // use array to avoid synchronization while printing log statements
diff --git a/library/src/main/java/com/evernote/android/job/util/JobPreconditions.java b/library/src/main/java/com/evernote/android/job/util/JobPreconditions.java
index b6ede62..32139a0 100644
--- a/library/src/main/java/com/evernote/android/job/util/JobPreconditions.java
+++ b/library/src/main/java/com/evernote/android/job/util/JobPreconditions.java
@@ -16,6 +16,7 @@
 
 package com.evernote.android.job.util;
 
+import android.support.annotation.RestrictTo;
 import android.text.TextUtils;
 
 import java.util.Collection;
@@ -26,6 +27,7 @@
  * correct arguments and state.
  */
 @SuppressWarnings("UnusedDeclaration")
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public final class JobPreconditions {
 
     private JobPreconditions() {
diff --git a/library/src/main/java/com/evernote/android/job/util/JobUtil.java b/library/src/main/java/com/evernote/android/job/util/JobUtil.java
index 2e2b01f..2758073 100644
--- a/library/src/main/java/com/evernote/android/job/util/JobUtil.java
+++ b/library/src/main/java/com/evernote/android/job/util/JobUtil.java
@@ -18,6 +18,7 @@
 import android.Manifest;
 import android.content.Context;
 import android.content.pm.PackageManager;
+import android.support.annotation.RestrictTo;
 
 import java.text.SimpleDateFormat;
 import java.util.Date;
@@ -30,6 +31,7 @@
  *
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public final class JobUtil {
 
     private static final ThreadLocal<SimpleDateFormat> FORMAT = new ThreadLocal<>();
diff --git a/library/src/main/java/com/evernote/android/job/util/support/FastXmlSerializer.java b/library/src/main/java/com/evernote/android/job/util/support/FastXmlSerializer.java
index 87f0fd1..72f76da 100644
--- a/library/src/main/java/com/evernote/android/job/util/support/FastXmlSerializer.java
+++ b/library/src/main/java/com/evernote/android/job/util/support/FastXmlSerializer.java
@@ -16,6 +16,8 @@
 
 package com.evernote.android.job.util.support;
 
+import android.support.annotation.RestrictTo;
+
 import org.xmlpull.v1.XmlSerializer;
 
 import java.io.IOException;
@@ -38,6 +40,7 @@
  */
 /*package*/
 @SuppressWarnings({"TryWithIdenticalCatches", "FieldCanBeLocal", "ConstantIfStatement", "ConstantConditions"})
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 class FastXmlSerializer implements XmlSerializer {
     private static final String[] ESCAPE_TABLE = new String[] {
             null,     null,     null,     null,     null,     null,     null,     null,  // 0-7
diff --git a/library/src/main/java/com/evernote/android/job/util/support/PersistableBundleCompat.java b/library/src/main/java/com/evernote/android/job/util/support/PersistableBundleCompat.java
index 6e5c33b..14379f7 100644
--- a/library/src/main/java/com/evernote/android/job/util/support/PersistableBundleCompat.java
+++ b/library/src/main/java/com/evernote/android/job/util/support/PersistableBundleCompat.java
@@ -17,6 +17,7 @@
 
 import android.os.PersistableBundle;
 import android.support.annotation.NonNull;
+import android.support.annotation.RestrictTo;
 
 import com.evernote.android.job.util.JobCat;
 
@@ -36,6 +37,7 @@
  * @author rwondratschek
  */
 @SuppressWarnings("unused")
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public final class PersistableBundleCompat {
 
     private static final JobCat CAT = new JobCat("PersistableBundleCompat");
diff --git a/library/src/main/java/com/evernote/android/job/util/support/XmlUtils.java b/library/src/main/java/com/evernote/android/job/util/support/XmlUtils.java
index 071c1a7..751dcd2 100644
--- a/library/src/main/java/com/evernote/android/job/util/support/XmlUtils.java
+++ b/library/src/main/java/com/evernote/android/job/util/support/XmlUtils.java
@@ -19,6 +19,7 @@
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.net.Uri;
+import android.support.annotation.RestrictTo;
 import android.util.Base64;
 import android.util.Xml;
 
@@ -40,6 +41,7 @@
 
 /*package*/ @SuppressWarnings({"unused", "StatementWithEmptyBody", "FinalStaticMethod", "WhileLoopReplaceableByForEach",
         "ForLoopReplaceableByForEach", "FinalPrivateMethod", "AccessStaticViaInstance", "unchecked", "IfCanBeSwitch", "WeakerAccess", "SameParameterValue", "JavaDoc", "StringConcatenationInLoop"})
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 final class XmlUtils {
 
     private XmlUtils() {
diff --git a/library/src/main/java/com/evernote/android/job/v14/JobProxy14.java b/library/src/main/java/com/evernote/android/job/v14/JobProxy14.java
index aa61588..dce1582 100644
--- a/library/src/main/java/com/evernote/android/job/v14/JobProxy14.java
+++ b/library/src/main/java/com/evernote/android/job/v14/JobProxy14.java
@@ -22,6 +22,7 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
+import android.support.annotation.RestrictTo;
 
 import com.evernote.android.job.JobConfig;
 import com.evernote.android.job.JobProxy;
@@ -33,6 +34,7 @@
  * @author rwondratschek
  */
 @SuppressWarnings("WeakerAccess")
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public class JobProxy14 implements JobProxy {
 
     private static final String TAG = "JobProxy14";
diff --git a/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmReceiver.java b/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmReceiver.java
index b5570ae..a495e20 100644
--- a/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmReceiver.java
+++ b/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmReceiver.java
@@ -20,12 +20,14 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
+import android.support.annotation.RestrictTo;
 
 import com.evernote.android.job.JobProxy;
 
 /**
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public class PlatformAlarmReceiver extends BroadcastReceiver {
 
     /*package*/ static final String EXTRA_JOB_ID = "EXTRA_JOB_ID";
diff --git a/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmService.java b/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmService.java
index 4d26f12..86f4b20 100644
--- a/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmService.java
+++ b/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmService.java
@@ -21,6 +21,7 @@
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.annotation.RestrictTo;
 import android.support.v4.app.JobIntentService;
 
 import com.evernote.android.job.JobIdsInternal;
@@ -31,6 +32,7 @@
 /**
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public final class PlatformAlarmService extends JobIntentService {
 
     private static final JobCat CAT = new JobCat("PlatformAlarmService");
diff --git a/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmServiceExact.java b/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmServiceExact.java
index 788acbe..1ab7a03 100644
--- a/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmServiceExact.java
+++ b/library/src/main/java/com/evernote/android/job/v14/PlatformAlarmServiceExact.java
@@ -21,6 +21,7 @@
 import android.os.Bundle;
 import android.os.IBinder;
 import android.support.annotation.Nullable;
+import android.support.annotation.RestrictTo;
 
 import com.evernote.android.job.JobConfig;
 import com.evernote.android.job.JobProxy;
@@ -32,6 +33,7 @@
 /**
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public final class PlatformAlarmServiceExact extends Service {
 
     private static final JobCat CAT = new JobCat("PlatformAlarmServiceExact");
diff --git a/library/src/main/java/com/evernote/android/job/v19/JobProxy19.java b/library/src/main/java/com/evernote/android/job/v19/JobProxy19.java
index 44f13d2..695f1d2 100644
--- a/library/src/main/java/com/evernote/android/job/v19/JobProxy19.java
+++ b/library/src/main/java/com/evernote/android/job/v19/JobProxy19.java
@@ -20,6 +20,7 @@
 import android.app.PendingIntent;
 import android.content.Context;
 import android.os.Build;
+import android.support.annotation.RestrictTo;
 
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.util.JobUtil;
@@ -29,6 +30,7 @@
  * @author rwondratschek
  */
 @TargetApi(Build.VERSION_CODES.KITKAT)
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public class JobProxy19 extends JobProxy14 {
 
     private static final String TAG = "JobProxy19";
diff --git a/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java b/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java
index 46aec72..7cd2594 100644
--- a/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java
+++ b/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java
@@ -23,6 +23,7 @@
 import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.annotation.RestrictTo;
 
 import com.evernote.android.job.JobProxy;
 import com.evernote.android.job.JobProxyIllegalStateException;
@@ -37,6 +38,7 @@
  * @author rwondratschek
  */
 @TargetApi(Build.VERSION_CODES.LOLLIPOP)
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public class JobProxy21 implements JobProxy {
 
     private static final String TAG = "JobProxy21";
diff --git a/library/src/main/java/com/evernote/android/job/v21/PlatformJobService.java b/library/src/main/java/com/evernote/android/job/v21/PlatformJobService.java
index 1f94cf6..25e7827 100644
--- a/library/src/main/java/com/evernote/android/job/v21/PlatformJobService.java
+++ b/library/src/main/java/com/evernote/android/job/v21/PlatformJobService.java
@@ -20,6 +20,7 @@
 import android.app.job.JobService;
 import android.os.Build;
 import android.os.Bundle;
+import android.support.annotation.RestrictTo;
 
 import com.evernote.android.job.Job;
 import com.evernote.android.job.JobConfig;
@@ -32,6 +33,7 @@
  * @author rwondratschek
  */
 @TargetApi(Build.VERSION_CODES.LOLLIPOP)
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public class PlatformJobService extends JobService {
 
     /*
diff --git a/library/src/main/java/com/evernote/android/job/v21/TransientBundleCompat.java b/library/src/main/java/com/evernote/android/job/v21/TransientBundleCompat.java
index e8aec0d..4fbdcdd 100644
--- a/library/src/main/java/com/evernote/android/job/v21/TransientBundleCompat.java
+++ b/library/src/main/java/com/evernote/android/job/v21/TransientBundleCompat.java
@@ -23,6 +23,7 @@
 import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.annotation.RestrictTo;
 
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.util.JobCat;
@@ -41,6 +42,7 @@
  */
 @SuppressWarnings("WeakerAccess")
 @TargetApi(Build.VERSION_CODES.LOLLIPOP)
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 /*package*/ final class TransientBundleCompat {
 
     private static final JobCat CAT = new JobCat("TransientBundleCompat");
diff --git a/library/src/main/java/com/evernote/android/job/v24/JobProxy24.java b/library/src/main/java/com/evernote/android/job/v24/JobProxy24.java
index 1cf3ee7..dbbef7d 100644
--- a/library/src/main/java/com/evernote/android/job/v24/JobProxy24.java
+++ b/library/src/main/java/com/evernote/android/job/v24/JobProxy24.java
@@ -20,6 +20,7 @@
 import android.content.Context;
 import android.os.Build;
 import android.support.annotation.NonNull;
+import android.support.annotation.RestrictTo;
 
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.v21.JobProxy21;
@@ -29,6 +30,7 @@
  * @author rwondratschek
  */
 @TargetApi(Build.VERSION_CODES.N)
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public class JobProxy24 extends JobProxy21 {
 
     private static final String TAG = "JobProxy24";
diff --git a/library/src/main/java/com/evernote/android/job/v26/JobProxy26.java b/library/src/main/java/com/evernote/android/job/v26/JobProxy26.java
index 0b80892..5723cab 100644
--- a/library/src/main/java/com/evernote/android/job/v26/JobProxy26.java
+++ b/library/src/main/java/com/evernote/android/job/v26/JobProxy26.java
@@ -21,6 +21,7 @@
 import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.annotation.RestrictTo;
 
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.v24.JobProxy24;
@@ -31,6 +32,7 @@
  */
 @SuppressWarnings("unused")
 @TargetApi(Build.VERSION_CODES.O)
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public class JobProxy26 extends JobProxy24 {
 
     private static final String TAG = "JobProxy26";
diff --git a/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java b/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java
index 2d8c214..cf5b369 100644
--- a/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java
+++ b/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java
@@ -6,6 +6,7 @@
 import android.os.Build;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
+import android.support.annotation.RestrictTo;
 
 import com.evernote.android.job.JobProxy;
 import com.evernote.android.job.JobRequest;
@@ -27,6 +28,7 @@
 /**
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public class JobProxyWorkManager implements JobProxy {
 
     private static final String PREFIX = "android-job-";
diff --git a/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java b/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
index c7c5578..f1c850a 100644
--- a/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
+++ b/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
@@ -2,6 +2,7 @@
 
 import android.os.Bundle;
 import android.support.annotation.NonNull;
+import android.support.annotation.RestrictTo;
 
 import com.evernote.android.job.Job;
 import com.evernote.android.job.JobManager;
@@ -14,6 +15,7 @@
 /**
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 public class PlatformWorker extends Worker {
 
     private static final JobCat CAT = new JobCat("PlatformWorker");
diff --git a/library/src/main/java/com/evernote/android/job/work/TransientBundleHolder.java b/library/src/main/java/com/evernote/android/job/work/TransientBundleHolder.java
index d6da9c7..9e48e41 100644
--- a/library/src/main/java/com/evernote/android/job/work/TransientBundleHolder.java
+++ b/library/src/main/java/com/evernote/android/job/work/TransientBundleHolder.java
@@ -2,11 +2,13 @@
 
 import android.os.Bundle;
 import android.support.annotation.Nullable;
+import android.support.annotation.RestrictTo;
 import android.util.SparseArray;
 
 /**
  * @author rwondratschek
  */
+@RestrictTo(RestrictTo.Scope.LIBRARY)
 /*package*/ final class TransientBundleHolder {
 
     private TransientBundleHolder() {
