diff --git a/library/src/main/java/com/evernote/android/job/JobConfig.java b/library/src/main/java/com/evernote/android/job/JobConfig.java
index 9ce66c9..b8e4e04 100644
--- a/library/src/main/java/com/evernote/android/job/JobConfig.java
+++ b/library/src/main/java/com/evernote/android/job/JobConfig.java
@@ -30,6 +30,7 @@
 
 import com.evernote.android.job.util.JobCat;
 import com.evernote.android.job.util.JobLogger;
+import com.evernote.android.job.util.JobPreconditions;
 
 import java.util.EnumMap;
 import java.util.concurrent.TimeUnit;
@@ -233,6 +234,7 @@ public static int getJobIdOffset() {
      * @param jobIdOffset The offset for the very first job ID.
      */
     public static void setJobIdOffset(int jobIdOffset) {
+        JobPreconditions.checkArgumentNonnegative(jobIdOffset, "offset can't be negative");
         if (jobIdOffset > Integer.MAX_VALUE - 500) {
             throw new IllegalArgumentException("offset is too close to Integer.MAX_VALUE");
         }
diff --git a/library/src/test/java/com/evernote/android/job/JobConfigTest.java b/library/src/test/java/com/evernote/android/job/JobConfigTest.java
index cc5df9f..7faaff3 100644
--- a/library/src/test/java/com/evernote/android/job/JobConfigTest.java
+++ b/library/src/test/java/com/evernote/android/job/JobConfigTest.java
@@ -142,4 +142,20 @@ public void verifyJobIdOffset() {
 
         assertThat(jobId).isEqualTo(102);
     }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void verifyJobIdOffsetUpperBound() {
+        JobConfig.setJobIdOffset(Integer.MAX_VALUE - 500 + 1);
+    }
+
+    @Test(expected = IllegalArgumentException.class)
+    public void verifyJobIdOffsetLowerBound() {
+        JobConfig.setJobIdOffset(-1);
+    }
+
+    @Test
+    public void verifyJobIdOffsetBounds() {
+        JobConfig.setJobIdOffset(0);
+        JobConfig.setJobIdOffset(Integer.MAX_VALUE - 500);
+    }
 }
