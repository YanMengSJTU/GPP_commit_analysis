diff --git a/CHANGELOG.md b/CHANGELOG.md
index 0500d90..b0560e1 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,7 +1,7 @@
 ## 1.3.0-alpha02
 * Initialize the job storage on a background thread, see $471
 * Restrict usage of internal classes for internal usage only, see #465
-* Add a workaround for the internal crash in `JobIntentService`, see #255
+* Fix RuntimeException with WorkManager, see #464
 
 ## 1.3.0-alpha01 (2018-05-28)
 * Implement an API that uses the `WorkManager` for scheduling work items
diff --git a/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java b/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java
index a2f9405..9279f1e 100644
--- a/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java
@@ -3,6 +3,8 @@
 import android.arch.lifecycle.LiveData;
 import android.arch.lifecycle.Observer;
 import android.os.Bundle;
+import android.os.Handler;
+import android.os.Looper;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.test.InstrumentationRegistry;
@@ -173,7 +175,15 @@ public void onChanged(@Nullable List<WorkStatus> workStatuses) {
                 if (reference.get() == null) {
                     reference.set(workStatuses);
                 }
-                liveData.removeObserver(this);
+
+                final Observer<List<WorkStatus>> observer = this;
+                new Handler(Looper.getMainLooper()).post(new Runnable() {
+                    @Override
+                    public void run() {
+                        liveData.removeObserver(observer);
+                    }
+                });
+
                 latch.countDown();
             }
         });
diff --git a/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java b/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java
index cf5b369..8c230ce 100644
--- a/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java
+++ b/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java
@@ -4,6 +4,8 @@
 import android.arch.lifecycle.Observer;
 import android.content.Context;
 import android.os.Build;
+import android.os.Handler;
+import android.os.Looper;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 import android.support.annotation.RestrictTo;
@@ -37,9 +39,11 @@
 
     @SuppressWarnings({"FieldCanBeLocal", "unused"})
     private final Context mContext;
+    private final Handler mHandler;
 
     public JobProxyWorkManager(Context context) {
         mContext = context;
+        mHandler = new Handler(Looper.getMainLooper());
     }
 
     @Override
@@ -149,7 +153,15 @@ public void onChanged(@Nullable List<WorkStatus> workStatuses) {
                 if (reference.get() == null) {
                     reference.set(workStatuses);
                 }
-                liveData.removeObserver(this);
+
+                final Observer<List<WorkStatus>> observer = this;
+                mHandler.post(new Runnable() {
+                    @Override
+                    public void run() {
+                        liveData.removeObserver(observer);
+                    }
+                });
+
                 latch.countDown();
             }
         });
