diff --git a/library/src/test/java/android/support/v4/app/JobIntentServiceReset.java b/library/src/test/java/android/support/v4/app/JobIntentServiceReset.java
new file mode 100644
index 0000000..f3e20e4
--- /dev/null
+++ b/library/src/test/java/android/support/v4/app/JobIntentServiceReset.java
@@ -0,0 +1,14 @@
+package android.support.v4.app;
+
+/**
+ * @author rwondratschek
+ */
+public final class JobIntentServiceReset {
+    private JobIntentServiceReset() {
+        throw new IllegalArgumentException();
+    }
+
+    public static void reset() {
+        JobIntentService.sClassWorkEnqueuer.clear();
+    }
+}
diff --git a/library/src/test/java/com/evernote/android/job/BaseJobManagerTest.java b/library/src/test/java/com/evernote/android/job/BaseJobManagerTest.java
index 4dd00fe..fc97b04 100644
--- a/library/src/test/java/com/evernote/android/job/BaseJobManagerTest.java
+++ b/library/src/test/java/com/evernote/android/job/BaseJobManagerTest.java
@@ -119,7 +119,7 @@ protected void resetJob(int jobId) {
      * {@link Context#getApplicationContext()}.
      */
     public static Context createMockContext() {
-        // otherwise the JobScheduler isn't supported we check if the service is enable
+        // otherwise the JobScheduler isn't supported we check if the service is enabled
         // Robolectric doesn't parse services from the manifest, see https://github.com/robolectric/robolectric/issues/416
         PackageManager packageManager = mock(PackageManager.class);
         when(packageManager.queryBroadcastReceivers(any(Intent.class), anyInt())).thenReturn(Collections.singletonList(new ResolveInfo()));
diff --git a/library/src/test/java/com/evernote/android/job/JobManagerRule.java b/library/src/test/java/com/evernote/android/job/JobManagerRule.java
index 0b88ee8..0c05455 100644
--- a/library/src/test/java/com/evernote/android/job/JobManagerRule.java
+++ b/library/src/test/java/com/evernote/android/job/JobManagerRule.java
@@ -2,6 +2,7 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
+import android.support.v4.app.JobIntentServiceReset;
 
 import com.evernote.android.job.test.TestLogger;
 
@@ -23,6 +24,8 @@ public JobManagerRule(@NonNull JobCreator jobCreator, @NonNull Context context)
 
     @Override
     protected void before() throws Throwable {
+        JobIntentServiceReset.reset();
+
         JobConfig.addLogger(TestLogger.INSTANCE);
         JobConfig.setSkipJobReschedule(true);
 
diff --git a/library/src/test/java/com/evernote/android/job/JobRescheduleTest.java b/library/src/test/java/com/evernote/android/job/JobRescheduleTest.java
index 69c014c..b5bf68c 100644
--- a/library/src/test/java/com/evernote/android/job/JobRescheduleTest.java
+++ b/library/src/test/java/com/evernote/android/job/JobRescheduleTest.java
@@ -5,7 +5,6 @@
 import android.content.ContentValues;
 import android.content.Context;
 import android.content.Intent;
-import android.os.Build;
 import android.os.Bundle;
 
 import com.evernote.android.job.test.JobRobolectricTestRunner;
@@ -30,7 +29,7 @@
 public class JobRescheduleTest extends BaseJobManagerTest {
 
     @Test
-    @Config(sdk = Build.VERSION_CODES.LOLLIPOP_MR1)
+    @Config(sdk = 21)
     public void verifyOneOffJobRescheduled() throws Exception {
         assertThat(manager().getAllJobRequests()).isEmpty();
 
@@ -50,7 +49,7 @@ public void verifyOneOffJobRescheduled() throws Exception {
     }
 
     @Test
-    @Config(sdk = Build.VERSION_CODES.LOLLIPOP_MR1)
+    @Config(sdk = 21)
     public void verifyPeriodicJobRescheduled() throws Exception {
         assertThat(manager().getAllJobRequests()).isEmpty();
 
@@ -73,7 +72,7 @@ public void verifyPeriodicJobRescheduled() throws Exception {
     }
 
     @Test
-    @Config(sdk = Build.VERSION_CODES.LOLLIPOP_MR1)
+    @Config(sdk = 21)
     public void verifyExactJobRescheduled() throws Exception {
         assertThat(manager().getAllJobRequests()).isEmpty();
 
