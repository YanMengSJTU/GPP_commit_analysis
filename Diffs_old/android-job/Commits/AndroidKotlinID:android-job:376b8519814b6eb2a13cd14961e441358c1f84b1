diff --git a/library/build.gradle b/library/build.gradle
index 783b02a..80b2ebd 100644
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -20,7 +20,8 @@ dependencies {
     androidTestImplementation "androidx.work:work-testing:$workVersion"
 
     androidTestImplementation "com.facebook.stetho:stetho:$stethoVersion"
-    implementation "androidx.appcompat:appcompat:$androidXLibVersion"
+    androidTestImplementation "androidx.appcompat:appcompat:$androidXLibVersion"
+    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
 
     testImplementation "junit:junit:$junitVersion"
     testImplementation "org.mockito:mockito-core:$mockitoVersion"
diff --git a/library/src/androidTest/java/com/evernote/android/job/DisabledServiceTest.java b/library/src/androidTest/java/com/evernote/android/job/DisabledServiceTest.java
index 344abe4..4fa4c3e 100644
--- a/library/src/androidTest/java/com/evernote/android/job/DisabledServiceTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/DisabledServiceTest.java
@@ -4,12 +4,10 @@
 import android.content.Context;
 import android.content.pm.PackageManager;
 import android.os.Build;
-import androidx.test.InstrumentationRegistry;
+import androidx.test.core.app.ApplicationProvider;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import androidx.test.filters.LargeTest;
-import androidx.test.runner.AndroidJUnit4;
-
 import com.evernote.android.job.v21.PlatformJobService;
-
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Rule;
@@ -36,7 +34,7 @@
 
     @Before
     public void prepare() {
-        mContext = InstrumentationRegistry.getTargetContext();
+        mContext = ApplicationProvider.getApplicationContext();
         mPackageManager = mContext.getPackageManager();
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
             mComponent = new ComponentName(mContext, PlatformJobService.class);
diff --git a/library/src/androidTest/java/com/evernote/android/job/Platform21Test.java b/library/src/androidTest/java/com/evernote/android/job/Platform21Test.java
index 6091678..f69e695 100644
--- a/library/src/androidTest/java/com/evernote/android/job/Platform21Test.java
+++ b/library/src/androidTest/java/com/evernote/android/job/Platform21Test.java
@@ -2,7 +2,7 @@
 
 import android.os.Build;
 import androidx.test.filters.LargeTest;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 import org.junit.Rule;
 import org.junit.Test;
@@ -37,7 +37,7 @@ public void test100DistinctJobsLimit() {
     }
 
     @Test
-    public void testRescheduleService() throws Exception {
+    public void testRescheduleService() {
         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP);
 
         int jobId = new JobRequest.Builder("tag")
@@ -56,7 +56,7 @@ public void testRescheduleService() throws Exception {
     }
 
     @Test
-    public void verifyNotLandingInCrashLoop() throws Exception {
+    public void verifyNotLandingInCrashLoop() {
         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.N_MR1);
 
         try {
@@ -96,7 +96,7 @@ public void verifyNotLandingInCrashLoop() throws Exception {
         assertThat(mJobManagerRule.getAllPendingJobsFromScheduler().size()).isGreaterThanOrEqualTo(jobCount);
     }
 
-    private void waitForJobRescheduleService() throws InterruptedException {
+    private void waitForJobRescheduleService() {
         new JobRescheduleService().rescheduleJobs(mJobManagerRule.getManager());
     }
 }
diff --git a/library/src/androidTest/java/com/evernote/android/job/PlatformJobManagerRule.java b/library/src/androidTest/java/com/evernote/android/job/PlatformJobManagerRule.java
index f8b8c65..dcda31d 100644
--- a/library/src/androidTest/java/com/evernote/android/job/PlatformJobManagerRule.java
+++ b/library/src/androidTest/java/com/evernote/android/job/PlatformJobManagerRule.java
@@ -4,14 +4,12 @@
 import android.app.job.JobScheduler;
 import android.content.Context;
 import android.os.Build;
-import androidx.test.InstrumentationRegistry;
-
-import org.junit.rules.ExternalResource;
-
+import androidx.test.core.app.ApplicationProvider;
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
 import java.util.concurrent.TimeUnit;
+import org.junit.rules.ExternalResource;
 
 /**
  * @author rwondratschek
@@ -21,12 +19,12 @@
     private JobManager mManager;
 
     @Override
-    protected void before() throws Throwable {
+    protected void before() {
         JobConfig.setJobReschedulePause(0, TimeUnit.MILLISECONDS);
         JobConfig.setSkipJobReschedule(true);
         JobConfig.setApiEnabled(JobApi.WORK_MANAGER, false);
 
-        mManager = JobManager.create(InstrumentationRegistry.getTargetContext());
+        mManager = JobManager.create(ApplicationProvider.getApplicationContext());
         mManager.cancelAll();
     }
 
@@ -48,7 +46,7 @@ public JobManager getManager() {
     }
 
     public JobScheduler getJobScheduler() {
-        return (JobScheduler) InstrumentationRegistry.getTargetContext().getSystemService(Context.JOB_SCHEDULER_SERVICE);
+        return (JobScheduler) ApplicationProvider.getApplicationContext().getSystemService(Context.JOB_SCHEDULER_SERVICE);
     }
 
     public List<JobInfo> getAllPendingJobsFromScheduler() {
diff --git a/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java b/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java
index 9db90ec..84e198b 100644
--- a/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java
@@ -4,24 +4,21 @@
 import android.content.Context;
 import android.os.Bundle;
 import androidx.annotation.NonNull;
-import androidx.test.InstrumentationRegistry;
+import androidx.test.core.app.ApplicationProvider;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import androidx.test.filters.LargeTest;
-import androidx.test.runner.AndroidJUnit4;
-
 import com.evernote.android.job.gcm.PlatformGcmService;
 import com.evernote.android.job.v14.PlatformAlarmService;
 import com.evernote.android.job.v14.PlatformAlarmServiceExact;
 import com.evernote.android.job.v21.PlatformJobService;
-
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
 import org.junit.Before;
 import org.junit.Ignore;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-import java.util.concurrent.CountDownLatch;
-import java.util.concurrent.TimeUnit;
-
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.junit.Assume.assumeTrue;
 
@@ -121,7 +118,7 @@ private void testOneOff(JobApi api) throws Exception {
 
     private void testOneOff(JobApi api, long wait, TimeUnit timeUnit) throws Exception {
         // ignore test if not supported
-        assumeTrue(api.isSupported(InstrumentationRegistry.getTargetContext()));
+        assumeTrue(api.isSupported(ApplicationProvider.getApplicationContext()));
 
         switch (api) {
             case V_14:
diff --git a/library/src/androidTest/java/com/evernote/android/job/PlatformWorkManagerRule.java b/library/src/androidTest/java/com/evernote/android/job/PlatformWorkManagerRule.java
index 4aec8ae..31604c6 100644
--- a/library/src/androidTest/java/com/evernote/android/job/PlatformWorkManagerRule.java
+++ b/library/src/androidTest/java/com/evernote/android/job/PlatformWorkManagerRule.java
@@ -2,18 +2,15 @@
 
 import android.content.Context;
 import androidx.annotation.NonNull;
-import androidx.test.InstrumentationRegistry;
-
-import org.junit.rules.ExternalResource;
-
-import java.util.List;
-import java.util.concurrent.Executor;
-import java.util.concurrent.TimeUnit;
-
+import androidx.test.core.app.ApplicationProvider;
 import androidx.work.Configuration;
 import androidx.work.WorkInfo;
 import androidx.work.WorkManager;
 import androidx.work.testing.WorkManagerTestInitHelper;
+import java.util.List;
+import java.util.concurrent.Executor;
+import java.util.concurrent.TimeUnit;
+import org.junit.rules.ExternalResource;
 
 /**
  * @author rwondratschek
@@ -24,7 +21,7 @@
 
     @Override
     protected void before() {
-        Context context = InstrumentationRegistry.getTargetContext();
+        Context context = ApplicationProvider.getApplicationContext();
 
         Executor executor = new Executor() {
             @Override
diff --git a/library/src/androidTest/java/com/evernote/android/job/TransientBundleRescheduleTest.java b/library/src/androidTest/java/com/evernote/android/job/TransientBundleRescheduleTest.java
index d161429..c7dcf1a 100644
--- a/library/src/androidTest/java/com/evernote/android/job/TransientBundleRescheduleTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/TransientBundleRescheduleTest.java
@@ -2,18 +2,16 @@
 
 import android.os.Bundle;
 import androidx.annotation.NonNull;
-import androidx.test.InstrumentationRegistry;
+import androidx.test.core.app.ApplicationProvider;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import androidx.test.filters.LargeTest;
-import androidx.test.runner.AndroidJUnit4;
-
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
 import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-import java.util.concurrent.CountDownLatch;
-import java.util.concurrent.TimeUnit;
-
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.junit.Assume.assumeTrue;
 
@@ -48,7 +46,7 @@ public void testRescheduleHasTransientBundle() throws Exception {
 
     private void testOneOff(JobApi api, long wait, TimeUnit timeUnit) throws Exception {
         // ignore test if not supported
-        assumeTrue(api.isSupported(InstrumentationRegistry.getTargetContext()));
+        assumeTrue(api.isSupported(ApplicationProvider.getApplicationContext()));
 
         JobConfig.forceApi(api);
 
@@ -62,7 +60,7 @@ private void testOneOff(JobApi api, long wait, TimeUnit timeUnit) throws Excepti
         JobRequest request = mManager.getJobRequest(jobId);
         assertThat(request).isNotNull();
 
-        boolean scheduled = api.getProxy(InstrumentationRegistry.getContext()).isPlatformJobScheduled(request);
+        boolean scheduled = api.getProxy(ApplicationProvider.getApplicationContext()).isPlatformJobScheduled(request);
         assertThat(scheduled).isTrue();
 
         assertThat(mLatch.await(wait, timeUnit)).isTrue();
diff --git a/library/src/androidTest/java/com/evernote/android/job/TransientBundleTest.java b/library/src/androidTest/java/com/evernote/android/job/TransientBundleTest.java
index 874cda3..8114cd3 100644
--- a/library/src/androidTest/java/com/evernote/android/job/TransientBundleTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/TransientBundleTest.java
@@ -2,19 +2,17 @@
 
 import android.os.Bundle;
 import androidx.annotation.NonNull;
-import androidx.test.InstrumentationRegistry;
+import androidx.test.core.app.ApplicationProvider;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import androidx.test.filters.LargeTest;
-import androidx.test.runner.AndroidJUnit4;
-
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
 import org.junit.Before;
 import org.junit.Ignore;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-import java.util.concurrent.CountDownLatch;
-import java.util.concurrent.TimeUnit;
-
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.junit.Assume.assumeTrue;
 
@@ -103,7 +101,7 @@ private void testOneOff(JobApi api, long wait, TimeUnit timeUnit) throws Excepti
         mJob = new TestJob();
 
         // ignore test if not supported
-        assumeTrue(api.isSupported(InstrumentationRegistry.getTargetContext()));
+        assumeTrue(api.isSupported(ApplicationProvider.getApplicationContext()));
 
         JobConfig.forceApi(api);
 
@@ -116,7 +114,7 @@ private void testOneOff(JobApi api, long wait, TimeUnit timeUnit) throws Excepti
         JobRequest request = mManager.getJobRequest(jobId);
         assertThat(request).isNotNull();
 
-        boolean scheduled = api.getProxy(InstrumentationRegistry.getContext()).isPlatformJobScheduled(request);
+        boolean scheduled = api.getProxy(ApplicationProvider.getApplicationContext()).isPlatformJobScheduled(request);
         assertThat(scheduled).isTrue();
 
         mJob.verifyJob(wait, timeUnit);
diff --git a/library/src/androidTest/java/com/evernote/android/job/TransientJobCleanUpTest.java b/library/src/androidTest/java/com/evernote/android/job/TransientJobCleanUpTest.java
index 6297ade..a78777d 100644
--- a/library/src/androidTest/java/com/evernote/android/job/TransientJobCleanUpTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/TransientJobCleanUpTest.java
@@ -5,7 +5,7 @@
 import android.os.Build;
 import android.os.Bundle;
 import androidx.test.filters.LargeTest;
-import androidx.test.runner.AndroidJUnit4;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 
 import org.junit.Before;
 import org.junit.Rule;
@@ -33,7 +33,7 @@ public void prepare() {
     }
 
     @Test
-    public void verifyJobDeletedFromDatabaseSpecific() throws Exception {
+    public void verifyJobDeletedFromDatabaseSpecific() {
         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP);
         JobConfig.forceApi(JobApi.V_21);
 
@@ -56,17 +56,14 @@ public void verifyJobDeletedFromDatabaseSpecific() throws Exception {
         // cached request gone
         assertThat(mManager.getJobRequest(jobId)).isNull();
 
-        SQLiteDatabase database = mManager.getJobStorage().getDatabase();
-        try {
+        try (SQLiteDatabase database = mManager.getJobStorage().getDatabase()) {
             long numEntries = DatabaseUtils.queryNumEntries(database, JobStorage.JOB_TABLE_NAME);
             assertThat(numEntries).isEqualTo(0);
-        } finally {
-            database.close();
         }
     }
 
     @Test
-    public void verifyJobDeletedFromDatabaseAll() throws Exception {
+    public void verifyJobDeletedFromDatabaseAll() {
         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP);
         JobConfig.forceApi(JobApi.V_21);
 
@@ -89,12 +86,9 @@ public void verifyJobDeletedFromDatabaseAll() throws Exception {
         // cached request gone
         assertThat(mManager.getAllJobRequests()).isEmpty();
 
-        SQLiteDatabase database = mManager.getJobStorage().getDatabase();
-        try {
+        try (SQLiteDatabase database = mManager.getJobStorage().getDatabase()) {
             long numEntries = DatabaseUtils.queryNumEntries(database, JobStorage.JOB_TABLE_NAME);
             assertThat(numEntries).isEqualTo(0);
-        } finally {
-            database.close();
         }
     }
 }
diff --git a/library/src/androidTest/java/com/evernote/android/job/v21/TransientBundleCompatTest.java b/library/src/androidTest/java/com/evernote/android/job/v21/TransientBundleCompatTest.java
index e4cb5bf..641315f 100644
--- a/library/src/androidTest/java/com/evernote/android/job/v21/TransientBundleCompatTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/v21/TransientBundleCompatTest.java
@@ -5,23 +5,20 @@
 import android.content.Intent;
 import android.os.Build;
 import android.os.Bundle;
-import androidx.test.InstrumentationRegistry;
-import androidx.test.runner.AndroidJUnit4;
-
+import androidx.test.core.app.ApplicationProvider;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import com.evernote.android.job.JobApi;
 import com.evernote.android.job.JobConfig;
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.PlatformJobManagerRule;
 import com.evernote.android.job.v14.PlatformAlarmServiceExact;
-
+import java.util.concurrent.TimeUnit;
 import org.junit.FixMethodOrder;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.MethodSorters;
 
-import java.util.concurrent.TimeUnit;
-
 import static org.assertj.core.api.Assertions.assertThat;
 import static org.junit.Assume.assumeTrue;
 
@@ -37,7 +34,7 @@
     public PlatformJobManagerRule mJobManagerRule = new PlatformJobManagerRule();
 
     @Test
-    public void verifyAlarmIsCanceled() throws Exception {
+    public void verifyAlarmIsCanceled() {
         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP);
         JobConfig.forceApi(JobApi.V_21);
 
@@ -54,7 +51,7 @@ public void verifyAlarmIsCanceled() throws Exception {
     }
 
     @Test
-    public void verifyAlarmIsCanceledAfterStart() throws Exception {
+    public void verifyAlarmIsCanceledAfterStart() {
         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP);
         JobConfig.forceApi(JobApi.V_21);
 
@@ -72,7 +69,7 @@ public void verifyAlarmIsCanceledAfterStart() throws Exception {
     }
 
     @Test
-    public void verifyAlarmNotCanceledForPeriodicAfterStart() throws Exception {
+    public void verifyAlarmNotCanceledForPeriodicAfterStart() {
         assumeTrue(Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP);
         JobConfig.forceApi(JobApi.V_21);
 
@@ -102,9 +99,9 @@ public void verifyAlarmNotCanceledForPeriodicAfterStart() throws Exception {
     }
 
     @Test
-    public void verifyNativeImplementationIsUsedWithO() throws Exception {
+    public void verifyNativeImplementationIsUsedWithO() {
         // ignore test if not supported
-        assumeTrue(JobApi.V_26.isSupported(InstrumentationRegistry.getTargetContext()));
+        assumeTrue(JobApi.V_26.isSupported(ApplicationProvider.getApplicationContext()));
         JobConfig.forceApi(JobApi.V_26);
 
         int jobId = scheduleJob();
@@ -115,7 +112,7 @@ public void verifyNativeImplementationIsUsedWithO() throws Exception {
     }
 
     private Context context() {
-        return InstrumentationRegistry.getContext();
+        return ApplicationProvider.getApplicationContext();
     }
 
     private int scheduleJob() {
diff --git a/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java b/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java
index a1bc83b..7625cdc 100644
--- a/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java
@@ -3,24 +3,20 @@
 import android.os.Bundle;
 import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
-import androidx.test.InstrumentationRegistry;
+import androidx.test.core.app.ApplicationProvider;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import androidx.test.filters.LargeTest;
-import androidx.test.runner.AndroidJUnit4;
-
+import androidx.work.WorkInfo;
 import com.evernote.android.job.Job;
 import com.evernote.android.job.JobCreator;
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.PlatformWorkManagerRule;
-
-import org.junit.Rule;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-
 import java.util.List;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicBoolean;
-
-import androidx.work.WorkInfo;
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
 
 import static org.assertj.core.api.Assertions.assertThat;
 
@@ -59,7 +55,7 @@ public void testCancel() {
                 .schedule();
 
         JobRequest request = mWorkManagerRule.getManager().getJobRequest(jobId);
-        JobProxyWorkManager jobProxyWorkManager = new JobProxyWorkManager(InstrumentationRegistry.getTargetContext());
+        JobProxyWorkManager jobProxyWorkManager = new JobProxyWorkManager(ApplicationProvider.getApplicationContext());
         assertThat(jobProxyWorkManager.isPlatformJobScheduled(request)).isTrue();
 
         String tag = JobProxyWorkManager.createTag(jobId);
@@ -135,7 +131,6 @@ public Job create(@NonNull String tag) {
         assertThat(state).isEqualTo(WorkInfo.State.SUCCEEDED);
     }
 
-    @SuppressWarnings("ConstantConditions")
     private void testConstraints(JobRequest.Builder builder) {
         int jobId = builder
                 .setRequiredNetworkType(JobRequest.NetworkType.METERED)
