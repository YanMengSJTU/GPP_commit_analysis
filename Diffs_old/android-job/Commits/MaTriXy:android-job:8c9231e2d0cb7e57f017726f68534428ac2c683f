diff --git a/library/src/test/java/com/evernote/android/job/util/DeviceTest.java b/library/src/test/java/com/evernote/android/job/util/DeviceTest.java
index 6e45670..cd49b45 100644
--- a/library/src/test/java/com/evernote/android/job/util/DeviceTest.java
+++ b/library/src/test/java/com/evernote/android/job/util/DeviceTest.java
@@ -3,7 +3,6 @@
 import android.content.Context;
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
-import android.telephony.TelephonyManager;
 import android.test.mock.MockContext;
 
 import com.evernote.android.job.JobRequest;
@@ -69,16 +68,13 @@ public void testNetworkStateMeteredNotRoaming() {
         when(networkInfo.isConnected()).thenReturn(true);
         when(networkInfo.isConnectedOrConnecting()).thenReturn(true);
         when(networkInfo.getType()).thenReturn(ConnectivityManager.TYPE_MOBILE);
+        when(networkInfo.isRoaming()).thenReturn(false);
 
         ConnectivityManager connectivityManager = mock(ConnectivityManager.class);
         when(connectivityManager.getActiveNetworkInfo()).thenReturn(networkInfo);
 
-        TelephonyManager telephonyManager = mock(TelephonyManager.class);
-        when(telephonyManager.isNetworkRoaming()).thenReturn(false);
-
         Context context = mock(MockContext.class);
         when(context.getSystemService(Context.CONNECTIVITY_SERVICE)).thenReturn(connectivityManager);
-        when(context.getSystemService(Context.TELEPHONY_SERVICE)).thenReturn(telephonyManager);
 
         assertThat(Device.getNetworkType(context)).isEqualTo(JobRequest.NetworkType.NOT_ROAMING);
     }
@@ -89,16 +85,13 @@ public void testNetworkStateRoaming() {
         when(networkInfo.isConnected()).thenReturn(true);
         when(networkInfo.isConnectedOrConnecting()).thenReturn(true);
         when(networkInfo.getType()).thenReturn(ConnectivityManager.TYPE_MOBILE);
+        when(networkInfo.isRoaming()).thenReturn(true);
 
         ConnectivityManager connectivityManager = mock(ConnectivityManager.class);
         when(connectivityManager.getActiveNetworkInfo()).thenReturn(networkInfo);
 
-        TelephonyManager telephonyManager = mock(TelephonyManager.class);
-        when(telephonyManager.isNetworkRoaming()).thenReturn(true);
-
         Context context = mock(MockContext.class);
         when(context.getSystemService(Context.CONNECTIVITY_SERVICE)).thenReturn(connectivityManager);
-        when(context.getSystemService(Context.TELEPHONY_SERVICE)).thenReturn(telephonyManager);
 
         assertThat(Device.getNetworkType(context)).isEqualTo(JobRequest.NetworkType.CONNECTED);
     }
@@ -109,16 +102,13 @@ public void testNetworkStateWifiAndMobile() {
         when(networkInfo.isConnected()).thenReturn(true);
         when(networkInfo.isConnectedOrConnecting()).thenReturn(true);
         when(networkInfo.getType()).thenReturn(ConnectivityManager.TYPE_WIFI);
+        when(networkInfo.isRoaming()).thenReturn(false);
 
         ConnectivityManager connectivityManager = mock(ConnectivityManager.class);
         when(connectivityManager.getActiveNetworkInfo()).thenReturn(networkInfo);
 
-        TelephonyManager telephonyManager = mock(TelephonyManager.class);
-        when(telephonyManager.isNetworkRoaming()).thenReturn(false);
-
         Context context = mock(MockContext.class);
         when(context.getSystemService(Context.CONNECTIVITY_SERVICE)).thenReturn(connectivityManager);
-        when(context.getSystemService(Context.TELEPHONY_SERVICE)).thenReturn(telephonyManager);
 
         assertThat(Device.getNetworkType(context)).isEqualTo(JobRequest.NetworkType.UNMETERED);
     }
@@ -129,16 +119,13 @@ public void testNetworkStateWifiAndRoaming() {
         when(networkInfo.isConnected()).thenReturn(true);
         when(networkInfo.isConnectedOrConnecting()).thenReturn(true);
         when(networkInfo.getType()).thenReturn(ConnectivityManager.TYPE_WIFI);
+        when(networkInfo.isRoaming()).thenReturn(true);
 
         ConnectivityManager connectivityManager = mock(ConnectivityManager.class);
         when(connectivityManager.getActiveNetworkInfo()).thenReturn(networkInfo);
 
-        TelephonyManager telephonyManager = mock(TelephonyManager.class);
-        when(telephonyManager.isNetworkRoaming()).thenReturn(true);
-
         Context context = mock(MockContext.class);
         when(context.getSystemService(Context.CONNECTIVITY_SERVICE)).thenReturn(connectivityManager);
-        when(context.getSystemService(Context.TELEPHONY_SERVICE)).thenReturn(telephonyManager);
 
         assertThat(Device.getNetworkType(context)).isEqualTo(JobRequest.NetworkType.UNMETERED);
     }
diff --git a/library/src/test/java/com/evernote/android/job/util/TestLogger.java b/library/src/test/java/com/evernote/android/job/util/LoggerTest.java
similarity index 99%
rename from library/src/test/java/com/evernote/android/job/util/TestLogger.java
rename to library/src/test/java/com/evernote/android/job/util/LoggerTest.java
index d9b3ffc..ef757ef 100644
--- a/library/src/test/java/com/evernote/android/job/util/TestLogger.java
+++ b/library/src/test/java/com/evernote/android/job/util/LoggerTest.java
@@ -19,7 +19,7 @@
  * @author rwondratschek
  */
 @FixMethodOrder(MethodSorters.JVM)
-public class TestLogger {
+public class LoggerTest {
 
     private boolean mResetValueCalled;
 
