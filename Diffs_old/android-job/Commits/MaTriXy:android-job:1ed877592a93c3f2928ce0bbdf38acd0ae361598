diff --git a/CHANGELOG.md b/CHANGELOG.md
index 148547e..fbd503a 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -4,6 +4,7 @@
 * Fix crash when rescheduling jobs, see #164
 * Fix wrong returned network type, see #166
 * Expose failure count in the `JobRequest` class, see #168
+* Don't silently eat `JobScheduler`'s limit exception
 
 ## 1.1.8 (2017-03-23)
 
diff --git a/build.gradle b/build.gradle
index f9ec012..2dc890b 100644
--- a/build.gradle
+++ b/build.gradle
@@ -27,7 +27,7 @@ ext {
     junitVersion = '4.12'
     assertjVersion = '3.6.2'
     mockitoVersion = '2.6.2'
-    robolectricVersion = '3.3.1'
+    robolectricVersion = '3.3.2'
 }
 
 task wrapper(type: Wrapper) {
diff --git a/library/src/androidTest/java/com/evernote/android/job/JobManagerRule.java b/library/src/androidTest/java/com/evernote/android/job/JobManagerRule.java
new file mode 100644
index 0000000..96ae15c
--- /dev/null
+++ b/library/src/androidTest/java/com/evernote/android/job/JobManagerRule.java
@@ -0,0 +1,28 @@
+package com.evernote.android.job;
+
+import android.support.test.InstrumentationRegistry;
+
+import org.junit.rules.ExternalResource;
+
+/**
+ * @author rwondratschek
+ */
+public class JobManagerRule extends ExternalResource {
+
+    private JobManager mManager;
+
+    @Override
+    protected void before() throws Throwable {
+        mManager = JobManager.create(InstrumentationRegistry.getTargetContext());
+    }
+
+    @Override
+    protected void after() {
+        mManager.cancelAll();
+        mManager.destroy();
+    }
+
+    public JobManager getManager() {
+        return mManager;
+    }
+}
diff --git a/library/src/androidTest/java/com/evernote/android/job/Platform21Test.java b/library/src/androidTest/java/com/evernote/android/job/Platform21Test.java
new file mode 100644
index 0000000..89a411e
--- /dev/null
+++ b/library/src/androidTest/java/com/evernote/android/job/Platform21Test.java
@@ -0,0 +1,29 @@
+package com.evernote.android.job;
+
+import android.support.test.filters.LargeTest;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Rule;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+/**
+ * @author rwondratschek
+ */
+@RunWith(AndroidJUnit4.class)
+@LargeTest
+public class Platform21Test {
+
+    @Rule
+    public JobManagerRule mJobManagerRule = new JobManagerRule();
+
+    @Test(expected = IllegalStateException.class)
+    public void test100DistinctJobsLimit() {
+        for (int i = 0; i < 130; i++) {
+            new JobRequest.Builder("tag")
+                    .setExecutionWindow(30_000, 40_000)
+                    .build()
+                    .schedule();
+        }
+    }
+}
diff --git a/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java b/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java
index 5bd83fc..b856e21 100644
--- a/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java
@@ -11,8 +11,8 @@
 import com.evernote.android.job.v14.PlatformAlarmService;
 import com.evernote.android.job.v21.PlatformJobService;
 
-import org.junit.After;
 import org.junit.Before;
+import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -33,18 +33,15 @@
 
     private TestJob mJob;
 
+    @Rule
+    public JobManagerRule mJobManagerRule = new JobManagerRule();
+
     @Before
     public void prepare() {
-        mManager = JobManager.create(InstrumentationRegistry.getTargetContext());
+        mManager = mJobManagerRule.getManager();
         mManager.addJobCreator(new TestJobCreator());
     }
 
-    @After
-    public void clear() {
-        mManager.cancelAll();
-        mManager.destroy();
-    }
-
     @Test
     public void testApi14() throws Exception {
         testOneOff(JobApi.V_14);
diff --git a/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java b/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java
index 60e21ea..2c1ba7c 100644
--- a/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java
+++ b/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java
@@ -171,12 +171,7 @@ protected final JobScheduler getJobScheduler() {
     }
 
     protected final int schedule(JobInfo jobInfo) {
-        try {
-            return getJobScheduler().schedule(jobInfo);
-        } catch (Exception e) {
-            mCat.e(e);
-            return JobScheduler.RESULT_FAILURE;
-        }
+        return getJobScheduler().schedule(jobInfo);
     }
 
     protected static String scheduleResultToString(int scheduleResult) {
