diff --git a/CHANGELOG.md b/CHANGELOG.md
index 0a81bdf..f76ecaa 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -2,6 +2,7 @@
 
 * Handle NPE inside of `JobScheduler`
 * Handle 'Package manager has died' crash
+* Save the highest job ID in a pref file so that it isn't lost when no job is in the database anymore (makes debugging easier)
 
 ## 1.1.11 (2017-06-05)
 
diff --git a/library/src/main/java/com/evernote/android/job/JobStorage.java b/library/src/main/java/com/evernote/android/job/JobStorage.java
index fc457af..7c23bbc 100644
--- a/library/src/main/java/com/evernote/android/job/JobStorage.java
+++ b/library/src/main/java/com/evernote/android/job/JobStorage.java
@@ -58,6 +58,7 @@
 
     private static final CatLog CAT = new JobCat("JobStorage");
 
+    private static final String JOB_ID_COUNTER = "JOB_ID_COUNTER_v2";
     private static final String FAILED_DELETE_IDS = "FAILED_DELETE_IDS";
 
     public static final String PREF_FILE_NAME = "evernote_jobs";
@@ -229,6 +230,8 @@ public synchronized int nextJobId() {
             mJobCounter.set(id);
         }
 
+        mPreferences.edit().putInt(JOB_ID_COUNTER, id).apply();
+
         return id;
     }
 
@@ -314,22 +317,23 @@ private JobRequest load(int id, boolean includeTransient) {
         SQLiteDatabase database = null;
         Cursor cursor = null;
 
+        int jobId = 0;
+
         try {
             database = getDatabase();
             cursor = database.rawQuery("SELECT MAX(" + COLUMN_ID + ") FROM " + JOB_TABLE_NAME, null);
             if (cursor != null && cursor.moveToFirst()) {
-                return cursor.getInt(0);
-            } else {
-                return 0;
+                jobId = cursor.getInt(0);
             }
         } catch (Exception e) {
             CAT.e(e);
-            return 0;
 
         } finally {
             closeCursor(cursor);
             closeDatabase(database);
         }
+
+        return Math.max(jobId, mPreferences.getInt(JOB_ID_COUNTER, 0));
     }
 
     private void addFailedDeleteId(int id) {
diff --git a/library/src/test/java/com/evernote/android/job/JobManagerTest.java b/library/src/test/java/com/evernote/android/job/JobManagerTest.java
index f61c435..a0b1297 100644
--- a/library/src/test/java/com/evernote/android/job/JobManagerTest.java
+++ b/library/src/test/java/com/evernote/android/job/JobManagerTest.java
@@ -1,5 +1,6 @@
 package com.evernote.android.job;
 
+import android.content.Context;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
 
@@ -239,10 +240,15 @@ public void testJobIdIncremented() throws Exception {
 
         assertThat(manager().getJobStorage().getMaxJobId()).isEqualTo(1);
 
-        // that does increase the ID, but that doesn't matter anymore what's in the memory after the app terminated
         assertThat(manager().getJobStorage().nextJobId()).isEqualTo(2);
         assertThat(manager().getJobStorage().nextJobId()).isEqualTo(3);
 
+        // Once an ID has been used it's not allowed to use it again, even if the job wasn't saved for some reason
+        assertThat(manager().getJobStorage().getMaxJobId()).isEqualTo(3);
+
+        context().getSharedPreferences(JobStorage.PREF_FILE_NAME, Context.MODE_PRIVATE).edit().clear().apply();
+
+        // if something goes wrong with the pref file, use the highest value from the database
         assertThat(manager().getJobStorage().getMaxJobId()).isEqualTo(1);
     }
 }
