diff --git a/library/src/main/java/com/evernote/android/job/Job.java b/library/src/main/java/com/evernote/android/job/Job.java
index c9b67c3..c135cfb 100644
--- a/library/src/main/java/com/evernote/android/job/Job.java
+++ b/library/src/main/java/com/evernote/android/job/Job.java
@@ -175,15 +175,19 @@ protected boolean isRequirementDeviceIdleMet() {
      */
     protected boolean isRequirementNetworkTypeMet() {
         JobRequest.NetworkType requirement = getParams().getRequest().requiredNetworkType();
+        if (requirement == JobRequest.NetworkType.ANY) {
+            return true;
+        }
+
+        JobRequest.NetworkType current = Device.getNetworkType(getContext());
+
         switch (requirement) {
-            case ANY:
-                return true;
-            case UNMETERED:
-                JobRequest.NetworkType current = Device.getNetworkType(getContext());
-                return JobRequest.NetworkType.UNMETERED.equals(current);
             case CONNECTED:
-                current = Device.getNetworkType(getContext());
-                return !JobRequest.NetworkType.ANY.equals(current);
+                return current != JobRequest.NetworkType.ANY;
+            case NOT_ROAMING:
+                return current == JobRequest.NetworkType.NOT_ROAMING || current == JobRequest.NetworkType.UNMETERED;
+            case UNMETERED:
+                return current == JobRequest.NetworkType.UNMETERED;
             default:
                 throw new IllegalStateException("not implemented");
         }
diff --git a/library/src/main/java/com/evernote/android/job/JobRequest.java b/library/src/main/java/com/evernote/android/job/JobRequest.java
index bbb0222..03a8c0c 100644
--- a/library/src/main/java/com/evernote/android/job/JobRequest.java
+++ b/library/src/main/java/com/evernote/android/job/JobRequest.java
@@ -908,6 +908,10 @@ public int hashCode() {
         /**
          * Network must be connected and unmetered.
          */
-        UNMETERED
+        UNMETERED,
+        /**
+         * Network must be connected and not roaming, but can be metered.
+         */
+        NOT_ROAMING
     }
 }
diff --git a/library/src/main/java/com/evernote/android/job/gcm/JobProxyGcm.java b/library/src/main/java/com/evernote/android/job/gcm/JobProxyGcm.java
index 4e9a6ee..a4db47d 100644
--- a/library/src/main/java/com/evernote/android/job/gcm/JobProxyGcm.java
+++ b/library/src/main/java/com/evernote/android/job/gcm/JobProxyGcm.java
@@ -139,6 +139,8 @@ protected int convertNetworkType(@NonNull JobRequest.NetworkType networkType) {
                 return Task.NETWORK_STATE_CONNECTED;
             case UNMETERED:
                 return Task.NETWORK_STATE_UNMETERED;
+            case NOT_ROAMING:
+                return Task.NETWORK_STATE_UNMETERED; // use as fallback, NOT_ROAMING not supported
             default:
                 throw new IllegalStateException("not implemented");
         }
diff --git a/library/src/main/java/com/evernote/android/job/gcm/PlatformGcmService.java b/library/src/main/java/com/evernote/android/job/gcm/PlatformGcmService.java
index 81f721c..7b2c33a 100644
--- a/library/src/main/java/com/evernote/android/job/gcm/PlatformGcmService.java
+++ b/library/src/main/java/com/evernote/android/job/gcm/PlatformGcmService.java
@@ -25,13 +25,12 @@
  */
 package com.evernote.android.job.gcm;
 
-import com.google.android.gms.gcm.GcmNetworkManager;
-import com.google.android.gms.gcm.GcmTaskService;
-import com.google.android.gms.gcm.TaskParams;
-
 import com.evernote.android.job.Job;
 import com.evernote.android.job.JobProxy;
 import com.evernote.android.job.JobRequest;
+import com.google.android.gms.gcm.GcmNetworkManager;
+import com.google.android.gms.gcm.GcmTaskService;
+import com.google.android.gms.gcm.TaskParams;
 
 /**
  * @author rwondratschek
diff --git a/library/src/main/java/com/evernote/android/job/util/Device.java b/library/src/main/java/com/evernote/android/job/util/Device.java
index 0f75494..05935a7 100644
--- a/library/src/main/java/com/evernote/android/job/util/Device.java
+++ b/library/src/main/java/com/evernote/android/job/util/Device.java
@@ -34,7 +34,9 @@
 import android.os.BatteryManager;
 import android.os.Build;
 import android.os.PowerManager;
+import android.support.annotation.NonNull;
 import android.support.v4.net.ConnectivityManagerCompat;
+import android.telephony.TelephonyManager;
 
 import com.evernote.android.job.JobRequest;
 
@@ -81,6 +83,7 @@ public static boolean isIdle(Context context) {
         }
     }
 
+    @NonNull
     public static JobRequest.NetworkType getNetworkType(Context context) {
         ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
         NetworkInfo networkInfo = connectivityManager.getActiveNetworkInfo();
@@ -88,7 +91,12 @@ public static boolean isIdle(Context context) {
             return JobRequest.NetworkType.ANY;
         }
 
+        TelephonyManager telephonyManager = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
+        if (telephonyManager != null && telephonyManager.isNetworkRoaming()) {
+            return JobRequest.NetworkType.CONNECTED;
+        }
+
         boolean metered = ConnectivityManagerCompat.isActiveNetworkMetered(connectivityManager);
-        return metered ? JobRequest.NetworkType.CONNECTED : JobRequest.NetworkType.UNMETERED;
+        return metered ? JobRequest.NetworkType.NOT_ROAMING : JobRequest.NetworkType.UNMETERED;
     }
 }
diff --git a/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java b/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java
index bcb22e6..18699c4 100644
--- a/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java
+++ b/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java
@@ -159,6 +159,8 @@ protected int convertNetworkType(@NonNull JobRequest.NetworkType networkType) {
                 return JobInfo.NETWORK_TYPE_ANY;
             case UNMETERED:
                 return JobInfo.NETWORK_TYPE_UNMETERED;
+            case NOT_ROAMING:
+                return JobInfo.NETWORK_TYPE_UNMETERED; // use unmetered here, is overwritten in v24
             default:
                 throw new IllegalStateException("not implemented");
         }
diff --git a/library/src/main/java/com/evernote/android/job/v24/JobProxy24.java b/library/src/main/java/com/evernote/android/job/v24/JobProxy24.java
index a5eeb00..14f6785 100644
--- a/library/src/main/java/com/evernote/android/job/v24/JobProxy24.java
+++ b/library/src/main/java/com/evernote/android/job/v24/JobProxy24.java
@@ -29,6 +29,7 @@
 import android.app.job.JobInfo;
 import android.content.Context;
 import android.os.Build;
+import android.support.annotation.NonNull;
 
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.v21.JobProxy21;
@@ -66,4 +67,14 @@ public boolean isPlatformJobScheduled(JobRequest request) {
     protected JobInfo.Builder createBuilderPeriodic(JobInfo.Builder builder, long intervalMs, long flexMs) {
         return builder.setPeriodic(intervalMs, flexMs);
     }
+
+    @Override
+    protected int convertNetworkType(@NonNull JobRequest.NetworkType networkType) {
+        switch (networkType) {
+            case NOT_ROAMING:
+                return JobInfo.NETWORK_TYPE_NOT_ROAMING;
+            default:
+                return super.convertNetworkType(networkType);
+        }
+    }
 }
