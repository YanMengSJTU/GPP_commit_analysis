diff --git a/build-config/checkstyle/checkstyle.xml b/build-config/checkstyle/checkstyle.xml
deleted file mode 100644
index 338d8e5..0000000
--- a/build-config/checkstyle/checkstyle.xml
+++ /dev/null
@@ -1,137 +0,0 @@
-<?xml version="1.0"?>
-<!DOCTYPE module PUBLIC
-    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
-    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
-
-<module name="Checker">
-    <!--module name="NewlineAtEndOfFile"/-->
-    <module name="NewlineAtEndOfFile"/>
-    <module name="FileLength"/>
-    <module name="FileTabCharacter"/>
-
-    <!-- Trailing spaces -->
-    <module name="RegexpSingleline">
-        <property name="format" value="\s+$"/>
-        <property name="message" value="Line has trailing spaces."/>
-    </module>
-
-    <!-- Space after 'for' and 'if' -->
-    <module name="RegexpSingleline">
-        <property name="format" value="^\s*(for|if)\b[^ ]"/>
-        <property name="message" value="Space needed before opening parenthesis."/>
-    </module>
-
-    <!-- For each spacing -->
-    <module name="RegexpSingleline">
-        <property name="format" value="^\s*for \(.*?([^ ]:|:[^ ])"/>
-        <property name="message" value="Space needed around ':' character."/>
-    </module>
-
-    <module name="TreeWalker">
-        <!--<property name="cacheFile" value="${checkstyle.cache.file}"/>-->
-
-        <!-- Checks for Javadoc comments.                     -->
-        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
-        <!--module name="JavadocMethod"/-->
-        <!--module name="JavadocType"/-->
-        <!--module name="JavadocVariable"/-->
-        <module name="JavadocStyle">
-            <property name="checkHtml" value="false"/>
-        </module>
-
-
-        <!-- Checks for Naming Conventions.                  -->
-        <!-- See http://checkstyle.sf.net/config_naming.html -->
-        <module name="ConstantName"/>
-        <module name="LocalFinalVariableName"/>
-        <module name="LocalVariableName"/>
-        <module name="MemberName"/>
-        <module name="MethodName"/>
-        <module name="PackageName"/>
-        <module name="ParameterName"/>
-        <module name="StaticVariableName"/>
-        <module name="TypeName"/>
-
-
-        <!-- Checks for imports                              -->
-        <!-- See http://checkstyle.sf.net/config_import.html -->
-        <module name="AvoidStarImport"/>
-        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
-        <module name="RedundantImport"/>
-        <module name="UnusedImports">
-            <property name="processJavadoc" value="true"/>
-        </module>
-
-
-        <!-- Checks for Size Violations.                    -->
-        <!-- See http://checkstyle.sf.net/config_sizes.html -->
-        <module name="LineLength">
-            <property name="max" value="180"/>
-        </module>
-        <!--module name="MethodLength"/-->
-        <!--module name="ParameterNumber"/-->
-
-
-        <!-- Checks for whitespace                               -->
-        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
-        <!--<module name="GenericWhitespace"/>-->
-        <!--module name="EmptyForIteratorPad"/-->
-        <module name="MethodParamPad"/>
-        <!--module name="NoWhitespaceAfter"/-->
-        <!--module name="NoWhitespaceBefore"/-->
-        <module name="OperatorWrap"/>
-        <module name="ParenPad"/>
-        <module name="TypecastParenPad"/>
-        <module name="WhitespaceAfter"/>
-        <!--<module name="WhitespaceAround"/>-->
-
-        <!-- Checks for blocks. You know, those {}'s         -->
-        <!-- See http://checkstyle.sf.net/config_blocks.html -->
-        <module name="AvoidNestedBlocks"/>
-        <!--module name="EmptyBlock"/-->
-        <module name="LeftCurly"/>
-        <!--<module name="NeedBraces"/>-->
-        <module name="RightCurly"/>
-
-
-        <!-- Modifier Checks                                    -->
-        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
-        <module name="ModifierOrder"/>
-        <!--<module name="RedundantModifier"/>-->
-
-
-        <!-- Checks for common coding problems               -->
-        <!-- See http://checkstyle.sf.net/config_coding.html -->
-        <!--module name="AvoidInlineConditionals"/-->
-        <module name="CovariantEquals"/>
-        <module name="EmptyStatement"/>
-        <!--<module name="EqualsAvoidNull"/>-->
-        <module name="EqualsHashCode"/>
-        <!--module name="HiddenField"/-->
-        <module name="IllegalInstantiation"/>
-        <!--module name="InnerAssignment"/-->
-        <!--module name="MagicNumber"/-->
-        <!--module name="MissingSwitchDefault"/-->
-        <!--<module name="RedundantThrows"/>-->
-        <module name="SimplifyBooleanExpression"/>
-        <module name="SimplifyBooleanReturn"/>
-
-
-        <!-- Checks for class design                         -->
-        <!-- See http://checkstyle.sf.net/config_design.html -->
-        <!--module name="DesignForExtension"/-->
-        <module name="FinalClass"/>
-        <module name="HideUtilityClassConstructor"/>
-        <module name="InterfaceIsType"/>
-        <!--module name="VisibilityModifier"/-->
-
-
-        <!-- Miscellaneous other checks.                   -->
-        <!-- See http://checkstyle.sf.net/config_misc.html -->
-        <module name="ArrayTypeStyle"/>
-        <!--module name="FinalParameters"/-->
-        <!--module name="TodoComment"/-->
-        <!--<module name="UpperEll"/>-->
-
-    </module>
-</module>
diff --git a/build-config/findbugs/findbugs-filter.xml b/build-config/findbugs/findbugs-filter.xml
deleted file mode 100644
index 1f49350..0000000
--- a/build-config/findbugs/findbugs-filter.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<FindBugsFilter>
-    <!-- http://stackoverflow.com/questions/7568579/eclipsefindbugs-exclude-filter-files-doesnt-work -->
-    <Match>
-        <Class name="~.*\.R\$.*"/>
-    </Match>
-    <Match>
-        <Class name="~.*\.Manifest\$.*"/>
-    </Match>
-    <!-- All bugs in test classes, except for JUnit-specific bugs -->
-    <Match>
-        <Class name="~.*\.*Test" />
-        <Not>
-            <Bug code="IJU" />
-        </Not>
-    </Match>
-
-    <!--<Match>-->
-        <!--<Package name="com.actionbarsherlock.internal.nineoldandroids.animation" />-->
-    <!--</Match>-->
-
-    <!--<Match>-->
-        <!--<Package name="com.actionbarsherlock.view" />-->
-    <!--</Match>-->
-
-    <!--<Match>-->
-        <!--<Package name="com.actionbarsherlock.internal.widget" />-->
-    <!--</Match>-->
-
-</FindBugsFilter>
\ No newline at end of file
diff --git a/build-config/gradle-push.gradle b/build-config/gradle-push.gradle
deleted file mode 100644
index 099fe85..0000000
--- a/build-config/gradle-push.gradle
+++ /dev/null
@@ -1,195 +0,0 @@
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-@SuppressWarnings(["GrMethodMayBeStatic", "GroovyUnusedDeclaration"])
-def isReleaseBuild() {
-    return !VERSION_NAME.contains("SNAPSHOT")
-}
-
-def isLocal() {
-    return hasProperty('local') ? Boolean.parseBoolean(getProperty('local')) : true
-}
-
-def getReleaseRepositoryUrl() {
-    if (this.isLocal()) {
-        return hasProperty('RELEASE_REPOSITORY_LOCAL') ? RELEASE_REPOSITORY_LOCAL : "file://${System.env.HOME}/.m2/repository"
-    } else {
-        return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
-    }
-}
-
-def getSnapshotRepositoryUrl() {
-    if (this.isLocal()) {
-        return hasProperty('SNAPSHOT_REPOSITORY_LOCAL') ? SNAPSHOT_REPOSITORY_LOCAL : "file://${System.env.HOME}/.m2/repository"
-    } else {
-        return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL : "https://oss.sonatype.org/content/repositories/snapshots/"
-    }
-}
-
-def getRepositoryUsername() {
-    return hasProperty('SONATYPE_USERNAME') ? SONATYPE_USERNAME : ""
-}
-
-def getRepositoryPassword() {
-    return hasProperty('SONATYPE_PASSWORD') ? SONATYPE_PASSWORD : ""
-}
-
-android.libraryVariants.all { variant ->
-    variant.outputs.each { output ->
-        File outputFile = output.outputFile
-        if (outputFile != null && outputFile.name.endsWith('.aar') && 'release'.equals(variant.buildType.name)) {
-            def fileName = "${project.archivesBaseName}-${version}.aar"
-            output.outputFileName = fileName
-        }
-    }
-}
-
-version = VERSION_NAME
-
-artifacts {
-    archives file("$buildDir/outputs/jar/${project.archivesBaseName}-${project.version}-sources.jar")
-    archives file("$buildDir/outputs/jar/${project.archivesBaseName}-${project.version}-javadoc.jar")
-}
-
-afterEvaluate { project ->
-    uploadArchives {
-        //noinspection GradleMisplacedStatement
-        repositories {
-            //noinspection GroovyAssignabilityCheck
-            mavenDeployer {
-                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-                pom.groupId = 'com.evernote'
-                pom.artifactId = 'android-job'
-                pom.version = VERSION_NAME
-
-                repository(url: this.getReleaseRepositoryUrl()) {
-                    authentication(userName: this.getRepositoryUsername(), password: this.getRepositoryPassword())
-                }
-                snapshotRepository(url: this.getSnapshotRepositoryUrl()) {
-                    authentication(userName: this.getRepositoryUsername(), password: this.getRepositoryPassword())
-                }
-
-                pom.project {
-                    name 'Android-Job'
-                    packaging 'aar'
-                    description 'Android library to handle jobs in the background.'
-                    url 'https://github.com/evernote/android-job'
-                    inceptionYear '2015'
-
-                    scm {
-                        url 'https://github.com/evernote/android-job'
-                        connection 'scm:git:git://github.com/evernote/android-job.git'
-                        developerConnection 'scm:git:git@github.com:evernote/android-job.git'
-                    }
-
-                    developers {
-                        developer {
-                            name 'Ralf Wondratschek'
-                            email 'rwondratschek@evernote.com'
-                            id 'rwondratschek'
-                            url 'http://vrallev.net'
-                            timezone '+1'
-                            roles {
-                                role 'developer'
-                            }
-                        }
-                    }
-
-                    licenses {
-                        license {
-                            name 'Apache License version 2.0'
-                            url 'https://github.com/evernote/android-job/blob/master/LICENSE'
-                            distribution 'repo'
-                        }
-                    }
-
-                    issueManagement {
-                        system 'GitHub Issues'
-                        url 'https://github.com/evernote/android-job/issues'
-                    }
-                }
-            }
-        }
-    }
-
-    signing {
-        required { gradle.taskGraph.hasTask("uploadArchives") }
-        sign configurations.archives
-    }
-}
-
-project.tasks.whenTaskAdded { task ->
-    if (task.name == 'signArchives') {
-        this.addSourcesAndJavadocTask task
-    }
-}
-
-def addSourcesAndJavadocTask(Task uploadTask) {
-    android.libraryVariants.all { variant ->
-        if (variant.name.equalsIgnoreCase('release')) {
-            uploadTask.dependsOn project.tasks.getByName("assemble${variant.name.capitalize()}")
-            uploadTask.dependsOn project.tasks.getByName("generate${variant.name.capitalize()}JavadocJar")
-            uploadTask.dependsOn project.tasks.getByName("generate${variant.name.capitalize()}SourcesJar")
-        }
-    }
-}
-
-// javadoc jar
-android.libraryVariants.all { variant ->
-    project.task("${variant.name.capitalize()}Javadoc", type: Javadoc) {
-        failOnError true
-
-        destinationDir = new File("$project.buildDir/javadoc/$variant.name")
-
-        source = variant.javaCompile.source
-
-        classpath += project.files(variant.javaCompile.classpath)
-        classpath += project.files("${project.android.sdkDirectory}/platforms/${project.android.compileSdkVersion}/android.jar")
-        classpath += files("$buildDir/generated/source/r/${variant.name}/")
-        classpath += files("$buildDir/generated/source/buildConfig/${variant.name}/")
-
-        options {
-            linksOffline("http://d.android.com/reference", "${project.android.sdkDirectory}/docs/reference")
-            links("http://docs.oracle.com/javase/7/docs/api/")
-            setMemberLevel(JavadocMemberLevel.PACKAGE)
-            addStringOption('Xdoclint:none', '-quiet')
-            docEncoding = 'UTF-8'
-            encoding = 'UTF-8'
-            charSet = 'UTF-8'
-        }
-
-        exclude '**/BuildConfig.java'
-        exclude '**/R.java'
-    }
-
-    project.task("generate${variant.name.capitalize()}JavadocJar", type: Jar, dependsOn: "${variant.name.capitalize()}Javadoc") {
-        classifier 'javadoc'
-
-        description = 'Assembles a jar archive containing the generated Javadoc API documentation of $variant.name.'
-
-        destinationDir = new File("$project.buildDir/outputs/jar/")
-
-        exclude '**/BuildConfig.class'
-        exclude '**/R.class'
-
-        from "$project.buildDir/javadoc/$variant.name"
-    }
-}
-
-// sources jar
-android.libraryVariants.all { variant ->
-    project.task("generate${variant.name.capitalize()}SourcesJar", type: Jar) {
-        classifier = 'sources'
-
-        description = 'Assembles a jar archive containing the main sources of $variant.name..'
-
-        destinationDir = new File("$project.buildDir/outputs/jar/")
-
-        // exclude generated files
-        exclude '**/BuildConfig.java'
-        exclude '**/R.java'
-
-        from variant.javaCompile.source
-    }
-}
\ No newline at end of file
diff --git a/build-config/gradle-quality.gradle b/build-config/gradle-quality.gradle
deleted file mode 100644
index f5ae647..0000000
--- a/build-config/gradle-quality.gradle
+++ /dev/null
@@ -1,70 +0,0 @@
-apply plugin: 'checkstyle'
-apply plugin: 'findbugs'
-apply plugin: 'pmd'
-
-check.dependsOn 'checkstyle'//, 'pmd' ,'findbugs'
-
-task checkstyle(type: Checkstyle) {
-    configFile file("${project.rootDir}/build-config/checkstyle/checkstyle.xml")
-    source 'src'
-    include '**/*.java'
-    exclude '**/gen/**'
-    exclude '**/XmlUtils.java'
-
-    classpath = files()
-//
-//    reports {
-//        xml {
-//            destination file("$project.buildDir/outputs/checkstyle-results.xml")
-//        }
-//    }
-}
-
-task findbugs(type: FindBugs) {
-    ignoreFailures = true
-    effort = "max"
-    reportLevel = "high"
-    excludeFilter = new File("${project.rootDir}/build-config/findbugs/findbugs-filter.xml")
-    classes = files("$project.buildDir/intermediates/classes/")
-
-    source 'src'
-    include '**/*.java'
-    exclude '**/gen/**'
-
-    reports {
-        xml.enabled = false
-        html.enabled = true
-
-        xml {
-            destination file("$project.buildDir/reports/findbugs/findbugs.xml")
-            xml.withMessages true
-        }
-        html {
-            destination file("$project.buildDir/reports/findbugs/findbugs.html")
-        }
-    }
-
-    classpath = files()
-}
-
-task pmd(type: Pmd) {
-    ruleSetFiles = files("${project.rootDir}/build-config/pmd/pmd-ruleset.xml")
-    ignoreFailures = true
-    ruleSets = ["java-basic", "java-braces", "java-strings"]
-
-    source 'src'
-    include '**/*.java'
-    exclude '**/gen/**'
-
-    reports {
-        xml.enabled = true
-        html.enabled = true
-
-        xml {
-            destination file("$project.buildDir/reports/pmd/pmd.xml")
-        }
-        html {
-            destination file("$project.buildDir/reports/pmd/pmd.html")
-        }
-    }
-}
\ No newline at end of file
diff --git a/build-config/pmd/pmd-ruleset.xml b/build-config/pmd/pmd-ruleset.xml
deleted file mode 100644
index ecdebda..0000000
--- a/build-config/pmd/pmd-ruleset.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<?xml version="1.0"?>
-<ruleset name="Custom ruleset"
-         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
-         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
-    <description>
-        This ruleset checks my code for bad stuff
-    </description>
-</ruleset>
\ No newline at end of file
diff --git a/demo/build.gradle b/demo/build.gradle
index 279f065..18d8bb2 100644
--- a/demo/build.gradle
+++ b/demo/build.gradle
@@ -1,5 +1,4 @@
 apply plugin: 'com.android.application'
-apply from: '../build-config/gradle-quality.gradle'
 
 android {
     compileSdkVersion rootProject.ext.compileSdkVersion
diff --git a/gradle.properties b/gradle.properties
index 52a3fbf..ad427b4 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,3 +1,3 @@
 #VERSION_NAME=1.2.6
-VERSION_NAME=1.0.4
-VERSION_CODE=4
\ No newline at end of file
+VERSION_NAME=1.0.5
+VERSION_CODE=5
\ No newline at end of file
diff --git a/library/build.gradle b/library/build.gradle
index cc0f68b..601926b 100644
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -1,6 +1,5 @@
 apply plugin: 'com.android.library'
 apply plugin: 'com.github.ben-manes.versions'
-apply from: '../build-config/gradle-quality.gradle'
 
 archivesBaseName = 'android-job'
 
@@ -62,5 +61,3 @@ android {
         }
     }
 }
-
-apply from: '../build-config/gradle-push.gradle'
\ No newline at end of file
