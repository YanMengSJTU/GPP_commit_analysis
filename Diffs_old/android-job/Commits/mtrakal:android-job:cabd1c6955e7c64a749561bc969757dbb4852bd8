diff --git a/CHANGELOG.md b/CHANGELOG.md
index fe4cf20..c43df57 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,11 @@
+## 1.3.0 (2019-09-29)
+* (No changes compared to 1.3.0-rc1)
+* Implement an API that uses the `WorkManager` for scheduling work items
+* Initialize the job storage on a background thread, see #471
+* Restrict usage of internal classes for internal usage only, see #465
+* Use a `JobIntentService` implementation that doesn't crash, see #255
+* Offset the end time when rescheduling an inexact job, see #547
+
 ## 1.3.0-rc1 (2019-03-22)
 * Offset the end time when rescheduling an inexact job, see #547
 * Upgraded WorkManager to 1.0.0, see #561
diff --git a/README.md b/README.md
index 696aafd..504611e 100644
--- a/README.md
+++ b/README.md
@@ -11,10 +11,7 @@ Download [the latest version](http://search.maven.org/#search|gav|1|g:"com.evern
 
 ```groovy
 dependencies {
-    implementation 'com.evernote:android-job:1.2.6'
-
-    // or
-    implementation 'com.evernote:android-job:1.3.0-rc1'
+    implementation 'com.evernote:android-job:1.3.0'
 }
 ```
 
diff --git a/build.gradle b/build.gradle
index 6a8b8cb..b9b20c2 100644
--- a/build.gradle
+++ b/build.gradle
@@ -4,8 +4,8 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.3.2'
-        classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'
+        classpath 'com.android.tools.build:gradle:3.5.0'
+        classpath 'com.github.ben-manes:gradle-versions-plugin:0.25.0'
     }
 }
 
@@ -22,11 +22,11 @@ allprojects {
 }
 
 ext {
-    compileSdkVersion = 28
+    compileSdkVersion = 29
     targetSdkVersion = compileSdkVersion
     minSdkVersion = 14
 
-    buildToolsVersion = '28.0.3'
+    buildToolsVersion = '29.0.2'
 
     androidXLibVersion = '1.0.1'
     playServicesVersion = '16.1.0'
@@ -35,10 +35,10 @@ ext {
     junitVersion = '4.12'
     assertjVersion = '3.6.2'
     mockitoVersion = '2.7.22'
-    robolectricVersion = '3.8'
+    robolectricVersion = '4.3'
 }
 
-wrapper {
-    gradleVersion = '5.3.1'
-    distributionType = Wrapper.DistributionType.ALL
+task updateWrapper(type: Wrapper) {
+    gradleVersion = '5.6.2'
+    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
 }
diff --git a/gradle.properties b/gradle.properties
index b211cad..bc68b39 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,4 +1,4 @@
-#VERSION_NAME=1.3.0-rc1
+#VERSION_NAME=1.3.0
 VERSION_NAME=1.3.0-SNAPSHOT
 VERSION_CODE=1
 android.useAndroidX=true
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 51fb1c4..ca9d628 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-5.3.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-5.6.2-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
diff --git a/gradlew b/gradlew
index b0d6d0a..83f2acf 100755
--- a/gradlew
+++ b/gradlew
@@ -7,7 +7,7 @@
 # you may not use this file except in compliance with the License.
 # You may obtain a copy of the License at
 #
-#      http://www.apache.org/licenses/LICENSE-2.0
+#      https://www.apache.org/licenses/LICENSE-2.0
 #
 # Unless required by applicable law or agreed to in writing, software
 # distributed under the License is distributed on an "AS IS" BASIS,
@@ -125,8 +125,8 @@ if $darwin; then
     GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
 fi
 
-# For Cygwin, switch paths to Windows format before running java
-if $cygwin ; then
+# For Cygwin or MSYS, switch paths to Windows format before running java
+if [ "$cygwin" = "true" -o "$msys" = "true" ] ; then
     APP_HOME=`cygpath --path --mixed "$APP_HOME"`
     CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
     JAVACMD=`cygpath --unix "$JAVACMD"`
diff --git a/gradlew.bat b/gradlew.bat
index 9991c50..9618d8d 100644
--- a/gradlew.bat
+++ b/gradlew.bat
@@ -5,7 +5,7 @@
 @rem you may not use this file except in compliance with the License.
 @rem You may obtain a copy of the License at
 @rem
-@rem      http://www.apache.org/licenses/LICENSE-2.0
+@rem      https://www.apache.org/licenses/LICENSE-2.0
 @rem
 @rem Unless required by applicable law or agreed to in writing, software
 @rem distributed under the License is distributed on an "AS IS" BASIS,
diff --git a/library/build.gradle b/library/build.gradle
index 0633b5b..783b02a 100644
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -26,6 +26,7 @@ dependencies {
     testImplementation "org.mockito:mockito-core:$mockitoVersion"
     testImplementation "org.assertj:assertj-core:$assertjVersion"
     testImplementation "org.robolectric:robolectric:$robolectricVersion"
+    testImplementation 'androidx.test:core:1.0.0'
 }
 
 android {
diff --git a/library/src/test/java/com/evernote/android/job/BaseJobManagerTest.java b/library/src/test/java/com/evernote/android/job/BaseJobManagerTest.java
index cc48341..1f9fa37 100644
--- a/library/src/test/java/com/evernote/android/job/BaseJobManagerTest.java
+++ b/library/src/test/java/com/evernote/android/job/BaseJobManagerTest.java
@@ -7,13 +7,9 @@
 import android.content.pm.ServiceInfo;
 import androidx.annotation.NonNull;
 import android.test.mock.MockContext;
-
+import androidx.test.core.app.ApplicationProvider;
 import com.evernote.android.job.test.DummyJobs;
 import com.evernote.android.job.test.TestLogger;
-
-import org.junit.Rule;
-import org.robolectric.RuntimeEnvironment;
-
 import java.util.Collections;
 import java.util.concurrent.Callable;
 import java.util.concurrent.CountDownLatch;
@@ -21,6 +17,8 @@
 import java.util.concurrent.Executors;
 import java.util.concurrent.Future;
 import java.util.concurrent.TimeUnit;
+import org.junit.Rule;
+import org.robolectric.RuntimeEnvironment;
 
 import static org.assertj.core.api.Java6Assertions.assertThat;
 import static org.mockito.ArgumentMatchers.any;
@@ -129,7 +127,7 @@ public static Context createMockContext() {
         resolveInfo.serviceInfo.permission = "android.permission.BIND_JOB_SERVICE";
         when(packageManager.queryIntentServices(any(Intent.class), anyInt())).thenReturn(Collections.singletonList(resolveInfo));
 
-        Context context = spy(RuntimeEnvironment.application);
+        Context context = spy(ApplicationProvider.getApplicationContext());
         when(context.getPackageManager()).thenReturn(packageManager);
         when(context.getApplicationContext()).thenReturn(context);
 
diff --git a/library/src/test/java/com/evernote/android/job/DatabaseCorruptionTest.java b/library/src/test/java/com/evernote/android/job/DatabaseCorruptionTest.java
index ef5acab..ef9d693 100644
--- a/library/src/test/java/com/evernote/android/job/DatabaseCorruptionTest.java
+++ b/library/src/test/java/com/evernote/android/job/DatabaseCorruptionTest.java
@@ -2,16 +2,13 @@
 
 import android.content.Context;
 import android.database.sqlite.SQLiteDatabase;
-
+import androidx.test.core.app.ApplicationProvider;
 import com.evernote.android.job.test.JobRobolectricTestRunner;
-
+import java.io.File;
 import org.junit.FixMethodOrder;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.MethodSorters;
-import org.robolectric.RuntimeEnvironment;
-
-import java.io.File;
 
 import static org.assertj.core.api.Java6Assertions.assertThat;
 
@@ -24,7 +21,7 @@
 
     @Test
     public void verifyDeleteAfterCorruptionWhileOpen() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
 
         JobStorage jobStorage = new JobStorage(context);
         SQLiteDatabase database = jobStorage.getDatabase();
@@ -42,7 +39,7 @@ public void verifyDeleteAfterCorruptionWhileOpen() {
 
     @Test
     public void verifyDeleteAfterCorruptionWhileClosed() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
 
         JobStorage jobStorage = new JobStorage(context);
         SQLiteDatabase database = jobStorage.getDatabase();
@@ -62,7 +59,7 @@ public void verifyDeleteAfterCorruptionWhileClosed() {
 
     @Test
     public void verifyDeleteWithApi14() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
 
         JobStorage jobStorage = new JobStorage(context);
         SQLiteDatabase database = jobStorage.getDatabase();
@@ -80,7 +77,7 @@ public void verifyDeleteWithApi14() {
 
     @Test
     public void verifyDeleteWhileOpening() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
 
         String filePath = getClass().getResource("/databases/corrupted.db").getPath();
         final long originalLength = new File(filePath).length();
diff --git a/library/src/test/java/com/evernote/android/job/DatabaseManualUpgradeTest.java b/library/src/test/java/com/evernote/android/job/DatabaseManualUpgradeTest.java
index 4a1ab16..ec66d0a 100644
--- a/library/src/test/java/com/evernote/android/job/DatabaseManualUpgradeTest.java
+++ b/library/src/test/java/com/evernote/android/job/DatabaseManualUpgradeTest.java
@@ -5,17 +5,14 @@
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
 import androidx.annotation.NonNull;
-
+import androidx.test.core.app.ApplicationProvider;
 import com.evernote.android.job.test.JobRobolectricTestRunner;
 import com.evernote.android.job.util.support.PersistableBundleCompat;
-
+import java.util.concurrent.TimeUnit;
 import org.junit.FixMethodOrder;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.junit.runners.MethodSorters;
-import org.robolectric.RuntimeEnvironment;
-
-import java.util.concurrent.TimeUnit;
 
 import static com.evernote.android.job.JobStorage.COLUMN_BACKOFF_MS;
 import static com.evernote.android.job.JobStorage.COLUMN_BACKOFF_POLICY;
@@ -53,7 +50,7 @@
 
     @Test
     public void testDatabaseUpgrade1to6() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
         context.deleteDatabase(DATABASE_NAME);
 
         JobOpenHelper1 openHelper = new JobOpenHelper1(context);
@@ -65,7 +62,7 @@ public void testDatabaseUpgrade1to6() {
 
     @Test
     public void testDatabaseUpgrade2to6() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
         context.deleteDatabase(DATABASE_NAME);
 
         JobOpenHelper2 openHelper = new JobOpenHelper2(context);
@@ -77,7 +74,7 @@ public void testDatabaseUpgrade2to6() {
 
     @Test
     public void testDatabaseUpgrade3to6() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
         context.deleteDatabase(DATABASE_NAME);
 
         JobOpenHelper3 openHelper = new JobOpenHelper3(context);
@@ -89,7 +86,7 @@ public void testDatabaseUpgrade3to6() {
 
     @Test
     public void testDatabaseUpgrade4to6() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
         context.deleteDatabase(DATABASE_NAME);
 
         JobOpenHelper4 openHelper = new JobOpenHelper4(context);
@@ -101,7 +98,7 @@ public void testDatabaseUpgrade4to6() {
 
     @Test
     public void testDatabaseUpgrade5to6() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
         context.deleteDatabase(DATABASE_NAME);
 
         JobOpenHelper5 openHelper = new JobOpenHelper5(context);
@@ -113,7 +110,7 @@ public void testDatabaseUpgrade5to6() {
 
     @Test
     public void testDatabaseUpgrade1to2to3to4to5to6() {
-        Context context = RuntimeEnvironment.application;
+        Context context = ApplicationProvider.getApplicationContext();
         context.deleteDatabase(DATABASE_NAME);
 
         JobOpenHelper1 openHelper = new JobOpenHelper1(context);
