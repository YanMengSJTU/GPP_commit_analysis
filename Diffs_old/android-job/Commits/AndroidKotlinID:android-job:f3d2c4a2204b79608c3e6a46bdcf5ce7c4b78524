diff --git a/CHANGELOG.md b/CHANGELOG.md
index 2aa4ff5..e6d0fb6 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,7 @@
+## 1.3.0-alpha06  (2018-07-24)
+* Find the right tag for the job with `WorkManager`, see #509
+* Integrate `WorkManager` version `1.0.0-alpha05`
+
 ## 1.3.0-alpha05 (2018-07-23)
 * Use synchronous method to query the workmanager statuses, see #464
 
diff --git a/README.md b/README.md
index 0397897..92e03a4 100644
--- a/README.md
+++ b/README.md
@@ -11,7 +11,7 @@ dependencies {
     implementation 'com.evernote:android-job:1.2.6'
 
     // or
-    implementation 'com.evernote:android-job:1.3.0-alpha05'
+    implementation 'com.evernote:android-job:1.3.0-alpha06'
 }
 ```
 
diff --git a/build.gradle b/build.gradle
index c9d0e26..5ef7c57 100644
--- a/build.gradle
+++ b/build.gradle
@@ -30,7 +30,7 @@ ext {
 
     supportLibVersion = '26.1.0'
     playServicesVersion = '15.0.1'
-    workVersion = '1.0.0-alpha04'
+    workVersion = '1.0.0-alpha05'
     stethoVersion = '1.5.0'
     junitVersion = '4.12'
     assertjVersion = '3.6.2'
diff --git a/gradle.properties b/gradle.properties
index b7819a8..91067c6 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,3 +1,3 @@
-#VERSION_NAME=1.3.0-alpha05
+#VERSION_NAME=1.3.0-alpha06
 VERSION_NAME=1.3.0-SNAPSHOT
 VERSION_CODE=1
\ No newline at end of file
diff --git a/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java b/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java
index 7d14bad..d4fcc5d 100644
--- a/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/work/PlatformWorkManagerTest.java
@@ -12,7 +12,6 @@
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.PlatformWorkManagerRule;
 
-import org.assertj.core.util.Preconditions;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -160,6 +159,6 @@ private void testConstraints(JobRequest.Builder builder) {
     }
 
     private List<WorkStatus> getWorkStatus(String tag) {
-        return Preconditions.checkNotNull(WorkManager.getInstance()).synchronous().getStatusesByTagSync(tag);
+        return WorkManager.getInstance().synchronous().getStatusesByTagSync(tag);
     }
 }
diff --git a/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java b/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java
index da51f31..93d92ca 100644
--- a/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java
+++ b/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java
@@ -10,6 +10,7 @@
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.util.JobCat;
 
+import java.util.Collection;
 import java.util.Collections;
 import java.util.List;
 import java.util.concurrent.TimeUnit;
@@ -110,8 +111,13 @@ public boolean isPlatformJobScheduled(JobRequest request) {
         return PREFIX + jobId;
     }
 
-    /*package*/ static int getJobIdFromTag(String tag) {
-        return Integer.parseInt(tag.substring(PREFIX.length()));
+    /*package*/ static int getJobIdFromTags(Collection<String> tags) {
+        for (String tag : tags) {
+            if (tag.startsWith(PREFIX)) {
+                return Integer.parseInt(tag.substring(PREFIX.length()));
+            }
+        }
+        return -1;
     }
 
     private static Constraints buildConstraints(JobRequest request) {
@@ -148,10 +154,18 @@ private static NetworkType mapNetworkType(@NonNull JobRequest.NetworkType networ
 
     private WorkManager getWorkManager() {
         // don't cache the instance, it could change under the hood, e.g. during tests
-        WorkManager workManager = WorkManager.getInstance();
+        WorkManager workManager;
+        try {
+            workManager = WorkManager.getInstance();
+        } catch (Exception e) {
+            workManager = null;
+        }
         if (workManager == null) {
             WorkManager.initialize(mContext, new Configuration.Builder().build());
-            workManager = WorkManager.getInstance();
+            try {
+                workManager = WorkManager.getInstance();
+            } catch (Exception ignored) {
+            }
             CAT.w("WorkManager getInstance() returned null, now: %s", workManager);
         }
 
diff --git a/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java b/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
index 0e10493..4c1d767 100644
--- a/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
+++ b/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
@@ -24,6 +24,10 @@
     @Override
     public Result doWork() {
         final int jobId = getJobId();
+        if (jobId < 0) {
+            return Result.FAILURE;
+        }
+
         try {
             JobProxy.Common common = new JobProxy.Common(getApplicationContext(), CAT, jobId);
 
@@ -65,11 +69,7 @@ public void onStopped(boolean cancelled) {
         }
     }
 
-    private String getTag() {
-        return getTags().iterator().next();
-    }
-
     private int getJobId() {
-        return JobProxyWorkManager.getJobIdFromTag(getTag());
+        return JobProxyWorkManager.getJobIdFromTags(getTags());
     }
 }
