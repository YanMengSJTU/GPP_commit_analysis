diff --git a/CHANGELOG.md b/CHANGELOG.md
index 4926b7d..5e62184 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,5 +1,6 @@
 ## 1.3.0-alpha04
 * Fix rare NPE when `WorkManager` is null for some reason, see #477
+* Fix rare NPE when `JobStorage` is null, see #492
 
 ## 1.3.0-alpha03 (2018-06-11)
 * Remove wrong restriction for `PersistableBundleCompat`
diff --git a/library/src/main/java/com/evernote/android/job/JobManager.java b/library/src/main/java/com/evernote/android/job/JobManager.java
index 70c57ff..1e7e15c 100644
--- a/library/src/main/java/com/evernote/android/job/JobManager.java
+++ b/library/src/main/java/com/evernote/android/job/JobManager.java
@@ -153,13 +153,13 @@ private JobManager(final Context context) {
         }
 
         mJobStorageLatch = new CountDownLatch(1);
-        JobConfig.getExecutorService().execute(new Runnable() {
+        new Thread("AndroidJob-storage-init") {
             @Override
             public void run() {
                 mJobStorage = new JobStorage(context);
                 mJobStorageLatch.countDown();
             }
-        });
+        }.start();
     }
 
     /**
@@ -455,14 +455,18 @@ public void removeJobCreator(JobCreator jobCreator) {
         mJobCreatorHolder.removeJobCreator(jobCreator);
     }
 
+    @NonNull
     /*package*/ JobStorage getJobStorage() {
         if (mJobStorage == null) {
             try {
-                mJobStorageLatch.await(3, TimeUnit.SECONDS);
+                mJobStorageLatch.await(10, TimeUnit.SECONDS);
             } catch (InterruptedException e) {
                 throw new RuntimeException(e);
             }
         }
+        if (mJobStorage == null) {
+            throw new IllegalStateException("Job storage shouldn't be null");
+        }
 
         return mJobStorage;
     }
