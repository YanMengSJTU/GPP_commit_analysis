diff --git a/CHANGELOG.md b/CHANGELOG.md
index ba84d70..b95db61 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -4,6 +4,7 @@
 * Allow running a daily job immediately once, this is helpful for testing purposes, see #317
 * Allow enforcing requirements for daily jobs, see #313
 * Remove the Cat dependency for logging, see 295
+* Add `@NonNull` annotation to `param` parameter, see #321 (thanks for the contribution @Jawnnypoo)
 
 ## 1.2.0 (2017-10-05)
 
diff --git a/demo/src/main/java/com/evernote/android/job/demo/DemoSyncJob.java b/demo/src/main/java/com/evernote/android/job/demo/DemoSyncJob.java
index 020284a..d6fee00 100644
--- a/demo/src/main/java/com/evernote/android/job/demo/DemoSyncJob.java
+++ b/demo/src/main/java/com/evernote/android/job/demo/DemoSyncJob.java
@@ -24,7 +24,7 @@
 
     @Override
     @NonNull
-    protected Result onRunJob(final Params params) {
+    protected Result onRunJob(@NonNull final Params params) {
         boolean success = new DemoSyncEngine(getContext()).sync();
 
         PendingIntent pendingIntent = PendingIntent.getActivity(getContext(), 0, new Intent(getContext(), MainActivity.class), 0);
diff --git a/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java b/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java
index cca4406..5274d35 100644
--- a/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/PlatformTest.java
@@ -164,7 +164,7 @@ private TestJob(Class<? extends Context> expectedContext) {
 
         @NonNull
         @Override
-        protected Result onRunJob(Params params) {
+        protected Result onRunJob(@NonNull Params params) {
             mContext = getContext();
             mParams = params;
 
diff --git a/library/src/androidTest/java/com/evernote/android/job/TransientBundleRescheduleTest.java b/library/src/androidTest/java/com/evernote/android/job/TransientBundleRescheduleTest.java
index bf1e89a..b5ae625 100644
--- a/library/src/androidTest/java/com/evernote/android/job/TransientBundleRescheduleTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/TransientBundleRescheduleTest.java
@@ -76,7 +76,7 @@ private void testOneOff(JobApi api, long wait, TimeUnit timeUnit) throws Excepti
 
         @NonNull
         @Override
-        protected Result onRunJob(Params params) {
+        protected Result onRunJob(@NonNull Params params) {
             Bundle extras = params.getTransientExtras();
             assertThat(extras).isNotNull();
             assertThat(extras.getString("Key")).isEqualTo("Value");
diff --git a/library/src/androidTest/java/com/evernote/android/job/TransientBundleTest.java b/library/src/androidTest/java/com/evernote/android/job/TransientBundleTest.java
index 73de6ac..80b2f24 100644
--- a/library/src/androidTest/java/com/evernote/android/job/TransientBundleTest.java
+++ b/library/src/androidTest/java/com/evernote/android/job/TransientBundleTest.java
@@ -130,7 +130,7 @@ private void testOneOff(JobApi api, long wait, TimeUnit timeUnit) throws Excepti
 
         @NonNull
         @Override
-        protected Result onRunJob(Params params) {
+        protected Result onRunJob(@NonNull Params params) {
             mParams = params;
 
             mLatch.countDown();
diff --git a/library/src/main/java/com/evernote/android/job/DailyJob.java b/library/src/main/java/com/evernote/android/job/DailyJob.java
index 5ca08d3..97ede96 100644
--- a/library/src/main/java/com/evernote/android/job/DailyJob.java
+++ b/library/src/main/java/com/evernote/android/job/DailyJob.java
@@ -144,7 +144,7 @@ private static int schedule(@NonNull JobRequest.Builder builder, boolean newJob,
 
     @NonNull
     @Override
-    protected final Result onRunJob(Params params) {
+    protected final Result onRunJob(@NonNull Params params) {
         PersistableBundleCompat extras = params.getExtras();
         boolean runOnce = extras.getBoolean(EXTRA_ONCE, false);
 
@@ -211,7 +211,7 @@ protected final Result onRunJob(Params params) {
     @SuppressWarnings("WeakerAccess")
     @NonNull
     @WorkerThread
-    protected abstract DailyJobResult onRunDailyJob(Params params);
+    protected abstract DailyJobResult onRunDailyJob(@NonNull Params params);
 
     public enum DailyJobResult {
         /**
diff --git a/library/src/test/java/com/evernote/android/job/DailyJobTest.java b/library/src/test/java/com/evernote/android/job/DailyJobTest.java
index ed3414a..1fd8071 100644
--- a/library/src/test/java/com/evernote/android/job/DailyJobTest.java
+++ b/library/src/test/java/com/evernote/android/job/DailyJobTest.java
@@ -271,7 +271,7 @@ public Job create(@NonNull String tag) {
                 return new DailyJob() {
                     @NonNull
                     @Override
-                    protected DailyJobResult onRunDailyJob(Params params) {
+                    protected DailyJobResult onRunDailyJob(@NonNull Params params) {
                         atomicBoolean.set(false);
                         return DailyJobResult.SUCCESS;
                     }
diff --git a/library/src/test/java/com/evernote/android/job/JobExecutionTest.java b/library/src/test/java/com/evernote/android/job/JobExecutionTest.java
index 45e5874..209847b 100644
--- a/library/src/test/java/com/evernote/android/job/JobExecutionTest.java
+++ b/library/src/test/java/com/evernote/android/job/JobExecutionTest.java
@@ -180,7 +180,7 @@ public void verifyCanceledJobNotRescheduled() {
         final Job job = new Job() {
             @NonNull
             @Override
-            protected Result onRunJob(Params params) {
+            protected Result onRunJob(@NonNull Params params) {
                 manager().cancelAll();
                 return Result.RESCHEDULE;
             }
diff --git a/library/src/test/java/com/evernote/android/job/JobPeriodicCancelTest.java b/library/src/test/java/com/evernote/android/job/JobPeriodicCancelTest.java
index bb7d018..f8bb0bd 100644
--- a/library/src/test/java/com/evernote/android/job/JobPeriodicCancelTest.java
+++ b/library/src/test/java/com/evernote/android/job/JobPeriodicCancelTest.java
@@ -121,7 +121,7 @@ public void run() {
 
         @NonNull
         @Override
-        protected Result onRunJob(Params params) {
+        protected Result onRunJob(@NonNull Params params) {
             mStartedLatch.countDown();
 
             try {
diff --git a/library/src/test/java/com/evernote/android/job/test/DummyJobs.java b/library/src/test/java/com/evernote/android/job/test/DummyJobs.java
index 5e08d64..6c19dbe 100644
--- a/library/src/test/java/com/evernote/android/job/test/DummyJobs.java
+++ b/library/src/test/java/com/evernote/android/job/test/DummyJobs.java
@@ -24,7 +24,7 @@ private DummyJobs() {
 
         @NonNull
         @Override
-        protected Result onRunJob(Params params) {
+        protected Result onRunJob(@NonNull Params params) {
             return Result.SUCCESS;
         }
     }
@@ -37,7 +37,7 @@ protected Result onRunJob(Params params) {
 
         @NonNull
         @Override
-        protected Result onRunJob(Params params) {
+        protected Result onRunJob(@NonNull Params params) {
             return Result.RESCHEDULE;
         }
 
@@ -57,7 +57,7 @@ public int getNewJobId() {
 
         @NonNull
         @Override
-        protected Result onRunJob(Params params) {
+        protected Result onRunJob(@NonNull Params params) {
             return Result.FAILURE;
         }
     }
@@ -67,7 +67,7 @@ protected Result onRunJob(Params params) {
 
         @NonNull
         @Override
-        protected Result onRunJob(Params params) {
+        protected Result onRunJob(@NonNull Params params) {
             try {
                 Thread.sleep(2_000);
             } catch (InterruptedException ignored) {
@@ -81,7 +81,7 @@ protected Result onRunJob(Params params) {
 
         @NonNull
         @Override
-        protected DailyJobResult onRunDailyJob(Params params) {
+        protected DailyJobResult onRunDailyJob(@NonNull Params params) {
             return DailyJobResult.SUCCESS;
         }
     }
