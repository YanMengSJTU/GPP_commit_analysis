diff --git a/CHANGELOG.md b/CHANGELOG.md
index 2aa4ff5..31f6d6c 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,6 @@
+## 1.3.0-alpha06
+* Find the right tag for the job with `WorkManager`, see #509
+
 ## 1.3.0-alpha05 (2018-07-23)
 * Use synchronous method to query the workmanager statuses, see #464
 
diff --git a/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java b/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java
index da51f31..ce9f1b2 100644
--- a/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java
+++ b/library/src/main/java/com/evernote/android/job/work/JobProxyWorkManager.java
@@ -10,6 +10,7 @@
 import com.evernote.android.job.JobRequest;
 import com.evernote.android.job.util.JobCat;
 
+import java.util.Collection;
 import java.util.Collections;
 import java.util.List;
 import java.util.concurrent.TimeUnit;
@@ -114,6 +115,15 @@ public boolean isPlatformJobScheduled(JobRequest request) {
         return Integer.parseInt(tag.substring(PREFIX.length()));
     }
 
+    /*package*/ static int getJobIdFromTags(Collection<String> tags) {
+        for (String tag : tags) {
+            if (tag.startsWith(PREFIX)) {
+                return Integer.parseInt(tag.substring(PREFIX.length()));
+            }
+        }
+        return -1;
+    }
+
     private static Constraints buildConstraints(JobRequest request) {
         Constraints.Builder constraintsBuilder = new Constraints.Builder()
                 .setRequiresBatteryNotLow(request.requiresBatteryNotLow())
diff --git a/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java b/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
index 0e10493..4c1d767 100644
--- a/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
+++ b/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
@@ -24,6 +24,10 @@
     @Override
     public Result doWork() {
         final int jobId = getJobId();
+        if (jobId < 0) {
+            return Result.FAILURE;
+        }
+
         try {
             JobProxy.Common common = new JobProxy.Common(getApplicationContext(), CAT, jobId);
 
@@ -65,11 +69,7 @@ public void onStopped(boolean cancelled) {
         }
     }
 
-    private String getTag() {
-        return getTags().iterator().next();
-    }
-
     private int getJobId() {
-        return JobProxyWorkManager.getJobIdFromTag(getTag());
+        return JobProxyWorkManager.getJobIdFromTags(getTags());
     }
 }
