diff --git a/CHANGELOG.md b/CHANGELOG.md
index 6fc429c..708365d 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,3 +1,7 @@
+## 1.1.12
+
+* Handle NPE inside of `JobScheduler`
+
 ## 1.1.11 (2017-06-05)
 
 * Fix a race condition when canceling jobs, see #178
diff --git a/gradle.properties b/gradle.properties
index 78759cd..85f0cfe 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,3 +1,3 @@
-#VERSION_NAME=1.1.11
-VERSION_NAME=1.1.11-SNAPSHOT
+#VERSION_NAME=1.1.12
+VERSION_NAME=1.1.12-SNAPSHOT
 VERSION_CODE=1
\ No newline at end of file
diff --git a/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java b/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java
index e0b3dc0..0884ff1 100644
--- a/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java
+++ b/library/src/main/java/com/evernote/android/job/v21/JobProxy21.java
@@ -210,6 +210,14 @@ protected final int schedule(JobInfo jobInfo) {
             } else {
                 throw e;
             }
+        } catch (NullPointerException e) {
+            /*
+            Attempt to invoke interface method 'int android.app.job.IJobScheduler.schedule(android.app.job.JobInfo)' on a null object reference
+            at android.app.JobSchedulerImpl.schedule(JobSchedulerImpl.java:42)
+            at com.evernote.android.job.v21.JobProxy21.schedule(JobProxy21.java:198)
+             */
+            mCat.e(e);
+            throw new JobProxyIllegalStateException(e);
         }
     }
 
diff --git a/library/src/test/java/com/evernote/android/job/JobProxyTest.java b/library/src/test/java/com/evernote/android/job/JobProxyTest.java
index 948cac8..8f5e671 100644
--- a/library/src/test/java/com/evernote/android/job/JobProxyTest.java
+++ b/library/src/test/java/com/evernote/android/job/JobProxyTest.java
@@ -198,6 +198,33 @@ public void verifyRecoverWithoutServiceJobScheduler() throws Exception {
         verifyAlarmCount(alarmManager, 1);
     }
 
+    @Test
+    @Config(sdk = 21)
+    public void verifyRecoverWithNpeInJobScheduler() throws Exception {
+        Context context = BaseJobManagerTest.createMockContext();
+        Context applicationContext = context.getApplicationContext();
+
+        AlarmManager alarmManager = (AlarmManager) applicationContext.getSystemService(Context.ALARM_SERVICE);
+
+        JobScheduler scheduler = spy((JobScheduler) applicationContext.getSystemService(Context.JOB_SCHEDULER_SERVICE));
+        when(applicationContext.getSystemService(Context.JOB_SCHEDULER_SERVICE)).thenReturn(scheduler);
+
+        doThrow(new NullPointerException("Attempt to invoke interface method 'int android.app.job.IJobScheduler.schedule(android.app.job.JobInfo)' on a null object reference"))
+                .when(scheduler)
+                .schedule(any(JobInfo.class));
+
+        JobManager.create(context);
+
+        new JobRequest.Builder("tag")
+                .setExecutionWindow(200_000, 300_000)
+                .setPersisted(true)
+                .build()
+                .schedule();
+
+        assertThat(scheduler.getAllPendingJobs()).isEmpty();
+        verifyAlarmCount(alarmManager, 1);
+    }
+
     private void verifyAlarmCount(AlarmManager alarmManager, int count) throws NoSuchFieldException, IllegalAccessException {
         Field declaredField = alarmManager.getClass().getDeclaredField("__robo_data__");
         declaredField.setAccessible(true);
