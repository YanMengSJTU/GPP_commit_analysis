diff --git a/FAQ.md b/FAQ.md
index 28bf501..5434870 100644
--- a/FAQ.md
+++ b/FAQ.md
@@ -260,7 +260,7 @@ public class SeparateProcessService extends IntentService {
 
 ### How can I add a custom logger?
 
-By default the library prints all log statement in Logcat. But often you wish to store those somewhere else, e.g. in file. The `JobCat` class gives you an option register a custom logger. It's recommended to add the logger before creating the `JobManager` instance.
+By default the library prints all log statement in Logcat. But often you wish to store those somewhere else, e.g. in a file. The `JobCat` class gives you an option register a custom logger. It's recommended to add the logger before creating the `JobManager` instance.
 
 ```java
 private class TestPrinter implements CatPrinter {
@@ -285,4 +285,9 @@ public class App extends Application {
         JobManager.create(this).addJobCreator(new DemoJobCreator());
     }
 }
+```
+
+If you wish, you can even disable printing messages to Logcat, if you own logger handles that for you
+```java
+JobCat.setLogcatEnabled(false);
 ```
\ No newline at end of file
diff --git a/library/src/main/java/com/evernote/android/job/JobManager.java b/library/src/main/java/com/evernote/android/job/JobManager.java
index 924851b..6322fac 100644
--- a/library/src/main/java/com/evernote/android/job/JobManager.java
+++ b/library/src/main/java/com/evernote/android/job/JobManager.java
@@ -484,7 +484,7 @@ private Config() {
          * @return Whether logging is enabled for this library. The default value is {@code true}.
          */
         public boolean isVerbose() {
-            return JobCat.isVerbose();
+            return JobCat.isLogcatEnabled();
         }
 
         /**
@@ -493,7 +493,7 @@ public boolean isVerbose() {
          * @param verbose Whether or not to print all log messages. The default value is {@code true}.
          */
         public void setVerbose(boolean verbose) {
-            JobCat.setVerbose(verbose);
+            JobCat.setLogcatEnabled(verbose);
         }
 
         /**
diff --git a/library/src/main/java/com/evernote/android/job/util/JobCat.java b/library/src/main/java/com/evernote/android/job/util/JobCat.java
index 29b634d..d4ae71d 100644
--- a/library/src/main/java/com/evernote/android/job/util/JobCat.java
+++ b/library/src/main/java/com/evernote/android/job/util/JobCat.java
@@ -41,7 +41,7 @@
 public class JobCat extends CatLazy {
 
     private static volatile CatPrinter[] printers = new CatPrinter[0]; // use array to avoid synchronization while printing log statements
-    private static volatile boolean verbose = true;
+    private static volatile boolean logcatEnabled = true;
 
     /**
      * Add a global logger for the job library, which will be notified about each log statement.
@@ -86,19 +86,19 @@ public static synchronized void removeLogPrinter(@NonNull CatPrinter printer) {
     }
 
     /**
-     * Global switch to enable or disable logging.
+     * Global switch to enable or disable printing log messages to Logcat.
      *
-     * @param verbose Whether or not to print all log messages. The default value is {@code true}.
+     * @param enabled Whether or not to print all log messages. The default value is {@code true}.
      */
-    public static void setVerbose(boolean verbose) {
-        JobCat.verbose = verbose;
+    public static void setLogcatEnabled(boolean enabled) {
+        JobCat.logcatEnabled = enabled;
     }
 
     /**
      * @return Whether logging is enabled for this library. The default value is {@code true}.
      */
-    public static boolean isVerbose() {
-        return verbose;
+    public static boolean isLogcatEnabled() {
+        return logcatEnabled;
     }
 
     private final String mTag;
@@ -122,18 +122,18 @@ public String getTag() {
 
     @Override
     protected void println(int priority, String message, Throwable t) {
-        if (!verbose) {
-            return;
+        if (logcatEnabled) {
+            super.println(priority, message, t);
         }
 
-        super.println(priority, message, t);
-
-        String tag = getTag();
-
         CatPrinter[] printers = JobCat.printers;
-        for (CatPrinter printer : printers) {
-            if (printer != null) {
-                printer.println(priority, tag, message, t);
+        if (printers.length > 0) {
+            String tag = getTag();
+
+            for (CatPrinter printer : printers) {
+                if (printer != null) {
+                    printer.println(priority, tag, message, t);
+                }
             }
         }
     }
diff --git a/library/src/test/java/com/evernote/android/job/util/TestLogger.java b/library/src/test/java/com/evernote/android/job/util/TestLogger.java
index f8ffdf5..d9b3ffc 100644
--- a/library/src/test/java/com/evernote/android/job/util/TestLogger.java
+++ b/library/src/test/java/com/evernote/android/job/util/TestLogger.java
@@ -25,18 +25,18 @@
 
     @After
     public void resetValue() {
-        JobCat.setVerbose(true);
+        JobCat.setLogcatEnabled(true);
         mResetValueCalled = true;
     }
 
     @Test
-    public void testIsVerbose() {
+    public void testIsLogcatEnabled() {
         // first test in class, so resetValue() hasn't been called, yet
         assertThat(mResetValueCalled).isFalse();
-        assertThat(JobCat.isVerbose()).isTrue();
+        assertThat(JobCat.isLogcatEnabled()).isTrue();
 
-        JobCat.setVerbose(false);
-        assertThat(JobCat.isVerbose()).isFalse();
+        JobCat.setLogcatEnabled(false);
+        assertThat(JobCat.isLogcatEnabled()).isFalse();
     }
 
     @Test
@@ -116,17 +116,17 @@ public void test100Loggers() {
     public void testNotVerboseLogging() {
         JobCat cat = new JobCat("Tag");
 
-        TestPrinter printer = new TestPrinter();
-        assertThat(JobCat.addLogPrinter(printer)).isTrue();
+        TestPrinter fakeLogcatPrinter = new TestPrinter();
+        cat.addPrinter(fakeLogcatPrinter); // in this list logcat is enabled
 
         cat.d("hello");
 
-        assertThat(printer.mMessages).containsExactly("hello");
+        assertThat(fakeLogcatPrinter.mMessages).containsExactly("hello");
 
-        JobCat.setVerbose(false);
+        JobCat.setLogcatEnabled(false);
 
         cat.d("world");
-        assertThat(printer.mMessages).containsExactly("hello");
+        assertThat(fakeLogcatPrinter.mMessages).containsExactly("hello");
     }
 
     private static final class TestPrinter implements CatPrinter {
