diff --git a/library/src/main/java/com/evernote/android/job/util/Device.java b/library/src/main/java/com/evernote/android/job/util/Device.java
index 678a883..f7ef01a 100644
--- a/library/src/main/java/com/evernote/android/job/util/Device.java
+++ b/library/src/main/java/com/evernote/android/job/util/Device.java
@@ -20,6 +20,7 @@
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.net.ConnectivityManager;
+import android.net.NetworkCapabilities;
 import android.net.NetworkInfo;
 import android.os.BatteryManager;
 import android.os.Build;
@@ -89,6 +90,7 @@ public static boolean isIdle(Context context) {
      * @return The current network type of the device.
      */
     @NonNull
+    @SuppressWarnings("deprecation")
     public static JobRequest.NetworkType getNetworkType(@NonNull Context context) {
         ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
         NetworkInfo networkInfo;
@@ -107,13 +109,27 @@ public static boolean isIdle(Context context) {
             return JobRequest.NetworkType.UNMETERED;
         }
 
-        if (networkInfo.isRoaming()) {
+        if (isRoaming(connectivityManager, networkInfo)) {
             return JobRequest.NetworkType.CONNECTED;
         } else {
             return JobRequest.NetworkType.NOT_ROAMING;
         }
     }
 
+    @SuppressWarnings("deprecation")
+    private static boolean isRoaming(ConnectivityManager connectivityManager, NetworkInfo networkInfo) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.P) {
+            return networkInfo.isRoaming();
+        }
+
+        try {
+            NetworkCapabilities capabilities = connectivityManager.getNetworkCapabilities(connectivityManager.getActiveNetwork());
+            return capabilities.hasCapability(NetworkCapabilities.NET_CAPABILITY_NOT_ROAMING);
+        } catch (Exception e) {
+            return networkInfo.isRoaming();
+        }
+    }
+
     public static boolean isStorageLow() {
         // figure this out
         return false;
diff --git a/library/src/main/java/com/evernote/android/job/v26/JobProxy26.java b/library/src/main/java/com/evernote/android/job/v26/JobProxy26.java
index 5723cab..6547bcc 100644
--- a/library/src/main/java/com/evernote/android/job/v26/JobProxy26.java
+++ b/library/src/main/java/com/evernote/android/job/v26/JobProxy26.java
@@ -62,11 +62,17 @@ protected boolean isJobInfoScheduled(@Nullable JobInfo info, @NonNull JobRequest
                 .setRequiresStorageNotLow(request.requiresStorageNotLow());
     }
 
+    @SuppressWarnings("deprecation")
     @Override
     protected int convertNetworkType(@NonNull JobRequest.NetworkType networkType) {
         switch (networkType) {
             case METERED:
-                return JobInfo.NETWORK_TYPE_METERED;
+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
+                    return JobInfo.NETWORK_TYPE_CELLULAR;
+                } else {
+                    return JobInfo.NETWORK_TYPE_METERED;
+                }
+
             default:
                 return super.convertNetworkType(networkType);
         }
diff --git a/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java b/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
index 4c1d767..41d09a8 100644
--- a/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
+++ b/library/src/main/java/com/evernote/android/job/work/PlatformWorker.java
@@ -1,5 +1,6 @@
 package com.evernote.android.job.work;
 
+import android.content.Context;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.support.annotation.RestrictTo;
@@ -11,6 +12,7 @@
 import com.evernote.android.job.util.JobCat;
 
 import androidx.work.Worker;
+import androidx.work.WorkerParameters;
 
 /**
  * @author rwondratschek
@@ -20,6 +22,10 @@
 
     private static final JobCat CAT = new JobCat("PlatformWorker");
 
+    public PlatformWorker(@NonNull Context context, @NonNull WorkerParameters workerParams) {
+        super(context, workerParams);
+    }
+
     @NonNull
     @Override
     public Result doWork() {
diff --git a/library/src/test/java/com/evernote/android/job/JobRequirementTest.java b/library/src/test/java/com/evernote/android/job/JobRequirementTest.java
index 1a81d46..835bdf5 100644
--- a/library/src/test/java/com/evernote/android/job/JobRequirementTest.java
+++ b/library/src/test/java/com/evernote/android/job/JobRequirementTest.java
@@ -22,6 +22,7 @@
  * @author rwondratschek
  */
 @FixMethodOrder(MethodSorters.JVM)
+@SuppressWarnings("deprecation")
 public class JobRequirementTest {
 
     @Test
diff --git a/library/src/test/java/com/evernote/android/job/util/DeviceTest.java b/library/src/test/java/com/evernote/android/job/util/DeviceTest.java
index d74fc1b..92a053c 100644
--- a/library/src/test/java/com/evernote/android/job/util/DeviceTest.java
+++ b/library/src/test/java/com/evernote/android/job/util/DeviceTest.java
@@ -19,6 +19,7 @@
  * @author rwondratschek
  */
 @FixMethodOrder(MethodSorters. JVM)
+@SuppressWarnings("deprecation")
 public class DeviceTest {
 
     @Test
