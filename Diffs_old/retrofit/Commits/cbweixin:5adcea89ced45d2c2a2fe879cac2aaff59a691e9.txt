diff --git a/samples/src/main/java/com/example/retrofit/ipservice/IPRequestDemo.java b/samples/src/main/java/com/example/retrofit/ipservice/IPRequestDemo.java
index 026aded1e..a6cf34614 100644
--- a/samples/src/main/java/com/example/retrofit/ipservice/IPRequestDemo.java
+++ b/samples/src/main/java/com/example/retrofit/ipservice/IPRequestDemo.java
@@ -8,6 +8,7 @@
 
 import com.example.retrofit.ipservice.model.IPMode;
 
+import java.util.HashMap;
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
@@ -114,6 +115,7 @@ public void onResponse(Call<IPMode> call, Response<IPMode> response) {
                 LOGGER.log(Level.INFO, "onResponse: " + ipMode.getData().getRegion());
                 LOGGER.log(Level.INFO, "onResponse: " + ipMode.getData().getCity());
             }
+
             @Override
             public void onFailure(Call<IPMode> call, Throwable t) {
                 LOGGER.log(Level.SEVERE, "onFailure: ");
@@ -121,6 +123,7 @@ public void onFailure(Call<IPMode> call, Throwable t) {
             }
         });
     }
+
     public void getParamesPathIp() {
         //        Get带参数请求(路径和IP)
         final String baseUrl = "http://ip.taobao.com/";
@@ -141,6 +144,38 @@ public void onResponse(Call<IPMode> call, Response<IPMode> response) {
                 LOGGER.log(Level.INFO, "onResponse: " + ipMode.getData().getRegion());
                 LOGGER.log(Level.INFO, "onResponse: " + ipMode.getData().getCity());
             }
+
+            @Override
+            public void onFailure(Call<IPMode> call, Throwable t) {
+                LOGGER.log(Level.SEVERE, "onFailure: ");
+                t.printStackTrace();
+            }
+        });
+    }
+
+    public void getParamesQuaryMap() {
+        //        Get带参数请求(动态指定查询条件组)
+        final String baseUrl = "http://ip.taobao.com/";
+        Retrofit retrofit = new Retrofit
+                .Builder()
+                .baseUrl(baseUrl)
+                .addConverterFactory(GsonConverterFactory.create())
+                .build();
+        IPService ipService = retrofit.create(IPService.class);
+        HashMap<String, String> hashMap = new HashMap<>();
+        hashMap.put("ip", "59.108.54.37"); //Key 和 Value要对应，其中Key名要与网站对应
+        Call<IPMode> ipMsg = ipService.getIpMsgGet(hashMap);
+        ipMsg.enqueue(new Callback<IPMode>() {
+            @Override
+            public void onResponse(Call<IPMode> call, Response<IPMode> response) {
+                LOGGER.log(Level.SEVERE, response.code() + "");
+                LOGGER.log(Level.SEVERE, response.toString());
+                IPMode ipMode = response.body();
+                LOGGER.log(Level.INFO, "onResponse: " + ipMode.getCode());
+                LOGGER.log(Level.INFO, "onResponse: " + ipMode.getData().getRegion());
+                LOGGER.log(Level.INFO, "onResponse: " + ipMode.getData().getCity());
+            }
+
             @Override
             public void onFailure(Call<IPMode> call, Throwable t) {
                 LOGGER.log(Level.SEVERE, "onFailure: ");
@@ -151,10 +186,12 @@ public void onFailure(Call<IPMode> call, Throwable t) {
 
     public static void main(String[] args) {
         IPRequestDemo demo = new IPRequestDemo();
-//        demo.getSimple();
-//        demo.getSimple2();
-//        demo.getParamesPath();
-//        demo.getParamesIp();
-        demo.getParamesPathIp();
+        //        demo.getSimple();
+        //        demo.getSimple2();
+        //        demo.getParamesPath();
+        //        demo.getParamesIp();
+        //        demo.getParamesPathIp();
+        demo.getParamesQuaryMap();
     }
+
 }
diff --git a/samples/src/main/java/com/example/retrofit/ipservice/IPService.java b/samples/src/main/java/com/example/retrofit/ipservice/IPService.java
index ffb9a16e2..84a8b3c0e 100644
--- a/samples/src/main/java/com/example/retrofit/ipservice/IPService.java
+++ b/samples/src/main/java/com/example/retrofit/ipservice/IPService.java
@@ -5,10 +5,13 @@
 import retrofit2.http.Headers;
 import retrofit2.http.Path;
 import retrofit2.http.Query;
+import retrofit2.http.QueryMap;
 import retrofit2.http.Url;
 
 import com.example.retrofit.ipservice.model.IPMode;
 
+import java.util.Map;
+
 public interface IPService {
 
     @Headers({
@@ -65,4 +68,18 @@
     })
     @GET("{path}")
     Call<IPMode> getIpMsgGet(@Path("path") String pathStr, @Query("ip") String ipStr);
+
+
+    /**
+     * 动态指定查询条件组
+     *
+     * @param quaryMap
+     * @return
+     */
+    @Headers({
+            "Accept-Encoding: application/json",
+            "User-Agent: MoonRetrofit"
+    })
+    @GET("service/getIpInfo.php")
+    Call<IPMode> getIpMsgGet(@QueryMap Map<String, String> quaryMap);
 }
