diff --git a/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/RxJavaCallAdapterFactory.java b/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/RxJavaCallAdapterFactory.java
index 51804b76f..bfe72275f 100644
--- a/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/RxJavaCallAdapterFactory.java
+++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/RxJavaCallAdapterFactory.java
@@ -100,9 +100,17 @@ private RxJavaCallAdapterFactory(@Nullable Scheduler scheduler, boolean isAsync)
     if (rawType != Observable.class && !isSingle && !isCompletable) {
       return null;
     }
+    
+    int count;
+    for (Annotation annotation : annotations) {
+      if (!Retry.class.isAssignableFrom(annotation.getClass())) continue;
+      count = Retry.class.cast(annotation).count();
+      if (count<0) throw new IllegalArgumentException(
+          "The count in the \'@Retry\' is less than zero");
+    }
 
     if (isCompletable) {
-      return new RxJavaCallAdapter(Void.class, scheduler, isAsync, false, true, false, true);
+      return new RxJavaCallAdapter(Void.class, scheduler, count, isAsync, false, true, false, true);
     }
 
     boolean isResult = false;
@@ -134,7 +142,7 @@ private RxJavaCallAdapterFactory(@Nullable Scheduler scheduler, boolean isAsync)
       isBody = true;
     }
 
-    return new RxJavaCallAdapter(responseType, scheduler, isAsync, isResult, isBody, isSingle,
+    return new RxJavaCallAdapter(responseType, scheduler, count, isAsync, isResult, isBody, isSingle,
         false);
   }
 }
