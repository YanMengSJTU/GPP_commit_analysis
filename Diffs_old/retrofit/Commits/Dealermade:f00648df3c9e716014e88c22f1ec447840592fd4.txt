diff --git a/README.md b/README.md
index c101a0078..0092e058f 100644
--- a/README.md
+++ b/README.md
@@ -1,5 +1,52 @@
 Retrofit
 ========
+Added Request object to RetrofitError so I can get full visibility in my retrofit exceptions.
+
+```java
+class ExampleErrorHandler implements ErrorHandler {
+    @Override public Throwable handleError(RetrofitError cause) {
+        Response response = cause.getResponse();
+        Bugsnag.addToTab("Retrofit", "Cause", cause.toString());
+        if(response != null) {
+            Bugsnag.addToTab("Retrofit", "Response-Headers", convertHeaders(cause.getResponse().getHeaders()));
+            Bugsnag.addToTab("Retrofit", "Response-Status", String.format("%d - %s", cause.getResponse().getStatus(), cause.getResponse().getReason()));
+            Bugsnag.addToTab("Retrofit", "Response-Body", responseBodyToString(cause.getResponse().getBody()));
+        }
+        Request request = cause.getRequest();
+        if(request != null) {
+            Bugsnag.addToTab("Retrofit", "Request-Method", request.getMethod());
+            Bugsnag.addToTab("Retrofit", "Request-Url", request.getUrl());
+            Bugsnag.addToTab("Retrofit", "Request-Headers", convertHeaders(request.getHeaders()));
+            if(request.getMethod().equals("POST") && request.getBody().getClass().equals(MultipartTypedOutput.class)) {
+                Bugsnag.addToTab("Retrofit", "Request-Multipart", request.getBody().fileName());
+                MultipartTypedOutput body = (MultipartTypedOutput) request.getBody();
+                try {
+                    List<byte[]> bodyParts = MultiPartMimeHelper.getParts(body);
+                    StringBuilder formParams = new StringBuilder();
+                    String binaryCheck = "Content-Transfer-Encoding: binary";
+                    for(byte[] bytes : bodyParts) {
+                        String s = new String(bytes);
+                        if(s.contains(binaryCheck)) {
+                            formParams.append(s.split(binaryCheck)[0]).append(binaryCheck);
+                        } else {
+                            formParams.append(s);
+                        }
+                    }
+                    Bugsnag.addToTab("Retrofit", "Request-Body", formParams.toString());
+                } catch (Exception ex) {
+                    //wanting to bury this exception.
+                    ex.printStackTrace();
+                }
+            } else {
+                Bugsnag.addToTab("Retrofit", "Request-Body", request.getBody());
+            }
+        } else {
+            Bugsnag.addToTab("Retrofit", "Url", cause.getUrl());
+        }
+        return cause;
+    }
+}
+```
 
 Type-safe REST client for Android and Java by Square, Inc.
 
