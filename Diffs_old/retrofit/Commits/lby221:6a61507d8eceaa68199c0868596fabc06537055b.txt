diff --git a/retrofit-adapters/rxjava/pom.xml b/retrofit-adapters/rxjava/pom.xml
index 5a93c599b..763db9de8 100644
--- a/retrofit-adapters/rxjava/pom.xml
+++ b/retrofit-adapters/rxjava/pom.xml
@@ -14,6 +14,13 @@
   <name>Adapter: RxJava</name>
 
   <dependencies>
+    <dependency>
+      <groupId>${project.groupId}</groupId>
+      <artifactId>retrofit</artifactId>
+      <version>${project.version}</version>
+      <systemPath>${basedir}/../../retrofit/target/retrofit-2.3.1.jar</systemPath>
+      <scope>system</scope>
+    </dependency>
     <dependency>
       <groupId>io.reactivex</groupId>
       <artifactId>rxjava</artifactId>
diff --git a/retrofit-converters/gson/pom.xml b/retrofit-converters/gson/pom.xml
index ee80a7287..ba23f0e19 100644
--- a/retrofit-converters/gson/pom.xml
+++ b/retrofit-converters/gson/pom.xml
@@ -14,6 +14,17 @@
   <name>Converter: Gson</name>
 
   <dependencies>
+    <dependency>
+      <groupId>${project.groupId}</groupId>
+      <artifactId>retrofit</artifactId>
+      <version>${project.version}</version>
+      <systemPath>${basedir}/../../retrofit/target/retrofit-2.3.1.jar</systemPath>
+      <scope>system</scope>
+    </dependency>
+    <dependency>
+      <groupId>com.squareup.okhttp3</groupId>
+      <artifactId>okhttp</artifactId>
+    </dependency>
     <dependency>
       <groupId>com.google.code.gson</groupId>
       <artifactId>gson</artifactId>
diff --git a/retrofit/src/main/java/retrofit2/LoodahInterceptor.java b/retrofit/src/main/java/retrofit2/LoodahInterceptor.java
index 46f2aa063..bb80643e8 100644
--- a/retrofit/src/main/java/retrofit2/LoodahInterceptor.java
+++ b/retrofit/src/main/java/retrofit2/LoodahInterceptor.java
@@ -13,7 +13,4 @@
 
     // set custom user agent
     String setUserAgent();
-
-    // set Loodah endpoint
-    String setEndpoint();
 }
diff --git a/retrofit/src/main/java/retrofit2/RequestBuilder.java b/retrofit/src/main/java/retrofit2/RequestBuilder.java
index a710d248d..2d649beb9 100644
--- a/retrofit/src/main/java/retrofit2/RequestBuilder.java
+++ b/retrofit/src/main/java/retrofit2/RequestBuilder.java
@@ -229,11 +229,8 @@ Request build() {
     // Add Loodah headers
       StringBuffer sb = new StringBuffer();
 
-    String endpoint = relativeUrl != null ? relativeUrl : "";
-
-    if (loodahInterceptor != null) {
-        endpoint = loodahInterceptor.setEndpoint();
-    }
+    String endpoint = url.toString();
+    endpoint = endpoint.replace(baseUrl.toString(), "");
 
     sb.append(method);
     sb.append("\n");
@@ -247,10 +244,15 @@ Request build() {
     String epochtime = String.valueOf(new Date().getTime());
 
     if (loodahInterceptor != null) {
-      sb.append("\n\n");
-      sb.append("authorization");
-      sb.append("\n");
-      sb.append(loodahInterceptor.addAuth());
+        String authString = loodahInterceptor.addAuth();
+
+        if (authString != null && !authString.isEmpty()) {
+            sb.append("\n\n");
+            sb.append("authorization");
+            sb.append("\n");
+            sb.append(authString);
+          requestBuilder.addHeader("Authorization", authString);
+        }
 
       userAgent = loodahInterceptor.setUserAgent();
     }
@@ -286,7 +288,6 @@ Request build() {
     sb.append(epochtime);
 
     String stringToSign = sb.toString();
-    System.out.println(stringToSign);
 
     String signature = "";
     if (loodahInterceptor != null) {
@@ -294,6 +295,7 @@ Request build() {
     }
 
     requestBuilder.addHeader("User-Agent", userAgent);
+    System.out.println(stringToSign);
 
     if (!signature.isEmpty()) {
       requestBuilder.addHeader("X-Loodah-Time", epochtime);
diff --git a/retrofit/src/test/java/retrofit2/RetrofitTest.java b/retrofit/src/test/java/retrofit2/RetrofitTest.java
index 72a385807..6c6536fe5 100644
--- a/retrofit/src/test/java/retrofit2/RetrofitTest.java
+++ b/retrofit/src/test/java/retrofit2/RetrofitTest.java
@@ -96,8 +96,8 @@ public String setEndpoint() {
     @GET("/") Call<okhttp3.Response> badType2();
 
     @GET("/") Call<ResponseBody> getResponseBody();
-    @GET("/") Call<Void> getVoid();
-    @POST("/") Call<ResponseBody> postRequestBody(@Body RequestBody body);
+    @GET("sendcode?a=b") Call<Void> getVoid();
+    @POST("sendcode?a=b") Call<ResponseBody> postRequestBody(@Body RequestBody body);
     @GET("/") Call<ResponseBody> queryString(@Query("foo") String foo);
     @GET("/") Call<ResponseBody> queryObject(@Query("foo") Object foo);
   }
@@ -107,7 +107,7 @@ public String setEndpoint() {
   interface Extending extends CallMethod {
   }
   interface StringService {
-    @GET("/") String get();
+    @GET("sendcode?a=%2b3838383") String get();
   }
   interface UnresolvableResponseType {
     @GET("/") <T> Call<T> typeVariable();
@@ -124,7 +124,7 @@ public String setEndpoint() {
     @POST("/") Call<ResponseBody> wildcardUpperBound(@Body List<? extends RequestBody> body);
   }
   interface VoidService {
-    @GET("/") void nope();
+    @GET("sendcode?a=%2b3838383") void nope();
   }
   interface Annotated {
     @GET("/") @Foo Call<String> method();
