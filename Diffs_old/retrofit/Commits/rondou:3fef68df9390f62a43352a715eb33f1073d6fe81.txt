diff --git a/build.gradle b/build.gradle
index 495c5038e..ee9751d36 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1 +1,5 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
+allprojects {
+    group = GROUP
+    version = VERSION_NAME
+}
diff --git a/gradle.properties b/gradle.properties
new file mode 100644
index 000000000..2c6214050
--- /dev/null
+++ b/gradle.properties
@@ -0,0 +1,4 @@
+VERSION_NAME=2.0.0
+VERSION_CODE=200
+#GROUP=com.github.yongjhih
+GROUP=com.infstory
diff --git a/retrofit-android/build.gradle b/retrofit-android/build.gradle
index 4c6ccac6f..6c5977db5 100644
--- a/retrofit-android/build.gradle
+++ b/retrofit-android/build.gradle
@@ -1,3 +1,5 @@
+ext.artifactId = 'retrofit-android'
+
 buildscript {
     repositories {
         jcenter()
@@ -13,6 +15,7 @@ repositories {
 }
 
 apply plugin: 'com.android.library'
+apply from: 'deploy.gradle'
 
 android {
     compileSdkVersion 22
diff --git a/retrofit-android/deploy.gradle b/retrofit-android/deploy.gradle
new file mode 100644
index 000000000..ae9c03661
--- /dev/null
+++ b/retrofit-android/deploy.gradle
@@ -0,0 +1,116 @@
+/*
+ * Copyright 2013 Chris Banes
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+apply plugin: 'maven'
+apply plugin: 'signing'
+
+def isReleaseBuild() {
+    return VERSION_NAME.contains("SNAPSHOT") == false
+}
+
+def getReleaseRepositoryUrl() {
+    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
+            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
+}
+
+def getSnapshotRepositoryUrl() {
+    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
+            : "https://oss.sonatype.org/content/repositories/snapshots/"
+}
+
+def getRepositoryUsername() {
+    return hasProperty('BINTRAY_USER') ? BINTRAY_USER : ""
+}
+
+def getRepositoryPassword() {
+    return hasProperty('BINTRAY_KEY') ? BINTRAY_KEY : ""
+}
+
+afterEvaluate { project ->
+    uploadArchives {
+        repositories {
+            mavenDeployer {
+                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
+
+                pom.groupId = GROUP
+                pom.artifactId = POM_ARTIFACT_ID
+                pom.version = VERSION_NAME
+
+                repository(url: getReleaseRepositoryUrl()) {
+                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
+                }
+                snapshotRepository(url: getSnapshotRepositoryUrl()) {
+                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
+                }
+
+                pom.project {
+                    name POM_NAME
+                    packaging POM_PACKAGING
+                    description POM_DESCRIPTION
+                    url POM_URL
+
+                    scm {
+                        url POM_SCM_URL
+                        connection POM_SCM_CONNECTION
+                        developerConnection POM_SCM_DEV_CONNECTION
+                    }
+
+                    licenses {
+                        license {
+                            name POM_LICENCE_NAME
+                            url POM_LICENCE_URL
+                            distribution POM_LICENCE_DIST
+                        }
+                    }
+
+                    developers {
+                        developer {
+                            id POM_DEVELOPER_ID
+                            name POM_DEVELOPER_NAME
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+    signing {
+        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
+        sign configurations.archives
+    }
+
+    task androidJavadocs(type: Javadoc) {
+        failOnError false
+        source = android.sourceSets.main.java.srcDirs
+        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
+        classpath += configurations.compile // http://stackoverflow.com/questions/10895032/javadoc-with-gradle-dont-get-the-libraries-while-running-javadoc-task
+    }
+
+    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
+        classifier = 'javadoc'
+        from androidJavadocs.destinationDir
+    }
+
+    task androidSourcesJar(type: Jar) {
+        classifier = 'sources'
+        from android.sourceSets.main.java.sourceFiles
+    }
+
+    artifacts {
+        archives androidSourcesJar
+        archives androidJavadocsJar
+    }
+}
diff --git a/retrofit-android/gradle.properties b/retrofit-android/gradle.properties
new file mode 100644
index 000000000..350a9e5d4
--- /dev/null
+++ b/retrofit-android/gradle.properties
@@ -0,0 +1,21 @@
+VERSION_NAME=2.0.0
+VERSION_CODE=200
+#GROUP=com.github.yongjhih
+GROUP=com.infstory
+
+POM_DESCRIPTION=Turns your REST API into a Java interface
+POM_URL=https://github.com/yongjhih/retrofit
+POM_SCM_URL=https://github.com/yongjhih/retrofit
+POM_SCM_CONNECTION=scm:git@github.com:yongjhih/retrofit.git
+POM_SCM_DEV_CONNECTION=scm:git@github.com:yongjhih/retrofit.git
+POM_LICENCE_NAME=The Apache Software License, Version 2.0
+POM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt
+POM_LICENCE_DIST=repo
+POM_DEVELOPER_ID=yongjhih
+POM_DEVELOPER_NAME=Andrew Chen
+
+POM_NAME=Retrofit2 Processor
+POM_ARTIFACT_ID=retrofit-android
+POM_PACKAGING=aar
+
+RELEASE_REPOSITORY_URL=https://api.bintray.com/maven/yongjhih/maven/retrofit-android/
diff --git a/retrofit-processor/build.gradle b/retrofit-processor/build.gradle
index d4d6e838a..fd4779bef 100644
--- a/retrofit-processor/build.gradle
+++ b/retrofit-processor/build.gradle
@@ -1,3 +1,5 @@
+ext.artifactId = 'retrofit-processor'
+
 apply plugin: 'java'
 apply from: 'deploy.gradle'
 
diff --git a/retrofit/build.gradle b/retrofit/build.gradle
index e63db2e70..8942e2add 100644
--- a/retrofit/build.gradle
+++ b/retrofit/build.gradle
@@ -1,3 +1,5 @@
+ext.artifactId = 'retrofit'
+
 apply plugin: 'java'
 apply from: 'deploy.gradle'
 
@@ -11,7 +13,7 @@ repositories {
 
 dependencies {
     //compile 'com.github.yongjhih:converter-logansquare-retrofit:-SNAPSHOT'
-    compile 'com.infstory:converter-logansquare-retrofit:1.0.0'
+    compile 'com.infstory:converter-logansquare-retrofit:1.0.0' // default generated logansquare-converter
     compile 'com.squareup.okhttp:okhttp:2.4.0'
     compile 'com.squareup.retrofit:retrofit:1.9.0'
     compile 'io.reactivex:rxjava:1.0.9'
diff --git a/retrofit2-github/build.gradle b/retrofit2-github/build.gradle
index e542b1e1b..cad812251 100644
--- a/retrofit2-github/build.gradle
+++ b/retrofit2-github/build.gradle
@@ -13,6 +13,7 @@ repositories {
     maven { url "https://jitpack.io" }
 }
 
+apply from: 'deploy.gradle'
 apply plugin: 'com.android.library'
 apply plugin: 'com.neenbedankt.android-apt'
 
diff --git a/retrofit2-github/deploy.gradle b/retrofit2-github/deploy.gradle
new file mode 100644
index 000000000..4ed55da62
--- /dev/null
+++ b/retrofit2-github/deploy.gradle
@@ -0,0 +1 @@
+apply plugin: 'maven'
diff --git a/settings.gradle b/settings.gradle
index ecb00e445..37c14b29a 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -2,4 +2,3 @@ include 'retrofit', 'retrofit-processor'
 include 'retrofit2-github'
 include 'retrofit2-github-app'
 include 'retrofit-android'
-rootProject.name = 'retrofit-parent'
