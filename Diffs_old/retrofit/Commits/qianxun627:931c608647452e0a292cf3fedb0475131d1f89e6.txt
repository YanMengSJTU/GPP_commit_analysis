diff --git a/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/RxJavaCallAdapter.java b/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/RxJavaCallAdapter.java
index cb75bdc2b..8ccc17e98 100644
--- a/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/RxJavaCallAdapter.java
+++ b/retrofit-adapters/rxjava/src/main/java/retrofit2/adapter/rxjava/RxJavaCallAdapter.java
@@ -27,16 +27,18 @@
 final class RxJavaCallAdapter<R> implements CallAdapter<R, Object> {
   private final Type responseType;
   private final @Nullable Scheduler scheduler;
+  private fainal int retryCount;
   private final boolean isAsync;
   private final boolean isResult;
   private final boolean isBody;
   private final boolean isSingle;
   private final boolean isCompletable;
 
-  RxJavaCallAdapter(Type responseType, @Nullable Scheduler scheduler, boolean isAsync,
-      boolean isResult, boolean isBody, boolean isSingle, boolean isCompletable) {
+  RxJavaCallAdapter(Type responseType, @Nullable Scheduler scheduler, int retryCount,
+      boolean isAsync, boolean isResult, boolean isBody, boolean isSingle, boolean isCompletable) {
     this.responseType = responseType;
     this.scheduler = scheduler;
+    this.retryCount = retryCount
     this.isAsync = isAsync;
     this.isResult = isResult;
     this.isBody = isBody;
@@ -61,7 +63,7 @@
     } else {
       func = callFunc;
     }
-    Observable<?> observable = Observable.create(func);
+    Observable<?> observable = Observable.create(func).retryWhen(new RetryWhenHandler(retryCount));
 
     if (scheduler != null) {
       observable = observable.subscribeOn(scheduler);
