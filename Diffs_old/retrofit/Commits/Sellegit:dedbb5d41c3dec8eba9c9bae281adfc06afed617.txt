diff --git a/retrofit/src/main/java/retrofit/RestAdapter.java b/retrofit/src/main/java/retrofit/RestAdapter.java
index 386da939a..85b02494c 100644
--- a/retrofit/src/main/java/retrofit/RestAdapter.java
+++ b/retrofit/src/main/java/retrofit/RestAdapter.java
@@ -125,7 +125,11 @@ private RestAdapter(Endpoint endpoint, ShareHttpClient client, Executor callback
     this.errorHandler = errorHandler;
   }
 
-  /** Create an implementation of the API defined by the specified {@code service} interface. */
+  public Converter getConverter() {
+    return converter;
+  }
+
+    /** Create an implementation of the API defined by the specified {@code service} interface. */
   @SuppressWarnings("unchecked")
   public <T> T create(Class<T> service) {
     Utils.validateServiceClass(service);
diff --git a/retrofit/src/main/java/retrofit/converter/Converter.java b/retrofit/src/main/java/retrofit/converter/Converter.java
index 12bf27f0a..d6cb8f27d 100644
--- a/retrofit/src/main/java/retrofit/converter/Converter.java
+++ b/retrofit/src/main/java/retrofit/converter/Converter.java
@@ -36,6 +36,8 @@
    */
   Object fromBody(ResponseBody body, Type type) throws IOException;
 
+  Object fromString(String body, Type type) throws IOException;
+
   /**
    * Convert an object to an appropriate representation for HTTP transport.
    *
@@ -43,4 +45,6 @@
    * @return Representation of the specified object as bytes.
    */
   RequestBody toBody(Object object, Type type);
+
+  String toString(Object object, Type type);
 }
diff --git a/retrofit/src/main/java/retrofit/sharehttp/RequestBody.java b/retrofit/src/main/java/retrofit/sharehttp/RequestBody.java
index 9011f38c1..184efa1d3 100644
--- a/retrofit/src/main/java/retrofit/sharehttp/RequestBody.java
+++ b/retrofit/src/main/java/retrofit/sharehttp/RequestBody.java
@@ -4,7 +4,9 @@
 import java.io.IOException;
 import java.nio.charset.Charset;
 
+import okio.Buffer;
 import okio.BufferedSink;
+import okio.BufferedSource;
 import okio.Okio;
 import okio.Source;
 
