diff --git a/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbConverterFactory.java b/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbConverterFactory.java
index 9bbdf307b..7c432d059 100644
--- a/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbConverterFactory.java
+++ b/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbConverterFactory.java
@@ -22,8 +22,6 @@
 import javax.annotation.Nullable;
 import javax.xml.bind.JAXBContext;
 import javax.xml.bind.JAXBException;
-import javax.xml.bind.Marshaller;
-import javax.xml.bind.Unmarshaller;
 import javax.xml.bind.annotation.XmlRootElement;
 import okhttp3.MediaType;
 import okhttp3.RequestBody;
@@ -38,25 +36,41 @@
 public final class JaxbConverterFactory extends Converter.Factory {
   static final MediaType XML = MediaType.get("application/xml; charset=utf-8");
 
-  /** Create an instance using a default {@link JAXBContext} instance for conversion. */
+  /** Create an instance using a default {@link JAXBContext} instance for conversion.
+   *
+   * @return JaxbConverterFactory
+   */
   public static JaxbConverterFactory create() {
     return new JaxbConverterFactory(null);
   }
 
-  /** Create an instance using {@code context} for conversion. */
+  /** Create an instance using {@code context} for conversion.
+   * @param context JAXBContext
+   *
+   * @return JaxbConverterFactory
+   */
   @SuppressWarnings("ConstantConditions") // Guarding public API nullability.
   public static JaxbConverterFactory create(JAXBContext context) {
     if (context == null) throw new NullPointerException("context == null");
     return new JaxbConverterFactory(context);
   }
 
-  /** Create an instance using {@code context}, {@code marshaller}, and {@code unmarshaller} for conversion. */
+  /** Create an instance using {@code context}, {@code marshaller}, and {@code unmarshaller} for
+   * conversion.
+   * @param context JAXBContext
+   * @param marshallerProperties Map
+   * @param unmarshallerProperties Map
+   *
+   * @return JaxbConverterFactory
+   */
   @SuppressWarnings("ConstantConditions")
-  public static JaxbConverterFactory create(JAXBContext context, Map<String, Object> marshallerProperties,
-       Map<String, Object> unmarshallerProperties) {
+  public static JaxbConverterFactory create(JAXBContext context,
+       Map<String, Object> marshallerProperties, Map<String, Object> unmarshallerProperties) {
     if (context == null) throw new NullPointerException("context == null");
-    if (marshallerProperties == null) throw new NullPointerException("marshallerProperties == null");
-    if (unmarshallerProperties == null) throw new NullPointerException("unmarshallerProperties == null");
+    if (marshallerProperties == null)
+      throw new NullPointerException("marshallerProperties == null");
+    if (unmarshallerProperties == null)
+      throw new NullPointerException("unmarshallerProperties == null");
     return new JaxbConverterFactory(context, marshallerProperties, unmarshallerProperties);
   }
 
@@ -68,10 +82,11 @@ public static JaxbConverterFactory create(JAXBContext context, Map<String, Objec
   private JaxbConverterFactory(@Nullable JAXBContext context) {
     this.context = context;
     this.marshallerProperties = new HashMap<>();
-    this. unmarshallerProperties = new HashMap<>();
+    this.unmarshallerProperties = new HashMap<>();
   }
 
-  private JaxbConverterFactory(@Nullable JAXBContext context, @Nullable Map<String, Object> marshallerProperties,
+  private JaxbConverterFactory(@Nullable JAXBContext context,
+      @Nullable Map<String, Object> marshallerProperties,
       @Nullable Map<String, Object> unmarshallerProperties) {
     this.context = context;
     this.marshallerProperties = marshallerProperties;
@@ -81,7 +96,8 @@ private JaxbConverterFactory(@Nullable JAXBContext context, @Nullable Map<String
   @Override public @Nullable Converter<?, RequestBody> requestBodyConverter(Type type,
       Annotation[] parameterAnnotations, Annotation[] methodAnnotations, Retrofit retrofit) {
     if (type instanceof Class && ((Class<?>) type).isAnnotationPresent(XmlRootElement.class)) {
-      return new JaxbRequestConverter<>(contextForType((Class<?>) type), (Class<?>) type, marshallerProperties);
+      return new JaxbRequestConverter<>(contextForType((Class<?>) type),
+              (Class<?>) type, marshallerProperties);
     }
     return null;
   }
@@ -89,7 +105,8 @@ private JaxbConverterFactory(@Nullable JAXBContext context, @Nullable Map<String
   @Override public @Nullable Converter<ResponseBody, ?> responseBodyConverter(
       Type type, Annotation[] annotations, Retrofit retrofit) {
     if (type instanceof Class && ((Class<?>) type).isAnnotationPresent(XmlRootElement.class)) {
-      return new JaxbResponseConverter<>(contextForType((Class<?>) type), (Class<?>) type, unmarshallerProperties);
+      return new JaxbResponseConverter<>(contextForType((Class<?>) type),
+              (Class<?>) type, unmarshallerProperties);
     }
     return null;
   }
diff --git a/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbRequestConverter.java b/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbRequestConverter.java
index 7ef3e8bde..b4bad7024 100644
--- a/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbRequestConverter.java
+++ b/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbRequestConverter.java
@@ -34,7 +34,8 @@
   final Class<T> type;
   final Map<String, Object> marshallerProperties;
 
-  JaxbRequestConverter(JAXBContext context, Class<T> type, Map<String, Object> marshallerProperties) {
+  JaxbRequestConverter(JAXBContext context, Class<T> type,
+      Map<String, Object> marshallerProperties) {
     this.context = context;
     this.type = type;
     this.marshallerProperties = marshallerProperties;
diff --git a/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbResponseConverter.java b/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbResponseConverter.java
index aa1a4e05d..cb39b0991 100644
--- a/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbResponseConverter.java
+++ b/retrofit-converters/jaxb/src/main/java/retrofit2/converter/jaxb/JaxbResponseConverter.java
@@ -33,7 +33,8 @@
   final Class<T> type;
   final Map<String, Object> unmarshallerProperties;
 
-  JaxbResponseConverter(JAXBContext context, Class<T> type, Map<String, Object> unmarshallerProperties) {
+  JaxbResponseConverter(JAXBContext context, Class<T> type,
+      Map<String, Object> unmarshallerProperties) {
     this.context = context;
     this.type = type;
     this.unmarshallerProperties = unmarshallerProperties;
diff --git a/retrofit/src/main/java/retrofit2/Converter.java b/retrofit/src/main/java/retrofit2/Converter.java
index cb9187887..37a64f8d1 100644
--- a/retrofit/src/main/java/retrofit2/Converter.java
+++ b/retrofit/src/main/java/retrofit2/Converter.java
@@ -20,8 +20,6 @@
 import java.lang.reflect.ParameterizedType;
 import java.lang.reflect.Type;
 import javax.annotation.Nullable;
-import javax.xml.bind.Marshaller;
-
 import okhttp3.RequestBody;
 import okhttp3.ResponseBody;
 import retrofit2.http.Body;
