diff --git a/retrofit/src/main/java/retrofit2/gener/Aop.java b/retrofit/src/main/java/retrofit2/gener/Aop.java
new file mode 100644
index 000000000..2cd7ba60a
--- /dev/null
+++ b/retrofit/src/main/java/retrofit2/gener/Aop.java
@@ -0,0 +1,14 @@
+package retrofit2.gener;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+
+@Retention(RetentionPolicy.RUNTIME)
+@Target({ElementType.METHOD, ElementType.TYPE})
+public @interface Aop {
+    String[] keys();
+    String[] values();
+}
\ No newline at end of file
diff --git a/retrofit/src/main/java/retrofit2/gener/FixedField.java b/retrofit/src/main/java/retrofit2/gener/FixedField.java
new file mode 100644
index 000000000..c2490b205
--- /dev/null
+++ b/retrofit/src/main/java/retrofit2/gener/FixedField.java
@@ -0,0 +1,14 @@
+package retrofit2.gener;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+
+@Retention(RetentionPolicy.RUNTIME)
+@Target({ElementType.METHOD, ElementType.TYPE})
+public @interface FixedField {
+    String[] keys();
+    String[] values();
+}
\ No newline at end of file
diff --git a/retrofit/src/main/java/retrofit2/gener/GeneratedField.java b/retrofit/src/main/java/retrofit2/gener/GeneratedField.java
new file mode 100644
index 000000000..3100c71aa
--- /dev/null
+++ b/retrofit/src/main/java/retrofit2/gener/GeneratedField.java
@@ -0,0 +1,29 @@
+/*
+ * Copyright (C) 2011 Square, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package retrofit2.gener;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+@Retention(RetentionPolicy.RUNTIME)
+@Target({ElementType.METHOD, ElementType.TYPE})
+public @interface GeneratedField {
+    String[] keys();
+    Class<? extends Generator>[] generators();
+
+}
\ No newline at end of file
diff --git a/retrofit/src/main/java/retrofit2/gener/GeneratedFieldMap.java b/retrofit/src/main/java/retrofit2/gener/GeneratedFieldMap.java
new file mode 100644
index 000000000..10bb08ba3
--- /dev/null
+++ b/retrofit/src/main/java/retrofit2/gener/GeneratedFieldMap.java
@@ -0,0 +1,12 @@
+package retrofit2.gener;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+@Retention(RetentionPolicy.RUNTIME)
+@Target({ElementType.METHOD, ElementType.TYPE})
+public @interface GeneratedFieldMap {
+    Class<? extends MapGenerator> value();
+}
diff --git a/retrofit/src/main/java/retrofit2/gener/Generator.java b/retrofit/src/main/java/retrofit2/gener/Generator.java
new file mode 100644
index 000000000..2a32d4470
--- /dev/null
+++ b/retrofit/src/main/java/retrofit2/gener/Generator.java
@@ -0,0 +1,8 @@
+package retrofit2.gener;
+
+import java.util.Map;
+
+
+public interface Generator {
+    String generate(Map<String, String> extendFields);
+}
diff --git a/retrofit/src/main/java/retrofit2/gener/MapGenerator.java b/retrofit/src/main/java/retrofit2/gener/MapGenerator.java
new file mode 100644
index 000000000..ab71276fd
--- /dev/null
+++ b/retrofit/src/main/java/retrofit2/gener/MapGenerator.java
@@ -0,0 +1,7 @@
+package retrofit2.gener;
+
+import java.util.Map;
+
+public interface MapGenerator {
+    Map<String, String> generate(Map<String, String> extendFields);
+}
diff --git a/retrofit/src/main/java/retrofit2/gener/Wrapper.java b/retrofit/src/main/java/retrofit2/gener/Wrapper.java
new file mode 100644
index 000000000..c88d55ca5
--- /dev/null
+++ b/retrofit/src/main/java/retrofit2/gener/Wrapper.java
@@ -0,0 +1,14 @@
+package retrofit2.gener;
+
+import java.lang.annotation.ElementType;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.annotation.Target;
+
+
+@Retention(RetentionPolicy.RUNTIME)
+@Target({ElementType.METHOD, ElementType.TYPE})
+public @interface Wrapper {
+    String[] keys();
+    String[] values();
+}
\ No newline at end of file
