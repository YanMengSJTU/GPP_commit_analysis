diff --git a/retrofit-processor/src/main/resources/retrofit/processor/retrofit.vm b/retrofit-processor/src/main/resources/retrofit/processor/retrofit.vm
index 04280f692..2f55be363 100644
--- a/retrofit-processor/src/main/resources/retrofit/processor/retrofit.vm
+++ b/retrofit-processor/src/main/resources/retrofit/processor/retrofit.vm
@@ -740,15 +740,14 @@ public final class $subclass$formalTypes extends $origClass$actualTypes {
 
         #else // Callback<MODEL>
 
-        Observable.zip(retrofitResponseObs, obs, new Func2<retrofit.client.Response, $p.typeArgs, $p.typeArgs>() {
-            @Override public $p.typeArgs call(retrofit.client.Response response, $p.typeArgs object) {
-                ${p.callbackName}.success(object, response);
-                return object;
+        Observable.zip(retrofitResponseObs.subscribeOn(Schedulers.io()), obs.subscribeOn(Schedulers.io()), new Func2<retrofit.client.Response, $p.typeArgs, Tuple2<retrofit.client.Response, $p.typeArgs>>() {
+            @Override public Tuple2<retrofit.client.Response, $p.typeArgs> call(retrofit.client.Response response, $p.typeArgs object) {
+                return new Tuple2<retrofit.client.Response, $p.typeArgs>(response, object);
             }
         })
 
-        .onErrorResumeNext(new Func1<Throwable, Observable<$p.typeArgs>>() {
-            @Override public Observable<$p.typeArgs> call(Throwable e) {
+        .onErrorResumeNext(new Func1<Throwable, Observable<Tuple2<retrofit.client.Response, $p.typeArgs>>>() {
+            @Override public Observable<Tuple2<retrofit.client.Response, $p.typeArgs>> call(Throwable e) {
                 retrofit.RetrofitError retrofitError = null;
                 if (e instanceof retrofit.RetrofitError) {
                     retrofitError = (retrofit.RetrofitError) e;
@@ -765,8 +764,9 @@ public final class $subclass$formalTypes extends $origClass$actualTypes {
             }
         })
 
-        .subscribeOn(Schedulers.io()).subscribe(new Action1<$p.typeArgs>() {
-            @Override public void call($p.typeArgs object) {
+        .subscribe(new Action1<Tuple2<retrofit.client.Response, $p.typeArgs>>() {
+            @Override public void call(Tuple2<retrofit.client.Response, $p.typeArgs> tuple2) {
+                ${p.callbackName}.success(tuple2.t2, tuple2.t1);
             }
         }, new Action1<Throwable>() {
             @Override public void call(Throwable e) {
@@ -1169,4 +1169,14 @@ public final class $subclass$formalTypes extends $origClass$actualTypes {
   }
 #end
 
+  public static class Tuple2<T1, T2> {
+      T1 t1;
+      T2 t2;
+
+      public Tuple2(T1 t1, T2 t2) {
+          this.t1 = t1;
+          this.t2 = t2;
+      }
+  }
+
 }
