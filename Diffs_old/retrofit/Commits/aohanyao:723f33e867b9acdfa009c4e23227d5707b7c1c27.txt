diff --git a/retrofit/src/main/java/retrofit2/RequestFactory.java b/retrofit/src/main/java/retrofit2/RequestFactory.java
index 557e33052..52793c6b9 100644
--- a/retrofit/src/main/java/retrofit2/RequestFactory.java
+++ b/retrofit/src/main/java/retrofit2/RequestFactory.java
@@ -493,6 +493,7 @@ private Headers parseHeaders(String[] headers) {
 
                 Class<?> rawParameterType = Utils.getRawType(type);
                 gotQuery = true;
+                // 对集合的判断
                 if (Iterable.class.isAssignableFrom(rawParameterType)) {
                     if (!(type instanceof ParameterizedType)) {
                         throw parameterError(method, position, rawParameterType.getSimpleName()
@@ -502,15 +503,16 @@ private Headers parseHeaders(String[] headers) {
                     }
                     ParameterizedType parameterizedType = (ParameterizedType) type;
                     Type iterableType = Utils.getParameterUpperBound(0, parameterizedType);
-                    Converter<?, String> converter =
-                            retrofit.stringConverter(iterableType, annotations);
+                    Converter<?, String> converter = retrofit.stringConverter(iterableType, annotations);
                     return new ParameterHandler.Query<>(name, converter, encoded).iterable();
                 } else if (rawParameterType.isArray()) {
+                    // 对数组的判断
                     Class<?> arrayComponentType = boxIfPrimitive(rawParameterType.getComponentType());
                     Converter<?, String> converter =
                             retrofit.stringConverter(arrayComponentType, annotations);
                     return new ParameterHandler.Query<>(name, converter, encoded).array();
                 } else {
+                    // 其它类型
                     Converter<?, String> converter =
                             retrofit.stringConverter(type, annotations);
                     return new ParameterHandler.Query<>(name, converter, encoded);
@@ -653,7 +655,6 @@ private Headers parseHeaders(String[] headers) {
                     return new ParameterHandler.Field<>(name, converter, encoded).iterable();
 
 
-
                 } else if (rawParameterType.isArray()) {
                     // is array
                     Class<?> arrayComponentType = boxIfPrimitive(rawParameterType.getComponentType());
diff --git a/samples/src/main/java/com/example/retrofit/JsonQueryParameters.java b/samples/src/main/java/com/example/retrofit/JsonQueryParameters.java
index 35489272a..62542685d 100644
--- a/samples/src/main/java/com/example/retrofit/JsonQueryParameters.java
+++ b/samples/src/main/java/com/example/retrofit/JsonQueryParameters.java
@@ -55,8 +55,7 @@
           // NOTE: If you also have a JSON converter factory installed in addition to this factory,
           // you can call retrofit.requestBodyConverter(type, annotations) instead of having a
           // reference to it explicitly as a field.
-          Converter<?, RequestBody> delegate =
-              delegateFactory.requestBodyConverter(type, annotations, new Annotation[0], retrofit);
+          Converter<?, RequestBody> delegate =  delegateFactory.requestBodyConverter(type, annotations, new Annotation[0], retrofit);
           return new DelegateToStringConverter<>(delegate);
         }
       }
@@ -64,6 +63,7 @@
     }
 
     static class DelegateToStringConverter<T> implements Converter<T, String> {
+      /**代理*/
       private final Converter<T, RequestBody> delegate;
 
       DelegateToStringConverter(Converter<T, RequestBody> delegate) {
