diff --git a/README.md b/README.md
index 791f72a26..d44c4077c 100644
--- a/README.md
+++ b/README.md
@@ -1,4 +1,4 @@
-# Retrofit 2 (Experiment)
+# NotRetrofit (Experiment)
 
 [![Download](https://api.bintray.com/packages/yongjhih/maven/retrofit/images/download.svg)](https://bintray.com/yongjhih/maven/retrofit/_latestVersion)
 [![JitPack](https://img.shields.io/github/tag/yongjhih/retrofit.svg?label=JitPack)](https://jitpack.io/#yongjhih/retrofit)
@@ -12,19 +12,19 @@
 Contributors..
 [![](art/medium-48.jpg)](https://medium.com/@yongjhih/retrofit2-aa2fffd1a3c0)
 
-![retrofit2](art/retrofit2.png)
+![NotRetrofit](art/retrofit2.png)
 
 [![](art/screenshot-yongjhih.jpg)](https://appetize.io/app/3trwbht63k0rkfmbxbt51h84cr)
 
-retrofit2 turns your REST API into a Java interface.
+NotRetrofit turns your REST API into a Java interface.
 
-square/retrofit is a great project. So, why reinvent the wheel? Retrofit 2 is the first to implement the full stack with generated code. The guiding principle is to generate code that mimics the code that traceable and performant as it can be.
+square/retrofit is a great project. So, why reinvent the wheel? NotRetrofit is the first to implement the full stack with generated code. The guiding principle is to generate code that mimics the code that traceable and performant as it can be.
 
 google/dagger2 has also re-implemented square/dagger.
 
-Retrofit 2 is a compile-time evolution approach to rest api conversion. Taking the approach started in Retrofit 1.x to its ultimate conclusion, Retrofit 2.0 eliminates all reflection, and improves code clarity.
+NotRetrofit is a compile-time evolution approach to rest api conversion. Taking the approach started in Retrofit 1.x to its ultimate conclusion, NotRetrofit.0 eliminates all reflection, and improves code clarity.
 
-Retrofit 2 has implemented almost retrofit’s features. And bonus:
+NotRetrofit has implemented almost retrofit’s features. And bonus:
 
 * [@RetryHeaders](#support-retryheaders)
 * [Global Headers](#global-headers)
