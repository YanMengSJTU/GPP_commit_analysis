diff --git a/README.md b/README.md
index c7a7cdd9e..0d01b4970 100644
--- a/README.md
+++ b/README.md
@@ -11,19 +11,29 @@ Download
 
 Download [the latest JAR][2] or grab via Maven:
 ```xml
+<repositories>
+    <repository>
+        <id>jitpack.io</id>
+        <url>https://jitpack.io</url>
+    </repository>
+</repositories>
 <dependency>
-  <groupId>com.squareup.retrofit2</groupId>
-  <artifactId>retrofit</artifactId>
-  <version>2.1.0</version>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
+    <artifactId>retrofit</artifactId>
+    <version>2.1.0</version>
 </dependency>
 ```
 or Gradle:
 ```groovy
+allprojects {
+    repositories {
+        ...
+        maven { url 'https://jitpack.io' }
+    }
+}
 compile 'com.squareup.retrofit2:retrofit:2.1.0'
 ```
 
-Snapshots of the development version are available in [Sonatype's `snapshots` repository][snap].
-
 Retrofit requires at minimum Java 7 or Android 2.3.
 
 
diff --git a/pom.xml b/pom.xml
index 2db7f19ba..c7bdd612c 100644
--- a/pom.xml
+++ b/pom.xml
@@ -23,7 +23,7 @@
     <version>7</version>
   </parent>
 
-  <groupId>com.squareup.retrofit2</groupId>
+  <groupId>com.github.kjens93.retrofit-lax</groupId>
   <artifactId>parent</artifactId>
   <version>2.2.0-SNAPSHOT</version>
   <packaging>pom</packaging>
@@ -60,7 +60,7 @@
     <!-- Converter Dependencies -->
     <gson.version>2.7</gson.version>
     <protobuf.version>3.0.0</protobuf.version>
-    <jackson.version>2.7.2</jackson.version>
+    <jackson.version>2.8.5</jackson.version>
     <wire.version>2.2.0</wire.version>
     <simplexml.version>2.7.1</simplexml.version>
     <moshi.version>1.3.0</moshi.version>
diff --git a/retrofit-adapters/guava/pom.xml b/retrofit-adapters/guava/pom.xml
index 3992aae04..df5e8dfc2 100644
--- a/retrofit-adapters/guava/pom.xml
+++ b/retrofit-adapters/guava/pom.xml
@@ -4,7 +4,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>retrofit-adapters</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
diff --git a/retrofit-adapters/java8/pom.xml b/retrofit-adapters/java8/pom.xml
index 3dc927d8b..e8e6556c5 100644
--- a/retrofit-adapters/java8/pom.xml
+++ b/retrofit-adapters/java8/pom.xml
@@ -4,7 +4,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>retrofit-adapters</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
diff --git a/retrofit-adapters/pojo/pom.xml b/retrofit-adapters/pojo/pom.xml
new file mode 100644
index 000000000..43428008f
--- /dev/null
+++ b/retrofit-adapters/pojo/pom.xml
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <parent>
+        <groupId>com.github.kjens93.retrofit-lax</groupId>
+        <artifactId>retrofit-adapters</artifactId>
+        <version>2.2.0-SNAPSHOT</version>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+
+    <artifactId>adapter-pojo</artifactId>
+    <name>Adapter: POJO</name>
+
+
+    <dependencies>
+        <dependency>
+            <groupId>${project.groupId}</groupId>
+            <artifactId>retrofit</artifactId>
+            <version>${project.version}</version>
+        </dependency>
+        <dependency>
+            <groupId>junit</groupId>
+            <artifactId>junit</artifactId>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>com.squareup.okhttp3</groupId>
+            <artifactId>mockwebserver</artifactId>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.assertj</groupId>
+            <artifactId>assertj-core</artifactId>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+
+
+</project>
\ No newline at end of file
diff --git a/retrofit-adapters/pojo/src/main/java/retrofit2/adapter/pojo/HttpException.java b/retrofit-adapters/pojo/src/main/java/retrofit2/adapter/pojo/HttpException.java
new file mode 100644
index 000000000..8a92e1545
--- /dev/null
+++ b/retrofit-adapters/pojo/src/main/java/retrofit2/adapter/pojo/HttpException.java
@@ -0,0 +1,47 @@
+package retrofit2.adapter.pojo;
+
+import retrofit2.Call;
+import retrofit2.Response;
+
+import java.io.IOException;
+
+/**
+ * @author kjensen
+ */
+public class HttpException extends RuntimeException {
+
+    public HttpException() {
+    }
+
+    public HttpException(Call<?> call, Response<?> response) {
+        super(extractMessage(call, response));
+    }
+
+    public HttpException(String message) {
+        super(message);
+    }
+
+    public HttpException(String message, Throwable cause) {
+        super(message, cause);
+    }
+
+    public HttpException(Throwable cause) {
+        super(cause);
+    }
+
+    private static String extractMessage(Call<?> call, Response<?> response) {
+        String method = call.request().method();
+        String path = call.request().url().toString();
+        int code = response.code();
+        String msg = response.message();
+        String body;
+        try {
+            body = response.errorBody().string().trim();
+            body = body.length() > 0 ? ": " + body : "";
+        } catch (IOException e) {
+            body = "";
+        }
+        return method + " " + path + " Error: " + code + " " + msg + body;
+    }
+
+}
diff --git a/retrofit-adapters/pojo/src/main/java/retrofit2/adapter/pojo/PojoCallAdapterFactory.java b/retrofit-adapters/pojo/src/main/java/retrofit2/adapter/pojo/PojoCallAdapterFactory.java
new file mode 100644
index 000000000..2e10ba389
--- /dev/null
+++ b/retrofit-adapters/pojo/src/main/java/retrofit2/adapter/pojo/PojoCallAdapterFactory.java
@@ -0,0 +1,69 @@
+/*
+ * Copyright (C) 2015 Square, Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package retrofit2.adapter.pojo;
+
+import retrofit2.*;
+
+import java.io.IOException;
+import java.lang.annotation.Annotation;
+import java.lang.reflect.Type;
+
+public final class PojoCallAdapterFactory extends CallAdapter.Factory {
+
+  private PojoCallAdapterFactory() {}
+
+  public static PojoCallAdapterFactory create() {
+    return new PojoCallAdapterFactory();
+  }
+
+  @Override
+  public CallAdapter<?, ?> get(final Type returnType, Annotation[] annotations, Retrofit retrofit) {
+
+    final Type rawReturnType = CallAdapter.Factory.getRawType(returnType);
+
+    if (rawReturnType == Call.class) {
+      return null;
+    }
+
+    return new CallAdapter<Object, Object>() {
+
+      @Override
+      public Type responseType() {
+        return returnType;
+      }
+
+      @Override
+      public Object adapt(Call<Object> call) {
+        try {
+          Response<?> response = call.execute();
+          if (response.isSuccessful()) {
+            if (rawReturnType != void.class && rawReturnType != Void.class) {
+              return response.body();
+            } else {
+              return null;
+            }
+          } else {
+            throw new HttpException(call, response);
+          }
+        } catch (IOException e) {
+          throw new HttpException(e);
+        }
+      }
+
+    };
+  }
+
+}
diff --git a/retrofit-adapters/pojo/src/test/java/retrofit2/adapter/pojo/CustomReturnTypeTest.java b/retrofit-adapters/pojo/src/test/java/retrofit2/adapter/pojo/CustomReturnTypeTest.java
new file mode 100644
index 000000000..d47936389
--- /dev/null
+++ b/retrofit-adapters/pojo/src/test/java/retrofit2/adapter/pojo/CustomReturnTypeTest.java
@@ -0,0 +1,94 @@
+package retrofit2.adapter.pojo;
+
+import okhttp3.ResponseBody;
+import okhttp3.mockwebserver.MockResponse;
+import okhttp3.mockwebserver.MockWebServer;
+import org.junit.Rule;
+import org.junit.Test;
+import retrofit2.Converter;
+import retrofit2.Retrofit;
+import retrofit2.http.GET;
+
+import java.io.IOException;
+import java.lang.annotation.Annotation;
+import java.lang.reflect.Type;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+/**
+ * @author kjensen
+ */
+public class CustomReturnTypeTest {
+
+    @Rule
+    public final MockWebServer server = new MockWebServer();
+
+    class PoJobj {
+        final String bob, bill;
+
+        PoJobj(String bob, String bill) {
+            this.bob = bob;
+            this.bill = bill;
+        }
+    }
+
+    interface CustomService {
+        @GET("/") String stri();
+        @GET("/") int integer();
+        @GET("/") double doub();
+        @GET("/") boolean boo();
+        @GET("/") PoJobj pojo();
+    }
+
+    @Test
+    public void customReturnTypeAllowed() {
+        Retrofit retrofit = new Retrofit.Builder()
+                .addCallAdapterFactory(PojoCallAdapterFactory.create())
+                .addConverterFactory(new Converter.Factory() {
+                    @Override
+                    public Converter<ResponseBody, ?> responseBodyConverter(final Type type, Annotation[] annotations, Retrofit retrofit) {
+                        return new Converter<ResponseBody, Object>() {
+                            @Override
+                            public Object convert(ResponseBody value) throws IOException {
+                                if (type == String.class) return value.string();
+                                if (type == int.class) return Integer.parseInt(value.string());
+                                if (type == double.class) return Double.parseDouble(value.string());
+                                if (type == boolean.class) return Boolean.parseBoolean(value.string());
+                                if (type == PoJobj.class) return new PoJobj("Bob", "Bill");
+                                return null;
+                            }
+                        };
+                    }
+                })
+                .baseUrl(server.url("/"))
+                .build();
+
+        CustomService service = retrofit.create(CustomService.class);
+
+        server.enqueue(new MockResponse().setResponseCode(200).setBody("Hi"));
+
+        server.enqueue(new MockResponse().setResponseCode(200).setBody("1"));
+
+        server.enqueue(new MockResponse().setResponseCode(200).setBody("2.66"));
+
+        server.enqueue(new MockResponse().setResponseCode(200).setBody("true"));
+
+        server.enqueue(new MockResponse().setResponseCode(200));
+
+        server.enqueue(new MockResponse().setResponseCode(200));
+
+        assertThat(service.stri()).isEqualTo("Hi");
+
+        assertThat(service.integer()).isEqualTo(1);
+
+        assertThat(service.doub()).isEqualTo(2.66);
+
+        assertThat(service.boo()).isEqualTo(true);
+
+        assertThat(service.pojo().bill).isEqualTo("Bill");
+
+        assertThat(service.pojo().bob).isEqualTo("Bob");
+
+    }
+
+}
diff --git a/retrofit-adapters/pojo/src/test/java/retrofit2/adapter/pojo/VoidReturnTypeTest.java b/retrofit-adapters/pojo/src/test/java/retrofit2/adapter/pojo/VoidReturnTypeTest.java
new file mode 100644
index 000000000..ba3fe4273
--- /dev/null
+++ b/retrofit-adapters/pojo/src/test/java/retrofit2/adapter/pojo/VoidReturnTypeTest.java
@@ -0,0 +1,70 @@
+package retrofit2.adapter.pojo;
+
+import okhttp3.mockwebserver.MockResponse;
+import okhttp3.mockwebserver.MockWebServer;
+import org.junit.Assert;
+import org.junit.Rule;
+import org.junit.Test;
+import retrofit2.Retrofit;
+import retrofit2.http.GET;
+
+import static org.assertj.core.api.Assertions.assertThat;
+
+/**
+ * @author kjensen
+ */
+public class VoidReturnTypeTest {
+
+    @Rule
+    public final MockWebServer server = new MockWebServer();
+
+    interface VoidService {
+        @GET("/") void yep();
+        @GET("/") Void yup();
+    }
+
+    @Test
+    public void voidReturnTypeAllowed() {
+        Retrofit retrofit = new Retrofit.Builder()
+                .addCallAdapterFactory(PojoCallAdapterFactory.create())
+                .baseUrl(server.url("/"))
+                .build();
+        VoidService service = retrofit.create(VoidService.class);
+
+        server.enqueue(new MockResponse().setResponseCode(200));
+
+        server.enqueue(new MockResponse().setResponseCode(201));
+
+        service.yep();
+
+        service.yup();
+    }
+
+    @Test
+    public void voidReturnTypeThrowsExceptionOnNon2xx() {
+        Retrofit retrofit = new Retrofit.Builder()
+                .addCallAdapterFactory(PojoCallAdapterFactory.create())
+                .baseUrl(server.url("/"))
+                .build();
+        VoidService service = retrofit.create(VoidService.class);
+
+        server.enqueue(new MockResponse().setResponseCode(401));
+
+        server.enqueue(new MockResponse().setResponseCode(199));
+
+        try {
+            service.yep();
+            Assert.fail();
+        } catch (HttpException e) {
+            assertThat(e).hasMessageContaining("401");
+        }
+
+        try {
+            service.yup();
+            Assert.fail();
+        } catch (HttpException e) {
+            assertThat(e).hasMessageContaining("199");
+        }
+
+    }
+}
diff --git a/retrofit-adapters/pom.xml b/retrofit-adapters/pom.xml
index 7acb0ab4d..61ed5710f 100644
--- a/retrofit-adapters/pom.xml
+++ b/retrofit-adapters/pom.xml
@@ -4,7 +4,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>parent</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
@@ -19,5 +19,6 @@
     <module>java8</module>
     <module>rxjava</module>
     <module>rxjava2</module>
+    <module>pojo</module>
   </modules>
 </project>
diff --git a/retrofit-adapters/rxjava/pom.xml b/retrofit-adapters/rxjava/pom.xml
index 360f1cda3..bdcea016d 100644
--- a/retrofit-adapters/rxjava/pom.xml
+++ b/retrofit-adapters/rxjava/pom.xml
@@ -4,7 +4,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>retrofit-adapters</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
diff --git a/retrofit-adapters/rxjava2/pom.xml b/retrofit-adapters/rxjava2/pom.xml
index 0bce85b20..3d190546d 100644
--- a/retrofit-adapters/rxjava2/pom.xml
+++ b/retrofit-adapters/rxjava2/pom.xml
@@ -4,7 +4,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>retrofit-adapters</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
diff --git a/retrofit-converters/gson/pom.xml b/retrofit-converters/gson/pom.xml
index 0319df301..d8d2aeb02 100644
--- a/retrofit-converters/gson/pom.xml
+++ b/retrofit-converters/gson/pom.xml
@@ -4,7 +4,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>retrofit-converters</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
diff --git a/retrofit-converters/jackson/pom.xml b/retrofit-converters/jackson/pom.xml
index 7029fcf35..9eb5e0047 100644
--- a/retrofit-converters/jackson/pom.xml
+++ b/retrofit-converters/jackson/pom.xml
@@ -4,7 +4,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>retrofit-converters</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
diff --git a/retrofit-converters/moshi/pom.xml b/retrofit-converters/moshi/pom.xml
index 0505438af..c95b018d6 100644
--- a/retrofit-converters/moshi/pom.xml
+++ b/retrofit-converters/moshi/pom.xml
@@ -4,7 +4,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>retrofit-converters</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
diff --git a/retrofit-converters/pom.xml b/retrofit-converters/pom.xml
index 994e56de2..10727f503 100644
--- a/retrofit-converters/pom.xml
+++ b/retrofit-converters/pom.xml
@@ -4,7 +4,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>parent</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
diff --git a/retrofit-converters/protobuf/pom.xml b/retrofit-converters/protobuf/pom.xml
index b88b9e265..a58702aa4 100644
--- a/retrofit-converters/protobuf/pom.xml
+++ b/retrofit-converters/protobuf/pom.xml
@@ -4,7 +4,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>retrofit-converters</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
diff --git a/retrofit-converters/scalars/pom.xml b/retrofit-converters/scalars/pom.xml
index eccf76411..4ca164179 100644
--- a/retrofit-converters/scalars/pom.xml
+++ b/retrofit-converters/scalars/pom.xml
@@ -4,7 +4,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>retrofit-converters</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
diff --git a/retrofit-converters/simplexml/pom.xml b/retrofit-converters/simplexml/pom.xml
index a17639463..da73ac602 100644
--- a/retrofit-converters/simplexml/pom.xml
+++ b/retrofit-converters/simplexml/pom.xml
@@ -4,7 +4,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>retrofit-converters</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
diff --git a/retrofit-converters/wire/pom.xml b/retrofit-converters/wire/pom.xml
index 58ee89226..e51381dd8 100644
--- a/retrofit-converters/wire/pom.xml
+++ b/retrofit-converters/wire/pom.xml
@@ -8,7 +8,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>retrofit-converters</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
diff --git a/retrofit-mock/pom.xml b/retrofit-mock/pom.xml
index c04e94622..5dd1616b9 100644
--- a/retrofit-mock/pom.xml
+++ b/retrofit-mock/pom.xml
@@ -4,7 +4,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>parent</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
diff --git a/retrofit/pom.xml b/retrofit/pom.xml
index 1806770d6..583ae038f 100644
--- a/retrofit/pom.xml
+++ b/retrofit/pom.xml
@@ -4,7 +4,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>parent</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
diff --git a/retrofit/src/main/java/retrofit2/BuiltInConverters.java b/retrofit/src/main/java/retrofit2/BuiltInConverters.java
index f729383a3..1193abeea 100644
--- a/retrofit/src/main/java/retrofit2/BuiltInConverters.java
+++ b/retrofit/src/main/java/retrofit2/BuiltInConverters.java
@@ -15,13 +15,14 @@
  */
 package retrofit2;
 
-import java.io.IOException;
-import java.lang.annotation.Annotation;
-import java.lang.reflect.Type;
 import okhttp3.RequestBody;
 import okhttp3.ResponseBody;
 import retrofit2.http.Streaming;
 
+import java.io.IOException;
+import java.lang.annotation.Annotation;
+import java.lang.reflect.Type;
+
 final class BuiltInConverters extends Converter.Factory {
   @Override
   public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations,
@@ -31,7 +32,7 @@
           ? StreamingResponseBodyConverter.INSTANCE
           : BufferingResponseBodyConverter.INSTANCE;
     }
-    if (type == Void.class) {
+    if (type == void.class || type == Void.class) {
       return VoidResponseBodyConverter.INSTANCE;
     }
     return null;
diff --git a/retrofit/src/main/java/retrofit2/ServiceMethod.java b/retrofit/src/main/java/retrofit2/ServiceMethod.java
index 7765aba03..51f0a757e 100644
--- a/retrofit/src/main/java/retrofit2/ServiceMethod.java
+++ b/retrofit/src/main/java/retrofit2/ServiceMethod.java
@@ -15,6 +15,10 @@
  */
 package retrofit2;
 
+import okhttp3.Headers;
+import okhttp3.*;
+import retrofit2.http.*;
+
 import java.io.IOException;
 import java.lang.annotation.Annotation;
 import java.lang.reflect.Method;
@@ -26,34 +30,6 @@
 import java.util.Set;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
-import okhttp3.Headers;
-import okhttp3.HttpUrl;
-import okhttp3.MediaType;
-import okhttp3.MultipartBody;
-import okhttp3.Request;
-import okhttp3.RequestBody;
-import okhttp3.ResponseBody;
-import retrofit2.http.Body;
-import retrofit2.http.DELETE;
-import retrofit2.http.Field;
-import retrofit2.http.FieldMap;
-import retrofit2.http.FormUrlEncoded;
-import retrofit2.http.GET;
-import retrofit2.http.HEAD;
-import retrofit2.http.HTTP;
-import retrofit2.http.Header;
-import retrofit2.http.HeaderMap;
-import retrofit2.http.Multipart;
-import retrofit2.http.OPTIONS;
-import retrofit2.http.PATCH;
-import retrofit2.http.POST;
-import retrofit2.http.PUT;
-import retrofit2.http.Part;
-import retrofit2.http.PartMap;
-import retrofit2.http.Path;
-import retrofit2.http.Query;
-import retrofit2.http.QueryMap;
-import retrofit2.http.Url;
 
 /** Adapts an invocation of an interface method into an HTTP call. */
 final class ServiceMethod<R, T> {
@@ -224,9 +200,9 @@ public ServiceMethod build() {
         throw methodError(
             "Method return type must not include a type variable or wildcard: %s", returnType);
       }
-      if (returnType == void.class) {
-        throw methodError("Service methods cannot return void.");
-      }
+//      if (returnType == void.class) {
+//        throw methodError("Service methods cannot return void.");
+//      }
       Annotation[] annotations = method.getAnnotations();
       try {
         //noinspection unchecked
diff --git a/retrofit/src/test/java/retrofit2/RetrofitTest.java b/retrofit/src/test/java/retrofit2/RetrofitTest.java
index 92dfb74ca..671f1eb54 100644
--- a/retrofit/src/test/java/retrofit2/RetrofitTest.java
+++ b/retrofit/src/test/java/retrofit2/RetrofitTest.java
@@ -15,30 +15,10 @@
  */
 package retrofit2;
 
-import java.io.IOException;
-import java.lang.annotation.Annotation;
-import java.lang.annotation.Retention;
-import java.lang.reflect.ParameterizedType;
-import java.lang.reflect.Type;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.concurrent.CountDownLatch;
-import java.util.concurrent.Executor;
-import java.util.concurrent.Executors;
-import java.util.concurrent.Future;
-import java.util.concurrent.TimeUnit;
-import java.util.concurrent.atomic.AtomicBoolean;
-import java.util.concurrent.atomic.AtomicInteger;
-import java.util.concurrent.atomic.AtomicReference;
-import okhttp3.HttpUrl;
-import okhttp3.MediaType;
-import okhttp3.OkHttpClient;
-import okhttp3.Request;
-import okhttp3.RequestBody;
-import okhttp3.ResponseBody;
+import okhttp3.*;
 import okhttp3.mockwebserver.MockResponse;
 import okhttp3.mockwebserver.MockWebServer;
+import org.junit.Ignore;
 import org.junit.Rule;
 import org.junit.Test;
 import retrofit2.helpers.DelegatingCallAdapterFactory;
@@ -50,19 +30,25 @@
 import retrofit2.http.POST;
 import retrofit2.http.Query;
 
+import java.io.IOException;
+import java.lang.annotation.Annotation;
+import java.lang.annotation.Retention;
+import java.lang.reflect.ParameterizedType;
+import java.lang.reflect.Type;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+import java.util.concurrent.*;
+import java.util.concurrent.atomic.AtomicBoolean;
+import java.util.concurrent.atomic.AtomicInteger;
+import java.util.concurrent.atomic.AtomicReference;
+
 import static java.lang.annotation.RetentionPolicy.RUNTIME;
 import static okhttp3.mockwebserver.SocketPolicy.DISCONNECT_AT_START;
 import static org.assertj.core.api.Assertions.assertThat;
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertSame;
-import static org.junit.Assert.assertTrue;
-import static org.junit.Assert.fail;
+import static org.junit.Assert.*;
 import static org.mockito.Matchers.any;
-import static org.mockito.Mockito.doReturn;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.spy;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.verifyNoMoreInteractions;
+import static org.mockito.Mockito.*;
 
 public final class RetrofitTest {
   @Rule public final MockWebServer server = new MockWebServer();
@@ -201,6 +187,7 @@
     }
   }
 
+  @Ignore
   @Test public void voidReturnTypeNotAllowed() {
     Retrofit retrofit = new Retrofit.Builder()
         .baseUrl(server.url("/"))
@@ -235,6 +222,7 @@
     retrofit.create(VoidService.class);
   }
 
+  @Ignore
   @Test public void validateEagerlyFailsAtCreation() {
     Retrofit retrofit = new Retrofit.Builder()
         .baseUrl(server.url("/"))
diff --git a/samples/pom.xml b/samples/pom.xml
index e266a2b33..d5a523e7f 100644
--- a/samples/pom.xml
+++ b/samples/pom.xml
@@ -4,7 +4,7 @@
   <modelVersion>4.0.0</modelVersion>
 
   <parent>
-    <groupId>com.squareup.retrofit2</groupId>
+    <groupId>com.github.kjens93.retrofit-lax</groupId>
     <artifactId>parent</artifactId>
     <version>2.2.0-SNAPSHOT</version>
     <relativePath>../pom.xml</relativePath>
