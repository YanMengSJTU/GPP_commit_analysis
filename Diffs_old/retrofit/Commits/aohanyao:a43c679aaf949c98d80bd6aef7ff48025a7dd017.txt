diff --git a/retrofit/src/main/java/retrofit2/DefaultCallAdapterFactory.java b/retrofit/src/main/java/retrofit2/DefaultCallAdapterFactory.java
index a5ea033b0..8049070a4 100644
--- a/retrofit/src/main/java/retrofit2/DefaultCallAdapterFactory.java
+++ b/retrofit/src/main/java/retrofit2/DefaultCallAdapterFactory.java
@@ -25,23 +25,27 @@
  * asynchronous calls this is a thread provided by OkHttp's dispatcher.
  */
 final class DefaultCallAdapterFactory extends CallAdapter.Factory {
-  static final CallAdapter.Factory INSTANCE = new DefaultCallAdapterFactory();
+    static final CallAdapter.Factory INSTANCE = new DefaultCallAdapterFactory();
 
-  @Override public @Nullable CallAdapter<?, ?> get(
-      Type returnType, Annotation[] annotations, Retrofit retrofit) {
-    if (getRawType(returnType) != Call.class) {
-      return null;
-    }
+    @Override
+    public @Nullable
+    CallAdapter<?, ?> get(
+            Type returnType, Annotation[] annotations, Retrofit retrofit) {
+        if (getRawType(returnType) != Call.class) {
+            return null;
+        }
 
-    final Type responseType = Utils.getCallResponseType(returnType);
-    return new CallAdapter<Object, Call<?>>() {
-      @Override public Type responseType() {
-        return responseType;
-      }
+        final Type responseType = Utils.getCallResponseType(returnType);
+        return new CallAdapter<Object, Call<?>>() {
+            @Override
+            public Type responseType() {
+                return responseType;
+            }
 
-      @Override public Call<Object> adapt(Call<Object> call) {
-        return call;
-      }
-    };
-  }
+            @Override
+            public Call<Object> adapt(Call<Object> call) {
+                return call;
+            }
+        };
+    }
 }
diff --git a/retrofit/src/main/java/retrofit2/HttpServiceMethod.java b/retrofit/src/main/java/retrofit2/HttpServiceMethod.java
index 05a1006d9..3ad892829 100644
--- a/retrofit/src/main/java/retrofit2/HttpServiceMethod.java
+++ b/retrofit/src/main/java/retrofit2/HttpServiceMethod.java
@@ -127,6 +127,7 @@ private HttpServiceMethod(RequestFactory requestFactory, okhttp3.Call.Factory ca
 
     @Override
     ReturnT invoke(Object[] args) {
+        // 将call结果进行了 adapt
         return callAdapter.adapt(new OkHttpCall<>(requestFactory, args, callFactory, responseConverter));
     }
 }
