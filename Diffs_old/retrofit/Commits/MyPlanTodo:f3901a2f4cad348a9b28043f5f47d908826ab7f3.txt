diff --git a/README.md b/README.md
index d0b53fa92..c50321baf 100644
--- a/README.md
+++ b/README.md
@@ -600,6 +600,8 @@ repositories {
 dependencies {
     compile 'com.infstory:retrofit:2.0.2'
     apt 'com.infstory:retrofit-processor:2.0.2'
+    compile 'com.infstory:retrofit-android:2.0.2'
+
     compile 'com.bluelinelabs:logansquare:1.1.0'
     apt 'com.bluelinelabs:logansquare-compiler:1.1.0'
 }
@@ -616,6 +618,8 @@ repositories {
 dependencies {
     compile 'com.github.yongjhih.NotRetrofit:retrofit:-SNAPSHOT'
     apt 'com.github.yongjhih.NotRetrofit:retrofit-processor:-SNAPSHOT'
+    compile 'com.github.yongjhih.NotRetrofit:retrofit-android:-SNAPSHOT'
+
     compile 'com.bluelinelabs:logansquare:1.1.0'
     apt 'com.bluelinelabs:logansquare-compiler:1.1.0'
 }
diff --git a/retrofit-android/build.gradle b/retrofit-android/build.gradle
index 14a54fe23..88e5af4ea 100644
--- a/retrofit-android/build.gradle
+++ b/retrofit-android/build.gradle
@@ -65,7 +65,7 @@ def getRepositoryPassword() {
 publish {
     userOrg = 'yongjhih'
     groupId = 'com.infstory'
-    artifactId = 'retrofit-processor'
+    artifactId = 'retrofit-android'
     //uploadName = ''
     publishVersion = '2.0.2'
     desc = 'Type-safe REST client for Android and Java'
diff --git a/retrofit-android/deploy.gradle b/retrofit-android/deploy.gradle
deleted file mode 100644
index ae9c03661..000000000
--- a/retrofit-android/deploy.gradle
+++ /dev/null
@@ -1,116 +0,0 @@
-/*
- * Copyright 2013 Chris Banes
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-def isReleaseBuild() {
-    return VERSION_NAME.contains("SNAPSHOT") == false
-}
-
-def getReleaseRepositoryUrl() {
-    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
-            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
-}
-
-def getSnapshotRepositoryUrl() {
-    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
-            : "https://oss.sonatype.org/content/repositories/snapshots/"
-}
-
-def getRepositoryUsername() {
-    return hasProperty('BINTRAY_USER') ? BINTRAY_USER : ""
-}
-
-def getRepositoryPassword() {
-    return hasProperty('BINTRAY_KEY') ? BINTRAY_KEY : ""
-}
-
-afterEvaluate { project ->
-    uploadArchives {
-        repositories {
-            mavenDeployer {
-                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-                pom.groupId = GROUP
-                pom.artifactId = POM_ARTIFACT_ID
-                pom.version = VERSION_NAME
-
-                repository(url: getReleaseRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-                snapshotRepository(url: getSnapshotRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-
-                pom.project {
-                    name POM_NAME
-                    packaging POM_PACKAGING
-                    description POM_DESCRIPTION
-                    url POM_URL
-
-                    scm {
-                        url POM_SCM_URL
-                        connection POM_SCM_CONNECTION
-                        developerConnection POM_SCM_DEV_CONNECTION
-                    }
-
-                    licenses {
-                        license {
-                            name POM_LICENCE_NAME
-                            url POM_LICENCE_URL
-                            distribution POM_LICENCE_DIST
-                        }
-                    }
-
-                    developers {
-                        developer {
-                            id POM_DEVELOPER_ID
-                            name POM_DEVELOPER_NAME
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    signing {
-        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
-        sign configurations.archives
-    }
-
-    task androidJavadocs(type: Javadoc) {
-        failOnError false
-        source = android.sourceSets.main.java.srcDirs
-        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
-        classpath += configurations.compile // http://stackoverflow.com/questions/10895032/javadoc-with-gradle-dont-get-the-libraries-while-running-javadoc-task
-    }
-
-    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
-        classifier = 'javadoc'
-        from androidJavadocs.destinationDir
-    }
-
-    task androidSourcesJar(type: Jar) {
-        classifier = 'sources'
-        from android.sourceSets.main.java.sourceFiles
-    }
-
-    artifacts {
-        archives androidSourcesJar
-        archives androidJavadocsJar
-    }
-}
diff --git a/retrofit-processor/build.gradle b/retrofit-processor/build.gradle
index 799d76218..ba8403c95 100644
--- a/retrofit-processor/build.gradle
+++ b/retrofit-processor/build.gradle
@@ -61,7 +61,7 @@ def getRepositoryPassword() {
 publish {
     userOrg = 'yongjhih'
     groupId = 'com.infstory'
-    artifactId = 'retrofit-android'
+    artifactId = 'retrofit-processor'
     //uploadName = ''
     publishVersion = '2.0.2'
     desc = 'Type-safe REST client for Android and Java'
diff --git a/retrofit-processor/deploy.gradle b/retrofit-processor/deploy.gradle
deleted file mode 100644
index 1184f2a36..000000000
--- a/retrofit-processor/deploy.gradle
+++ /dev/null
@@ -1,111 +0,0 @@
-/*
- * Copyright 2013 Chris Banes
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-def isReleaseBuild() {
-    return VERSION_NAME.contains("SNAPSHOT") == false
-}
-
-def getReleaseRepositoryUrl() {
-    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
-            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
-}
-
-def getSnapshotRepositoryUrl() {
-    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
-            : "https://oss.sonatype.org/content/repositories/snapshots/"
-}
-
-def getRepositoryUsername() {
-    return hasProperty('BINTRAY_USER') ? BINTRAY_USER : ""
-}
-
-def getRepositoryPassword() {
-    return hasProperty('BINTRAY_KEY') ? BINTRAY_KEY : ""
-}
-
-afterEvaluate { project ->
-    uploadArchives {
-        repositories {
-            mavenDeployer {
-                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-                pom.groupId = GROUP
-                pom.artifactId = POM_ARTIFACT_ID
-                pom.version = VERSION_NAME
-
-                repository(url: getReleaseRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-                snapshotRepository(url: getSnapshotRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-
-                pom.project {
-                    name POM_NAME
-                    packaging POM_PACKAGING
-                    description POM_DESCRIPTION
-                    url POM_URL
-
-                    scm {
-                        url POM_SCM_URL
-                        connection POM_SCM_CONNECTION
-                        developerConnection POM_SCM_DEV_CONNECTION
-                    }
-
-                    licenses {
-                        license {
-                            name POM_LICENCE_NAME
-                            url POM_LICENCE_URL
-                            distribution POM_LICENCE_DIST
-                        }
-                    }
-
-                    developers {
-                        developer {
-                            id POM_DEVELOPER_ID
-                            name POM_DEVELOPER_NAME
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    signing {
-        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
-        sign configurations.archives
-    }
-
-    // http://stackoverflow.com/questions/11474729/how-to-build-sources-jar-with-gradle
-    task javadocsJar(type: Jar, dependsOn: javadoc) {
-        classifier = 'javadoc'
-        from javadoc.destinationDir
-        //classpath += configurations.compile // http://stackoverflow.com/questions/10895032/javadoc-with-gradle-dont-get-the-libraries-while-running-javadoc-task
-    }
-
-    task sourcesJar(type: Jar) {
-        classifier = 'sources'
-        from sourceSets.main.allSource
-    }
-
-    artifacts {
-        archives sourcesJar
-        archives javadocsJar
-    }
-}
diff --git a/retrofit/deploy.gradle b/retrofit/deploy.gradle
deleted file mode 100644
index 1184f2a36..000000000
--- a/retrofit/deploy.gradle
+++ /dev/null
@@ -1,111 +0,0 @@
-/*
- * Copyright 2013 Chris Banes
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-def isReleaseBuild() {
-    return VERSION_NAME.contains("SNAPSHOT") == false
-}
-
-def getReleaseRepositoryUrl() {
-    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
-            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
-}
-
-def getSnapshotRepositoryUrl() {
-    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
-            : "https://oss.sonatype.org/content/repositories/snapshots/"
-}
-
-def getRepositoryUsername() {
-    return hasProperty('BINTRAY_USER') ? BINTRAY_USER : ""
-}
-
-def getRepositoryPassword() {
-    return hasProperty('BINTRAY_KEY') ? BINTRAY_KEY : ""
-}
-
-afterEvaluate { project ->
-    uploadArchives {
-        repositories {
-            mavenDeployer {
-                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-                pom.groupId = GROUP
-                pom.artifactId = POM_ARTIFACT_ID
-                pom.version = VERSION_NAME
-
-                repository(url: getReleaseRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-                snapshotRepository(url: getSnapshotRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-
-                pom.project {
-                    name POM_NAME
-                    packaging POM_PACKAGING
-                    description POM_DESCRIPTION
-                    url POM_URL
-
-                    scm {
-                        url POM_SCM_URL
-                        connection POM_SCM_CONNECTION
-                        developerConnection POM_SCM_DEV_CONNECTION
-                    }
-
-                    licenses {
-                        license {
-                            name POM_LICENCE_NAME
-                            url POM_LICENCE_URL
-                            distribution POM_LICENCE_DIST
-                        }
-                    }
-
-                    developers {
-                        developer {
-                            id POM_DEVELOPER_ID
-                            name POM_DEVELOPER_NAME
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    signing {
-        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
-        sign configurations.archives
-    }
-
-    // http://stackoverflow.com/questions/11474729/how-to-build-sources-jar-with-gradle
-    task javadocsJar(type: Jar, dependsOn: javadoc) {
-        classifier = 'javadoc'
-        from javadoc.destinationDir
-        //classpath += configurations.compile // http://stackoverflow.com/questions/10895032/javadoc-with-gradle-dont-get-the-libraries-while-running-javadoc-task
-    }
-
-    task sourcesJar(type: Jar) {
-        classifier = 'sources'
-        from sourceSets.main.allSource
-    }
-
-    artifacts {
-        archives sourcesJar
-        archives javadocsJar
-    }
-}
diff --git a/retrofit2-github-app/build.gradle b/retrofit2-github-app/build.gradle
index 11050a930..f1351acef 100644
--- a/retrofit2-github-app/build.gradle
+++ b/retrofit2-github-app/build.gradle
@@ -17,7 +17,6 @@ apply plugin: 'com.android.application'
 apply plugin: 'me.tatarka.retrolambda'
 apply plugin: 'hugo'
 apply plugin: 'com.neenbedankt.android-apt'
-apply from: 'deploy.gradle'
 
 android {
     compileSdkVersion 22
diff --git a/retrofit2-github-app/deploy.gradle b/retrofit2-github-app/deploy.gradle
deleted file mode 100644
index 4ed55da62..000000000
--- a/retrofit2-github-app/deploy.gradle
+++ /dev/null
@@ -1 +0,0 @@
-apply plugin: 'maven'
diff --git a/retrofit2-github/build.gradle b/retrofit2-github/build.gradle
index cad812251..62cc4522a 100644
--- a/retrofit2-github/build.gradle
+++ b/retrofit2-github/build.gradle
@@ -13,7 +13,6 @@ repositories {
     maven { url "https://jitpack.io" }
 }
 
-apply from: 'deploy.gradle'
 apply plugin: 'com.android.library'
 apply plugin: 'com.neenbedankt.android-apt'
 
@@ -27,9 +26,13 @@ android {
 }
 
 dependencies {
-    compile project(':retrofit')
-    apt project(':retrofit-processor')
-    compile project(':retrofit-android')
+    //compile project(':retrofit')
+    //apt project(':retrofit-processor')
+    //compile project(':retrofit-android')
+    compile 'com.infstory:retrofit:2.0.2'
+    apt 'com.infstory:retrofit-processor:2.0.2'
+    compile 'com.infstory:retrofit-android:2.0.2'
+
     compile 'io.reactivex:rxjava:1.0.9'
     //compile 'io.reactivex:rxandroid:0.24.0'
     compile 'com.squareup.okhttp:okhttp:2.4.0'
diff --git a/retrofit2-github/deploy.gradle b/retrofit2-github/deploy.gradle
deleted file mode 100644
index 4ed55da62..000000000
--- a/retrofit2-github/deploy.gradle
+++ /dev/null
@@ -1 +0,0 @@
-apply plugin: 'maven'
