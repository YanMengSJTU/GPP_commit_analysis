diff --git a/retrofit/src/main/java/retrofit/RequestBuilder.java b/retrofit/src/main/java/retrofit/RequestBuilder.java
index 7da3d4b96..f161d7a7d 100644
--- a/retrofit/src/main/java/retrofit/RequestBuilder.java
+++ b/retrofit/src/main/java/retrofit/RequestBuilder.java
@@ -191,6 +191,19 @@ void addQueryMapParams(String name, Map<?, ?> values) {
     }
   }
 
+  void addFieldListParams(String name, Iterable<?> values) {
+    if (name == null) {
+      throw new IllegalArgumentException("Field name must not be null.");
+    }
+    if (values == null) {
+      throw new IllegalArgumentException("Field param values must not be null.");
+    }
+
+    for (Object value : values) {
+      formBody.addField(name, value.toString());
+    }
+  }
+
   void setArguments(Object[] args) {
     if (args == null) {
       return;
@@ -241,7 +254,11 @@ void setArguments(Object[] args) {
           break;
         case FIELD:
           if (value != null) { // Skip null values.
-            formBody.addField(name, value.toString());
+            if (value instanceof Iterable) {
+              addFieldListParams(name, (Iterable<?>) value);
+            } else {
+              formBody.addField(name, value.toString());
+            }
           }
           break;
         case PART:
diff --git a/retrofit/src/test/java/retrofit/RequestBuilderTest.java b/retrofit/src/test/java/retrofit/RequestBuilderTest.java
index 53adc342f..e62428ea4 100644
--- a/retrofit/src/test/java/retrofit/RequestBuilderTest.java
+++ b/retrofit/src/test/java/retrofit/RequestBuilderTest.java
@@ -332,6 +332,22 @@
     assertThat(request.getUrl()).isEqualTo("http://example.com/foo/bar/?kit=kat&ping=pong");
     assertThat(request.getBody()).isNull();
   }
+  
+  @Test public void postWithFieldParamList() throws Exception {
+    List<Object> values = new ArrayList<Object>(Arrays.asList(1, 2, "three"));
+    
+    Request request = new Helper() //
+        .setMethod("POST") //
+        .setUrl("http://example.com") //
+        .setPath("/foo/bar/") //
+        .addField("key", values) //
+        .setFormEncoded() //
+        .build();
+    assertThat(request.getMethod()).isEqualTo("POST");
+    assertThat(request.getHeaders()).isEmpty();
+    assertThat(request.getUrl()).isEqualTo("http://example.com/foo/bar/");
+    assertTypedBytes(request.getBody(), "key=1&key=2&key=three");
+  }
 
   @Test public void normalPost() throws Exception {
     Request request = new Helper() //
@@ -690,7 +706,7 @@ Helper addQueryMapParams(String name, Map<String, Object> values) {
       return this;
     }
 
-    Helper addField(String name, String value) {
+    Helper addField(String name, Object value) {
       paramNames.add(name);
       paramUsages.add(FIELD);
       args.add(value);
