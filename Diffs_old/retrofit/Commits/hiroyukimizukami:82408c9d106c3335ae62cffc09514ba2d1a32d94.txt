diff --git a/retrofit/src/main/java/retrofit/RequestBuilder.java b/retrofit/src/main/java/retrofit/RequestBuilder.java
index 7da3d4b96..31c983c83 100644
--- a/retrofit/src/main/java/retrofit/RequestBuilder.java
+++ b/retrofit/src/main/java/retrofit/RequestBuilder.java
@@ -190,6 +190,14 @@ void addQueryMapParams(String name, Map<?, ?> values) {
       }
     }
   }
+  
+  void addPartList(String name, Iterable<?> values) {
+	  MultipartTypedOutput multiPart = this.multipartBody;
+	  String keyName = name + "[]";
+	  for (Object value : values) {
+		  multiPart.addPart(keyName, new TypedString(value.toString()));
+	  }
+  }
 
   void setArguments(Object[] args) {
     if (args == null) {
@@ -250,6 +258,8 @@ void setArguments(Object[] args) {
               multipartBody.addPart(name, (TypedOutput) value);
             } else if (value instanceof String) {
               multipartBody.addPart(name, new TypedString((String) value));
+            } else if (value instanceof Iterable<?>) {
+              addPartList(name, (Iterable<?>) value);
             } else {
               multipartBody.addPart(name, converter.toBody(value));
             }
diff --git a/retrofit/src/test/java/retrofit/RequestBuilderTest.java b/retrofit/src/test/java/retrofit/RequestBuilderTest.java
index 53adc342f..e38f10d12 100644
--- a/retrofit/src/test/java/retrofit/RequestBuilderTest.java
+++ b/retrofit/src/test/java/retrofit/RequestBuilderTest.java
@@ -406,6 +406,8 @@
   }
 
   @Test public void simpleMultipart() throws Exception {
+	List<Object> values = new ArrayList<Object>(Arrays.asList(1, 2, "three"));
+	
     Request request = new Helper() //
         .setMethod("POST") //
         .setHasBody() //
@@ -414,6 +416,7 @@
         .setMultipart() //
         .addPart("ping", "pong") //
         .addPart("kit", new TypedString("kat")) //
+        .addPart("feed", values)
         .build();
     assertThat(request.getMethod()).isEqualTo("POST");
     assertThat(request.getHeaders()).isEmpty();
@@ -421,7 +424,7 @@
 
     MultipartTypedOutput body = (MultipartTypedOutput) request.getBody();
     List<byte[]> bodyParts = MimeHelper.getParts(body);
-    assertThat(bodyParts).hasSize(2);
+    assertThat(bodyParts).hasSize(5);
 
     Iterator<byte[]> iterator = bodyParts.iterator();
 
@@ -430,6 +433,15 @@
 
     String two = new String(iterator.next(), "UTF-8");
     assertThat(two).contains("name=\"kit\"").endsWith("\r\nkat");
+
+    String three = new String(iterator.next(), "UTF-8");
+    assertThat(three).contains("name=\"feed[]\"").endsWith("\r\n1");
+    
+    String four = new String(iterator.next(), "UTF-8");
+    assertThat(four).contains("name=\"feed[]\"").endsWith("\r\n2");
+
+    String five = new String(iterator.next(), "UTF-8");
+    assertThat(five).contains("name=\"feed[]\"").endsWith("\r\nthree");
   }
 
   @Test public void multipartNullRemovesPart() throws Exception {
