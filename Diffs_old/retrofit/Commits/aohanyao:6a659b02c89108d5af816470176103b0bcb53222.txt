diff --git a/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonConverterFactory.java b/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonConverterFactory.java
index 6479da287..482347359 100644
--- a/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonConverterFactory.java
+++ b/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonConverterFactory.java
@@ -38,6 +38,10 @@
  * last to allow the other converters a chance to see their types.
  */
 public final class GsonConverterFactory extends Converter.Factory {
+    // 如果我们需要对结果进行自定义的转换的话
+    // 作统一的处理，只需要继承 Convert.Factory 然后实现相关的方法，
+    // 在 responseBodyConvert中进行统一的处理即可，也就是说，我们
+    // 根本就不需要GsonConvert这个库，我们完全可以自定义
     /**
      * Create an instance using a default {@link Gson} instance for conversion. Encoding to JSON and
      * decoding from JSON (when no charset is specified by a header) will use UTF-8.
diff --git a/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonRequestBodyConverter.java b/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonRequestBodyConverter.java
index a47775748..05315dff3 100644
--- a/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonRequestBodyConverter.java
+++ b/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonRequestBodyConverter.java
@@ -40,6 +40,7 @@
   }
 
   @Override public RequestBody convert(T value) throws IOException {
+    // 这是将对象转换为Json字符串
     Buffer buffer = new Buffer();
     Writer writer = new OutputStreamWriter(buffer.outputStream(), UTF_8);
     JsonWriter jsonWriter = gson.newJsonWriter(writer);
diff --git a/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonResponseBodyConverter.java b/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonResponseBodyConverter.java
index d751e7402..05756a508 100644
--- a/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonResponseBodyConverter.java
+++ b/retrofit-converters/gson/src/main/java/retrofit2/converter/gson/GsonResponseBodyConverter.java
@@ -34,6 +34,7 @@
   }
 
   @Override public T convert(ResponseBody value) throws IOException {
+    // 这里就是对返回结果进行处理
     JsonReader jsonReader = gson.newJsonReader(value.charStream());
     try {
       T result = adapter.read(jsonReader);
diff --git a/retrofit/src/main/java/retrofit2/HttpServiceMethod.java b/retrofit/src/main/java/retrofit2/HttpServiceMethod.java
index ffbd2e44f..05a1006d9 100644
--- a/retrofit/src/main/java/retrofit2/HttpServiceMethod.java
+++ b/retrofit/src/main/java/retrofit2/HttpServiceMethod.java
@@ -40,6 +40,7 @@
         CallAdapter<ResponseT, ReturnT> callAdapter = createCallAdapter(retrofit, method);
         // 数据返回类型
         Type responseType = callAdapter.responseType();
+
         if (responseType == Response.class || responseType == okhttp3.Response.class) {
             throw methodError(method, "'"
                     + Utils.getRawType(responseType).getName()
