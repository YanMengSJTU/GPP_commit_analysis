diff --git a/retrofit-plus-demo/src/main/java/net/masonliu/retrofit2plus/demo/MainActivity.java b/retrofit-plus-demo/src/main/java/net/masonliu/retrofit2plus/demo/MainActivity.java
index e93f0a63b..dc06f8525 100644
--- a/retrofit-plus-demo/src/main/java/net/masonliu/retrofit2plus/demo/MainActivity.java
+++ b/retrofit-plus-demo/src/main/java/net/masonliu/retrofit2plus/demo/MainActivity.java
@@ -7,6 +7,7 @@
 import net.masonliu.retrofit2plus.demo.model.GitResult;
 
 import retrofit2.Call;
+import retrofit2.Callback;
 import retrofit2.Response;
 import retrofit2.plus.RetrofitPlusCallBack;
 
@@ -16,86 +17,86 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
-//        Call<GitResult> call = RestApi.getApiService().getUsersByName("Mason","ss");
-//        call.enqueue(new Callback<GitResult>() {
-//
-//            @Override
-//            public void onResponse(Call<GitResult> call, Response<GitResult> response) {
-//                GitResult gitResult = response.body();
-//                Log.e("retrofit_plus", "success:" + response.raw().request().url().toString() + "\n"
-//                        + gitResult.getTotalCount());
-//            }
-//
-//            @Override
-//            public void onFailure(Call<GitResult> call, Throwable t) {
-//                Log.e("retrofit_plus", "failure");
-//            }
-//
-//            @Override
-//            public void onStart() {
-//                Log.e("retrofit_plus", "start");
-//            }
-//
-//            @Override
-//            public void onFinish() {
-//                Log.e("retrofit_plus", "finish");
-//            }
-//
-//        });
+
+        Call<GitResult> call = RestApi.getApiService(this).getUsersByName("Mason");
+        call.enqueue(new Callback<GitResult>() {
+
+
+            @Override
+            public void onResponse(Call<GitResult> call, Response<GitResult> response) {
+                GitResult gitResult = response.body();
+                Log.e("retrofit_plus1", "success:" + response.raw().request().url().toString() + "\n"
+                        + gitResult.getTotalCount());
+            }
+
+            @Override
+            public void onFailure(Call<GitResult> call, Throwable t) {
+                Log.e("retrofit_plus1", "onFailure"+t.toString());
+            }
+
+            @Override
+            public void onCallStart() {
+
+            }
+
+            @Override
+            public void onCallFinish() {
+
+            }
+        });
 
         RestApi.getApiService(this).getUsersByName2("Mason",new RetrofitPlusCallBack<GitResult>() {
 
             @Override
             public void onCallStart() {
-                Log.e("retrofit_plus", "start");
             }
 
             @Override
             public void onCallFinish() {
-                Log.e("retrofit_plus", "finish");
             }
 
             @Override
             public void onHttpSuccess(Call<GitResult> call, Response<GitResult> response) {
                 GitResult gitResult = response.body();
-                Log.e("retrofit_plus", "success:" + response.raw().request().url().toString() + "\n"
+                Log.e("retrofit_plus2", "success:" + response.raw().request().url().toString() + "\n"
                         + gitResult.getTotalCount());
             }
 
             @Override
             public void onHttpFailure(Call<GitResult> call, Response<GitResult> response) {
-
+                Log.e("retrofit_plus2", "onHttpFailure");
             }
 
             @Override
             public void onNetFailure(Call<GitResult> call, Throwable t) {
-
+                Log.e("retrofit_plus2", "onNetFailure"+t.toString());
             }
 
         });
 
-//        RestApi.getApiService(this).testHttps(new Callback<HttpsResult>() {
-//            @Override
-//            public void onResponse(Call<HttpsResult> call, Response<HttpsResult> response) {
-//                HttpsResult gitResult = response.body();
-//                Log.e("retrofit_plus", "success:" + response.raw().request().url().toString() + "\n"
-//                        + gitResult.getCode());
-//            }
-//
-//            @Override
-//            public void onFailure(Call<HttpsResult> call, Throwable t) {
-//                Log.e("retrofit_plus", "failure:");
-//            }
-//
-//            @Override
-//            public void onCallStart() {
-//
-//            }
-//
-//            @Override
-//            public void onCallFinish() {
-//
-//            }
-//        });
+        RestApi.getApiService(this).testHttps("MasonLiu",new Callback<GitResult>() {
+
+            @Override
+            public void onResponse(Call<GitResult> call, Response<GitResult> response) {
+                GitResult gitResult = response.body();
+                Log.e("retrofit_plus3", "https success:" + response.raw().request().url().toString() +  "\n"+
+                        gitResult.getTotalCount());
+            }
+
+            @Override
+            public void onFailure(Call<GitResult> call, Throwable t) {
+                Log.e("retrofit_plus3", "onFailure");
+            }
+
+            @Override
+            public void onCallStart() {
+
+            }
+
+            @Override
+            public void onCallFinish() {
+
+            }
+        });
     }
 }
diff --git a/retrofit-plus-demo/src/main/java/net/masonliu/retrofit2plus/demo/RestApi.java b/retrofit-plus-demo/src/main/java/net/masonliu/retrofit2plus/demo/RestApi.java
index 3fcc64ecc..5e72c59bc 100644
--- a/retrofit-plus-demo/src/main/java/net/masonliu/retrofit2plus/demo/RestApi.java
+++ b/retrofit-plus-demo/src/main/java/net/masonliu/retrofit2plus/demo/RestApi.java
@@ -3,7 +3,6 @@
 import android.content.Context;
 
 import net.masonliu.retrofit2plus.demo.model.GitResult;
-import net.masonliu.retrofit2plus.demo.model.HttpsResult;
 
 import okhttp3.OkHttpClient;
 import retrofit2.Call;
@@ -20,41 +19,35 @@
  */
 public class RestApi {
     private static String certificateString = "-----BEGIN CERTIFICATE-----\n" +
-            "MIIGaTCCBVGgAwIBAgIQN23AqZqLxKVCT8qo88qpAzANBgkqhkiG9w0BAQUFADCB\n" +
-            "vDELMAkGA1UEBhMCVVMxFzAVBgNVBAoTDlZlcmlTaWduLCBJbmMuMR8wHQYDVQQL\n" +
-            "ExZWZXJpU2lnbiBUcnVzdCBOZXR3b3JrMTswOQYDVQQLEzJUZXJtcyBvZiB1c2Ug\n" +
-            "YXQgaHR0cHM6Ly93d3cudmVyaXNpZ24uY29tL3JwYSAoYykxMDE2MDQGA1UEAxMt\n" +
-            "VmVyaVNpZ24gQ2xhc3MgMyBJbnRlcm5hdGlvbmFsIFNlcnZlciBDQSAtIEczMB4X\n" +
-            "DTE1MDQxNjAwMDAwMFoXDTE2MDQxNjIzNTk1OVowgaoxCzAJBgNVBAYTAkNOMRAw\n" +
-            "DgYDVQQIEwdiZWlqaW5nMRAwDgYDVQQHFAdiZWlqaW5nMTkwNwYDVQQKFDBCZWlK\n" +
-            "aW5nIEJhaWR1IE5ldGNvbSBTY2llbmNlIFRlY2hub2xvZ3kgQ28uLCBMdGQxJTAj\n" +
-            "BgNVBAsUHHNlcnZpY2Ugb3BlcmF0aW9uIGRlcGFydG1lbnQxFTATBgNVBAMUDHd3\n" +
-            "dy5iYWlkdS5jbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANWCP46U\n" +
-            "yot79anMBfFoTg8n6Fj7Jsa2NpvJdZ+NT6D+ZZEp7BdWQkUtHup3Ohu/Nmuy0D9I\n" +
-            "sxCMV23hPMOf8Ha+xYmfP0ege81IMENnI7d2NkE4PRWD7rVWsL/OjUGNUm1Pbvz3\n" +
-            "1PY28M9SZZLfy9uAlGspZ/r5TQy7TtiMt/Ol4tBA3PjcOrlL5ik6KJf7iNKm0gDE\n" +
-            "rF37JUvuVQjFxRYb9R2O1L9Lvxff/5JmOJTCdTTff1Pt6mb/j/vlVyCCARFz7leN\n" +
-            "1GUCfcSAhr4Ow/j5PNVO6sdJoL4JbLqgLl/7oaS8cGMc581LI64qSfaTAgTd3x9r\n" +
-            "UEwvuHrdbXpXUCsCAwEAAaOCAnUwggJxMIIBGgYDVR0RBIIBETCCAQ2CCGJhaWR1\n" +
-            "LmNuggliYWlkdS5jb22CDGJhaWR1LmNvbS5jboILdy5iYWlkdS5jb22CDHd3LmJh\n" +
-            "aWR1LmNvbYIMd3d3LmJhaWR1LmNughB3d3cuYmFpZHUuY29tLmNughB3d3cuYmFp\n" +
-            "ZHUuY29tLmhrggx3d3cuYmFpZHUuaGuCEHd3dy5iYWlkdS5uZXQuYXWCEHd3dy5i\n" +
-            "YWlkdS5uZXQubXmCEHd3dy5iYWlkdS5uZXQucGiCEHd3dy5iYWlkdS5uZXQucGuC\n" +
-            "EHd3dy5iYWlkdS5uZXQudHeCEHd3dy5iYWlkdS5uZXQudm6CDnd3d3cuYmFpZHUu\n" +
-            "Y29tghF3d3d3LmJhaWR1LmNvbS5jbjAJBgNVHRMEAjAAMA4GA1UdDwEB/wQEAwIF\n" +
-            "oDAoBgNVHSUEITAfBggrBgEFBQcDAQYIKwYBBQUHAwIGCWCGSAGG+EIEATBlBgNV\n" +
-            "HSAEXjBcMFoGCmCGSAGG+EUBBzYwTDAjBggrBgEFBQcCARYXaHR0cHM6Ly9kLnN5\n" +
-            "bWNiLmNvbS9jcHMwJQYIKwYBBQUHAgIwGRoXaHR0cHM6Ly9kLnN5bWNiLmNvbS9y\n" +
-            "cGEwHwYDVR0jBBgwFoAU15t82CKgFffdrV/OKZtYw7xGALUwKwYDVR0fBCQwIjAg\n" +
-            "oB6gHIYaaHR0cDovL3NlLnN5bWNiLmNvbS9zZS5jcmwwVwYIKwYBBQUHAQEESzBJ\n" +
-            "MB8GCCsGAQUFBzABhhNodHRwOi8vc2Uuc3ltY2QuY29tMCYGCCsGAQUFBzAChhpo\n" +
-            "dHRwOi8vc2Uuc3ltY2IuY29tL3NlLmNydDANBgkqhkiG9w0BAQUFAAOCAQEAXm3C\n" +
-            "4yOWxuG5h7KXjMjFzo7qzRN8GrkeENzm82GTaxwo3Op7WJv64DdreE9SSa3EHnXW\n" +
-            "R72bvLU+f8Fq41Ptx24tBlv5tKtk1Z5/7hwIGJLRwh0i+OICKlW5tu71DhnJvZkD\n" +
-            "/dEwfc6PygFTMEu4rLM8RlMSy9JM0FIGQeKoA2YfVd5rV/Z3dNb2y1YOMg1VE2EZ\n" +
-            "23aKSXj1/dSd/KmSuoHI1dcOAnFXXRDJS37RejsOrq4sXiYhb7oOnErarVA9IpMs\n" +
-            "cnM7TvlhUztnyzMpD1ABWjt/kqL2Wyx+CKfr4/Zd54i89fD+6jSMyS3iZIhtgXxd\n" +
-            "CIhENC7RHoQqph7JJQ==\n" +
+            "MIIFSzCCBDOgAwIBAgIQDXBCOWMCxia8htXPzVA77zANBgkqhkiG9w0BAQsFADBw\n" +
+            "MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\n" +
+            "d3cuZGlnaWNlcnQuY29tMS8wLQYDVQQDEyZEaWdpQ2VydCBTSEEyIEhpZ2ggQXNz\n" +
+            "dXJhbmNlIFNlcnZlciBDQTAeFw0xNDA0MDgwMDAwMDBaFw0xNzA0MTIxMjAwMDBa\n" +
+            "MGgxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1T\n" +
+            "YW4gRnJhbmNpc2NvMRUwEwYDVQQKEwxHaXRIdWIsIEluYy4xFTATBgNVBAMMDCou\n" +
+            "Z2l0aHViLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN7p2kz/\n" +
+            "Al3iu4vkThCP+Cv5//FkkMMisICBjIu0FctWdnQZ4TG7m6WMLdf/Ty+mLV/hEkV5\n" +
+            "mwYmI8vc/RZrr5L4sYddmgpXJ/GcFmneMeO7oOpB5FTrmDNwOdYA2vJUi4T4T0k+\n" +
+            "9a7HCu/2dq5jZDSsfffs1WCbX2SR2kyafq3WpLiaoDnruMgfg6wg2PMoOXNGa1aA\n" +
+            "SARrD1KjV424cV0frGAwbKCd7EbIKYmM9mdf1bxmUwPlVvS5f3jzmpUURvVuJWET\n" +
+            "86R0JLUeQRjiYZ9MY+MEF4w24PzD6H6aJaLaDFOqQ8LCz7U7vffOo/7WgrcBgIro\n" +
+            "wotvmsEveE8rtkkCAwEAAaOCAecwggHjMB8GA1UdIwQYMBaAFFFo/5CvAgd1PMzZ\n" +
+            "ZWRiohK4WXI7MB0GA1UdDgQWBBQeW60hetRWA5FotQYl9ZfjSXoMKjAjBgNVHREE\n" +
+            "HDAaggwqLmdpdGh1Yi5jb22CCmdpdGh1Yi5jb20wDgYDVR0PAQH/BAQDAgWgMB0G\n" +
+            "A1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjB1BgNVHR8EbjBsMDSgMqAwhi5o\n" +
+            "dHRwOi8vY3JsMy5kaWdpY2VydC5jb20vc2hhMi1oYS1zZXJ2ZXItZzEuY3JsMDSg\n" +
+            "MqAwhi5odHRwOi8vY3JsNC5kaWdpY2VydC5jb20vc2hhMi1oYS1zZXJ2ZXItZzEu\n" +
+            "Y3JsMEIGA1UdIAQ7MDkwNwYJYIZIAYb9bAEBMCowKAYIKwYBBQUHAgEWHGh0dHBz\n" +
+            "Oi8vd3d3LmRpZ2ljZXJ0LmNvbS9DUFMwgYMGCCsGAQUFBwEBBHcwdTAkBggrBgEF\n" +
+            "BQcwAYYYaHR0cDovL29jc3AuZGlnaWNlcnQuY29tME0GCCsGAQUFBzAChkFodHRw\n" +
+            "Oi8vY2FjZXJ0cy5kaWdpY2VydC5jb20vRGlnaUNlcnRTSEEySGlnaEFzc3VyYW5j\n" +
+            "ZVNlcnZlckNBLmNydDAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQAX\n" +
+            "2PZ9vGZArhpwyg15ZCSCyLc7iqkW/lHj3q3jr+oQ6ZlUu6QL/gUsB5jfXUvUoLuk\n" +
+            "XB/HCCdd41rbM7s+gLWFKaaPpcdL0dZLmcT2R8vjz3VdsDSsIoFce/9Abt1Ozjnh\n" +
+            "oSqulEAyCbQcgyWdjIcbrC7++8xHUTztNEMQVsxL9clgXiZ7HCyhqKHVsrhlWoCX\n" +
+            "gJQfCqcEPdeq7svwiWXO76V5u52s15vM9ziivHxYEAhB9MWD2vI9ThKxRhiVqHtK\n" +
+            "A+DZBEFl12A0kKgRc3oCNHf/fwp/ShRoIwvZAmoZ+WYb3xEm3Di81MB4OH2Bh1JC\n" +
+            "Xj4yL0JvP2bD1pGDF/Pk\n" +
             "-----END CERTIFICATE-----";
     private static GitApiService gitApiService;
     private static String baseUrl = "http://api.github.com";
@@ -74,7 +67,6 @@ public static GitApiService getApiService(Context context) {
     }
 
     public interface GitApiService {
-
         @HTTPS
         @Headers("User-Agent: Retrofit2.0Tutorial-App")
         @GET("/search/users")
@@ -86,8 +78,8 @@ public static GitApiService getApiService(Context context) {
         void getUsersByName2(@Query("q") String name, Callback<GitResult> callback);
 
         @HTTPS
-        @GET("/settlement/bank/showBanks")
-        void testHttps(Callback<HttpsResult> callback);
+        @GET("/search/users")
+        void testHttps(@Query("q") String name,Callback<GitResult> callback);
     }
 
 }
diff --git a/retrofit-plus-demo/src/main/java/net/masonliu/retrofit2plus/demo/model/HttpsResult.java b/retrofit-plus-demo/src/main/java/net/masonliu/retrofit2plus/demo/model/HttpsResult.java
deleted file mode 100644
index f2425c700..000000000
--- a/retrofit-plus-demo/src/main/java/net/masonliu/retrofit2plus/demo/model/HttpsResult.java
+++ /dev/null
@@ -1,29 +0,0 @@
-package net.masonliu.retrofit2plus.demo.model;
-
-import com.google.gson.annotations.SerializedName;
-
-/**
- * Created by liumeng on 3/29/16.
- */
-public class HttpsResult {
-    @SerializedName("code")
-    private int code;
-    @SerializedName("message")
-    private String message;
-
-    public int getCode() {
-        return code;
-    }
-
-    public void setCode(int code) {
-        this.code = code;
-    }
-
-    public String getMessage() {
-        return message;
-    }
-
-    public void setMessage(String message) {
-        this.message = message;
-    }
-}
