diff --git a/README.md b/README.md
index fcc67f053..f4559f735 100644
--- a/README.md
+++ b/README.md
@@ -43,6 +43,10 @@ onHttpSuccess(Call<T> call, Response<T> response);
 onHttpFailure(Call<T> call, Response<T> response);
 onNetFailure(Call<T> call, Throwable t);
 ```
+6、OkHttpClientUtil.getHeaderValueEncoded 、 OkHttpClientUtil.getHeaderNameEncoded
+
+handle Unexpected char  in header name and value
+
 
 中文：
 ---------
@@ -85,7 +89,9 @@ onHttpSuccess(Call<T> call, Response<T> response);
 onHttpFailure(Call<T> call, Response<T> response);
 onNetFailure(Call<T> call, Throwable t);
 ```
+6、OkHttpClientUtil.getHeaderValueEncoded 、 OkHttpClientUtil.getHeaderNameEncoded
 
+当okhttp header 有中文字符时 采用getHeaderValueEncoded 和 getHeaderNameEncoded 进行编码
 
 Usage
 --------
@@ -97,7 +103,7 @@ repositories {
     }
 }
 dependencies {
-	compile 'com.github.MasonLiuChn:RetrofitPlus:2.3.0.0'
+	compile 'com.github.MasonLiuChn:RetrofitPlus:2.3.0.1'
 	compile('com.squareup.retrofit2:converter-gson:2.0.0') {
         	//exclude module: 'retrofit' 如果不写 group 则生成 pom 不会 add exclusion
         	exclude group: 'com.squareup.retrofit2', module: 'retrofit'
diff --git a/retrofit/src/main/java/retrofit2/plus/OkHttpClientUtil.java b/retrofit/src/main/java/retrofit2/plus/OkHttpClientUtil.java
index 8272d3a15..8cf7cd955 100644
--- a/retrofit/src/main/java/retrofit2/plus/OkHttpClientUtil.java
+++ b/retrofit/src/main/java/retrofit2/plus/OkHttpClientUtil.java
@@ -1,9 +1,11 @@
 package retrofit2.plus;
 
 import android.content.Context;
+import android.text.TextUtils;
 
 import java.io.ByteArrayInputStream;
 import java.io.InputStream;
+import java.net.URLEncoder;
 import java.security.KeyStore;
 import java.security.SecureRandom;
 import java.security.cert.Certificate;
@@ -102,4 +104,44 @@ private static KeyStore newEmptyKeyStore(char[] password) {
         }
         return null;
     }
+
+    /**
+     * 由于okhttp header 中的 value 不支持 null, \n 和 中文这样的特殊字符,所以encode字符串
+     * @param value
+     * @return
+     */
+    public static  String getHeaderValueEncoded(String value) {
+        if (TextUtils.isEmpty(value)) return " ";
+        for (int i = 0, length = value.length(); i < length; i++) {
+            char c = value.charAt(i);
+            if ((c <= '\u001f' && c != '\t') || c >= '\u007f') {//根据源码okhttp允许[0020-007E]+\t的字符
+                try{
+                    return URLEncoder.encode(value, "UTF-8");
+                }catch (Exception e){
+                    e.printStackTrace();
+                    return " ";
+                }
+            }
+        }
+        return value;
+    }
+
+    /**
+     * 由于okhttp header 中的 name 不支持 null,空格、\t、 \n 和 中文这样的特殊字符,所以encode字符串
+     */
+    public static  String getHeaderNameEncoded(String name) {
+        if (TextUtils.isEmpty(name)) return "null";
+        for (int i = 0, length = name.length(); i < length; i++) {
+            char c = name.charAt(i);
+            if (c <= '\u0020' || c >= '\u007f') {//根据源码okhttp允许[0021-007E]的字符
+                try{
+                    return URLEncoder.encode(name, "UTF-8");
+                }catch (Exception e){
+                    e.printStackTrace();
+                    return " ";
+                }
+            }
+        }
+        return name;
+    }
 }
