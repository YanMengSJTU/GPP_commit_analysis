diff --git a/retrofit-processor/src/main/java/retrofit/processor/RetrofitProcessor.java b/retrofit-processor/src/main/java/retrofit/processor/RetrofitProcessor.java
index 0653c1370..c111e8386 100644
--- a/retrofit-processor/src/main/java/retrofit/processor/RetrofitProcessor.java
+++ b/retrofit-processor/src/main/java/retrofit/processor/RetrofitProcessor.java
@@ -246,6 +246,7 @@ public boolean isTypedByteArray() {
     private final List<String> queryBundles;
     private final boolean isGet;
     private final boolean isPut;
+    private final boolean isPatch;
     private final boolean isPost;
     private final boolean isDelete;
     private final boolean isHead;
@@ -294,6 +295,7 @@ public boolean isTypedByteArray() {
       this.queryBundles = buildQueryBundles(method);
       this.isGet = buildIsGet(method);
       this.isPut = buildIsPut(method);
+      this.isPatch = buildIsPatch(method);
       this.isPost = buildIsPost(method);
       this.isDelete = buildIsDelete(method);
       this.isHead = buildIsHead(method);
@@ -505,6 +507,11 @@ public boolean buildIsPut(ExecutableElement method) {
       return method.getAnnotation(Retrofit.PUT.class) != null || method.getAnnotation(retrofit.http.PUT.class) != null;
     }
 
+    public boolean buildIsPatch(ExecutableElement method) {
+      // TODO duplicated routine
+      return method.getAnnotation(Retrofit.PATCH.class) != null || method.getAnnotation(retrofit.http.PATCH.class) != null;
+    }
+
     public boolean buildIsDelete(ExecutableElement method) {
       // TODO duplicated routine
       return method.getAnnotation(Retrofit.DELETE.class) != null || method.getAnnotation(retrofit.http.DELETE.class) != null;
@@ -553,6 +560,7 @@ public String buildBody(ExecutableElement method) {
     public List<String> buildPermissions(ExecutableElement method) {
       Retrofit.GET get = method.getAnnotation(Retrofit.GET.class);
       Retrofit.PUT put = method.getAnnotation(Retrofit.PUT.class);
+      Retrofit.PATCH patch = method.getAnnotation(Retrofit.PATCH.class);
       Retrofit.POST post = method.getAnnotation(Retrofit.POST.class);
       Retrofit.DELETE delete = method.getAnnotation(Retrofit.DELETE.class);
       Retrofit.HEAD head = method.getAnnotation(Retrofit.HEAD.class);
@@ -561,6 +569,7 @@ public String buildBody(ExecutableElement method) {
       if (post != null) return Arrays.asList(post.permissions());
       if (delete != null) return Arrays.asList(delete.permissions());
       if (head != null) return Arrays.asList(head.permissions());
+      if (patch != null) return Arrays.asList(patch.permissions());
       return Collections.emptyList();
     }
 
@@ -688,21 +697,25 @@ public String buildRawPath(ExecutableElement method) {
       String rawPath = null;
       Retrofit.GET get = method.getAnnotation(Retrofit.GET.class);
       Retrofit.PUT put = method.getAnnotation(Retrofit.PUT.class);
+      Retrofit.PATCH patch = method.getAnnotation(Retrofit.PATCH.class);
       Retrofit.POST post = method.getAnnotation(Retrofit.POST.class);
       Retrofit.DELETE delete = method.getAnnotation(Retrofit.DELETE.class);
       Retrofit.HEAD head = method.getAnnotation(Retrofit.HEAD.class);
       if (get != null) rawPath = get.value();
       if (put != null) rawPath = put.value();
+      if (patch != null) rawPath = patch.value();
       if (post != null) rawPath = post.value();
       if (delete != null) rawPath = delete.value();
       if (head != null) rawPath = head.value();
       retrofit.http.GET get1 = method.getAnnotation(retrofit.http.GET.class);
       retrofit.http.PUT put1 = method.getAnnotation(retrofit.http.PUT.class);
+      retrofit.http.PATCH patch1 = method.getAnnotation(retrofit.http.PATCH.class);
       retrofit.http.POST post1 = method.getAnnotation(retrofit.http.POST.class);
       retrofit.http.DELETE delete1 = method.getAnnotation(retrofit.http.DELETE.class);
       retrofit.http.HEAD head1 = method.getAnnotation(retrofit.http.HEAD.class);
       if (get1 != null) rawPath = get1.value();
       if (put1 != null) rawPath = put1.value();
+      if (patch1 != null) rawPath = patch1.value();
       if (post1 != null) rawPath = post1.value();
       if (delete1 != null) rawPath = delete1.value();
       if (head1 != null) rawPath = head1.value();
@@ -946,6 +959,10 @@ public boolean isPut() {
       return isPut;
     }
 
+    public boolean isPatch() {
+      return isPatch;
+    }
+
     public boolean isPost() {
       return isPost;
     }
diff --git a/retrofit-processor/src/main/resources/retrofit/processor/retrofit.vm b/retrofit-processor/src/main/resources/retrofit/processor/retrofit.vm
index 782fbf124..c917065ca 100644
--- a/retrofit-processor/src/main/resources/retrofit/processor/retrofit.vm
+++ b/retrofit-processor/src/main/resources/retrofit/processor/retrofit.vm
@@ -250,7 +250,7 @@ public final class $subclass$formalTypes extends $origClass$actualTypes {
 
     #if ($p.get)
 
-    #elseif ($p.post || $p.put)
+    #elseif ($p.post || $p.put || $p.patch)
         #if ($p.body && $p.body != "")
 
         TypedOutput typedOutput = null;
@@ -271,6 +271,10 @@ public final class $subclass$formalTypes extends $origClass$actualTypes {
 
         requestBuilder.put(RequestBody.create(MediaType.parse(typedOutput.mimeType()), bodyString));
 
+            #elseif ($p.patch)
+
+        requestBuilder.patch(RequestBody.create(MediaType.parse(typedOutput.mimeType()), bodyString));
+
             #end
 
         #elseif (!$p.fields.isEmpty())
@@ -291,6 +295,10 @@ public final class $subclass$formalTypes extends $origClass$actualTypes {
 
         requestBuilder.put(formBuilder.build());
 
+            #elseif ($p.patch)
+
+        requestBuilder.patch(formBuilder.build());
+
             #end
 
         #elseif (!$p.parts.isEmpty())
@@ -344,6 +352,10 @@ public final class $subclass$formalTypes extends $origClass$actualTypes {
 
         requestBuilder.put(partsBuilder.build());
 
+            #elseif ($p.patch)
+
+        requestBuilder.patch(partsBuilder.build());
+
             #end
 
         #else ## PUT/POST without Body/Field/Part
@@ -359,6 +371,10 @@ public final class $subclass$formalTypes extends $origClass$actualTypes {
 ##
 ##        requestBuilder.put(formBuilder.build());
 ##
+##            #elseif ($p.patch)
+##
+##        requestBuilder.patch(formBuilder.build());
+##
 ##            #end
 
         #end
diff --git a/retrofit/src/main/java/retrofit/http/Retrofit.java b/retrofit/src/main/java/retrofit/http/Retrofit.java
index 0135769f6..983586c73 100644
--- a/retrofit/src/main/java/retrofit/http/Retrofit.java
+++ b/retrofit/src/main/java/retrofit/http/Retrofit.java
@@ -461,6 +461,7 @@
   @RestMethod(value = "PATCH", hasBody = true)
   public @interface PATCH {
     String value();
+    String[] permissions() default {};
   }
 
   /**
diff --git a/retrofit2-github/src/main/java/com/github/retrofit2/GitHub.java b/retrofit2-github/src/main/java/com/github/retrofit2/GitHub.java
index 462365284..6b2becc06 100644
--- a/retrofit2-github/src/main/java/com/github/retrofit2/GitHub.java
+++ b/retrofit2-github/src/main/java/com/github/retrofit2/GitHub.java
@@ -130,10 +130,17 @@
     @PUT("/user/edit")
     public abstract Observable<Contributor> putUser(@Body Contributor user);
 
+    @PATCH("/user/edit")
+    public abstract Observable<Contributor> patchUserByBody(@Body Contributor user);
+
     @FormUrlEncoded
     @POST("/user/edit")
     public abstract Observable<Contributor> updateUser(@Field("first_name") String first, @Field("last_name") String last);
 
+    @FormUrlEncoded
+    @PATCH("/user/edit")
+    public abstract Observable<Contributor> patchUserByField(@Field("first_name") String first, @Field("last_name") String last);
+
     @Multipart
     @PUT("/user/photo")
     public abstract Observable<Contributor> updateUser(@retrofit.http.Retrofit.Part(value = "photo", mimeType = "image/png") File photo, @Part("description") String description);
@@ -146,6 +153,9 @@
     @Multipart
     @PUT("/user/photo")
     public abstract Observable<Contributor> updateUserWithTypedString(@Part("photo") TypedFile photo, @Part("description") TypedString description);
+    @Multipart
+    @PATCH("/user/photo")
+    public abstract Observable<Contributor> patchUserWithTypedString(@Part("photo") TypedFile photo, @Part("description") TypedString description);
 
     @Headers("Cache-Control: max-age=640000")
     @GET("/widget/list")
