diff --git a/retrofit/src/main/java/retrofit2/ParameterHandler.java b/retrofit/src/main/java/retrofit2/ParameterHandler.java
index 0fd165dd0..0297c9dc3 100644
--- a/retrofit/src/main/java/retrofit2/ParameterHandler.java
+++ b/retrofit/src/main/java/retrofit2/ParameterHandler.java
@@ -338,7 +338,7 @@ private RawPart() {
     }
 
     @Override void apply(RequestBuilder builder, T value) throws IOException {
-      String rValue = null;
+      String rValue;
       String resultValue = this.value;
       if (key != null) {
         rValue = valueConverter.convert(value);
@@ -346,7 +346,7 @@ private RawPart() {
           resultValue = this.value.replace("{" + key + "}", rValue);
         }
       }
-      if (rValue != null && !"".equals(rValue)) {
+      if (resultValue != null && !"".equals(resultValue)) {
         builder.addQueryParam(name, resultValue, encoded);
       }
     }
@@ -380,7 +380,7 @@ private RawPart() {
 
     @Override
     void apply(RequestBuilder builder, T value) throws IOException {
-      String rValue = null;
+      String rValue;
       String resultValue = this.value;
       if (key != null) {
         rValue = extactValid(valueConverter.convert(value));
@@ -388,7 +388,7 @@ void apply(RequestBuilder builder, T value) throws IOException {
           resultValue = this.value.replace("{" + key + "}", rValue);
         }
       }
-      if (rValue != null && !"".equals(rValue)) {
+      if (resultValue != null && !"".equals(resultValue)) {
         builder.addHeader(name, resultValue);
       }
     }
diff --git a/retrofit/src/main/java/retrofit2/ServiceMethod.java b/retrofit/src/main/java/retrofit2/ServiceMethod.java
index 408894a29..007e028ba 100644
--- a/retrofit/src/main/java/retrofit2/ServiceMethod.java
+++ b/retrofit/src/main/java/retrofit2/ServiceMethod.java
@@ -115,7 +115,14 @@ Request toRequest(Object... args) throws IOException {
           String paramName = ((ParameterHandler.ParamUrl) parameterHandler).key;
           value = (paramName == null) ? ((ParameterHandler.ParamUrl) parameterHandler).url
               : paramProvider.getUrlParam(paramName);
-        } else if (parameterHandler instanceof ParameterHandler.ParamHeader) {
+        }
+        if (value != null)
+          parameterHandler.apply(requestBuilder, value);
+      }
+      for (int i = 0; i < typeHandlers.length; i++) {
+        final ParameterHandler<Object> parameterHandler = typeHandlers[i];
+        Object value = null;
+        if (parameterHandler instanceof ParameterHandler.ParamHeader) {
           String paramName = ((ParameterHandler.ParamHeader) parameterHandler).key;
           value = (paramName == null) ? ((ParameterHandler.ParamHeader) parameterHandler).value
               : paramProvider.getHeaderParam(paramName);
diff --git a/retrofit/src/test/java/retrofit2/TypeParamRequestBuilderTest.java b/retrofit/src/test/java/retrofit2/TypeParamRequestBuilderTest.java
index b009a95b7..25727fe60 100644
--- a/retrofit/src/test/java/retrofit2/TypeParamRequestBuilderTest.java
+++ b/retrofit/src/test/java/retrofit2/TypeParamRequestBuilderTest.java
@@ -143,8 +143,8 @@
 
   @Test public void url2Param() throws Exception {
 
-//    @ParamQuerys({"userid={userid}", "city={city}", "v={verison}", "version={version}"})
     @ParamUrl("{base}")
+    @ParamQuerys({"userid={userid}", "city={city}", "v={verison}", "version={version}"})
     class Example {
       @GET("/foo") //
       Call<ResponseBody> method(@Query("bar") String thing) {
@@ -153,7 +153,7 @@
     }
     try {
       final Request request = buildRequest(Example.class, paramProvider, "zhang");
-      assertThat(request.url().toString()).isEqualTo("http://www.baidu.com/foo?bar=zhang");
+      assertThat(request.url().toString()).isEqualTo("http://www.baidu.com/foo?userid=userid&city=city&v=verison&version=version&bar=zhang");
     } catch (IllegalArgumentException e) {
       assertThat(e).hasMessage(
           "@ParamHeader Configuration errors,at X-House365, You can only have a maximum of one " +
