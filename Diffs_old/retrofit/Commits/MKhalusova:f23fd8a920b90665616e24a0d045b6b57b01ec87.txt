diff --git a/retrofit/src/main/java/retrofit2/Converter.java b/retrofit/src/main/java/retrofit2/Converter.java
index 9fd8eddaf..7b54a8325 100644
--- a/retrofit/src/main/java/retrofit2/Converter.java
+++ b/retrofit/src/main/java/retrofit2/Converter.java
@@ -15,20 +15,13 @@
  */
 package retrofit2;
 
+import okhttp3.RequestBody;
+import okhttp3.ResponseBody;
+import retrofit2.http.*;
+
 import java.io.IOException;
 import java.lang.annotation.Annotation;
 import java.lang.reflect.Type;
-import okhttp3.RequestBody;
-import okhttp3.ResponseBody;
-import retrofit2.http.Body;
-import retrofit2.http.Field;
-import retrofit2.http.FieldMap;
-import retrofit2.http.Header;
-import retrofit2.http.Part;
-import retrofit2.http.PartMap;
-import retrofit2.http.Path;
-import retrofit2.http.Query;
-import retrofit2.http.QueryMap;
 
 /**
  * Convert objects to and from their representation in HTTP. Instances are created by {@linkplain
@@ -67,6 +60,7 @@
      * {@code type} cannot be handled by this factory. This is used to create converters for types
      * specified by {@link Field @Field}, {@link FieldMap @FieldMap} values,
      * {@link Header @Header}, {@link Path @Path}, {@link Query @Query}, and
+     *
      * {@link QueryMap @QueryMap} values.
      */
     public Converter<?, String> stringConverter(Type type, Annotation[] annotations,
diff --git a/retrofit/src/main/java/retrofit2/ParameterHandler.java b/retrofit/src/main/java/retrofit2/ParameterHandler.java
index 38e21e559..e12bc9a1f 100644
--- a/retrofit/src/main/java/retrofit2/ParameterHandler.java
+++ b/retrofit/src/main/java/retrofit2/ParameterHandler.java
@@ -15,13 +15,14 @@
  */
 package retrofit2;
 
-import java.io.IOException;
-import java.lang.reflect.Array;
-import java.util.Map;
 import okhttp3.Headers;
 import okhttp3.MultipartBody;
 import okhttp3.RequestBody;
 
+import java.io.IOException;
+import java.lang.reflect.Array;
+import java.util.Map;
+
 import static retrofit2.Utils.checkNotNull;
 
 abstract class ParameterHandler<T> {
@@ -143,7 +144,7 @@
     private final String name;
     private final Converter<T, String> valueConverter;
     private final boolean encoded;
-
+//bb
     Field(String name, Converter<T, String> valueConverter, boolean encoded) {
       this.name = checkNotNull(name, "name == null");
       this.valueConverter = valueConverter;
diff --git a/retrofit/src/main/java/retrofit2/ServiceMethod.java b/retrofit/src/main/java/retrofit2/ServiceMethod.java
index b44704590..cbd41a8b0 100644
--- a/retrofit/src/main/java/retrofit2/ServiceMethod.java
+++ b/retrofit/src/main/java/retrofit2/ServiceMethod.java
@@ -84,7 +84,7 @@ Request toRequest(Object... args) throws IOException {
     for (int p = 1; p < argumentCount; p++) {
       handlers[p].apply(requestBuilder, args[p]);
     }
-
+// ?
     return requestBuilder.build();
   }
 
