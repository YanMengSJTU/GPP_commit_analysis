diff --git a/retrofit-processor/src/main/resources/retrofit/processor/retrofit.vm b/retrofit-processor/src/main/resources/retrofit/processor/retrofit.vm
index 1cdc70179..04280f692 100644
--- a/retrofit-processor/src/main/resources/retrofit/processor/retrofit.vm
+++ b/retrofit-processor/src/main/resources/retrofit/processor/retrofit.vm
@@ -248,6 +248,14 @@ public final class $subclass$formalTypes extends $origClass$actualTypes {
         if (value != null && !"null".equals(value)) httpUrlBuilder.addQueryParameter("${query.key}", value);
         value = null;
 
+    #end
+
+    #foreach ($query in $p.queryMaps)
+
+        for (Map.Entry<String, String> entry : ${query}.entrySet()) {
+            httpUrlBuilder.addQueryParameter(entry.getKey(), entry.getValue());
+        }
+
     #end
 
         HttpUrl httpUrl = httpUrlBuilder.build();
diff --git a/retrofit2-github/src/main/java/com/github/retrofit2/GitHub.java b/retrofit2-github/src/main/java/com/github/retrofit2/GitHub.java
index 6b2becc06..b88a87ab7 100644
--- a/retrofit2-github/src/main/java/com/github/retrofit2/GitHub.java
+++ b/retrofit2-github/src/main/java/com/github/retrofit2/GitHub.java
@@ -28,6 +28,8 @@
 import retrofit.client.Response;
 import retrofit.Callback;
 import android.app.Activity;
+import java.util.Map;
+import java.util.HashMap;
 
 @Retrofit("https://api.github.com")
 @retrofit.http.Retrofit.Headers({ // optional
@@ -62,6 +64,23 @@
         });
     }
 
+    @GET("/repos/{owner}/{repo}/contributors")
+    public abstract Observable<List<Contributor>> contributorList(
+        @Path("owner") String owner,
+        @Path("repo") String repo,
+        @QueryMap Map<String, String> options);
+
+    public Observable<Contributor> contributors(
+            String owner,
+            String repo,
+            Map<String, String> options) {
+        return contributorList(owner, repo, options).flatMap(new Func1<List<Contributor>, Observable<Contributor>>() {
+            @Override public Observable<Contributor> call(List<Contributor> list) {
+                return Observable.from(list);
+            }
+        });
+    }
+
     @GET("/repos/{owner}/{repo}/contributors")
     public abstract Observable<List<Contributor>> contributorListWithoutAuth(
             @Path("owner") String owner,
diff --git a/retrofit2-github/src/test/java/com/github/retrofit2/MainTest.java b/retrofit2-github/src/test/java/com/github/retrofit2/MainTest.java
index 4ea4197c3..6a348693a 100644
--- a/retrofit2-github/src/test/java/com/github/retrofit2/MainTest.java
+++ b/retrofit2-github/src/test/java/com/github/retrofit2/MainTest.java
@@ -40,6 +40,9 @@
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertTrue;
 
+import java.util.Map;
+import java.util.HashMap;
+
 public class MainTest {
 
     @Test
@@ -553,4 +556,19 @@ public void testLogLevel() {
     public void testConverterOnMethod() {
     }
 
+    @Test
+    public void testQueryMap() {
+        GitHub github = GitHub.create();
+        Map<String, String> options = new HashMap<>();
+        options.put("access_token", "");
+        List<String> contributorsWithoutAuth = github.contributors("yongjhih", "retrofit", options).map(new Func1<Contributor, String>() {
+            @Override public String call(Contributor contributor) {
+                System.out.println(contributor.login);
+                return contributor.login;
+            }
+        }).toList().toBlocking().single();
+        assertTrue(contributorsWithoutAuth.contains("JakeWharton"));
+        assertTrue(contributorsWithoutAuth.size() > 1);
+    }
+
 }
