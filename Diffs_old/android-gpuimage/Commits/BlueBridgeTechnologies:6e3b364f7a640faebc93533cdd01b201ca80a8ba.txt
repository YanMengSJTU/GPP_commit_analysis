diff --git a/library/src/jp/co/cyberagent/android/gpuimage/GPUImage.java b/library/src/jp/co/cyberagent/android/gpuimage/GPUImage.java
index ba54d997..8ef92254 100644
--- a/library/src/jp/co/cyberagent/android/gpuimage/GPUImage.java
+++ b/library/src/jp/co/cyberagent/android/gpuimage/GPUImage.java
@@ -47,6 +47,7 @@
 import java.net.URL;
 import java.util.List;
 
+import jp.co.cyberagent.android.gpuimage.videosupport.CameraFrameReceivedCallback;
 import jp.co.cyberagent.android.gpuimage.videosupport.VideoSourceRenderer;
 
 /**
@@ -172,6 +173,14 @@ public void setUpCamera(final Camera camera, final int degrees, final boolean fl
         mRenderer.setRotationCamera(rotation, flipHorizontal, flipVertical);
     }
 
+    public void setUpCameraFrameReceivedCallback(CameraFrameReceivedCallback cameraFrameCallback){
+        mRenderer.cameraFrameReceivedCallback = cameraFrameCallback;
+    }
+
+    public void removeCameraFrameReceivedCallback(){
+        mRenderer.cameraFrameReceivedCallback = null;
+    }
+
     @TargetApi(11)
     private void setUpCameraGingerbread(final Camera camera) {
         mRenderer.setUpSurfaceTexture(camera);
diff --git a/library/src/jp/co/cyberagent/android/gpuimage/GPUImageRenderer.java b/library/src/jp/co/cyberagent/android/gpuimage/GPUImageRenderer.java
index 737e6b64..20b66d3e 100644
--- a/library/src/jp/co/cyberagent/android/gpuimage/GPUImageRenderer.java
+++ b/library/src/jp/co/cyberagent/android/gpuimage/GPUImageRenderer.java
@@ -27,6 +27,7 @@
 import android.opengl.GLSurfaceView.Renderer;
 
 import jp.co.cyberagent.android.gpuimage.util.TextureRotationUtil;
+import jp.co.cyberagent.android.gpuimage.videosupport.CameraFrameReceivedCallback;
 import jp.co.cyberagent.android.gpuimage.videosupport.VideoFrameCallback;
 
 import javax.microedition.khronos.egl.EGLConfig;
@@ -56,6 +57,8 @@
 
     public final Object mSurfaceChangedWaiter = new Object();
 
+    public CameraFrameReceivedCallback cameraFrameReceivedCallback;
+
     private int mGLTextureId = NO_IMAGE;
     private SurfaceTexture mSurfaceTexture = null;
     private final FloatBuffer mGLCubeBuffer;
@@ -149,7 +152,13 @@ private void runAll(Queue<Runnable> queue) {
 
     @Override
     public void onPreviewFrame(final byte[] data, final Camera camera) {
+
         final Size previewSize = camera.getParameters().getPreviewSize();
+
+        if(cameraFrameReceivedCallback != null){
+            cameraFrameReceivedCallback.onCameraPreview(data,previewSize.width, previewSize.height);
+        }
+
         if (mGLRgbBuffer == null) {
             mGLRgbBuffer = IntBuffer.allocate(previewSize.width * previewSize.height);
         }
diff --git a/library/src/jp/co/cyberagent/android/gpuimage/videosupport/CameraFrameReceivedCallback.java b/library/src/jp/co/cyberagent/android/gpuimage/videosupport/CameraFrameReceivedCallback.java
new file mode 100644
index 00000000..504055c0
--- /dev/null
+++ b/library/src/jp/co/cyberagent/android/gpuimage/videosupport/CameraFrameReceivedCallback.java
@@ -0,0 +1,8 @@
+package jp.co.cyberagent.android.gpuimage.videosupport;
+
+/**
+ * Created by BBT007 on 15/06/2017.
+ */
+public interface CameraFrameReceivedCallback {
+    void onCameraPreview(byte[] data, int width, int height);
+}
\ No newline at end of file
