diff --git a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java
index ba832284..cb158ed7 100644
--- a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java
+++ b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java
@@ -128,16 +128,26 @@ private void takePicture() {
         // TODO get a size that is about the size of the screen
         Camera.Parameters params = mCamera.mCameraInstance.getParameters();
         params.setRotation(90);
+
+        // Highest possible picture size and quality
+        params.setPictureSize(3264, 2448);
+        params.setJpegQuality(100);
+
         mCamera.mCameraInstance.setParameters(params);
         for (Camera.Size size : params.getSupportedPictureSizes()) {
             Log.i("ASDF", "Supported: " + size.width + "x" + size.height);
         }
+
+        final long start = System.currentTimeMillis();
+
         mCamera.mCameraInstance.takePicture(null, null,
                 new Camera.PictureCallback() {
 
                     @Override
                     public void onPictureTaken(byte[] data, final Camera camera) {
 
+                        Log.i("ASDF", "Capture time: " + (System.currentTimeMillis() - start) + " millis");
+
                         final File pictureFile = getOutputMediaFile(MEDIA_TYPE_IMAGE);
                         if (pictureFile == null) {
                             Log.d("ASDF",
@@ -167,9 +177,14 @@ public void onPictureTaken(byte[] data, final Camera camera) {
                                     @Override
                                     public void onPictureSaved(final Uri
                                             uri) {
+
+                                        Log.i("ASDF", "Save time: " + (System.currentTimeMillis() - start) + " millis");
+
                                         pictureFile.delete();
                                         camera.startPreview();
                                         view.setRenderMode(GLSurfaceView.RENDERMODE_CONTINUOUSLY);
+
+                                        Log.i("ASDF", "All done time: " + (System.currentTimeMillis() - start) + " millis");
                                     }
                                 });
                     }
