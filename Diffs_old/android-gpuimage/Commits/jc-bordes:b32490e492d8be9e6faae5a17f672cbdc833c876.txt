diff --git a/library/src/jp/co/cyberagent/android/gpuimage/GPUImageTwoInputFilter.java b/library/src/jp/co/cyberagent/android/gpuimage/GPUImageTwoInputFilter.java
index a31b459d..b7c1d6b9 100644
--- a/library/src/jp/co/cyberagent/android/gpuimage/GPUImageTwoInputFilter.java
+++ b/library/src/jp/co/cyberagent/android/gpuimage/GPUImageTwoInputFilter.java
@@ -64,16 +64,22 @@ public void onInit() {
         filterInputTextureUniform2 = GLES20.glGetUniformLocation(getProgram(), "inputImageTexture2"); // This does assume a name of "inputImageTexture2" for second input texture in the fragment shader
         GLES20.glEnableVertexAttribArray(filterSecondTextureCoordinateAttribute);
 
-        if (mBitmap != null) {
+        if (mBitmap != null&&!mBitmap.isRecycled()) {
             setBitmap(mBitmap);
         }
     }
     
     public void setBitmap(final Bitmap bitmap) {
+    	if(bitmap!=null&&bitmap.isRecycled())
+    		return;
         mBitmap = bitmap;
+        if(mBitmap==null)
+        	return;
         runOnDraw(new Runnable() {
             public void run() {
                 if (filterSourceTexture2 == OpenGlUtils.NO_TEXTURE) {
+                	if(bitmap==null||bitmap.isRecycled())
+                		return;
                     GLES20.glActiveTexture(GLES20.GL_TEXTURE3);
                     filterSourceTexture2 = OpenGlUtils.loadTexture(bitmap, OpenGlUtils.NO_TEXTURE, false);
                 }
