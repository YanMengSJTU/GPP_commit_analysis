diff --git a/CHANGELOG.md b/CHANGELOG.md
deleted file mode 100644
index ddcb7d47..00000000
--- a/CHANGELOG.md
+++ /dev/null
@@ -1,7 +0,0 @@
-Change Log
-==========
-
-Version 1.2.3-SNAPSHOT *(2014-12-15)*
-----------------------------
-
- * added GPUImageLevelsFilter (by @vashisthg)
diff --git a/README.md b/README.md
index 53c53889..31ab121c 100644
--- a/README.md
+++ b/README.md
@@ -1,63 +1,20 @@
 # GPUImage for Android
-[![Build Status](https://api.travis-ci.org/CyberAgent/android-gpuimage.png?branch=master,develop)](https://travis-ci.org/CyberAgent/android-gpuimage)
-
-Idea from: [iOS GPUImage framework](https://github.com/BradLarson/GPUImage)
-
-Goal is to have something as similar to GPUImage as possible. Vertex and fragment shaders are exactly the same. That way it makes it easier to port filters from GPUImage iOS to Android.
-
+基于项目___修改的，因为原项目中的GPUImageGroup的处理不太好，这里打算进行重写。
+原项目中GpuImageGroup的问题在于：处理过程中，Group内所有的滤镜全都拉到第一层进行处理，导致
+    GpuImageGroup重写的onDraw方法不能被调用，但是如果不拉到第一层处理，结果会出问题。分析
+    后发现是原项目中的frameBuffer部分管理的不好，这里打算重写GpuImageGroup，重新管理FrameBuffer
+    的处理，使GpuImageGroup使用的更方便。
+### TODO
+    后期处理，想提出一个自己的GpuImageView，不采用glSurface，因为glSurfaceView不支持动画，
+    不能加些特效处理。GpuImageView就是将bitmap丢给GpuImage进行处理，将返回的bitmap更新到
+    imageView中去，性能上肯定会比glSurfaceView低。
 ## Requirements
 * Android 2.2 or higher (OpenGL ES 2.0)
 
 ## Usage
 
 ### Gradle dependency
-
-```groovy
-repositories {
-    mavenCentral()
-}
-
-dependencies {
-    compile 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.2.3'
-}
-```
-
-### Sample Code
-With preview:
-
-```java
-@Override
-public void onCreate(final Bundle savedInstanceState) {
-    super.onCreate(savedInstanceState);
-    setContentView(R.layout.activity);
-
-    Uri imageUri = ...;
-    mGPUImage = new GPUImage(this);
-    mGPUImage.setGLSurfaceView((GLSurfaceView) findViewById(R.id.surfaceView));
-    mGPUImage.setImage(imageUri); // this loads image on the current thread, should be run in a thread
-    mGPUImage.setFilter(new GPUImageSepiaFilter());
-
-    // Later when image should be saved saved:
-    mGPUImage.saveToPictures("GPUImage", "ImageWithFilter.jpg", null);
-}
-```
-
-Without preview:
-
-```java
-Uri imageUri = ...;
-mGPUImage = new GPUImage(context);
-mGPUImage.setFilter(new GPUImageSobelEdgeDetection());
-mGPUImage.setImage(imageUri);
-mGPUImage.saveToPictures("GPUImage", "ImageWithFilter.jpg", null);
-```
-
-### Gradle
-Make sure that you run the clean target when using maven.
-
-```groovy
-gradle clean assemble
-```
+    去掉了maven的依赖
 
 ## License
     Copyright 2012 CyberAgent, Inc.
diff --git a/build.gradle b/build.gradle
index 94df0e4f..a1f575e8 100644
--- a/build.gradle
+++ b/build.gradle
@@ -12,7 +12,6 @@ buildscript {
 allprojects {
     repositories {
         jcenter()
-        maven { url("https://oss.sonatype.org/content/repositories/snapshots/") }
     }
     tasks.withType(JavaCompile) {
         options.encoding = 'UTF-8'
diff --git a/gradle.properties b/gradle.properties
index a62b69f2..b308170c 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -3,17 +3,6 @@ VERSION_CODE=8
 GROUP=jp.co.cyberagent.android.gpuimage
 
 COMPILE_SDK_VERSION=21
-BUILD_TOOLS_VERSION=21.1.2
+BUILD_TOOLS_VERSION=20
 TARGET_SDK_VERSION=21
-MIN_SDK_VERSION=8
-
-POM_DESCRIPTION=Image filters for Android with OpenGL (based on GPUImage for iOS)
-POM_URL=https://github.com/cyberagent/android-gpuimage
-POM_SCM_URL=scm:git@github.com:CyberAgent/android-gpuimage.git
-POM_SCM_CONNECTION=scm:git@github.com:CyberAgent/android-gpuimage.git
-POM_SCM_DEV_CONNECTION=scm:git@github.com:CyberAgent/android-gpuimage.git
-POM_LICENCE_NAME=The Apache Software License, Version 2.0
-POM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt
-POM_LICENCE_DIST=repo
-POM_DEVELOPER_ID=pboos
-POM_DEVELOPER_NAME=Patrick Boos
+MIN_SDK_VERSION=16
diff --git a/library/android-artifacts.gradle b/library/android-artifacts.gradle
deleted file mode 100644
index f8d302de..00000000
--- a/library/android-artifacts.gradle
+++ /dev/null
@@ -1,24 +0,0 @@
-task androidJavadocs(type: Javadoc) {
-    source = android.sourceSets.main.java.srcDirs
-    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
-}
-
-task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
-    classifier = 'javadoc'
-    from androidJavadocs.destinationDir
-}
-
-task androidSourcesJar(type: Jar) {
-    classifier = 'sources'
-    from android.sourceSets.main.java.sourceFiles
-}
-
-task androidJar(type: Jar) {
-    from 'build/intermediates/classes/release'
-}
-
-artifacts {
-    archives androidSourcesJar
-    archives androidJavadocsJar
-    archives androidJar
-}
\ No newline at end of file
diff --git a/library/build.gradle b/library/build.gradle
index 3cd5e8c4..bdceeab3 100644
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -38,24 +38,4 @@ android {
         abortOnError false
     }
 
-    android.libraryVariants.all { variant ->
-        if (variant.buildType.isDebuggable()) {
-            return; // Skip debug builds.
-        }
-        task("javadoc${variant.name.capitalize()}", type: Javadoc) {
-            description "Generates Javadoc for $variant.name."
-            source = variant.javaCompile.source
-            ext.androidJar = System.getenv("ANDROID_HOME") + "/platforms/${android.compileSdkVersion}/android.jar"
-            classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
-        }
-
-        task("bundleJavadoc${variant.name.capitalize()}", type: Jar) {
-            description "Bundles Javadoc into zip for $variant.name."
-            classifier = "javadoc"
-            from tasks["javadoc${variant.name.capitalize()}"]
-        }
-    }
 }
-
-apply from: 'android-artifacts.gradle'
-apply from: 'central-publish.gradle'
\ No newline at end of file
diff --git a/library/central-publish.gradle b/library/central-publish.gradle
deleted file mode 100644
index 4575f08d..00000000
--- a/library/central-publish.gradle
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Copyright 2013 Chris Banes
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-def isReleaseBuild() {
-    return VERSION_NAME.contains("SNAPSHOT") == false
-}
-
-def getReleaseRepositoryUrl() {
-    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
-            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
-}
-
-def getSnapshotRepositoryUrl() {
-    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
-            : "https://oss.sonatype.org/content/repositories/snapshots/"
-}
-
-def getRepositoryUsername() {
-    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
-}
-
-def getRepositoryPassword() {
-    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
-}
-
-afterEvaluate { project ->
-    uploadArchives {
-        repositories {
-            mavenDeployer {
-                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-                pom.groupId = GROUP
-                pom.artifactId = POM_ARTIFACT_ID
-                pom.version = VERSION_NAME
-
-                repository(url: getReleaseRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-                snapshotRepository(url: getSnapshotRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-
-                pom.project {
-                    name POM_NAME
-                    packaging POM_PACKAGING
-                    description POM_DESCRIPTION
-                    url POM_URL
-
-                    scm {
-                        url POM_SCM_URL
-                        connection POM_SCM_CONNECTION
-                        developerConnection POM_SCM_DEV_CONNECTION
-                    }
-
-                    licenses {
-                        license {
-                            name POM_LICENCE_NAME
-                            url POM_LICENCE_URL
-                            distribution POM_LICENCE_DIST
-                        }
-                    }
-
-                    developers {
-                        developer {
-                            id POM_DEVELOPER_ID
-                            name POM_DEVELOPER_NAME
-                        }
-                    }
-                }
-            }
-        }
-    }
-
-    signing {
-        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
-        sign configurations.archives
-    }
-}
\ No newline at end of file
diff --git a/sample/build.gradle b/sample/build.gradle
index 5057072e..aedd5b97 100644
--- a/sample/build.gradle
+++ b/sample/build.gradle
@@ -29,7 +29,6 @@ android {
 }
 repositories {
     jcenter()
-    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
 }
 
 dependencies {
diff --git a/sample/project.properties b/sample/project.properties
index 24e0cbf3..be54c593 100644
--- a/sample/project.properties
+++ b/sample/project.properties
@@ -11,6 +11,4 @@
 #proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
 
 # Project target.
-target=android-16
-proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
-android.library.reference.1=../library
\ No newline at end of file
+target=android-16
\ No newline at end of file
diff --git a/utils/Shader2String.py b/utils/Shader2String.py
deleted file mode 100644
index f3127006..00000000
--- a/utils/Shader2String.py
+++ /dev/null
@@ -1,14 +0,0 @@
-#!/usr/bin/python
-
-import sys
-
-f = sys.stdin
-if len(sys.argv) > 1:
-  f = open(sys.argv[1])
-
-lines = f.readlines()
-for line in lines[:-1]:
-  print '"' + line.rstrip() + '\\n\" +'
-print '"' + lines[-1].rstrip() + '\\n\"'
-
-f.close()
