diff --git a/library/src/jp/co/cyberagent/android/gpuimage/GPUImage.java b/library/src/jp/co/cyberagent/android/gpuimage/GPUImage.java
index 2e2cef74..54aac5a5 100644
--- a/library/src/jp/co/cyberagent/android/gpuimage/GPUImage.java
+++ b/library/src/jp/co/cyberagent/android/gpuimage/GPUImage.java
@@ -506,7 +506,7 @@ private void saveImage(final String folderName, final String fileName, final Bit
             try {
                 file.getParentFile()
                     .mkdirs();
-                image.compress(CompressFormat.JPEG, 80, new FileOutputStream(file));
+                image.compress(CompressFormat.JPEG, 100, new FileOutputStream(file));
                 MediaScannerConnection.scanFile(mContext, new String[]{file.toString()}, null,
                                                 new MediaScannerConnection.OnScanCompletedListener() {
 
diff --git a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java
index d9d6e1f7..5f6e5fba 100644
--- a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java
+++ b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java
@@ -132,14 +132,19 @@ private void takePicture() {
         Camera.Parameters params = mCamera.mCameraInstance.getParameters();
         params.setRotation(90);
 
-        // Highest possible picture size and quality
-        params.setPictureSize(3264, 2448);
+        // Setting best quality of photo taken by camera(highest resolution & 100% jpeg quality)
+        int resolutionMultiplied = 0;
+        for (Camera.Size size : params.getSupportedPictureSizes()) {
+            Log.i("ASDF", "Supported: " + size.width + "x" + size.height);
+            final int newResMult = size.width * size.height;
+            if (newResMult > resolutionMultiplied) {
+                resolutionMultiplied = newResMult;
+                params.setPictureSize(size.width, size.height);
+            }
+        }
         params.setJpegQuality(100);
 
         mCamera.mCameraInstance.setParameters(params);
-        //        for (Camera.Size size : params.getSupportedPictureSizes()) {
-        //            Log.i("ASDF", "Supported: " + size.width + "x" + size.height);
-        //        }
 
         final long start = System.currentTimeMillis();
 
