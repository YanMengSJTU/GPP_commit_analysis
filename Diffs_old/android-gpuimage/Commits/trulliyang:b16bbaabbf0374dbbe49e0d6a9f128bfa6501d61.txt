diff --git a/build.gradle b/build.gradle
index ecc0a83e..614dd2bc 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,7 +5,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.0.0-beta6'
+        classpath 'com.android.tools.build:gradle:3.0.1'
     }
 }
 
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 6c0732ab..2f18c25b 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Sat Dec 06 18:27:05 JST 2014
+#Fri Jan 26 21:22:30 CST 2018
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.11-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.1-all.zip
diff --git a/library/build.gradle b/library/build.gradle
index 3cd5e8c4..b4e57c7d 100644
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -12,10 +12,10 @@ android {
         versionName = VERSION_NAME
 
         ndk {
-            moduleName "gpuimage-library"
-            stl "gnustl_shared"
-            abiFilters "all"
-            ldLibs "log"
+//            moduleName "gpuimage-library"
+//            stl "gnustl_shared"
+//            abiFilters "armeabi-v7a"
+//            ldLibs "log"
         }
     }
 
@@ -28,7 +28,7 @@ android {
             renderscript.srcDirs = ['src']
             res.srcDirs = ['res']
             assets.srcDirs = ['assets']
-            jni.srcDirs = ['jni']
+//            jni.srcDirs = ['jni']
         }
 
         instrumentTest.setRoot('tests')
diff --git a/library/src/jp/co/cyberagent/android/gpuimage/GPUImageNativeLibrary.java b/library/src/jp/co/cyberagent/android/gpuimage/GPUImageNativeLibrary.java
index ce8c31b8..917576b6 100644
--- a/library/src/jp/co/cyberagent/android/gpuimage/GPUImageNativeLibrary.java
+++ b/library/src/jp/co/cyberagent/android/gpuimage/GPUImageNativeLibrary.java
@@ -17,11 +17,11 @@
 package jp.co.cyberagent.android.gpuimage;
 
 public class GPUImageNativeLibrary {
-    static {
-        System.loadLibrary("gpuimage-library");
-    }
+//    static {
+//        System.loadLibrary("gpuimage-library");
+//    }
 
-    public static native void YUVtoRBGA(byte[] yuv, int width, int height, int[] out);
-
-    public static native void YUVtoARBG(byte[] yuv, int width, int height, int[] out);
+//    public static native void YUVtoRBGA(byte[] yuv, int width, int height, int[] out);
+//
+//    public static native void YUVtoARBG(byte[] yuv, int width, int height, int[] out);
 }
diff --git a/library/src/jp/co/cyberagent/android/gpuimage/GPUImageRenderer.java b/library/src/jp/co/cyberagent/android/gpuimage/GPUImageRenderer.java
index 691550bd..542caf74 100644
--- a/library/src/jp/co/cyberagent/android/gpuimage/GPUImageRenderer.java
+++ b/library/src/jp/co/cyberagent/android/gpuimage/GPUImageRenderer.java
@@ -155,8 +155,8 @@ public void onPreviewFrame(final byte[] data, final Camera camera) {
             runOnDraw(new Runnable() {
                 @Override
                 public void run() {
-                    GPUImageNativeLibrary.YUVtoRBGA(data, previewSize.width, previewSize.height,
-                            mGLRgbBuffer.array());
+//                    GPUImageNativeLibrary.YUVtoRBGA(data, previewSize.width, previewSize.height,
+//                            mGLRgbBuffer.array());
                     mGLTextureId = OpenGlUtils.loadTexture(mGLRgbBuffer, previewSize, mGLTextureId);
                     camera.addCallbackBuffer(data);
 
