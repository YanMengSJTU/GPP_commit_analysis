diff --git a/UXTool/.gitignore b/UXTool/.gitignore
new file mode 100644
index 00000000..796b96d1
--- /dev/null
+++ b/UXTool/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/UXTool/build.gradle b/UXTool/build.gradle
new file mode 100644
index 00000000..fd6f83ad
--- /dev/null
+++ b/UXTool/build.gradle
@@ -0,0 +1,35 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 24
+    buildToolsVersion "23.0.3"
+
+    defaultConfig {
+        applicationId "in.huohua.sample.uxtool"
+        minSdkVersion 15
+        targetSdkVersion 24
+        versionCode 1
+        versionName "1.0"
+
+        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+dependencies {
+    compile fileTree(include: ['*.jar'], dir: 'libs')
+    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
+        exclude group: 'com.android.support', module: 'support-annotations'
+    })
+    compile 'com.android.support:appcompat-v7:24.1.1'
+    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha5'
+    testCompile 'junit:junit:4.12'
+    compile project(':library')
+    compile files('libs/butterknife-7.0.1.jar')
+}
diff --git a/UXTool/libs/butterknife-7.0.1.jar b/UXTool/libs/butterknife-7.0.1.jar
new file mode 100644
index 00000000..7a03a8a2
Binary files /dev/null and b/UXTool/libs/butterknife-7.0.1.jar differ
diff --git a/UXTool/proguard-rules.pro b/UXTool/proguard-rules.pro
new file mode 100644
index 00000000..c63aefd0
--- /dev/null
+++ b/UXTool/proguard-rules.pro
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in /Users/dk/Library/Android/sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/UXTool/src/androidTest/java/in/huohua/sample/uxtool/ExampleInstrumentedTest.java b/UXTool/src/androidTest/java/in/huohua/sample/uxtool/ExampleInstrumentedTest.java
new file mode 100644
index 00000000..9a0907d2
--- /dev/null
+++ b/UXTool/src/androidTest/java/in/huohua/sample/uxtool/ExampleInstrumentedTest.java
@@ -0,0 +1,26 @@
+package in.huohua.sample.uxtool;
+
+import android.content.Context;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.*;
+
+/**
+ * Instrumentation test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+    @Test
+    public void useAppContext() throws Exception {
+        // Context of the app under test.
+        Context appContext = InstrumentationRegistry.getTargetContext();
+
+        assertEquals("in.huohua.sample.uxtool", appContext.getPackageName());
+    }
+}
diff --git a/UXTool/src/main/AndroidManifest.xml b/UXTool/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..49b47c88
--- /dev/null
+++ b/UXTool/src/main/AndroidManifest.xml
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="in.huohua.sample.uxtool">
+
+    <application android:allowBackup="true" android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name" android:supportsRtl="true" android:theme="@style/AppTheme">
+        <activity android:name=".MainActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+    </application>
+
+</manifest>
\ No newline at end of file
diff --git a/UXTool/src/main/java/in/huohua/sample/uxtool/MainActivity.java b/UXTool/src/main/java/in/huohua/sample/uxtool/MainActivity.java
new file mode 100644
index 00000000..68a0b969
--- /dev/null
+++ b/UXTool/src/main/java/in/huohua/sample/uxtool/MainActivity.java
@@ -0,0 +1,180 @@
+package in.huohua.sample.uxtool;
+
+import android.content.Intent;
+import android.net.Uri;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
+import android.widget.SeekBar;
+
+import butterknife.Bind;
+import butterknife.ButterKnife;
+import jp.co.cyberagent.android.gpuimage.GPUImage;
+import jp.co.cyberagent.android.gpuimage.GPUImageBrightnessFilter;
+import jp.co.cyberagent.android.gpuimage.GPUImageContrastFilter;
+import jp.co.cyberagent.android.gpuimage.GPUImageExposureFilter;
+import jp.co.cyberagent.android.gpuimage.GPUImageFilter;
+import jp.co.cyberagent.android.gpuimage.GPUImageFilterGroup;
+import jp.co.cyberagent.android.gpuimage.GPUImageHueFilter;
+import jp.co.cyberagent.android.gpuimage.GPUImageSaturationFilter;
+import jp.co.cyberagent.android.gpuimage.GPUImageView;
+
+public class MainActivity extends AppCompatActivity {
+
+    private static final int REQUEST_PICK_IMAGE = 1;
+    private GPUImageFilter mFilter;
+    private GPUImageView mGPUImageView;
+    private GPUImageFilterGroup group;
+    private GPUImageBrightnessFilter brightnessFilter;
+    private GPUImageSaturationFilter saturationFilter;
+    private GPUImageContrastFilter contrastFilter;
+    private GPUImageHueFilter hueFilter;
+    private GPUImageExposureFilter exposureFilter;
+
+
+    @Bind(R.id.seek_brightness)
+    SeekBar seekBrightness;
+    @Bind(R.id.seek_saturation)
+    SeekBar seekSaturation;
+    @Bind(R.id.seek_contrast)
+    SeekBar seekContrast;
+    @Bind(R.id.seek_hue)
+    SeekBar seekHue;
+    @Bind(R.id.seek_exposure)
+    SeekBar seekExposure;
+
+
+    @Override
+    public void onCreate(final Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+        ButterKnife.bind(this);
+        mGPUImageView = (GPUImageView) findViewById(R.id.gpuimage);
+        mGPUImageView.setOnClickListener(new View.OnClickListener() {
+
+            @Override
+            public void onClick(View view) {
+                Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);
+                photoPickerIntent.setType("image/*");
+                startActivityForResult(photoPickerIntent, REQUEST_PICK_IMAGE);
+            }
+        });
+        initFilters();
+        initSeekBars();
+    }
+
+    private void initSeekBars() {
+        //default 0 (-1.0, 1.0)
+        seekBrightness.setProgress(500);
+        //default 1 (0, 1)
+        seekSaturation.setProgress(500);
+        //default 1 (0, 4)
+        seekContrast.setProgress(250);
+        //default 90 (0, 360)
+        seekHue.setProgress(0);
+        //defalut 0 (-10, 10)
+        seekExposure.setProgress(500);
+
+        seekBrightness.setOnSeekBarChangeListener(mOnSeekBarChangeListene);
+        seekSaturation.setOnSeekBarChangeListener(mOnSeekBarChangeListene);
+        seekContrast.setOnSeekBarChangeListener(mOnSeekBarChangeListene);
+        seekHue.setOnSeekBarChangeListener(mOnSeekBarChangeListene);
+        seekExposure.setOnSeekBarChangeListener(mOnSeekBarChangeListene);
+    }
+
+    private void initFilters() {
+        brightnessFilter = new GPUImageBrightnessFilter();
+        saturationFilter = new GPUImageSaturationFilter();
+        contrastFilter = new GPUImageContrastFilter();
+        hueFilter = new GPUImageHueFilter(0);
+        exposureFilter = new GPUImageExposureFilter();
+
+        group = new GPUImageFilterGroup();
+        group.addFilter(brightnessFilter);
+        group.addFilter(saturationFilter);
+        group.addFilter(contrastFilter);
+        group.addFilter(hueFilter);
+        group.addFilter(exposureFilter);
+
+        applyFilterTo(group);
+    }
+
+    @Override
+    protected void onActivityResult(final int requestCode, final int resultCode, final Intent data) {
+        switch (requestCode) {
+            case REQUEST_PICK_IMAGE:
+                if (resultCode == RESULT_OK) {
+                    handleImage(data.getData());
+                } else {
+                    finish();
+                }
+                break;
+
+            default:
+                super.onActivityResult(requestCode, resultCode, data);
+                break;
+        }
+    }
+
+    private void applyFilterTo(final GPUImageFilter filter) {
+        if (mFilter == null
+                || (filter != null && !mFilter.getClass().equals(filter.getClass()))) {
+            mFilter = filter;
+            mGPUImageView.setFilter(mFilter);
+        }
+    }
+
+    private void handleImage(final Uri selectedImage) {
+        mGPUImageView.setImage(selectedImage);
+    }
+
+    private SeekBar.OnSeekBarChangeListener mOnSeekBarChangeListene = new SeekBar.OnSeekBarChangeListener() {
+        @Override
+        public void onProgressChanged(SeekBar seekBar, int i, boolean b) {
+            if (seekBar == seekBrightness) {
+                brightnessFilter.setBrightness(calculateBrightNess(i));
+            } else if (seekBar == seekSaturation) {
+                saturationFilter.setSaturation(calculateSaturation(i));
+            } else if (seekBar == seekContrast) {
+                contrastFilter.setContrast(calculateContrast(i));
+            } else if (seekBar == seekHue) {
+                hueFilter.setHue(calculateHue(i));
+            } else if (seekBar == seekExposure) {
+                exposureFilter.setExposure(calculateExposure(i));
+            }
+            mGPUImageView.requestRender();
+        }
+
+        @Override
+        public void onStartTrackingTouch(SeekBar seekBar) {
+
+        }
+
+        @Override
+        public void onStopTrackingTouch(SeekBar seekBar) {
+
+        }
+    };
+
+
+    private float calculateBrightNess(int progress) {
+        return (progress - 500) / 500f;
+    }
+
+    private float calculateSaturation(int progress) {
+        return progress / 500f;
+    }
+
+    private float calculateContrast(int progress) {
+        return progress / 250f;
+    }
+
+    private float calculateHue(int progress) {
+        return progress / 250f * 90f;
+    }
+
+    private float calculateExposure(int progress) {
+        return (progress - 500f) / 50f;
+    }
+}
diff --git a/UXTool/src/main/res/layout/activity_main.xml b/UXTool/src/main/res/layout/activity_main.xml
new file mode 100644
index 00000000..df34c763
--- /dev/null
+++ b/UXTool/src/main/res/layout/activity_main.xml
@@ -0,0 +1,126 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+
+    <jp.co.cyberagent.android.gpuimage.GPUImageView
+        android:id="@+id/gpuimage"
+        android:layout_width="wrap_content"
+        android:layout_height="300dp" />
+
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:gravity="center_vertical"
+            android:orientation="horizontal">
+
+            <TextView
+                android:layout_width="100dp"
+                android:layout_height="wrap_content"
+                android:paddingLeft="12dp"
+                android:text="brightness" />
+
+            <SeekBar
+                android:id="@+id/seek_brightness"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:max="1000" />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:gravity="center_vertical"
+            android:orientation="horizontal">
+
+            <TextView
+                android:layout_width="100dp"
+                android:layout_height="wrap_content"
+                android:paddingLeft="12dp"
+                android:text="saturation" />
+
+            <SeekBar
+                android:id="@+id/seek_saturation"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:max="1000" />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:gravity="center_vertical"
+            android:orientation="horizontal">
+
+            <TextView
+                android:layout_width="100dp"
+                android:layout_height="wrap_content"
+                android:paddingLeft="12dp"
+                android:text="contrast" />
+
+            <SeekBar
+                android:id="@+id/seek_contrast"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:max="1000" />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:gravity="center_vertical"
+            android:orientation="horizontal">
+
+            <TextView
+                android:layout_width="100dp"
+                android:layout_height="wrap_content"
+                android:paddingLeft="12dp"
+                android:text="hue" />
+
+            <SeekBar
+                android:id="@+id/seek_hue"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:max="1000" />
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            android:gravity="center_vertical"
+            android:orientation="horizontal">
+
+            <TextView
+                android:layout_width="100dp"
+                android:layout_height="wrap_content"
+                android:paddingLeft="12dp"
+                android:text="exposure" />
+
+            <SeekBar
+                android:id="@+id/seek_exposure"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:max="1000" />
+
+        </LinearLayout>
+
+    </LinearLayout>
+
+
+</LinearLayout>
\ No newline at end of file
diff --git a/UXTool/src/main/res/mipmap-hdpi/ic_launcher.png b/UXTool/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 00000000..cde69bcc
Binary files /dev/null and b/UXTool/src/main/res/mipmap-hdpi/ic_launcher.png differ
diff --git a/UXTool/src/main/res/mipmap-mdpi/ic_launcher.png b/UXTool/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 00000000..c133a0cb
Binary files /dev/null and b/UXTool/src/main/res/mipmap-mdpi/ic_launcher.png differ
diff --git a/UXTool/src/main/res/mipmap-xhdpi/ic_launcher.png b/UXTool/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 00000000..bfa42f0e
Binary files /dev/null and b/UXTool/src/main/res/mipmap-xhdpi/ic_launcher.png differ
diff --git a/UXTool/src/main/res/mipmap-xxhdpi/ic_launcher.png b/UXTool/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 00000000..324e72cd
Binary files /dev/null and b/UXTool/src/main/res/mipmap-xxhdpi/ic_launcher.png differ
diff --git a/UXTool/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/UXTool/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 00000000..aee44e13
Binary files /dev/null and b/UXTool/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ
diff --git a/UXTool/src/main/res/values-w820dp/dimens.xml b/UXTool/src/main/res/values-w820dp/dimens.xml
new file mode 100644
index 00000000..63fc8164
--- /dev/null
+++ b/UXTool/src/main/res/values-w820dp/dimens.xml
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
diff --git a/UXTool/src/main/res/values/colors.xml b/UXTool/src/main/res/values/colors.xml
new file mode 100644
index 00000000..3ab3e9cb
--- /dev/null
+++ b/UXTool/src/main/res/values/colors.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="colorPrimary">#3F51B5</color>
+    <color name="colorPrimaryDark">#303F9F</color>
+    <color name="colorAccent">#FF4081</color>
+</resources>
diff --git a/UXTool/src/main/res/values/dimens.xml b/UXTool/src/main/res/values/dimens.xml
new file mode 100644
index 00000000..47c82246
--- /dev/null
+++ b/UXTool/src/main/res/values/dimens.xml
@@ -0,0 +1,5 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+</resources>
diff --git a/UXTool/src/main/res/values/strings.xml b/UXTool/src/main/res/values/strings.xml
new file mode 100644
index 00000000..0a09216c
--- /dev/null
+++ b/UXTool/src/main/res/values/strings.xml
@@ -0,0 +1,3 @@
+<resources>
+    <string name="app_name">UXTool</string>
+</resources>
diff --git a/UXTool/src/main/res/values/styles.xml b/UXTool/src/main/res/values/styles.xml
new file mode 100644
index 00000000..5885930d
--- /dev/null
+++ b/UXTool/src/main/res/values/styles.xml
@@ -0,0 +1,11 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+</resources>
diff --git a/UXTool/src/test/java/in/huohua/sample/uxtool/ExampleUnitTest.java b/UXTool/src/test/java/in/huohua/sample/uxtool/ExampleUnitTest.java
new file mode 100644
index 00000000..fc019c0b
--- /dev/null
+++ b/UXTool/src/test/java/in/huohua/sample/uxtool/ExampleUnitTest.java
@@ -0,0 +1,17 @@
+package in.huohua.sample.uxtool;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
diff --git a/settings.gradle b/settings.gradle
index 612d9e44..4f25c639 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1,2 +1,2 @@
-include ':library'
+include ':library', ':UXTool'
 include ':sample'
