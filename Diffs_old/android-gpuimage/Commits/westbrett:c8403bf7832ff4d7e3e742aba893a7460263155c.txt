diff --git a/sample/AndroidManifest.xml b/sample/AndroidManifest.xml
index 855b72c5..022ce77d 100644
--- a/sample/AndroidManifest.xml
+++ b/sample/AndroidManifest.xml
@@ -1,8 +1,10 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="jp.co.cyberagent.android.gpuimage.sample">
 
+    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
     <uses-permission android:name="android.permission.CAMERA" />
+    <uses-permission android:name="android.permission.RECORD_AUDIO"/>
 
     <!-- For images from picasa -->
     <uses-permission android:name="android.permission.INTERNET" />
diff --git a/sample/res/layout/activity_camera.xml b/sample/res/layout/activity_camera.xml
index 16a64d0d..c0f357b5 100644
--- a/sample/res/layout/activity_camera.xml
+++ b/sample/res/layout/activity_camera.xml
@@ -46,4 +46,12 @@
             android:src="@android:drawable/ic_menu_camera" />
     </LinearLayout>
 
+    <Button
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Start Record"
+        android:id="@+id/button_record"
+        android:layout_alignBottom="@+id/surfaceView"
+        android:layout_centerHorizontal="true" />
+
 </RelativeLayout>
\ No newline at end of file
diff --git a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java
index ba832284..ed5ba8bd 100644
--- a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java
+++ b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java
@@ -29,6 +29,7 @@
 import android.util.Log;
 import android.view.View;
 import android.view.View.OnClickListener;
+import android.widget.Button;
 import android.widget.SeekBar;
 import android.widget.SeekBar.OnSeekBarChangeListener;
 
@@ -42,6 +43,8 @@
 import jp.co.cyberagent.android.gpuimage.GPUImage;
 import jp.co.cyberagent.android.gpuimage.GPUImage.OnPictureSavedListener;
 import jp.co.cyberagent.android.gpuimage.GPUImageFilter;
+import jp.co.cyberagent.android.gpuimage.GPUImageFilterGroup;
+import jp.co.cyberagent.android.gpuimage.GPUImageMovieWriter;
 import jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools;
 import jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.FilterAdjuster;
 import jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools.OnGpuImageFilterChosenListener;
@@ -56,6 +59,9 @@
     private CameraLoader mCamera;
     private GPUImageFilter mFilter;
     private FilterAdjuster mFilterAdjuster;
+    private GPUImageMovieWriter mMovieWriter;
+
+    private boolean mIsRecording = false;
 
     @Override
     public void onCreate(final Bundle savedInstanceState) {
@@ -64,10 +70,14 @@ public void onCreate(final Bundle savedInstanceState) {
         ((SeekBar) findViewById(R.id.seekBar)).setOnSeekBarChangeListener(this);
         findViewById(R.id.button_choose_filter).setOnClickListener(this);
         findViewById(R.id.button_capture).setOnClickListener(this);
+        findViewById(R.id.button_record).setOnClickListener(this);
 
         mGPUImage = new GPUImage(this);
         mGPUImage.setGLSurfaceView((GLSurfaceView) findViewById(R.id.surfaceView));
 
+        mMovieWriter = new GPUImageMovieWriter();
+        mGPUImage.setFilter(mMovieWriter);
+
         mCameraHelper = new CameraHelper(this);
         mCamera = new CameraLoader();
 
@@ -88,6 +98,10 @@ protected void onResume() {
     protected void onPause() {
         mCamera.onPause();
         super.onPause();
+
+        if (mIsRecording) {
+            mMovieWriter.stopRecording();
+        }
     }
 
     @Override
@@ -121,6 +135,25 @@ public void onAutoFocus(final boolean success, final Camera camera) {
             case R.id.img_switch_camera:
                 mCamera.switchCamera();
                 break;
+
+            case R.id.button_record:
+                onClickRecord((Button)v);
+                break;
+        }
+    }
+
+    private void onClickRecord(Button btn) {
+        if (mIsRecording) {
+            // go to stop recording
+            mIsRecording = false;
+            mMovieWriter.stopRecording();
+            btn.setText("Start Record");
+        } else {
+            // go to start recording
+            mIsRecording = true;
+            File recordFile = getOutputMediaFile(MEDIA_TYPE_VIDEO);
+            mMovieWriter.startRecording(recordFile.getAbsolutePath(), 540, 960);
+            btn.setText("Stop Record");
         }
     }
 
@@ -216,7 +249,12 @@ private void switchFilterTo(final GPUImageFilter filter) {
         if (mFilter == null
                 || (filter != null && !mFilter.getClass().equals(filter.getClass()))) {
             mFilter = filter;
-            mGPUImage.setFilter(mFilter);
+
+            GPUImageFilterGroup filters = new GPUImageFilterGroup();
+            filters.addFilter(mFilter);
+            filters.addFilter(mMovieWriter);
+
+            mGPUImage.setFilter(filters);
             mFilterAdjuster = new FilterAdjuster(mFilter);
         }
     }
