diff --git a/library/src/jp/co/cyberagent/android/gpuimage/GPUImagePolkaDotFilter.java b/library/src/jp/co/cyberagent/android/gpuimage/GPUImagePolkaDotFilter.java
index ca2e098a..95273a5d 100644
--- a/library/src/jp/co/cyberagent/android/gpuimage/GPUImagePolkaDotFilter.java
+++ b/library/src/jp/co/cyberagent/android/gpuimage/GPUImagePolkaDotFilter.java
@@ -51,6 +51,7 @@
 
     private int mImageWidthFactorLocation;
     private int mImageHeightFactorLocation;
+    private float w, h;
     private float mDot;
     private int mPolkaLocation;
     private int fractionalWidthOfAPixelLocation;
@@ -60,18 +61,19 @@
     
     public GPUImagePolkaDotFilter() {
         super(NO_FILTER_VERTEX_SHADER, POLKA_DOT_FRAGMENT_SHADER);
-        mDot = 1.0f;
+        mDot = 0.90f;
     }
 
     @Override
     public void onInit() {
         super.onInit();
-        mImageWidthFactorLocation = GLES20.glGetUniformLocation(getProgram(), "imageWidthFactor");
-        mImageHeightFactorLocation = GLES20.glGetUniformLocation(getProgram(), "imageHeightFactor");
-        mPolkaLocation = GLES20.glGetUniformLocation(getProgram(), "dotScaling");
+
         fractionalWidthOfAPixelLocation = GLES20.glGetUniformLocation(getProgram(), "fractionalWidthOfPixel");
         aspectRatioLocation = GLES20.glGetUniformLocation(getProgram(), "aspectRatio");
-
+        mPolkaLocation = GLES20.glGetUniformLocation(getProgram(), "dotScaling");
+        mImageWidthFactorLocation = GLES20.glGetUniformLocation(getProgram(), "imageWidthFactor");
+        mImageHeightFactorLocation = GLES20.glGetUniformLocation(getProgram(), "imageHeightFactor");
+        
         setFloat(fractionalWidthOfAPixelLocation, 0.05f);        
         setFloat(aspectRatioLocation, 1.0f);
         
@@ -81,17 +83,22 @@ public void onInit() {
     @Override
     public void onOutputSizeChanged(final int width, final int height) {
         super.onOutputSizeChanged(width, height);
-        setFloat(mImageWidthFactorLocation, 1.0f / width);
-        setFloat(mImageHeightFactorLocation, 1.0f / height);
+        w = 1.0f / width;
+        h = 1.0f / height;
+        setFloat(mImageWidthFactorLocation, 0.0f);
+        setFloat(mImageHeightFactorLocation, 0.0f);
+        //setFloat(fractionalWidthOfAPixelLocation, 0.05f);        
+        //setFloat(aspectRatioLocation, (1.0f / width) /  (1.0f / height) );
+        Log.v("GENERATE", "POLKA W is " + w + " and H is " + h);
     }
 
     public void setDotScaling(final float pixel) {
-    	
     		mDot = pixel;
-        Log.v("GENERATE", "POLKA SLIDER is " + pixel);
-
-        setFloat(fractionalWidthOfAPixelLocation, mDot);        
-        //setFloat(aspectRatioLocation, 1.0f);
+        //Log.v("GENERATE", "POLKA SLIDER is " + pixel);
+    		Log.v("GENERATE", " and noooww  POLKA W is " + w + " and H is " + h);
+        setFloat(fractionalWidthOfAPixelLocation, 0.05f);        
+        setFloat(mImageWidthFactorLocation, 0.0f);
+        setFloat(mImageHeightFactorLocation, 0.0f);
     		setFloat(mPolkaLocation, mDot);
     }
 }
