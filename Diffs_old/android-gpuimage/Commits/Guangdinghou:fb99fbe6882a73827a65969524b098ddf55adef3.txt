diff --git a/build.gradle b/build.gradle
index 8a29e6b0..11cdb7a1 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,7 +5,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.0.0-beta6'
+        classpath 'com.android.tools.build:gradle:2.0.0'
         classpath 'com.novoda:bintray-release:0.3.4'
     }
 }
diff --git a/game2048/build.gradle b/game2048/build.gradle
new file mode 100644
index 00000000..ef335340
--- /dev/null
+++ b/game2048/build.gradle
@@ -0,0 +1,24 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 22
+    buildToolsVersion "22.0.1"
+
+    defaultConfig {
+        applicationId "com.guang.sun.game"
+        minSdkVersion 16
+        targetSdkVersion 19
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
+        }
+    }
+}
+
+dependencies {
+    compile 'com.android.support:support-v4:22.2.0'
+    compile files('libs/picasso-2.5.2.jar')
+}
diff --git a/game2048/game2048-release.apk b/game2048/game2048-release.apk
new file mode 100644
index 00000000..b54666b9
Binary files /dev/null and b/game2048/game2048-release.apk differ
diff --git a/game2048/libs/picasso-2.5.2.jar b/game2048/libs/picasso-2.5.2.jar
new file mode 100644
index 00000000..6acbaa14
Binary files /dev/null and b/game2048/libs/picasso-2.5.2.jar differ
diff --git a/game2048/src/main/AndroidManifest.xml b/game2048/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..7a9a287a
--- /dev/null
+++ b/game2048/src/main/AndroidManifest.xml
@@ -0,0 +1,53 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.android.game2048"
+    android:versionCode="1"
+    android:versionName="1.0">
+
+    <uses-sdk
+        android:minSdkVersion="16"
+        android:targetSdkVersion="19" />
+
+    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" />
+    <uses-permission android:name="android.permission.GET_TASKS" />
+    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS" />
+
+    <uses-feature android:name="android.hardware.camera" />
+    <uses-feature android:name="android.hardware.camera.autofocus" />
+
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.CAMERA" />
+
+
+    <uses-feature
+        android:glEsVersion="0x00020000"
+        android:required="true" />
+    <!-- 设置支持的纹理压缩 -->
+    <supports-gl-texture android:name="GL_OES_compressed_ETC1_RGB8_texture" />
+    <supports-gl-texture android:name="GL_OES_compressed_paletted_texture" />
+
+    <application
+        android:allowBackup="true"
+        android:icon="@drawable/ic_launcher"
+        android:label="@string/app_name"
+        android:theme="@style/AppTheme">
+        <activity
+            android:name="com.guang.sun.game.MainActivity"
+            android:label="@string/app_name"
+            android:screenOrientation="portrait">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity
+
+            android:name="com.guang.sun.game.camera.CameraActivity"
+            android:launchMode="standard"
+            android:screenOrientation="portrait" />
+
+        <service android:name="com.guang.sun.game.floatwindowdemo.FloatWindowService"></service>
+    </application>
+
+</manifest>
diff --git a/game2048/src/main/java/com/guang/sun/game/Card.java b/game2048/src/main/java/com/guang/sun/game/Card.java
new file mode 100644
index 00000000..0e6d06c5
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/Card.java
@@ -0,0 +1,121 @@
+package com.guang.sun.game;
+
+
+import android.content.Context;
+import android.view.Gravity;
+import android.view.View;
+import android.view.animation.Animation;
+import android.view.animation.ScaleAnimation;
+import android.widget.FrameLayout;
+import android.widget.TextView;
+
+import com.android.game2048.R;
+
+public class Card extends FrameLayout {
+
+
+    public static int width;
+
+    private TextView label;
+
+    public Card(Context context) {
+        super(context);
+
+        LayoutParams lp = null;
+
+        View background = new View(getContext());
+        lp = new LayoutParams(-1, -1);
+        lp.setMargins(40, 40, 0, 0);
+
+//        background.setBackgroundColor(getResources().getColor(R.color.sekuai));
+        background.setBackground(getResources().getDrawable(R.drawable.bg_edittext_focused));
+        addView(background, lp);
+
+        label = new TextView(getContext());
+        label.setTextSize(20);
+        label.setTextColor(getResources().getColor(R.color.alpha_black));
+        label.setGravity(Gravity.CENTER);
+
+        lp = new LayoutParams(-1, -1);
+        lp.setMargins(40, 40, 0, 0);
+        addView(label, lp);
+
+        setNum(0);
+    }
+
+
+    private int num = 0;
+
+    public int getNum() {
+        return num;
+    }
+
+    public void setNum(int num) {
+        this.num = num;
+
+        if (num <= 0) {
+            label.setText("");
+        } else {
+            label.setText(String.valueOf(num));
+
+        }
+
+        switch (num) {
+            case 0:
+                label.setBackgroundColor(0x00000000);
+                break;
+            case 2:
+                label.setBackground(getResources().getDrawable(R.drawable.bg_2));
+                break;
+            case 4:
+                label.setBackground(getResources().getDrawable(R.drawable.bg_4));
+                break;
+            case 8:
+                label.setBackground(getResources().getDrawable(R.drawable.bg_8));
+                break;
+            case 16:
+                label.setBackground(getResources().getDrawable(R.drawable.bg_16));
+                break;
+            case 32:
+                label.setBackground(getResources().getDrawable(R.drawable.bg_32));
+                break;
+            case 64:
+                label.setBackground(getResources().getDrawable(R.drawable.bg_64));
+                break;
+            case 128:
+                label.setBackground(getResources().getDrawable(R.drawable.bg_128));
+                break;
+            case 256:
+                label.setBackground(getResources().getDrawable(R.drawable.bg_256));
+                break;
+            case 512:
+                label.setBackground(getResources().getDrawable(R.drawable.bg_512));
+                break;
+            case 1024:
+                label.setBackground(getResources().getDrawable(R.drawable.bg_1024));
+                break;
+            case 2048:
+                label.setBackground(getResources().getDrawable(R.drawable.bg_2048));
+                break;
+            default:
+                label.setBackground(getResources().getDrawable(R.drawable.bg_else));
+                break;
+        }
+    }
+
+    public boolean equals(Card another) {
+        return getNum() == another.getNum();
+    }
+
+    public TextView getLabel() {
+        return label;
+    }
+
+    public void addScaleAnimation() {
+        ScaleAnimation sa = new ScaleAnimation(0.1f, 1, 0.1f, 1, Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f);
+        sa.setDuration(500);
+        setAnimation(null);
+        getLabel().startAnimation(sa);
+    }
+
+}
diff --git a/game2048/src/main/java/com/guang/sun/game/GameView.java b/game2048/src/main/java/com/guang/sun/game/GameView.java
new file mode 100644
index 00000000..033e879b
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/GameView.java
@@ -0,0 +1,363 @@
+package com.guang.sun.game;
+
+
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.graphics.Point;
+import android.util.AttributeSet;
+import android.util.Log;
+import android.view.MotionEvent;
+import android.view.View;
+import android.widget.LinearLayout;
+
+import com.android.game2048.R;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class GameView extends LinearLayout {
+
+    public int LINES = 4;
+    private Card[][] cardsMap = new Card[LINES][LINES];
+    private List<Point> emptyPoints = new ArrayList<Point>();
+    private MainActivity.Score score;
+
+
+    public GameView(Context context) {
+        super(context);
+        initGameView();
+    }
+
+    public void setLines(int i) {
+        this.LINES = i;
+        cardsMap = new Card[LINES][LINES];
+        initGameView();
+    }
+
+    public GameView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        initGameView();
+    }
+
+    private Long start, end;
+
+    private void initGameView() {
+        setOrientation(LinearLayout.VERTICAL);
+//        setBackgroundColor(Color.WHITE);
+        setBackground(getResources().getDrawable(R.drawable.bg_view));
+
+        setOnTouchListener(new View.OnTouchListener() {
+
+            private float startX, startY, offsetX, offsetY;
+
+            @Override
+            public boolean onTouch(View v, MotionEvent event) {
+
+                switch (event.getAction()) {
+                    case MotionEvent.ACTION_DOWN:
+                        startX = event.getX();
+                        startY = event.getY();
+                        start = System.currentTimeMillis();
+                        break;
+                    case MotionEvent.ACTION_UP:
+                        offsetX = event.getX() - startX;
+                        offsetY = event.getY() - startY;
+                        end = System.currentTimeMillis();
+
+                        if (Math.abs(offsetX) > Math.abs(offsetY)) {
+                            if (offsetX < -5) {
+                                swipeLeft();
+                            } else if (offsetX > 5) {
+                                swipeRight();
+                            } else {
+                                if ((end - start) < 500) {
+                                    interfaceTakePhoto.takePhoto();
+//                                    Toast.makeText(getContext(),"当做点击",Toast.LENGTH_SHORT).show();
+                                }
+                            }
+                        } else {
+                            if (offsetY < -5) {
+                                swipeUp();
+                            } else if (offsetY > 5) {
+                                swipeDown();
+                            } else {
+                                if ((end - start) < 500) {
+                                    interfaceTakePhoto.takePhoto();
+//                                    Toast.makeText(getContext(),"当做点击",Toast.LENGTH_SHORT).show();
+                                }
+                            }
+                        }
+
+                        break;
+                }
+                return true;
+            }
+        });
+    }
+
+    @Override
+    protected void onSizeChanged(int width, int height, int oldWidth, int oldHeight) {
+        super.onSizeChanged(width, height, oldWidth, oldHeight);
+        Log.i("width and height", width + ">>" + height);
+        Card.width = (Math.min(width, height) - 40) / LINES;
+
+        addCards();
+        startGame();
+    }
+
+    interface ITakePhoto {
+        public void takePhoto();
+
+    }
+
+    ITakePhoto interfaceTakePhoto = null;
+
+    public void setMyOnClick(ITakePhoto iftp) {
+        interfaceTakePhoto = iftp;
+    }
+
+    private void addCards() {
+
+        Card c;
+
+        LinearLayout line;
+        LinearLayout.LayoutParams lineLp;
+
+        for (int y = 0; y < LINES; y++) {
+            line = new LinearLayout(getContext());
+            lineLp = new LinearLayout.LayoutParams(-1, Card.width);
+
+            addView(line, lineLp);
+
+            for (int x = 0; x < LINES; x++) {
+                c = new Card(getContext());
+                line.addView(c, Card.width, Card.width);
+
+                cardsMap[x][y] = c;
+            }
+        }
+    }
+
+    public void startGame() {
+        for (int y = 0; y < LINES; y++) {
+            for (int x = 0; x < LINES; x++) {
+                cardsMap[x][y].setNum(0);
+            }
+        }
+
+        addRandomNum();
+        addRandomNum();
+    }
+
+    private void addRandomNum() {
+
+        emptyPoints.clear();
+
+        //calculate how many empty points
+        for (int y = 0; y < LINES; y++) {
+            for (int x = 0; x < LINES; x++) {
+                if (cardsMap[x][y].getNum() <= 0) {
+                    emptyPoints.add(new Point(x, y));
+                }
+            }
+        }
+
+        if (emptyPoints.size() > 0) {
+
+            Point p = emptyPoints.remove((int) (Math.random() * emptyPoints.size()));
+            cardsMap[p.x][p.y].setNum(Math.random() > 0.1 ? 2 : 4);
+            cardsMap[p.x][p.y].addScaleAnimation();
+        }
+    }
+
+
+    private void swipeLeft() {
+
+        boolean merge = false;
+
+        for (int y = 0; y < LINES; y++) {
+            for (int x = 0; x < LINES; x++) {
+
+                for (int x1 = x + 1; x1 < LINES; x1++) {
+                    if (cardsMap[x1][y].getNum() > 0) {
+
+                        if (cardsMap[x][y].getNum() <= 0) {
+                            cardsMap[x][y].setNum(cardsMap[x1][y].getNum());
+                            cardsMap[x1][y].setNum(0);
+
+                            x--;
+                            merge = true;
+
+                        } else if (cardsMap[x][y].equals(cardsMap[x1][y])) {
+
+                            cardsMap[x][y].setNum(cardsMap[x][y].getNum() * 2);
+                            cardsMap[x1][y].setNum(0);
+
+                            score.addScore(cardsMap[x][y].getNum());
+                            merge = true;
+                        }
+
+                        break;
+                    }
+                }
+            }
+        }
+
+        if (merge) {
+            addRandomNum();
+            checkComplete();
+        }
+    }
+
+    private void swipeRight() {
+
+        boolean merge = false;
+
+        for (int y = 0; y < LINES; y++) {
+            for (int x = LINES - 1; x >= 0; x--) {
+
+                for (int x1 = x - 1; x1 >= 0; x1--) {
+                    if (cardsMap[x1][y].getNum() > 0) {
+
+                        if (cardsMap[x][y].getNum() <= 0) {
+
+                            cardsMap[x][y].setNum(cardsMap[x1][y].getNum());
+                            cardsMap[x1][y].setNum(0);
+
+                            x++;
+                            merge = true;
+                        } else if (cardsMap[x][y].equals(cardsMap[x1][y])) {
+
+                            cardsMap[x][y].setNum(cardsMap[x][y].getNum() * 2);
+                            cardsMap[x1][y].setNum(0);
+                            score.addScore(cardsMap[x][y].getNum());
+                            merge = true;
+                        }
+
+                        break;
+                    }
+                }
+            }
+        }
+
+        if (merge) {
+            addRandomNum();
+            checkComplete();
+        }
+    }
+
+    private void swipeUp() {
+
+        boolean merge = false;
+
+        for (int x = 0; x < LINES; x++) {
+            for (int y = 0; y < LINES; y++) {
+
+                for (int y1 = y + 1; y1 < LINES; y1++) {
+                    if (cardsMap[x][y1].getNum() > 0) {
+
+                        if (cardsMap[x][y].getNum() <= 0) {
+
+                            cardsMap[x][y].setNum(cardsMap[x][y1].getNum());
+                            cardsMap[x][y1].setNum(0);
+
+                            y--;
+
+                            merge = true;
+                        } else if (cardsMap[x][y].equals(cardsMap[x][y1])) {
+
+                            cardsMap[x][y].setNum(cardsMap[x][y].getNum() * 2);
+                            cardsMap[x][y1].setNum(0);
+                            score.addScore(cardsMap[x][y].getNum());
+                            merge = true;
+                        }
+
+                        break;
+
+                    }
+                }
+            }
+        }
+
+        if (merge) {
+            addRandomNum();
+            checkComplete();
+        }
+    }
+
+    private void swipeDown() {
+
+        boolean merge = false;
+
+        for (int x = 0; x < LINES; x++) {
+            for (int y = LINES - 1; y >= 0; y--) {
+
+                for (int y1 = y - 1; y1 >= 0; y1--) {
+                    if (cardsMap[x][y1].getNum() > 0) {
+
+                        if (cardsMap[x][y].getNum() <= 0) {
+
+                            cardsMap[x][y].setNum(cardsMap[x][y1].getNum());
+                            cardsMap[x][y1].setNum(0);
+
+                            y++;
+                            merge = true;
+                        } else if (cardsMap[x][y].equals(cardsMap[x][y1])) {
+
+                            cardsMap[x][y].setNum(cardsMap[x][y].getNum() * 2);
+                            cardsMap[x][y1].setNum(0);
+                            score.addScore(cardsMap[x][y].getNum());
+                            merge = true;
+                        }
+
+                        break;
+                    }
+                }
+            }
+        }
+
+        if (merge) {
+            addRandomNum();
+            checkComplete();
+        }
+    }
+
+    private void checkComplete() {
+
+        boolean complete = true;
+
+        ALL:
+        for (int y = 0; y < LINES; y++) {
+            for (int x = 0; x < LINES; x++) {
+                if (cardsMap[x][y].getNum() == 0 ||
+                        (x > 0 && cardsMap[x][y].equals(cardsMap[x - 1][y])) ||
+                        (x < LINES - 1 && cardsMap[x][y].equals(cardsMap[x + 1][y])) ||
+                        (y > 0 && cardsMap[x][y].equals(cardsMap[x][y - 1])) ||
+                        (y < LINES - 1 && cardsMap[x][y].equals(cardsMap[x][y + 1]))) {
+
+                    complete = false;
+                    break ALL;
+                }
+            }
+        }
+
+        if (complete) {
+            new AlertDialog.Builder(getContext()).setTitle("Finished").setMessage("Game Over").setPositiveButton("start again?", new DialogInterface.OnClickListener() {
+
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    startGame();
+                }
+            }).show();
+        }
+
+    }
+
+    public void setScore(MainActivity.Score score) {
+        this.score = score;
+
+    }
+
+
+}
diff --git a/game2048/src/main/java/com/guang/sun/game/MainActivity.java b/game2048/src/main/java/com/guang/sun/game/MainActivity.java
new file mode 100644
index 00000000..19ba95f1
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/MainActivity.java
@@ -0,0 +1,225 @@
+package com.guang.sun.game;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.content.SharedPreferences.Editor;
+import android.graphics.Bitmap;
+import android.os.Bundle;
+import android.os.Environment;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.view.ViewGroup;
+import android.view.Window;
+import android.widget.Button;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.android.game2048.R;
+import com.guang.sun.game.base.MyApplication;
+import com.guang.sun.game.camera.CameraActivity;
+import com.guang.sun.game.camera.util.DisplayUtil;
+import com.guang.sun.game.floatwindowdemo.FloatWindowService;
+
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.IOException;
+
+
+public class MainActivity extends Activity implements GameView.ITakePhoto {
+
+    private TextView scoreTextView, bestScoreTextView;
+    private Button buttoNewGame;
+    private GameView gameView = null;
+    private int width, height;
+    private Score score;
+
+    public int getStatusBarHeight() {
+        int result = 0;
+        int resourceId = getResources().getIdentifier("status_bar_height", "dimen", "android");
+        if (resourceId > 0) {
+            result = getResources().getDimensionPixelSize(resourceId);
+        }
+        return result;
+    }
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        // TODO Auto-generated method stub
+        super.onCreate(savedInstanceState);
+        app = new MyApplication();
+        requestWindowFeature(Window.FEATURE_NO_TITLE);
+        setContentView(R.layout.activity_main);
+
+        buttoNewGame = (Button) findViewById(R.id.btnNewGame);
+        scoreTextView = (TextView) findViewById(R.id.score);
+        bestScoreTextView = (TextView) findViewById(R.id.bestScore);
+
+        gameView = (GameView) findViewById(R.id.gameView);
+
+        score = new Score();
+        gameView.setScore(score);
+        gameView.setMyOnClick(this);
+        int w = this.getResources().getDisplayMetrics().widthPixels;
+        w = w * 19 / 20;
+        ViewGroup.LayoutParams lp;
+        lp = gameView.getLayoutParams();
+        lp.width = w;
+        lp.height = w;
+        width = DisplayUtil.getScreenMetrics(this).x;
+        height = DisplayUtil.getScreenMetrics(this).y;
+        gameView.setLayoutParams(lp);
+
+
+        app.setStatusBarHeight(getStatusBarHeight());
+        System.out.println("first--->" + getStatusBarHeight());
+        Button startFloatWindow = (Button) findViewById(R.id.start_float_window);
+        startFloatWindow.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View arg0) {
+                Intent intent = new Intent(MainActivity.this, FloatWindowService.class);
+                startService(intent);
+                finish();
+            }
+        });
+        buttoNewGame.setOnClickListener(new OnClickListener() {
+
+            @Override
+            public void onClick(View arg0) {
+                startNewGame();
+            }
+        });
+//        MyOpenCmera();
+        gameView.setLines(4);
+
+
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+
+
+    }
+
+    @Override
+    protected void onPause() {
+        super.onPause();
+    }
+
+
+    private void startNewGame() {
+        score.clearScore();
+        showScore();
+        showBestScore();
+        gameView.startGame();
+    }
+
+    private void showBestScore() {
+        bestScoreTextView.setText(String.valueOf(score.getBestScore()));
+    }
+
+    private void showScore() {
+        scoreTextView.setText(String.valueOf(score.getScore()));
+    }
+
+    static Long t1;
+    static Long t2;
+    MyApplication app;
+
+    public void getScreenCut() {
+        t1 = System.currentTimeMillis();
+        View home = gameView.getRootView();
+        home.setDrawingCacheEnabled(true);
+        Bitmap bm = home.getDrawingCache();
+
+        System.out.println("second--->" + app.getStatusBarHeight());
+
+        // 获取屏幕长和高
+
+        // 去掉标题栏
+        // Bitmap b = Bitmap.createBitmap(b1, 0, 25, 320, 455);
+        Bitmap b = Bitmap.createBitmap(bm, 0, app.getStatusBarHeight(), width, height
+                - app.getStatusBarHeight());
+        home.destroyDrawingCache();
+
+
+        savePic(b, Environment.getExternalStorageDirectory().getAbsolutePath() + "/" + "Application/a.jpg");
+        Intent intent = new Intent();  //Itent就是我们要发送的内容
+        intent.putExtra("data", "t");
+        intent.setAction("2048");   //设置你这个广播的action，只有和这个action一样的接受者才能接受者才能接收广播
+        sendBroadcast(intent);
+    }
+
+    @Override
+    public void takePhoto() {
+        //点击后拍照
+//        Intent i = new Intent(MainActivity.this, CameraActivity.class);
+//        startActivity(i);
+//        Thread t = new Thread(
+//                new Runnable() {
+//            @Override
+//            public void run() {
+//                getScreenCut();
+//            }
+//        });
+//        t.start();
+
+
+    }
+
+    public static void savePic(Bitmap b, String strFileName) {
+        FileOutputStream fos = null;
+        try {
+            fos = new FileOutputStream(strFileName);
+            if (null != fos) {
+                b.compress(Bitmap.CompressFormat.PNG, 90, fos);
+                fos.flush();
+                fos.close();
+                b.recycle();
+                t2 = System.currentTimeMillis();
+                System.out.println("消耗时间：" + (t2 - t1) + "===" + t1 + "===" + t2);
+
+            }
+        } catch (FileNotFoundException e) {
+            e.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+    }
+
+
+    class Score {
+        private static final String SP_KEY_BEST_SCORE = "bestScore";
+        private int score = 0;
+
+        public void clearScore() {
+            score = 0;
+        }
+
+        public int getScore() {
+            return score;
+        }
+
+        public void addScore(int s) {
+            score += s;
+            showScore();
+
+            saveBestScore(Math.max(score, getBestScore()));
+            showBestScore();
+        }
+
+        public void saveBestScore(int s) {
+            Editor e = getPreferences(MODE_PRIVATE).edit();
+            e.putInt(SP_KEY_BEST_SCORE, s);
+            e.commit();
+        }
+
+        public int getBestScore() {
+            return getPreferences(MODE_PRIVATE).getInt(SP_KEY_BEST_SCORE, 0);
+        }
+
+
+    }
+
+
+}
diff --git a/game2048/src/main/java/com/guang/sun/game/base/MyApplication.java b/game2048/src/main/java/com/guang/sun/game/base/MyApplication.java
new file mode 100644
index 00000000..e934b755
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/base/MyApplication.java
@@ -0,0 +1,30 @@
+package com.guang.sun.game.base;
+
+import android.app.Application;
+
+/**
+ * Created by sunxi on 2015/8/27.
+ */
+
+
+public class MyApplication extends Application {
+    public  int getStatusBarHeight() {
+        return statusBarHeight;
+    }
+
+    public  void setStatusBarHeight(int statusBarHeight) {
+        MyApplication.statusBarHeight = statusBarHeight;
+    }
+
+    private static int statusBarHeight;
+
+    public MyApplication() {
+        super();
+    }
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+
+    }
+}
diff --git a/game2048/src/main/java/com/guang/sun/game/camera/CameraActivity.java b/game2048/src/main/java/com/guang/sun/game/camera/CameraActivity.java
new file mode 100644
index 00000000..19f77195
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/camera/CameraActivity.java
@@ -0,0 +1,163 @@
+package com.guang.sun.game.camera;
+
+
+import android.app.Activity;
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.graphics.Point;
+import android.os.Bundle;
+import android.os.Environment;
+import android.os.Handler;
+import android.util.Log;
+import android.view.Menu;
+import android.view.SurfaceHolder;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.view.ViewGroup.LayoutParams;
+import android.view.Window;
+import android.widget.ImageButton;
+import android.widget.ImageView;
+import android.widget.Toast;
+
+import com.android.game2048.R;
+import com.guang.sun.game.camera.preview.CameraSurfaceView;
+import com.guang.sun.game.camera.util.DisplayUtil;
+import com.squareup.picasso.Picasso;
+
+import java.io.File;
+
+
+public class CameraActivity extends Activity implements CameraInterface.CamOpenOverCallback {
+    private static final String TAG = "yanzi";
+    CameraSurfaceView surfaceView = null;
+    ImageButton shutterBtn;
+    float previewRate = -1f;
+    ImageView iv;
+    Handler handler = new Handler() {
+        public void handleMessage(android.os.Message msg) {
+            Log.i("message", "--");
+            finish();
+        }
+
+    };
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+//        overridePendingTransition(R.anim.anim_fade_in, android.R.anim.fade_out);
+        requestWindowFeature(Window.FEATURE_NO_TITLE);
+
+        setContentView(R.layout.activity_camera);
+        iv = (ImageView) findViewById(R.id.iv);
+        iv.setOnClickListener(new BtnListeners());
+        System.out.print("时间" + System.currentTimeMillis());
+
+        Picasso.with(this).load(new File(Environment.getExternalStorageDirectory().getAbsolutePath() + "/" + "Application/a.jpg")).into(iv);
+        Thread openThread = new Thread() {
+            @Override
+            public void run() {
+                // TODO Auto-generated method stub
+                CameraInterface.getInstance().doOpenCamera(CameraActivity.this);
+            }
+        };
+        openThread.start();
+        initUI();
+        initViewParams();
+        regBroadCast();
+        shutterBtn.setOnClickListener(new BtnListeners());
+    }
+
+    private ReceiveBroadCast receiveBroadCast;
+
+    public void regBroadCast() {
+        receiveBroadCast = new ReceiveBroadCast();
+        IntentFilter filter = new IntentFilter();
+        filter.addAction("2048");    //只有持有相同的action的接受者才能接收此广播
+        registerReceiver(receiveBroadCast, filter);
+    }
+
+    @Override
+    protected void onNewIntent(Intent intent) {
+        super.onNewIntent(intent);
+        onCreate(null);
+    }
+
+    @Override
+    protected void onPause() {
+        super.onPause();
+        Picasso.with(this).invalidate(new File(Environment.getExternalStorageDirectory().getAbsolutePath() + "/" + "Application/a.jpg"));
+        finish();
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        // Inflate the menu; this adds items to the action bar if it is present.
+        return true;
+    }
+
+    private void initUI() {
+        surfaceView = (CameraSurfaceView) findViewById(R.id.camera_surfaceview);
+        shutterBtn = (ImageButton) findViewById(R.id.btn_shutter);
+    }
+
+    private void initViewParams() {
+        LayoutParams params = surfaceView.getLayoutParams();
+        Point p = DisplayUtil.getScreenMetrics(this);
+        params.width = p.x;
+        params.height = p.y;
+        previewRate = DisplayUtil.getScreenRate(this); //默认全屏的比例预览
+        surfaceView.setLayoutParams(params);
+
+        //手动设置拍照ImageButton的大小为120dip×120dip,原图片大小是64×64
+        LayoutParams p2 = shutterBtn.getLayoutParams();
+        p2.width = DisplayUtil.dip2px(this, 80);
+        p2.height = DisplayUtil.dip2px(this, 80);
+        ;
+        shutterBtn.setLayoutParams(p2);
+
+    }
+
+    public class ReceiveBroadCast extends BroadcastReceiver {
+
+        @Override
+        public void onReceive(Context context, Intent intent) {
+            //得到广播中得到的数据，并显示出来
+            Toast.makeText(CameraActivity.this, "get", Toast.LENGTH_SHORT).show();
+            Picasso.with(CameraActivity.this).load(new File(Environment.getExternalStorageDirectory().getAbsolutePath() + "/" + "Application/a.jpg")).into(iv);
+        }
+
+    }
+
+    @Override
+    public void cameraHasOpened() {
+        // TODO Auto-generated method stub
+        SurfaceHolder holder = surfaceView.getSurfaceHolder();
+        CameraInterface.getInstance().doStartPreview(holder, previewRate);
+    }
+
+
+    private class BtnListeners implements OnClickListener {
+
+        @Override
+        public void onClick(View v) {
+            // TODO Auto-generated method stub
+            switch (v.getId()) {
+                case R.id.btn_shutter:
+                    CameraInterface.getInstance().doTakePicture();
+                    break;
+                case R.id.iv:
+                    CameraInterface.getInstance().doTakePicture();
+
+                    handler.sendEmptyMessageDelayed(0, 1000);
+                    iv.setClickable(false);
+                    break;
+                default:
+                    break;
+            }
+        }
+
+    }
+
+}
diff --git a/game2048/src/main/java/com/guang/sun/game/camera/CameraInterface.java b/game2048/src/main/java/com/guang/sun/game/camera/CameraInterface.java
new file mode 100644
index 00000000..c87af418
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/camera/CameraInterface.java
@@ -0,0 +1,180 @@
+package com.guang.sun.game.camera;
+
+
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.PixelFormat;
+import android.hardware.Camera;
+import android.hardware.Camera.PictureCallback;
+import android.hardware.Camera.ShutterCallback;
+import android.hardware.Camera.Size;
+import android.util.Log;
+import android.view.SurfaceHolder;
+
+import com.guang.sun.game.camera.util.CamParaUtil;
+import com.guang.sun.game.camera.util.FileUtil;
+import com.guang.sun.game.camera.util.ImageUtil;
+
+import java.io.IOException;
+import java.util.List;
+
+public class CameraInterface {
+    private static final String TAG = "yanzi";
+    private Camera mCamera;
+    private Camera.Parameters mParams;
+    private boolean isPreviewing = false;
+    private float mPreviwRate = -1f;
+    private static CameraInterface mCameraInterface;
+
+    public interface CamOpenOverCallback {
+        public void cameraHasOpened();
+    }
+
+    private CameraInterface() {
+
+    }
+
+    public static synchronized CameraInterface getInstance() {
+        if (mCameraInterface == null) {
+            mCameraInterface = new CameraInterface();
+        }
+        return mCameraInterface;
+    }
+
+    /**
+     * 打开Camera
+     *
+     * @param callback
+     */
+    public void doOpenCamera(CamOpenOverCallback callback) {
+        Log.i(TAG, "Camera open....");
+        if (mCamera == null)
+            mCamera = Camera.open();
+        Log.i(TAG, "Camera open over....");
+        callback.cameraHasOpened();
+    }
+
+    /**
+     * 开启预览
+     *
+     * @param holder
+     * @param previewRate
+     */
+    public void doStartPreview(SurfaceHolder holder, float previewRate) {
+        Log.i(TAG, "doStartPreview...");
+        if (isPreviewing) {
+            mCamera.stopPreview();
+            return;
+        }
+        if (mCamera != null) {
+
+            mParams = mCamera.getParameters();
+            mParams.setPictureFormat(PixelFormat.JPEG);//设置拍照后存储的图片格式
+            CamParaUtil.getInstance().printSupportPictureSize(mParams);
+            CamParaUtil.getInstance().printSupportPreviewSize(mParams);
+            //设置PreviewSize和PictureSize
+            Size pictureSize = CamParaUtil.getInstance().getPropPictureSize(
+                    mParams.getSupportedPictureSizes(), previewRate, 800);
+            mParams.setPictureSize(pictureSize.width, pictureSize.height);
+            Size previewSize = CamParaUtil.getInstance().getPropPreviewSize(
+                    mParams.getSupportedPreviewSizes(), previewRate, 800);
+            mParams.setPreviewSize(previewSize.width, previewSize.height);
+
+            mCamera.setDisplayOrientation(90);
+
+            CamParaUtil.getInstance().printSupportFocusMode(mParams);
+            List<String> focusModes = mParams.getSupportedFocusModes();
+            if (focusModes.contains("continuous-video")) {
+                mParams.setFocusMode(Camera.Parameters.FOCUS_MODE_CONTINUOUS_VIDEO);
+            }
+            mCamera.setParameters(mParams);
+
+            try {
+                mCamera.setPreviewDisplay(holder);
+                mCamera.startPreview();//开启预览
+            } catch (IOException e) {
+                // TODO Auto-generated catch block
+                e.printStackTrace();
+            }
+
+            isPreviewing = true;
+            mPreviwRate = previewRate;
+
+            mParams = mCamera.getParameters(); //重新get一次
+            Log.i(TAG, "最终设置:PreviewSize--With = " + mParams.getPreviewSize().width
+                    + "Height = " + mParams.getPreviewSize().height);
+            Log.i(TAG, "最终设置:PictureSize--With = " + mParams.getPictureSize().width
+                    + "Height = " + mParams.getPictureSize().height);
+        }
+    }
+
+    /**
+     * 停止预览，释放Camera
+     */
+    public void doStopCamera() {
+        if (null != mCamera) {
+            mCamera.setPreviewCallback(null);
+            mCamera.stopPreview();
+            isPreviewing = false;
+            mPreviwRate = -1f;
+            mCamera.release();
+            mCamera = null;
+        }
+    }
+
+    /**
+     * 拍照
+     */
+    public void doTakePicture() {
+        if (isPreviewing && (mCamera != null)) {
+            mCamera.takePicture(null, null, mJpegPictureCallback);
+        }
+    }
+
+    /*为了实现拍照的快门声音及拍照保存照片需要下面三个回调变量*/
+    ShutterCallback mShutterCallback = new ShutterCallback()
+            //快门按下的回调，在这里我们可以设置类似播放“咔嚓”声之类的操作。默认的就是咔嚓。
+    {
+        public void onShutter() {
+            // TODO Auto-generated method stub
+            Log.i(TAG, "myShutterCallback:onShutter...");
+        }
+    };
+    PictureCallback mRawCallback = new PictureCallback()
+            // 拍摄的未压缩原数据的回调,可以为null
+    {
+
+        public void onPictureTaken(byte[] data, Camera camera) {
+            // TODO Auto-generated method stub
+            Log.i(TAG, "myRawCallback:onPictureTaken...");
+
+        }
+    };
+    PictureCallback mJpegPictureCallback = new PictureCallback()
+            //对jpeg图像数据的回调,最重要的一个回调
+    {
+        public void onPictureTaken(byte[] data, Camera camera) {
+            // TODO Auto-generated method stub
+            Log.i(TAG, "myJpegCallback:onPictureTaken...");
+            Bitmap b = null;
+            if (null != data) {
+                b = BitmapFactory.decodeByteArray(data, 0, data.length);//data是字节数据，将其解析成位图
+                mCamera.stopPreview();
+                isPreviewing = false;
+            }
+            //保存图片到sdcard
+            if (null != b) {
+                //设置FOCUS_MODE_CONTINUOUS_VIDEO)之后，myParam.set("rotation", 90)失效。
+                //图片竟然不能旋转了，故这里要旋转下
+                Bitmap rotaBitmap = ImageUtil.getRotateBitmap(b, 90.0f);
+                FileUtil.saveBitmap(rotaBitmap);
+            }
+            //再次进入预览
+            mCamera.startPreview();
+            isPreviewing = true;
+        }
+    };
+
+
+}
+
diff --git a/game2048/src/main/java/com/guang/sun/game/camera/preview/CameraSurfaceView.java b/game2048/src/main/java/com/guang/sun/game/camera/preview/CameraSurfaceView.java
new file mode 100644
index 00000000..ecf6f662
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/camera/preview/CameraSurfaceView.java
@@ -0,0 +1,51 @@
+package com.guang.sun.game.camera.preview;
+
+import android.content.Context;
+import android.graphics.PixelFormat;
+import android.util.AttributeSet;
+import android.util.Log;
+import android.view.SurfaceHolder;
+import android.view.SurfaceView;
+
+import com.guang.sun.game.camera.CameraInterface;
+
+
+public class CameraSurfaceView extends SurfaceView implements SurfaceHolder.Callback {
+	private static final String TAG = "yanzi";
+	CameraInterface mCameraInterface;
+	Context mContext;
+	SurfaceHolder mSurfaceHolder;
+	public CameraSurfaceView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+		// TODO Auto-generated constructor stub
+		mContext = context;
+		mSurfaceHolder = getHolder();
+		mSurfaceHolder.setFormat(PixelFormat.TRANSPARENT);//translucent��͸�� transparent͸��
+		mSurfaceHolder.setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
+		mSurfaceHolder.addCallback(this);
+	}
+
+	@Override
+	public void surfaceCreated(SurfaceHolder holder) {
+		// TODO Auto-generated method stub
+		Log.i(TAG, "surfaceCreated...");
+	}
+
+	@Override
+	public void surfaceChanged(SurfaceHolder holder, int format, int width,
+			int height) {
+		// TODO Auto-generated method stub
+		Log.i(TAG, "surfaceChanged...");
+	}
+
+	@Override
+	public void surfaceDestroyed(SurfaceHolder holder) {
+		// TODO Auto-generated method stub
+		Log.i(TAG, "surfaceDestroyed...");
+		CameraInterface.getInstance().doStopCamera();
+	}
+	public SurfaceHolder getSurfaceHolder(){
+		return mSurfaceHolder;
+	}
+	
+}
diff --git a/game2048/src/main/java/com/guang/sun/game/camera/util/CamParaUtil.java b/game2048/src/main/java/com/guang/sun/game/camera/util/CamParaUtil.java
new file mode 100644
index 00000000..f9c4752e
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/camera/util/CamParaUtil.java
@@ -0,0 +1,125 @@
+package com.guang.sun.game.camera.util;
+
+import android.hardware.Camera;
+import android.hardware.Camera.Size;
+import android.util.Log;
+
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.List;
+
+public class CamParaUtil {
+    private static final String TAG = "yanzi";
+    private CameraSizeComparator sizeComparator = new CameraSizeComparator();
+    private static CamParaUtil myCamPara = null;
+
+    private CamParaUtil() {
+
+    }
+
+    public static CamParaUtil getInstance() {
+        if (myCamPara == null) {
+            myCamPara = new CamParaUtil();
+            return myCamPara;
+        } else {
+            return myCamPara;
+        }
+    }
+
+    public Size getPropPreviewSize(List<Camera.Size> list, float th, int minWidth) {
+        Collections.sort(list, sizeComparator);
+
+        int i = 0;
+        for (Size s : list) {
+            if ((s.width >= minWidth) && equalRate(s, th)) {
+                Log.i(TAG, "PreviewSize:w = " + s.width + "h = " + s.height);
+                break;
+            }
+            i++;
+        }
+        if (i == list.size()) {
+            i = 0;//如果没找到，就选最小的size
+        }
+        return list.get(0);
+    }
+
+    public Size getPropPictureSize(List<Camera.Size> list, float th, int minWidth) {
+        Collections.sort(list, sizeComparator);
+
+        int i = 0;
+        for (Size s : list) {
+            if ((s.width >= minWidth) && equalRate(s, th)) {
+                Log.i(TAG, "PictureSize : w = " + s.width + "h = " + s.height);
+                break;
+            }
+            i++;
+        }
+        if (i == list.size()) {
+            i = 0;//如果没找到，就选最小的size
+        }
+        return list.get(list.size()-2);
+    }
+
+    public boolean equalRate(Size s, float rate) {
+        float r = (float) (s.width) / (float) (s.height);
+        if (Math.abs(r - rate) <= 0.03) {
+            return true;
+        } else {
+            return false;
+        }
+    }
+
+    public class CameraSizeComparator implements Comparator<Camera.Size> {
+        public int compare(Size lhs, Size rhs) {
+            // TODO Auto-generated method stub
+            if (lhs.width == rhs.width) {
+                return 0;
+            } else if (lhs.width > rhs.width) {
+                return 1;
+            } else {
+                return -1;
+            }
+        }
+
+    }
+
+    /**
+     * 打印支持的previewSizes
+     *
+     * @param params
+     */
+    public void printSupportPreviewSize(Camera.Parameters params) {
+        List<Size> previewSizes = params.getSupportedPreviewSizes();
+        for (int i = 0; i < previewSizes.size(); i++) {
+            Size size = previewSizes.get(i);
+            Log.i(TAG, "previewSizes:width = " + size.width + " height = " + size.height);
+        }
+
+    }
+
+    /**
+     * 打印支持的pictureSizes
+     *
+     * @param params
+     */
+    public void printSupportPictureSize(Camera.Parameters params) {
+        List<Size> pictureSizes = params.getSupportedPictureSizes();
+        for (int i = 0; i < pictureSizes.size(); i++) {
+            Size size = pictureSizes.get(i);
+            Log.i(TAG, "pictureSizes:width = " + size.width
+                    + " height = " + size.height);
+        }
+    }
+
+    /**
+     * 打印支持的聚焦模式
+     *
+     * @param params
+     */
+    public void printSupportFocusMode(Camera.Parameters params) {
+        List<String> focusModes = params.getSupportedFocusModes();
+        for (String mode : focusModes) {
+            Log.i(TAG, "focusModes--" + mode);
+        }
+    }
+}
diff --git a/game2048/src/main/java/com/guang/sun/game/camera/util/DisplayUtil.java b/game2048/src/main/java/com/guang/sun/game/camera/util/DisplayUtil.java
new file mode 100644
index 00000000..380a9fec
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/camera/util/DisplayUtil.java
@@ -0,0 +1,57 @@
+package com.guang.sun.game.camera.util;
+
+		import android.content.Context;
+		import android.graphics.Point;
+		import android.util.DisplayMetrics;
+		import android.util.Log;
+
+public class DisplayUtil {
+	private static final String TAG = "DisplayUtil";
+	/**
+	 * dip转px
+	 * @param context
+	 * @param dipValue
+	 * @return
+	 */
+	public static int dip2px(Context context, float dipValue){
+		final float scale = context.getResources().getDisplayMetrics().density;
+		return (int)(dipValue * scale + 0.5f);
+	}
+
+	/**
+	 * px转dip
+	 * @param context
+	 * @param pxValue
+	 * @return
+	 */
+	public static int px2dip(Context context, float pxValue){
+		final float scale = context.getResources().getDisplayMetrics().density;
+		return (int)(pxValue / scale + 0.5f);
+	}
+
+	/**
+	 * 获取屏幕宽度和高度，单位为px
+	 * @param context
+	 * @return
+	 */
+	public static Point getScreenMetrics(Context context){
+		DisplayMetrics dm =context.getResources().getDisplayMetrics();
+		int w_screen = dm.widthPixels;
+		int h_screen = dm.heightPixels;
+		Log.i(TAG, "Screen---Width = " + w_screen + " Height = " + h_screen + " densityDpi = " + dm.densityDpi);
+		return new Point(w_screen, h_screen);
+
+	}
+
+	/**
+	 * 获取屏幕长宽比
+	 * @param context
+	 * @return
+	 */
+	public static float getScreenRate(Context context){
+		Point P = getScreenMetrics(context);
+		float H = P.y;
+		float W = P.x;
+		return (H/W);
+	}
+}
diff --git a/game2048/src/main/java/com/guang/sun/game/camera/util/FileUtil.java b/game2048/src/main/java/com/guang/sun/game/camera/util/FileUtil.java
new file mode 100644
index 00000000..058a7646
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/camera/util/FileUtil.java
@@ -0,0 +1,61 @@
+package com.guang.sun.game.camera.util;
+
+import android.graphics.Bitmap;
+import android.os.Environment;
+import android.util.Log;
+
+import java.io.BufferedOutputStream;
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+
+public class FileUtil {
+    private static final String TAG = "FileUtil";
+    private static final File parentPath = Environment.getExternalStorageDirectory();
+    private static String storagePath = "";
+    private static final String DST_FOLDER_NAME = "Application";
+
+    /**
+     * 初始化保存路径
+     *
+     * @return
+     */
+    private static String initPath() {
+        if (storagePath.equals("")) {
+            storagePath = parentPath.getAbsolutePath() + "/" + DST_FOLDER_NAME;
+            File f = new File(storagePath);
+            if (!f.exists()) {
+                f.mkdir();
+            }
+        }
+        return storagePath;
+    }
+
+    /**
+     * 保存Bitmap到sdcard
+     *
+     * @param b
+     */
+    public static void saveBitmap(Bitmap b) {
+
+        String path = initPath();
+        long dataTake = System.currentTimeMillis();
+        String jpegName = path + "/" + dataTake + ".jpg";
+        Log.i(TAG, "saveBitmap:jpegName = " + jpegName);
+        try {
+            FileOutputStream fout = new FileOutputStream(jpegName);
+            BufferedOutputStream bos = new BufferedOutputStream(fout);
+            b.compress(Bitmap.CompressFormat.JPEG, 100, bos);
+            bos.flush();
+            bos.close();
+            Log.i(TAG, "saveBitmap成功");
+        } catch (IOException e) {
+            // TODO Auto-generated catch block
+            Log.i(TAG, "saveBitmap:失败");
+            e.printStackTrace();
+        }
+
+    }
+
+
+}
diff --git a/game2048/src/main/java/com/guang/sun/game/camera/util/ImageUtil.java b/game2048/src/main/java/com/guang/sun/game/camera/util/ImageUtil.java
new file mode 100644
index 00000000..93885cc0
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/camera/util/ImageUtil.java
@@ -0,0 +1,19 @@
+package com.guang.sun.game.camera.util;
+
+import android.graphics.Bitmap;
+import android.graphics.Matrix;
+
+public class ImageUtil {
+	/**
+	 * ��תBitmap
+	 * @param b
+	 * @param rotateDegree
+	 * @return
+	 */
+	public static Bitmap getRotateBitmap(Bitmap b, float rotateDegree){
+		Matrix matrix = new Matrix();
+		matrix.postRotate((float)rotateDegree);
+		Bitmap rotaBitmap = Bitmap.createBitmap(b, 0, 0, b.getWidth(), b.getHeight(), matrix, false);
+		return rotaBitmap;
+	}
+}
diff --git a/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/FloatWindowBigView.java b/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/FloatWindowBigView.java
new file mode 100644
index 00000000..c3f81d99
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/FloatWindowBigView.java
@@ -0,0 +1,63 @@
+package com.guang.sun.game.floatwindowdemo;
+
+import android.content.Context;
+import android.content.Intent;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.Button;
+import android.widget.LinearLayout;
+
+import com.android.game2048.R;
+
+public class FloatWindowBigView extends LinearLayout {
+
+    /**
+     * 记录大悬浮窗的宽度
+     */
+    public static int viewWidth;
+
+    /**
+     * 记录大悬浮窗的高度
+     */
+    public static int viewHeight;
+
+    public FloatWindowBigView(final Context context) {
+        super(context);
+        LayoutInflater.from(context).inflate(R.layout.float_window_big, this);
+        View view = findViewById(R.id.big_window_layout);
+        viewWidth = view.getLayoutParams().width;
+        viewHeight = view.getLayoutParams().height;
+        Button close = (Button) findViewById(R.id.close);
+        Button back = (Button) findViewById(R.id.back);
+        Button btn_back = (Button) findViewById(R.id.btn_back);
+        btn_back.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+            }
+        });
+        close.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                // 点击关闭悬浮窗的时候，移除所有悬浮窗，并停止Service
+//				MyWindowManager.removeBigWindow(context);
+//				MyWindowManager.removeSmallWindow(context);
+//				Intent intent = new Intent(getContext(), FloatWindowService.class);
+//				context.stopService(intent);
+
+                Intent intent = new Intent(Intent.ACTION_MAIN);
+                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+                intent.addCategory(Intent.CATEGORY_HOME);
+                context.startActivity(intent);
+            }
+        });
+        back.setOnClickListener(new OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                // 点击返回的时候，移除大悬浮窗，创建小悬浮窗
+                MyWindowManager.removeBigWindow(context);
+                MyWindowManager.createSmallWindow(context);
+            }
+        });
+    }
+}
diff --git a/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/FloatWindowService.java b/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/FloatWindowService.java
new file mode 100644
index 00000000..81d24169
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/FloatWindowService.java
@@ -0,0 +1,115 @@
+package com.guang.sun.game.floatwindowdemo;
+
+import android.app.ActivityManager;
+import android.app.ActivityManager.RunningTaskInfo;
+import android.app.Service;
+import android.content.Context;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.content.pm.ResolveInfo;
+import android.os.Handler;
+import android.os.IBinder;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Timer;
+import java.util.TimerTask;
+
+public class FloatWindowService extends Service {
+
+	/**
+	 * 用于在线程中创建或移除悬浮窗。
+	 */
+	private Handler handler = new Handler();
+
+	/**
+	 * 定时器，定时进行检测当前应该创建还是移除悬浮窗。
+	 */
+	private Timer timer;
+
+	@Override
+	public IBinder onBind(Intent intent) {
+		return null;
+	}
+
+	@Override
+	public int onStartCommand(Intent intent, int flags, int startId) {
+		// 开启定时器，每隔0.5秒刷新一次
+		if (timer == null) {
+			timer = new Timer();
+			timer.scheduleAtFixedRate(new RefreshTask(), 0, 500);
+		}
+		return super.onStartCommand(intent, flags, startId);
+	}
+
+	@Override
+	public void onDestroy() {
+		super.onDestroy();
+		// Service被终止的同时也停止定时器继续运行
+		timer.cancel();
+		timer = null;
+	}
+
+	class RefreshTask extends TimerTask {
+
+		@Override
+		public void run() {
+			// 当前界面是桌面，且没有悬浮窗显示，则创建悬浮窗。
+			if (isHome() && !MyWindowManager.isWindowShowing()) {
+				handler.post(new Runnable() {
+					@Override
+					public void run() {
+						MyWindowManager.createSmallWindow(getApplicationContext());
+					}
+				});
+			}
+			// 当前界面不是桌面，且有悬浮窗显示，则移除悬浮窗。
+			else if (!isHome() && MyWindowManager.isWindowShowing()) {
+				handler.post(new Runnable() {
+					@Override
+					public void run() {
+						MyWindowManager.removeSmallWindow(getApplicationContext());
+						MyWindowManager.removeBigWindow(getApplicationContext());
+					}
+				});
+			}
+			// 当前界面是桌面，且有悬浮窗显示，则更新内存数据。
+			else if (isHome() && MyWindowManager.isWindowShowing()) {
+				handler.post(new Runnable() {
+					@Override
+					public void run() {
+						MyWindowManager.updateUsedPercent(getApplicationContext());
+					}
+				});
+			}
+		}
+
+	}
+
+	/**
+	 * 判断当前界面是否是桌面
+	 */
+	private boolean isHome() {
+		ActivityManager mActivityManager = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
+		List<RunningTaskInfo> rti = mActivityManager.getRunningTasks(1);
+		return getHomes().contains(rti.get(0).topActivity.getPackageName());
+	}
+
+	/**
+	 * 获得属于桌面的应用的应用包名称
+	 * 
+	 * @return 返回包含所有包名的字符串列表
+	 */
+	private List<String> getHomes() {
+		List<String> names = new ArrayList<String>();
+		PackageManager packageManager = this.getPackageManager();
+		Intent intent = new Intent(Intent.ACTION_MAIN);
+		intent.addCategory(Intent.CATEGORY_HOME);
+		List<ResolveInfo> resolveInfo = packageManager.queryIntentActivities(intent,
+				PackageManager.MATCH_DEFAULT_ONLY);
+		for (ResolveInfo ri : resolveInfo) {
+			names.add(ri.activityInfo.packageName);
+		}
+		return names;
+	}
+}
diff --git a/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/FloatWindowSmallView.java b/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/FloatWindowSmallView.java
new file mode 100644
index 00000000..4c9f4286
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/FloatWindowSmallView.java
@@ -0,0 +1,173 @@
+package com.guang.sun.game.floatwindowdemo;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.WindowManager;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import com.android.game2048.R;
+
+import java.lang.reflect.Field;
+
+public class FloatWindowSmallView extends LinearLayout {
+
+    /**
+     * 记录小悬浮窗的宽度
+     */
+    public static int viewWidth;
+
+    /**
+     * 记录小悬浮窗的高度
+     */
+    public static int viewHeight;
+
+    /**
+     * 记录系统状态栏的高度
+     */
+    private static int statusBarHeight;
+
+    /**
+     * 用于更新小悬浮窗的位置
+     */
+    private WindowManager windowManager;
+
+    /**
+     * 小悬浮窗的参数
+     */
+    private WindowManager.LayoutParams mParams;
+
+    /**
+     * 记录当前手指位置在屏幕上的横坐标值
+     */
+    private float xInScreen;
+
+    /**
+     * 记录当前手指位置在屏幕上的纵坐标值
+     */
+    private float yInScreen;
+
+    /**
+     * 记录手指按下时在屏幕上的横坐标的值
+     */
+    private float xDownInScreen;
+
+    /**
+     * 记录手指按下时在屏幕上的纵坐标的值
+     */
+    private float yDownInScreen;
+
+    /**
+     * 记录手指按下时在小悬浮窗的View上的横坐标的值
+     */
+    private float xInView;
+
+    /**
+     * 记录手指按下时在小悬浮窗的View上的纵坐标的值
+     */
+    private float yInView;
+    private Context mContext;
+
+    public FloatWindowSmallView(Context context) {
+        super(context);
+        mContext = context;
+        windowManager = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);
+        LayoutInflater.from(context).inflate(R.layout.float_window_small, this);
+        View view = findViewById(R.id.small_window_layout);
+        viewWidth = view.getLayoutParams().width;
+        viewHeight = view.getLayoutParams().height;
+        TextView percentView = (TextView) findViewById(R.id.percent);
+        MyProgressbar pb = (MyProgressbar) findViewById(R.id.pb);
+
+        percentView.setText(MyWindowManager.getUsedPercentValue(context));
+        pb.setProgress(Integer.parseInt(MyWindowManager.getUsedPercentValue(context).split("%")[0]));
+    }
+
+//    @Override
+//    public void setOnLongClickListener(OnLongClickListener l) {
+//        super.setOnLongClickListener(l);
+//        Toast.makeText(getContext(), "长按", Toast.LENGTH_SHORT).show();
+//
+//    }
+
+    @Override
+    public boolean onTouchEvent(MotionEvent event) {
+        switch (event.getAction()) {
+            case MotionEvent.ACTION_DOWN:
+                // 手指按下时记录必要数据,纵坐标的值都需要减去状态栏高度
+                xInView = event.getX();
+                yInView = event.getY();
+                xDownInScreen = event.getRawX();
+                yDownInScreen = event.getRawY() - getStatusBarHeight();
+                xInScreen = event.getRawX();
+                yInScreen = event.getRawY() - getStatusBarHeight();
+                break;
+            case MotionEvent.ACTION_MOVE:
+                xInScreen = event.getRawX();
+                yInScreen = event.getRawY() - getStatusBarHeight();
+                // 手指移动的时候更新小悬浮窗的位置
+                updateViewPosition();
+                break;
+            case MotionEvent.ACTION_UP:
+                // 如果手指离开屏幕时，xDownInScreen和xInScreen相等，且yDownInScreen和yInScreen相等，则视为触发了单击事件。
+                if (xDownInScreen == xInScreen && yDownInScreen == yInScreen) {
+                    openBigWindow();
+
+                }
+                break;
+            default:
+                break;
+        }
+//      return   super.onTouchEvent(event);
+        return true;
+    }
+
+    /**
+     * 将小悬浮窗的参数传入，用于更新小悬浮窗的位置。
+     *
+     * @param params 小悬浮窗的参数
+     */
+    public void setParams(WindowManager.LayoutParams params) {
+        mParams = params;
+    }
+
+    /**
+     * 更新小悬浮窗在屏幕中的位置。
+     */
+    private void updateViewPosition() {
+        mParams.x = (int) (xInScreen - xInView);
+        mParams.y = (int) (yInScreen - yInView);
+        windowManager.updateViewLayout(this, mParams);
+    }
+
+    /**
+     * 打开大悬浮窗，同时关闭小悬浮窗。
+     */
+    private void openBigWindow() {
+        MyWindowManager.createBigWindow(getContext());
+        MyWindowManager.removeSmallWindow(getContext());
+    }
+
+    /**
+     * 用于获取状态栏的高度。
+     *
+     * @return 返回状态栏高度的像素值。
+     */
+    private int getStatusBarHeight() {
+        if (statusBarHeight == 0) {
+            try {
+                Class<?> c = Class.forName("com.android.internal.R$dimen");
+                Object o = c.newInstance();
+                Field field = c.getField("status_bar_height");
+                int x = (Integer) field.get(o);
+                statusBarHeight = getResources().getDimensionPixelSize(x);
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+        }
+        return statusBarHeight;
+    }
+
+}
diff --git a/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/MainActivity.java b/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/MainActivity.java
new file mode 100644
index 00000000..18025563
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/MainActivity.java
@@ -0,0 +1,27 @@
+package com.guang.sun.game.floatwindowdemo;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.os.Bundle;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Button;
+
+import com.android.game2048.R;
+
+public class MainActivity extends Activity {
+	@Override
+	protected void onCreate(Bundle savedInstanceState) {
+		super.onCreate(savedInstanceState);
+		setContentView(R.layout.activity_main);
+		Button startFloatWindow = (Button) findViewById(R.id.start_float_window);
+		startFloatWindow.setOnClickListener(new OnClickListener() {
+			@Override
+			public void onClick(View arg0) {
+				Intent intent = new Intent(MainActivity.this, FloatWindowService.class);
+				startService(intent);
+				finish();
+			}
+		});
+	}
+}
diff --git a/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/MyProgressbar.java b/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/MyProgressbar.java
new file mode 100644
index 00000000..bbebd45f
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/MyProgressbar.java
@@ -0,0 +1,50 @@
+package com.guang.sun.game.floatwindowdemo;
+
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.util.AttributeSet;
+import android.widget.ProgressBar;
+
+/**
+ * &nbsp;*&nbsp;
+ * &nbsp;* @author http://blog.csdn.net/lovehong0306/article/details/7803702
+ * &nbsp;*
+ * &nbsp;
+ */
+public class MyProgressbar extends ProgressBar {
+
+    public MyProgressbar(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+        // TODO Auto-generated constructor stub
+    }
+
+    public MyProgressbar(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        // TODO Auto-generated constructor stub
+    }
+
+    public MyProgressbar(Context context) {
+        super(context);
+        // TODO Auto-generated constructor stub
+    }
+
+    @Override
+    protected synchronized void onDraw(Canvas canvas) {
+        // TODO Auto-generated method stub
+        canvas.rotate(-90);//反转90度，将水平ProgressBar竖起来
+        canvas.translate(-getHeight(), 0);//将经过旋转后得到的VerticalProgressBar移到正确的位置,注意经旋转<span style="white-space:pre">						</span>    后宽高值互换
+        super.onDraw(canvas);
+    }
+
+    @Override
+    protected synchronized void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        super.onMeasure(heightMeasureSpec, widthMeasureSpec);
+        setMeasuredDimension(getMeasuredHeight(), getMeasuredWidth());//互换宽高值
+    }
+
+    @Override
+    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
+        super.onSizeChanged(h, w, oldw, oldh);//互换宽高值
+    }
+}
diff --git a/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/MyWindowManager.java b/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/MyWindowManager.java
new file mode 100644
index 00000000..4f917447
--- /dev/null
+++ b/game2048/src/main/java/com/guang/sun/game/floatwindowdemo/MyWindowManager.java
@@ -0,0 +1,220 @@
+package com.guang.sun.game.floatwindowdemo;
+
+import android.app.ActivityManager;
+import android.content.Context;
+import android.graphics.PixelFormat;
+import android.view.Gravity;
+import android.view.WindowManager;
+import android.view.WindowManager.LayoutParams;
+import android.widget.TextView;
+
+import com.android.game2048.R;
+
+import java.io.BufferedReader;
+import java.io.FileReader;
+import java.io.IOException;
+
+public class MyWindowManager {
+
+	/**
+	 * 小悬浮窗View的实例
+	 */
+	private static FloatWindowSmallView smallWindow;
+
+	/**
+	 * 大悬浮窗View的实例
+	 */
+	private static FloatWindowBigView bigWindow;
+
+	/**
+	 * 小悬浮窗View的参数
+	 */
+	private static LayoutParams smallWindowParams;
+
+	/**
+	 * 大悬浮窗View的参数
+	 */
+	private static LayoutParams bigWindowParams;
+
+	/**
+	 * 用于控制在屏幕上添加或移除悬浮窗
+	 */
+	private static WindowManager mWindowManager;
+
+	/**
+	 * 用于获取手机可用内存
+	 */
+	private static ActivityManager mActivityManager;
+
+	/**
+	 * 创建一个小悬浮窗。初始位置为屏幕的右部中间位置。
+	 * 
+	 * @param context
+	 *            必须为应用程序的Context.
+	 */
+	public static void createSmallWindow(Context context) {
+		WindowManager windowManager = getWindowManager(context);
+		int screenWidth = windowManager.getDefaultDisplay().getWidth();
+		int screenHeight = windowManager.getDefaultDisplay().getHeight();
+		if (smallWindow == null) {
+			smallWindow = new FloatWindowSmallView(context);
+			if (smallWindowParams == null) {
+				smallWindowParams = new LayoutParams();
+				smallWindowParams.type = LayoutParams.TYPE_PHONE;
+				smallWindowParams.format = PixelFormat.RGBA_8888;
+				smallWindowParams.flags = LayoutParams.FLAG_NOT_TOUCH_MODAL
+						| LayoutParams.FLAG_NOT_FOCUSABLE;
+				smallWindowParams.gravity = Gravity.LEFT | Gravity.TOP;
+				smallWindowParams.width = FloatWindowSmallView.viewWidth;
+				smallWindowParams.height = FloatWindowSmallView.viewHeight;
+				smallWindowParams.x = screenWidth;
+				smallWindowParams.y = screenHeight / 2;
+			}
+			smallWindow.setParams(smallWindowParams);
+			windowManager.addView(smallWindow, smallWindowParams);
+		}
+	}
+
+	/**
+	 * 将小悬浮窗从屏幕上移除。
+	 * 
+	 * @param context
+	 *            必须为应用程序的Context.
+	 */
+	public static void removeSmallWindow(Context context) {
+		if (smallWindow != null) {
+			WindowManager windowManager = getWindowManager(context);
+			windowManager.removeView(smallWindow);
+			smallWindow = null;
+		}
+	}
+
+	/**
+	 * 创建一个大悬浮窗。位置为屏幕正中间。
+	 * 
+	 * @param context
+	 *            必须为应用程序的Context.
+	 */
+	public static void createBigWindow(Context context) {
+		WindowManager windowManager = getWindowManager(context);
+		int screenWidth = windowManager.getDefaultDisplay().getWidth();
+		int screenHeight = windowManager.getDefaultDisplay().getHeight();
+		if (bigWindow == null) {
+			bigWindow = new FloatWindowBigView(context);
+			if (bigWindowParams == null) {
+				bigWindowParams = new LayoutParams();
+				bigWindowParams.x = screenWidth / 2 - FloatWindowBigView.viewWidth / 2;
+				bigWindowParams.y = screenHeight / 2 - FloatWindowBigView.viewHeight / 2;
+				bigWindowParams.type = LayoutParams.TYPE_PHONE;
+				bigWindowParams.format = PixelFormat.RGBA_8888;
+				bigWindowParams.gravity = Gravity.LEFT | Gravity.TOP;
+				bigWindowParams.width = FloatWindowBigView.viewWidth;
+				bigWindowParams.height = FloatWindowBigView.viewHeight;
+			}
+			windowManager.addView(bigWindow, bigWindowParams);
+		}
+	}
+
+	/**
+	 * 将大悬浮窗从屏幕上移除。
+	 * 
+	 * @param context
+	 *            必须为应用程序的Context.
+	 */
+	public static void removeBigWindow(Context context) {
+		if (bigWindow != null) {
+			WindowManager windowManager = getWindowManager(context);
+			windowManager.removeView(bigWindow);
+			bigWindow = null;
+		}
+	}
+
+	/**
+	 * 更新小悬浮窗的TextView上的数据，显示内存使用的百分比。
+	 * 
+	 * @param context
+	 *            可传入应用程序上下文。
+	 */
+	public static void updateUsedPercent(Context context) {
+		if (smallWindow != null) {
+			TextView percentView = (TextView) smallWindow.findViewById(R.id.percent);
+			percentView.setText(getUsedPercentValue(context));
+		}
+	}
+
+	/**
+	 * 是否有悬浮窗(包括小悬浮窗和大悬浮窗)显示在屏幕上。
+	 * 
+	 * @return 有悬浮窗显示在桌面上返回true，没有的话返回false。
+	 */
+	public static boolean isWindowShowing() {
+		return smallWindow != null || bigWindow != null;
+	}
+
+	/**
+	 * 如果WindowManager还未创建，则创建一个新的WindowManager返回。否则返回当前已创建的WindowManager。
+	 * 
+	 * @param context
+	 *            必须为应用程序的Context.
+	 * @return WindowManager的实例，用于控制在屏幕上添加或移除悬浮窗。
+	 */
+	private static WindowManager getWindowManager(Context context) {
+		if (mWindowManager == null) {
+			mWindowManager = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);
+		}
+		return mWindowManager;
+	}
+
+	/**
+	 * 如果ActivityManager还未创建，则创建一个新的ActivityManager返回。否则返回当前已创建的ActivityManager。
+	 * 
+	 * @param context
+	 *            可传入应用程序上下文。
+	 * @return ActivityManager的实例，用于获取手机可用内存。
+	 */
+	private static ActivityManager getActivityManager(Context context) {
+		if (mActivityManager == null) {
+			mActivityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
+		}
+		return mActivityManager;
+	}
+
+	/**
+	 * 计算已使用内存的百分比，并返回。
+	 * 
+	 * @param context
+	 *            可传入应用程序上下文。
+	 * @return 已使用内存的百分比，以字符串形式返回。
+	 */
+	public static String getUsedPercentValue(Context context) {
+		String dir = "/proc/meminfo";
+		try {
+			FileReader fr = new FileReader(dir);
+			BufferedReader br = new BufferedReader(fr, 2048);
+			String memoryLine = br.readLine();
+			String subMemoryLine = memoryLine.substring(memoryLine.indexOf("MemTotal:"));
+			br.close();
+			long totalMemorySize = Integer.parseInt(subMemoryLine.replaceAll("\\D+", ""));
+			long availableSize = getAvailableMemory(context) / 1024;
+			int percent = (int) ((totalMemorySize - availableSize) / (float) totalMemorySize * 100);
+			return percent + "%";
+		} catch (IOException e) {
+			e.printStackTrace();
+		}
+		return "悬浮窗";
+	}
+
+	/**
+	 * 获取当前可用内存，返回数据以字节为单位。
+	 * 
+	 * @param context
+	 *            可传入应用程序上下文。
+	 * @return 当前可用内存。
+	 */
+	private static long getAvailableMemory(Context context) {
+		ActivityManager.MemoryInfo mi = new ActivityManager.MemoryInfo();
+		getActivityManager(context).getMemoryInfo(mi);
+		return mi.availMem;
+	}
+
+}
diff --git a/game2048/src/main/res/anim/anim_fade_in.xml b/game2048/src/main/res/anim/anim_fade_in.xml
new file mode 100644
index 00000000..e886af1a
--- /dev/null
+++ b/game2048/src/main/res/anim/anim_fade_in.xml
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+
+<alpha xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="@android:integer/config_shortAnimTime"
+    android:fromAlpha="0.0"
+    android:interpolator="@android:integer/config_shortAnimTime"
+    android:toAlpha="1.0" />
+
diff --git a/game2048/src/main/res/drawable-hdpi/bg_big.png b/game2048/src/main/res/drawable-hdpi/bg_big.png
new file mode 100644
index 00000000..25e30f30
Binary files /dev/null and b/game2048/src/main/res/drawable-hdpi/bg_big.png differ
diff --git a/game2048/src/main/res/drawable-hdpi/bg_small.png b/game2048/src/main/res/drawable-hdpi/bg_small.png
new file mode 100644
index 00000000..2f1ad63f
Binary files /dev/null and b/game2048/src/main/res/drawable-hdpi/bg_small.png differ
diff --git a/game2048/src/main/res/drawable-hdpi/btn_home_normal.png b/game2048/src/main/res/drawable-hdpi/btn_home_normal.png
new file mode 100644
index 00000000..c70f2420
Binary files /dev/null and b/game2048/src/main/res/drawable-hdpi/btn_home_normal.png differ
diff --git a/game2048/src/main/res/drawable-hdpi/btn_home_pre.png b/game2048/src/main/res/drawable-hdpi/btn_home_pre.png
new file mode 100644
index 00000000..eed75001
Binary files /dev/null and b/game2048/src/main/res/drawable-hdpi/btn_home_pre.png differ
diff --git a/game2048/src/main/res/drawable-hdpi/ic_launcher.png b/game2048/src/main/res/drawable-hdpi/ic_launcher.png
new file mode 100644
index 00000000..a442e5f3
Binary files /dev/null and b/game2048/src/main/res/drawable-hdpi/ic_launcher.png differ
diff --git a/game2048/src/main/res/drawable-mdpi/ic_launcher.png b/game2048/src/main/res/drawable-mdpi/ic_launcher.png
new file mode 100644
index 00000000..a442e5f3
Binary files /dev/null and b/game2048/src/main/res/drawable-mdpi/ic_launcher.png differ
diff --git a/game2048/src/main/res/drawable-xhdpi/ic_launcher.png b/game2048/src/main/res/drawable-xhdpi/ic_launcher.png
new file mode 100644
index 00000000..a442e5f3
Binary files /dev/null and b/game2048/src/main/res/drawable-xhdpi/ic_launcher.png differ
diff --git a/game2048/src/main/res/drawable-xxhdpi/ic_launcher.png b/game2048/src/main/res/drawable-xxhdpi/ic_launcher.png
new file mode 100644
index 00000000..a442e5f3
Binary files /dev/null and b/game2048/src/main/res/drawable-xxhdpi/ic_launcher.png differ
diff --git a/game2048/src/main/res/drawable/bg_1024.xml b/game2048/src/main/res/drawable/bg_1024.xml
new file mode 100644
index 00000000..3b358e4f
--- /dev/null
+++ b/game2048/src/main/res/drawable/bg_1024.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="#ffedc53f" />
+    <corners android:radius="5dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="#ffedc53f" />
+</shape>
diff --git a/game2048/src/main/res/drawable/bg_128.xml b/game2048/src/main/res/drawable/bg_128.xml
new file mode 100644
index 00000000..5458a3a2
--- /dev/null
+++ b/game2048/src/main/res/drawable/bg_128.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="#ffedcf72" />
+    <corners android:radius="5dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="#ffedcf72" />
+</shape>
diff --git a/game2048/src/main/res/drawable/bg_16.xml b/game2048/src/main/res/drawable/bg_16.xml
new file mode 100644
index 00000000..1ee79765
--- /dev/null
+++ b/game2048/src/main/res/drawable/bg_16.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="#fff59563" />
+    <corners android:radius="5dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="#fff59563" />
+</shape>
diff --git a/game2048/src/main/res/drawable/bg_2.xml b/game2048/src/main/res/drawable/bg_2.xml
new file mode 100644
index 00000000..d0f5b7fb
--- /dev/null
+++ b/game2048/src/main/res/drawable/bg_2.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="#ffeee4da" />
+    <corners android:radius="5dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="#ffeee4da" />
+</shape>
diff --git a/game2048/src/main/res/drawable/bg_2048.xml b/game2048/src/main/res/drawable/bg_2048.xml
new file mode 100644
index 00000000..f4ebac3b
--- /dev/null
+++ b/game2048/src/main/res/drawable/bg_2048.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="#ffedc22e" />
+    <corners android:radius="5dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="#ffedc22e" />
+</shape>
diff --git a/game2048/src/main/res/drawable/bg_256.xml b/game2048/src/main/res/drawable/bg_256.xml
new file mode 100644
index 00000000..66b40b04
--- /dev/null
+++ b/game2048/src/main/res/drawable/bg_256.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="#ffedcc61" />
+    <corners android:radius="5dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="#ffedcc61" />
+</shape>
diff --git a/game2048/src/main/res/drawable/bg_32.xml b/game2048/src/main/res/drawable/bg_32.xml
new file mode 100644
index 00000000..600d6bf1
--- /dev/null
+++ b/game2048/src/main/res/drawable/bg_32.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="#fff67c5f" />
+    <corners android:radius="5dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="#fff67c5f" />
+</shape>
diff --git a/game2048/src/main/res/drawable/bg_4.xml b/game2048/src/main/res/drawable/bg_4.xml
new file mode 100644
index 00000000..9395bdee
--- /dev/null
+++ b/game2048/src/main/res/drawable/bg_4.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="#ffede0c8" />
+    <corners android:radius="5dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="#ffede0c8" />
+</shape>
diff --git a/game2048/src/main/res/drawable/bg_512.xml b/game2048/src/main/res/drawable/bg_512.xml
new file mode 100644
index 00000000..e2686146
--- /dev/null
+++ b/game2048/src/main/res/drawable/bg_512.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="#ffedc850" />
+    <corners android:radius="5dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="#ffedc850" />
+</shape>
diff --git a/game2048/src/main/res/drawable/bg_64.xml b/game2048/src/main/res/drawable/bg_64.xml
new file mode 100644
index 00000000..374bb9e0
--- /dev/null
+++ b/game2048/src/main/res/drawable/bg_64.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="#fff65e3b" />
+    <corners android:radius="5dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="#fff65e3b" />
+</shape>
diff --git a/game2048/src/main/res/drawable/bg_8.xml b/game2048/src/main/res/drawable/bg_8.xml
new file mode 100644
index 00000000..1d4f6461
--- /dev/null
+++ b/game2048/src/main/res/drawable/bg_8.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="#fff2b179" />
+    <corners android:radius="5dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="#fff2b179" />
+</shape>
diff --git a/game2048/src/main/res/drawable/bg_big.xml b/game2048/src/main/res/drawable/bg_big.xml
new file mode 100644
index 00000000..81b4c686
--- /dev/null
+++ b/game2048/src/main/res/drawable/bg_big.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="#ff3c3a32" />
+    <corners android:radius="5dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="#ff3c3a32" />
+</shape>
diff --git a/game2048/src/main/res/drawable/bg_edittext_focused.xml b/game2048/src/main/res/drawable/bg_edittext_focused.xml
new file mode 100644
index 00000000..a3459127
--- /dev/null
+++ b/game2048/src/main/res/drawable/bg_edittext_focused.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="@color/sekuai" />
+    <corners android:radius="5dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="@color/sekuai" />
+</shape>
diff --git a/game2048/src/main/res/drawable/bg_else.xml b/game2048/src/main/res/drawable/bg_else.xml
new file mode 100644
index 00000000..a3459127
--- /dev/null
+++ b/game2048/src/main/res/drawable/bg_else.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="@color/sekuai" />
+    <corners android:radius="5dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="@color/sekuai" />
+</shape>
diff --git a/game2048/src/main/res/drawable/bg_view.xml b/game2048/src/main/res/drawable/bg_view.xml
new file mode 100644
index 00000000..e4c048cd
--- /dev/null
+++ b/game2048/src/main/res/drawable/bg_view.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="@color/border" />
+    <corners android:radius="5dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="@color/border" />
+</shape>
diff --git a/game2048/src/main/res/drawable/border_yuan_blue_view.xml b/game2048/src/main/res/drawable/border_yuan_blue_view.xml
new file mode 100644
index 00000000..be3f541e
--- /dev/null
+++ b/game2048/src/main/res/drawable/border_yuan_blue_view.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <solid android:color="#99000000" />
+    <stroke
+        android:width="0px"
+        android:color="#99000000" />
+    <corners
+
+        android:topLeftRadius="20dp"
+        android:topRightRadius="20dp"
+        android:bottomLeftRadius="20dp"
+        android:bottomRightRadius="20dp"
+        />
+    <padding
+        android:bottom="0dp"
+        android:left="0dp"
+        android:right="0dp"
+        android:top="0dp" />
+
+</shape>
\ No newline at end of file
diff --git a/game2048/src/main/res/drawable/btn_home.xml b/game2048/src/main/res/drawable/btn_home.xml
new file mode 100644
index 00000000..64de1a3c
--- /dev/null
+++ b/game2048/src/main/res/drawable/btn_home.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android" >
+    <item android:drawable="@drawable/btn_home_pre" android:state_pressed="true"/>
+    <item android:drawable="@drawable/btn_home_normal" android:state_focused="false" android:state_pressed="false"/>
+
+</selector>
diff --git a/game2048/src/main/res/drawable/normal_bg.xml b/game2048/src/main/res/drawable/normal_bg.xml
new file mode 100644
index 00000000..6cf3e5f2
--- /dev/null
+++ b/game2048/src/main/res/drawable/normal_bg.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <solid android:color="#FFFFFF" />
+    <corners android:radius="3dip"/>
+    <stroke
+        android:width="1dip"
+        android:color="#728ea3" />
+</shape>
diff --git a/game2048/src/main/res/drawable/progressbar_mini.xml b/game2048/src/main/res/drawable/progressbar_mini.xml
new file mode 100644
index 00000000..ca60d4db
--- /dev/null
+++ b/game2048/src/main/res/drawable/progressbar_mini.xml
@@ -0,0 +1,46 @@
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item android:id="@android:id/background">
+        <shape>
+            <corners android:radius="80dp" />
+            <stroke
+                android:width="2dip"
+                android:color="@color/title_bg_deep" />
+            <gradient
+                android:angle="270"
+                android:centerY="0.75"
+                android:endColor="#D1D1D1"
+                android:startColor="#D1D1D1" />
+        </shape>
+
+    </item>
+    <item android:id="@android:id/secondaryProgress">
+        <clip>
+            <shape>
+                <corners android:radius="80dp" />
+
+                <gradient
+                    android:angle="270"
+                    android:centerY="0.75"
+                    android:endColor="@color/title_bg_deep"
+                    android:startColor="@color/title_bg_deep" />
+            </shape>
+        </clip>
+    </item>
+    <item android:id="@android:id/progress">
+        <clip>
+            <shape>
+                <corners android:radius="80dp" />
+                <stroke
+                    android:width="2dip"
+                    android:color="@color/title_bg_deep" />
+                <gradient
+                    android:angle="270"
+                    android:centerY="0.75"
+                    android:endColor="@color/title_bg_deep"
+                    android:startColor="@color/title_bg_deep" />
+            </shape>
+        </clip>
+    </item>
+
+</layer-list>
\ No newline at end of file
diff --git a/game2048/src/main/res/layout/activity_camera.xml b/game2048/src/main/res/layout/activity_camera.xml
new file mode 100644
index 00000000..0a9ae6e5
--- /dev/null
+++ b/game2048/src/main/res/layout/activity_camera.xml
@@ -0,0 +1,35 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".CameraActivity">
+
+    <FrameLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content">
+
+        <com.guang.sun.game.camera.preview.CameraSurfaceView
+
+            android:id="@+id/camera_surfaceview"
+            android:layout_width="0dip"
+            android:layout_height="0dip" />
+
+
+    </FrameLayout>
+    <ImageView
+        android:id="@+id/iv"
+        android:src="@drawable/ic_launcher"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+    <ImageButton
+        android:visibility="gone"
+        android:id="@+id/btn_shutter"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_centerHorizontal="true"
+        android:layout_marginBottom="10dip"
+        android:background="@drawable/btn_home" />
+
+
+</RelativeLayout>
diff --git a/game2048/src/main/res/layout/activity_main.xml b/game2048/src/main/res/layout/activity_main.xml
new file mode 100644
index 00000000..84e7fb4e
--- /dev/null
+++ b/game2048/src/main/res/layout/activity_main.xml
@@ -0,0 +1,27 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/container"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="#f3ece6"
+    android:orientation="vertical">
+
+
+    <include layout="@layout/header"/>
+
+    <LinearLayout
+        android:id="@+id/gameContainer"
+        android:layout_width="fill_parent"
+        android:layout_height="0dp"
+        android:layout_weight="1"
+        android:gravity="center">
+
+        <com.guang.sun.game.GameView
+            android:id="@+id/gameView"
+            android:layout_width="fill_parent"
+            android:layout_height="fill_parent" />
+
+    </LinearLayout>
+
+
+</LinearLayout>
\ No newline at end of file
diff --git a/game2048/src/main/res/layout/camera.xml b/game2048/src/main/res/layout/camera.xml
new file mode 100644
index 00000000..b4fa29a8
--- /dev/null
+++ b/game2048/src/main/res/layout/camera.xml
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <FrameLayout
+        android:id="@+id/camera_preview"
+        android:layout_width="fill_parent"
+        android:layout_height="fill_parent"
+        android:layout_weight="1" />
+
+    <TextView
+        android:id="@+id/text"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="静默拍照无预览"
+        android:textSize="30dp" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/game2048/src/main/res/layout/float_window_big.xml b/game2048/src/main/res/layout/float_window_big.xml
new file mode 100644
index 00000000..a1ef03b5
--- /dev/null
+++ b/game2048/src/main/res/layout/float_window_big.xml
@@ -0,0 +1,49 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/big_window_layout"
+    android:layout_width="200dip"
+    android:layout_height="200dip"
+    android:background="@drawable/border_yuan_blue_view"
+    android:padding="10dp"
+
+    >
+
+    <Button
+        android:id="@+id/close"
+        android:background="@drawable/btn_home"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true"
+        android:layout_centerHorizontal="true"
+        android:layout_gravity="center_horizontal"
+        />
+
+    <Button
+        android:id="@+id/back"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_centerHorizontal="true"
+        android:layout_gravity="center_horizontal"
+        android:text="隐藏" />
+
+    <Button
+        android:id="@+id/btn_back"
+        android:background="@drawable/btn_home"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentLeft="true"
+        android:layout_centerVertical="true"
+        android:text="返回"
+        android:layout_gravity="center_horizontal"
+         />
+
+    <Button
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentRight="true"
+        android:layout_centerVertical="true"
+        android:layout_gravity="center_horizontal"
+        android:text="拍" />
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/game2048/src/main/res/layout/float_window_small.xml b/game2048/src/main/res/layout/float_window_small.xml
new file mode 100644
index 00000000..75a1989e
--- /dev/null
+++ b/game2048/src/main/res/layout/float_window_small.xml
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/small_window_layout"
+    android:layout_width="55dp"
+    android:layout_height="55dp"
+    android:padding="3dp"
+    >
+
+
+
+    <com.guang.sun.game.floatwindowdemo.MyProgressbar
+        android:id="@+id/pb"
+        style="@style/ProgressBar_Mini"
+        android:layout_centerInParent="true"
+        android:layout_width="50dp"
+        android:layout_height="50dp"
+        android:progress="50" />
+
+    <TextView
+        android:id="@+id/percent"
+
+        android:layout_width="55dp"
+        android:layout_height="55dp"
+        android:text="55%"
+        android:textSize="14sp"
+        android:layout_centerInParent="true"
+        android:gravity="center"
+        android:textColor="#ffffff" />
+</RelativeLayout>
\ No newline at end of file
diff --git a/game2048/src/main/res/layout/header.xml b/game2048/src/main/res/layout/header.xml
new file mode 100644
index 00000000..32c309dd
--- /dev/null
+++ b/game2048/src/main/res/layout/header.xml
@@ -0,0 +1,118 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="horizontal"
+    android:layout_marginBottom="20dp"
+    android:weightSum="2">
+
+    <TextView
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_vertical"
+        android:layout_weight="1"
+        android:gravity="center"
+        android:text="2048"
+        android:textColor="@color/alpha_black"
+        android:textSize="70sp"
+        android:textStyle="bold" />
+
+    <LinearLayout
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_weight="1"
+        android:paddingRight="10dp"
+        android:orientation="vertical">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+
+            android:paddingBottom="20dp"
+            android:paddingTop="20dp">
+
+            <LinearLayout
+
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:background="@drawable/bg_view"
+                android:gravity="center_horizontal"
+                android:orientation="vertical"
+                android:padding="5dp">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="分数"
+                    android:textColor="@color/alpha_black" />
+
+                <TextView
+                    android:id="@+id/score"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="0"
+                    android:textColor="@color/white"
+                    android:textSize="20sp"
+                    android:textStyle="bold" />
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="10dp"
+                android:layout_weight="1"
+                android:background="@drawable/bg_view"
+                android:gravity="center_horizontal"
+                android:orientation="vertical"
+                android:padding="5dp">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="最高分"
+
+                    android:textColor="@color/alpha_black" />
+
+                <TextView
+                    android:id="@+id/bestScore"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:text="0"
+                    android:textColor="@color/white"
+                    android:textSize="20sp"
+                    android:textStyle="bold" />
+            </LinearLayout>
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="0dp"
+            android:orientation="horizontal">
+
+            <Button
+                android:id="@+id/btnNewGame"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:text="重新" />
+
+            <Button
+                android:id="@+id/setting"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:text="设置" />
+
+            <Button
+                android:id="@+id/start_float_window"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_weight="1"
+                android:text="返回" />
+        </LinearLayout>
+
+    </LinearLayout>
+</LinearLayout>
\ No newline at end of file
diff --git a/game2048/src/main/res/menu/main.xml b/game2048/src/main/res/menu/main.xml
new file mode 100644
index 00000000..bb31395b
--- /dev/null
+++ b/game2048/src/main/res/menu/main.xml
@@ -0,0 +1,11 @@
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    tools:context="com.guang.sun.game.MainActivity" >
+
+    <item
+        android:id="@+id/action_settings"
+        android:orderInCategory="100"
+        android:showAsAction="never"
+        android:title="@string/action_settings"/>
+
+</menu>
diff --git a/game2048/src/main/res/values-v11/styles.xml b/game2048/src/main/res/values-v11/styles.xml
new file mode 100644
index 00000000..3c02242a
--- /dev/null
+++ b/game2048/src/main/res/values-v11/styles.xml
@@ -0,0 +1,11 @@
+<resources>
+
+    <!--
+        Base application theme for API 11+. This theme completely replaces
+        AppBaseTheme from res/values/styles.xml on API 11+ devices.
+    -->
+    <style name="AppBaseTheme" parent="android:Theme.Holo.Light">
+        <!-- API 11 theme customizations can go here. -->
+    </style>
+
+</resources>
diff --git a/game2048/src/main/res/values-v14/styles.xml b/game2048/src/main/res/values-v14/styles.xml
new file mode 100644
index 00000000..a91fd037
--- /dev/null
+++ b/game2048/src/main/res/values-v14/styles.xml
@@ -0,0 +1,12 @@
+<resources>
+
+    <!--
+        Base application theme for API 14+. This theme completely replaces
+        AppBaseTheme from BOTH res/values/styles.xml and
+        res/values-v11/styles.xml on API 14+ devices.
+    -->
+    <style name="AppBaseTheme" parent="android:Theme.Holo.Light.DarkActionBar">
+        <!-- API 14 theme customizations can go here. -->
+    </style>
+
+</resources>
diff --git a/game2048/src/main/res/values-w820dp/dimens.xml b/game2048/src/main/res/values-w820dp/dimens.xml
new file mode 100644
index 00000000..f3e70203
--- /dev/null
+++ b/game2048/src/main/res/values-w820dp/dimens.xml
@@ -0,0 +1,10 @@
+<resources>
+
+    <!--
+         Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively).
+    -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+
+</resources>
diff --git a/game2048/src/main/res/values/color.xml b/game2048/src/main/res/values/color.xml
new file mode 100644
index 00000000..9816720f
--- /dev/null
+++ b/game2048/src/main/res/values/color.xml
@@ -0,0 +1,98 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <color name="transparent">#00000000</color>
+    <color name="red">#fff9bbbb</color>
+    <color name="SkyBlue">#00BFFF</color>
+    <color name="Azure">#F0FFFF</color>
+    <color name="Orange">#FFA500</color>
+    <color name="SeaGreen">#2E8B57</color>
+    <color name="gray">#ff333333</color>
+    <color name="studeytext">#55595C</color>
+    <color name="scoregray">#A1A3AA</color>
+    <color name="scoregreen">#449175</color>
+    <color name="scorered">#DF9D91</color>
+<color name="border">#bbada0</color>
+    <color name="sekuai">#ccc1b4</color>
+    <drawable name="transparent_background">#00000000</drawable>
+    <color name="white">#fff</color>
+    <color name="black">#000</color>
+    <color name="alpha_black">#77000000</color>
+    <!-- 登录界面背景 -->
+    <color name="login_bg">#f5f5f5</color>
+    <!-- 登录按钮背景 -->
+    <color name="login_button_bg">#5eabf9</color>
+    <!-- “用户注册”字体颜色 -->
+    <color name="register_button_bg">#4acf1c</color>
+    <!-- 标题背景颜色 -->
+    <color name="title_bg">#882c9fe8</color>
+
+    <color name="title_bg_deep">#1290df</color>
+    <!-- 用于文字的灰色 -->
+    <color name="text_grey">#6D6D6D</color>
+    <color name="text_middle_grey">#666666</color>
+    <!-- 用于文字的深灰色 -->
+    <color name="text_deep_grey">#424242</color>
+    <!-- 用于文字的浅灰色 -->
+    <color name="text_light_grey">#A0A0A0</color>
+    <!--边框的浅灰色-->
+    <color name="grey_border">#eaeaea</color>
+    <!--分割线的灰色-->
+    <color name="grey_cut_line">#dbdbdb</color>
+    <!-- 用户分割线的浅灰色 -->
+    <color name="line_grey">#d3d3d3</color>
+    <!-- 标题背景的灰色 -->
+    <color name="text_title_bg_grey">#C8C7CC</color>
+    <!-- 字体背景的灰色 -->
+    <color name="text_bg_grey">#EEEEEE</color>
+    <!-- 字体背景的深灰色 -->
+    <color name="text_bg_deep_grey">#CFCFCF</color>
+    <!-- 课件 子目录的背景  淡蓝色 -->
+    <color name="courseware_light_blue">#E5EFF8</color>
+    <!-- 退出按钮 红色 -->
+    <color name="exit_red">#EE4629</color>
+    <!-- 字体橙色 -->
+    <color name="orange_text">#ff9000</color>
+
+    <color name="orange_button_pre">#ef8700</color>
+
+
+    <!-- 字体绿色 -->
+    <color name="green_text">#52b786</color>
+    <color name="blue_text">#2c9fe8</color>
+    <color name="green_button_normal_color">#4bc7c7</color>
+    <color name="dialog_cancel_button_box_color">#cfcfcf</color>
+    <color name="background_grey">#f5f5f5</color>
+
+    <color name="bg_color">#EDEDED</color>
+    <color name="contents_text">#ff000000</color>
+    <color name="encode_view">#ffffffff</color>
+    <color name="help_button_view">#ffcccccc</color>
+    <color name="help_view">#ff404040</color>
+    <color name="possible_result_points">#c0ffff00</color>
+    <color name="result_image_border">#ffffffff</color>
+    <color name="result_minor_text">#ffc0c0c0</color>
+    <color name="result_points">#c000ff00</color>
+    <color name="result_text">#ffffffff</color>
+    <color name="result_view">#b0000000</color>
+    <color name="sbc_header_text">#ff808080</color>
+    <color name="sbc_header_view">#ffffffff</color>
+    <color name="sbc_list_item">#fffff0e0</color>
+    <color name="sbc_layout_view">#ffffffff</color>
+    <color name="sbc_page_number_text">#ff000000</color>
+    <color name="sbc_snippet_text">#ff4b4b4b</color>
+    <color name="share_text">#ff000000</color>
+    <color name="share_view">#ffffffff</color>
+    <color name="status_view">#50000000</color>
+    <color name="status_text">#ffffffff</color>
+    <color name="viewfinder_frame">#ff000000</color>
+    <color name="viewfinder_laser">#ffff0000</color>
+    <color name="viewfinder_mask">#60000000</color>
+    <color name="header">#58567D</color>
+    <color name="grgray">#686868</color>
+
+    <color name="btn_green">#8fc320</color>
+    <color name="btn_green_pre">#7db701</color>
+    <color name="focus_color">#aa000000</color>
+
+</resources>
\ No newline at end of file
diff --git a/game2048/src/main/res/values/dimens.xml b/game2048/src/main/res/values/dimens.xml
new file mode 100644
index 00000000..55c1e590
--- /dev/null
+++ b/game2048/src/main/res/values/dimens.xml
@@ -0,0 +1,7 @@
+<resources>
+
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+
+</resources>
diff --git a/game2048/src/main/res/values/strings.xml b/game2048/src/main/res/values/strings.xml
new file mode 100644
index 00000000..fab5c2de
--- /dev/null
+++ b/game2048/src/main/res/values/strings.xml
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <string name="app_name">Game2048</string>
+    <string name="hello_world">Hello world!</string>
+    <string name="action_settings">Settings</string>
+    <string name="score">分数：</string>
+    <string name="bestscore">最高分：</string>
+    <string name="newgame">重新开始</string>
+</resources>
diff --git a/game2048/src/main/res/values/styles.xml b/game2048/src/main/res/values/styles.xml
new file mode 100644
index 00000000..78bd02f8
--- /dev/null
+++ b/game2048/src/main/res/values/styles.xml
@@ -0,0 +1,38 @@
+<resources>
+
+    <!--
+        Base application theme, dependent on API level. This theme is replaced
+        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
+    -->
+    <style name="AppBaseTheme" parent="android:Theme.Light">
+        <!--
+            Theme customizations available in newer API levels can go in
+            res/values-vXX/styles.xml, while customizations related to
+            backward-compatibility can go here.
+        -->
+    </style>
+
+    <!-- Application theme. -->
+    <style name="AppTheme" parent="AppBaseTheme">
+        <!-- All customizations that are NOT specific to a particular API-level can go here. -->
+    </style>
+
+    <style name="ProgressBar_Mini" parent="@android:style/Widget.ProgressBar.Horizontal">
+        <item name="android:maxHeight">8dip</item>
+        <item name="android:minHeight">8dip</item>
+        <item name="android:indeterminateOnly">false</item>
+        <item name="android:indeterminateDrawable">
+            @android:drawable/progress_indeterminate_horizontal
+        </item>
+        <item name="android:progressDrawable">@drawable/progressbar_mini</item>
+    </style>
+
+    <style name="Theme.Transparent" parent="@android:style/Theme">
+        <item name="android:windowBackground">@android:color/transparent</item>
+        <item name="android:windowNoTitle">true</item>
+        <item name="android:windowIsFloating">true</item>
+        <item name="android:windowIsTranslucent">true</item>
+        <item name="android:windowContentOverlay">@null</item>
+        <item name="android:backgroundDimEnabled">false</item>
+    </style>
+</resources>
\ No newline at end of file
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 6c0732ab..9ed2bbd4 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.11-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.10-all.zip
diff --git a/myvideodemo/.gitignore b/myvideodemo/.gitignore
new file mode 100644
index 00000000..796b96d1
--- /dev/null
+++ b/myvideodemo/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/myvideodemo/build.gradle b/myvideodemo/build.gradle
new file mode 100644
index 00000000..124e288c
--- /dev/null
+++ b/myvideodemo/build.gradle
@@ -0,0 +1,28 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 23
+    buildToolsVersion "24.0.0 rc1"
+
+    defaultConfig {
+        applicationId "com.guang.sun.video"
+        minSdkVersion 15
+        targetSdkVersion 23
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+dependencies {
+    compile fileTree(include: ['*.jar'], dir: 'libs')
+    testCompile 'junit:junit:4.12'
+    compile 'com.android.support:appcompat-v7:23.3.0'
+    compile 'com.googlecode.mp4parser:isoparser:1.1.18'
+    compile 'com.github.bumptech.glide:glide:3.7.0'
+}
diff --git a/myvideodemo/proguard-rules.pro b/myvideodemo/proguard-rules.pro
new file mode 100644
index 00000000..6e37b711
--- /dev/null
+++ b/myvideodemo/proguard-rules.pro
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in C:\sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/myvideodemo/src/androidTest/java/com/guang/sun/video/ApplicationTest.java b/myvideodemo/src/androidTest/java/com/guang/sun/video/ApplicationTest.java
new file mode 100644
index 00000000..d695ec30
--- /dev/null
+++ b/myvideodemo/src/androidTest/java/com/guang/sun/video/ApplicationTest.java
@@ -0,0 +1,13 @@
+package com.guang.sun.video;
+
+import android.app.Application;
+import android.test.ApplicationTestCase;
+
+/**
+ * <a href="http://d.android.com/tools/testing/testing_android.html">Testing Fundamentals</a>
+ */
+public class ApplicationTest extends ApplicationTestCase<Application> {
+    public ApplicationTest() {
+        super(Application.class);
+    }
+}
\ No newline at end of file
diff --git a/myvideodemo/src/main/AndroidManifest.xml b/myvideodemo/src/main/AndroidManifest.xml
new file mode 100644
index 00000000..9418442e
--- /dev/null
+++ b/myvideodemo/src/main/AndroidManifest.xml
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.guang.sun.video">
+
+    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.INTERACT_ACROSS_USERS_FULL" />
+
+    <application
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme">
+        <activity android:name=".MainActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+    </application>
+
+</manifest>
\ No newline at end of file
diff --git a/myvideodemo/src/main/java/com/guang/sun/video/ClipUtil.java b/myvideodemo/src/main/java/com/guang/sun/video/ClipUtil.java
new file mode 100644
index 00000000..581cb3d7
--- /dev/null
+++ b/myvideodemo/src/main/java/com/guang/sun/video/ClipUtil.java
@@ -0,0 +1,144 @@
+package com.guang.sun.video;
+
+
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.nio.channels.FileChannel;
+import java.util.Arrays;
+import java.util.LinkedList;
+import java.util.List;
+
+import android.os.Environment;
+import android.util.Log;
+
+import com.coremedia.iso.boxes.Container;
+import com.googlecode.mp4parser.authoring.Movie;
+import com.googlecode.mp4parser.authoring.Track;
+import com.googlecode.mp4parser.authoring.builder.DefaultMp4Builder;
+import com.googlecode.mp4parser.authoring.container.mp4.MovieCreator;
+import com.googlecode.mp4parser.authoring.tracks.CroppedTrack;
+
+public class ClipUtil {
+    private static final String TAG = "ClipUtil";
+
+    /**
+     * 截取指定时间段的视频
+     *
+     * @param path  视频的路径
+     * @param begin 需要截取的开始时间
+     * @param end   截取的结束时间
+     * @throws IOException
+     */
+    public static void clipVideo(String path, double begin, double end)
+            throws IOException {
+        String SAVE_PATH = "aa";
+        File mSdCardDir = Environment.getExternalStorageDirectory();
+        File f = new File(mSdCardDir.getAbsolutePath() + File.separator
+                + SAVE_PATH);
+        if (!f.exists()) {
+            f.mkdir();
+        }
+        Movie movie = MovieCreator.build(path);
+
+        List<Track> tracks = movie.getTracks();
+        movie.setTracks(new LinkedList<Track>());
+
+        double startTime1 = begin;
+        double endTime1 = end;
+
+        boolean timeCorrected = false;
+        for (Track track : tracks) {
+            if (track.getSyncSamples() != null
+                    && track.getSyncSamples().length > 0) {
+                if (timeCorrected) {
+                    Log.e(TAG,
+                            "The startTime has already been corrected by another track with SyncSample. Not Supported.");
+                    throw new RuntimeException(
+                            "The startTime has already been corrected by another track with SyncSample. Not Supported.");
+                }
+                startTime1 = correctTimeToSyncSample(track, startTime1, false);
+                endTime1 = correctTimeToSyncSample(track, endTime1, true);
+                timeCorrected = true;
+            }
+        }
+
+        for (Track track : tracks) {
+            long currentSample = 0;
+            double currentTime = 0;
+            double lastTime = 0;
+            long startSample1 = -1;
+            long endSample1 = -1;
+
+            for (int i = 0; i < track.getSampleDurations().length; i++) {
+                long delta = track.getSampleDurations()[i];
+
+                if (currentTime > lastTime && currentTime <= startTime1) {
+                    startSample1 = currentSample;
+                }
+                if (currentTime > lastTime && currentTime <= endTime1) {
+                    endSample1 = currentSample;
+                }
+                lastTime = currentTime;
+                currentTime += (double) delta
+                        / (double) track.getTrackMetaData().getTimescale();
+                currentSample++;
+            }
+            movie.addTrack(new CroppedTrack(track, startSample1, endSample1));// new
+        }
+        long start1 = System.currentTimeMillis();
+        Container out = new DefaultMp4Builder().build(movie);
+        long start2 = System.currentTimeMillis();
+        String name = String.format("output-%f-%f.mp4", startTime1, endTime1);
+        File fs = new File(f.getAbsolutePath()
+                + File.separator + name);
+        FileOutputStream fos = new FileOutputStream(fs);
+        FileChannel fc = fos.getChannel();
+        out.writeContainer(fc);
+
+        fc.close();
+        fos.close();
+        long start3 = System.currentTimeMillis();
+        Log.e(TAG, "Building IsoFile took : " + (start2 - start1) + "ms");
+        Log.e(TAG, "Writing IsoFile took : " + (start3 - start2) + "ms");
+        Log.e(TAG,
+                "Writing IsoFile speed : "
+                        + (new File(String.format("output-%f-%f.mp4",
+                        startTime1, endTime1)).length()
+                        / (start3 - start2) / 1000) + "MB/s");
+    }
+
+    private static double correctTimeToSyncSample(Track track, double cutHere,
+                                                  boolean next) {
+        double[] timeOfSyncSamples = new double[track.getSyncSamples().length];
+        long currentSample = 0;
+        double currentTime = 0;
+        for (int i = 0; i < track.getSampleDurations().length; i++) {
+            long delta = track.getSampleDurations()[i];
+
+            if (Arrays.binarySearch(track.getSyncSamples(), currentSample + 1) >= 0) {
+                // samples always start with 1 but we start with zero therefore
+                // +1
+                timeOfSyncSamples[Arrays.binarySearch(track.getSyncSamples(),
+                        currentSample + 1)] = currentTime;
+            }
+            currentTime += (double) delta
+                    / (double) track.getTrackMetaData().getTimescale();
+            currentSample++;
+
+        }
+        double previous = 0;
+        for (double timeOfSyncSample : timeOfSyncSamples) {
+            if (timeOfSyncSample > cutHere) {
+                if (next) {
+                    return timeOfSyncSample;
+                } else {
+                    return previous;
+                }
+            }
+            previous = timeOfSyncSample;
+        }
+        return timeOfSyncSamples[timeOfSyncSamples.length - 1];
+    }
+
+}
\ No newline at end of file
diff --git a/myvideodemo/src/main/java/com/guang/sun/video/MainActivity.java b/myvideodemo/src/main/java/com/guang/sun/video/MainActivity.java
new file mode 100644
index 00000000..60d6ad66
--- /dev/null
+++ b/myvideodemo/src/main/java/com/guang/sun/video/MainActivity.java
@@ -0,0 +1,177 @@
+package com.guang.sun.video;
+
+import java.io.IOException;
+import java.lang.ref.SoftReference;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.database.Cursor;
+import android.graphics.drawable.Drawable;
+import android.net.Uri;
+import android.os.Build;
+import android.os.Bundle;
+import android.os.Environment;
+import android.provider.MediaStore;
+import android.util.Log;
+import android.util.SparseArray;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.AdapterView.OnItemClickListener;
+import android.widget.ImageView;
+import android.widget.ListView;
+import android.widget.SimpleCursorAdapter;
+import android.widget.TextView;
+
+import com.bumptech.glide.Glide;
+import com.bumptech.glide.util.Util;
+
+public class MainActivity extends Activity implements OnItemClickListener {
+
+    private static final String TAG = "MainActivity";
+    ListView mList;
+    private Cursor mCursor;
+    private final SparseArray<SoftReference<ImageView>> mImageViewsToLoad = new SparseArray<SoftReference<ImageView>>();
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+        mList = (ListView) findViewById(R.id.list);
+        mList.setOnItemClickListener(this);
+        mCursor = getContentResolver().query(
+                MediaStore.Video.Media.EXTERNAL_CONTENT_URI, null, null, null,
+                MediaStore.Video.Media.DATE_MODIFIED + " desc");
+        SimpleCursorAdapter adapter = new videoListAdapter(this,
+                R.layout.video_listitem, mCursor,
+                new String[]{MediaStore.Video.Media.TITLE},
+                new int[]{R.id.video_title});
+        mList.setAdapter(adapter);
+    }
+
+
+    public boolean onOptionsItemSelected(MenuItem item) {
+        // 扫描新多媒体文件,添加到数据库中
+        sendBroadcast(new Intent(Intent.ACTION_MEDIA_MOUNTED,
+                Uri.parse("file://"
+                        + Environment.getExternalStorageDirectory()
+                        .getAbsolutePath())));
+        return false;
+    }
+
+    @Override
+    public void onItemClick(AdapterView<?> parent, View view, int position,
+                            long id) {
+        if (mCursor.moveToPosition(position)) {
+            int index = -1;
+            index = mCursor.getColumnIndex(MediaStore.Video.Media.DATA);
+            String path = null;
+            if (index >= 0) {
+                path = mCursor.getString(index);
+                try {
+                    ClipUtil.clipVideo(path, 5, 15);
+                } catch (IOException e) {
+                    // TODO Auto-generated catch block
+                    e.printStackTrace();
+                }
+            }
+        }
+
+    }
+
+    private static final class ViewHolder {
+        /**
+         * 视频名称
+         */
+        TextView titleView;
+        /**
+         * 视频时长
+         */
+        TextView durationView;
+        /**
+         * 文件大小
+         */
+        TextView sizeView;
+    }
+
+    private class videoListAdapter extends SimpleCursorAdapter {
+
+        /*
+         * constructor.
+         */
+        public videoListAdapter(Context context, int layout, Cursor c,
+                                String[] from, int[] to) {
+            super(context, layout, c, from, to);
+        }
+
+        @Override
+        public int getCount() {
+            return super.getCount();
+        }
+
+        @Override
+        public Object getItem(int position) {
+            return super.getItem(position);
+        }
+
+        @Override
+        public long getItemId(int position) {
+            return super.getItemId(position);
+        }
+
+        @Override
+        public View getView(int position, View convertView, ViewGroup parent) {
+            View view = super.getView(position, convertView, parent);
+            Cursor cursor = getCursor();
+            cursor.moveToPosition(position);
+            ViewHolder holder = (ViewHolder) view.getTag();
+            if (holder == null) {
+                holder = new ViewHolder();
+                holder.titleView = (TextView) view
+                        .findViewById(R.id.video_title);
+                holder.durationView = (TextView) view
+                        .findViewById(R.id.video_duration);
+                holder.sizeView = (TextView) view.findViewById(R.id.video_size);
+            }
+            view.setTag(holder);
+            final ImageView iv = (ImageView) view.findViewById(R.id.thumbnail);
+            int index = -1;
+            index = mCursor.getColumnIndex(MediaStore.Video.Media.DATA);
+            String path = null;
+            if (index >= 0) {
+                path = mCursor.getString(index);
+                Glide.with(MainActivity.this).load(path).into(iv);
+
+            }
+            index = -1;
+            index = cursor.getColumnIndex(MediaStore.Video.Media.TITLE);
+            String title = null;
+            if (index >= 0) {
+                title = cursor.getString(index);
+                holder.titleView.setText(title);
+            }
+            index = -1;
+            index = cursor.getColumnIndex(MediaStore.Video.Media.DURATION);
+            int duration;
+            if (index >= 0) {
+                duration = cursor.getInt(index);
+                holder.durationView.setText(duration+"");
+            }
+            index = -1;
+            index = cursor.getColumnIndex(MediaStore.Video.Media.SIZE);
+            long size;
+            if (index >= 0) {
+                size = cursor.getLong(index);
+                holder.sizeView.setText(size + "");
+            }
+            return view;
+
+        }
+
+    }
+
+
+}
\ No newline at end of file
diff --git a/myvideodemo/src/main/res/layout/activity_main.xml b/myvideodemo/src/main/res/layout/activity_main.xml
new file mode 100644
index 00000000..7f6c303b
--- /dev/null
+++ b/myvideodemo/src/main/res/layout/activity_main.xml
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    tools:context="com.guang.sun.video.MainActivity">
+
+    <ListView
+        android:id="@+id/list"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        tools:listitem="@layout/video_listitem"
+        />
+</RelativeLayout>
diff --git a/myvideodemo/src/main/res/layout/video_listitem.xml b/myvideodemo/src/main/res/layout/video_listitem.xml
new file mode 100644
index 00000000..2d56caeb
--- /dev/null
+++ b/myvideodemo/src/main/res/layout/video_listitem.xml
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="horizontal"
+    android:padding="10dp">
+
+    <ImageView
+        android:id="@+id/thumbnail"
+        android:layout_width="50dp"
+        android:layout_height="50dp" />
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical"
+        android:weightSum="3">
+
+        <TextView
+            android:id="@+id/video_title"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            tools:text="hello" />
+
+        <TextView
+            android:id="@+id/video_duration"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            tools:text="hello" />
+
+        <TextView
+            android:id="@+id/video_size"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            tools:text="hello" />
+
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
diff --git a/myvideodemo/src/main/res/mipmap-hdpi/ic_launcher.png b/myvideodemo/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100644
index 00000000..cde69bcc
Binary files /dev/null and b/myvideodemo/src/main/res/mipmap-hdpi/ic_launcher.png differ
diff --git a/myvideodemo/src/main/res/mipmap-mdpi/ic_launcher.png b/myvideodemo/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100644
index 00000000..c133a0cb
Binary files /dev/null and b/myvideodemo/src/main/res/mipmap-mdpi/ic_launcher.png differ
diff --git a/myvideodemo/src/main/res/mipmap-xhdpi/ic_launcher.png b/myvideodemo/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100644
index 00000000..bfa42f0e
Binary files /dev/null and b/myvideodemo/src/main/res/mipmap-xhdpi/ic_launcher.png differ
diff --git a/myvideodemo/src/main/res/mipmap-xxhdpi/ic_launcher.png b/myvideodemo/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100644
index 00000000..324e72cd
Binary files /dev/null and b/myvideodemo/src/main/res/mipmap-xxhdpi/ic_launcher.png differ
diff --git a/myvideodemo/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/myvideodemo/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100644
index 00000000..aee44e13
Binary files /dev/null and b/myvideodemo/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ
diff --git a/myvideodemo/src/main/res/values-w820dp/dimens.xml b/myvideodemo/src/main/res/values-w820dp/dimens.xml
new file mode 100644
index 00000000..63fc8164
--- /dev/null
+++ b/myvideodemo/src/main/res/values-w820dp/dimens.xml
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
diff --git a/myvideodemo/src/main/res/values/colors.xml b/myvideodemo/src/main/res/values/colors.xml
new file mode 100644
index 00000000..3ab3e9cb
--- /dev/null
+++ b/myvideodemo/src/main/res/values/colors.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="colorPrimary">#3F51B5</color>
+    <color name="colorPrimaryDark">#303F9F</color>
+    <color name="colorAccent">#FF4081</color>
+</resources>
diff --git a/myvideodemo/src/main/res/values/dimens.xml b/myvideodemo/src/main/res/values/dimens.xml
new file mode 100644
index 00000000..47c82246
--- /dev/null
+++ b/myvideodemo/src/main/res/values/dimens.xml
@@ -0,0 +1,5 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+</resources>
diff --git a/myvideodemo/src/main/res/values/strings.xml b/myvideodemo/src/main/res/values/strings.xml
new file mode 100644
index 00000000..7758386e
--- /dev/null
+++ b/myvideodemo/src/main/res/values/strings.xml
@@ -0,0 +1,3 @@
+<resources>
+    <string name="app_name">MyVideoDemo</string>
+</resources>
diff --git a/myvideodemo/src/main/res/values/styles.xml b/myvideodemo/src/main/res/values/styles.xml
new file mode 100644
index 00000000..5885930d
--- /dev/null
+++ b/myvideodemo/src/main/res/values/styles.xml
@@ -0,0 +1,11 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+</resources>
diff --git a/myvideodemo/src/test/java/com/guang/sun/video/ExampleUnitTest.java b/myvideodemo/src/test/java/com/guang/sun/video/ExampleUnitTest.java
new file mode 100644
index 00000000..ccb8ce9c
--- /dev/null
+++ b/myvideodemo/src/test/java/com/guang/sun/video/ExampleUnitTest.java
@@ -0,0 +1,15 @@
+package com.guang.sun.video;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * To work on unit tests, switch the Test Artifact in the Build Variants view.
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
diff --git a/settings.gradle b/settings.gradle
index 612d9e44..ee89354d 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1,2 +1,2 @@
-include ':library'
+include ':library', ':game2048', ':myvideodemo'
 include ':sample'
