diff --git a/build.gradle b/build.gradle
index 8a29e6b0..7243fcc5 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,7 +5,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.0.0-beta6'
+        classpath 'com.android.tools.build:gradle:2.3.3'
         classpath 'com.novoda:bintray-release:0.3.4'
     }
 }
diff --git a/gradle.properties b/gradle.properties
index 40c44d7f..1f16717d 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,22 +1,36 @@
-VERSION_NAME=1.4.1
-GROUP=jp.co.cyberagent.android.gpuimage
-ARTIFACT_ID=gpuimage-library
-
-COMPILE_SDK_VERSION=23
-BUILD_TOOLS_VERSION=23.0.2
-TARGET_SDK_VERSION=23
+## Project-wide Gradle settings.
+#
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+#
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+# Default value: -Xmx1024m -XX:MaxPermSize=256m
+# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
+#
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
+#Mon Sep 11 15:57:15 CST 2017
+POM_SCM_URL=scm\:git@github.com\:CyberAgent/android-gpuimage.git
+POM_DEVELOPER_ID=cyberagent
+POM_LICENCE_DIST=repo
+systemProp.http.proxyHost=127.0.0.1
 MIN_SDK_VERSION=8
-
+POM_DEVELOPER_NAME=CyberAgent, Inc.
+POM_LICENCE_URL=http\://www.apache.org/licenses/LICENSE-2.0.txt
 POM_DESCRIPTION=Image filters for Android with OpenGL (based on GPUImage for iOS)
-POM_URL=https://github.com/cyberagent/android-gpuimage
-POM_SCM_URL=scm:git@github.com:CyberAgent/android-gpuimage.git
-POM_SCM_CONNECTION=scm:git@github.com:CyberAgent/android-gpuimage.git
-POM_SCM_DEV_CONNECTION=scm:git@github.com:CyberAgent/android-gpuimage.git
 POM_LICENCE_NAME=The Apache Software License, Version 2.0
-POM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt
-POM_LICENCE_DIST=repo
-POM_DEVELOPER_ID=cyberagent
-POM_DEVELOPER_NAME=CyberAgent, Inc.
-ISSUE_URL=https://github.com/CyberAgent/android-gpuimage/issues
-
 android.useDeprecatedNdk=true
+BUILD_TOOLS_VERSION=23.0.2
+ISSUE_URL=https\://github.com/CyberAgent/android-gpuimage/issues
+VERSION_NAME=1.4.1
+POM_SCM_DEV_CONNECTION=scm\:git@github.com\:CyberAgent/android-gpuimage.git
+TARGET_SDK_VERSION=23
+POM_URL=https\://github.com/cyberagent/android-gpuimage
+COMPILE_SDK_VERSION=23
+ARTIFACT_ID=gpuimage-library
+POM_SCM_CONNECTION=scm\:git@github.com\:CyberAgent/android-gpuimage.git
+GROUP=jp.co.cyberagent.android.gpuimage
+systemProp.http.proxyPort=1080
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 6c0732ab..2ac01e8c 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Sat Dec 06 18:27:05 JST 2014
+#Mon Sep 11 15:57:36 CST 2017
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.11-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zip
diff --git a/library/build.gradle b/library/build.gradle
index 4e0ded68..09c76eaf 100644
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -40,6 +40,7 @@ android {
     lintOptions {
         abortOnError false
     }
+    buildToolsVersion '25.0.0'
 }
 
 task androidJavadocs(type: Javadoc) {
diff --git a/sample/build.gradle b/sample/build.gradle
index f64f4a42..14a496f9 100644
--- a/sample/build.gradle
+++ b/sample/build.gradle
@@ -26,6 +26,7 @@ android {
     lintOptions {
         abortOnError true
     }
+    buildToolsVersion '25.0.0'
 }
 repositories {
     jcenter()
diff --git a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityMain.java b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityMain.java
index 80600ee6..d217f66a 100644
--- a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityMain.java
+++ b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityMain.java
@@ -25,29 +25,36 @@
 import android.support.v4.content.PermissionChecker;
 import android.view.View;
 import android.view.View.OnClickListener;
+
 import jp.co.cyberagent.android.gpuimage.sample.R;
 
+/**
+ * I am coming!
+ */
 public class ActivityMain extends Activity implements OnClickListener {
 
-    @Override public void onCreate(final Bundle savedInstanceState) {
+    @Override
+    public void onCreate(final Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
         findViewById(R.id.button_gallery).setOnClickListener(this);
         findViewById(R.id.button_camera).setOnClickListener(this);
     }
 
-    @Override public void onClick(final View v) {
+    @Override
+    public void onClick(final View v) {
         if (PermissionChecker.checkSelfPermission(this, Manifest.permission.CAMERA)
-            == PackageManager.PERMISSION_DENIED) {
-            ActivityCompat.requestPermissions(this, new String[] { Manifest.permission.CAMERA },
-                v.getId());
+                == PackageManager.PERMISSION_DENIED) {
+            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.CAMERA},
+                    v.getId());
         } else {
             startActivity(v.getId());
         }
     }
 
-    @Override public void onRequestPermissionsResult(int requestCode, String[] permissions,
-        int[] grantResults) {
+    @Override
+    public void onRequestPermissionsResult(int requestCode, String[] permissions,
+                                           int[] grantResults) {
         if (grantResults.length != 1 || grantResults[0] == PackageManager.PERMISSION_GRANTED) {
             startActivity(requestCode);
         } else {
