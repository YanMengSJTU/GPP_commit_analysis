diff --git a/sample/AndroidManifest.xml b/sample/AndroidManifest.xml
index 855b72c5..359b15dc 100644
--- a/sample/AndroidManifest.xml
+++ b/sample/AndroidManifest.xml
@@ -28,6 +28,10 @@
             android:name="jp.co.cyberagent.android.gpuimage.sample.activity.ActivityCamera"
             android:screenOrientation="portrait"
             android:theme="@style/AppTheme.NoActionBar" />
+        <activity
+            android:name="jp.co.cyberagent.android.gpuimage.sample.activity.ActivityMovieWriter"
+            android:screenOrientation="portrait"
+            android:theme="@style/AppTheme.NoActionBar" />
     </application>
 
 </manifest>
\ No newline at end of file
diff --git a/sample/res/layout/activity_main.xml b/sample/res/layout/activity_main.xml
index 6c13bf2f..f9af17db 100644
--- a/sample/res/layout/activity_main.xml
+++ b/sample/res/layout/activity_main.xml
@@ -22,8 +22,16 @@
             android:id="@+id/button_camera"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
+            android:layout_marginBottom="10dp"
             android:drawableTop="@android:drawable/ic_menu_camera"
             android:text="Camera" />
+
+        <Button
+            android:id="@+id/button_movie_writer"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:drawableTop="@android:drawable/ic_menu_camera"
+            android:text="Movie Writer" />
     </LinearLayout>
 
 </FrameLayout>
\ No newline at end of file
diff --git a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java
index ba832284..71f57b63 100644
--- a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java
+++ b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityCamera.java
@@ -51,9 +51,9 @@
 
 public class ActivityCamera extends Activity implements OnSeekBarChangeListener, OnClickListener {
 
-    private GPUImage mGPUImage;
+    protected GPUImage mGPUImage;
     private CameraHelper mCameraHelper;
-    private CameraLoader mCamera;
+    protected CameraLoader mCamera;
     private GPUImageFilter mFilter;
     private FilterAdjuster mFilterAdjuster;
 
@@ -65,7 +65,7 @@ public void onCreate(final Bundle savedInstanceState) {
         findViewById(R.id.button_choose_filter).setOnClickListener(this);
         findViewById(R.id.button_capture).setOnClickListener(this);
 
-        mGPUImage = new GPUImage(this);
+        createGPUImage();
         mGPUImage.setGLSurfaceView((GLSurfaceView) findViewById(R.id.surfaceView));
 
         mCameraHelper = new CameraHelper(this);
@@ -104,18 +104,7 @@ public void onGpuImageFilterChosenListener(final GPUImageFilter filter) {
                 break;
 
             case R.id.button_capture:
-                if (mCamera.mCameraInstance.getParameters().getFocusMode().equals(
-                        Parameters.FOCUS_MODE_CONTINUOUS_PICTURE)) {
-                    takePicture();
-                } else {
-                    mCamera.mCameraInstance.autoFocus(new Camera.AutoFocusCallback() {
-
-                        @Override
-                        public void onAutoFocus(final boolean success, final Camera camera) {
-                            takePicture();
-                        }
-                    });
-                }
+                onCaptureButtonClicked();
                 break;
 
             case R.id.img_switch_camera:
@@ -124,6 +113,25 @@ public void onAutoFocus(final boolean success, final Camera camera) {
         }
     }
 
+    protected void createGPUImage() {
+        mGPUImage = new GPUImage(this);
+    }
+
+    protected void onCaptureButtonClicked() {
+        if (mCamera.mCameraInstance.getParameters().getFocusMode().equals(
+                Parameters.FOCUS_MODE_CONTINUOUS_PICTURE)) {
+            takePicture();
+        } else {
+            mCamera.mCameraInstance.autoFocus(new Camera.AutoFocusCallback() {
+
+                @Override
+                public void onAutoFocus(final boolean success, final Camera camera) {
+                    takePicture();
+                }
+            });
+        }
+    }
+
     private void takePicture() {
         // TODO get a size that is about the size of the screen
         Camera.Parameters params = mCamera.mCameraInstance.getParameters();
@@ -179,7 +187,7 @@ public void onPictureSaved(final Uri
     public static final int MEDIA_TYPE_IMAGE = 1;
     public static final int MEDIA_TYPE_VIDEO = 2;
 
-    private static File getOutputMediaFile(final int type) {
+    protected static File getOutputMediaFile(final int type) {
         // To be safe, you should check that the SDCard is mounted
         // using Environment.getExternalStorageState() before doing this.
 
diff --git a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityMain.java b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityMain.java
index 80600ee6..f9dbe4f8 100644
--- a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityMain.java
+++ b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityMain.java
@@ -34,6 +34,7 @@
         setContentView(R.layout.activity_main);
         findViewById(R.id.button_gallery).setOnClickListener(this);
         findViewById(R.id.button_camera).setOnClickListener(this);
+        findViewById(R.id.button_movie_writer).setOnClickListener(this);
     }
 
     @Override public void onClick(final View v) {
@@ -63,6 +64,9 @@ private void startActivity(int id) {
             case R.id.button_camera:
                 startActivity(new Intent(this, ActivityCamera.class));
                 break;
+            case R.id.button_movie_writer:
+                startActivity(new Intent(this, ActivityMovieWriter.class));
+                break;
 
             default:
                 break;
diff --git a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityMovieWriter.java b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityMovieWriter.java
new file mode 100644
index 00000000..73ad1b9b
--- /dev/null
+++ b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityMovieWriter.java
@@ -0,0 +1,55 @@
+/*
+ * Copyright (C) 2016 Peter Lu
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package jp.co.cyberagent.android.gpuimage.sample.activity;
+
+import android.widget.ImageButton;
+
+import jp.co.cyberagent.android.gpuimage.GPUImageMovieWriter;
+import jp.co.cyberagent.android.gpuimage.sample.R;
+
+public class ActivityMovieWriter extends ActivityCamera {
+
+    @Override
+    protected void createGPUImage() {
+        mGPUImage = new GPUImageMovieWriter(this, getOutputMediaFile(MEDIA_TYPE_VIDEO));
+    }
+
+    @Override
+    protected void onCaptureButtonClicked() {
+        ((GPUImageMovieWriter)mGPUImage).toggleRecording();
+        String uri;
+        switch (((GPUImageMovieWriter)mGPUImage).getRecordingState()) {
+            case GPUImageMovieWriter.RECORDING_ON:
+                uri = "@android:drawable/ic_media_pause";
+                break;
+            case GPUImageMovieWriter.RECORDING_OFF:
+                uri = "@android:drawable/ic_menu_camera";
+                break;
+            default:
+                uri = "@android:drawable/ic_menu_camera";
+                break;
+        }
+
+        ((ImageButton)findViewById(R.id.button_capture)).setImageDrawable(
+                getResources().getDrawable(
+                        getResources().getIdentifier(uri, null, getPackageName())
+                )
+        );
+    }
+
+
+}
