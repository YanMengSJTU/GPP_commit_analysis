diff --git a/library/src/main/cpp/yuv2rgb.h b/library/src/main/cpp/yuv2rgb.h
index 311c626f..8b14b517 100644
--- a/library/src/main/cpp/yuv2rgb.h
+++ b/library/src/main/cpp/yuv2rgb.h
@@ -62,12 +62,22 @@ To convert Y'UV to RGB :
 // [out]
 //      rgb : rgb buffer(size>=width*height*3) byte order : R0 G0 B0  R1 G1 B1  R2 G2 B2
 //		rgba : rgba buffer(size>=width*height*4) byte order : R0 G0 B0 A0  R1 G1 B1 A1  R2 G2 B2 A2
-void nv21_to_rgb(unsigned char* rgb, unsigned char const* nv21, int width, int height);
-void nv21_to_rgba(unsigned char* rgba, unsigned char alpha, unsigned char const* nv21, int width, int height);
+void nv21_to_rgb(unsigned char *rgb, unsigned char const *nv21, int width, int height);
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+void nv21_to_rgba(unsigned char *rgba, unsigned char alpha, unsigned char const *nv21, int width,
+                  int height);
+#ifdef __cplusplus
+}
+#endif
 
 // OpenCV style
-void nv21_to_bgr(unsigned char* bgr, unsigned char const* nv21, int width, int height);
-void nv21_to_bgra(unsigned char* bgra, unsigned char alpha, unsigned char const* nv21, int width, int height);
+void nv21_to_bgr(unsigned char *bgr, unsigned char const *nv21, int width, int height);
+
+void nv21_to_bgra(unsigned char *bgra, unsigned char alpha, unsigned char const *nv21, int width,
+                  int height);
 
 //
 //
