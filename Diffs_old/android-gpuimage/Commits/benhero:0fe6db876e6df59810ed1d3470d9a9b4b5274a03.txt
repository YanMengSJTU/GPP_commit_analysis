diff --git a/library/build.gradle b/library/build.gradle
index dac620fe..38925745 100644
--- a/library/build.gradle
+++ b/library/build.gradle
@@ -59,4 +59,8 @@ android {
 }
 
 apply from: 'android-artifacts.gradle'
-apply from: 'central-publish.gradle'
\ No newline at end of file
+apply from: 'central-publish.gradle'
+
+dependencies {
+    compile 'com.android.support:appcompat-v7:24.0.0'
+}
\ No newline at end of file
diff --git a/library/src/jp/co/cyberagent/android/gpuimage/GPUImage.java b/library/src/jp/co/cyberagent/android/gpuimage/GPUImage.java
index 33c2d780..79c58483 100644
--- a/library/src/jp/co/cyberagent/android/gpuimage/GPUImage.java
+++ b/library/src/jp/co/cyberagent/android/gpuimage/GPUImage.java
@@ -276,7 +276,7 @@ public Bitmap getBitmapWithFilterApplied() {
     }
 
     /**
-     * Gets the given bitmap with current filter applied as a Bitmap.
+     * 使用当前的滤镜对传进来的Bitmap进行处理
      *
      * @param bitmap the bitmap on which the current filter should be applied
      * @return the bitmap with filter applied
diff --git a/sample/AndroidManifest.xml b/sample/AndroidManifest.xml
index 855b72c5..8e287b36 100644
--- a/sample/AndroidManifest.xml
+++ b/sample/AndroidManifest.xml
@@ -1,33 +1,35 @@
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="jp.co.cyberagent.android.gpuimage.sample">
+<manifest package="jp.co.cyberagent.android.gpuimage.sample"
+          xmlns:android="http://schemas.android.com/apk/res/android">
 
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-    <uses-permission android:name="android.permission.CAMERA" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
+    <uses-permission android:name="android.permission.CAMERA"/>
 
     <!-- For images from picasa -->
-    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.INTERNET"/>
 
     <application
         android:allowBackup="true"
         android:hardwareAccelerated="true"
         android:icon="@drawable/ic_launcher"
-        android:largeHeap="true"
         android:label="@string/app_name"
-        android:theme="@style/AppTheme" >
+        android:largeHeap="true"
+
+        android:theme="@style/Theme.AppCompat.NoActionBar">
         <activity
             android:name=".activity.ActivityMain"
-            android:label="@string/title_activity_activity_main" >
+            android:label="@string/title_activity_activity_main">
             <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
+                <action android:name="android.intent.action.MAIN"/>
 
-                <category android:name="android.intent.category.LAUNCHER" />
+                <category android:name="android.intent.category.LAUNCHER"/>
             </intent-filter>
         </activity>
-        <activity android:name=".activity.ActivityGallery" />
         <activity
             android:name="jp.co.cyberagent.android.gpuimage.sample.activity.ActivityCamera"
-            android:screenOrientation="portrait"
-            android:theme="@style/AppTheme.NoActionBar" />
+            android:screenOrientation="portrait"/>
+        <activity android:name=".activity.ActivityGallery"/>
+        <activity
+            android:name=".activity.ActivityVideo"/>
     </application>
 
 </manifest>
\ No newline at end of file
diff --git a/sample/res/layout/activity_main.xml b/sample/res/layout/activity_main.xml
index 6c13bf2f..157fde5a 100644
--- a/sample/res/layout/activity_main.xml
+++ b/sample/res/layout/activity_main.xml
@@ -1,14 +1,14 @@
 <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent" >
+             xmlns:tools="http://schemas.android.com/tools"
+             android:layout_width="match_parent"
+             android:layout_height="match_parent">
 
     <LinearLayout
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_gravity="center"
         android:gravity="center"
-        android:orientation="vertical" >
+        android:orientation="vertical">
 
         <Button
             android:id="@+id/button_gallery"
@@ -16,14 +16,22 @@
             android:layout_height="wrap_content"
             android:layout_marginBottom="10dp"
             android:drawableTop="@android:drawable/ic_menu_gallery"
-            android:text="Gallery" />
+            android:text="Gallery"/>
 
         <Button
             android:id="@+id/button_camera"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:drawableTop="@android:drawable/ic_menu_camera"
-            android:text="Camera" />
+            android:text="Camera"/>
+
+        <Button
+            android:id="@+id/button_video"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="10dp"
+            android:padding="48dp"
+            android:text="Video"/>
     </LinearLayout>
 
 </FrameLayout>
\ No newline at end of file
diff --git a/sample/res/layout/activity_video.xml b/sample/res/layout/activity_video.xml
new file mode 100644
index 00000000..c2575162
--- /dev/null
+++ b/sample/res/layout/activity_video.xml
@@ -0,0 +1,44 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="#000000"
+    android:orientation="vertical">
+
+    <FrameLayout
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_weight="1">
+
+        <jp.co.cyberagent.android.gpuimage.GPUImageView
+            android:id="@+id/gpuimage"
+            android:layout_gravity="center"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content" />
+
+        <SeekBar
+            android:id="@+id/seekBar"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="bottom"
+            android:max="100" />
+    </FrameLayout>
+
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_horizontal">
+
+        <Button
+            android:id="@+id/button_choose_filter"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Choose filter" />
+
+        <Button
+            android:id="@+id/button_save"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="Save" />
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
diff --git a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityMain.java b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityMain.java
index 80600ee6..064c5568 100644
--- a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityMain.java
+++ b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityMain.java
@@ -25,29 +25,34 @@
 import android.support.v4.content.PermissionChecker;
 import android.view.View;
 import android.view.View.OnClickListener;
+
 import jp.co.cyberagent.android.gpuimage.sample.R;
 
 public class ActivityMain extends Activity implements OnClickListener {
 
-    @Override public void onCreate(final Bundle savedInstanceState) {
+    @Override
+    public void onCreate(final Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
         findViewById(R.id.button_gallery).setOnClickListener(this);
         findViewById(R.id.button_camera).setOnClickListener(this);
+        findViewById(R.id.button_video).setOnClickListener(this);
     }
 
-    @Override public void onClick(final View v) {
+    @Override
+    public void onClick(final View v) {
         if (PermissionChecker.checkSelfPermission(this, Manifest.permission.CAMERA)
-            == PackageManager.PERMISSION_DENIED) {
-            ActivityCompat.requestPermissions(this, new String[] { Manifest.permission.CAMERA },
-                v.getId());
+                == PackageManager.PERMISSION_DENIED) {
+            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.CAMERA},
+                    v.getId());
         } else {
             startActivity(v.getId());
         }
     }
 
-    @Override public void onRequestPermissionsResult(int requestCode, String[] permissions,
-        int[] grantResults) {
+    @Override
+    public void onRequestPermissionsResult(int requestCode, String[] permissions,
+                                           int[] grantResults) {
         if (grantResults.length != 1 || grantResults[0] == PackageManager.PERMISSION_GRANTED) {
             startActivity(requestCode);
         } else {
@@ -63,7 +68,9 @@ private void startActivity(int id) {
             case R.id.button_camera:
                 startActivity(new Intent(this, ActivityCamera.class));
                 break;
-
+            case R.id.button_video:
+                startActivity(new Intent(this, ActivityVideo.class));
+                break;
             default:
                 break;
         }
diff --git a/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityVideo.java b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityVideo.java
new file mode 100644
index 00000000..7b2d023a
--- /dev/null
+++ b/sample/src/jp/co/cyberagent/android/gpuimage/sample/activity/ActivityVideo.java
@@ -0,0 +1,127 @@
+package jp.co.cyberagent.android.gpuimage.sample.activity;
+
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+import android.view.View;
+import android.widget.SeekBar;
+import android.widget.Toast;
+
+import jp.co.cyberagent.android.gpuimage.GPUImageFilter;
+import jp.co.cyberagent.android.gpuimage.GPUImageView;
+import jp.co.cyberagent.android.gpuimage.sample.GPUImageFilterTools;
+import jp.co.cyberagent.android.gpuimage.sample.R;
+
+/**
+ * 视频处理页
+ *
+ * @author Benhero
+ */
+public class ActivityVideo extends AppCompatActivity implements SeekBar.OnSeekBarChangeListener,
+        View.OnClickListener, GPUImageView.OnPictureSavedListener {
+
+    private static final int REQUEST_PICK_IMAGE = 1;
+    private GPUImageFilter mFilter;
+    private GPUImageFilterTools.FilterAdjuster mFilterAdjuster;
+    private GPUImageView mGPUImageView;
+
+    @Override
+    public void onCreate(final Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_video);
+        ((SeekBar) findViewById(R.id.seekBar)).setOnSeekBarChangeListener(this);
+        findViewById(R.id.button_choose_filter).setOnClickListener(this);
+        findViewById(R.id.button_save).setOnClickListener(this);
+
+        mGPUImageView = (GPUImageView) findViewById(R.id.gpuimage);
+
+        Intent photoPickerIntent = new Intent(Intent.ACTION_PICK);
+        photoPickerIntent.setType("image/*");
+        startActivityForResult(photoPickerIntent, REQUEST_PICK_IMAGE);
+    }
+
+    @Override
+    protected void onActivityResult(final int requestCode, final int resultCode, final Intent data) {
+        switch (requestCode) {
+            case REQUEST_PICK_IMAGE:
+                if (resultCode == RESULT_OK) {
+                    handleImage(data.getData());
+                } else {
+                    finish();
+                }
+                break;
+
+            default:
+                super.onActivityResult(requestCode, resultCode, data);
+                break;
+        }
+    }
+
+    @Override
+    public void onClick(final View v) {
+        switch (v.getId()) {
+            case R.id.button_choose_filter:
+                GPUImageFilterTools.showDialog(this, new GPUImageFilterTools.OnGpuImageFilterChosenListener() {
+
+                    @Override
+                    public void onGpuImageFilterChosenListener(final GPUImageFilter filter) {
+                        switchFilterTo(filter);
+                        mGPUImageView.requestRender();
+                    }
+
+                });
+                break;
+            case R.id.button_save:
+                saveImage();
+                break;
+
+            default:
+                break;
+        }
+
+    }
+
+    @Override
+    public void onPictureSaved(final Uri uri) {
+        Toast.makeText(this, "Saved: " + uri.toString(), Toast.LENGTH_SHORT).show();
+    }
+
+    private void saveImage() {
+        String fileName = System.currentTimeMillis() + ".jpg";
+        mGPUImageView.saveToPictures("GPUImage", fileName, this);
+//        mGPUImageView.saveToPictures("GPUImage", fileName, 1600, 1600, this);
+    }
+
+    private void switchFilterTo(final GPUImageFilter filter) {
+        if (mFilter == null
+                || (filter != null && !mFilter.getClass().equals(filter.getClass()))) {
+            mFilter = filter;
+            mGPUImageView.setFilter(mFilter);
+            mFilterAdjuster = new GPUImageFilterTools.FilterAdjuster(mFilter);
+
+            findViewById(R.id.seekBar).setVisibility(
+                    mFilterAdjuster.canAdjust() ? View.VISIBLE : View.GONE);
+        }
+    }
+
+    @Override
+    public void onProgressChanged(final SeekBar seekBar, final int progress, final boolean fromUser) {
+        if (mFilterAdjuster != null) {
+            mFilterAdjuster.adjust(progress);
+        }
+        mGPUImageView.requestRender();
+    }
+
+    @Override
+    public void onStartTrackingTouch(final SeekBar seekBar) {
+    }
+
+    @Override
+    public void onStopTrackingTouch(final SeekBar seekBar) {
+    }
+
+    private void handleImage(final Uri selectedImage) {
+        mGPUImageView.setImage(selectedImage);
+    }
+}
