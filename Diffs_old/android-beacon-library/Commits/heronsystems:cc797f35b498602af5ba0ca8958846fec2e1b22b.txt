diff --git a/build.gradle b/build.gradle
index 7e267687..8d38dd85 100644
--- a/build.gradle
+++ b/build.gradle
@@ -34,7 +34,7 @@ buildscript {
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.0.0-alpha9'
+        classpath 'com.android.tools.build:gradle:3.0.0-rc2'
         classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
         classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.0.3'
     }
@@ -61,7 +61,7 @@ allprojects {
 
 android {
     compileSdkVersion 26
-    buildToolsVersion '26.0.0'
+    buildToolsVersion '26.0.2'
 
     defaultConfig {
         // Unfortunately 'com.android.support:appcompat-v7:26.0.0'
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 5e35bbb6..9a16f53a 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -3,7 +3,7 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.1-rc-1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.1-all.zip
 #distributionUrl=https\://services.gradle.org/distributions/gradle-4.1-milestone-1-all.zip
 #distributionUrl=https\://services.gradle.org/distributions/gradle-4.0-milestone-1-all.zip
 #distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zip
diff --git a/src/main/java/org/altbeacon/beacon/Identifier.java b/src/main/java/org/altbeacon/beacon/Identifier.java
index 8112cc4f..d96e567a 100644
--- a/src/main/java/org/altbeacon/beacon/Identifier.java
+++ b/src/main/java/org/altbeacon/beacon/Identifier.java
@@ -3,6 +3,8 @@
 import android.annotation.TargetApi;
 import android.os.Build;
 
+import org.altbeacon.beacon.logging.LogManager;
+
 import java.io.Serializable;
 import java.nio.ByteBuffer;
 import java.nio.LongBuffer;
@@ -315,17 +317,23 @@ public boolean equals(Object that) {
         return Arrays.equals(mValue, thatIdentifier.mValue);
     }
 
+    private static final char[] HEX_DIGITS = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'};
+
     /**
      * Represents the value as a hexadecimal String. The String is prefixed with <code>0x</code>. For example 0x0034ab
      * @return value as hexadecimal String
      */
     public String toHexString() {
-        StringBuilder sb = new StringBuilder(2 + 2 * mValue.length);
-        sb.append("0x");
-        for (byte item : mValue) {
-            sb.append(String.format("%02x", item));
+        final int l = mValue.length;
+        final char[] out = new char[l*2+2];
+        out[0] = '0';
+        out[1] = 'x';
+        for( int i=0,j=2; i<l; i++ ){
+            out[j++] = HEX_DIGITS[(0xF0 & mValue[i]) >>> 4];
+            out[j++] = HEX_DIGITS[0x0F & mValue[i]];
         }
-        return sb.toString();
+        String s = new String(out);
+        return s;
     }
 
     /**
diff --git a/src/main/java/org/altbeacon/beacon/service/RangeState.java b/src/main/java/org/altbeacon/beacon/service/RangeState.java
index fd9ed912..bba10079 100644
--- a/src/main/java/org/altbeacon/beacon/service/RangeState.java
+++ b/src/main/java/org/altbeacon/beacon/service/RangeState.java
@@ -49,11 +49,15 @@ public Callback getCallback() {
     public void addBeacon(Beacon beacon) {
         if (mRangedBeacons.containsKey(beacon)) {
             RangedBeacon rangedBeacon = mRangedBeacons.get(beacon);
-            LogManager.d(TAG, "adding %s to existing range for: %s", beacon, rangedBeacon);
+            if (LogManager.isVerboseLoggingEnabled()) {
+                LogManager.d(TAG, "adding %s to existing range for: %s", beacon, rangedBeacon);
+            }
             rangedBeacon.updateBeacon(beacon);
         }
         else {
-            LogManager.d(TAG, "adding %s to new rangedBeacon", beacon);
+            if (LogManager.isVerboseLoggingEnabled()) {
+                LogManager.d(TAG, "adding %s to new rangedBeacon", beacon);
+            }
             mRangedBeacons.put(beacon, new RangedBeacon(beacon));
         }
     }
