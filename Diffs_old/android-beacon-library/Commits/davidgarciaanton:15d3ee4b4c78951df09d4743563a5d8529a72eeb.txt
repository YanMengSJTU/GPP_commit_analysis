diff --git a/build.gradle b/build.gradle
index a0e2a978..483895ff 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,68 +1,9 @@
-import groovyx.net.http.ContentType
-import org._10ne.gradle.rest.RestTask
-
-ext {
-    isSnapshot = !project.hasProperty('release')
-}
-
-/*
- * Gets the version name from the latest Git tag
- */
-def getVersionName = {
-    def stdout = new ByteArrayOutputStream()
-    try {
-        exec {
-            commandLine 'git', 'describe', '--tags'
-            standardOutput = stdout
-        }
-        return stdout.toString().trim()
-    }
-    catch (e) {
-        println("Can't get version from git: " + e);
-        return "adhoc"
-    }
-}
-
-buildscript {
-    repositories {
-        jcenter()
-    }
-
-    dependencies {
-        classpath 'com.android.tools.build:gradle:1.0.0'
-        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.0'
-        classpath 'org.robolectric:robolectric-gradle-plugin:0.14.1'
-        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.6'
-        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.0.1'
-        classpath "org._10ne.gradle:rest-gradle-plugin:0.3.1"
-    }
-}
-
-apply plugin: 'android-sdk-manager'
 apply plugin: "com.android.library"
-apply plugin: 'robolectric'
-
-allprojects {
-    version = "${getVersionName()}${isSnapshot == true ? "-SNAPSHOT" : ""}"
-    group = "org.altbeacon"
-
-    repositories {
-        jcenter()
-    }
-}
 
 android {
     compileSdkVersion 21
     buildToolsVersion "21.1.2"
 
-    defaultConfig {
-        minSdkVersion 7
-        targetSdkVersion 21
-        versionCode 1
-        versionName version
-        testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
-    }
-
     compileOptions {
         encoding "UTF-8"
         sourceCompatibility JavaVersion.VERSION_1_7
@@ -79,6 +20,11 @@ android {
         abortOnError false
     }
 
+    defaultConfig {
+        minSdkVersion 18
+        targetSdkVersion 21
+    }
+
     packagingOptions {
         exclude 'LICENSE.txt'
         exclude 'META-INF/LICENSE'
@@ -88,136 +34,7 @@ android {
 
 }
 
-robolectric.include '**/*Test.class'
 
 dependencies {
-    androidTestCompile 'org.hamcrest:hamcrest-integration:1.3'
-    androidTestCompile 'org.hamcrest:hamcrest-core:1.3'
-    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
-
-    androidTestCompile('junit:junit:4.11') {
-        exclude module: 'hamcrest-core'
-    }
-    androidTestCompile('com.squareup:fest-android:1.0.+@aar') {
-        exclude group: 'com.android.support', module: 'support-v4'
-    }
-    androidTestCompile('org.robolectric:robolectric:2.4') {
-        exclude module: 'classworlds'
-        exclude module: 'commons-logging'
-        exclude module: 'httpclient'
-        exclude module: 'maven-artifact'
-        exclude module: 'maven-artifact-manager'
-        exclude module: 'maven-error-diagnostics'
-        exclude module: 'maven-model'
-        exclude module: 'maven-project'
-        exclude module: 'maven-settings'
-        exclude module: 'plexus-container-default'
-        exclude module: 'plexus-interpolation'
-        exclude module: 'plexus-utils'
-        exclude module: 'wagon-file'
-        exclude module: 'wagon-http-lightweight'
-        exclude module: 'wagon-provider-api'
-        exclude group: 'com.android.support', module: 'support-v4'
-    }
-
-    androidTestCompile 'com.android.support:support-v4:21.0.2'
-}
-
-apply plugin: 'idea'
-
-idea {
-    module {
-        testOutputDir = file('build/test-classes/debug')
-    }
-}
-
-/** Bundling tasks for eclipse */
-task bundleEclipse << {
-    exec {
-        executable 'scripts/bundle-eclipse'
-    }
-}
-
-task distribution(dependsOn: ["bundleEclipse", "build", "clean"]) << {
-    println "Building with version=$version"
-}
-
-task release(dependsOn: 'distribution') << {
-    println('Doing release build')
-}
-
-android.libraryVariants.all { variant ->
-
-    task("generate${variant.name}Javadoc", type: Javadoc) {
-        title = "$name $version API"
-        description "Generates Javadoc for $variant.name."
-        source = variant.javaCompile.source
-        ext.androidJar =
-                "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
-        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
-        options.links("http://docs.oracle.com/javase/7/docs/api/");
-        options.links("http://d.android.com/reference/");
-        exclude '**/BuildConfig.java'
-        exclude '**/R.java'
-    }
-
-}
-
-build.mustRunAfter clean
-bundleEclipse.mustRunAfter build
-
-apply from: 'gradle/credentials.gradle'
-apply from: 'gradle/compile.gradle'
-apply from: 'gradle/publishing.gradle'
-apply from: 'gradle/bintray.gradle'
-apply from: 'gradle/artifactory.gradle'
-
-apply plugin: "org.10ne.rest"
-
-/**
- * Sign the content that has been uploaded to bintray. This must be done since the plugin does not support signing /
- * bintray doesn't auto sign if the private key requires a password.
- */
-task bintraySign(type: RestTask) {
-    description = "Sign the release build on bintray"
-    httpMethod = 'post'
-    uri = "https://api.bintray.com/gpg/$project_vendor/$project_bintray_repo/${project.name}/versions/$version"
-    username = bintrayUsername
-    password = bintrayKey
-    requestBody = [passphrase: signingPassword]
-    contentType = ContentType.JSON
-}
-
-/**
- * Publish the content that has been uploaded to bintray, so you don't need to go to the web ui.
- */
-task bintrayPublishContent(type: RestTask) {
-    description = 'Move files that have been uploaded to bintray to be published'
-    httpMethod = 'post'
-    uri = "https://api.bintray.com/content/$project_vendor/$project_bintray_repo/${project.name}/$version/publish"
-    username = bintrayUsername
-    password = bintrayKey
-    contentType = ContentType.JSON
 }
 
-/**
- * Publish uploaded content to maven central, so you don't need to go to the web ui.
- */
-task bintrayToMavenCentral(type: RestTask) {
-    description = 'Publish from bintray to maven central'
-    httpMethod = 'post'
-    uri = "https://api.bintray.com/maven_central_sync/$project_vendor/$project_bintray_repo/${project.name}/versions/$version"
-    username = bintrayUsername
-    password = bintrayKey
-    requestBody = [username: sonatypeUserName, password: sonatypePassword, close: 1]
-    contentType = ContentType.JSON
-}
-
-task bintrayRelease {
-    description = 'Releases a version of the library on Artifactory and Bintray'
-    dependsOn bintrayUpload
-    dependsOn bintrayPublishContent
-    dependsOn bintraySign
-    dependsOn bintrayPublishContent
-    dependsOn bintrayToMavenCentral
-}
diff --git a/src/main/java/org/altbeacon/beacon/startup/StartupBroadcastReceiver.java b/src/main/java/org/altbeacon/beacon/startup/StartupBroadcastReceiver.java
index 621fa853..2b15a85b 100644
--- a/src/main/java/org/altbeacon/beacon/startup/StartupBroadcastReceiver.java
+++ b/src/main/java/org/altbeacon/beacon/startup/StartupBroadcastReceiver.java
@@ -6,8 +6,6 @@
 import android.content.Intent;
 import android.util.Log;
 
-import org.altbeacon.beacon.BeaconIntentProcessor;
-import org.altbeacon.beacon.service.BeaconService;
 import org.altbeacon.beacon.BeaconManager;
 
 @TargetApi(4)
diff --git a/src/test/AndroidManifest.xml b/src/test/AndroidManifest.xml
deleted file mode 100644
index a885a555..00000000
--- a/src/test/AndroidManifest.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="org.altbeacon.beacon"
-    >
-
-    <uses-permission android:name="android.permission.BLUETOOTH"/>
-    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN"/>
-    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
-
-    <application>
-        <receiver android:name="org.altbeacon.beacon.startup.StartupBroadcastReceiver">
-            <intent-filter>
-                <action android:name="android.intent.action.BOOT_COMPLETED"/>
-                <action android:name="android.intent.action.ACTION_POWER_CONNECTED"/>
-                <action android:name="android.intent.action.ACTION_POWER_DISCONNECTED"/>
-            </intent-filter>
-        </receiver>
-
-        <service android:enabled="true"
-            android:exported="true"
-            android:isolatedProcess="false"
-            android:label="beacon"
-            android:name=".service.BeaconService"
-            />
-
-        <service android:enabled="true"
-            android:name=".BeaconIntentProcessor"
-            />
-
-    </application>
-
-</manifest>
