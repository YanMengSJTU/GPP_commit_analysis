diff --git a/src/main/java/org/altbeacon/beacon/BeaconManager.java b/src/main/java/org/altbeacon/beacon/BeaconManager.java
index fa057341..d38b0eb4 100644
--- a/src/main/java/org/altbeacon/beacon/BeaconManager.java
+++ b/src/main/java/org/altbeacon/beacon/BeaconManager.java
@@ -119,6 +119,7 @@
 
     private static boolean sAndroidLScanningDisabled = false;
     private static boolean sManifestCheckingDisabled = false;
+    private static boolean useCalibratedDeviceProfile = false;
 
     /**
      * Set to true if you want to show library debugging.
@@ -162,6 +163,14 @@ public static void setDebug(boolean debug) {
     private long backgroundScanPeriod = DEFAULT_BACKGROUND_SCAN_PERIOD;
     private long backgroundBetweenScanPeriod = DEFAULT_BACKGROUND_BETWEEN_SCAN_PERIOD;
 
+    public static boolean isUseCalibratedDeviceProfile() {
+        return useCalibratedDeviceProfile;
+    }
+
+    public static void setUseCalibratedDeviceProfile(boolean CalibratedDeviceProfile) {
+        useCalibratedDeviceProfile = CalibratedDeviceProfile;
+    }
+
     /**
      * Sets the duration in milliseconds of each Bluetooth LE scan cycle to look for beacons.
      * This function is used to setup the period before calling {@link #bind} or when switching
diff --git a/src/main/java/org/altbeacon/beacon/distance/ModelSpecificDistanceCalculator.java b/src/main/java/org/altbeacon/beacon/distance/ModelSpecificDistanceCalculator.java
index 99512c06..1f5b04a6 100644
--- a/src/main/java/org/altbeacon/beacon/distance/ModelSpecificDistanceCalculator.java
+++ b/src/main/java/org/altbeacon/beacon/distance/ModelSpecificDistanceCalculator.java
@@ -47,6 +47,7 @@
 public class ModelSpecificDistanceCalculator implements DistanceCalculator {
     Map<AndroidModel,DistanceCalculator> mModelMap;
     private static final String CONFIG_FILE = "model-distance-calculations.json";
+    private static final String CONFIG_FILE_CALIBRATED = "model-distance-calculations_calibrated.json";
     private static final String TAG = "ModelSpecificDistanceCalculator";
     private AndroidModel mDefaultModel;
     private DistanceCalculator mDistanceCalculator;
@@ -147,7 +148,15 @@ private void loadModelMap() {
     }
 
     private boolean loadModelMapFromFile() {
-        File file = new File(mContext.getFilesDir(), CONFIG_FILE);
+        File file = null;
+        LogManager.d(TAG, "Loading model map from file");
+        if(BeaconManager.isUseCalibratedDeviceProfile()) {
+            LogManager.d(TAG, "Loading model map from CONFIG_FILE_CALIBRATED");
+            file = new File(mContext.getFilesDir(), CONFIG_FILE_CALIBRATED);
+        } else {
+            LogManager.d(TAG, "Loading model map from CONFIG_FILE");
+            file = new File(mContext.getFilesDir(), CONFIG_FILE);
+        }
         FileInputStream inputStream = null;
         BufferedReader reader = null;
         StringBuilder sb = new StringBuilder();
@@ -176,6 +185,7 @@ private boolean loadModelMapFromFile() {
             }
         }
         try {
+            LogManager.d(TAG, "Profile File content %s", sb.toString());
             buildModelMap(sb.toString());
             return true;
         } catch (JSONException e) {
@@ -265,6 +275,8 @@ private void buildModelMap(String jsonString) throws JSONException {
 
             CurveFittedDistanceCalculator distanceCalculator =
                     new CurveFittedDistanceCalculator(coefficient1,coefficient2,coefficient3);
+            LogManager.w(TAG, "matched profile for Android device:" + version + " - " + buildNumber + " - " + model + " - " + manufacturer);
+            LogManager.w(TAG, "Coefficents are:" + coefficient1 + " - " + coefficient2 + " - " + coefficient3 );
 
             AndroidModel androidModel = new AndroidModel(version, buildNumber, model, manufacturer);
             mModelMap.put(androidModel, distanceCalculator);
@@ -277,7 +289,13 @@ private void buildModelMap(String jsonString) throws JSONException {
     private void loadDefaultModelMap() {
         mModelMap = new HashMap<AndroidModel, DistanceCalculator>();
         try {
-            buildModelMap(stringFromFilePath(CONFIG_FILE));
+            if(BeaconManager.isUseCalibratedDeviceProfile()) {
+                LogManager.d(TAG, "Loading model map from CONFIG_FILE_CALIBRATED");
+                buildModelMap(stringFromFilePath(CONFIG_FILE_CALIBRATED));
+            } else {
+                LogManager.d(TAG, "Loading model map from CONFIG_FILE");
+                buildModelMap(stringFromFilePath(CONFIG_FILE));
+            }
         }
         catch (Exception e) {
             LogManager.e(e, TAG, "Cannot build model distance calculations");
diff --git a/src/main/resources/model-distance-calculations_calibrated.json b/src/main/resources/model-distance-calculations_calibrated.json
new file mode 100644
index 00000000..11753f9d
--- /dev/null
+++ b/src/main/resources/model-distance-calculations_calibrated.json
@@ -0,0 +1,42 @@
+{
+  "models":
+  [
+    {
+      "coefficient1": 0.42093,
+      "coefficient2": 6.9476,
+      "coefficient3": 0.54992,
+      "version":"4.4.2",
+      "build_number":"KOT49H",
+      "model":"Nexus 4",
+      "manufacturer":"LGE"
+    },
+    {
+      "coefficient1": 0.42093,
+      "coefficient2": 6.9476,
+      "coefficient3": 0.54992,
+      "version":"4.4.2",
+      "build_number":"LPV79",
+      "model":"Nexus 5",
+      "manufacturer":"LGE",
+      "default": true
+    },
+    {
+      "coefficient1": -0.4150306,
+      "coefficient2": 1.9247993,
+      "coefficient3": 6.1033180,
+      "version":"4.4.4",
+      "build_number":"KTU84P",
+      "model":"GT-I9305",
+      "manufacturer":"SAMSUNG"
+    },
+    {
+      "coefficient1": 2.2652395,
+      "coefficient2": 0.3177642,
+      "coefficient3": 9.3759462,
+      "version":"5.0.1",
+      "build_number":"LRX22C",
+      "model":"SM-N910F",
+      "manufacturer":"SAMSUNG"
+    }
+  ]
+}
