diff --git a/build.gradle b/build.gradle
index 4ab2e3c0..c416bdb4 100644
--- a/build.gradle
+++ b/build.gradle
@@ -53,9 +53,10 @@ allprojects {
 android {
     // You cannot set a minSdk < Android O if targeting android-O.  Swap out the
     // commented lines below to test on Android O devices vs. earlier devices.
-    //compileSdkVersion 25
-    compileSdkVersion 'android-O'
-    buildToolsVersion '26.0.0-rc2'
+    //compileSdkVersion 'android-O'
+    //buildToolsVersion '26.0.0-rc2'
+    compileSdkVersion 25
+    buildToolsVersion "25.0.1"
 
     defaultConfig {
         // Unfortunately 'com.android.support:appcompat-v7:26.0.0-alpha1
@@ -63,8 +64,8 @@ android {
         minSdkVersion 14
         // You cannot set a minSdk < Android O if targeting android-O.  Swap out the
         // commented lines below to test on Android O devices vs. earlier devices.
-        //targetSdkVersion 25
-        targetSdkVersion 'O'
+        targetSdkVersion 23
+        //targetSdkVersion 'O'
         versionCode 1
         versionName version
         testInstrumentationRunner "com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner"
@@ -91,8 +92,11 @@ android {
 
 dependencies {
     compile fileTree ( dir: 'libs', include: ['*.jar'] )
-    // Docs say to use com.android.support:appcompat-v7:26.0.0-beta1, but that is not available
-    compile 'com.android.support:appcompat-v7:26.0.0-alpha1'
+    // You cannot set a minSdk < Android O if targeting android-O.  Swap out the
+    // commented lines below to test on Android O devices vs. earlier devices.
+    // For Android O Docs say to use com.android.support:appcompat-v7:26.0.0-beta1, but that is not available
+    //compile 'com.android.support:appcompat-v7:26.0.0-alpha1'
+    compile 'com.android.support:support-v4:25.1.0'
     compile 'com.android.support:support-annotations:24.2.1'
 
     testCompile('junit:junit:4.12') {
diff --git a/src/main/AndroidManifest.xml b/src/main/AndroidManifest.xml
index 995136cf..a27fcf75 100644
--- a/src/main/AndroidManifest.xml
+++ b/src/main/AndroidManifest.xml
@@ -5,47 +5,6 @@
     <uses-permission android:name="android.permission.BLUETOOTH" android:required="false"/>
     <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" android:required="false"/>
     <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
-    <!--
-06-04 23:00:12.489 3894-3894/? E/AndroidRuntime: FATAL EXCEPTION: main
-                                                 Process: org.altbeacon.beaconreference, PID: 3894
-                                                 java.lang.RuntimeException: Unable to create application org.altbeacon.beaconreference.BeaconReferenceApplication: java.lang.IllegalArgumentException: Error: requested job be persisted without holding RECEIVE_BOOT_COMPLETED permission.
-                                                     at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5788)
-                                                     at android.app.ActivityThread.-wrap1(Unknown Source:0)
-                                                     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1659)
-                                                     at android.os.Handler.dispatchMessage(Handler.java:105)
-                                                     at android.os.Looper.loop(Looper.java:164)
-                                                     at android.app.ActivityThread.main(ActivityThread.java:6535)
-                                                     at java.lang.reflect.Method.invoke(Native Method)
-                                                     at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)
-                                                     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)
-                                                  Caused by: java.lang.IllegalArgumentException: Error: requested job be persisted without holding RECEIVE_BOOT_COMPLETED permission.
-                                                     at android.os.Parcel.readException(Parcel.java:1940)
-                                                     at android.os.Parcel.readException(Parcel.java:1882)
-                                                     at android.app.job.IJobScheduler$Stub$Proxy.schedule(IJobScheduler.java:180)
-                                                     at android.app.JobSchedulerImpl.schedule(JobSchedulerImpl.java:44)
-                                                     at org.altbeacon.beacon.service.ScanJob.schedule(ScanJob.java:260)
-                                                     at org.altbeacon.beacon.service.ScanJob.applySettingsToScheduledJob(ScanJob.java:204)
-                                                     at org.altbeacon.beacon.service.ScanJob.applySettingsToScheduledJob(ScanJob.java:211)
-                                                     at org.altbeacon.beacon.BeaconManager.startMonitoringBeaconsInRegion(BeaconManager.java:874)
-                                                     at org.altbeacon.beacon.startup.RegionBootstrap$InternalBeaconConsumer.onBeaconServiceConnect(RegionBootstrap.java:155)
-                                                     at org.altbeacon.beacon.BeaconManager.bind(BeaconManager.java:378)
-                                                     at org.altbeacon.beacon.startup.RegionBootstrap.<init>(RegionBootstrap.java:58)
-                                                     at org.altbeacon.beaconreference.BeaconReferenceApplication.onCreate(BeaconReferenceApplication.java:60)
-                                                     at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1118)
-                                                     at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5785)
-                                                     at android.app.ActivityThread.-wrap1(Unknown Source:0) 
-                                                     at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1659) 
-                                                     at android.os.Handler.dispatchMessage(Handler.java:105) 
-                                                     at android.os.Looper.loop(Looper.java:164) 
-                                                     at android.app.ActivityThread.main(ActivityThread.java:6535) 
-                                                     at java.lang.reflect.Method.invoke(Native Method) 
-                                                     at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240) 
-                                                     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767) 
-
-    -->
-
-
-
     <uses-permission-sdk-23 android:name="android.permission.ACCESS_COARSE_LOCATION"/>
 
     <application>
diff --git a/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScannerForAndroidO.java b/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScannerForAndroidO.java
index fda5f246..0e424ad1 100644
--- a/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScannerForAndroidO.java
+++ b/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScannerForAndroidO.java
@@ -42,13 +42,14 @@ public void startAndroidOBackgroundScan(Set<BeaconParser> beaconParsers) {
             // We cannot build with a minSdk < Android O when using Android O preview APIs
             // so if you set an earlier minSdk to test against pre-O devices, you must comment out
             // the next few lines
-            int result = getBluetoothAdapter().getBluetoothLeScanner().startScan(filters, settings, callbackIntent);
-            if (result != 0) {
-                LogManager.e(TAG, "Failed to start background scan on Android O.  Code: "+result);
-            }
-            else {
-                LogManager.d(TAG, "Started passive beacon scan");
-            }
+            //int result = getBluetoothAdapter().getBluetoothLeScanner().startScan(filters, settings, callbackIntent);
+            //if (result != 0) {
+            //    LogManager.e(TAG, "Failed to start background scan on Android O.  Code: "+result);
+            //}
+            //else {
+            //    LogManager.d(TAG, "Started passive beacon scan");
+            //}
+            // End of lines that must be commented out when not compiling against Android O
          }
         catch (SecurityException e) {
             LogManager.e(TAG, "SecurityException making Android O background scanner");
