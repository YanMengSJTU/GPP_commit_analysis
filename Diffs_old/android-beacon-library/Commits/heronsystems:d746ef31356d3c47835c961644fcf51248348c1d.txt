diff --git a/CHANGELOG.md b/CHANGELOG.md
index 23ea1752..ea3d8a38 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,6 +1,8 @@
 ### Development
 
 Bug Fixes:
+ - Fix stack overflow caused by scan period of zero seconds, caused by 2.12 upgrade of existing
+  apps.  (#572, David G. Young)
  - Suppress error log on ScanState deserialization if file does not exist yet.
    (#570, David G. Young)
  - Turn off scanning after unbind, which was previously left on forever in some cases.
diff --git a/src/main/java/org/altbeacon/beacon/service/ScanJob.java b/src/main/java/org/altbeacon/beacon/service/ScanJob.java
index 57a41b8e..db2d104b 100644
--- a/src/main/java/org/altbeacon/beacon/service/ScanJob.java
+++ b/src/main/java/org/altbeacon/beacon/service/ScanJob.java
@@ -94,7 +94,7 @@ public void run() {
             }, mScanState.getScanJobRuntimeMillis());
         }
         else {
-            LogManager.i(TAG, "No monitored or ranged regions. Scan job complete.");
+            LogManager.i(TAG, "Scanning not started so Scan job is complete.");
             ScanJob.this.jobFinished(jobParameters , false);
         }
         return true;
@@ -159,10 +159,19 @@ private boolean restartScanning() {
         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
             mScanHelper.stopAndroidOBackgroundScan();
         }
-        mScanHelper.getCycledScanner().setScanPeriods(mScanState.getBackgroundMode() ? mScanState.getBackgroundScanPeriod() : mScanState.getForegroundScanPeriod(),
-                                      mScanState.getBackgroundMode() ? mScanState.getBackgroundBetweenScanPeriod() : mScanState.getForegroundBetweenScanPeriod(),
-                                      mScanState.getBackgroundMode());
+
+        long scanPeriod = mScanState.getBackgroundMode() ? mScanState.getBackgroundScanPeriod() : mScanState.getForegroundScanPeriod();
+        long betweenScanPeriod = mScanState.getBackgroundMode() ? mScanState.getBackgroundBetweenScanPeriod() : mScanState.getForegroundBetweenScanPeriod();
+        mScanHelper.getCycledScanner().setScanPeriods(scanPeriod,
+                                                      betweenScanPeriod,
+                                                      mScanState.getBackgroundMode());
         mInitialized = true;
+        if (scanPeriod <= 0) {
+            LogManager.w(TAG, "Starting scan with scan period of zero.  Exiting ScanJob.");
+            mScanHelper.getCycledScanner().stop();
+            return false;
+        }
+
         if (mScanHelper.getRangedRegionState().size() > 0 || mScanHelper.getMonitoringStatus().regions().size() > 0) {
             mScanHelper.getCycledScanner().start();
             return true;
