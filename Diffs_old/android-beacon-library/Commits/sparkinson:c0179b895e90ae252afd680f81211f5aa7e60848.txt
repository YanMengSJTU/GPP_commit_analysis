diff --git a/src/main/java/org/altbeacon/beacon/Beacon.java b/src/main/java/org/altbeacon/beacon/Beacon.java
index 340d6cb5..f551c1f5 100644
--- a/src/main/java/org/altbeacon/beacon/Beacon.java
+++ b/src/main/java/org/altbeacon/beacon/Beacon.java
@@ -403,7 +403,7 @@ public double getDistance() {
                 // we set the current rssi to be the short term max minus a longer term mean
                 // we are looking for short term changes
                 double mRunningMaxDistance = calculateDistance(mTxPower, mRunningMaxRssi);
-                double mRunningAverageDistance = Math.min(2.0, Math.max(0.25, mDistance));
+                double mRunningAverageDistance = Math.min(1.5, Math.max(0.0, mDistance));
                 mDistance = mRunningMaxDistance - mRunningAverageDistance;
                 LogManager.i(TAG, "calculated new distance: %s %s %s", mDistance, mRunningMaxDistance, mRunningAverageDistance);
             }
diff --git a/src/main/java/org/altbeacon/beacon/service/RunningMaxRssiFilter.java b/src/main/java/org/altbeacon/beacon/service/RunningMaxRssiFilter.java
index 1643f553..4670824d 100644
--- a/src/main/java/org/altbeacon/beacon/service/RunningMaxRssiFilter.java
+++ b/src/main/java/org/altbeacon/beacon/service/RunningMaxRssiFilter.java
@@ -39,7 +39,9 @@ public double calculateRssi() {
         refreshMeasurements();
         if (mMeasurements.size() == 0) return -1;
         LogManager.i(TAG, "Running max mRssi: %s", mMeasurements.get(mMeasurements.size()-1).rssi);
-        return (double) mMeasurements.get(mMeasurements.size()-1).rssi;
+        int size = mMeasurements.size();
+        if (size > 1) return (mMeasurements.get(size-1).rssi + mMeasurements.get(size-2).rssi)/2;
+        else return (double) mMeasurements.get(mMeasurements.size()-1).rssi;
     }
 
     private synchronized void refreshMeasurements() {
