diff --git a/src/main/java/org/altbeacon/beacon/service/BeaconService.java b/src/main/java/org/altbeacon/beacon/service/BeaconService.java
index 0a9354fa..91f86766 100644
--- a/src/main/java/org/altbeacon/beacon/service/BeaconService.java
+++ b/src/main/java/org/altbeacon/beacon/service/BeaconService.java
@@ -39,6 +39,7 @@
 import android.os.IBinder;
 import android.os.Message;
 import android.os.Messenger;
+import android.support.annotation.NonNull;
 
 import org.altbeacon.beacon.Beacon;
 import org.altbeacon.beacon.BeaconManager;
@@ -93,7 +94,7 @@
     private ExtraDataBeaconTracker mExtraDataBeaconTracker;
     private ExecutorService mExecutor;
     private final DistinctPacketDetector mDistinctPacketDetector = new DistinctPacketDetector();
-    
+
     /*
      * The scan period is how long we wait between restarting the BLE advertisement scans
      * Each time we restart we only see the unique advertisements once (e.g. unique beacons)
@@ -476,15 +477,22 @@ private void processBeaconFromScan(Beacon beacon) {
     }
 
 
-    private class ScanData {
-        public ScanData(BluetoothDevice device, int rssi, byte[] scanRecord) {
+    /**
+     * <strong>This class is not thread safe.</strong>
+     */
+    private static class ScanData {
+        ScanData(@NonNull BluetoothDevice device, int rssi, @NonNull byte[] scanRecord) {
             this.device = device;
             this.rssi = rssi;
             this.scanRecord = scanRecord;
         }
 
         int rssi;
+
+        @NonNull
         BluetoothDevice device;
+
+        @NonNull
         byte[] scanRecord;
     }
 
@@ -502,7 +510,7 @@ protected Void doInBackground(ScanData... params) {
             ScanData scanData = params[0];
             Beacon beacon = null;
 
-            for (BeaconParser parser : BeaconService.this.beaconParsers) {
+            for (BeaconParser parser : beaconParsers) {
                 beacon = parser.fromScanData(scanData.scanRecord,
                         scanData.rssi, scanData.device);
 
