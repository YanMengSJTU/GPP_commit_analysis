diff --git a/1_monitor/src/main/java/org/altbeacon/beacon/demo/monitor/MonitorBeaconActivity.java b/1_monitor/src/main/java/org/altbeacon/beacon/demo/monitor/MonitorBeaconActivity.java
index 08c5705c..1bb9f2e0 100755
--- a/1_monitor/src/main/java/org/altbeacon/beacon/demo/monitor/MonitorBeaconActivity.java
+++ b/1_monitor/src/main/java/org/altbeacon/beacon/demo/monitor/MonitorBeaconActivity.java
@@ -37,10 +37,15 @@ protected void onCreate(Bundle savedInstanceState) {
         tv_log = findViewById(R.id.tv_log);
         btn_scan = findViewById(R.id.btn_scan);
         btn_enable_bluetooth = findViewById(R.id.btn_enable_bluetooth);
+        initBeaconScanSettings();
         initUI();
 
     }
 
+    private void initBeaconScanSettings() {
+        BeaconManager.setRegionExitPeriod(5000);
+    }
+
     private void initUI() {
         if (bluetoothAvailable()) {
             boolean bluetoothEnabled = bluetoothEnabled();
@@ -59,13 +64,12 @@ private boolean bluetoothAvailable() {
     }
 
     private void updateSimulatorUI(boolean bluetoothEnabled) {
-        btn_scan.setEnabled(bluetoothEnabled);
         if (bluetoothEnabled) {
-            clear();
-            append(getString(R.string.scan_ready));
+            bindBeaconManager();
         } else {
+            btn_scan.setEnabled(false);
             clear();
-            append(getString(R.string.scan_ready));
+            append(getString(R.string.scan_not_ready));
         }
     }
 
@@ -110,21 +114,45 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
     }
 
 
-    private void scanBeacon() {
+    private void bindBeaconManager() {
         BeaconManager beaconManager = BeaconManager.getInstanceForApplication(this);
         beaconManager.addMonitorNotifier(this);
         beaconManager.bind(this);
     }
 
     public void append(final String log) {
-        runOnUiThread(() -> tv_log.append(log));
+        tv_log.append(log);
     }
 
     public void toggleSimulate(View view) {
+        if (btn_scan.getText().equals(getString(R.string.scan))) {
+            onScanRequested();
+        } else {
+            onStopRequested();
+        }
+
+    }
+
+    private void onStopRequested() {
+        stopBeacon();
+        append("\nBeacon scanning stopped.\n");
+        btn_scan.setText(R.string.scan);
+    }
+
+    private void stopBeacon() {
+        deregisterBeaconToBeMonitored(UuidProvider.beaconToMonitored());
+    }
+
+    private void onScanRequested() {
         append("\nBegin to scan beacon.\n");
+        btn_scan.setText(R.string.stop);
         scanBeacon();
     }
 
+    private void scanBeacon() {
+        registerBeaconToBeMonitored(UuidProvider.beaconToMonitored());
+    }
+
 
     @Override
     public void didEnterRegion(Region region) {
@@ -143,7 +171,10 @@ public void didDetermineStateForRegion(int state, Region region) {
 
     @Override
     public void onBeaconServiceConnect() {
-        registerBeaconToBeMonitored(UuidProvider.regionToBeSimulated());
+        clear();
+        append(getString(R.string.scan_ready));
+        btn_scan.setEnabled(true);
+
     }
 
     private void registerBeaconToBeMonitored(List<String> beacons) {
@@ -159,6 +190,19 @@ private void registerBeaconToBeMonitored(List<String> beacons) {
 
     }
 
+    private void deregisterBeaconToBeMonitored(List<String> beacons) {
+        try {
+            BeaconManager beaconManager = BeaconManager.getInstanceForApplication(this);
+            for (String beacon : beacons) {
+                append("stop monitoring beacon : " + beacon + "\n");
+                beaconManager.stopMonitoringBeaconsInRegion(UuidMapper.constructRegion(beacon));
+            }
+        } catch (RemoteException e) {
+            throw new RuntimeException(e);
+        }
+
+    }
+
     public void enableBluetooth(View view) {
         enableBluetooth();
     }
diff --git a/1_monitor/src/main/java/org/altbeacon/beacon/demo/monitor/UuidProvider.java b/1_monitor/src/main/java/org/altbeacon/beacon/demo/monitor/UuidProvider.java
index 43e0fe89..89aa816a 100755
--- a/1_monitor/src/main/java/org/altbeacon/beacon/demo/monitor/UuidProvider.java
+++ b/1_monitor/src/main/java/org/altbeacon/beacon/demo/monitor/UuidProvider.java
@@ -6,13 +6,13 @@
 public class UuidProvider {
 
     /**
-     * define the beacon that you want to scan.
+     * define the beacon uuid that you want to scan.
      *
      * @return the list of beacon that you would like to scan.
      */
-    public static List<String> regionToBeSimulated() {
+    public static List<String> beaconToMonitored() {
         List<String> result = new ArrayList<>();
-        result.add("DF7E1C79-43E9-44FF-886F-1D1F7DA6997A:1:1");
+        result.add("2F234454-CF6D-4A0F-ADF2-F4911BA9FFA6:1:2");
         return result;
     }
 }
\ No newline at end of file
diff --git a/1_monitor/src/main/res/layout/activity_monitor.xml b/1_monitor/src/main/res/layout/activity_monitor.xml
index 017891a9..0f978a2c 100755
--- a/1_monitor/src/main/res/layout/activity_monitor.xml
+++ b/1_monitor/src/main/res/layout/activity_monitor.xml
@@ -5,11 +5,17 @@
               android:orientation="vertical"
               android:padding="16dp">
 
-    <TextView
-        android:id="@+id/tv_log"
-        android:layout_width="wrap_content"
+    <ScrollView
+        android:layout_width="match_parent"
         android:layout_height="0dp"
-        android:layout_weight="1"/>
+        android:layout_weight="1">
+
+        <TextView
+            android:id="@+id/tv_log"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"/>
+    </ScrollView>
+
 
     <LinearLayout
         android:layout_width="match_parent"
diff --git a/1_monitor/src/main/res/values/strings.xml b/1_monitor/src/main/res/values/strings.xml
index f928e2c1..56d966b7 100755
--- a/1_monitor/src/main/res/values/strings.xml
+++ b/1_monitor/src/main/res/values/strings.xml
@@ -7,4 +7,5 @@
     <string name="enable_bluetooth">Enable Bluetooth</string>
     <string name="bluetooth_enabled">Bluetooth Enabled</string>
     <string name="bluetooth_not_available">Bluetooth Not Available. Please use a real device.</string>
+    <string name="stop">Stop</string>
 </resources>
