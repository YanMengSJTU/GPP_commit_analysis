diff --git a/CHANGELOG.md b/CHANGELOG.md
index 200b50e9..2cf32eb3 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -7,6 +7,7 @@ Bug Fixes:
    being overwritten when committing ranged beacon measurements. (#629, Aaron Kromer)
  - Fix missing running average RSSI in callbacks when apps do not use the
    scheduled scan job feature. (#630, Aaron Kromer)
+ - Fix copying of multi-frame beacon flag in `Beacon(Beacon)` constructor (#630, Aaron Kromer)
 
 ### 2.12.3 / 2017-10-14
 
diff --git a/src/main/java/org/altbeacon/beacon/Beacon.java b/src/main/java/org/altbeacon/beacon/Beacon.java
index 4a316129..eda74a7b 100644
--- a/src/main/java/org/altbeacon/beacon/Beacon.java
+++ b/src/main/java/org/altbeacon/beacon/Beacon.java
@@ -266,6 +266,8 @@ protected Beacon(Beacon otherBeacon) {
         this.mServiceUuid = otherBeacon.getServiceUuid();
         this.mBluetoothName = otherBeacon.mBluetoothName;
         this.mParserIdentifier = otherBeacon.mParserIdentifier;
+        this.mMultiFrameBeacon = otherBeacon.mMultiFrameBeacon;
+        this.mManufacturer = otherBeacon.mManufacturer;
     }
 
     /**
diff --git a/src/test/java/org/altbeacon/beacon/BeaconTest.java b/src/test/java/org/altbeacon/beacon/BeaconTest.java
index 4456543c..acd04145 100644
--- a/src/test/java/org/altbeacon/beacon/BeaconTest.java
+++ b/src/test/java/org/altbeacon/beacon/BeaconTest.java
@@ -268,7 +268,49 @@ public void parcelingBeaconContainsAllFields() {
                 )
         );
     }
-    
+
+    @Test
+    public void copyingBeaconContainsAllFields() {
+        final Beacon original = new Beacon.Builder().setBluetoothAddress("aa:bb:cc:dd:ee:ff")
+                                                    .setBluetoothName("Any Bluetooth")
+                                                    .setBeaconTypeCode(1)
+                                                    .setDataFields(Arrays.asList(2L, 3L))
+                                                    .setExtraDataFields(Arrays.asList(4L, 5L))
+                                                    .setId1("6")
+                                                    .setId2("7")
+                                                    .setId3("8")
+                                                    .setManufacturer(10)
+                                                    .setMultiFrameBeacon(true)
+                                                    .setParserIdentifier("Any Parser ID")
+                                                    .setRssi(-11)
+                                                    .setRunningAverageRssi(-12.3)
+                                                    .setServiceUuid(13)
+                                                    .setTxPower(14)
+                                                    .build();
+
+        final Beacon copied = new Beacon(original);
+        assertThat(
+                copied,
+                allOf(
+                        hasProperty("bluetoothAddress", equalTo("aa:bb:cc:dd:ee:ff")),
+                        hasProperty("bluetoothName", equalTo("Any Bluetooth")),
+                        hasProperty("beaconTypeCode", equalTo(1)),
+                        hasProperty("dataFields", equalTo(Arrays.asList(2L, 3L))),
+                        hasProperty("extraDataFields", equalTo(Arrays.asList(4L, 5L))),
+                        hasProperty("id1", equalTo(Identifier.fromInt(6))),
+                        hasProperty("id2", equalTo(Identifier.fromInt(7))),
+                        hasProperty("id3", equalTo(Identifier.fromInt(8))),
+                        hasProperty("manufacturer", equalTo(10)),
+                        hasProperty("multiFrameBeacon", equalTo(true)),
+                        hasProperty("parserIdentifier", equalTo("Any Parser ID")),
+                        hasProperty("rssi", equalTo(-11)),
+                        hasProperty("runningAverageRssi", equalTo(-12.3)),
+                        hasProperty("serviceUuid", equalTo(13)),
+                        hasProperty("txPower", equalTo(14))
+                )
+        );
+    }
+
     // utilty methods for testing serialization
 
     private byte[] convertToBytes(Object object) throws IOException {
