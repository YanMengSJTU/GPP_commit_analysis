diff --git a/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScanner.java b/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScanner.java
index 2a68e7bb..4b678233 100644
--- a/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScanner.java
+++ b/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScanner.java
@@ -157,8 +157,6 @@ public void stop() {
         mScanningEnabled = false;
         if (mScanCyclerStarted) {
             scanLeDevice(false);
-            LogManager.d(TAG, "forcing scanning to stop even for devices capable of multiple detections per cycle");
-            stopScan();
         } else {
             LogManager.d(TAG, "scanning already stopped");
         }
@@ -173,7 +171,20 @@ public void setDistinctPacketsDetectedPerScan(boolean detected) {
     }
 
     public void destroy() {
-        mScanThread.quit();
+        LogManager.d(TAG, "Destroying");
+        // We cannot quit the thread used by the handler until queued Runnables have been processed,
+        // because the handler is what stops scanning, and we do not want scanning left on.
+        // So we stop the thread using the handler, so we make sure it happens after all other
+        // waiting Runnables are finished.
+        mHandler.post(new Runnable() {
+            @Override
+            public void run() {
+                LogManager.d(TAG, "Quitting scan thread");
+                // Remove any postDelayed Runnables queued for the next scan cycle
+                mHandler.removeCallbacksAndMessages(null);
+                mScanThread.quit();
+            }
+        });
     }
 
     protected abstract void stopScan();
diff --git a/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScannerForLollipop.java b/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScannerForLollipop.java
index 82251314..44a2fa9e 100644
--- a/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScannerForLollipop.java
+++ b/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScannerForLollipop.java
@@ -223,6 +223,7 @@ private void postStopLeScan() {
             @Override
             public void run() {
                 try {
+                    LogManager.d(TAG, "Stopping LE scan on scan handler");
                     scanner.stopScan(scanCallback);
                 } catch (IllegalStateException e) {
                     LogManager.w(TAG, "Cannot stop scan. Bluetooth may be turned off.");
