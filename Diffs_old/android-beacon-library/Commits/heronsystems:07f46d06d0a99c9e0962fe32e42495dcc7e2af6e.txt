diff --git a/build.gradle b/build.gradle
index 74f028d4..a7c41e13 100644
--- a/build.gradle
+++ b/build.gradle
@@ -26,10 +26,10 @@ buildscript {
     repositories {
         jcenter()
         maven {
-            url 'https://dl.google.com/dl/android/maven2/'
+            url 'https://maven.google.com'
         }
         maven {
-            url 'https://maven.google.com'
+            url 'https://dl.google.com/dl/android/maven2/'
         }
     }
 
@@ -50,6 +50,12 @@ allprojects {
 
     repositories {
         jcenter()
+        maven {
+            url 'https://maven.google.com'
+        }
+        maven {
+            url 'https://dl.google.com/dl/android/maven2/'
+        }
     }
 }
 
@@ -58,8 +64,10 @@ android {
     buildToolsVersion '26.0.0'
 
     defaultConfig {
-        // Unfortunately 'com.android.support:appcompat-v7:26.0.0-alpha1
+        // Unfortunately 'com.android.support:appcompat-v7:26.0.0-beta1'
         // requires minSdkVersion 14, forcing a bump verson minSdkVersion 7
+        // But since only 0.8% of Android devices have < SDK 14 as of Une 2017, this will become
+        // the new min version for this library in order to target Android O
         minSdkVersion 14
         targetSdkVersion 26
         versionCode 1
@@ -88,7 +96,7 @@ android {
 
 dependencies {
     compile fileTree ( dir: 'libs', include: ['*.jar'] )
-    compile 'com.android.support:appcompat-v7:26.0.0-alpha1'
+    compile 'com.android.support:appcompat-v7:26.0.0-beta2'
     compile 'com.android.support:support-annotations:25.3.1'
 
     testCompile('junit:junit:4.12') {
diff --git a/src/main/java/org/altbeacon/beacon/service/ScanJob.java b/src/main/java/org/altbeacon/beacon/service/ScanJob.java
index efef71bd..7ba27c46 100644
--- a/src/main/java/org/altbeacon/beacon/service/ScanJob.java
+++ b/src/main/java/org/altbeacon/beacon/service/ScanJob.java
@@ -111,9 +111,7 @@ private void startPassiveScanIfNeeded() {
             LogManager.i(TAG, "We are inside a beacon region.  We will not scan between cycles.");
         }
         else {
-            // TODO: change this to check for Android O version when SDK is released
-            if (Build.VERSION.PREVIEW_SDK_INT> 0) {
-                LogManager.i(TAG, "We are outside all beacon regions.  We will scan between cycles.");
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
                 mScanHelper.startAndroidOBackgroundScan(mScanState.getBeaconParsers());
             }
             else {
@@ -155,8 +153,7 @@ private boolean restartScanning() {
         if (mScanHelper.getCycledScanner() == null) {
             mScanHelper.createCycledLeScanner(mScanState.getBackgroundMode(), null);
         }
-        // TODO: change this to check for Android O version when SDK is released
-        if (Build.VERSION.PREVIEW_SDK_INT > 0) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
             mScanHelper.stopAndroidOBackgroundScan();
         }
         mScanHelper.getCycledScanner().setScanPeriods(mScanState.getBackgroundMode() ? mScanState.getBackgroundScanPeriod() : mScanState.getForegroundScanPeriod(),
diff --git a/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScanner.java b/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScanner.java
index d9c48acc..89351cc1 100644
--- a/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScanner.java
+++ b/src/main/java/org/altbeacon/beacon/service/scanner/CycledLeScanner.java
@@ -122,18 +122,17 @@ public static CycledLeScanner createScanner(Context context, long scanPeriod, lo
             return null;
         }
 
-        if (android.os.Build.VERSION.SDK_INT < 21) {
-            LogManager.i(TAG, "This is not Android 5.0.  We are using old scanning APIs");
+        if (android.os.Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {
+            LogManager.i(TAG, "This is pre Android 5.0.  We are using old scanning APIs");
             useAndroidLScanner = false;
 
         }
-        // TODO: change this to check for Android O version when SDK is released
-        else if (Build.VERSION.PREVIEW_SDK_INT == 0) {
+        else if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O) {
             if (BeaconManager.isAndroidLScanningDisabled()) {
-                LogManager.i(TAG, "This Android 5.0, but L scanning is disabled. We are using old scanning APIs");
+                LogManager.i(TAG, "This is Android 5.0, but L scanning is disabled. We are using old scanning APIs");
                 useAndroidLScanner = false;
             } else {
-                LogManager.i(TAG, "This Android 5.0.  We are using new scanning APIs");
+                LogManager.i(TAG, "This is Android 5.0.  We are using new scanning APIs");
                 useAndroidLScanner = true;
             }
         }
