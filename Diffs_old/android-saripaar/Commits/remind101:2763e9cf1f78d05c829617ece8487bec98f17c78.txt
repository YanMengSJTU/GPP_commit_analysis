diff --git a/src/com/mobsandgeeks/saripaar/Validator.java b/src/com/mobsandgeeks/saripaar/Validator.java
index 3fec2be..e5802ef 100644
--- a/src/com/mobsandgeeks/saripaar/Validator.java
+++ b/src/com/mobsandgeeks/saripaar/Validator.java
@@ -406,7 +406,7 @@ public void removeRulesFor(View view) {
             // Validate views only if they are visible and enabled
             View view = pair.getView();
             if (view != null) {
-                if (!view.isShown() || !view.isEnabled()) continue;
+                if (view.getVisibility()!=View.VISIBLE || !view.isEnabled()) continue;
             }
             for (Rule rule : pair.getRules()) {
                 if (!rule.isValid(view)) {
diff --git a/tests/java/com/mobsandgeeks/saripaar/ValidatorTest.java b/tests/java/com/mobsandgeeks/saripaar/ValidatorTest.java
index 42c492b..411093d 100644
--- a/tests/java/com/mobsandgeeks/saripaar/ValidatorTest.java
+++ b/tests/java/com/mobsandgeeks/saripaar/ValidatorTest.java
@@ -3,8 +3,9 @@
 import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
-import android.support.v4.app.Fragment;
 import android.test.ActivityUnitTestCase;
+import android.view.ViewGroup;
+import android.widget.LinearLayout;
 import android.widget.TextView;
 
 import com.mobsandgeeks.saripaar.annotation.Required;
@@ -13,22 +14,19 @@
 
 public class ValidatorTest extends ActivityUnitTestCase<ValidatorTest.TestActivity> {
 
-    private Fragment fragment;
-    final String errorMessage = "Error";
     private Intent intent;
 
     public ValidatorTest() {
         super(ValidatorTest.TestActivity.class);
     }
 
-
     @Override
     protected void setUp() throws Exception {
         super.setUp();
         intent = new Intent(getInstrumentation().getTargetContext(), TestActivity.class);
     }
 
-    public void testRequiredAnnotation() {
+    public void testRequiredAnnotationPositive() {
         startActivity(intent, null, null);
         getActivity().validator.setValidationListener(new Validator.ValidationListener() {
             @Override
@@ -46,13 +44,41 @@ public void onServerMappingFinish(List<ViewErrorPair> mappingResults) {
                 assertTrue(false);
             }
         });
+        waitAnnotationProcess();
+        getActivity().textView.setText("test");
+        getActivity().validator.validate();
+    }
+
+    public void testRequiredAnnotationNegative() {
+        startActivity(intent, null, null);
+        getActivity().validator.setValidationListener(new Validator.ValidationListener() {
+            @Override
+            public void onValidationSucceeded() {
+                assertTrue(false);
+            }
+
+            @Override
+            public void onValidationFailed(List<ViewErrorPair> failedResults) {
+                assertTrue(true);
+            }
+
+            @Override
+            public void onServerMappingFinish(List<ViewErrorPair> mappingResults) {
+                assertTrue(false);
+            }
+        });
+        waitAnnotationProcess();
+        getActivity().textView.setText(null);
+        getActivity().validator.validate();
+    }
+
+    private void waitAnnotationProcess() {
         try {
             //Giving time for annotations to process
             Thread.sleep(100);
         } catch (InterruptedException e) {
             e.printStackTrace();
         }
-        getActivity().validator.validate();
     }
 
     public static class TestActivity extends Activity {
@@ -63,8 +89,20 @@ public void onServerMappingFinish(List<ViewErrorPair> mappingResults) {
         @Override
         protected void onCreate(Bundle savedInstanceState) {
             super.onCreate(savedInstanceState);
+            LinearLayout view = new LinearLayout(this);
+            view.setLayoutParams(
+                    new LinearLayout.LayoutParams(
+                            ViewGroup.LayoutParams.MATCH_PARENT,
+                            ViewGroup.LayoutParams.MATCH_PARENT)
+            );
             textView = new TextView(this);
-            textView.setText(null);
+            view.setLayoutParams(
+                    new LinearLayout.LayoutParams(
+                            ViewGroup.LayoutParams.MATCH_PARENT,
+                            ViewGroup.LayoutParams.WRAP_CONTENT)
+            );
+            view.addView(textView);
+            setContentView(view);
             validator = new Validator(this);
         }
     }
