diff --git a/src/com/mobsandgeeks/saripaar/TextViewBoundValidator.java b/src/com/mobsandgeeks/saripaar/TextViewBoundValidator.java
new file mode 100644
index 0000000..7355729
--- /dev/null
+++ b/src/com/mobsandgeeks/saripaar/TextViewBoundValidator.java
@@ -0,0 +1,37 @@
+package com.mobsandgeeks.saripaar;
+
+import android.view.View;
+import android.widget.TextView;
+import java.util.List;
+
+public class TextViewBoundValidator implements Validator.ValidationListener {
+    private Validator mValidator;
+
+    public TextViewBoundValidator(Validator validator) {
+        mValidator = validator;
+        mValidator.setValidationListener(this);
+    }
+
+    @Override
+    public void onValidationSucceeded() {
+        resetAllErrorTexts();
+    }
+
+    private void resetAllErrorTexts() {
+        List<Validator.ViewRulePair> fields = mValidator.getViewsAndRules();
+        for (Validator.ViewRulePair pair : fields ) {
+            if (pair.view instanceof TextView) {
+                ((TextView) pair.view).setError(null);
+            }
+        }
+    }
+
+    @Override
+    public void onValidationFailed(View failedView, Rule<?> failedRule) {
+        if (failedView instanceof TextView) {
+            TextView view = (TextView) failedView;
+            view.requestFocus();
+            view.setError(failedRule.getFailureMessage());
+        }
+    }
+}
\ No newline at end of file
diff --git a/src/com/mobsandgeeks/saripaar/Validator.java b/src/com/mobsandgeeks/saripaar/Validator.java
index faadbb8..1e4eb7a 100644
--- a/src/com/mobsandgeeks/saripaar/Validator.java
+++ b/src/com/mobsandgeeks/saripaar/Validator.java
@@ -335,6 +335,11 @@ public void removeRulesFor(View view) {
         }
     }
 
+    List<ViewRulePair> getViewsAndRules() {
+        ensureAnnotationsIsProcessed();
+        return mViewsAndRules;
+    }
+
     /**
      * Validates all rules added to this Validator.
      *
@@ -342,10 +347,7 @@ public void removeRulesFor(View view) {
      *          {@code ViewRulePair}.
      */
     private ViewRulePair validateAllRules() {
-        if (!mAnnotationsProcessed) {
-            createRulesFromAnnotations(getSaripaarAnnotatedFields());
-            mAnnotationsProcessed = true;
-        }
+        ensureAnnotationsIsProcessed();
 
         if (mViewsAndRules.size() == 0) {
             Log.i(TAG, "No rules found. Passing validation by default.");
@@ -370,6 +372,13 @@ private ViewRulePair validateAllRules() {
         return failedViewRulePair;
     }
 
+    private void ensureAnnotationsIsProcessed() {
+        if (!mAnnotationsProcessed) {
+            createRulesFromAnnotations(getSaripaarAnnotatedFields());
+            mAnnotationsProcessed = true;
+        }
+    }
+
     private void createRulesFromAnnotations(List<AnnotationFieldPair> annotationFieldPairs) {
         TextView passwordTextView = null;
         TextView confirmPasswordTextView = null;
@@ -531,7 +540,7 @@ private boolean isSaripaarAnnotation(Annotation annotation) {
                 annotationType.equals(TextRule.class);
     }
 
-    private class ViewRulePair {
+    class ViewRulePair {
         public View view;
         public Rule rule;
 
