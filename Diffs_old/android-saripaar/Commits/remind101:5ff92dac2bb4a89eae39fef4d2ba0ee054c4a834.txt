diff --git a/src/com/mobsandgeeks/saripaar/Validator.java b/src/com/mobsandgeeks/saripaar/Validator.java
index 66ed51d..7c63582 100644
--- a/src/com/mobsandgeeks/saripaar/Validator.java
+++ b/src/com/mobsandgeeks/saripaar/Validator.java
@@ -16,6 +16,7 @@
 
 import android.annotation.TargetApi;
 import android.app.Activity;
+import android.content.Context;
 import android.content.res.Resources;
 import android.content.res.TypedArray;
 import android.os.AsyncTask;
@@ -68,6 +69,7 @@
     private ValidationListener mValidationListener;
     private static DefaultErrorMessages messages = new DefaultErrorMessages();
     private Resources.Theme theme;
+    private int errorMessagesStyle;
 
     /**
      * Private constructor. Cannot be instantiated.
@@ -88,23 +90,25 @@ private Validator() {
 
     }
 
-    public <F extends Fragment> Validator(F fragment) {
+    public <F extends Fragment> Validator(F fragment, int errorMessagesStyle) {
         this();
         if (fragment == null) {
             throw new IllegalArgumentException("'controller' cannot be null");
         }
         mController = fragment;
-        theme = fragment.getActivity().getTheme();
+        this.errorMessagesStyle = errorMessagesStyle;
+        this.theme = fragment.getActivity().getTheme();
         initForm();
     }
 
-    public <A extends Activity> Validator(A activity) {
+    public <A extends Activity> Validator(A activity, int errorMessagesStyle) {
         this();
         if (activity == null) {
             throw new IllegalArgumentException("'controller' cannot be null");
         }
         mController = activity;
-        theme = activity.getTheme();
+        this.errorMessagesStyle = errorMessagesStyle;
+        this.theme = activity.getTheme();
         initForm();
     }
 
@@ -137,9 +141,13 @@ protected void onPostExecute(Void aVoid) {
     public void readDefaultErrorMessages() {
         TypedArray a = null;
         try {
-            TypedValue outValue = new TypedValue();
-            theme.resolveAttribute(R.attr.DefaultErrorStingsStyle, outValue, true);//getting reference to actual style for error codes
-            a = theme.obtainStyledAttributes(outValue.data, R.styleable.DefaultErrorStings);//getting the style and read attributes
+            if (errorMessagesStyle > 0) {
+                a = theme.obtainStyledAttributes(errorMessagesStyle, R.styleable.DefaultErrorStings);//getting the style if specified
+            } else {
+                TypedValue outValue = new TypedValue();
+                theme.resolveAttribute(R.attr.DefaultErrorStringsStyle, outValue, true);//getting reference to actual style for error codes
+                a = theme.obtainStyledAttributes(outValue.data, R.styleable.DefaultErrorStings);//getting the style and read attributes
+            }
             messages.setRequireRuleMessage(a.getString(R.styleable.DefaultErrorStings_requiredRule));
             messages.setRegExRuleMessage(a.getString(R.styleable.DefaultErrorStings_regExRule));
             messages.setTextRuleMessage(a.getString(R.styleable.DefaultErrorStings_textRule));
diff --git a/src/main/res/values/attrs.xml b/src/main/res/values/attrs.xml
index 75b780b..1f9e231 100644
--- a/src/main/res/values/attrs.xml
+++ b/src/main/res/values/attrs.xml
@@ -2,7 +2,7 @@
 <resources>
 
     <declare-styleable name="DefaultErrorStingsTheme">
-        <attr name="DefaultErrorStingsStyle" format="reference" />
+        <attr name="DefaultErrorStringsStyle" format="reference" />
     </declare-styleable>
 
     <declare-styleable name="DefaultErrorStings">
diff --git a/tests/java/com/mobsandgeeks/saripaar/BaseTestActivity.java b/tests/java/com/mobsandgeeks/saripaar/BaseTestActivity.java
index 998d195..9493f08 100644
--- a/tests/java/com/mobsandgeeks/saripaar/BaseTestActivity.java
+++ b/tests/java/com/mobsandgeeks/saripaar/BaseTestActivity.java
@@ -30,7 +30,7 @@ protected void onCreate(Bundle savedInstanceState) {
         textViewRequired = new TextView(this);
         addTestView(textViewRequired);
         setContentView(rootView);
-        validator = new Validator(this);
+        validator = new Validator(this, 0);
     }
 
     protected void addTestView(TextView textViewRequired) {
