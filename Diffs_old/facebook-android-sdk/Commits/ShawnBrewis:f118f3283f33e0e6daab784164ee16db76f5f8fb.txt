diff --git a/facebook/src/com/facebook/AuthorizationClient.java b/facebook/src/com/facebook/AuthorizationClient.java
index cbd308add..f9332797c 100644
--- a/facebook/src/com/facebook/AuthorizationClient.java
+++ b/facebook/src/com/facebook/AuthorizationClient.java
@@ -189,13 +189,19 @@ boolean onActivityResult(int requestCode, int resultCode, Intent data) {
         ArrayList<AuthHandler> handlers = new ArrayList<AuthHandler>();
 
         final SessionLoginBehavior behavior = request.getLoginBehavior();
+        
+        /*
+         * Removed to Force Authentication through a WebView, allowing us to use a proxy.
+         * 
         if (behavior.allowsKatanaAuth()) {
+        	
             if (!request.isLegacy()) {
                 handlers.add(new GetTokenAuthHandler());
                 handlers.add(new KatanaLoginDialogAuthHandler());
             }
-            handlers.add(new KatanaProxyAuthHandler());
+          handlers.add(new KatanaProxyAuthHandler());
         }
+        */
 
         if (behavior.allowsWebViewAuth()) {
             handlers.add(new WebViewAuthHandler());
diff --git a/facebook/src/com/facebook/Request.java b/facebook/src/com/facebook/Request.java
index cf2ba39f9..ca97ff294 100644
--- a/facebook/src/com/facebook/Request.java
+++ b/facebook/src/com/facebook/Request.java
@@ -34,7 +34,9 @@
 
 import java.io.*;
 import java.net.HttpURLConnection;
+import java.net.InetSocketAddress;
 import java.net.MalformedURLException;
+import java.net.Proxy;
 import java.net.URL;
 import java.net.URLEncoder;
 import java.text.SimpleDateFormat;
@@ -106,6 +108,11 @@
 
     private static final String MIME_BOUNDARY = "3i2ndDfv2rTHiSisAbouNdArYfORhtTPEefj3q2f";
 
+    //netcipher
+    private static final String ORBOT_HOST = "127.0.0.1";
+    private static final int ORBOT_HTTP_PORT = 8118;
+    private static final int ORBOT_SOCKS_PORT = 9050;
+    
     private static String defaultBatchApplicationId;
 
     private Session session;
@@ -1688,8 +1695,11 @@ public void run() {
     }
 
     static HttpURLConnection createConnection(URL url) throws IOException {
+    	Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(ORBOT_HOST, ORBOT_HTTP_PORT));
+    	//Proxy proxy = new Proxy(Proxy.Type.SOCKS, new InetSocketAddress(ORBOT_HOST, ORBOT_SOCKS_PORT));	
+    	
         HttpURLConnection connection;
-        connection = (HttpURLConnection) url.openConnection();
+        connection = (HttpURLConnection) url.openConnection(proxy);
 
         connection.setRequestProperty(USER_AGENT_HEADER, getUserAgent());
         connection.setRequestProperty(CONTENT_TYPE_HEADER, getMimeContentType());
diff --git a/facebook/src/com/facebook/widget/WebDialog.java b/facebook/src/com/facebook/widget/WebDialog.java
index 70ac868d2..0f8105fd6 100644
--- a/facebook/src/com/facebook/widget/WebDialog.java
+++ b/facebook/src/com/facebook/widget/WebDialog.java
@@ -43,6 +43,8 @@
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
 
+import info.guardianproject.onionkit.web.*;
+
 /**
  * This class provides a mechanism for displaying Facebook Web dialogs inside a Dialog. Helper
  * methods are provided to construct commonly-used dialogs, or a caller can specify arbitrary
@@ -72,6 +74,11 @@
 
     public static final int DEFAULT_THEME = android.R.style.Theme_Translucent_NoTitleBar;
 
+    //netcipher
+    private static final String ORBOT_HOST = "127.0.0.1";
+    private static final int ORBOT_HTTP_PORT = 8118;
+    private static final int ORBOT_SOCKS_PORT = 9050;
+    
     private String url;
     private OnCompleteListener onCompleteListener;
     private WebView webView;
@@ -80,6 +87,7 @@
     private FrameLayout contentFrameLayout;
     private boolean listenerCalled = false;
     private boolean isDetached = false;
+    private Context mContext;
 
     /**
      * Interface that implements a listener to be called when the user's interaction with the
@@ -132,6 +140,8 @@ public WebDialog(Context context, String url, int theme) {
     public WebDialog(Context context, String action, Bundle parameters, int theme, OnCompleteListener listener) {
         super(context, theme);
 
+        mContext = context;
+        
         if (parameters == null) {
             parameters = new Bundle();
         }
@@ -333,6 +343,14 @@ public void onClick(View v) {
     private void setUpWebView(int margin) {
         LinearLayout webViewContainer = new LinearLayout(getContext());
         webView = new WebView(getContext());
+        
+        try {
+			WebkitProxy.setProxy("android.app.Application", mContext.getApplicationContext() , ORBOT_HOST, ORBOT_HTTP_PORT);
+		} catch (Exception e) {
+			Utility.logd(LOG_TAG, "WebKitProxy: Error setting Proxy");
+			e.printStackTrace();
+		}
+        
         webView.setVerticalScrollBarEnabled(false);
         webView.setHorizontalScrollBarEnabled(false);
         webView.setWebViewClient(new DialogWebViewClient());
