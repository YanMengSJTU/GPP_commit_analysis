diff --git a/facebook/src/com/facebook/AccessToken.java b/facebook/src/com/facebook/AccessToken.java
index 28cbeb481..ad98c4529 100644
--- a/facebook/src/com/facebook/AccessToken.java
+++ b/facebook/src/com/facebook/AccessToken.java
@@ -14,14 +14,14 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.annotation.SuppressLint;
 import android.content.Intent;
 import android.os.Bundle;
 import android.text.TextUtils;
-import com.facebook.internal.Utility;
-import com.facebook.internal.Validate;
+import io.openkit.facebook.internal.Utility;
+import io.openkit.facebook.internal.Validate;
 
 import java.io.InvalidObjectException;
 import java.io.ObjectInputStream;
diff --git a/facebook/src/com/facebook/AccessTokenSource.java b/facebook/src/com/facebook/AccessTokenSource.java
index 8d231f1b1..86c08f813 100644
--- a/facebook/src/com/facebook/AccessTokenSource.java
+++ b/facebook/src/com/facebook/AccessTokenSource.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 /**
  * Indicates where a Facebook access token was obtained from.
diff --git a/facebook/src/com/facebook/AuthorizationClient.java b/facebook/src/com/facebook/AuthorizationClient.java
index f1f4348f9..17b78c881 100644
--- a/facebook/src/com/facebook/AuthorizationClient.java
+++ b/facebook/src/com/facebook/AuthorizationClient.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.Manifest;
 import android.app.Activity;
@@ -25,14 +25,14 @@
 import android.os.Bundle;
 import android.text.TextUtils;
 import android.webkit.CookieSyncManager;
-import com.facebook.android.R;
-import com.facebook.internal.ServerProtocol;
-import com.facebook.internal.Utility;
-import com.facebook.model.GraphMultiResult;
-import com.facebook.model.GraphObject;
-import com.facebook.model.GraphObjectList;
-import com.facebook.model.GraphUser;
-import com.facebook.widget.WebDialog;
+import io.openkit.facebook.android.R;
+import io.openkit.facebook.internal.ServerProtocol;
+import io.openkit.facebook.internal.Utility;
+import io.openkit.facebook.model.GraphMultiResult;
+import io.openkit.facebook.model.GraphObject;
+import io.openkit.facebook.model.GraphObjectList;
+import io.openkit.facebook.model.GraphUser;
+import io.openkit.facebook.widget.WebDialog;
 
 import java.io.Serializable;
 import java.util.ArrayList;
diff --git a/facebook/src/com/facebook/FacebookAuthorizationException.java b/facebook/src/com/facebook/FacebookAuthorizationException.java
index b8273e500..76800a72e 100644
--- a/facebook/src/com/facebook/FacebookAuthorizationException.java
+++ b/facebook/src/com/facebook/FacebookAuthorizationException.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 /**
  * An Exception indicating that a Session failed to open or obtain new permissions.
diff --git a/facebook/src/com/facebook/FacebookDialogException.java b/facebook/src/com/facebook/FacebookDialogException.java
index 0285837ad..c570b0449 100644
--- a/facebook/src/com/facebook/FacebookDialogException.java
+++ b/facebook/src/com/facebook/FacebookDialogException.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 /**
  * Represents an error condition relating to displaying a Facebook Web dialog.
diff --git a/facebook/src/com/facebook/FacebookException.java b/facebook/src/com/facebook/FacebookException.java
index 3525dbe47..d80f4ab74 100644
--- a/facebook/src/com/facebook/FacebookException.java
+++ b/facebook/src/com/facebook/FacebookException.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 /**
  * Represents an error condition specific to the Facebook SDK for Android.
diff --git a/facebook/src/com/facebook/FacebookGraphObjectException.java b/facebook/src/com/facebook/FacebookGraphObjectException.java
index a03828a9f..a661009ea 100644
--- a/facebook/src/com/facebook/FacebookGraphObjectException.java
+++ b/facebook/src/com/facebook/FacebookGraphObjectException.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 /**
- * Represents an error specific to the {@link com.facebook.model.GraphObject GraphObject} class.
+ * Represents an error specific to the {@link io.openkit.facebook.model.GraphObject GraphObject} class.
  */
 public class FacebookGraphObjectException extends FacebookException {
     static final long serialVersionUID = 1;
diff --git a/facebook/src/com/facebook/FacebookOperationCanceledException.java b/facebook/src/com/facebook/FacebookOperationCanceledException.java
index ed6d998db..faba91ccb 100644
--- a/facebook/src/com/facebook/FacebookOperationCanceledException.java
+++ b/facebook/src/com/facebook/FacebookOperationCanceledException.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 /**
  * An Exception indicating that an operation was canceled before it completed.
diff --git a/facebook/src/com/facebook/FacebookRequestError.java b/facebook/src/com/facebook/FacebookRequestError.java
index f4946c583..d9627e931 100644
--- a/facebook/src/com/facebook/FacebookRequestError.java
+++ b/facebook/src/com/facebook/FacebookRequestError.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
-import com.facebook.android.R;
-import com.facebook.internal.Utility;
+import io.openkit.facebook.android.R;
+import io.openkit.facebook.internal.Utility;
 import org.json.JSONException;
 import org.json.JSONObject;
 
diff --git a/facebook/src/com/facebook/FacebookSdkVersion.java b/facebook/src/com/facebook/FacebookSdkVersion.java
index f315c7c52..7463f9efa 100644
--- a/facebook/src/com/facebook/FacebookSdkVersion.java
+++ b/facebook/src/com/facebook/FacebookSdkVersion.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 final class FacebookSdkVersion {
     public static final String BUILD = "3.0.0";
diff --git a/facebook/src/com/facebook/FacebookServiceException.java b/facebook/src/com/facebook/FacebookServiceException.java
index d8a342941..687df5c1e 100644
--- a/facebook/src/com/facebook/FacebookServiceException.java
+++ b/facebook/src/com/facebook/FacebookServiceException.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 /**
  * Represents an error returned from the Facebook service in response to a request.
diff --git a/facebook/src/com/facebook/GetTokenClient.java b/facebook/src/com/facebook/GetTokenClient.java
index 6a284a77e..fbc112aea 100644
--- a/facebook/src/com/facebook/GetTokenClient.java
+++ b/facebook/src/com/facebook/GetTokenClient.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 
 import android.content.ComponentName;
diff --git a/facebook/src/com/facebook/HttpMethod.java b/facebook/src/com/facebook/HttpMethod.java
index 83936b091..a7ed6fa0f 100644
--- a/facebook/src/com/facebook/HttpMethod.java
+++ b/facebook/src/com/facebook/HttpMethod.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 /**
  * Enumeration of HTTP methods supported by Request
diff --git a/facebook/src/com/facebook/LegacyHelper.java b/facebook/src/com/facebook/LegacyHelper.java
index afcda0b26..f7dd06da4 100644
--- a/facebook/src/com/facebook/LegacyHelper.java
+++ b/facebook/src/com/facebook/LegacyHelper.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.os.Bundle;
 
diff --git a/facebook/src/com/facebook/LoggingBehavior.java b/facebook/src/com/facebook/LoggingBehavior.java
index 621bf64f8..17d3069cc 100644
--- a/facebook/src/com/facebook/LoggingBehavior.java
+++ b/facebook/src/com/facebook/LoggingBehavior.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 /**
  * Specifies different categories of logging messages that can be generated.
diff --git a/facebook/src/com/facebook/LoginActivity.java b/facebook/src/com/facebook/LoginActivity.java
index c95ed5cbd..f76d6a29b 100644
--- a/facebook/src/com/facebook/LoginActivity.java
+++ b/facebook/src/com/facebook/LoginActivity.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.app.Activity;
 import android.content.Intent;
@@ -27,7 +27,7 @@
  * AndroidManifest.xml to ensure proper handling of Facebook login.
  * <pre>
  * {@code
- * <activity android:name="com.facebook.LoginActivity"
+ * <activity android:name="io.openkit.facebook.LoginActivity"
  *           android:theme="@android:style/Theme.Translucent.NoTitleBar"
  *           android:label="@string/app_name" />
  * }
@@ -35,7 +35,7 @@
  * Do not start this activity directly.
  */
 public class LoginActivity extends Activity {
-    static final String RESULT_KEY = "com.facebook.LoginActivity:Result";
+    static final String RESULT_KEY = "io.openkit.facebook.LoginActivity:Result";
 
     private static final String NULL_CALLING_PKG_ERROR_MSG =
             "Cannot call LoginActivity with a null calling package. " +
diff --git a/facebook/src/com/facebook/NativeProtocol.java b/facebook/src/com/facebook/NativeProtocol.java
index c416b37f0..fc6b8f6b1 100644
--- a/facebook/src/com/facebook/NativeProtocol.java
+++ b/facebook/src/com/facebook/NativeProtocol.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.content.Context;
 import android.content.Intent;
@@ -24,15 +24,15 @@
 import android.content.pm.Signature;
 import android.os.Bundle;
 import android.text.TextUtils;
-import com.facebook.internal.Utility;
+import io.openkit.facebook.internal.Utility;
 
 import java.util.ArrayList;
 import java.util.List;
 
 final class NativeProtocol {
-    static final String KATANA_PACKAGE = "com.facebook.katana";
-    static final String KATANA_PROXY_AUTH_ACTIVITY = "com.facebook.katana.ProxyAuth";
-    static final String KATANA_TOKEN_REFRESH_ACTIVITY = "com.facebook.katana.platform.TokenRefreshService";
+    static final String KATANA_PACKAGE = "io.openkit.facebook.katana";
+    static final String KATANA_PROXY_AUTH_ACTIVITY = "io.openkit.facebook.katana.ProxyAuth";
+    static final String KATANA_TOKEN_REFRESH_ACTIVITY = "io.openkit.facebook.katana.platform.TokenRefreshService";
     static final String KATANA_SIGNATURE =
             "30820268308201d102044a9c4610300d06092a864886f70d0101040500307a310"
                     + "b3009060355040613025553310b30090603550408130243413112301006035504"
@@ -132,12 +132,12 @@ static Intent createTokenRefreshIntent(Context context) {
     // ---------------------------------------------------------------------------------------------
     // Native Protocol updated 2012-11
 
-    static final String INTENT_ACTION_PLATFORM_ACTIVITY = "com.facebook.platform.PLATFORM_ACTIVITY";
-    static final String INTENT_ACTION_PLATFORM_SERVICE = "com.facebook.platform.PLATFORM_SERVICE";
+    static final String INTENT_ACTION_PLATFORM_ACTIVITY = "io.openkit.facebook.platform.PLATFORM_ACTIVITY";
+    static final String INTENT_ACTION_PLATFORM_SERVICE = "io.openkit.facebook.platform.PLATFORM_SERVICE";
 
     static final int PROTOCOL_VERSION_20121101 = 20121101;
-    static final String EXTRA_PROTOCOL_VERSION = "com.facebook.platform.protocol.PROTOCOL_VERSION";
-    static final String EXTRA_PROTOCOL_ACTION = "com.facebook.platform.protocol.PROTOCOL_ACTION";
+    static final String EXTRA_PROTOCOL_VERSION = "io.openkit.facebook.platform.protocol.PROTOCOL_VERSION";
+    static final String EXTRA_PROTOCOL_ACTION = "io.openkit.facebook.platform.protocol.PROTOCOL_ACTION";
 
     // Messages supported by PlatformService:
     static final int MESSAGE_GET_ACCESS_TOKEN_REQUEST = 0x10000;
@@ -155,31 +155,31 @@ static Intent createTokenRefreshIntent(Context context) {
     // EXTRA_PERMISSIONS
 
     // Values of EXTRA_PROTOCOL_ACTION supported by PlatformActivity:
-    static final String ACTION_LOGIN_DIALOG = "com.facebook.platform.action.request.LOGIN_DIALOG";
+    static final String ACTION_LOGIN_DIALOG = "io.openkit.facebook.platform.action.request.LOGIN_DIALOG";
 
     // Values of EXTRA_PROTOCOL_ACTION values returned by PlatformActivity:
     static final String ACTION_LOGIN_DIALOG_REPLY =
-            "com.facebook.platform.action.reply.LOGIN_DIALOG";
+            "io.openkit.facebook.platform.action.reply.LOGIN_DIALOG";
 
     // Extras supported for ACTION_LOGIN_DIALOG:
-    static final String EXTRA_PERMISSIONS = "com.facebook.platform.extra.PERMISSIONS";
-    static final String EXTRA_WRITE_PRIVACY = "com.facebook.platform.extra.WRITE_PRIVACY";
-    static final String EXTRA_APPLICATION_ID = "com.facebook.platform.extra.APPLICATION_ID";
+    static final String EXTRA_PERMISSIONS = "io.openkit.facebook.platform.extra.PERMISSIONS";
+    static final String EXTRA_WRITE_PRIVACY = "io.openkit.facebook.platform.extra.WRITE_PRIVACY";
+    static final String EXTRA_APPLICATION_ID = "io.openkit.facebook.platform.extra.APPLICATION_ID";
 
     // Extras returned by setResult() for ACTION_LOGIN_DIALOG
-    static final String EXTRA_ACCESS_TOKEN = "com.facebook.platform.extra.ACCESS_TOKEN";
+    static final String EXTRA_ACCESS_TOKEN = "io.openkit.facebook.platform.extra.ACCESS_TOKEN";
     static final String EXTRA_EXPIRES_SECONDS_SINCE_EPOCH =
-            "com.facebook.platform.extra.EXPIRES_SECONDS_SINCE_EPOCH";
+            "io.openkit.facebook.platform.extra.EXPIRES_SECONDS_SINCE_EPOCH";
     // EXTRA_PERMISSIONS
 
     // Keys for status data in MESSAGE_ERROR_REPLY from PlatformService and for error
     // extras returned by PlatformActivity's setResult() in case of errors:
-    static final String STATUS_ERROR_TYPE = "com.facebook.platform.status.ERROR_TYPE";
+    static final String STATUS_ERROR_TYPE = "io.openkit.facebook.platform.status.ERROR_TYPE";
     static final String STATUS_ERROR_DESCRIPTION =
-            "com.facebook.platform.status.ERROR_DESCRIPTION";
-    static final String STATUS_ERROR_CODE = "com.facebook.platform.status.ERROR_CODE";
-    static final String STATUS_ERROR_SUBCODE = "com.facebook.platform.status.ERROR_SUBCODE";
-    static final String STATUS_ERROR_JSON = "com.facebook.platform.status.ERROR_JSON";
+            "io.openkit.facebook.platform.status.ERROR_DESCRIPTION";
+    static final String STATUS_ERROR_CODE = "io.openkit.facebook.platform.status.ERROR_CODE";
+    static final String STATUS_ERROR_SUBCODE = "io.openkit.facebook.platform.status.ERROR_SUBCODE";
+    static final String STATUS_ERROR_JSON = "io.openkit.facebook.platform.status.ERROR_JSON";
 
     // Expected values for ERROR_KEY_TYPE.  Clients should tolerate other values:
     static final String ERROR_UNKNOWN_ERROR = "UnknownError";
diff --git a/facebook/src/com/facebook/NonCachingTokenCachingStrategy.java b/facebook/src/com/facebook/NonCachingTokenCachingStrategy.java
index f055d5e92..d6fc8b2c9 100644
--- a/facebook/src/com/facebook/NonCachingTokenCachingStrategy.java
+++ b/facebook/src/com/facebook/NonCachingTokenCachingStrategy.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.os.Bundle;
 
diff --git a/facebook/src/com/facebook/Request.java b/facebook/src/com/facebook/Request.java
index 837ce4a65..e99b68fc9 100644
--- a/facebook/src/com/facebook/Request.java
+++ b/facebook/src/com/facebook/Request.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.graphics.Bitmap;
 import android.location.Location;
@@ -24,11 +24,11 @@
 import android.os.ParcelFileDescriptor;
 import android.text.TextUtils;
 import android.util.Pair;
-import com.facebook.internal.ServerProtocol;
-import com.facebook.model.*;
-import com.facebook.internal.Logger;
-import com.facebook.internal.Utility;
-import com.facebook.internal.Validate;
+import io.openkit.facebook.internal.ServerProtocol;
+import io.openkit.facebook.model.*;
+import io.openkit.facebook.internal.Logger;
+import io.openkit.facebook.internal.Utility;
+import io.openkit.facebook.internal.Validate;
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -1778,7 +1778,7 @@ public void writeLine(String format, Object... args) throws IOException {
 
     /**
      * Specifies the interface that consumers of
-     * {@link Request#executeMeRequestAsync(Session, com.facebook.Request.GraphUserCallback)}
+     * {@link Request#executeMeRequestAsync(Session, io.openkit.facebook.Request.GraphUserCallback)}
      * can use to be notified when the request completes, either successfully or with an error.
      */
     public interface GraphUserCallback {
@@ -1793,7 +1793,7 @@ public void writeLine(String format, Object... args) throws IOException {
 
     /**
      * Specifies the interface that consumers of
-     * {@link Request#executeMyFriendsRequestAsync(Session, com.facebook.Request.GraphUserListCallback)}
+     * {@link Request#executeMyFriendsRequestAsync(Session, io.openkit.facebook.Request.GraphUserListCallback)}
      * can use to be notified when the request completes, either successfully or with an error.
      */
     public interface GraphUserListCallback {
@@ -1808,7 +1808,7 @@ public void writeLine(String format, Object... args) throws IOException {
 
     /**
      * Specifies the interface that consumers of
-     * {@link Request#executePlacesSearchRequestAsync(Session, android.location.Location, int, int, String, com.facebook.Request.GraphPlaceListCallback)}
+     * {@link Request#executePlacesSearchRequestAsync(Session, android.location.Location, int, int, String, io.openkit.facebook.Request.GraphPlaceListCallback)}
      * can use to be notified when the request completes, either successfully or with an error.
      */
     public interface GraphPlaceListCallback {
diff --git a/facebook/src/com/facebook/RequestAsyncTask.java b/facebook/src/com/facebook/RequestAsyncTask.java
index 359836db0..1aacdb9f7 100644
--- a/facebook/src/com/facebook/RequestAsyncTask.java
+++ b/facebook/src/com/facebook/RequestAsyncTask.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.annotation.TargetApi;
 import android.os.AsyncTask;
diff --git a/facebook/src/com/facebook/RequestBatch.java b/facebook/src/com/facebook/RequestBatch.java
index de3f5517a..86590a437 100644
--- a/facebook/src/com/facebook/RequestBatch.java
+++ b/facebook/src/com/facebook/RequestBatch.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.os.Handler;
 
@@ -191,7 +191,7 @@ final void setBatchApplicationId(String batchApplicationId) {
      * Executes this batch asynchronously. This function will return immediately, and the batch will
      * be processed on a separate thread. In order to process results of a request, or determine
      * whether a request succeeded or failed, a callback must be specified (see
-     * {@link Request#setCallback(com.facebook.Request.Callback)})
+     * {@link Request#setCallback(io.openkit.facebook.Request.Callback)})
      * <p/>
      * This should only be called from the UI thread.
      *
diff --git a/facebook/src/com/facebook/Response.java b/facebook/src/com/facebook/Response.java
index dd13cf592..576915d04 100644
--- a/facebook/src/com/facebook/Response.java
+++ b/facebook/src/com/facebook/Response.java
@@ -14,12 +14,12 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.content.Context;
-import com.facebook.internal.*;
-import com.facebook.model.GraphObject;
-import com.facebook.model.GraphObjectList;
+import io.openkit.facebook.internal.*;
+import io.openkit.facebook.model.GraphObject;
+import io.openkit.facebook.model.GraphObjectList;
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
diff --git a/facebook/src/com/facebook/Session.java b/facebook/src/com/facebook/Session.java
index 694ccf3fb..527ac925b 100644
--- a/facebook/src/com/facebook/Session.java
+++ b/facebook/src/com/facebook/Session.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.app.Activity;
 import android.content.*;
@@ -23,9 +23,9 @@
 import android.support.v4.app.Fragment;
 import android.support.v4.content.LocalBroadcastManager;
 import android.util.Log;
-import com.facebook.internal.SessionAuthorizationType;
-import com.facebook.internal.Utility;
-import com.facebook.internal.Validate;
+import io.openkit.facebook.internal.SessionAuthorizationType;
+import io.openkit.facebook.internal.Utility;
+import io.openkit.facebook.internal.Validate;
 
 import java.io.*;
 import java.lang.ref.WeakReference;
@@ -68,49 +68,49 @@
      * web view error code is stored in the Bundle returned from
      * {@link #getAuthorizationBundle getAuthorizationBundle} under this key.
      */
-    public static final String WEB_VIEW_ERROR_CODE_KEY = "com.facebook.sdk.WebViewErrorCode";
+    public static final String WEB_VIEW_ERROR_CODE_KEY = "io.openkit.facebook.sdk.WebViewErrorCode";
 
     /**
      * If Session authorization fails and provides a failing url, the failing
      * url is stored in the Bundle returned from {@link #getAuthorizationBundle
      * getAuthorizationBundle} under this key.
      */
-    public static final String WEB_VIEW_FAILING_URL_KEY = "com.facebook.sdk.FailingUrl";
+    public static final String WEB_VIEW_FAILING_URL_KEY = "io.openkit.facebook.sdk.FailingUrl";
 
     /**
      * The action used to indicate that the active session has been set. This should
      * be used as an action in an IntentFilter and BroadcastReceiver registered with
      * the {@link android.support.v4.content.LocalBroadcastManager}.
      */
-    public static final String ACTION_ACTIVE_SESSION_SET = "com.facebook.sdk.ACTIVE_SESSION_SET";
+    public static final String ACTION_ACTIVE_SESSION_SET = "io.openkit.facebook.sdk.ACTIVE_SESSION_SET";
 
     /**
      * The action used to indicate that the active session has been set to null. This should
      * be used as an action in an IntentFilter and BroadcastReceiver registered with
      * the {@link android.support.v4.content.LocalBroadcastManager}.
      */
-    public static final String ACTION_ACTIVE_SESSION_UNSET = "com.facebook.sdk.ACTIVE_SESSION_UNSET";
+    public static final String ACTION_ACTIVE_SESSION_UNSET = "io.openkit.facebook.sdk.ACTIVE_SESSION_UNSET";
 
     /**
      * The action used to indicate that the active session has been opened. This should
      * be used as an action in an IntentFilter and BroadcastReceiver registered with
      * the {@link android.support.v4.content.LocalBroadcastManager}.
      */
-    public static final String ACTION_ACTIVE_SESSION_OPENED = "com.facebook.sdk.ACTIVE_SESSION_OPENED";
+    public static final String ACTION_ACTIVE_SESSION_OPENED = "io.openkit.facebook.sdk.ACTIVE_SESSION_OPENED";
 
     /**
      * The action used to indicate that the active session has been closed. This should
      * be used as an action in an IntentFilter and BroadcastReceiver registered with
      * the {@link android.support.v4.content.LocalBroadcastManager}.
      */
-    public static final String ACTION_ACTIVE_SESSION_CLOSED = "com.facebook.sdk.ACTIVE_SESSION_CLOSED";
+    public static final String ACTION_ACTIVE_SESSION_CLOSED = "io.openkit.facebook.sdk.ACTIVE_SESSION_CLOSED";
 
     /**
      * Session takes application id as a constructor parameter. If this is null,
      * Session will attempt to load the application id from
      * application/meta-data using this String as the key.
      */
-    public static final String APPLICATION_ID_PROPERTY = "com.facebook.sdk.ApplicationId";
+    public static final String APPLICATION_ID_PROPERTY = "io.openkit.facebook.sdk.ApplicationId";
 
     private static final Object STATIC_LOCK = new Object();
     private static Session activeSession;
@@ -121,8 +121,8 @@
     // day
     private static final int TOKEN_EXTEND_RETRY_SECONDS = 60 * 60; // 1 hour
 
-    private static final String SESSION_BUNDLE_SAVE_KEY = "com.facebook.sdk.Session.saveSessionKey";
-    private static final String AUTH_BUNDLE_SAVE_KEY = "com.facebook.sdk.Session.authBundleKey";
+    private static final String SESSION_BUNDLE_SAVE_KEY = "io.openkit.facebook.sdk.Session.saveSessionKey";
+    private static final String AUTH_BUNDLE_SAVE_KEY = "io.openkit.facebook.sdk.Session.authBundleKey";
     private static final String PUBLISH_PERMISSION_PREFIX = "publish";
     private static final String MANAGE_PERMISSION_PREFIX = "manage";
 
diff --git a/facebook/src/com/facebook/SessionDefaultAudience.java b/facebook/src/com/facebook/SessionDefaultAudience.java
index eaac2b369..caca394b4 100644
--- a/facebook/src/com/facebook/SessionDefaultAudience.java
+++ b/facebook/src/com/facebook/SessionDefaultAudience.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 /**
  * Certain operations such as publishing a status or publishing a photo require an audience. When the user
diff --git a/facebook/src/com/facebook/SessionLoginBehavior.java b/facebook/src/com/facebook/SessionLoginBehavior.java
index cc300dbd2..d5f178466 100644
--- a/facebook/src/com/facebook/SessionLoginBehavior.java
+++ b/facebook/src/com/facebook/SessionLoginBehavior.java
@@ -14,14 +14,14 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 /**
  * Specifies the behaviors to try during
- * {@link Session#openForRead(com.facebook.Session.OpenRequest) openForRead},
- * {@link Session#openForPublish(com.facebook.Session.OpenRequest) openForPublish},
- * {@link Session#requestNewReadPermissions(com.facebook.Session.NewPermissionsRequest) requestNewReadPermissions}, or
- * {@link Session#requestNewPublishPermissions(com.facebook.Session.NewPermissionsRequest) requestNewPublishPermissions}.
+ * {@link Session#openForRead(io.openkit.facebook.Session.OpenRequest) openForRead},
+ * {@link Session#openForPublish(io.openkit.facebook.Session.OpenRequest) openForPublish},
+ * {@link Session#requestNewReadPermissions(io.openkit.facebook.Session.NewPermissionsRequest) requestNewReadPermissions}, or
+ * {@link Session#requestNewPublishPermissions(io.openkit.facebook.Session.NewPermissionsRequest) requestNewPublishPermissions}.
  */
 public enum SessionLoginBehavior {
     /**
diff --git a/facebook/src/com/facebook/SessionState.java b/facebook/src/com/facebook/SessionState.java
index 45250624f..1b070d407 100644
--- a/facebook/src/com/facebook/SessionState.java
+++ b/facebook/src/com/facebook/SessionState.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 /**
  * <p>
diff --git a/facebook/src/com/facebook/Settings.java b/facebook/src/com/facebook/Settings.java
index f0a8f7ed0..15312d6a6 100644
--- a/facebook/src/com/facebook/Settings.java
+++ b/facebook/src/com/facebook/Settings.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.content.ContentResolver;
 import android.content.Context;
@@ -23,10 +23,10 @@
 import android.net.Uri;
 import android.os.AsyncTask;
 import android.os.Bundle;
-import com.facebook.android.BuildConfig;
-import com.facebook.internal.Utility;
-import com.facebook.model.GraphObject;
-import com.facebook.internal.Validate;
+import io.openkit.facebook.android.BuildConfig;
+import io.openkit.facebook.internal.Utility;
+import io.openkit.facebook.model.GraphObject;
+import io.openkit.facebook.internal.Validate;
 import org.json.JSONException;
 
 import java.lang.reflect.Field;
@@ -50,10 +50,10 @@
     private static final Object LOCK = new Object();
 
     private static final Uri ATTRIBUTION_ID_CONTENT_URI =
-            Uri.parse("content://com.facebook.katana.provider.AttributionIdProvider");
+            Uri.parse("content://io.openkit.facebook.katana.provider.AttributionIdProvider");
     private static final String ATTRIBUTION_ID_COLUMN_NAME = "aid";
 
-    private static final String ATTRIBUTION_PREFERENCES = "com.facebook.sdk.attributionTracking";
+    private static final String ATTRIBUTION_PREFERENCES = "io.openkit.facebook.sdk.attributionTracking";
     private static final String PUBLISH_ACTIVITY_PATH = "%s/activities";
     private static final String MOBILE_INSTALL_EVENT = "MOBILE_APP_INSTALL";
     private static final String SUPPORTS_ATTRIBUTION = "supports_attribution";
diff --git a/facebook/src/com/facebook/SharedPreferencesTokenCachingStrategy.java b/facebook/src/com/facebook/SharedPreferencesTokenCachingStrategy.java
index 9a1683528..17621b952 100644
--- a/facebook/src/com/facebook/SharedPreferencesTokenCachingStrategy.java
+++ b/facebook/src/com/facebook/SharedPreferencesTokenCachingStrategy.java
@@ -14,15 +14,15 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.util.Log;
-import com.facebook.internal.Logger;
-import com.facebook.internal.Utility;
-import com.facebook.internal.Validate;
+import io.openkit.facebook.internal.Logger;
+import io.openkit.facebook.internal.Utility;
+import io.openkit.facebook.internal.Validate;
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -45,7 +45,7 @@
  */
 public class SharedPreferencesTokenCachingStrategy extends TokenCachingStrategy {
 
-    private static final String DEFAULT_CACHE_KEY = "com.facebook.SharedPreferencesTokenCachingStrategy.DEFAULT_KEY";
+    private static final String DEFAULT_CACHE_KEY = "io.openkit.facebook.SharedPreferencesTokenCachingStrategy.DEFAULT_KEY";
     private static final String TAG = SharedPreferencesTokenCachingStrategy.class.getSimpleName();
 
     private static final String JSON_VALUE_TYPE = "valueType";
diff --git a/facebook/src/com/facebook/TestSession.java b/facebook/src/com/facebook/TestSession.java
index 0c6651812..66180a0d3 100644
--- a/facebook/src/com/facebook/TestSession.java
+++ b/facebook/src/com/facebook/TestSession.java
@@ -14,17 +14,17 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.app.Activity;
 import android.os.Bundle;
 import android.text.TextUtils;
 import android.util.Log;
-import com.facebook.model.GraphObject;
-import com.facebook.model.GraphObjectList;
-import com.facebook.internal.Logger;
-import com.facebook.internal.Utility;
-import com.facebook.internal.Validate;
+import io.openkit.facebook.model.GraphObject;
+import io.openkit.facebook.model.GraphObjectList;
+import io.openkit.facebook.internal.Logger;
+import io.openkit.facebook.internal.Utility;
+import io.openkit.facebook.internal.Validate;
 import org.json.JSONException;
 import org.json.JSONObject;
 
diff --git a/facebook/src/com/facebook/TokenCachingStrategy.java b/facebook/src/com/facebook/TokenCachingStrategy.java
index cb3271ac8..cbe0512bc 100644
--- a/facebook/src/com/facebook/TokenCachingStrategy.java
+++ b/facebook/src/com/facebook/TokenCachingStrategy.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.os.Bundle;
-import com.facebook.internal.Validate;
+import io.openkit.facebook.internal.Validate;
 
 import java.util.ArrayList;
 import java.util.Date;
@@ -44,40 +44,40 @@
      * The key used by Session to store the token value in the Bundle during
      * load and save.
      */
-    public static final String TOKEN_KEY = "com.facebook.TokenCachingStrategy.Token";
+    public static final String TOKEN_KEY = "io.openkit.facebook.TokenCachingStrategy.Token";
 
     /**
      * The key used by Session to store the expiration date value in the Bundle
      * during load and save.
      */
-    public static final String EXPIRATION_DATE_KEY = "com.facebook.TokenCachingStrategy.ExpirationDate";
+    public static final String EXPIRATION_DATE_KEY = "io.openkit.facebook.TokenCachingStrategy.ExpirationDate";
 
     /**
      * The key used by Session to store the last refresh date value in the
      * Bundle during load and save.
      */
-    public static final String LAST_REFRESH_DATE_KEY = "com.facebook.TokenCachingStrategy.LastRefreshDate";
+    public static final String LAST_REFRESH_DATE_KEY = "io.openkit.facebook.TokenCachingStrategy.LastRefreshDate";
 
     /**
      * The key used by Session to store the user's id value in the Bundle during
      * load and save.
      */
-    public static final String USER_FBID_KEY = "com.facebook.TokenCachingStrategy.UserFBID";
+    public static final String USER_FBID_KEY = "io.openkit.facebook.TokenCachingStrategy.UserFBID";
 
     /**
      * The key used by Session to store an enum indicating the source of the token
      * in the Bundle during load and save.
      */
-    public static final String TOKEN_SOURCE_KEY = "com.facebook.TokenCachingStrategy.AccessTokenSource";
+    public static final String TOKEN_SOURCE_KEY = "io.openkit.facebook.TokenCachingStrategy.AccessTokenSource";
 
     /**
      * The key used by Session to store the list of permissions granted by the
      * token in the Bundle during load and save.
      */
-    public static final String PERMISSIONS_KEY = "com.facebook.TokenCachingStrategy.Permissions";
+    public static final String PERMISSIONS_KEY = "io.openkit.facebook.TokenCachingStrategy.Permissions";
 
     private static final long INVALID_BUNDLE_MILLISECONDS = Long.MIN_VALUE;
-    private static final String IS_SSO_KEY = "com.facebook.TokenCachingStrategy.IsSSO";
+    private static final String IS_SSO_KEY = "io.openkit.facebook.TokenCachingStrategy.IsSSO";
 
     /**
      * Called during Session construction to get the token state. Typically this
diff --git a/facebook/src/com/facebook/UiLifecycleHelper.java b/facebook/src/com/facebook/UiLifecycleHelper.java
index 5d42267f6..f5f98e0d5 100644
--- a/facebook/src/com/facebook/UiLifecycleHelper.java
+++ b/facebook/src/com/facebook/UiLifecycleHelper.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook;
+package io.openkit.facebook;
 
 import android.app.Activity;
 import android.content.BroadcastReceiver;
diff --git a/facebook/src/com/facebook/android/AsyncFacebookRunner.java b/facebook/src/com/facebook/android/AsyncFacebookRunner.java
index 2420fd4b3..1bbf331bf 100644
--- a/facebook/src/com/facebook/android/AsyncFacebookRunner.java
+++ b/facebook/src/com/facebook/android/AsyncFacebookRunner.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.android;
+package io.openkit.facebook.android;
 
 import android.content.Context;
 import android.os.Bundle;
@@ -65,7 +65,7 @@ public AsyncFacebookRunner(Facebook fb) {
      * in a background thread; operations that affect the UI will need to be
      * posted to the UI thread or an appropriate handler.
      * <p/>
-     * This method is deprecated.  See {@link Facebook} and {@link com.facebook.Session} for more info.
+     * This method is deprecated.  See {@link Facebook} and {@link io.openkit.facebook.Session} for more info.
      *
      * @param context
      *            The Android context in which the logout should be called: it
@@ -127,7 +127,7 @@ public void logout(final Context context, final RequestListener listener) {
      *  String response = request(parameters);
      * </code>
      * <p/>
-     * This method is deprecated.  See {@link Facebook} and {@link com.facebook.Request} for more info.
+     * This method is deprecated.  See {@link Facebook} and {@link io.openkit.facebook.Request} for more info.
      *
      * @param parameters
      *            Key-value pairs of parameters to the request. Refer to the
@@ -161,7 +161,7 @@ public void request(Bundle parameters, RequestListener listener) {
      * in a background thread; operations that affect the UI will need to be
      * posted to the UI thread or an appropriate handler.
      * <p/>
-     * This method is deprecated.  See {@link Facebook} and {@link com.facebook.Request} for more info.
+     * This method is deprecated.  See {@link Facebook} and {@link io.openkit.facebook.Request} for more info.
      *
      * @param graphPath
      *            Path to resource in the Facebook graph, e.g., to fetch data
@@ -197,7 +197,7 @@ public void request(String graphPath, RequestListener listener) {
      * in a background thread; operations that affect the UI will need to be
      * posted to the UI thread or an appropriate handler.
      * <p/>
-     * This method is deprecated.  See {@link Facebook} and {@link com.facebook.Request} for more info.
+     * This method is deprecated.  See {@link Facebook} and {@link io.openkit.facebook.Request} for more info.
      *
      * @param graphPath
      *            Path to resource in the Facebook graph, e.g., to fetch data
@@ -242,7 +242,7 @@ public void request(String graphPath,
      * in a background thread; operations that affect the UI will need to be
      * posted to the UI thread or an appropriate handler.
      * <p/>
-     * This method is deprecated.  See {@link Facebook} and {@link com.facebook.Request} for more info.
+     * This method is deprecated.  See {@link Facebook} and {@link io.openkit.facebook.Request} for more info.
      *
      * @param graphPath
      *            Path to resource in the Facebook graph, e.g., to fetch data
@@ -292,7 +292,7 @@ public void request(final String graphPath,
      * request. It will be set to the value passed when originally calling the
      * request method, or null if none was passed.
      * <p/>
-     * This interface is deprecated.  See {@link Facebook} and {@link com.facebook.Request} for more info.
+     * This interface is deprecated.  See {@link Facebook} and {@link io.openkit.facebook.Request} for more info.
      */
     @Deprecated
     public static interface RequestListener {
diff --git a/facebook/src/com/facebook/android/DialogError.java b/facebook/src/com/facebook/android/DialogError.java
index a99c4e613..1c917cc2d 100644
--- a/facebook/src/com/facebook/android/DialogError.java
+++ b/facebook/src/com/facebook/android/DialogError.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.android;
+package io.openkit.facebook.android;
 
 /**
  * Encapsulation of Dialog Error.
@@ -23,7 +23,7 @@
  * <p/>
  * All public members of this class are intentionally deprecated.
  * New code should instead use
- * {@link com.facebook.FacebookException}
+ * {@link io.openkit.facebook.FacebookException}
  * <p/>
  * Adding @Deprecated to this class causes warnings in other deprecated classes
  * that reference this one.  That is the only reason this entire class is not
diff --git a/facebook/src/com/facebook/android/Facebook.java b/facebook/src/com/facebook/android/Facebook.java
index 2b439e7d7..f5de1cd79 100644
--- a/facebook/src/com/facebook/android/Facebook.java
+++ b/facebook/src/com/facebook/android/Facebook.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.android;
+package io.openkit.facebook.android;
 
 import android.Manifest;
 import android.app.Activity;
@@ -26,8 +26,8 @@
 import android.content.pm.Signature;
 import android.net.Uri;
 import android.os.*;
-import com.facebook.*;
-import com.facebook.Session.StatusCallback;
+import io.openkit.facebook.*;
+import io.openkit.facebook.Session.StatusCallback;
 
 import java.io.FileNotFoundException;
 import java.io.IOException;
@@ -44,7 +44,7 @@
  * New code should instead use
  * {@link Session} to manage session state,
  * {@link Request} to make API requests, and
- * {@link com.facebook.widget.WebDialog} to make dialog requests.
+ * {@link io.openkit.facebook.widget.WebDialog} to make dialog requests.
  * <p/>
  * Adding @Deprecated to this class causes warnings in other deprecated classes
  * that reference this one.  That is the only reason this entire class is not
@@ -68,7 +68,7 @@
 
     @Deprecated
     public static final Uri ATTRIBUTION_ID_CONTENT_URI =
-        Uri.parse("content://com.facebook.katana.provider.AttributionIdProvider");
+        Uri.parse("content://io.openkit.facebook.katana.provider.AttributionIdProvider");
     @Deprecated
     public static final String ATTRIBUTION_ID_COLUMN_NAME = "aid";
 
@@ -458,10 +458,10 @@ public boolean extendAccessToken(Context context, ServiceListener serviceListene
         checkUserSession("extendAccessToken");
         Intent intent = new Intent();
 
-        intent.setClassName("com.facebook.katana", "com.facebook.katana.platform.TokenRefreshService");
+        intent.setClassName("io.openkit.facebook.katana", "io.openkit.facebook.katana.platform.TokenRefreshService");
 
         // Verify that the application whose package name is
-        // com.facebook.katana
+        // io.openkit.facebook.katana
         // has the expected FB app signature.
         if (!validateServiceIntent(context, intent)) {
             return false;
@@ -812,7 +812,7 @@ String requestImpl(String graphPath, Bundle params, String httpMethod) throws Fi
      * Note that this method is asynchronous and the callback will be invoked in
      * the original calling thread (not in a background thread).
      *
-     * This method is deprecated. See {@link com.facebook.widget.WebDialog}.
+     * This method is deprecated. See {@link io.openkit.facebook.widget.WebDialog}.
      *
      * @param context
      *            The Android context in which we will generate this dialog.
@@ -835,7 +835,7 @@ public void dialog(Context context, String action, DialogListener listener) {
      * Note that this method is asynchronous and the callback will be invoked in
      * the original calling thread (not in a background thread).
      *
-     * This method is deprecated. See {@link com.facebook.widget.WebDialog}.
+     * This method is deprecated. See {@link io.openkit.facebook.widget.WebDialog}.
      * 
      * @param context
      *            The Android context in which we will generate this dialog.
@@ -1248,7 +1248,7 @@ public boolean publishInstall(final Context context) {
      * <p/>
      * All public members of this class are intentionally deprecated.
      * New code should instead use
-     * {@link com.facebook.widget.WebDialog}
+     * {@link io.openkit.facebook.widget.WebDialog}
      * <p/>
      * Adding @Deprecated to this class causes warnings in other deprecated classes
      * that reference this one.  That is the only reason this entire class is not
diff --git a/facebook/src/com/facebook/android/FacebookError.java b/facebook/src/com/facebook/android/FacebookError.java
index 41ae794fc..2539078bd 100644
--- a/facebook/src/com/facebook/android/FacebookError.java
+++ b/facebook/src/com/facebook/android/FacebookError.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.android;
+package io.openkit.facebook.android;
 
 /**
  * Encapsulation of a Facebook Error: a Facebook request that could not be
@@ -24,7 +24,7 @@
  * <p/>
  * All public members of this class are intentionally deprecated.
  * New code should instead use
- * {@link com.facebook.FacebookException}
+ * {@link io.openkit.facebook.FacebookException}
  * <p/>
  * Adding @Deprecated to this class causes warnings in other deprecated classes
  * that reference this one.  That is the only reason this entire class is not
diff --git a/facebook/src/com/facebook/android/FbDialog.java b/facebook/src/com/facebook/android/FbDialog.java
index 603e69280..425c55ebf 100644
--- a/facebook/src/com/facebook/android/FbDialog.java
+++ b/facebook/src/com/facebook/android/FbDialog.java
@@ -14,16 +14,16 @@
  * limitations under the License.
  */
 
-package com.facebook.android;
+package io.openkit.facebook.android;
 
 import android.content.Context;
 import android.os.Bundle;
-import com.facebook.*;
-import com.facebook.android.Facebook.DialogListener;
-import com.facebook.widget.WebDialog;
+import io.openkit.facebook.*;
+import io.openkit.facebook.android.Facebook.DialogListener;
+import io.openkit.facebook.widget.WebDialog;
 
 /**
- * This class is deprecated. See {@link com.facebook.widget.WebDialog}.
+ * This class is deprecated. See {@link io.openkit.facebook.widget.WebDialog}.
  */
 @Deprecated
 public class FbDialog extends WebDialog {
diff --git a/facebook/src/com/facebook/android/Util.java b/facebook/src/com/facebook/android/Util.java
index 231c1e78c..476afc020 100644
--- a/facebook/src/com/facebook/android/Util.java
+++ b/facebook/src/com/facebook/android/Util.java
@@ -14,12 +14,12 @@
  * limitations under the License.
  */
 
-package com.facebook.android;
+package io.openkit.facebook.android;
 
 import android.app.AlertDialog.Builder;
 import android.content.Context;
 import android.os.Bundle;
-import com.facebook.internal.Utility;
+import io.openkit.facebook.internal.Utility;
 import org.json.JSONException;
 import org.json.JSONObject;
 
@@ -33,7 +33,7 @@
  * <p/>
  * All public members of this class are intentionally deprecated.
  * New code should instead use
- * {@link com.facebook.Request}
+ * {@link io.openkit.facebook.Request}
  * <p/>
  * Adding @Deprecated to this class causes warnings in other deprecated classes
  * that reference this one.  That is the only reason this entire class is not
diff --git a/facebook/src/com/facebook/internal/CacheableRequestBatch.java b/facebook/src/com/facebook/internal/CacheableRequestBatch.java
index 26a1595c2..a19bd1056 100644
--- a/facebook/src/com/facebook/internal/CacheableRequestBatch.java
+++ b/facebook/src/com/facebook/internal/CacheableRequestBatch.java
@@ -14,13 +14,13 @@
  * limitations under the License.
  */
 
-package com.facebook.internal;
+package io.openkit.facebook.internal;
 
-import com.facebook.Request;
-import com.facebook.RequestBatch;
+import io.openkit.facebook.Request;
+import io.openkit.facebook.RequestBatch;
 
 /**
- * com.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
+ * io.openkit.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
  * any of the classes in this package is unsupported, and they may be modified or removed without warning at
  * any time.
  */
diff --git a/facebook/src/com/facebook/internal/FileLruCache.java b/facebook/src/com/facebook/internal/FileLruCache.java
index 1fe81b5e1..8d1776352 100644
--- a/facebook/src/com/facebook/internal/FileLruCache.java
+++ b/facebook/src/com/facebook/internal/FileLruCache.java
@@ -14,12 +14,12 @@
  * limitations under the License.
  */
 
-package com.facebook.internal;
+package io.openkit.facebook.internal;
 
 import android.content.Context;
 import android.util.Log;
-import com.facebook.LoggingBehavior;
-import com.facebook.Settings;
+import io.openkit.facebook.LoggingBehavior;
+import io.openkit.facebook.Settings;
 import org.json.JSONException;
 import org.json.JSONObject;
 import org.json.JSONTokener;
@@ -51,7 +51,7 @@
 // we only have to ensure that there is at most one trim() process deleting files at any given time.
 
 /**
- * com.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
+ * io.openkit.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
  * any of the classes in this package is unsupported, and they may be modified or removed without warning at
  * any time.
  */
diff --git a/facebook/src/com/facebook/internal/Logger.java b/facebook/src/com/facebook/internal/Logger.java
index 6a232c6c8..39a7f35e5 100644
--- a/facebook/src/com/facebook/internal/Logger.java
+++ b/facebook/src/com/facebook/internal/Logger.java
@@ -14,17 +14,17 @@
  * limitations under the License.
  */
 
-package com.facebook.internal;
+package io.openkit.facebook.internal;
 
 import android.util.Log;
-import com.facebook.LoggingBehavior;
-import com.facebook.Settings;
+import io.openkit.facebook.LoggingBehavior;
+import io.openkit.facebook.Settings;
 
 import java.util.HashMap;
 import java.util.Map;
 
 /**
- * com.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
+ * io.openkit.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
  * any of the classes in this package is unsupported, and they may be modified or removed without warning at
  * any time.
  */
diff --git a/facebook/src/com/facebook/internal/ServerProtocol.java b/facebook/src/com/facebook/internal/ServerProtocol.java
index 6cb65324d..c0baa4c1f 100644
--- a/facebook/src/com/facebook/internal/ServerProtocol.java
+++ b/facebook/src/com/facebook/internal/ServerProtocol.java
@@ -14,14 +14,14 @@
  * limitations under the License.
  */
 
-package com.facebook.internal;
+package io.openkit.facebook.internal;
 
-import com.facebook.internal.Utility;
+import io.openkit.facebook.internal.Utility;
 
 import java.util.Collection;
 
 /**
- * com.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
+ * io.openkit.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
  * any of the classes in this package is unsupported, and they may be modified or removed without warning at
  * any time.
  */
diff --git a/facebook/src/com/facebook/internal/SessionAuthorizationType.java b/facebook/src/com/facebook/internal/SessionAuthorizationType.java
index 6684019a1..d782a2674 100644
--- a/facebook/src/com/facebook/internal/SessionAuthorizationType.java
+++ b/facebook/src/com/facebook/internal/SessionAuthorizationType.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package com.facebook.internal;
+package io.openkit.facebook.internal;
 
 /**
- * com.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
+ * io.openkit.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
  * any of the classes in this package is unsupported, and they may be modified or removed without warning at
  * any time.
  */
diff --git a/facebook/src/com/facebook/internal/SessionTracker.java b/facebook/src/com/facebook/internal/SessionTracker.java
index e013de5c5..7f6dec39d 100644
--- a/facebook/src/com/facebook/internal/SessionTracker.java
+++ b/facebook/src/com/facebook/internal/SessionTracker.java
@@ -14,18 +14,18 @@
  * limitations under the License.
  */
 
-package com.facebook.internal;
+package io.openkit.facebook.internal;
 
 import android.content.BroadcastReceiver;
 import android.content.Context;
 import android.content.Intent;
 import android.content.IntentFilter;
 import android.support.v4.content.LocalBroadcastManager;
-import com.facebook.Session;
-import com.facebook.SessionState;
+import io.openkit.facebook.Session;
+import io.openkit.facebook.SessionState;
 
 /**
- * com.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
+ * io.openkit.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
  * any of the classes in this package is unsupported, and they may be modified or removed without warning at
  * any time.
  */
diff --git a/facebook/src/com/facebook/internal/Utility.java b/facebook/src/com/facebook/internal/Utility.java
index 371e5d056..b9cb8bd33 100644
--- a/facebook/src/com/facebook/internal/Utility.java
+++ b/facebook/src/com/facebook/internal/Utility.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.internal;
+package io.openkit.facebook.internal;
 
 import android.content.Context;
 import android.content.pm.ApplicationInfo;
@@ -26,9 +26,9 @@
 import android.util.Log;
 import android.webkit.CookieManager;
 import android.webkit.CookieSyncManager;
-import com.facebook.FacebookException;
-import com.facebook.Session;
-import com.facebook.android.BuildConfig;
+import io.openkit.facebook.FacebookException;
+import io.openkit.facebook.Session;
+import io.openkit.facebook.android.BuildConfig;
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -42,7 +42,7 @@
 import java.util.*;
 
 /**
- * com.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
+ * io.openkit.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
  * any of the classes in this package is unsupported, and they may be modified or removed without warning at
  * any time.
  */
diff --git a/facebook/src/com/facebook/internal/Validate.java b/facebook/src/com/facebook/internal/Validate.java
index c66dee731..44bf8b8a6 100644
--- a/facebook/src/com/facebook/internal/Validate.java
+++ b/facebook/src/com/facebook/internal/Validate.java
@@ -14,12 +14,12 @@
  * limitations under the License.
  */
 
-package com.facebook.internal;
+package io.openkit.facebook.internal;
 
 import java.util.Collection;
 
 /**
- * com.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
+ * io.openkit.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
  * any of the classes in this package is unsupported, and they may be modified or removed without warning at
  * any time.
  */
diff --git a/facebook/src/com/facebook/internal/package-info.java b/facebook/src/com/facebook/internal/package-info.java
index 4392d0f35..3fb470dc7 100644
--- a/facebook/src/com/facebook/internal/package-info.java
+++ b/facebook/src/com/facebook/internal/package-info.java
@@ -1,6 +1,6 @@
 /**
- * com.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
+ * io.openkit.facebook.internal is solely for the use of other packages within the Facebook SDK for Android. Use of
  * any of the classes in this package is unsupported, and they may be modified or removed without warning at
  * any time.
  */
-package com.facebook.internal;
\ No newline at end of file
+package io.openkit.facebook.internal;
\ No newline at end of file
diff --git a/facebook/src/com/facebook/model/GraphLocation.java b/facebook/src/com/facebook/model/GraphLocation.java
index 7fec04b96..61e94f824 100644
--- a/facebook/src/com/facebook/model/GraphLocation.java
+++ b/facebook/src/com/facebook/model/GraphLocation.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.model;
+package io.openkit.facebook.model;
 
 /**
  * Provides a strongly-typed representation of a Location as defined by the Graph API.
diff --git a/facebook/src/com/facebook/model/GraphMultiResult.java b/facebook/src/com/facebook/model/GraphMultiResult.java
index f5d65569f..97423b212 100644
--- a/facebook/src/com/facebook/model/GraphMultiResult.java
+++ b/facebook/src/com/facebook/model/GraphMultiResult.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.model;
+package io.openkit.facebook.model;
 
 /**
  * Defines a GraphObject that represents the result of a query that returns multiple GraphObjects
diff --git a/facebook/src/com/facebook/model/GraphObject.java b/facebook/src/com/facebook/model/GraphObject.java
index 9b78f062a..51abf5f6d 100644
--- a/facebook/src/com/facebook/model/GraphObject.java
+++ b/facebook/src/com/facebook/model/GraphObject.java
@@ -14,11 +14,11 @@
  * limitations under the License.
  */
 
-package com.facebook.model;
+package io.openkit.facebook.model;
 
-import com.facebook.FacebookGraphObjectException;
-import com.facebook.internal.Utility;
-import com.facebook.internal.Validate;
+import io.openkit.facebook.FacebookGraphObjectException;
+import io.openkit.facebook.internal.Utility;
+import io.openkit.facebook.internal.Validate;
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -32,7 +32,7 @@
  * GraphObject is the primary interface used by the Facebook SDK for Android to represent objects in the Facebook
  * Social Graph and the Facebook Open Graph (OG). It is the base interface for all typed access to graph objects
  * in the SDK. No concrete classes implement GraphObject or its derived interfaces. Rather, they are implemented as
- * proxies (see the {@link com.facebook.model.GraphObject.Factory Factory} class) that provide strongly-typed property
+ * proxies (see the {@link io.openkit.facebook.model.GraphObject.Factory Factory} class) that provide strongly-typed property
  * getters and setters to access the underlying data. Since the primary use case for graph objects is sending and
  * receiving them over the wire to/from Facebook services, they are represented as JSONObjects. No validation is done
  * that a graph object is actually of a specific type -- any graph object can be treated as any GraphObject-derived
@@ -103,7 +103,7 @@ private Factory() {
          * @param json the JSONObject containing the data to be exposed
          * @return a GraphObject that represents the underlying data
          *
-         * @throws com.facebook.FacebookException
+         * @throws io.openkit.facebook.FacebookException
          *            If the passed in Class is not a valid GraphObject interface
          */
         public static GraphObject create(JSONObject json) {
@@ -116,7 +116,7 @@ public static GraphObject create(JSONObject json) {
          * @param graphObjectClass the GraphObject-derived type to return
          * @return a graphObjectClass that represents the underlying data
          *
-         * @throws com.facebook.FacebookException
+         * @throws io.openkit.facebook.FacebookException
          *            If the passed in Class is not a valid GraphObject interface
          */
         public static <T extends GraphObject> T create(JSONObject json, Class<T> graphObjectClass) {
@@ -127,7 +127,7 @@ public static GraphObject create(JSONObject json) {
          * Creates a GraphObject proxy that initially contains no data.
          * @return a GraphObject with no data
          *
-         * @throws com.facebook.FacebookException
+         * @throws io.openkit.facebook.FacebookException
          *            If the passed in Class is not a valid GraphObject interface
          */
         public static GraphObject create() {
@@ -139,7 +139,7 @@ public static GraphObject create() {
          * @param graphObjectClass the GraphObject-derived type to return
          * @return a graphObjectClass with no data
          *
-         * @throws com.facebook.FacebookException
+         * @throws io.openkit.facebook.FacebookException
          *            If the passed in Class is not a valid GraphObject interface
          */
         public static <T extends GraphObject> T create(Class<T> graphObjectClass) {
@@ -173,7 +173,7 @@ public static boolean hasSameId(GraphObject a, GraphObject b) {
          * @param graphObjectClass the GraphObject-derived type to return
          * @return a graphObjectClass that represents the underlying data
          *
-         * @throws com.facebook.FacebookException
+         * @throws io.openkit.facebook.FacebookException
          *            If the passed in Class is not a valid GraphObject interface
          */
         public static <T> GraphObjectList<T> createList(JSONArray array, Class<T> graphObjectClass) {
@@ -185,7 +185,7 @@ public static boolean hasSameId(GraphObject a, GraphObject b) {
          * @param graphObjectClass the GraphObject-derived type to return
          * @return a GraphObjectList with no data
          *
-         * @throws com.facebook.FacebookException
+         * @throws io.openkit.facebook.FacebookException
          *            If the passed in Class is not a valid GraphObject interface
          */
         public static <T> GraphObjectList<T> createList(Class<T> graphObjectClass) {
diff --git a/facebook/src/com/facebook/model/GraphObjectList.java b/facebook/src/com/facebook/model/GraphObjectList.java
index 311e0dcd9..6e878e96a 100644
--- a/facebook/src/com/facebook/model/GraphObjectList.java
+++ b/facebook/src/com/facebook/model/GraphObjectList.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.model;
+package io.openkit.facebook.model;
 
 import org.json.JSONArray;
 
@@ -22,7 +22,7 @@
 
 /**
  * GraphObjectList is the primary representation of a collection of graph objects in the Facebook SDK for Android.
- * It is not implemented by any concrete classes, but rather by a proxy (see the {@link com.facebook.model.GraphObject.Factory Factory}
+ * It is not implemented by any concrete classes, but rather by a proxy (see the {@link io.openkit.facebook.model.GraphObject.Factory Factory}
  * class). A GraphObjectList can actually contain elements of any type, not just graph objects, but its principal
  * use in the SDK is to contain types derived from GraphObject.
  * <br/>
@@ -36,7 +36,7 @@
      * GraphObject-derived type.
      * @param graphObjectClass the GraphObject-derived type to return a list of
      * @return a list representing the same underlying data, exposed as the new GraphObject-derived type
-     * @throws com.facebook.FacebookGraphObjectException if T does not derive from GraphObject
+     * @throws io.openkit.facebook.FacebookGraphObjectException if T does not derive from GraphObject
      */
     public <U extends GraphObject> GraphObjectList<U> castToListOf(Class<U> graphObjectClass);
     /**
diff --git a/facebook/src/com/facebook/model/GraphPlace.java b/facebook/src/com/facebook/model/GraphPlace.java
index c4ef6889d..cd4df4d45 100644
--- a/facebook/src/com/facebook/model/GraphPlace.java
+++ b/facebook/src/com/facebook/model/GraphPlace.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.model;
+package io.openkit.facebook.model;
 
 /**
  * Provides a strongly-typed representation of a Place as defined by the Graph API.
diff --git a/facebook/src/com/facebook/model/GraphUser.java b/facebook/src/com/facebook/model/GraphUser.java
index cc684d3ae..13f17c1ed 100644
--- a/facebook/src/com/facebook/model/GraphUser.java
+++ b/facebook/src/com/facebook/model/GraphUser.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.model;
+package io.openkit.facebook.model;
 
 /**
  * Provides a strongly-typed representation of a User as defined by the Graph API.
diff --git a/facebook/src/com/facebook/model/JsonUtil.java b/facebook/src/com/facebook/model/JsonUtil.java
index bd46f6e2a..ee9469876 100644
--- a/facebook/src/com/facebook/model/JsonUtil.java
+++ b/facebook/src/com/facebook/model/JsonUtil.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.model;
+package io.openkit.facebook.model;
 
 import android.annotation.SuppressLint;
 import org.json.JSONException;
diff --git a/facebook/src/com/facebook/model/OpenGraphAction.java b/facebook/src/com/facebook/model/OpenGraphAction.java
index 9e007a89d..49df517bc 100644
--- a/facebook/src/com/facebook/model/OpenGraphAction.java
+++ b/facebook/src/com/facebook/model/OpenGraphAction.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.model;
+package io.openkit.facebook.model;
 
 import org.json.JSONObject;
 
diff --git a/facebook/src/com/facebook/model/PropertyName.java b/facebook/src/com/facebook/model/PropertyName.java
index 36da6edda..ecb0c4cc9 100644
--- a/facebook/src/com/facebook/model/PropertyName.java
+++ b/facebook/src/com/facebook/model/PropertyName.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.model;
+package io.openkit.facebook.model;
 
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
diff --git a/facebook/src/com/facebook/widget/FacebookFragment.java b/facebook/src/com/facebook/widget/FacebookFragment.java
index 1084185c5..a6f038d49 100644
--- a/facebook/src/com/facebook/widget/FacebookFragment.java
+++ b/facebook/src/com/facebook/widget/FacebookFragment.java
@@ -14,16 +14,16 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
-import com.facebook.Session;
-import com.facebook.SessionLoginBehavior;
-import com.facebook.SessionState;
-import com.facebook.internal.SessionAuthorizationType;
-import com.facebook.internal.SessionTracker;
+import io.openkit.facebook.Session;
+import io.openkit.facebook.SessionLoginBehavior;
+import io.openkit.facebook.SessionState;
+import io.openkit.facebook.internal.SessionAuthorizationType;
+import io.openkit.facebook.internal.SessionTracker;
 
 import java.util.Date;
 import java.util.List;
diff --git a/facebook/src/com/facebook/widget/FriendPickerFragment.java b/facebook/src/com/facebook/widget/FriendPickerFragment.java
index 831b3a0c4..c363fb629 100644
--- a/facebook/src/com/facebook/widget/FriendPickerFragment.java
+++ b/facebook/src/com/facebook/widget/FriendPickerFragment.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.annotation.SuppressLint;
 import android.app.Activity;
@@ -22,9 +22,9 @@
 import android.os.Bundle;
 import android.text.TextUtils;
 import android.util.AttributeSet;
-import com.facebook.*;
-import com.facebook.android.R;
-import com.facebook.model.GraphUser;
+import io.openkit.facebook.*;
+import io.openkit.facebook.android.R;
+import io.openkit.facebook.model.GraphUser;
 
 import java.util.Arrays;
 import java.util.HashSet;
@@ -40,12 +40,12 @@
      * The key for a String parameter in the fragment's Intent bundle to indicate what user's
      * friends should be shown. The default is to display the currently authenticated user's friends.
      */
-    public static final String USER_ID_BUNDLE_KEY = "com.facebook.widget.FriendPickerFragment.UserId";
+    public static final String USER_ID_BUNDLE_KEY = "io.openkit.facebook.widget.FriendPickerFragment.UserId";
     /**
      * The key for a boolean parameter in the fragment's Intent bundle to indicate whether the
      * picker should allow more than one friend to be selected or not.
      */
-    public static final String MULTI_SELECT_BUNDLE_KEY = "com.facebook.widget.FriendPickerFragment.MultiSelect";
+    public static final String MULTI_SELECT_BUNDLE_KEY = "io.openkit.facebook.widget.FriendPickerFragment.MultiSelect";
 
     private static final String ID = "id";
     private static final String NAME = "name";
diff --git a/facebook/src/com/facebook/widget/GraphObjectAdapter.java b/facebook/src/com/facebook/widget/GraphObjectAdapter.java
index dbf66809c..d274c469f 100644
--- a/facebook/src/com/facebook/widget/GraphObjectAdapter.java
+++ b/facebook/src/com/facebook/widget/GraphObjectAdapter.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.content.Context;
 import android.graphics.Bitmap;
@@ -23,9 +23,9 @@
 import android.view.ViewGroup;
 import android.view.ViewStub;
 import android.widget.*;
-import com.facebook.*;
-import com.facebook.android.R;
-import com.facebook.model.GraphObject;
+import io.openkit.facebook.*;
+import io.openkit.facebook.android.R;
+import io.openkit.facebook.model.GraphObject;
 import org.json.JSONObject;
 
 import java.net.MalformedURLException;
diff --git a/facebook/src/com/facebook/widget/GraphObjectCursor.java b/facebook/src/com/facebook/widget/GraphObjectCursor.java
index a86e4a302..570c6792b 100644
--- a/facebook/src/com/facebook/widget/GraphObjectCursor.java
+++ b/facebook/src/com/facebook/widget/GraphObjectCursor.java
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
-import com.facebook.model.GraphObject;
+import io.openkit.facebook.model.GraphObject;
 
 interface GraphObjectCursor<T extends GraphObject> {
     boolean isFromCache();
diff --git a/facebook/src/com/facebook/widget/GraphObjectPagingLoader.java b/facebook/src/com/facebook/widget/GraphObjectPagingLoader.java
index f36eeb48e..70b68adc4 100644
--- a/facebook/src/com/facebook/widget/GraphObjectPagingLoader.java
+++ b/facebook/src/com/facebook/widget/GraphObjectPagingLoader.java
@@ -14,15 +14,15 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.content.Context;
 import android.os.Handler;
 import android.support.v4.content.Loader;
-import com.facebook.*;
-import com.facebook.model.GraphObject;
-import com.facebook.model.GraphObjectList;
-import com.facebook.internal.CacheableRequestBatch;
+import io.openkit.facebook.*;
+import io.openkit.facebook.model.GraphObject;
+import io.openkit.facebook.model.GraphObjectList;
+import io.openkit.facebook.internal.CacheableRequestBatch;
 
 class GraphObjectPagingLoader<T extends GraphObject> extends Loader<SimpleGraphObjectCursor<T>> {
     private final Class<T> graphObjectClass;
diff --git a/facebook/src/com/facebook/widget/ImageDownloader.java b/facebook/src/com/facebook/widget/ImageDownloader.java
index 4ea4b5494..f3e4ba920 100644
--- a/facebook/src/com/facebook/widget/ImageDownloader.java
+++ b/facebook/src/com/facebook/widget/ImageDownloader.java
@@ -14,14 +14,14 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.os.Handler;
-import com.facebook.FacebookException;
-import com.facebook.internal.Utility;
+import io.openkit.facebook.FacebookException;
+import io.openkit.facebook.internal.Utility;
 
 import java.io.IOException;
 import java.io.InputStream;
diff --git a/facebook/src/com/facebook/widget/ImageRequest.java b/facebook/src/com/facebook/widget/ImageRequest.java
index 81494109d..d8d22f77e 100644
--- a/facebook/src/com/facebook/widget/ImageRequest.java
+++ b/facebook/src/com/facebook/widget/ImageRequest.java
@@ -14,11 +14,11 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.content.Context;
 import android.net.Uri;
-import com.facebook.internal.Validate;
+import io.openkit.facebook.internal.Validate;
 
 import java.net.MalformedURLException;
 import java.net.URL;
diff --git a/facebook/src/com/facebook/widget/ImageResponse.java b/facebook/src/com/facebook/widget/ImageResponse.java
index 98c52e8b8..56b8f5a99 100644
--- a/facebook/src/com/facebook/widget/ImageResponse.java
+++ b/facebook/src/com/facebook/widget/ImageResponse.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.graphics.Bitmap;
 
diff --git a/facebook/src/com/facebook/widget/ImageResponseCache.java b/facebook/src/com/facebook/widget/ImageResponseCache.java
index 05799e53a..189bc9cbc 100644
--- a/facebook/src/com/facebook/widget/ImageResponseCache.java
+++ b/facebook/src/com/facebook/widget/ImageResponseCache.java
@@ -14,14 +14,14 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.content.Context;
 import android.util.Log;
-import com.facebook.internal.Logger;
-import com.facebook.LoggingBehavior;
-import com.facebook.internal.Utility;
-import com.facebook.internal.FileLruCache;
+import io.openkit.facebook.internal.Logger;
+import io.openkit.facebook.LoggingBehavior;
+import io.openkit.facebook.internal.Utility;
+import io.openkit.facebook.internal.FileLruCache;
 
 import java.io.BufferedInputStream;
 import java.io.IOException;
diff --git a/facebook/src/com/facebook/widget/LoginButton.java b/facebook/src/com/facebook/widget/LoginButton.java
index ea65d0a81..542bb8158 100644
--- a/facebook/src/com/facebook/widget/LoginButton.java
+++ b/facebook/src/com/facebook/widget/LoginButton.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.app.Activity;
 import android.app.AlertDialog;
@@ -29,12 +29,12 @@
 import android.view.Gravity;
 import android.view.View;
 import android.widget.Button;
-import com.facebook.*;
-import com.facebook.android.R;
-import com.facebook.model.GraphUser;
-import com.facebook.internal.SessionAuthorizationType;
-import com.facebook.internal.SessionTracker;
-import com.facebook.internal.Utility;
+import io.openkit.facebook.*;
+import io.openkit.facebook.android.R;
+import io.openkit.facebook.model.GraphUser;
+import io.openkit.facebook.internal.SessionAuthorizationType;
+import io.openkit.facebook.internal.SessionTracker;
+import io.openkit.facebook.internal.Utility;
 
 import java.util.Collections;
 import java.util.List;
@@ -46,9 +46,9 @@
  * This control will create and use the active session upon construction
  * if it has the available data (if the app ID is specified in the manifest).
  * It will also open the active session if it does not require user interaction
- * (i.e. if the session is in the {@link com.facebook.SessionState#CREATED_TOKEN_LOADED} state.
+ * (i.e. if the session is in the {@link io.openkit.facebook.SessionState#CREATED_TOKEN_LOADED} state.
  * Developers can override the use of the active session by calling
- * the {@link #setSession(com.facebook.Session)} method.
+ * the {@link #setSession(io.openkit.facebook.Session)} method.
  */
 public class LoginButton extends Button {
 
diff --git a/facebook/src/com/facebook/widget/PickerFragment.java b/facebook/src/com/facebook/widget/PickerFragment.java
index bea02692f..ecf35fe3a 100644
--- a/facebook/src/com/facebook/widget/PickerFragment.java
+++ b/facebook/src/com/facebook/widget/PickerFragment.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.app.Activity;
 import android.content.Context;
@@ -32,10 +32,10 @@
 import android.view.ViewStub;
 import android.view.animation.AlphaAnimation;
 import android.widget.*;
-import com.facebook.*;
-import com.facebook.android.R;
-import com.facebook.model.GraphObject;
-import com.facebook.internal.SessionTracker;
+import io.openkit.facebook.*;
+import io.openkit.facebook.android.R;
+import io.openkit.facebook.model.GraphObject;
+import io.openkit.facebook.internal.SessionTracker;
 
 import java.util.*;
 
@@ -54,30 +54,30 @@
      * The key for a boolean parameter in the fragment's Intent bundle to indicate whether the
      * picker should show pictures (if available) for the graph objects.
      */
-    public static final String SHOW_PICTURES_BUNDLE_KEY = "com.facebook.widget.PickerFragment.ShowPictures";
+    public static final String SHOW_PICTURES_BUNDLE_KEY = "io.openkit.facebook.widget.PickerFragment.ShowPictures";
     /**
      * The key for a String parameter in the fragment's Intent bundle to indicate which extra fields
      * beyond the default fields should be retrieved for any graph objects in the results.
      */
-    public static final String EXTRA_FIELDS_BUNDLE_KEY = "com.facebook.widget.PickerFragment.ExtraFields";
+    public static final String EXTRA_FIELDS_BUNDLE_KEY = "io.openkit.facebook.widget.PickerFragment.ExtraFields";
     /**
      * The key for a boolean parameter in the fragment's Intent bundle to indicate whether the
      * picker should display a title bar with a Done button.
      */
-    public static final String SHOW_TITLE_BAR_BUNDLE_KEY = "com.facebook.widget.PickerFragment.ShowTitleBar";
+    public static final String SHOW_TITLE_BAR_BUNDLE_KEY = "io.openkit.facebook.widget.PickerFragment.ShowTitleBar";
     /**
      * The key for a String parameter in the fragment's Intent bundle to indicate the text to
      * display in the title bar.
      */
-    public static final String TITLE_TEXT_BUNDLE_KEY = "com.facebook.widget.PickerFragment.TitleText";
+    public static final String TITLE_TEXT_BUNDLE_KEY = "io.openkit.facebook.widget.PickerFragment.TitleText";
     /**
      * The key for a String parameter in the fragment's Intent bundle to indicate the text to
      * display in the Done btuton.
      */
-    public static final String DONE_BUTTON_TEXT_BUNDLE_KEY = "com.facebook.widget.PickerFragment.DoneButtonText";
+    public static final String DONE_BUTTON_TEXT_BUNDLE_KEY = "io.openkit.facebook.widget.PickerFragment.DoneButtonText";
 
-    private static final String SELECTION_BUNDLE_KEY = "com.facebook.android.PickerFragment.Selection";
-    private static final String ACTIVITY_CIRCLE_SHOW_KEY = "com.facebook.android.PickerFragment.ActivityCircleShown";
+    private static final String SELECTION_BUNDLE_KEY = "io.openkit.facebook.android.PickerFragment.Selection";
+    private static final String ACTIVITY_CIRCLE_SHOW_KEY = "io.openkit.facebook.android.PickerFragment.ActivityCircleShown";
     private static final int PROFILE_PICTURE_PREFETCH_BUFFER = 5;
 
     private final int layout;
diff --git a/facebook/src/com/facebook/widget/PlacePickerFragment.java b/facebook/src/com/facebook/widget/PlacePickerFragment.java
index b08208c7f..304c7dc27 100644
--- a/facebook/src/com/facebook/widget/PlacePickerFragment.java
+++ b/facebook/src/com/facebook/widget/PlacePickerFragment.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.app.Activity;
 import android.content.Context;
@@ -33,11 +33,11 @@
 import android.widget.EditText;
 import android.widget.ListView;
 import android.widget.RelativeLayout;
-import com.facebook.*;
-import com.facebook.android.R;
-import com.facebook.model.GraphPlace;
-import com.facebook.internal.Logger;
-import com.facebook.internal.Utility;
+import io.openkit.facebook.*;
+import io.openkit.facebook.android.R;
+import io.openkit.facebook.model.GraphPlace;
+import io.openkit.facebook.internal.Logger;
+import io.openkit.facebook.internal.Utility;
 
 import java.util.*;
 
@@ -46,27 +46,27 @@
      * The key for an int parameter in the fragment's Intent bundle to indicate the radius in meters around
      * the center point to search. The default is 1000 meters.
      */
-    public static final String RADIUS_IN_METERS_BUNDLE_KEY = "com.facebook.widget.PlacePickerFragment.RadiusInMeters";
+    public static final String RADIUS_IN_METERS_BUNDLE_KEY = "io.openkit.facebook.widget.PlacePickerFragment.RadiusInMeters";
     /**
      * The key for an int parameter in the fragment's Intent bundle to indicate what how many results to
      * return at a time. The default is 100 results.
      */
-    public static final String RESULTS_LIMIT_BUNDLE_KEY = "com.facebook.widget.PlacePickerFragment.ResultsLimit";
+    public static final String RESULTS_LIMIT_BUNDLE_KEY = "io.openkit.facebook.widget.PlacePickerFragment.ResultsLimit";
     /**
      * The key for a String parameter in the fragment's Intent bundle to indicate what search text should
      * be sent to the service. The default is to have no search text.
      */
-    public static final String SEARCH_TEXT_BUNDLE_KEY = "com.facebook.widget.PlacePickerFragment.SearchText";
+    public static final String SEARCH_TEXT_BUNDLE_KEY = "io.openkit.facebook.widget.PlacePickerFragment.SearchText";
     /**
      * The key for a Location parameter in the fragment's Intent bundle to indicate what geographical
      * location should be the center of the search.
      */
-    public static final String LOCATION_BUNDLE_KEY = "com.facebook.widget.PlacePickerFragment.Location";
+    public static final String LOCATION_BUNDLE_KEY = "io.openkit.facebook.widget.PlacePickerFragment.Location";
     /**
      * The key for a boolean parameter in the fragment's Intent bundle to indicate that the fragment
      * should display a search box and automatically update the search text as it changes.
      */
-    public static final String SHOW_SEARCH_BOX_BUNDLE_KEY = "com.facebook.widget.PlacePickerFragment.ShowSearchBox";
+    public static final String SHOW_SEARCH_BOX_BUNDLE_KEY = "io.openkit.facebook.widget.PlacePickerFragment.ShowSearchBox";
 
     /**
      * The default radius around the center point to search.
diff --git a/facebook/src/com/facebook/widget/ProfilePictureView.java b/facebook/src/com/facebook/widget/ProfilePictureView.java
index 136fb0716..6cef22437 100644
--- a/facebook/src/com/facebook/widget/ProfilePictureView.java
+++ b/facebook/src/com/facebook/widget/ProfilePictureView.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.content.Context;
 import android.content.res.TypedArray;
@@ -27,10 +27,10 @@
 import android.view.ViewGroup;
 import android.widget.FrameLayout;
 import android.widget.ImageView;
-import com.facebook.FacebookException;
-import com.facebook.LoggingBehavior;
-import com.facebook.internal.Logger;
-import com.facebook.internal.Utility;
+import io.openkit.facebook.FacebookException;
+import io.openkit.facebook.LoggingBehavior;
+import io.openkit.facebook.internal.Logger;
+import io.openkit.facebook.internal.Utility;
 
 import java.net.MalformedURLException;
 
diff --git a/facebook/src/com/facebook/widget/SimpleGraphObjectCursor.java b/facebook/src/com/facebook/widget/SimpleGraphObjectCursor.java
index 08c46b4ba..1b30fcf56 100644
--- a/facebook/src/com/facebook/widget/SimpleGraphObjectCursor.java
+++ b/facebook/src/com/facebook/widget/SimpleGraphObjectCursor.java
@@ -14,10 +14,10 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.database.CursorIndexOutOfBoundsException;
-import com.facebook.model.GraphObject;
+import io.openkit.facebook.model.GraphObject;
 
 import java.util.ArrayList;
 import java.util.Collection;
diff --git a/facebook/src/com/facebook/widget/StyleableHelper.java b/facebook/src/com/facebook/widget/StyleableHelper.java
index 32faf2266..b4da058f8 100644
--- a/facebook/src/com/facebook/widget/StyleableHelper.java
+++ b/facebook/src/com/facebook/widget/StyleableHelper.java
@@ -1,4 +1,4 @@
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import java.lang.reflect.Field;
 import android.content.Context;
diff --git a/facebook/src/com/facebook/widget/UrlRedirectCache.java b/facebook/src/com/facebook/widget/UrlRedirectCache.java
index 278e3e4e1..d45b8be98 100644
--- a/facebook/src/com/facebook/widget/UrlRedirectCache.java
+++ b/facebook/src/com/facebook/widget/UrlRedirectCache.java
@@ -14,11 +14,11 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.content.Context;
-import com.facebook.internal.FileLruCache;
-import com.facebook.internal.Utility;
+import io.openkit.facebook.internal.FileLruCache;
+import io.openkit.facebook.internal.Utility;
 
 import java.io.IOException;
 import java.io.InputStream;
diff --git a/facebook/src/com/facebook/widget/UserSettingsFragment.java b/facebook/src/com/facebook/widget/UserSettingsFragment.java
index 74d7aa5e9..0895fd6e5 100644
--- a/facebook/src/com/facebook/widget/UserSettingsFragment.java
+++ b/facebook/src/com/facebook/widget/UserSettingsFragment.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.graphics.Bitmap;
 import android.graphics.drawable.BitmapDrawable;
@@ -25,9 +25,9 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
-import com.facebook.*;
-import com.facebook.android.R;
-import com.facebook.model.GraphUser;
+import io.openkit.facebook.*;
+import io.openkit.facebook.android.R;
+import io.openkit.facebook.model.GraphUser;
 
 import java.net.MalformedURLException;
 import java.net.URL;
@@ -40,9 +40,9 @@
  * This Fragment will create and use the active session upon construction
  * if it has the available data (if the app ID is specified in the manifest).
  * It will also open the active session if it does not require user interaction
- * (i.e. if the session is in the {@link com.facebook.SessionState#CREATED_TOKEN_LOADED} state.
+ * (i.e. if the session is in the {@link io.openkit.facebook.SessionState#CREATED_TOKEN_LOADED} state.
  * Developers can override the use of the active session by calling
- * the {@link #setSession(com.facebook.Session)} method.
+ * the {@link #setSession(io.openkit.facebook.Session)} method.
  */
 public class UserSettingsFragment extends FacebookFragment {
 
@@ -90,7 +90,7 @@ public void onCreate(Bundle savedInstanceState) {
     }
 
     /**
-     * @throws com.facebook.FacebookException if errors occur during the loading of user information
+     * @throws io.openkit.facebook.FacebookException if errors occur during the loading of user information
      */
     @Override
     public void onResume() {
@@ -108,7 +108,7 @@ public void onResume() {
      * load some user information for display (if needed).
      *
      * @param newSession the Session object to use
-     * @throws com.facebook.FacebookException if errors occur during the loading of user information
+     * @throws io.openkit.facebook.FacebookException if errors occur during the loading of user information
      */
     @Override
     public void setSession(Session newSession) {
diff --git a/facebook/src/com/facebook/widget/WebDialog.java b/facebook/src/com/facebook/widget/WebDialog.java
index 7aea576c7..f3ef4c3cc 100644
--- a/facebook/src/com/facebook/widget/WebDialog.java
+++ b/facebook/src/com/facebook/widget/WebDialog.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
 import android.annotation.SuppressLint;
 import android.app.Dialog;
@@ -37,12 +37,12 @@
 import android.widget.FrameLayout;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
-import com.facebook.*;
-import com.facebook.android.*;
-import com.facebook.internal.Logger;
-import com.facebook.internal.ServerProtocol;
-import com.facebook.internal.Utility;
-import com.facebook.internal.Validate;
+import io.openkit.facebook.*;
+import io.openkit.facebook.android.*;
+import io.openkit.facebook.internal.Logger;
+import io.openkit.facebook.internal.ServerProtocol;
+import io.openkit.facebook.internal.Utility;
+import io.openkit.facebook.internal.Validate;
 
 /**
  * This class provides a mechanism for displaying Facebook Web dialogs inside a Dialog. Helper
diff --git a/facebook/src/com/facebook/widget/WorkQueue.java b/facebook/src/com/facebook/widget/WorkQueue.java
index adcee1d71..0910d7e2d 100644
--- a/facebook/src/com/facebook/widget/WorkQueue.java
+++ b/facebook/src/com/facebook/widget/WorkQueue.java
@@ -14,9 +14,9 @@
  * limitations under the License.
  */
 
-package com.facebook.widget;
+package io.openkit.facebook.widget;
 
-import com.facebook.Settings;
+import io.openkit.facebook.Settings;
 
 import java.util.concurrent.Executor;
 
