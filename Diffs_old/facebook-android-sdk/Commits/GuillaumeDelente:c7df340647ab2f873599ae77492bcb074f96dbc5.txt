diff --git a/facebook/src/com/facebook/Request.java b/facebook/src/com/facebook/Request.java
index e604a44a3..fa71a9282 100644
--- a/facebook/src/com/facebook/Request.java
+++ b/facebook/src/com/facebook/Request.java
@@ -1511,6 +1511,7 @@ public static Response executeAndWait(Request request) {
         try {
             connection = toHttpConnection(requests);
         } catch (Exception ex) {
+            ex.printStackTrace();
             List<Response> responses = Response.constructErrorResponses(requests.getRequests(), null, new FacebookException(ex));
             runCallbacks(requests, responses);
             return responses;
@@ -2002,8 +2003,9 @@ final static void serializeToUrlConnection(RequestBatch requests, HttpURLConnect
             }
 
             processRequest(requests, logger, numRequests, url, outputStream);
-        }
-        finally {
+        } catch (Exception ex) {
+            ex.printStackTrace();
+        } finally {
             outputStream.close();
         }
 
diff --git a/facebook/src/com/facebook/TestSession.java b/facebook/src/com/facebook/TestSession.java
index ac5fa6d66..be3cbfed5 100644
--- a/facebook/src/com/facebook/TestSession.java
+++ b/facebook/src/com/facebook/TestSession.java
@@ -29,6 +29,7 @@
 import org.json.JSONObject;
 
 import java.util.*;
+import java.util.concurrent.ExecutionException;
 
 /**
  * Implements an subclass of Session that knows about test users for a particular
@@ -408,7 +409,15 @@ private TestAccount createTestAccountAndFinishAuth() {
 
         String graphPath = String.format("%s/accounts/test-users", testApplicationId);
         Request createUserRequest = new Request(null, graphPath, parameters, HttpMethod.POST);
-        Response response = createUserRequest.executeAndWait();
+        RequestAsyncTask asyncTask = createUserRequest.executeAsync();
+        Response response = null;
+        try {
+            response = asyncTask.get().get(0);
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        } catch (ExecutionException e) {
+            e.printStackTrace();
+        }
 
         FacebookRequestError error = response.getError();
         TestAccount testAccount = response.getGraphObjectAs(TestAccount.class);
@@ -436,7 +445,15 @@ private void deleteTestAccount(String testAccountId, String appAccessToken) {
         parameters.putString("access_token", appAccessToken);
 
         Request request = new Request(null, testAccountId, parameters, HttpMethod.DELETE);
-        Response response = request.executeAndWait();
+        RequestAsyncTask asyncTask = request.executeAsync();
+        Response response = null;
+        try {
+            response = asyncTask.get().get(0);
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        } catch (ExecutionException e) {
+            e.printStackTrace();
+        }
 
         FacebookRequestError error = response.getError();
         GraphObject graphObject = response.getGraphObject();
