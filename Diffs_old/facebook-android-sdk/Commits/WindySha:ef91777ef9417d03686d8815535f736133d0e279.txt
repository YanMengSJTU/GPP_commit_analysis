diff --git a/facebook-login/src/main/java/com/facebook/login/widget/LoginButton.java b/facebook-login/src/main/java/com/facebook/login/widget/LoginButton.java
index 9c3e6656c..da1f002f9 100644
--- a/facebook-login/src/main/java/com/facebook/login/widget/LoginButton.java
+++ b/facebook-login/src/main/java/com/facebook/login/widget/LoginButton.java
@@ -144,11 +144,7 @@ public DefaultAudience getDefaultAudience() {
             return defaultAudience;
         }
 
-        public void setReadPermissions(List<String> permissions) {
-            this.permissions = permissions;
-        }
-
-        public void setPublishPermissions(List<String> permissions) {
+        public void setPermissions(List<String> permissions) {
             this.permissions = permissions;
         }
 
@@ -270,11 +266,13 @@ public DefaultAudience getDefaultAudience() {
      * manage the setting of permissions outside of the LoginButton class altogether
      * (by using the LoginManager explicitly).
      *
+     * @deprecated use setPermissions
+     *
      * @param permissions the read permissions to use
      * @throws UnsupportedOperationException if setPublishPermissions has been called
      */
     public void setReadPermissions(List<String> permissions) {
-        properties.setReadPermissions(permissions);
+        properties.setPermissions(permissions);
     }
 
     /**
@@ -293,13 +291,50 @@ public void setReadPermissions(List<String> permissions) {
      * manage the setting of permissions outside of the LoginButton class altogether
      * (by using the LoginManager explicitly).
      *
+     * @deprecated use setPermissions
+     *
      * @param permissions the read permissions to use
      * @throws UnsupportedOperationException if setPublishPermissions has been called
      */
     public void setReadPermissions(String... permissions) {
-        properties.setReadPermissions(Arrays.asList(permissions));
+        properties.setPermissions(Arrays.asList(permissions));
+    }
+
+  /**
+   * Set the permissions to use when the user logs in. The permissions here can be either read or
+   * write permissions.
+   *
+   * <p>* This method is only meaningful if called before the user logs in. If this is called *
+   * after login, and the list of permissions passed in is not a subset of the permissions granted
+   * during the authorization, it will log an error. *
+   *
+   * <p>* It's important to always pass in a consistent set of permissions to this method, or
+   * manage the setting of permissions outside of the LoginButton class altogether (by using the
+   * LoginManager explicitly).
+   *
+   * @param permissions the read and write permissions to use
+   */
+    public void setPermissions(List<String> permissions) {
+        properties.setPermissions(permissions);
     }
 
+    /**
+     * Set the permissions to use when the user logs in. The permissions here can be either read or
+     * write permissions.
+     *
+     * <p>* This method is only meaningful if called before the user logs in. If this is called *
+     * after login, and the list of permissions passed in is not a subset of the permissions granted
+     * during the authorization, it will log an error. *
+     *
+     * <p>* It's important to always pass in a consistent set of permissions to this method, or
+     * manage the setting of permissions outside of the LoginButton class altogether (by using the
+     * LoginManager explicitly).
+     *
+     * @param permissions the read and write permissions to use
+     */
+    public void setPermissions(String... permissions) {
+        properties.setPermissions(Arrays.asList(permissions));
+    }
 
     /**
      * Set the permissions to use when the user logs in. The permissions here
@@ -317,12 +352,14 @@ public void setReadPermissions(String... permissions) {
      * manage the setting of permissions outside of the LoginButton class altogether
      * (by using the LoginManager explicitly).
      *
+     * @deprecated use setPermissions
+     *
      * @param permissions the publish permissions to use
      * @throws UnsupportedOperationException if setReadPermissions has been called
      * @throws IllegalArgumentException      if permissions is null or empty
      */
     public void setPublishPermissions(List<String> permissions) {
-        properties.setPublishPermissions(permissions);
+        properties.setPermissions(permissions);
     }
 
     /**
@@ -341,12 +378,14 @@ public void setPublishPermissions(List<String> permissions) {
      * manage the setting of permissions outside of the LoginButton class altogether
      * (by using the LoginManager explicitly).
      *
+     * @deprecated use setPermissions
+     *
      * @param permissions the publish permissions to use
      * @throws UnsupportedOperationException if setReadPermissions has been called
      * @throws IllegalArgumentException      if permissions is null or empty
      */
     public void setPublishPermissions(String... permissions) {
-        properties.setPublishPermissions(Arrays.asList(permissions));
+        properties.setPermissions(Arrays.asList(permissions));
     }
 
 
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/facebook/FacebookLoginActivity.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/facebook/FacebookLoginActivity.java
index f81080117..e03273292 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/facebook/FacebookLoginActivity.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/facebook/FacebookLoginActivity.java
@@ -183,29 +183,14 @@ protected void onActivityResult(
         super.onActivityResult(requestCode, resultCode, data);
         if(requestCode == PICK_PERMS_REQUEST) {
             if(resultCode == RESULT_OK) {
-                String[] readPermsArr = data
-                        .getStringArrayExtra(PermissionSelectActivity.EXTRA_SELECTED_READ_PARAMS);
+                String[] perms = data
+                        .getStringArrayExtra(PermissionSelectActivity.EXTRA_SELECTED_PARAMS);
                 String writePrivacy = data
                         .getStringExtra(PermissionSelectActivity.EXTRA_SELECTED_WRITE_PRIVACY);
-                String[] publishPermsArr = data
-                        .getStringArrayExtra(
-                                PermissionSelectActivity.EXTRA_SELECTED_PUBLISH_PARAMS);
 
                 fbLoginButton.clearPermissions();
+                fbLoginButton.setPermissions(perms);
 
-                if (readPermsArr != null) {
-                    if(readPermsArr.length > 0) {
-                        fbLoginButton.setReadPermissions(readPermsArr);
-                    }
-                }
-
-                if ((readPermsArr == null ||
-                        readPermsArr.length == 0) &&
-                        publishPermsArr != null) {
-                    if(publishPermsArr.length > 0) {
-                        fbLoginButton.setPublishPermissions(publishPermsArr);
-                    }
-                }
                 // Set write privacy for the user
                 if ((writePrivacy != null)) {
                     DefaultAudience audience;
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/facebook/PermissionSelectActivity.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/facebook/PermissionSelectActivity.java
index ee7db339c..1a17dd075 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/facebook/PermissionSelectActivity.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/facebook/PermissionSelectActivity.java
@@ -41,9 +41,8 @@
 
     public static final String TAG = PermissionSelectActivity.class.getSimpleName();
 
-    public static final String EXTRA_SELECTED_READ_PARAMS = TAG + ".selectedReadPerms";
+    public static final String EXTRA_SELECTED_PARAMS = TAG + ".selectedPerms";
     public static final String EXTRA_SELECTED_WRITE_PRIVACY = TAG + ".selectedWritePrivacy";
-    public static final String EXTRA_SELECTED_PUBLISH_PARAMS = TAG + ".selectedPublishPerms";
 
     // Permissions
     public static String PUBLISH_ACTIONS = "publish_actions";
@@ -86,6 +85,7 @@ public void onCreate(Bundle savedInstanceState) {
 
     public void onClick(View v) {
         SparseBooleanArray checked = listView.getCheckedItemPositions();
+        ArrayList<String> perms = new ArrayList<>();
         ArrayList<String> readPerms = new ArrayList<>();
         String writePri = null;
         ArrayList<String> publishPerms = new ArrayList<>();
@@ -102,18 +102,20 @@ public void onClick(View v) {
                 } else if (DefaultAudience.ONLY_ME.toString().equals(checkedItem)) {
                     writePri = "ONLY_ME";
                 } else if ((PUBLISH_PERMS_LIST).contains(checkedItem)) {
+                    perms.add(checkedItem);
                     publishPerms.add(checkedItem);
                 } else
+                    perms.add(checkedItem);
                     readPerms.add(checkedItem);
             }
         }
 
+        String[] permsArr = perms.toArray(new String[perms.size()]);
         String[] readPermsArr = readPerms.toArray(new String[readPerms.size()]);
         String[] publishPermsArr = publishPerms.toArray(new String[publishPerms.size()]);
         Intent intent=new Intent();
-        intent.putExtra(EXTRA_SELECTED_READ_PARAMS, readPermsArr);
+        intent.putExtra(EXTRA_SELECTED_PARAMS, permsArr);
         intent.putExtra(EXTRA_SELECTED_WRITE_PRIVACY, writePri);
-        intent.putExtra(EXTRA_SELECTED_PUBLISH_PARAMS, publishPermsArr);
         setResult(RESULT_OK, intent);
         finish();
     }
diff --git a/samples/PlacesGraphSample/src/com/example/places/fragments/LoginFragment.java b/samples/PlacesGraphSample/src/com/example/places/fragments/LoginFragment.java
index fc81046e8..3ba380a61 100644
--- a/samples/PlacesGraphSample/src/com/example/places/fragments/LoginFragment.java
+++ b/samples/PlacesGraphSample/src/com/example/places/fragments/LoginFragment.java
@@ -100,7 +100,7 @@ public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
         loginButton.setFragment(this);
         List<String> permissions = new ArrayList<>();
         permissions.add(PUBLIC_PERMISSION);
-        loginButton.setReadPermissions(permissions);
+        loginButton.setPermissions(permissions);
         callbackManager = CallbackManager.Factory.create();
 
         loginButton.registerCallback(
