diff --git a/facebook/src/main/java/com/facebook/FacebookSdk.java b/facebook/src/main/java/com/facebook/FacebookSdk.java
index a5c42eb2b..6848c0708 100644
--- a/facebook/src/main/java/com/facebook/FacebookSdk.java
+++ b/facebook/src/main/java/com/facebook/FacebookSdk.java
@@ -27,6 +27,7 @@
 import android.content.pm.PackageManager;
 import android.content.pm.Signature;
 import android.os.AsyncTask;
+import android.os.Build;
 import android.util.Base64;
 import android.util.Log;
 
@@ -44,6 +45,7 @@
 import org.json.JSONObject;
 
 import java.io.File;
+import java.lang.reflect.Field; // Restored for API Level 10-14 support by Corona Labs.
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
 import java.util.Arrays;
@@ -375,7 +377,18 @@ public static void setLegacyTokenUpgradeSupported(boolean supported) {
     public static Executor getExecutor() {
         synchronized (LOCK) {
             if (FacebookSdk.executor == null) {
-                FacebookSdk.executor = AsyncTask.THREAD_POOL_EXECUTOR;
+                if (Build.VERSION.SDK_INT < 11) {
+                    // Restored for API Level 10-14 support by Corona Labs.
+                    Executor executor = getAsyncTaskExecutor();
+                    if (executor == null) {
+                        executor = new ThreadPoolExecutor(
+                                DEFAULT_CORE_POOL_SIZE, DEFAULT_MAXIMUM_POOL_SIZE, DEFAULT_KEEP_ALIVE,
+                                TimeUnit.SECONDS, DEFAULT_WORK_QUEUE, DEFAULT_THREAD_FACTORY);
+                    }
+                    FacebookSdk.executor = executor;
+                } else {
+                    FacebookSdk.executor = AsyncTask.THREAD_POOL_EXECUTOR;
+                }
             }
         }
         return FacebookSdk.executor;
@@ -428,6 +441,32 @@ public static Context getApplicationContext() {
         return applicationContext;
     }
 
+    private static Executor getAsyncTaskExecutor() {
+        Field executorField = null;
+        try {
+            executorField = AsyncTask.class.getField("THREAD_POOL_EXECUTOR");
+        } catch (NoSuchFieldException e) {
+            return null;
+        }
+
+        Object executorObject = null;
+        try {
+            executorObject = executorField.get(null);
+        } catch (IllegalAccessException e) {
+            return null;
+        }
+
+        if (executorObject == null) {
+            return null;
+        }
+
+        if (!(executorObject instanceof Executor)) {
+            return null;
+        }
+
+        return (Executor) executorObject;
+    }
+
     /**
      * This method is public in order to be used by app events, please don't use directly.
      * @param context       The application context.
diff --git a/facebook/src/main/java/com/facebook/GraphRequest.java b/facebook/src/main/java/com/facebook/GraphRequest.java
index 7552030a7..1d76ff679 100644
--- a/facebook/src/main/java/com/facebook/GraphRequest.java
+++ b/facebook/src/main/java/com/facebook/GraphRequest.java
@@ -1222,7 +1222,8 @@ public static GraphRequestAsyncTask executeBatchAsync(GraphRequestBatch requests
         Validate.notEmptyAndContainsNoNulls(requests, "requests");
 
         GraphRequestAsyncTask asyncTask = new GraphRequestAsyncTask(requests);
-        asyncTask.executeOnExecutor(FacebookSdk.getExecutor(), null);
+        // Restored for API Level 10-14 support by Corona Labs.
+        asyncTask.executeOnSettingsExecutor();
         return asyncTask;
     }
 
@@ -1331,7 +1332,8 @@ public static GraphRequestAsyncTask executeConnectionAsync(
 
         GraphRequestAsyncTask asyncTask = new GraphRequestAsyncTask(connection, requests);
         requests.setCallbackHandler(callbackHandler);
-        asyncTask.executeOnExecutor(FacebookSdk.getExecutor(), null);
+        // Restored for API Level 10-14 support by Corona Labs.
+        asyncTask.executeOnSettingsExecutor();
         return asyncTask;
     }
 
diff --git a/facebook/src/main/java/com/facebook/GraphRequestAsyncTask.java b/facebook/src/main/java/com/facebook/GraphRequestAsyncTask.java
index 3164318ca..7c551d121 100644
--- a/facebook/src/main/java/com/facebook/GraphRequestAsyncTask.java
+++ b/facebook/src/main/java/com/facebook/GraphRequestAsyncTask.java
@@ -26,22 +26,45 @@
 import android.os.Looper;
 import android.util.Log;
 
+// Restored for API Level 10-14 support by Corona Labs.
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+
 import java.net.HttpURLConnection;
 import java.util.Collection;
 import java.util.List;
 
+// Restored for API Level 10-14 support by Corona Labs.
+import java.util.concurrent.Executor;
+
+
 /**
  * Defines an AsyncTask suitable for executing a Request in the background. May be subclassed
  * by applications having unique threading model needs.
  */
 public class GraphRequestAsyncTask extends AsyncTask<Void, Void, List<GraphResponse>> {
     private static final String TAG = GraphRequestAsyncTask.class.getCanonicalName();
+    private static Method executeOnExecutorMethod; // Restored for API Level 10-14 support by Corona Labs.
 
     private final HttpURLConnection connection;
     private final GraphRequestBatch requests;
 
     private Exception exception;
 
+    // Restored for API Level 10-14 support by Corona Labs.
+    static {
+        for (Method method : AsyncTask.class.getMethods()) {
+            if ("executeOnExecutor".equals(method.getName())) {
+                Class<?>[] parameters = method.getParameterTypes();
+                if ((parameters.length == 2) &&
+                        (parameters[0] == Executor.class) && parameters[1].isArray()) {
+                    executeOnExecutorMethod = method;
+                    break;
+                }
+            }
+        }
+    }
+
     /**
      * Constructor. Serialization of the requests will be done in the background, so any
      * serialization- related errors will be returned via the Response.getException() method.
@@ -175,4 +198,22 @@ protected void onPostExecute(List<GraphResponse> result) {
             return null;
         }
     }
+
+    // Restored for API Level 10-14 support by Corona Labs.
+    GraphRequestAsyncTask executeOnSettingsExecutor() {
+        if (executeOnExecutorMethod != null) {
+            try {
+                executeOnExecutorMethod.invoke(this, FacebookSdk.getExecutor(), null);
+            } catch (InvocationTargetException e) {
+                // fall-through
+            } catch (IllegalAccessException e) {
+                // fall-through
+            }
+        } else {
+            this.execute();
+        }
+
+        return this;
+    }
+
 }
