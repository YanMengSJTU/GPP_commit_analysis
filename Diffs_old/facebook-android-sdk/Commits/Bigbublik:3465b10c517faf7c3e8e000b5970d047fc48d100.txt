diff --git a/.gitignore b/.gitignore
index 714b3527c..c4467b9b4 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,3 +1,7 @@
+# Gradle
+.gradle
+build
+
 *~
 *.DS_Store
 *.class
@@ -42,4 +46,4 @@ local.properties
 build.xml
 proguard-project.txt
 
-.DS_Store
\ No newline at end of file
+.DS_Store
diff --git a/build.gradle b/build.gradle
new file mode 100644
index 000000000..8f3c24575
--- /dev/null
+++ b/build.gradle
@@ -0,0 +1,9 @@
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
+buildscript {
+    repositories {
+        mavenCentral()
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:0.6.+'
+    }
+}
diff --git a/facebook/TestApp/build.gradle b/facebook/TestApp/build.gradle
new file mode 100644
index 000000000..a2cda0280
--- /dev/null
+++ b/facebook/TestApp/build.gradle
@@ -0,0 +1,23 @@
+apply plugin: 'android'
+
+dependencies {
+    compile project(':facebook')
+}
+
+android {
+    compileSdkVersion 19
+    buildToolsVersion "19"
+
+    defaultConfig {
+        minSdkVersion 8
+        targetSdkVersion 19
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+    }
+}
diff --git a/facebook/build.gradle b/facebook/build.gradle
index 777b819ee..ea2914c49 100644
--- a/facebook/build.gradle
+++ b/facebook/build.gradle
@@ -1,37 +1,23 @@
-buildscript {
-    repositories {
-        mavenCentral()
-    }
-    dependencies {
-        classpath 'com.android.tools.build:gradle:0.7.0'
-    }
-}
 apply plugin: 'android-library'
 
 dependencies {
-    compile project(':submodules:android-support')
+    compile 'com.android.support:support-v4:13.0.+'
 }
 
 android {
-    compileSdkVersion 17
-    buildToolsVersion "17.0.0"
+    compileSdkVersion 19
+    buildToolsVersion "19"
 
     defaultConfig {
-        minSdkVersion 7
-        targetSdkVersion 17
+        minSdkVersion 8
+        targetSdkVersion 19
     }
 
     sourceSets {
         main {
             manifest.srcFile 'AndroidManifest.xml'
             java.srcDirs = ['src']
-            resources.srcDirs = ['src']
-            aidl.srcDirs = ['src']
-            renderscript.srcDirs = ['src']
             res.srcDirs = ['res']
-            assets.srcDirs = ['assets']
         }
-
-        instrumentTest.setRoot('tests')
     }
-}
\ No newline at end of file
+}
diff --git a/facebook/build.gradle.orig b/facebook/build.gradle.orig
new file mode 100644
index 000000000..c23427a99
--- /dev/null
+++ b/facebook/build.gradle.orig
@@ -0,0 +1,23 @@
+apply plugin: 'android-library'
+
+dependencies {
+    compile 'com.android.support:support-v4:13.0.+'
+}
+
+android {
+    compileSdkVersion 19
+    buildToolsVersion "19"
+
+    defaultConfig {
+        minSdkVersion 8
+        targetSdkVersion 19
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+    }
+}
\ No newline at end of file
diff --git a/facebook/src/com/facebook/AppEventsConstants.java b/facebook/src/com/facebook/AppEventsConstants.java
index 31298be5f..24fd13872 100644
--- a/facebook/src/com/facebook/AppEventsConstants.java
+++ b/facebook/src/com/facebook/AppEventsConstants.java
@@ -19,8 +19,6 @@
 /**
  * Predefined event and parameter names for logging events common to many apps. Logging occurs through the
  * {@link AppEventsLogger#logEvent(String, android.os.Bundle)} family of methods.
- *
- * @beta
  */
 public class AppEventsConstants {
     // Event names
diff --git a/facebook/src/com/facebook/AppEventsLogger.java b/facebook/src/com/facebook/AppEventsLogger.java
index 5a4973552..0081ec8a8 100644
--- a/facebook/src/com/facebook/AppEventsLogger.java
+++ b/facebook/src/com/facebook/AppEventsLogger.java
@@ -18,7 +18,6 @@
 
 import android.content.Context;
 import android.content.Intent;
-import android.content.SharedPreferences;
 import android.os.Bundle;
 import android.support.v4.content.LocalBroadcastManager;
 import android.util.Log;
@@ -103,7 +102,6 @@
  * The length of each parameter value can be no more than on the order of 100 characters.
  * </li>
  * </ul>
- * @beta
  */
 public class AppEventsLogger {
     // Enums
@@ -160,8 +158,6 @@ SuppressionTimeoutBehavior getBehavior() {
     private static final int APP_SUPPORTS_ATTRIBUTION_ID_RECHECK_PERIOD_IN_SECONDS = 60 * 60 * 24;
     private static final int APP_ACTIVATE_SUPPRESSION_PERIOD_IN_SECONDS            = 5 * 60;
 
-    private static final String APP_EVENT_PREFERENCES = "com.facebook.sdk.appEventPreferences";
-
     // Instance member variables
     private final Context context;
     private final AccessTokenAppIdPair accessTokenAppId;
@@ -174,6 +170,7 @@ SuppressionTimeoutBehavior getBehavior() {
     private static boolean requestInFlight;
     private static Context applicationContext;
     private static Object staticLock = new Object();
+    private static String hashedDeviceAndAppId;
     private static Map<String, Date> mapEventsToSuppressionTime = new HashMap<String, Date>();
     @SuppressWarnings("serial")
     private static Map<String, EventSuppression> mapEventNameToSuppress = new HashMap<String, EventSuppression>() {
@@ -247,34 +244,19 @@ private Object writeReplace() {
     }
 
     /**
-     * Sets whether events sent to Facebook should be restricted from being used for purposes than analytics and
-     * conversions, such as remarketing for this user.  Defaults to false.  This value is stored on the device and
-     * persists across app launches.
-     *
-     * @param context   Used to read the value.
-     *
-     * @beta
+     * This method is deprecated.  Use {@link Settings#getLimitEventAndDataUsage(Context)} instead.
      */
+    @Deprecated
     public static boolean getLimitEventUsage(Context context) {
-        SharedPreferences preferences = context.getSharedPreferences(APP_EVENT_PREFERENCES, Context.MODE_PRIVATE);
-        return preferences.getBoolean("limitEventUsage", false);
+        return Settings.getLimitEventAndDataUsage(context);
     }
 
     /**
-     * Sets whether events sent to Facebook should be restricted from being used for purposes than analytics and
-     * conversions, such as remarketing for this user.  Defaults to false.  This value is stored on the device and
-     * persists across app launches. Changes to this setting will apply to any events currently queued to be
-     * flushed, as well as any subsequent events.
-     *
-     * @param context   Used to persist this value across app runs.
-     *
-     * @beta
+     * This method is deprecated.  Use {@link Settings#setLimitEventAndDataUsage(Context, boolean)} instead.
      */
+    @Deprecated
     public static void setLimitEventUsage(Context context, boolean limitEventUsage) {
-        SharedPreferences preferences = context.getSharedPreferences(APP_EVENT_PREFERENCES, Context.MODE_PRIVATE);
-        SharedPreferences.Editor editor = preferences.edit();
-        editor.putBoolean("limitEventUsage", limitEventUsage);
-        editor.commit();
+        Settings.setLimitEventAndDataUsage(context, limitEventUsage);
     }
 
     /**
@@ -285,8 +267,6 @@ public static void setLimitEventUsage(Context context, boolean limitEventUsage)
      * {@link AppEventsLogger#activateApp(android.content.Context, String)}.
      *
      * @param context   Used to access the applicationId and the attributionId for non-authenticated users.
-     *
-     * @beta
      */
     public static void activateApp(Context context) {
         activateApp(context, Utility.getMetadataApplicationId(context));
@@ -299,8 +279,6 @@ public static void activateApp(Context context) {
      * @param context   Used to access the attributionId for non-authenticated users.
      *
      * @param applicationId  The specific applicationId to report the activation for.
-     *
-     * @beta
      */
     @SuppressWarnings("deprecation")
     public static void activateApp(Context context, String applicationId) {
@@ -324,8 +302,6 @@ public static void activateApp(Context context, String applicationId) {
      * @param context   Used to access the applicationId and the attributionId for non-authenticated users.
      *
      * @return          AppEventsLogger instance to invoke log* methods on.
-     *
-     * @beta
      */
     public static AppEventsLogger newLogger(Context context) {
         return new AppEventsLogger(context, null, null);
@@ -340,8 +316,6 @@ public static AppEventsLogger newLogger(Context context) {
      *                       app ID specified via the app ID specified in the package metadata.
      *
      * @return          AppEventsLogger instance to invoke log* methods on.
-     *
-     * @beta
      */
     public static AppEventsLogger newLogger(Context context, Session session) {
         return new AppEventsLogger(context, null, session);
@@ -358,8 +332,6 @@ public static AppEventsLogger newLogger(Context context, Session session) {
      *                       app ID.
      *
      * @return          AppEventsLogger instance to invoke log* methods on.
-     *
-     * @beta
      */
     public static AppEventsLogger newLogger(Context context, String applicationId, Session session) {
         return new AppEventsLogger(context, applicationId, session);
@@ -375,8 +347,6 @@ public static AppEventsLogger newLogger(Context context, String applicationId, S
      *                       in the package metadata will be used.
      *
      * @return          AppEventsLogger instance to invoke log* methods on.
-     *
-     * @beta
      */
     public static AppEventsLogger newLogger(Context context, String applicationId) {
         return new AppEventsLogger(context, applicationId, null);
@@ -396,8 +366,6 @@ public static AppEventsLogger newLogger(Context context, String applicationId) {
      * Access the behavior that AppEventsLogger uses to determine when to flush logged events to the server. This
      * setting applies to all instances of AppEventsLogger.
      * @return specified flush behavior.
-     *
-     * @beta
      */
     public static FlushBehavior getFlushBehavior() {
         synchronized (staticLock) {
@@ -409,8 +377,6 @@ public static FlushBehavior getFlushBehavior() {
      * Set the behavior that this AppEventsLogger uses to determine when to flush logged events to the server. This
      * setting applies to all instances of AppEventsLogger.
      * @param flushBehavior the desired behavior.
-     *
-     * @beta
      */
     public static void setFlushBehavior(FlushBehavior flushBehavior) {
         synchronized (staticLock) {
@@ -426,9 +392,7 @@ public static void setFlushBehavior(FlushBehavior flushBehavior) {
      *                  Event names should be 40 characters or less, alphanumeric, and can include spaces, underscores
      *                  or hyphens, but mustn't have a space or hyphen as the first character.  Any given app should
      *                  have no more than ~300 distinct event names.
-     *
-     * @beta
-     */
+      */
     public void logEvent(String eventName) {
         logEvent(eventName, null);
     }
@@ -444,8 +408,6 @@ public void logEvent(String eventName) {
      *                  * @param eventName
      * @param valueToSum a value to associate with the event which will be summed up in Insights for across all
      *                   instances of the event, so that average values can be determined, etc.
-     *
-     * @beta
      */
     public void logEvent(String eventName, double valueToSum) {
         logEvent(eventName, valueToSum, null);
@@ -465,8 +427,6 @@ public void logEvent(String eventName, double valueToSum) {
      *                   parameter in the, at most, thousands.  As an example, don't attempt to provide a unique
      *                   parameter value for each unique user in your app.  You won't get meaningful aggregate reporting
      *                   on so many parameter values.  The values in the bundles should be Strings or numeric values.
-     *
-     * @beta
      */
     public void logEvent(String eventName, Bundle parameters) {
         logEvent(eventName, null, parameters, false);
@@ -488,8 +448,6 @@ public void logEvent(String eventName, Bundle parameters) {
      *                   parameter in the, at most, thousands.  As an example, don't attempt to provide a unique
      *                   parameter value for each unique user in your app.  You won't get meaningful aggregate reporting
      *                   on so many parameter values.  The values in the bundles should be Strings or numeric values.
-     *
-     * @beta
      */
     public void logEvent(String eventName, double valueToSum, Bundle parameters) {
         logEvent(eventName, valueToSum, parameters, false);
@@ -501,8 +459,6 @@ public void logEvent(String eventName, double valueToSum, Bundle parameters) {
      * @param purchaseAmount  Amount of purchase, in the currency specified by the 'currency' parameter. This value
      *                        will be rounded to the thousandths place (e.g., 12.34567 becomes 12.346).
      * @param currency        Currency used to specify the amount.
-     *
-     * @beta
      */
     public void logPurchase(BigDecimal purchaseAmount, Currency currency) {
         logPurchase(purchaseAmount, currency, null);
@@ -517,8 +473,6 @@ public void logPurchase(BigDecimal purchaseAmount, Currency currency) {
      * @param currency        Currency used to specify the amount.
      * @param parameters      Arbitrary additional information for describing this event.  Should have no more than
      *                        10 entries, and keys should be mostly consistent from one purchase event to the next.
-     *
-     * @beta
      */
     public void logPurchase(BigDecimal purchaseAmount, Currency currency, Bundle parameters) {
 
@@ -542,8 +496,6 @@ public void logPurchase(BigDecimal purchaseAmount, Currency currency, Bundle par
     /**
      * Explicitly flush any stored events to the server.  Implicit flushes may happen depending on the value
      * of getFlushBehavior.  This method allows for explicit, app invoked flushing.
-     *
-     * @beta
      */
     public void flush() {
         flush(FlushReason.EXPLICIT);
@@ -556,8 +508,6 @@ public void flush() {
      * may trigger an I/O operation on the calling thread. Explicit use of this method is not necessary
      * if the consumer is making use of {@link UiLifecycleHelper}, which will take care of making the call
      * in its own onStop() callback.
-     *
-     * @beta
      */
     public static void onContextStop() {
         PersistedEvents.persistEvents(applicationContext, stateMap);
@@ -625,6 +575,11 @@ private AppEventsLogger(Context context, String applicationId, Session session)
         }
 
         synchronized (staticLock) {
+
+            if (hashedDeviceAndAppId == null) {
+                hashedDeviceAndAppId = Utility.getHashedDeviceAndAppID(context, applicationId);
+            }
+
             if (applicationContext == null) {
                 applicationContext = context.getApplicationContext();
             }
@@ -751,7 +706,7 @@ private static SessionEventsState getSessionEventsState(Context context, AccessT
                 // Retrieve attributionId, but we will only send it if attribution is supported for the app.
                 String attributionId = Settings.getAttributionId(context.getContentResolver());
 
-                state = new SessionEventsState(attributionId, context.getPackageName());
+                state = new SessionEventsState(attributionId, context.getPackageName(), hashedDeviceAndAppId);
                 stateMap.put(accessTokenAppId, state);
             }
             return state;
@@ -809,7 +764,7 @@ private static void flushAndWait(final FlushReason reason) {
     private static FlushStatistics buildAndExecuteRequests(FlushReason reason, Set<AccessTokenAppIdPair> keysToFlush) {
         FlushStatistics flushResults = new FlushStatistics();
 
-        boolean limitEventUsage = getLimitEventUsage(applicationContext);
+        boolean limitEventUsage = Settings.getLimitEventAndDataUsage(applicationContext);
 
         List<Request> requestsToExecute = new ArrayList<Request>();
         for (AccessTokenAppIdPair accessTokenAppId : keysToFlush) {
@@ -976,6 +931,7 @@ private static void notifyDeveloperError(String message) {
         private int numSkippedEventsDueToFullBuffer;
         private String attributionId;
         private String packageName;
+        private String hashedDeviceAndAppId;
 
         public static final String EVENT_COUNT_KEY = "event_count";
         public static final String ENCODED_EVENTS_KEY = "encoded_events";
@@ -983,9 +939,10 @@ private static void notifyDeveloperError(String message) {
 
         private final int MAX_ACCUMULATED_LOG_EVENTS = 1000;
 
-        public SessionEventsState(String attributionId, String packageName) {
+        public SessionEventsState(String attributionId, String packageName, String hashedDeviceAndAppId) {
             this.attributionId = attributionId;
             this.packageName = packageName;
+            this.hashedDeviceAndAppId = hashedDeviceAndAppId;
         }
 
         // Synchronize here and in other methods on this class, because could be coming in from different
@@ -1062,11 +1019,11 @@ private void populateRequest(Request request, int numSkipped, JSONArray events,
                 publishParams.setProperty("num_skipped_events", numSkipped);
             }
 
-            if (includeAttribution && attributionId != null) {
-                publishParams.setProperty("attribution", attributionId);
+            if (includeAttribution) {
+                Utility.setAppEventAttributionParameters(publishParams, attributionId,
+                        hashedDeviceAndAppId, limitEventUsage);
             }
 
-            publishParams.setProperty("application_tracking_enabled", !limitEventUsage);
             publishParams.setProperty("application_package_name", packageName);
 
             request.setGraphObject(publishParams);
diff --git a/facebook/src/com/facebook/AuthorizationClient.java b/facebook/src/com/facebook/AuthorizationClient.java
index 51b178c9a..cbd308add 100644
--- a/facebook/src/com/facebook/AuthorizationClient.java
+++ b/facebook/src/com/facebook/AuthorizationClient.java
@@ -720,6 +720,13 @@ void cancel() {
             }
         }
 
+        @Override
+        boolean needsRestart() {
+            // if the getTokenClient is null, that means an orientation change has occurred, and we need
+            // to recreate the GetTokenClient, so return true to indicate we need a restart
+            return getTokenClient == null;
+        }
+
         boolean tryAuthorize(final AuthorizationRequest request) {
             getTokenClient = new GetTokenClient(context, request.getApplicationId());
             if (!getTokenClient.start()) {
diff --git a/facebook/src/com/facebook/FacebookSdkVersion.java b/facebook/src/com/facebook/FacebookSdkVersion.java
index bdda281f9..626cc7bf5 100644
--- a/facebook/src/com/facebook/FacebookSdkVersion.java
+++ b/facebook/src/com/facebook/FacebookSdkVersion.java
@@ -17,6 +17,6 @@
 package com.facebook;
 
 final class FacebookSdkVersion {
-    public static final String BUILD = "3.5.2";
-    public static final String MIGRATION_BUNDLE = "fbsdk:20130708";
+    public static final String BUILD = "3.6.0";
+    public static final String MIGRATION_BUNDLE = "fbsdk:20131203";
 }
diff --git a/facebook/src/com/facebook/Request.java b/facebook/src/com/facebook/Request.java
index 199cb7669..cf2ba39f9 100644
--- a/facebook/src/com/facebook/Request.java
+++ b/facebook/src/com/facebook/Request.java
@@ -508,7 +508,7 @@ public static Request newStatusUpdateRequest(Session session, String message, Gr
      * the activeSession; otherwise the ID will represent the user logged into the native Facebook app on the device.
      * A `null` ID will be provided into the callback if a) there is no native Facebook app, b) no one is logged into
      * it, or c) the app has previously called
-     * {@link AppEventsLogger#setLimitEventUsage(android.content.Context, boolean)} with `true` for this user.
+     * {@link Settings#setLimitEventAndDataUsage(android.content.Context, boolean)} with `true` for this user.
      *
      * @param session
      *            the Session to issue the Request on, or null; if non-null, the session must be in an opened state.
@@ -542,7 +542,7 @@ public static Request newCustomAudienceThirdPartyIdRequest(Session session, Cont
      * the activeSession; otherwise the ID will represent the user logged into the native Facebook app on the device.
      * A `null` ID will be provided into the callback if a) there is no native Facebook app, b) no one is logged into
      * it, or c) the app has previously called
-     * {@link AppEventsLogger#setLimitEventUsage(android.content.Context, boolean)} with `true` for this user.
+     * {@link Settings#setLimitEventAndDataUsage(android.content.Context, boolean)} ;} with `true` for this user.
      *
      * @param session
      *            the Session to issue the Request on, or null; if non-null, the session must be in an opened state.
@@ -597,7 +597,7 @@ public static Request newCustomAudienceThirdPartyIdRequest(Session session,
 
         // Server will choose to not provide the App User ID in the event that event usage has been limited for
         // this user for this app.
-        if (AppEventsLogger.getLimitEventUsage(context)) {
+        if (Settings.getLimitEventAndDataUsage(context)) {
             parameters.putString("limit_event_usage", "1");
         }
 
diff --git a/facebook/src/com/facebook/Session.java b/facebook/src/com/facebook/Session.java
index 743a70f34..16efff2e0 100644
--- a/facebook/src/com/facebook/Session.java
+++ b/facebook/src/com/facebook/Session.java
@@ -1018,6 +1018,7 @@ private void requestNewPermissions(NewPermissionsRequest newPermissionsRequest,
             }
 
             newPermissionsRequest.setValidateSameFbidAsToken(getAccessToken());
+            addCallback(newPermissionsRequest.getCallback());
             authorize(newPermissionsRequest);
         }
     }
@@ -2011,7 +2012,8 @@ public NewPermissionsRequest(Fragment fragment, String... permissions) {
         }
 
         /**
-         * Sets the StatusCallback for the NewPermissionsRequest.
+         * Sets the StatusCallback for the NewPermissionsRequest. Note that once the request is made, this callback
+         * will be added to the session, and will receive all future state changes on the session.
          *
          * @param statusCallback The {@link StatusCallback SessionStatusCallback} to
          *                       notify regarding Session state changes.
diff --git a/facebook/src/com/facebook/Settings.java b/facebook/src/com/facebook/Settings.java
index 734dfefac..d964b5821 100644
--- a/facebook/src/com/facebook/Settings.java
+++ b/facebook/src/com/facebook/Settings.java
@@ -63,9 +63,10 @@
     private static final String PUBLISH_ACTIVITY_PATH = "%s/activities";
     private static final String MOBILE_INSTALL_EVENT = "MOBILE_APP_INSTALL";
     private static final String ANALYTICS_EVENT = "event";
-    private static final String ATTRIBUTION_KEY = "attribution";
     private static final String AUTO_PUBLISH = "auto_publish";
 
+    private static final String APP_EVENT_PREFERENCES = "com.facebook.sdk.appEventPreferences";
+
     private static final BlockingQueue<Runnable> DEFAULT_WORK_QUEUE = new LinkedBlockingQueue<Runnable>(10);
 
     private static final ThreadFactory DEFAULT_THREAD_FACTORY = new ThreadFactory() {
@@ -355,9 +356,12 @@ static Response publishInstallAndWaitForResponse(
 
             GraphObject publishParams = GraphObject.Factory.create();
             publishParams.setProperty(ANALYTICS_EVENT, MOBILE_INSTALL_EVENT);
-            publishParams.setProperty(ATTRIBUTION_KEY, attributionId);
+
+            Utility.setAppEventAttributionParameters(publishParams,
+                    attributionId,
+                    Utility.getHashedDeviceAndAppID(context, applicationId),
+                    !getLimitEventAndDataUsage(context));
             publishParams.setProperty(AUTO_PUBLISH, isAutoPublish);
-            publishParams.setProperty("application_tracking_enabled", !AppEventsLogger.getLimitEventUsage(context));
             publishParams.setProperty("application_package_name", context.getPackageName());
 
             String publishUrl = String.format(PUBLISH_ACTIVITY_PATH, applicationId);
@@ -467,4 +471,31 @@ public static String getSdkVersion() {
     public static String getMigrationBundle() {
         return FacebookSdkVersion.MIGRATION_BUNDLE;
     }
+
+    /**
+     * Gets whether data such as that generated through AppEventsLogger and sent to Facebook should be restricted from
+     * being used for purposes other than analytics and conversions, such as for targeting ads to this user.  Defaults
+     * to false.  This value is stored on the device and persists across app launches.
+     *
+     * @param context   Used to read the value.
+     */
+    public static boolean getLimitEventAndDataUsage(Context context) {
+        SharedPreferences preferences = context.getSharedPreferences(APP_EVENT_PREFERENCES, Context.MODE_PRIVATE);
+        return preferences.getBoolean("limitEventUsage", false);
+    }
+
+    /**
+     * Sets whether data such as that generated through AppEventsLogger and sent to Facebook should be restricted from
+     * being used for purposes other than analytics and conversions, such as for targeting ads to this user.  Defaults
+     * to false.  This value is stored on the device and persists across app launches.  Changes to this setting will
+     * apply to app events currently queued to be flushed.
+     *
+     * @param context   Used to persist this value across app runs.
+     */
+    public static void setLimitEventAndDataUsage(Context context, boolean limitEventUsage) {
+        SharedPreferences preferences = context.getSharedPreferences(APP_EVENT_PREFERENCES, Context.MODE_PRIVATE);
+        SharedPreferences.Editor editor = preferences.edit();
+        editor.putBoolean("limitEventUsage", limitEventUsage);
+        editor.commit();
+    }
 }
diff --git a/facebook/src/com/facebook/internal/Utility.java b/facebook/src/com/facebook/internal/Utility.java
index 0bebf6ed9..28afbf84f 100644
--- a/facebook/src/com/facebook/internal/Utility.java
+++ b/facebook/src/com/facebook/internal/Utility.java
@@ -22,6 +22,7 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.Parcelable;
+import android.provider.Settings.Secure;
 import android.text.TextUtils;
 import android.util.Log;
 import android.webkit.CookieManager;
@@ -50,6 +51,7 @@
 public final class Utility {
     static final String LOG_TAG = "FacebookSDK";
     private static final String HASH_ALGORITHM_MD5 = "MD5";
+    private static final String HASH_ALGORITHM_SHA1 = "SHA-1";
     private static final String URL_SCHEME = "https";
     private static final String SUPPORTS_ATTRIBUTION = "supports_attribution";
     private static final String SUPPORTS_IMPLICIT_SDK_LOGGING = "supports_implicit_sdk_logging";
@@ -121,9 +123,17 @@ public static boolean isNullOrEmpty(String s) {
     }
 
     static String md5hash(String key) {
+        return hashWithAlgorithm(HASH_ALGORITHM_MD5, key);
+    }
+
+    private static String sha1hash(String key) {
+        return hashWithAlgorithm(HASH_ALGORITHM_SHA1, key);
+    }
+
+    private static String hashWithAlgorithm(String algorithm, String key) {
         MessageDigest hash = null;
         try {
-            hash = MessageDigest.getInstance(HASH_ALGORITHM_MD5);
+            hash = MessageDigest.getInstance(algorithm);
         } catch (NoSuchAlgorithmException e) {
             return null;
         }
@@ -393,4 +403,30 @@ public static void deleteDirectory(File directoryOrFile) {
         }
         return result;
     }
+
+    // Return a hash of the android_id combined with the appid.  Intended to dedupe requests on the server side
+    // in order to do counting of users unknown to Facebook.  Because we put the appid into the key prior to hashing,
+    // we cannot do correlation of the same user across multiple apps -- this is intentional.  When we transition to
+    // the Google advertising ID, we'll get rid of this and always send that up.
+    public static String getHashedDeviceAndAppID(Context context, String applicationId) {
+        String androidId = Secure.getString(context.getContentResolver(), Secure.ANDROID_ID);
+
+        if (androidId == null) {
+            return null;
+        } else {
+            return sha1hash(androidId + applicationId);
+        }
+    }
+
+    public static void setAppEventAttributionParameters(GraphObject params,
+            String attributionId, String hashedDeviceAndAppId, boolean limitEventUsage) {
+        // Send attributionID if it exists, otherwise send a hashed device+appid specific value as the advertiser_id.
+        if (attributionId != null) {
+            params.setProperty("attribution", attributionId);
+        } else if (hashedDeviceAndAppId != null) {
+            params.setProperty("advertiser_id", hashedDeviceAndAppId);
+        }
+
+        params.setProperty("application_tracking_enabled", !limitEventUsage);
+    }
 }
diff --git a/facebook/src/com/facebook/widget/FriendPickerFragment.java b/facebook/src/com/facebook/widget/FriendPickerFragment.java
index cddc3ace3..b657ec567 100644
--- a/facebook/src/com/facebook/widget/FriendPickerFragment.java
+++ b/facebook/src/com/facebook/widget/FriendPickerFragment.java
@@ -22,15 +22,15 @@
 import android.os.Bundle;
 import android.text.TextUtils;
 import android.util.AttributeSet;
-import com.facebook.*;
+import com.facebook.AppEventsLogger;
+import com.facebook.FacebookException;
+import com.facebook.Request;
+import com.facebook.Session;
 import com.facebook.android.R;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.model.GraphUser;
 
-import java.util.Arrays;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Set;
+import java.util.*;
 
 /**
  * Provides a Fragment that displays a list of a user's friends and allows one or more of the
@@ -55,6 +55,8 @@
 
     private boolean multiSelect = true;
 
+    private List<String> preSelectedFriendIds = new ArrayList<String>();
+
     /**
      * Default constructor. Creates a Fragment with all default properties.
      */
@@ -110,6 +112,42 @@ public void setMultiSelect(boolean multiSelect) {
         }
     }
 
+    /**
+     * Sets the list of friends for pre selection. These friends will be selected by default.
+     * @param userIds list of friends as ids
+     */
+    public void setSelectionByIds(List<String> userIds) {
+        preSelectedFriendIds.addAll(userIds);
+    }
+
+    /**
+     * Sets the list of friends for pre selection. These friends will be selected by default.
+     * @param userIds list of friends as ids
+     */
+    public void setSelectionByIds(String... userIds) {
+        setSelectionByIds(Arrays.asList(userIds));
+    }
+
+    /**
+     * Sets the list of friends for pre selection. These friends will be selected by default.
+     * @param graphUsers list of friends as GraphUsers
+     */
+    public void setSelection(GraphUser... graphUsers) {
+        setSelection(Arrays.asList(graphUsers));
+    }
+
+    /**
+     * Sets the list of friends for pre selection. These friends will be selected by default.
+     * @param graphUsers list of friends as GraphUsers
+     */
+    public void setSelection(List<GraphUser> graphUsers) {
+        List<String> userIds = new ArrayList<String>();
+        for(GraphUser graphUser: graphUsers) {
+            userIds.add(graphUser.getId());
+        }
+        setSelectionByIds(userIds);
+    }
+
     /**
      * Gets the currently-selected list of users.
      * @return the currently-selected list of users
@@ -205,6 +243,12 @@ void logAppEvents(boolean doneButtonClicked) {
         logger.logSdkEvent(AnalyticsEvents.EVENT_FRIEND_PICKER_USAGE, null, parameters);
     }
 
+    @Override
+    public void loadData(boolean forceReload) {
+        super.loadData(forceReload);
+        setSelectedGraphObjects(preSelectedFriendIds);
+    }
+
     private Request createRequest(String userID, Set<String> extraFields, Session session) {
         Request request = Request.newGraphPathRequest(session, userID + "/friends", null);
 
diff --git a/facebook/src/com/facebook/widget/PickerFragment.java b/facebook/src/com/facebook/widget/PickerFragment.java
index ca6258b4d..7718a0c26 100644
--- a/facebook/src/com/facebook/widget/PickerFragment.java
+++ b/facebook/src/com/facebook/widget/PickerFragment.java
@@ -515,6 +515,14 @@ boolean filterIncludesItem(T graphObject) {
         return adapter.getGraphObjectsById(selectionStrategy.getSelectedIds());
     }
 
+    void setSelectedGraphObjects(List<String> objectIds) {
+        for(String objectId : objectIds) {
+            if(!this.selectionStrategy.isSelected(objectId)) {
+                this.selectionStrategy.toggleSelection(objectId);
+            }
+        }
+    }
+
     void saveSettingsToBundle(Bundle outState) {
         outState.putBoolean(SHOW_PICTURES_BUNDLE_KEY, showPictures);
         if (!extraFields.isEmpty()) {
diff --git a/facebook/src/com/facebook/widget/WebDialog.java b/facebook/src/com/facebook/widget/WebDialog.java
index e4fb9f7bf..70ac868d2 100644
--- a/facebook/src/com/facebook/widget/WebDialog.java
+++ b/facebook/src/com/facebook/widget/WebDialog.java
@@ -29,7 +29,6 @@
 import android.net.http.SslError;
 import android.os.Bundle;
 import android.util.DisplayMetrics;
-import android.util.Pair;
 import android.view.*;
 import android.webkit.SslErrorHandler;
 import android.webkit.WebView;
@@ -58,11 +57,16 @@
     static final boolean DISABLE_SSL_CHECK_FOR_TESTING = false;
 
     // width below which there are no extra margins
-    private static final int NO_BUFFER_SCREEN_WIDTH = 512;
+    private static final int NO_PADDING_SCREEN_WIDTH = 480;
     // width beyond which we're always using the MIN_SCALE_FACTOR
-    private static final int MAX_BUFFER_SCREEN_WIDTH = 1024;
-    // the minimum scaling factor for the web dialog (60% of screen size)
-    private static final double MIN_SCALE_FACTOR = 0.6;
+    private static final int MAX_PADDING_SCREEN_WIDTH = 800;
+    // height below which there are no extra margins
+    private static final int NO_PADDING_SCREEN_HEIGHT = 800;
+    // height beyond which we're always using the MIN_SCALE_FACTOR
+    private static final int MAX_PADDING_SCREEN_HEIGHT = 1280;
+
+    // the minimum scaling factor for the web dialog (50% of screen size)
+    private static final double MIN_SCALE_FACTOR = 0.5;
     // translucent border around the webview
     private static final int BACKGROUND_GRAY = 0xCC000000;
 
@@ -208,9 +212,12 @@ public void onCancel(DialogInterface dialogInterface) {
         requestWindowFeature(Window.FEATURE_NO_TITLE);
         contentFrameLayout = new FrameLayout(getContext());
 
-        // First calculate the margins around the frame layout
-        Pair<Integer, Integer> margins = getMargins();
-        contentFrameLayout.setPadding(margins.first, margins.second, margins.first, margins.second);
+        // First calculate how big the frame layout should be
+        calculateSize();
+        getWindow().setGravity(Gravity.CENTER);
+
+        // resize the dialog if the soft keyboard comes up
+        getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE);
 
         /* Create the 'x' image, but don't add to the contentFrameLayout layout yet
          * at this point, we only need to know its drawable width and height
@@ -230,37 +237,54 @@ public void onCancel(DialogInterface dialogInterface) {
         */
         contentFrameLayout.addView(crossImageView, new ViewGroup.LayoutParams(
                 ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT));
-        addContentView(contentFrameLayout,
-                new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
+
+        setContentView(contentFrameLayout);
     }
 
-    private Pair<Integer, Integer> getMargins() {
+    private void calculateSize() {
         WindowManager wm = (WindowManager) getContext().getSystemService(Context.WINDOW_SERVICE);
         Display display = wm.getDefaultDisplay();
         DisplayMetrics metrics = new DisplayMetrics();
         display.getMetrics(metrics);
-        int width = metrics.widthPixels;
-        int height = metrics.heightPixels;
+        // always use the portrait dimensions to do the scaling calculations so we always get a portrait shaped
+        // web dialog
+        int width = metrics.widthPixels < metrics.heightPixels ? metrics.widthPixels : metrics.heightPixels;
+        int height = metrics.widthPixels < metrics.heightPixels ? metrics.heightPixels : metrics.widthPixels;
+
+        int dialogWidth = Math.min(
+                getScaledSize(width, metrics.density, NO_PADDING_SCREEN_WIDTH, MAX_PADDING_SCREEN_WIDTH),
+                metrics.widthPixels);
+        int dialogHeight = Math.min(
+                getScaledSize(height, metrics.density, NO_PADDING_SCREEN_HEIGHT, MAX_PADDING_SCREEN_HEIGHT),
+                metrics.heightPixels);
+
+        getWindow().setLayout(dialogWidth, dialogHeight);
+    }
 
+    /**
+     * Returns a scaled size (either width or height) based on the parameters passed.
+     * @param screenSize a pixel dimension of the screen (either width or height)
+     * @param density density of the screen
+     * @param noPaddingSize the size at which there's no padding for the dialog
+     * @param maxPaddingSize the size at which to apply maximum padding for the dialog
+     * @return a scaled size.
+     */
+    private int getScaledSize(int screenSize, float density, int noPaddingSize, int maxPaddingSize) {
+        int scaledSize = (int) ((float) screenSize / density);
         double scaleFactor;
-        int scaledWidth = (int) ((float) width / metrics.density);
-        if (scaledWidth <= NO_BUFFER_SCREEN_WIDTH) {
+        if (scaledSize <= noPaddingSize) {
             scaleFactor = 1.0;
-        } else if (scaledWidth >= MAX_BUFFER_SCREEN_WIDTH) {
+        } else if (scaledSize >= maxPaddingSize) {
             scaleFactor = MIN_SCALE_FACTOR;
         } else {
-            // between the NO_BUFFER and MAX_BUFFER widths, we take a linear reduction to go from 100%
+            // between the noPadding and maxPadding widths, we take a linear reduction to go from 100%
             // of screen size down to MIN_SCALE_FACTOR
             scaleFactor = MIN_SCALE_FACTOR +
-                    ((double) (MAX_BUFFER_SCREEN_WIDTH - scaledWidth))
-                            / ((double) (MAX_BUFFER_SCREEN_WIDTH - NO_BUFFER_SCREEN_WIDTH))
+                    ((double) (maxPaddingSize - scaledSize))
+                            / ((double) (maxPaddingSize - noPaddingSize))
                             * (1.0 - MIN_SCALE_FACTOR);
         }
-
-        int leftRightMargin = (int) (width * (1.0 - scaleFactor) / 2);
-        int topBottomMargin = (int) (height * (1.0 - scaleFactor) / 2);
-
-        return new Pair<Integer, Integer>(leftRightMargin, topBottomMargin);
+        return (int) (screenSize * scaleFactor);
     }
 
     private void sendSuccessToListener(Bundle values) {
@@ -301,7 +325,7 @@ public void onClick(View v) {
         crossImageView.setImageDrawable(crossDrawable);
         /* 'x' should not be visible while webview is loading
          * make it visible only after webview has fully loaded
-        */
+         */
         crossImageView.setVisibility(View.INVISIBLE);
     }
 
diff --git a/facebook/tests/build.gradle b/facebook/tests/build.gradle
new file mode 100644
index 000000000..1a7be02eb
--- /dev/null
+++ b/facebook/tests/build.gradle
@@ -0,0 +1,29 @@
+apply plugin: 'android'
+
+dependencies {
+    compile project(':facebook')
+    compile project(':TestApp')
+}
+
+android {
+    compileSdkVersion 19
+    buildToolsVersion "19"
+
+    defaultConfig {
+        minSdkVersion 8
+        targetSdkVersion 19
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+
+        instrumentTest {
+            java.srcDirs = ['src']
+            assets.srcDirs = ['assets']
+        }
+    }
+}
diff --git a/facebook/tests/src/com/facebook/AppEventsLoggerTests.java b/facebook/tests/src/com/facebook/AppEventsLoggerTests.java
index 6085d2345..aedeccf27 100644
--- a/facebook/tests/src/com/facebook/AppEventsLoggerTests.java
+++ b/facebook/tests/src/com/facebook/AppEventsLoggerTests.java
@@ -84,7 +84,7 @@ public void run() {
 
         logger1.logEvent("an_event");
 
-        logger1.onContextStop();
+        AppEventsLogger.onContextStop();
 
         FileInputStream fis = getActivity().openFileInput(AppEventsLogger.PersistedEvents.PERSISTED_EVENTS_FILENAME);
         assertNotNull(fis);
@@ -113,6 +113,7 @@ public void run() {
         broadcastManager.unregisterReceiver(waitForBroadcastReceiver);
     }
 
+    @SuppressWarnings("deprecation")
     public void testInsightsLoggerCompatibility() throws InterruptedException {
         AppEventsLogger.setFlushBehavior(AppEventsLogger.FlushBehavior.AUTO);
 
diff --git a/facebook/tests/src/com/facebook/AsyncRequestTests.java b/facebook/tests/src/com/facebook/AsyncRequestTests.java
index 28f23adae..07857df61 100644
--- a/facebook/tests/src/com/facebook/AsyncRequestTests.java
+++ b/facebook/tests/src/com/facebook/AsyncRequestTests.java
@@ -186,6 +186,7 @@ public void testMixedSuccessAndFailure() {
 
     @MediumTest
     @LargeTest
+    @SuppressWarnings("deprecation")
     public void testStaticExecuteMeAsync() {
         final TestSession session = openTestSessionWithSharedUser();
 
@@ -210,6 +211,7 @@ public void run() {
 
     @MediumTest
     @LargeTest
+    @SuppressWarnings("deprecation")
     public void testStaticExecuteMyFriendsAsync() {
         final TestSession session = openTestSessionWithSharedUser();
 
diff --git a/facebook/tests/src/com/facebook/NativeAppCallAttachmentStoreTest.java b/facebook/tests/src/com/facebook/NativeAppCallAttachmentStoreTest.java
index 90a688fd3..01314889e 100644
--- a/facebook/tests/src/com/facebook/NativeAppCallAttachmentStoreTest.java
+++ b/facebook/tests/src/com/facebook/NativeAppCallAttachmentStoreTest.java
@@ -87,7 +87,7 @@ public void testCleanupAttachmentsForCall() throws Exception {
     }
 
     public void testGetAttachmentsDirectory() throws Exception {
-        File dir = storeUnderTest.getAttachmentsDirectory(getActivity());
+        File dir = NativeAppCallAttachmentStore.getAttachmentsDirectory(getActivity());
         assertNotNull(dir);
         assertTrue(dir.getAbsolutePath().contains(NativeAppCallAttachmentStore.ATTACHMENTS_DIR_NAME));
     }
diff --git a/facebook/tests/src/com/facebook/NativeAppCallContentProviderTest.java b/facebook/tests/src/com/facebook/NativeAppCallContentProviderTest.java
index ddd51646e..a2aa79a05 100644
--- a/facebook/tests/src/com/facebook/NativeAppCallContentProviderTest.java
+++ b/facebook/tests/src/com/facebook/NativeAppCallContentProviderTest.java
@@ -70,6 +70,7 @@ public void testUpdate() throws Exception {
         assertEquals(0, providerUnderTest.update(null, null, null, null));
     }
 
+    @SuppressWarnings("unused")
     public void testOpenFileWithNullUri() throws Exception {
         try {
             ParcelFileDescriptor pfd = providerUnderTest.openFile(null, "r");
@@ -78,6 +79,7 @@ public void testOpenFileWithNullUri() throws Exception {
         }
     }
 
+    @SuppressWarnings("unused")
     public void testOpenFileWithBadPath() throws Exception {
         try {
             ParcelFileDescriptor pfd = providerUnderTest.openFile(Uri.parse("/"), "r");
@@ -86,6 +88,7 @@ public void testOpenFileWithBadPath() throws Exception {
         }
     }
 
+    @SuppressWarnings("unused")
     public void testOpenFileWithoutCallIdAndAttachment() throws Exception {
         try {
             ParcelFileDescriptor pfd = providerUnderTest.openFile(Uri.parse("/foo"), "r");
@@ -94,6 +97,7 @@ public void testOpenFileWithoutCallIdAndAttachment() throws Exception {
         }
     }
 
+    @SuppressWarnings("unused")
     public void testOpenFileWithBadCallID() throws Exception {
         try {
             ParcelFileDescriptor pfd = providerUnderTest.openFile(Uri.parse("/foo/bar"), "r");
diff --git a/facebook/tests/src/com/facebook/SessionTestsBase.java b/facebook/tests/src/com/facebook/SessionTestsBase.java
index c7b673594..abbb6d2c3 100644
--- a/facebook/tests/src/com/facebook/SessionTestsBase.java
+++ b/facebook/tests/src/com/facebook/SessionTestsBase.java
@@ -16,11 +16,8 @@
 
 package com.facebook;
 
-import android.content.BroadcastReceiver;
 import android.content.Context;
-import android.content.Intent;
 import android.os.Bundle;
-import android.os.ConditionVariable;
 import android.os.Looper;
 import com.facebook.internal.Utility;
 
diff --git a/facebook/tests/src/com/facebook/SettingsTests.java b/facebook/tests/src/com/facebook/SettingsTests.java
index 2638f4ef3..435de6d40 100644
--- a/facebook/tests/src/com/facebook/SettingsTests.java
+++ b/facebook/tests/src/com/facebook/SettingsTests.java
@@ -84,7 +84,7 @@ public void testLogdException() {
         }
 
         try {
-            throw new IOException(null);
+            throw new IOException((String)null);
         } catch (IOException e) {
             Utility.logd("SettingsTest", e);
         }
diff --git a/facebook/tests/src/com/facebook/model/GraphObjectFactoryTests.java b/facebook/tests/src/com/facebook/model/GraphObjectFactoryTests.java
index 801b1d5cb..8b069b7ce 100644
--- a/facebook/tests/src/com/facebook/model/GraphObjectFactoryTests.java
+++ b/facebook/tests/src/com/facebook/model/GraphObjectFactoryTests.java
@@ -463,7 +463,7 @@ public void testSetPropertyWithGraphObjectList() throws JSONException {
         JSONObject jsonObject = new JSONObject();
         GraphObject graphObject = GraphObject.Factory.create(jsonObject);
 
-        GraphObjectList nestedList = GraphObject.Factory.createList(GraphObject.class);
+        GraphObjectList<GraphObject> nestedList = GraphObject.Factory.createList(GraphObject.class);
         graphObject.setProperty("foo", nestedList);
 
         JSONArray nestedJsonArray = jsonObject.getJSONArray("foo");
diff --git a/facebook/tests/src/com/facebook/widget/FacebookDialogTests.java b/facebook/tests/src/com/facebook/widget/FacebookDialogTests.java
index 9724ccc26..2e4d9c841 100644
--- a/facebook/tests/src/com/facebook/widget/FacebookDialogTests.java
+++ b/facebook/tests/src/com/facebook/widget/FacebookDialogTests.java
@@ -16,9 +16,7 @@
 
 package com.facebook.widget;
 
-import android.content.Intent;
 import android.graphics.Bitmap;
-import android.os.Bundle;
 import com.facebook.FacebookTestCase;
 import com.facebook.internal.NativeProtocol;
 import com.facebook.model.GraphObject;
@@ -228,6 +226,7 @@ public void testOpenGraphDialogBuilderRequiresPreviewPropertyToExist() {
         }
     }
 
+    @SuppressWarnings("deprecation")
     public void testOpenGraphDialogBuilderDeprecatedConstructorRequiresActionType() {
         try {
             OpenGraphAction action = OpenGraphAction.Factory.createForPost();
@@ -243,6 +242,7 @@ public void testOpenGraphDialogBuilderDeprecatedConstructorRequiresActionType()
 
     }
 
+    @SuppressWarnings("deprecation")
     public void testOpenGraphDialogBuilderDeprecatedConstructorRequiresActionTypeMatches() {
         try {
             OpenGraphAction action = OpenGraphAction.Factory.createForPost("foo");
diff --git a/facebook/tests/src/com/facebook/widget/UserSettingsFragmentTests.java b/facebook/tests/src/com/facebook/widget/UserSettingsFragmentTests.java
index 386a8e191..185caa0b8 100644
--- a/facebook/tests/src/com/facebook/widget/UserSettingsFragmentTests.java
+++ b/facebook/tests/src/com/facebook/widget/UserSettingsFragmentTests.java
@@ -22,7 +22,6 @@
 import com.facebook.SessionDefaultAudience;
 import com.facebook.SessionLoginBehavior;
 
-import java.util.Arrays;
 import java.util.List;
 
 public class UserSettingsFragmentTests extends FragmentTestCase<UserSettingsFragmentTests.TestActivity> {
diff --git a/gradle/gradle/wrapper/gradle-wrapper.jar b/gradle/gradle/wrapper/gradle-wrapper.jar
new file mode 100644
index 000000000..667288ad6
Binary files /dev/null and b/gradle/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/gradle/wrapper/gradle-wrapper.properties b/gradle/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
index 000000000..221ce08bc
--- /dev/null
+++ b/gradle/gradle/wrapper/gradle-wrapper.properties
@@ -0,0 +1,6 @@
+#Mon Nov 04 15:03:41 PST 2013
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
+distributionUrl=http\://services.gradle.org/distributions/gradle-1.8-bin.zip
diff --git a/gradle/gradlew b/gradle/gradlew
new file mode 100755
index 000000000..91a7e269e
--- /dev/null
+++ b/gradle/gradlew
@@ -0,0 +1,164 @@
+#!/usr/bin/env bash
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn ( ) {
+    echo "$*"
+}
+
+die ( ) {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+esac
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched.
+if $cygwin ; then
+    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+fi
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >&-
+APP_HOME="`pwd -P`"
+cd "$SAVED" >&-
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=$((i+1))
+    done
+    case $i in
+        (0) set -- ;;
+        (1) set -- "$args0" ;;
+        (2) set -- "$args0" "$args1" ;;
+        (3) set -- "$args0" "$args1" "$args2" ;;
+        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
+}
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
diff --git a/gradle/gradlew.bat b/gradle/gradlew.bat
new file mode 100644
index 000000000..aec99730b
--- /dev/null
+++ b/gradle/gradlew.bat
@@ -0,0 +1,90 @@
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windowz variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
new file mode 100644
index 000000000..667288ad6
Binary files /dev/null and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
index 000000000..7b38dc7b5
--- /dev/null
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -0,0 +1,6 @@
+#Wed Nov 13 23:44:57 PST 2013
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
+distributionUrl=http\://services.gradle.org/distributions/gradle-1.8-all.zip
diff --git a/gradlew b/gradlew
new file mode 100755
index 000000000..91a7e269e
--- /dev/null
+++ b/gradlew
@@ -0,0 +1,164 @@
+#!/usr/bin/env bash
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn ( ) {
+    echo "$*"
+}
+
+die ( ) {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+esac
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched.
+if $cygwin ; then
+    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+fi
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >&-
+APP_HOME="`pwd -P`"
+cd "$SAVED" >&-
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=$((i+1))
+    done
+    case $i in
+        (0) set -- ;;
+        (1) set -- "$args0" ;;
+        (2) set -- "$args0" "$args1" ;;
+        (3) set -- "$args0" "$args1" "$args2" ;;
+        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
+}
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
diff --git a/gradlew.bat b/gradlew.bat
new file mode 100644
index 000000000..aec99730b
--- /dev/null
+++ b/gradlew.bat
@@ -0,0 +1,90 @@
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windowz variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
diff --git a/samples/FriendPickerSample/build.gradle b/samples/FriendPickerSample/build.gradle
new file mode 100644
index 000000000..a2cda0280
--- /dev/null
+++ b/samples/FriendPickerSample/build.gradle
@@ -0,0 +1,23 @@
+apply plugin: 'android'
+
+dependencies {
+    compile project(':facebook')
+}
+
+android {
+    compileSdkVersion 19
+    buildToolsVersion "19"
+
+    defaultConfig {
+        minSdkVersion 8
+        targetSdkVersion 19
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+    }
+}
diff --git a/samples/FriendPickerSample/src/com/facebook/samples/friendpicker/FriendPickerApplication.java b/samples/FriendPickerSample/src/com/facebook/samples/friendpicker/FriendPickerApplication.java
index e6563d2d2..9d901ca84 100644
--- a/samples/FriendPickerSample/src/com/facebook/samples/friendpicker/FriendPickerApplication.java
+++ b/samples/FriendPickerSample/src/com/facebook/samples/friendpicker/FriendPickerApplication.java
@@ -19,18 +19,18 @@
 import android.app.Application;
 import com.facebook.model.GraphUser;
 
-import java.util.Collection;
+import java.util.List;
 
 // We use a custom Application class to store our minimal state data (which users have been selected).
 // A real-world application will likely require a more robust data model.
 public class FriendPickerApplication extends Application {
-    private Collection<GraphUser> selectedUsers;
+    private List<GraphUser> selectedUsers;
 
-    public Collection<GraphUser> getSelectedUsers() {
+    public List<GraphUser> getSelectedUsers() {
         return selectedUsers;
     }
 
-    public void setSelectedUsers(Collection<GraphUser> selectedUsers) {
+    public void setSelectedUsers(List<GraphUser> selectedUsers) {
         this.selectedUsers = selectedUsers;
     }
 }
diff --git a/samples/FriendPickerSample/src/com/facebook/samples/friendpicker/FriendPickerSampleActivity.java b/samples/FriendPickerSample/src/com/facebook/samples/friendpicker/FriendPickerSampleActivity.java
index f91d86b87..1c8ec2b62 100644
--- a/samples/FriendPickerSample/src/com/facebook/samples/friendpicker/FriendPickerSampleActivity.java
+++ b/samples/FriendPickerSample/src/com/facebook/samples/friendpicker/FriendPickerSampleActivity.java
@@ -137,9 +137,6 @@ private void onClickPickFriends() {
 
     private void startPickFriendsActivity() {
         if (ensureOpenSession()) {
-            FriendPickerApplication application = (FriendPickerApplication) getApplication();
-            application.setSelectedUsers(null);
-
             Intent intent = new Intent(this, PickFriendsActivity.class);
             // Note: The following line is optional, as multi-select behavior is the default for
             // FriendPickerFragment. It is here to demonstrate how parameters could be passed to the
diff --git a/samples/FriendPickerSample/src/com/facebook/samples/friendpicker/PickFriendsActivity.java b/samples/FriendPickerSample/src/com/facebook/samples/friendpicker/PickFriendsActivity.java
index 720706315..879cd62bd 100644
--- a/samples/FriendPickerSample/src/com/facebook/samples/friendpicker/PickFriendsActivity.java
+++ b/samples/FriendPickerSample/src/com/facebook/samples/friendpicker/PickFriendsActivity.java
@@ -22,9 +22,12 @@
 import android.support.v4.app.FragmentManager;
 import android.widget.Toast;
 import com.facebook.FacebookException;
+import com.facebook.model.GraphUser;
 import com.facebook.widget.FriendPickerFragment;
 import com.facebook.widget.PickerFragment;
 
+import java.util.List;
+
 // This class provides an example of an Activity that uses FriendPickerFragment to display a list of
 // the user's friends. It takes a programmatic approach to creating the FriendPickerFragment with the
 // desired parameters -- see PickPlaceActivity in the PlacePickerSample project for an example of an
@@ -93,6 +96,11 @@ private void onError(Exception error) {
     protected void onStart() {
         super.onStart();
         try {
+            FriendPickerApplication application = (FriendPickerApplication) getApplication();
+            List<GraphUser> selectedUsers = application.getSelectedUsers();
+            if (selectedUsers != null && !selectedUsers.isEmpty()) {
+                friendPickerFragment.setSelection(selectedUsers);
+            }
             // Load data, unless a query has already taken place.
             friendPickerFragment.loadData(false);
         } catch (Exception ex) {
diff --git a/samples/GraphApiSample/build.gradle b/samples/GraphApiSample/build.gradle
new file mode 100644
index 000000000..a2cda0280
--- /dev/null
+++ b/samples/GraphApiSample/build.gradle
@@ -0,0 +1,23 @@
+apply plugin: 'android'
+
+dependencies {
+    compile project(':facebook')
+}
+
+android {
+    compileSdkVersion 19
+    buildToolsVersion "19"
+
+    defaultConfig {
+        minSdkVersion 8
+        targetSdkVersion 19
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+    }
+}
diff --git a/samples/GraphApiSample/src/com/facebook/samples/graphapi/GraphApiSampleActivity.java b/samples/GraphApiSample/src/com/facebook/samples/graphapi/GraphApiSampleActivity.java
index 2a076f105..b5960c9ac 100644
--- a/samples/GraphApiSample/src/com/facebook/samples/graphapi/GraphApiSampleActivity.java
+++ b/samples/GraphApiSample/src/com/facebook/samples/graphapi/GraphApiSampleActivity.java
@@ -33,7 +33,7 @@
 import java.util.List;
 
 public class GraphApiSampleActivity extends Activity {
-    static final String appId = "307234779396415";
+    static final String APP_ID = "307234779396415";
     static final String PENDING_REQUEST_BUNDLE_KEY = "com.facebook.samples.graphapi:PendingRequest";
 
     Button buttonRequest;
@@ -73,7 +73,7 @@ protected void onResume() {
 
         // Call the 'activateApp' method to log an app event for use in analytics and advertising reporting.  Do so in
         // the onResume methods of the primary Activities that an app may be launched into.
-        AppEventsLogger.activateApp(this);
+        AppEventsLogger.activateApp(this, APP_ID);
     }
 
     @Override
@@ -145,7 +145,7 @@ public void onCompleted(Response response) {
     private Session createSession() {
         Session activeSession = Session.getActiveSession();
         if (activeSession == null || activeSession.getState().isClosed()) {
-            activeSession = new Session.Builder(this).setApplicationId(appId).build();
+            activeSession = new Session.Builder(this).setApplicationId(APP_ID).build();
             Session.setActiveSession(activeSession);
         }
         return activeSession;
diff --git a/samples/HelloFacebookSample/build.gradle b/samples/HelloFacebookSample/build.gradle
new file mode 100644
index 000000000..a2cda0280
--- /dev/null
+++ b/samples/HelloFacebookSample/build.gradle
@@ -0,0 +1,23 @@
+apply plugin: 'android'
+
+dependencies {
+    compile project(':facebook')
+}
+
+android {
+    compileSdkVersion 19
+    buildToolsVersion "19"
+
+    defaultConfig {
+        minSdkVersion 8
+        targetSdkVersion 19
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+    }
+}
diff --git a/samples/PlacePickerSample/build.gradle b/samples/PlacePickerSample/build.gradle
new file mode 100644
index 000000000..a2cda0280
--- /dev/null
+++ b/samples/PlacePickerSample/build.gradle
@@ -0,0 +1,23 @@
+apply plugin: 'android'
+
+dependencies {
+    compile project(':facebook')
+}
+
+android {
+    compileSdkVersion 19
+    buildToolsVersion "19"
+
+    defaultConfig {
+        minSdkVersion 8
+        targetSdkVersion 19
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+    }
+}
diff --git a/samples/ProfilePictureSample/build.gradle b/samples/ProfilePictureSample/build.gradle
new file mode 100644
index 000000000..a2cda0280
--- /dev/null
+++ b/samples/ProfilePictureSample/build.gradle
@@ -0,0 +1,23 @@
+apply plugin: 'android'
+
+dependencies {
+    compile project(':facebook')
+}
+
+android {
+    compileSdkVersion 19
+    buildToolsVersion "19"
+
+    defaultConfig {
+        minSdkVersion 8
+        targetSdkVersion 19
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+    }
+}
diff --git a/samples/RPSSample/build.gradle b/samples/RPSSample/build.gradle
new file mode 100644
index 000000000..a2cda0280
--- /dev/null
+++ b/samples/RPSSample/build.gradle
@@ -0,0 +1,23 @@
+apply plugin: 'android'
+
+dependencies {
+    compile project(':facebook')
+}
+
+android {
+    compileSdkVersion 19
+    buildToolsVersion "19"
+
+    defaultConfig {
+        minSdkVersion 8
+        targetSdkVersion 19
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+    }
+}
diff --git a/samples/Scrumptious/build.gradle b/samples/Scrumptious/build.gradle
new file mode 100644
index 000000000..a2cda0280
--- /dev/null
+++ b/samples/Scrumptious/build.gradle
@@ -0,0 +1,23 @@
+apply plugin: 'android'
+
+dependencies {
+    compile project(':facebook')
+}
+
+android {
+    compileSdkVersion 19
+    buildToolsVersion "19"
+
+    defaultConfig {
+        minSdkVersion 8
+        targetSdkVersion 19
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+    }
+}
diff --git a/samples/SessionLoginSample/build.gradle b/samples/SessionLoginSample/build.gradle
new file mode 100644
index 000000000..a2cda0280
--- /dev/null
+++ b/samples/SessionLoginSample/build.gradle
@@ -0,0 +1,23 @@
+apply plugin: 'android'
+
+dependencies {
+    compile project(':facebook')
+}
+
+android {
+    compileSdkVersion 19
+    buildToolsVersion "19"
+
+    defaultConfig {
+        minSdkVersion 8
+        targetSdkVersion 19
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+    }
+}
diff --git a/samples/SwitchUserSample/build.gradle b/samples/SwitchUserSample/build.gradle
new file mode 100644
index 000000000..a2cda0280
--- /dev/null
+++ b/samples/SwitchUserSample/build.gradle
@@ -0,0 +1,23 @@
+apply plugin: 'android'
+
+dependencies {
+    compile project(':facebook')
+}
+
+android {
+    compileSdkVersion 19
+    buildToolsVersion "19"
+
+    defaultConfig {
+        minSdkVersion 8
+        targetSdkVersion 19
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+    }
+}
diff --git a/settings.gradle b/settings.gradle
new file mode 100644
index 000000000..8fb89427e
--- /dev/null
+++ b/settings.gradle
@@ -0,0 +1,28 @@
+// Facebook SDK
+include ':facebook'
+
+// Tests
+include 'TestApp'
+project(':TestApp').projectDir = new File('facebook/TestApp')
+include 'tests'
+project(':tests').projectDir = new File('facebook/tests')
+
+// Samples
+include 'FriendPickerSample'
+project(':FriendPickerSample').projectDir = new File('samples/FriendPickerSample')
+include 'GraphApiSample'
+project(':GraphApiSample').projectDir = new File('samples/GraphApiSample')
+include 'HelloFacebookSample'
+project(':HelloFacebookSample').projectDir = new File('samples/HelloFacebookSample')
+include 'PlacePickerSample'
+project(':PlacePickerSample').projectDir = new File('samples/PlacePickerSample')
+include 'ProfilePictureSample'
+project(':ProfilePictureSample').projectDir = new File('samples/ProfilePictureSample')
+include 'RPSSample'
+project(':RPSSample').projectDir = new File('samples/RPSSample')
+include 'Scrumptious'
+project(':Scrumptious').projectDir = new File('samples/Scrumptious')
+include 'SessionLoginSample'
+project(':SessionLoginSample').projectDir = new File('samples/SessionLoginSample')
+include 'SwitchUserSample'
+project(':SwitchUserSample').projectDir = new File('samples/SwitchUserSample')
