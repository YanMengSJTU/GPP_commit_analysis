diff --git a/README.mdown b/README.mdown
index ddff896ca..cf00c8fc9 100644
--- a/README.mdown
+++ b/README.mdown
@@ -68,25 +68,25 @@ include the appropriate dependency (or dependencies) listed below in your `app/b
     
     dependencies {
         // Facebook Core only (Analytics)
-        compile 'com.facebook.android:facebook-core:4.27.0'
+        compile 'com.facebook.android:facebook-core:4.28.0'
         
         // Facebook Login only
-        compile 'com.facebook.android:facebook-login:4.27.0'
+        compile 'com.facebook.android:facebook-login:4.28.0'
         
         // Facebook Share only
-        compile 'com.facebook.android:facebook-share:4.27.0'
+        compile 'com.facebook.android:facebook-share:4.28.0'
         
         // Facebook Places only
-        compile 'com.facebook.android:facebook-places:4.27.0'
+        compile 'com.facebook.android:facebook-places:4.28.0'
         
         // Facbeook Messenger only
-        compile 'com.facebook.android:facebook-messenger:4.27.0'
+        compile 'com.facebook.android:facebook-messenger:4.28.0'
         
         // Facebook App Links only
-        compile 'com.facebook.android:facebook-applinks:4.27.0'
+        compile 'com.facebook.android:facebook-applinks:4.28.0'
         
         // Facebook Android SDK (everything)
-        compile 'com.facebook.android:facebook-android-sdk:4.27.0'
+        compile 'com.facebook.android:facebook-android-sdk:4.28.0'
     }
 
 You may also need to add the following to your project/build.gradle file.
diff --git a/facebook-applinks/build.gradle b/facebook-applinks/build.gradle
index e3756d51b..7f84935ad 100644
--- a/facebook-applinks/build.gradle
+++ b/facebook-applinks/build.gradle
@@ -5,7 +5,7 @@ project.group 'com.facebook.android'
 project.ext.name = 'Facebook-Applinks-Android-SDK'
 project.ext.artifactId = "facebook-applinks"
 project.ext.description = 'Facebook Applinks Android SDK'
-project.ext.url = 'https://github.com/facebook/facebook-android-sdk/facebook-applinks'
+project.ext.url = 'https://github.com/facebook/facebook-android-sdk'
 
 dependencies {
     // Facebook Dependencies
diff --git a/facebook-common/build.gradle b/facebook-common/build.gradle
index 3e286586c..4083e33e0 100644
--- a/facebook-common/build.gradle
+++ b/facebook-common/build.gradle
@@ -5,7 +5,7 @@ project.group 'com.facebook.android'
 project.ext.name = 'Facebook-Common-Android-SDK'
 project.ext.artifactId = "facebook-common"
 project.ext.description = 'Facebook Common Android SDK'
-project.ext.url = 'https://github.com/facebook/facebook-android-sdk/facebook-common'
+project.ext.url = 'https://github.com/facebook/facebook-android-sdk'
 
 dependencies {
     // Facebook Dependencies
diff --git a/facebook-common/src/main/java/com/facebook/login/LoginFragment.java b/facebook-common/src/main/java/com/facebook/login/LoginFragment.java
index 1222581c9..686ebb7ed 100644
--- a/facebook-common/src/main/java/com/facebook/login/LoginFragment.java
+++ b/facebook-common/src/main/java/com/facebook/login/LoginFragment.java
@@ -101,19 +101,18 @@ public void onDestroy() {
     public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container,
                              @Nullable Bundle savedInstanceState) {
         final View view = inflater.inflate(R.layout.com_facebook_login_fragment, container, false);
+        final View progressBar = view.findViewById(R.id.com_facebook_login_fragment_progress_bar);
 
         loginClient.setBackgroundProcessingListener(
                 new LoginClient.BackgroundProcessingListener() {
                     @Override
                     public void onBackgroundProcessingStarted() {
-                        view.findViewById(R.id.com_facebook_login_activity_progress_bar)
-                                .setVisibility(View.VISIBLE);
+                        progressBar.setVisibility(View.VISIBLE);
                     }
 
                     @Override
                     public void onBackgroundProcessingStopped() {
-                        view.findViewById(R.id.com_facebook_login_activity_progress_bar)
-                                .setVisibility(View.GONE);
+                        progressBar.setVisibility(View.GONE);
                     }
                 });
 
@@ -159,8 +158,12 @@ public void onResume() {
     public void onPause() {
         super.onPause();
 
-        getActivity().findViewById(R.id.com_facebook_login_activity_progress_bar).setVisibility(
-                View.GONE);
+        final View progressBar = getView() == null ?
+                null :
+                getView().findViewById(R.id.com_facebook_login_fragment_progress_bar);
+        if (progressBar != null) {
+            progressBar.setVisibility(View.GONE);
+        }
     }
 
     @Override
diff --git a/facebook-common/src/main/java/com/facebook/share/internal/LikeActionController.java b/facebook-common/src/main/java/com/facebook/share/internal/LikeActionController.java
index b0ba9f900..4c3975bef 100644
--- a/facebook-common/src/main/java/com/facebook/share/internal/LikeActionController.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/LikeActionController.java
@@ -68,19 +68,54 @@
  * Android. Use of any of the classes in this package is unsupported, and they may be modified or
  * removed without warning at any time.
  */
+/**
+ * @deprecated
+ * LikeView is deprecated
+ */
+@Deprecated
 public class LikeActionController {
 
+    /**
+     * @deprecated
+     * LikeView is deprecated
+     */
+    @Deprecated
     public static final String ACTION_LIKE_ACTION_CONTROLLER_UPDATED =
             "com.facebook.sdk.LikeActionController.UPDATED";
+    /**
+     * @deprecated
+     * LikeView is deprecated
+     */
+    @Deprecated
     public static final String ACTION_LIKE_ACTION_CONTROLLER_DID_ERROR =
             "com.facebook.sdk.LikeActionController.DID_ERROR";
+    /**
+     * @deprecated
+     * LikeView is deprecated
+     */
+    @Deprecated
     public static final String ACTION_LIKE_ACTION_CONTROLLER_DID_RESET =
             "com.facebook.sdk.LikeActionController.DID_RESET";
 
+    /**
+     * @deprecated
+     * LikeView is deprecated
+     */
+    @Deprecated
     public static final String ACTION_OBJECT_ID_KEY =
             "com.facebook.sdk.LikeActionController.OBJECT_ID";
 
+    /**
+     * @deprecated
+     * LikeView is deprecated
+     */
+    @Deprecated
     public static final String ERROR_INVALID_OBJECT_ID = "Invalid Object Id";
+    /**
+     * @deprecated
+     * LikeView is deprecated
+     */
+    @Deprecated
     public static final String ERROR_PUBLISH_ERROR = "Unable to publish the like/unlike action";
 
     private static final String TAG = LikeActionController.class.getSimpleName();
@@ -156,14 +191,10 @@
     private AppEventsLogger appEventsLogger;
 
     /**
-     * Called from CallbackManager to process any pending likes that had resulted in the Like
-     * dialog being displayed
-     *
-     * @param requestCode From the originating call to onActivityResult
-     * @param resultCode  From the originating call to onActivityResult
-     * @param data        From the originating call to onActivityResult
-     * @return Indication of whether the Intent was handled
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public static boolean handleOnActivityResult(final int requestCode,
                                                  final int resultCode,
                                                  final Intent data) {
@@ -207,11 +238,10 @@ public void onComplete(
     }
 
     /**
-     * Called by the LikeView when an object-id is set on it.
-     *
-     * @param objectId Object Id
-     * @param callback Callback to be invoked when the LikeActionController has been created.
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public static void getControllerForObjectId(
             String objectId,
             LikeView.ObjectType objectType,
@@ -613,70 +643,55 @@ private LikeActionController(String objectId, LikeView.ObjectType objectType) {
     }
 
     /**
-     * Gets the the associated object id
-     *
-     * @return object id
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public String getObjectId() {
         return objectId;
     }
 
     /**
-     * Gets the String representation of the like-count for the associated object
-     *
-     * @return String representation of the like-count for the associated object
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public String getLikeCountString() {
         return isObjectLiked ? likeCountStringWithLike : likeCountStringWithoutLike;
     }
 
     /**
-     * Gets the String representation of the like-count for the associated object
-     *
-     * @return String representation of the like-count for the associated object
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public String getSocialSentence() {
         return isObjectLiked ? socialSentenceWithLike : socialSentenceWithoutLike;
     }
 
     /**
-     * Indicates whether the associated object is liked
-     *
-     * @return Indication of whether the associated object is liked
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public boolean isObjectLiked() {
         return isObjectLiked;
     }
 
     /**
-     * Indicates whether the LikeView should enable itself.
-     *
-     * @return Indication of whether the LikeView should enable itself.
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public boolean shouldEnableView() {
-        if (LikeDialog.canShowNativeDialog() || LikeDialog.canShowWebFallback()) {
-            return true;
-        }
-        if (objectIsPage || (objectType == LikeView.ObjectType.PAGE)) {
-            // If we can't use the dialogs, then we can't like Pages.
-            // Before any requests are made to the server, we have to rely on the object type set
-            // by the app. If we have permissions to make requests, we will know the real type after
-            // the first request.
-            return false;
-        }
-
-        // See if we have publish permissions.
-        // NOTE: This will NOT be accurate if the app has the type set as UNKNOWN, and the
-        // underlying object is a page.
-        AccessToken token = AccessToken.getCurrentAccessToken();
-        return token != null
-                && token.getPermissions() != null
-                && token.getPermissions().contains("publish_actions");
+        return false;
     }
 
     /**
-     * Entry-point to the code that performs the like/unlike action.
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public void toggleLike(
             Activity activity,
             FragmentWrapper fragment,
@@ -1280,8 +1295,10 @@ private void logAppEventForError(String action, FacebookRequestError error) {
     //
 
     /**
-     * Used by the call to getControllerForObjectId()
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public interface CreationCallback {
         public void onComplete(
                 LikeActionController likeActionController,
diff --git a/facebook-common/src/main/java/com/facebook/share/internal/LikeBoxCountView.java b/facebook-common/src/main/java/com/facebook/share/internal/LikeBoxCountView.java
index 075fb6bf7..f2deb0b5b 100644
--- a/facebook-common/src/main/java/com/facebook/share/internal/LikeBoxCountView.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/LikeBoxCountView.java
@@ -34,6 +34,11 @@
  * Android. Use of any of the classes in this package is unsupported, and they may be modified or
  * removed without warning at any time.
  */
+/**
+ * @deprecated
+ * LikeView is deprecated
+ */
+@Deprecated
 public class LikeBoxCountView extends FrameLayout {
 
     public enum LikeBoxCountViewCaretPosition {
@@ -54,27 +59,29 @@
     private int additionalTextPadding;
 
     /**
-     * Constructor
-     *
-     * @param context Context for this View
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public LikeBoxCountView(Context context) {
         super(context);
         initialize(context);
     }
 
     /**
-     * Sets the text for this view
-     * @param text
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public void setText(String text) {
         likeCountLabel.setText(text);
     }
 
     /**
-     * Sets the caret's position. This will trigger a layout of the view.
-     * @param caretPosition
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public void setCaretPosition(LikeBoxCountViewCaretPosition caretPosition) {
         this.caretPosition = caretPosition;
 
diff --git a/facebook-common/src/main/java/com/facebook/share/internal/LikeButton.java b/facebook-common/src/main/java/com/facebook/share/internal/LikeButton.java
index 3be7415ce..9e4c6cd87 100644
--- a/facebook-common/src/main/java/com/facebook/share/internal/LikeButton.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/LikeButton.java
@@ -31,13 +31,28 @@
  * Android. Use of any of the classes in this package is unsupported, and they may be modified or
  * removed without warning at any time.
  */
+/**
+ * @deprecated
+ * LikeView is deprecated
+ */
+@Deprecated
 public class LikeButton extends FacebookButtonBase {
+    /**
+     * @deprecated
+     * LikeView is deprecated
+     */
+    @Deprecated
     public LikeButton(Context context, boolean isLiked) {
         super(context, null, 0, 0, AnalyticsEvents.EVENT_LIKE_BUTTON_CREATE,
                                    AnalyticsEvents.EVENT_LIKE_BUTTON_DID_TAP);
         this.setSelected(isLiked);
     }
 
+    /**
+     * @deprecated
+     * LikeView is deprecated
+     */
+    @Deprecated
     @Override
     public void setSelected(boolean selected) {
         super.setSelected(selected);
diff --git a/facebook-common/src/main/java/com/facebook/share/internal/LikeContent.java b/facebook-common/src/main/java/com/facebook/share/internal/LikeContent.java
index ffd46cbce..b93f54b50 100644
--- a/facebook-common/src/main/java/com/facebook/share/internal/LikeContent.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/LikeContent.java
@@ -26,12 +26,15 @@
 import com.facebook.share.model.ShareModelBuilder;
 
 /**
- * com.facebook.share.internal is solely for the use of other packages within the
- * Facebook SDK for Android. Use of any of the classes in this package is
- * unsupported, and they may be modified or removed without warning at any time.
- *
- * Represents content that is set on a LikeView to allow users to like and unlike it.
+ * com.facebook.share.internal is solely for the use of other packages within the Facebook SDK for
+ * Android. Use of any of the classes in this package is unsupported, and they may be modified or
+ * removed without warning at any time.
+ */
+/**
+ * @deprecated
+ * LikeView is deprecated
  */
+@Deprecated
 public class LikeContent implements ShareModel {
 
     private final String objectId;
@@ -42,38 +45,58 @@ private LikeContent(final Builder builder) {
         this.objectType = builder.objectType;
     }
 
+    /**
+     * @deprecated
+     * LikeView is deprecated
+     */
+    @Deprecated
     LikeContent(final Parcel in) {
         this.objectId = in.readString();
         this.objectType = in.readString();
     }
 
     /**
-     * Gets the object Id for the LikeView.
-     *
-     * @return the object Id
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public String getObjectId() {
         return objectId;
     }
 
     /**
-     * Gets the type of the object for the LikeView.
-     *
-     * @return the type of the object
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public String getObjectType() {
         return objectType;
     }
 
+    /**
+     * @deprecated
+     * LikeView is deprecated
+     */
+    @Deprecated
     public int describeContents() {
         return 0;
     }
 
+    /**
+     * @deprecated
+     * LikeView is deprecated
+     */
+    @Deprecated
     public void writeToParcel(final Parcel out, final int flags) {
         out.writeString(this.objectId);
         out.writeString(this.objectType);
     }
 
+    /**
+     * @deprecated
+     * LikeView is deprecated
+     */
+    @Deprecated
     @SuppressWarnings("unused")
     public static final Creator<LikeContent> CREATOR =
             new Creator<LikeContent>() {
@@ -87,36 +110,50 @@ public LikeContent createFromParcel(final Parcel in) {
             };
 
     /**
-     * Builder class for a concrete instance of AppInviteContent
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public static class Builder
             implements ShareModelBuilder<LikeContent, Builder> {
         private String objectId;
         private String objectType;
 
         /**
-         * Sets the object Id for the LikeView
-         * @param objectId the object Id
+         * @deprecated
+         * LikeView is deprecated
          */
+        @Deprecated
         public Builder setObjectId(final String objectId) {
             this.objectId = objectId;
             return this;
         }
 
         /**
-         * Sets the type of the object for the LikeView
-         * @param objectType the type of the object
+         * @deprecated
+         * LikeView is deprecated
          */
+        @Deprecated
         public Builder setObjectType(final String objectType) {
             this.objectType = objectType;
             return this;
         }
 
+        /**
+         * @deprecated
+         * LikeView is deprecated
+         */
+        @Deprecated
         @Override
         public LikeContent build() {
             return new LikeContent(this);
         }
 
+        /**
+         * @deprecated
+         * LikeView is deprecated
+         */
+        @Deprecated
         @Override
         public Builder readFrom(final LikeContent content) {
             if (content == null) {
diff --git a/facebook-common/src/main/java/com/facebook/share/internal/LikeDialog.java b/facebook-common/src/main/java/com/facebook/share/internal/LikeDialog.java
index 4aeeb34d6..f7063f96b 100644
--- a/facebook-common/src/main/java/com/facebook/share/internal/LikeDialog.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/LikeDialog.java
@@ -42,6 +42,11 @@
  * Facebook SDK for Android. Use of any of the classes in this package is
  * unsupported, and they may be modified or removed without warning at any time.
  */
+/*
+ * @deprecated
+ * LikeView is deprecated
+ */
+@Deprecated
 public class LikeDialog extends FacebookDialogBase<LikeContent, LikeDialog.Result> {
 
     private static final String TAG = "LikeDialog";
@@ -49,6 +54,11 @@
     private static final int DEFAULT_REQUEST_CODE =
             CallbackManagerImpl.RequestCodeOffset.Like.toRequestCode();
 
+    /**
+     * @deprecated
+     * LikeView is being deprecated
+     */
+    @Deprecated
     public static final class Result {
         private final Bundle bundle;
 
@@ -71,32 +81,71 @@ public Bundle getData() {
         }
     }
 
-    // Public for internal use
+    /**
+     * @deprecated
+     * LikeView is being deprecated
+     */
+    @Deprecated
     public static boolean canShowNativeDialog() {
-        return DialogPresenter.canPresentNativeDialogWithFeature(getFeature());
+        return false;
     }
 
-    // Public for internal use
+    /**
+     * @deprecated
+     * LikeView is being deprecated
+     */
+    @Deprecated
     public static boolean canShowWebFallback() {
-        return DialogPresenter.canPresentWebFallbackDialogWithFeature(getFeature());
+        return false;
     }
 
+    /**
+     * @deprecated
+     * LikeView is being deprecated
+     */
+    @Deprecated
     public LikeDialog(Activity activity) {
         super(activity, DEFAULT_REQUEST_CODE);
     }
 
+    /**
+     * @deprecated
+     * LikeView is being deprecated
+     */
+    @Deprecated
     public LikeDialog(Fragment fragment) {
         this(new FragmentWrapper(fragment));
     }
 
+    /**
+     * @deprecated
+     * LikeView is being deprecated
+     */
+    @Deprecated
     public LikeDialog(android.app.Fragment fragment) {
         this(new FragmentWrapper(fragment));
     }
 
+    /**
+     * @deprecated
+     * LikeView is being deprecated
+     */
+    @Deprecated
     public LikeDialog(FragmentWrapper fragmentWrapper) {
         super(fragmentWrapper, DEFAULT_REQUEST_CODE);
     }
 
+    /**
+     * @deprecated
+     * LikeView is being deprecated
+     */
+    @Deprecated
+    @Override
+    public void show(LikeContent content) {
+        // No-op. Deprecated.
+    }
+
+
     @Override
     protected AppCall createBaseAppCall() {
         return new AppCall(getRequestCode());
@@ -143,7 +192,7 @@ public boolean onActivityResult(int resultCode, Intent data) {
     private class NativeHandler extends ModeHandler {
         @Override
         public boolean canShow(final LikeContent content, boolean isBestEffort) {
-            return (content != null) && LikeDialog.canShowNativeDialog();
+            return false;
         }
 
         @Override
@@ -175,7 +224,7 @@ public Bundle getLegacyParameters() {
     private class WebFallbackHandler extends ModeHandler {
         @Override
         public boolean canShow(final LikeContent content, boolean isBestEffort) {
-            return (content != null) && LikeDialog.canShowWebFallback();
+            return false;
         }
 
         @Override
diff --git a/facebook-common/src/main/java/com/facebook/share/internal/LikeDialogFeature.java b/facebook-common/src/main/java/com/facebook/share/internal/LikeDialogFeature.java
index 3ab0c9150..5d5bb5134 100644
--- a/facebook-common/src/main/java/com/facebook/share/internal/LikeDialogFeature.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/LikeDialogFeature.java
@@ -28,6 +28,11 @@
  * Facebook SDK for Android. Use of any of the classes in this package is
  * unsupported, and they may be modified or removed without warning at any time.
  */
+/*
+ * @deprecated
+ * LikeView is deprecated
+ */
+@Deprecated
 public enum LikeDialogFeature implements DialogFeature {
 
     // This matches a value in a sitevar. DO NOT CHANGE
diff --git a/facebook-common/src/main/java/com/facebook/share/internal/LikeStatusClient.java b/facebook-common/src/main/java/com/facebook/share/internal/LikeStatusClient.java
index 7ac26eb2b..6734123b1 100644
--- a/facebook-common/src/main/java/com/facebook/share/internal/LikeStatusClient.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/LikeStatusClient.java
@@ -35,6 +35,11 @@
  * This class executes service calls to fetch like-state of objects from the Facebook Application,
  * if available.
  */
+/*
+ * @deprecated
+ * LikeView is deprecated
+ */
+@Deprecated
 final class LikeStatusClient extends PlatformServiceClient {
     private String objectId;
 
diff --git a/facebook-common/src/main/java/com/facebook/share/widget/LikeView.java b/facebook-common/src/main/java/com/facebook/share/widget/LikeView.java
index eaf07ba56..1d9afe8f3 100644
--- a/facebook-common/src/main/java/com/facebook/share/widget/LikeView.java
+++ b/facebook-common/src/main/java/com/facebook/share/widget/LikeView.java
@@ -49,8 +49,10 @@
 import com.facebook.share.internal.LikeButton;
 
 /**
- * This class provides the UI for displaying the Facebook Like button and its associated components.
+ * @deprecated
+ * LikeView is deprecated
  */
+@Deprecated
 public class LikeView extends FrameLayout {
 
     // ***
@@ -58,8 +60,10 @@
     // ***
 
     /**
-     * Encapsulates the valid values for the facebook:object_type attribute for a LikeView
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public enum ObjectType {
         /**
          * This is the default value
@@ -106,8 +110,10 @@ public int getValue() {
     }
 
     /**
-     * Encapsulates the valid values for the facebook:style attribute for a LikeView
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public enum Style {
         /**
          * Setting the attribute to this value will display the button and a sentence near it that
@@ -159,8 +165,10 @@ private int getValue() {
     }
 
     /**
-     * Encapsulates the valid values for the facebook:horizontal_alignment attribute for a LikeView.
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public enum HorizontalAlignment {
         /**
          * Setting the attribute to this value will center the button and auxiliary view in the
@@ -213,9 +221,10 @@ private int getValue() {
     }
 
     /**
-     * Encapsulates the valid values for the facebook:auxiliary_view_position attribute for a
-     * LikeView.
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public enum AuxiliaryViewPosition {
         /**
          * Setting the attribute to this value will put the social-sentence or box-count below the
@@ -291,24 +300,23 @@ private int getValue() {
 
     private FragmentWrapper parentFragment;
 
-    private boolean explicitlyDisabled;
+    private boolean explicitlyDisabled = true;
 
     /**
-     * Constructor
-     *
-     * @param context Context for this View
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public LikeView(Context context) {
         super(context);
         initialize(context);
     }
 
     /**
-     * Constructor
-     *
-     * @param context Context for this View
-     * @param attrs   AttributeSet for this View.
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public LikeView(Context context, AttributeSet attrs) {
         super(context, attrs);
         parseAttributes(attrs);
@@ -316,9 +324,10 @@ public LikeView(Context context, AttributeSet attrs) {
     }
 
     /**
-     * Sets the associated object ID for this LikeView. Can be changed during runtime.
-     * @param objectId The object ID, this can be a URL or a Facebook ID.
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public void setObjectIdAndType(String objectId, ObjectType objectType) {
         objectId = Utility.coerceValueIfNullOrEmpty(objectId, null);
         objectType = objectType != null ? objectType : ObjectType.DEFAULT;
@@ -331,11 +340,10 @@ public void setObjectIdAndType(String objectId, ObjectType objectType) {
     }
 
     /**
-     * Sets the facebook:style for this LikeView. Can be changed during runtime.
-     *
-     * @param likeViewStyle Should be either LikeView.STANDARD, LikeView.BUTTON or
-     *                      LikeView.BOX_COUNT
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public void setLikeViewStyle(Style likeViewStyle) {
         likeViewStyle = likeViewStyle != null ? likeViewStyle : Style.DEFAULT;
         if (this.likeViewStyle != likeViewStyle) {
@@ -346,11 +354,10 @@ public void setLikeViewStyle(Style likeViewStyle) {
     }
 
     /**
-     * Sets the facebook:auxiliary_view_position for this LikeView. Can be changed during runtime.
-     *
-     * @param auxiliaryViewPosition Should be either LikeView.TOP, LikeView.INLINE or
-     *                              LikeView.BOTTOM
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public void setAuxiliaryViewPosition(AuxiliaryViewPosition auxiliaryViewPosition) {
         auxiliaryViewPosition = auxiliaryViewPosition != null
                 ? auxiliaryViewPosition : AuxiliaryViewPosition.DEFAULT;
@@ -362,10 +369,10 @@ public void setAuxiliaryViewPosition(AuxiliaryViewPosition auxiliaryViewPosition
     }
 
     /**
-     * Sets the facebook:horizontal_alignment for this LikeView. Can be changed during runtime.
-     *
-     * @param horizontalAlignment Should be either LikeView.LEFT, LikeView.CENTER or LikeView.RIGHT
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public void setHorizontalAlignment(HorizontalAlignment horizontalAlignment) {
         horizontalAlignment = horizontalAlignment != null
                 ? horizontalAlignment : HorizontalAlignment.DEFAULT;
@@ -377,11 +384,10 @@ public void setHorizontalAlignment(HorizontalAlignment horizontalAlignment) {
     }
 
     /**
-     * Sets the facebook:foreground_color for this LikeView. Can be changed during runtime. The
-     * color is only used for the social sentence text.
-     *
-     * @param foregroundColor And valid android.graphics.Color value.
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public void setForegroundColor(int foregroundColor) {
         if (this.foregroundColor != foregroundColor) {
             socialSentenceView.setTextColor(foregroundColor);
@@ -389,51 +395,49 @@ public void setForegroundColor(int foregroundColor) {
     }
 
     /**
-     * Sets an OnErrorListener for this instance of LikeView to call into when
-     * certain exceptions occur.
-     *
-     * @param onErrorListener The listener object to set
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public void setOnErrorListener(OnErrorListener onErrorListener) {
         this.onErrorListener = onErrorListener;
     }
 
     /**
-     * Returns the current OnErrorListener for this instance of LikeView.
-     *
-     * @return The OnErrorListener
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public OnErrorListener getOnErrorListener() {
         return onErrorListener;
     }
 
     /**
-     * Sets the parent Fragment which is hosting this LikeView. This allows the LikeView to be
-     * embedded inside a Fragment, and will allow the fragment to receive the
-     * {@link Fragment#onActivityResult(int, int, android.content.Intent) onActivityResult}
-     * call rather than the Activity, upon completion of Likes from this view.
-     *
-     * @param fragment android.support.v4.app.Fragment that is hosting the LikeView.
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public void setFragment(Fragment fragment) {
         this.parentFragment = new FragmentWrapper(fragment);
     }
 
     /**
-     * Sets the parent Fragment which is hosting this LikeView. This allows the LikeView to be
-     * embedded inside a Fragment, and will allow the fragment to receive the
-     * {@link Fragment#onActivityResult(int, int, android.content.Intent) onActivityResult}
-     * call rather than the Activity, upon completion of Likes from this view.
-     *
-     * @param fragment android.app.Fragment that is hosting the LikeView.
+     * @deprecated
+     * LikeView is deprecated
      */
+    @Deprecated
     public void setFragment(android.app.Fragment fragment) {
         this.parentFragment = new FragmentWrapper(fragment);
     }
 
+    /**
+     * @deprecated
+     * LikeView is deprecated
+     */
+    @Deprecated
     @Override
     public void setEnabled(boolean enabled) {
-        explicitlyDisabled = !enabled;
+        explicitlyDisabled = true;
 
         updateLikeStateAndLayout();
     }
diff --git a/facebook-common/src/main/res/layout/com_facebook_login_fragment.xml b/facebook-common/src/main/res/layout/com_facebook_login_fragment.xml
index ef301ae85..454d129c3 100644
--- a/facebook-common/src/main/res/layout/com_facebook_login_fragment.xml
+++ b/facebook-common/src/main/res/layout/com_facebook_login_fragment.xml
@@ -21,15 +21,15 @@
 
 
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent">
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ProgressBar android:id="@+id/com_facebook_login_fragment_progress_bar"
+        android:indeterminate="true"
+        android:layout_width="wrap_content"
+        android:layout_height="50dip"
+        android:layout_centerInParent="true"
+        android:visibility="gone"
+        android:indeterminateOnly="true" />
 
-    <ProgressBar android:indeterminate="true"
-                 android:layout_width="wrap_content"
-                 android:layout_height="50dip"
-                 android:id="@+id/com_facebook_login_activity_progress_bar"
-                 android:layout_centerInParent="true"
-                 android:visibility="gone"
-                 android:indeterminateOnly="true"
-        />
 </RelativeLayout>
diff --git a/facebook-common/src/main/res/values-iw/strings.xml b/facebook-common/src/main/res/values-iw/strings.xml
index f04525a69..b520f0dfe 100644
--- a/facebook-common/src/main/res/values-iw/strings.xml
+++ b/facebook-common/src/main/res/values-iw/strings.xml
@@ -4,8 +4,8 @@
 <!-- FB Locale: he_IL -->
 
 <resources exclude-from-buck-resource-map="true">
-    <string name="com_facebook_like_button_not_liked" gender="unknown">אהבתי</string>
-    <string name="com_facebook_like_button_liked" gender="unknown">אהבתי</string>
+    <string name="com_facebook_like_button_not_liked" gender="unknown">לייק</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">סימנת בלייק</string>
     <string name="com_facebook_loginview_log_out_button" gender="unknown">התנתק/י</string>
     <string name="com_facebook_loginview_log_in_button" gender="unknown">התחבר</string>
     <string name="com_facebook_loginview_log_in_button_long" gender="unknown">התחברות באמצעות פייסבוק</string>
@@ -13,7 +13,7 @@
     <string name="com_facebook_loginview_logged_in_as" gender="unknown">מחובר/ת בתור: %1$s</string>
     <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">מחובר/ת כמשתמש בפייסבוק</string>
     <string name="com_facebook_loginview_log_out_action" gender="unknown">התנתק/י</string>
-    <string name="com_facebook_loginview_cancel_action" gender="unknown">בטל</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">ביטול</string>
     <string name="com_facebook_loading" gender="unknown">טוען...</string>
     <string name="com_facebook_internet_permission_error_title" gender="unknown">שגיאת AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message" gender="unknown">התחברות WebView דורשת הרשאת אינטרנט</string>
diff --git a/facebook-common/src/main/res/values-zh-rCN/strings.xml b/facebook-common/src/main/res/values-zh-rCN/strings.xml
index 125758e72..4c17fd1e4 100644
--- a/facebook-common/src/main/res/values-zh-rCN/strings.xml
+++ b/facebook-common/src/main/res/values-zh-rCN/strings.xml
@@ -6,13 +6,13 @@
 <resources exclude-from-buck-resource-map="true">
     <string name="com_facebook_like_button_not_liked" gender="unknown">赞</string>
     <string name="com_facebook_like_button_liked" gender="unknown">赞了</string>
-    <string name="com_facebook_loginview_log_out_button" gender="unknown">注销</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">退出</string>
     <string name="com_facebook_loginview_log_in_button" gender="unknown">登录</string>
     <string name="com_facebook_loginview_log_in_button_long" gender="unknown">使用 Facebook 登录</string>
     <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">前往 Facebook</string>
     <string name="com_facebook_loginview_logged_in_as" gender="unknown">登录身份：%1$s</string>
     <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">已通过 Facebook 登录</string>
-    <string name="com_facebook_loginview_log_out_action" gender="unknown">注销</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">退出</string>
     <string name="com_facebook_loginview_cancel_action" gender="unknown">取消</string>
     <string name="com_facebook_loading" gender="unknown">正在加载...</string>
     <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest 错误</string>
diff --git a/facebook-core/build.gradle b/facebook-core/build.gradle
index 7f967b30c..f9750f78c 100644
--- a/facebook-core/build.gradle
+++ b/facebook-core/build.gradle
@@ -5,7 +5,7 @@ project.group = 'com.facebook.android'
 project.ext.name = 'Facebook-Core-Android-SDK'
 project.ext.artifactId = "facebook-core"
 project.ext.description = 'Facebook Core Android SDK'
-project.ext.url = 'https://github.com/facebook/facebook-android-sdk/facebook-core'
+project.ext.url = 'https://github.com/facebook/facebook-android-sdk'
 
 dependencies {
     // Facebook Dependencies
diff --git a/facebook-core/src/main/java/com/facebook/FacebookSdk.java b/facebook-core/src/main/java/com/facebook/FacebookSdk.java
index 9aa5fdcb0..9517a836e 100644
--- a/facebook-core/src/main/java/com/facebook/FacebookSdk.java
+++ b/facebook-core/src/main/java/com/facebook/FacebookSdk.java
@@ -32,8 +32,10 @@
 import android.util.Log;
 
 import com.facebook.appevents.AppEventsLogger;
+import com.facebook.appevents.internal.ActivityLifecycleTracker;
+import com.facebook.appevents.internal.AutomaticAnalyticsLogger;
 import com.facebook.core.BuildConfig;
-import com.facebook.internal.AppEventsLoggerUtility;
+import com.facebook.appevents.internal.AppEventsLoggerUtility;
 import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.LockOnGetVariable;
 import com.facebook.internal.BoltsMeasurementEventListener;
@@ -276,6 +278,14 @@ public static synchronized void sdkInitialize(
                     "before initializing the sdk.");
         }
 
+        // Register ActivityLifecycleTracker callbacks now, so will log activate app event properly
+        if ((FacebookSdk.applicationContext instanceof Application) && autoLogAppEventsEnabled) {
+            ActivityLifecycleTracker.startTracking(
+                    (Application) FacebookSdk.applicationContext,
+                    applicationId
+            );
+        }
+
         // Set sdkInitialized to true now so the bellow async tasks don't throw not initialized
         // exceptions.
         sdkInitialized = true;
@@ -549,7 +559,7 @@ public void run() {
         });
     }
 
-    static GraphResponse publishInstallAndWaitForResponse(
+    static void publishInstallAndWaitForResponse(
             final Context context,
             final String applicationId) {
         try {
@@ -559,9 +569,7 @@ static GraphResponse publishInstallAndWaitForResponse(
             AttributionIdentifiers identifiers = AttributionIdentifiers.getAttributionIdentifiers(context);
             SharedPreferences preferences = context.getSharedPreferences(ATTRIBUTION_PREFERENCES, Context.MODE_PRIVATE);
             String pingKey = applicationId+"ping";
-            String jsonKey = applicationId+"json";
             long lastPing = preferences.getLong(pingKey, 0);
-            String lastResponseJSON = preferences.getString(jsonKey, null);
 
             JSONObject publishParams;
             try {
@@ -578,47 +586,19 @@ static GraphResponse publishInstallAndWaitForResponse(
             String publishUrl = String.format(PUBLISH_ACTIVITY_PATH, applicationId);
             GraphRequest publishRequest = GraphRequest.newPostRequest(null, publishUrl, publishParams, null);
 
-            if (lastPing != 0) {
-                JSONObject graphObject = null;
-                try {
-                    if (lastResponseJSON != null) {
-                        graphObject = new JSONObject(lastResponseJSON);
-                    }
-                }
-                catch (JSONException je) {
-                    // return the default graph object if there is any problem reading the data.
-                }
-                if (graphObject == null) {
-                    return GraphResponse.createResponsesFromString(
-                            "true",
-                            null,
-                            new GraphRequestBatch(publishRequest)
-                    ).get(0);
-                } else {
-                    return new GraphResponse(null, null, null, graphObject);
-                }
-
-            } else {
-
+            if (lastPing == 0) {
+                // send install event only if have not sent before
                 GraphResponse publishResponse = publishRequest.executeAndWait();
 
                 // denote success since no error threw from the post.
                 SharedPreferences.Editor editor = preferences.edit();
                 lastPing = System.currentTimeMillis();
                 editor.putLong(pingKey, lastPing);
-
-                // if we got an object response back, cache the string of the JSON.
-                if (publishResponse.getJSONObject() != null) {
-                    editor.putString(jsonKey, publishResponse.getJSONObject().toString());
-                }
                 editor.apply();
-
-                return publishResponse;
             }
         } catch (Exception e) {
             // if there was an error, fall through to the failure case.
             Utility.logd("Facebook-publish", e);
-            return new GraphResponse(null, null, new FacebookRequestError(null, e));
         }
     }
 
diff --git a/facebook-core/src/main/java/com/facebook/FacebookSdkVersion.java b/facebook-core/src/main/java/com/facebook/FacebookSdkVersion.java
index 7577364e1..810f10ab9 100644
--- a/facebook-core/src/main/java/com/facebook/FacebookSdkVersion.java
+++ b/facebook-core/src/main/java/com/facebook/FacebookSdkVersion.java
@@ -21,5 +21,5 @@
 package com.facebook;
 
 final class FacebookSdkVersion {
-    public static final String BUILD = "4.27.0";
+    public static final String BUILD = "4.28.0";
 }
diff --git a/facebook-core/src/main/java/com/facebook/appevents/AppEvent.java b/facebook-core/src/main/java/com/facebook/appevents/AppEvent.java
index 1b1d70486..bbed98934 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/AppEvent.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/AppEvent.java
@@ -20,6 +20,7 @@
 
 package com.facebook.appevents;
 
+import android.os.Build;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
 
@@ -36,7 +37,10 @@
 import java.io.UnsupportedEncodingException;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
+import java.util.ArrayList;
+import java.util.Collections;
 import java.util.HashSet;
+import java.util.Iterator;
 import java.util.Locale;
 import java.util.UUID;
 
@@ -175,11 +179,6 @@ private static JSONObject getJSONObjectForAppEvent(
             eventObject.put("_implicitlyLogged", "1");
         }
 
-        String externalAnalyticsUserId = AppEventsLogger.getUserID();
-        if (externalAnalyticsUserId != null) {
-            eventObject.put("_app_user_id", externalAnalyticsUserId);
-        }
-
         if (parameters != null) {
             for (String key : parameters.keySet()) {
 
@@ -255,10 +254,25 @@ public String toString() {
     }
 
     private String calculateChecksum() {
-        return md5Checksum(jsonObject.toString());
+        // JSONObject.toString() doesn't guarantee order of the keys on KitKat
+        // (API Level 19) and below as JSONObject used HashMap internally,
+        // starting Android API Level 20+, JSONObject changed to use LinkedHashMap
+        if (Build.VERSION.SDK_INT > Build.VERSION_CODES.KITKAT) {
+            return md5Checksum(jsonObject.toString());
+        }
+        ArrayList<String> keys = new ArrayList<>();
+        for (Iterator<String> iterator = jsonObject.keys(); iterator.hasNext();) {
+            keys.add(iterator.next());
+        }
+        Collections.sort(keys);
+        StringBuilder sb = new StringBuilder();
+        for (String key : keys) {
+            sb.append(key).append(" = ").append(jsonObject.optString(key)).append('\n');
+        }
+        return md5Checksum(sb.toString());
     }
 
-    private static String md5Checksum(String toHash )
+    private static String md5Checksum(String toHash)
     {
         String hash;
         try
diff --git a/facebook-core/src/main/java/com/facebook/appevents/AppEventsConstants.java b/facebook-core/src/main/java/com/facebook/appevents/AppEventsConstants.java
index ecc16ce91..d824fe573 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/AppEventsConstants.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/AppEventsConstants.java
@@ -128,6 +128,14 @@
      */
     public static final String EVENT_PARAM_CONTENT_TYPE = "fb_content_type";
 
+    /**
+     * Parameter key used to specify data for the one or more pieces of content being logged about.
+     * Data should be a JSON encoded string.
+     * Example:
+     * "[{\"id\": \"1234\", \"quantity\": 2, \"item_price\": 5.99}, {\"id\": \"5678\", \"quantity\": 1, \"item_price\": 9.99}]"
+     */
+    public static final String EVENT_PARAM_CONTENT = "fb_content";
+
     /**
      * Parameter key used to specify an ID for the specific piece of content being logged about.
      * This could be an EAN, article identifier, etc., depending on the nature of the app.
diff --git a/facebook-core/src/main/java/com/facebook/appevents/AppEventsLogger.java b/facebook-core/src/main/java/com/facebook/appevents/AppEventsLogger.java
index 42e695f1e..90a7c5b78 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/AppEventsLogger.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/AppEventsLogger.java
@@ -39,6 +39,7 @@
 import com.facebook.HttpMethod;
 import com.facebook.LoggingBehavior;
 import com.facebook.appevents.internal.ActivityLifecycleTracker;
+import com.facebook.appevents.internal.AutomaticAnalyticsLogger;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.AttributionIdentifiers;
 import com.facebook.internal.BundleJSONConverter;
@@ -189,10 +190,9 @@
     private static Object staticLock = new Object();
     private static String anonymousAppDeviceGUID;
     private static String sourceApplication;
-    private static boolean isOpenedByApplink;
+    private static boolean isOpenedByAppLink;
     private static boolean isActivateAppEventRequested;
     private static String pushNotificationsRegistrationId;
-    private static String externalAnalyticsUserID;
 
     /**
      * Notifies the events system that the app has launched and activate and deactivate events
@@ -237,6 +237,8 @@ public static void activateApp(Application application, String applicationId) {
         // activate.
         FacebookSdk.publishInstallAsync(application, applicationId);
 
+        // Will do nothing in case AutoLogAppEventsEnabled is true, as we already started the
+        // tracking as part of sdkInitialize() flow
         ActivityLifecycleTracker.startTracking(application, applicationId);
     }
 
@@ -630,6 +632,10 @@ public void logEvent(String eventName, double valueToSum, Bundle parameters) {
      * @param currency       Currency used to specify the amount.
      */
     public void logPurchase(BigDecimal purchaseAmount, Currency currency) {
+        if (AutomaticAnalyticsLogger.isImplicitPurchaseLoggingEnabled()) {
+            Log.w(TAG, "You are logging purchase events while auto-logging of in-app purchase is " +
+                    "enabled in the SDK. Make sure you don't log duplicate events");
+        }
         logPurchase(purchaseAmount, currency, null, false);
     }
 
@@ -647,10 +653,18 @@ public void logPurchase(BigDecimal purchaseAmount, Currency currency) {
      */
     public void logPurchase(
             BigDecimal purchaseAmount, Currency currency, Bundle parameters) {
+        if (AutomaticAnalyticsLogger.isImplicitPurchaseLoggingEnabled()) {
+            Log.w(TAG, "You are logging purchase events while auto-logging of in-app purchase is " +
+                    "enabled in the SDK. Make sure you don't log duplicate events");
+        }
         logPurchase(purchaseAmount, currency, parameters, false);
     }
 
     /**
+     * This function should only for in-app purchase auto logging. Do not use
+     * it directly. If in-app purchase auto-logging is used, make sure to stop manual logging
+     * to avoid sending duplicate events to Facebook.
+     *
      * Logs purchase event implicitly, in the specified amount and with the
      * specified currency. Additional detail about the purchase can be passed in through the
      * parameters bundle.
@@ -680,7 +694,7 @@ public void logPurchaseImplicitly(
      *                       one purchase event to the next.
      */
     @SuppressWarnings("deprecation")
-    public void logPurchase(
+    private void logPurchase(
             BigDecimal purchaseAmount,
             Currency currency,
             Bundle parameters,
@@ -809,7 +823,7 @@ static String getPushNotificationsRegistrationId() {
      * Sets a user id to associate with all app events. This can be used to associate your own
      * user id with the app events logged from this instance of an application.
      *
-     * The user ID will be persisted between application instantces.
+     * The user ID will be persisted between application instances.
      *
      * @param userID A User ID
      */
@@ -1075,24 +1089,24 @@ private static void setSourceApplication(Activity activity) {
             return;
         }
 
-        Bundle applinkData = AppLinks.getAppLinkData(openIntent);
+        Bundle appLinkData = AppLinks.getAppLinkData(openIntent);
 
-        if (applinkData == null) {
+        if (appLinkData == null) {
             resetSourceApplication();
             return;
         }
 
-        isOpenedByApplink = true;
+        isOpenedByAppLink = true;
 
-        Bundle applinkReferrerData = applinkData.getBundle("referer_app_link");
+        Bundle appLinkReferrerData = appLinkData.getBundle("referer_app_link");
 
-        if (applinkReferrerData == null) {
+        if (appLinkReferrerData == null) {
             sourceApplication = null;
             return;
         }
 
-        String applinkReferrerPackage = applinkReferrerData.getString("package");
-        sourceApplication = applinkReferrerPackage;
+        String appLinkReferrerPackage = appLinkReferrerData.getString("package");
+        sourceApplication = appLinkReferrerPackage;
 
         // Mark this intent has been used to avoid use this intent again and again.
         openIntent.putExtra(SOURCE_APPLICATION_HAS_BEEN_SET_BY_THIS_INTENT, true);
@@ -1102,12 +1116,12 @@ private static void setSourceApplication(Activity activity) {
 
     static void setSourceApplication(String applicationPackage, boolean openByAppLink) {
         sourceApplication = applicationPackage;
-        isOpenedByApplink = openByAppLink;
+        isOpenedByAppLink = openByAppLink;
     }
 
     static String getSourceApplication() {
         String openType = "Unclassified";
-        if (isOpenedByApplink) {
+        if (isOpenedByAppLink) {
             openType = "Applink";
         }
         if (sourceApplication != null) {
@@ -1118,7 +1132,7 @@ static String getSourceApplication() {
 
     static void resetSourceApplication() {
         sourceApplication = null;
-        isOpenedByApplink = false;
+        isOpenedByAppLink = false;
     }
 
     static Executor getAnalyticsExecutor() {
diff --git a/facebook-core/src/main/java/com/facebook/appevents/SessionEventsState.java b/facebook-core/src/main/java/com/facebook/appevents/SessionEventsState.java
index 665ed4306..0f6517680 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/SessionEventsState.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/SessionEventsState.java
@@ -24,7 +24,7 @@
 import android.os.Bundle;
 
 import com.facebook.GraphRequest;
-import com.facebook.internal.AppEventsLoggerUtility;
+import com.facebook.appevents.internal.AppEventsLoggerUtility;
 import com.facebook.internal.AttributionIdentifiers;
 import com.facebook.internal.Utility;
 
diff --git a/facebook-core/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java b/facebook-core/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java
index 9d82fe2e2..91cad849f 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java
@@ -27,9 +27,11 @@
 import android.util.Log;
 
 import com.facebook.FacebookSdk;
+import com.facebook.LoggingBehavior;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.internal.FetchedAppSettings;
 import com.facebook.internal.FetchedAppSettingsManager;
+import com.facebook.internal.Logger;
 import com.facebook.internal.Utility;
 
 import java.util.UUID;
@@ -70,36 +72,44 @@ public static void startTracking(Application application, final String appId) {
                     public void onActivityCreated(
                             final Activity activity,
                             Bundle savedInstanceState) {
+                        Logger.log(LoggingBehavior.APP_EVENTS, TAG, "onActivityCreated");
                         AppEventUtility.assertIsMainThread();
                         ActivityLifecycleTracker.onActivityCreated(activity);
                     }
 
                     @Override
-                    public void onActivityStarted(Activity activity) {}
+                    public void onActivityStarted(Activity activity) {
+                        Logger.log(LoggingBehavior.APP_EVENTS, TAG, "onActivityStarted");
+                    }
 
                     @Override
                     public void onActivityResumed(final Activity activity) {
+                        Logger.log(LoggingBehavior.APP_EVENTS, TAG, "onActivityResumed");
                         AppEventUtility.assertIsMainThread();
                         ActivityLifecycleTracker.onActivityResumed(activity);
                     }
 
                     @Override
                     public void onActivityPaused(final Activity activity) {
+                        Logger.log(LoggingBehavior.APP_EVENTS, TAG, "onActivityPaused");
                         AppEventUtility.assertIsMainThread();
                         ActivityLifecycleTracker.onActivityPaused(activity);
                     }
 
                     @Override
                     public void onActivityStopped(Activity activity) {
+                        Logger.log(LoggingBehavior.APP_EVENTS, TAG, "onActivityStopped");
                         AppEventsLogger.onContextStop();
                     }
 
                     @Override
                     public void onActivitySaveInstanceState(Activity activity, Bundle outState) {
+                        Logger.log(LoggingBehavior.APP_EVENTS, TAG, "onActivitySaveInstanceState");
                     }
 
                     @Override
                     public void onActivityDestroyed(Activity activity) {
+                        Logger.log(LoggingBehavior.APP_EVENTS, TAG, "onActivityDestroyed");
                     }
                 });
     }
diff --git a/facebook-core/src/main/java/com/facebook/internal/AppEventsLoggerUtility.java b/facebook-core/src/main/java/com/facebook/appevents/internal/AppEventsLoggerUtility.java
similarity index 86%
rename from facebook-core/src/main/java/com/facebook/internal/AppEventsLoggerUtility.java
rename to facebook-core/src/main/java/com/facebook/appevents/internal/AppEventsLoggerUtility.java
index 8f62c23d5..8eb49cb72 100644
--- a/facebook-core/src/main/java/com/facebook/internal/AppEventsLoggerUtility.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/internal/AppEventsLoggerUtility.java
@@ -18,11 +18,15 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.internal;
+package com.facebook.appevents.internal;
 
 import android.content.Context;
 
 import com.facebook.LoggingBehavior;
+import com.facebook.appevents.AppEventsLogger;
+import com.facebook.internal.AttributionIdentifiers;
+import com.facebook.internal.Logger;
+import com.facebook.internal.Utility;
 
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -31,7 +35,7 @@
 import java.util.Map;
 
 /**
- * com.facebook.internal is solely for the use of other packages within the
+ * com.facebook.appevents.internal is solely for the use of other packages within the
  * Facebook SDK for Android. Use of any of the classes in this package is
  * unsupported, and they may be modified or removed without warning at any time.
  */
@@ -57,6 +61,10 @@ public static JSONObject getJSONObjectForGraphAPICall(
         JSONObject publishParams = new JSONObject();
 
         publishParams.put("event", API_ACTIVITY_TYPE_TO_STRING.get(activityType));
+        String externalAnalyticsUserId = AppEventsLogger.getUserID();
+        if (externalAnalyticsUserId != null) {
+            publishParams.put("app_user_id", externalAnalyticsUserId);
+        }
 
         Utility.setAppEventAttributionParameters(publishParams, attributionIdentifiers,
                 anonymousAppDeviceGUID, limitEventUsage);
diff --git a/facebook-core/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java b/facebook-core/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java
index b0d556a8e..46e0371f2 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java
@@ -96,11 +96,8 @@ public static boolean logInAppPurchaseEvent(
         final Context context,
         int resultCode,
         Intent data) {
-        final String appId = FacebookSdk.getApplicationId();
-        final FetchedAppSettings settings = FetchedAppSettingsManager.queryAppSettings(
-                appId, false);
-        if (data == null || !FacebookSdk.getAutoLogAppEventsEnabled()
-                || !settings.getIAPAutomaticLoggingEnabled()) {
+
+        if (data == null || !isImplicitPurchaseLoggingEnabled()) {
             return false;
         }
         final String purchaseData = data.getStringExtra(INAPP_PURCHASE_DATA);
@@ -177,4 +174,15 @@ public void onServiceConnected(
         }
         return true;
     }
+
+    public static boolean isImplicitPurchaseLoggingEnabled() {
+        final String appId = FacebookSdk.getApplicationId();
+        final FetchedAppSettings settings = FetchedAppSettingsManager.queryAppSettings(
+                appId, false);
+        if (settings == null) {
+            return false;
+        }
+        return FacebookSdk.getAutoLogAppEventsEnabled() &&
+                settings.getIAPAutomaticLoggingEnabled();
+    }
 }
diff --git a/facebook-core/src/main/java/com/facebook/appevents/internal/SessionInfo.java b/facebook-core/src/main/java/com/facebook/appevents/internal/SessionInfo.java
index ac3823601..c930d2f46 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/internal/SessionInfo.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/internal/SessionInfo.java
@@ -101,12 +101,8 @@ public Long getSessionLastEventTime() {
         return sessionLastEventTime;
     }
 
-    public void setSessionStartTime(Long sessionStartTime) {
-        this.sessionStartTime = sessionStartTime;
-    }
-
-    public void setSessionLastEventTime(Long essionLastEventTime) {
-        this.sessionLastEventTime = essionLastEventTime;
+    public void setSessionLastEventTime(Long sessionLastEventTime) {
+        this.sessionLastEventTime = sessionLastEventTime;
     }
 
     public int getInterruptionCount() {
diff --git a/facebook-core/src/main/java/com/facebook/appevents/internal/SourceApplicationInfo.java b/facebook-core/src/main/java/com/facebook/appevents/internal/SourceApplicationInfo.java
index 53679e0d4..63a5dae05 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/internal/SourceApplicationInfo.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/internal/SourceApplicationInfo.java
@@ -40,11 +40,11 @@
             = "com.facebook.appevents.SourceApplicationInfo.openedByApplink";
 
     private String callingApplicationPackage;
-    private boolean openedByApplink;
+    private boolean openedByAppLink;
 
-    private SourceApplicationInfo(String callingApplicationPackage, boolean openedByApplink) {
+    private SourceApplicationInfo(String callingApplicationPackage, boolean openedByAppLink) {
         this.callingApplicationPackage = callingApplicationPackage;
-        this.openedByApplink = openedByApplink;
+        this.openedByAppLink = openedByAppLink;
     }
 
     public static SourceApplicationInfo getStoredSourceApplicatioInfo() {
@@ -59,9 +59,9 @@ public static SourceApplicationInfo getStoredSourceApplicatioInfo() {
         String callingApplicationPackage = sharedPreferences.getString(
                 CALL_APPLICATION_PACKAGE_KEY,
                 null);
-        boolean openedByApplink = sharedPreferences.getBoolean(OPENED_BY_APP_LINK_KEY, false);
+        boolean openedByAppLink = sharedPreferences.getBoolean(OPENED_BY_APP_LINK_KEY, false);
 
-        return new SourceApplicationInfo(callingApplicationPackage, openedByApplink);
+        return new SourceApplicationInfo(callingApplicationPackage, openedByAppLink);
     }
 
     public static void clearSavedSourceApplicationInfoFromDisk() {
@@ -78,14 +78,14 @@ public String getCallingApplicationPackage() {
         return callingApplicationPackage;
     }
 
-    public boolean isOpenedByApplink() {
-        return openedByApplink;
+    public boolean isOpenedByAppLink() {
+        return openedByAppLink;
     }
 
     @Override
     public String toString() {
         String openType = "Unclassified";
-        if (openedByApplink) {
+        if (openedByAppLink) {
             openType = "Applink";
         }
 
@@ -101,23 +101,22 @@ public void writeSourceApplicationInfoToDisk() {
                         FacebookSdk.getApplicationContext());
         SharedPreferences.Editor editor = sharedPreferences.edit();
         editor.putString(CALL_APPLICATION_PACKAGE_KEY, this.callingApplicationPackage);
-        editor.putBoolean(OPENED_BY_APP_LINK_KEY, this.openedByApplink);
+        editor.putBoolean(OPENED_BY_APP_LINK_KEY, this.openedByAppLink);
         editor.apply();
     }
 
     public static class Factory {
         public static SourceApplicationInfo create(Activity activity) {
-            boolean openedByApplink = false;
+            boolean openedByAppLink = false;
+            String callingApplicationPackage = "";
 
             ComponentName callingApplication = activity.getCallingActivity();
-            if (callingApplication == null) {
-                return null;
-            }
-
-            String callingApplicationPackage = callingApplication.getPackageName();
-            if (callingApplicationPackage.equals(activity.getPackageName())) {
-                // opened by own app.
-                return null;
+            if (callingApplication != null) {
+                callingApplicationPackage = callingApplication.getPackageName();
+                if (callingApplicationPackage.equals(activity.getPackageName())) {
+                    // open by own app.
+                    return null;
+                }
             }
 
             // Tap icon to open an app will still get the old intent if the activity was opened by
@@ -129,20 +128,20 @@ public static SourceApplicationInfo create(Activity activity) {
                     SOURCE_APPLICATION_HAS_BEEN_SET_BY_THIS_INTENT,
                     false)) {
                 openIntent.putExtra(SOURCE_APPLICATION_HAS_BEEN_SET_BY_THIS_INTENT, true);
-                Bundle applinkData = AppLinks.getAppLinkData(openIntent);
-                if (applinkData != null) {
-                    openedByApplink = true;
-                    Bundle applinkReferrerData = applinkData.getBundle("referer_app_link");
-                    if (applinkReferrerData != null) {
-                        String applinkReferrerPackage = applinkReferrerData.getString("package");
-                        callingApplicationPackage = applinkReferrerPackage;
+                Bundle appLinkData = AppLinks.getAppLinkData(openIntent);
+                if (appLinkData != null) {
+                    openedByAppLink = true;
+                    Bundle appLinkReferrerData = appLinkData.getBundle("referer_app_link");
+                    if (appLinkReferrerData != null) {
+                        String appLinkReferrerPackage = appLinkReferrerData.getString("package");
+                        callingApplicationPackage = appLinkReferrerPackage;
                     }
                 }
             }
 
             // Mark this intent has been used to avoid use this intent again and again.
             openIntent.putExtra(SOURCE_APPLICATION_HAS_BEEN_SET_BY_THIS_INTENT, true);
-            return new SourceApplicationInfo(callingApplicationPackage, openedByApplink);
+            return new SourceApplicationInfo(callingApplicationPackage, openedByAppLink);
         }
     }
 }
diff --git a/facebook-core/src/main/java/com/facebook/internal/FetchedAppSettingsManager.java b/facebook-core/src/main/java/com/facebook/internal/FetchedAppSettingsManager.java
index 9494d9599..75cf95204 100644
--- a/facebook-core/src/main/java/com/facebook/internal/FetchedAppSettingsManager.java
+++ b/facebook-core/src/main/java/com/facebook/internal/FetchedAppSettingsManager.java
@@ -20,21 +20,16 @@
 
 package com.facebook.internal;
 
-import android.content.ComponentName;
 import android.content.Context;
 import android.content.Intent;
-import android.content.ServiceConnection;
 import android.content.SharedPreferences;
 import android.os.Bundle;
-import android.os.IBinder;
-import android.support.annotation.Nullable;
 import android.text.TextUtils;
 
 import com.facebook.FacebookSdk;
 import com.facebook.GraphRequest;
 import com.facebook.appevents.internal.AutomaticAnalyticsLogger;
 import com.facebook.appevents.internal.Constants;
-import com.facebook.appevents.internal.InAppPurchaseEventManager;
 
 import org.json.JSONArray;
 import org.json.JSONException;
@@ -261,8 +256,16 @@ private static void startInAppPurchaseAutoLogging(final Context context) {
                 new CallbackManagerImpl.Callback() {
                     @Override
                     public boolean onActivityResult(int resultCode, Intent data) {
-                        return AutomaticAnalyticsLogger.logInAppPurchaseEvent(
-                                context, resultCode, data);
+                        final int finalResultCode = resultCode;
+                        final Intent finalData = data;
+                        FacebookSdk.getExecutor().execute(new Runnable() {
+                            @Override
+                            public void run() {
+                                AutomaticAnalyticsLogger.logInAppPurchaseEvent(
+                                        context, finalResultCode, finalData);
+                            }
+                        });
+                        return true;
                     }
                 });
     }
diff --git a/facebook-core/src/main/java/com/facebook/internal/ServerProtocol.java b/facebook-core/src/main/java/com/facebook/internal/ServerProtocol.java
index 340803788..d2011c20d 100644
--- a/facebook-core/src/main/java/com/facebook/internal/ServerProtocol.java
+++ b/facebook-core/src/main/java/com/facebook/internal/ServerProtocol.java
@@ -76,7 +76,7 @@
     // URL components
     private static final String GRAPH_VIDEO_URL_FORMAT = "https://graph-video.%s";
     private static final String GRAPH_URL_FORMAT = "https://graph.%s";
-    private static final String GRAPH_API_VERSION = "v2.10";
+    private static final String GRAPH_API_VERSION = "v2.11";
 
     public static final Collection<String> errorsProxyAuthDisabled =
             Utility.unmodifiableCollection("service_disabled", "AndroidAuthKillSwitchException");
diff --git a/facebook-login/build.gradle b/facebook-login/build.gradle
index 1fb015a25..cea2884d6 100644
--- a/facebook-login/build.gradle
+++ b/facebook-login/build.gradle
@@ -5,7 +5,7 @@ project.group 'com.facebook.android'
 project.ext.name = 'Facebook-Login-Android-SDK'
 project.ext.artifactId = "facebook-login"
 project.ext.description = 'Facebook Login Android SDK'
-project.ext.url = 'https://github.com/facebook/facebook-android-sdk/facebook-login'
+project.ext.url = 'https://github.com/facebook/facebook-android-sdk'
 
 dependencies {
     // Facebook Dependencies
diff --git a/facebook-login/src/main/res/values-iw/strings.xml b/facebook-login/src/main/res/values-iw/strings.xml
index f04525a69..b520f0dfe 100644
--- a/facebook-login/src/main/res/values-iw/strings.xml
+++ b/facebook-login/src/main/res/values-iw/strings.xml
@@ -4,8 +4,8 @@
 <!-- FB Locale: he_IL -->
 
 <resources exclude-from-buck-resource-map="true">
-    <string name="com_facebook_like_button_not_liked" gender="unknown">אהבתי</string>
-    <string name="com_facebook_like_button_liked" gender="unknown">אהבתי</string>
+    <string name="com_facebook_like_button_not_liked" gender="unknown">לייק</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">סימנת בלייק</string>
     <string name="com_facebook_loginview_log_out_button" gender="unknown">התנתק/י</string>
     <string name="com_facebook_loginview_log_in_button" gender="unknown">התחבר</string>
     <string name="com_facebook_loginview_log_in_button_long" gender="unknown">התחברות באמצעות פייסבוק</string>
@@ -13,7 +13,7 @@
     <string name="com_facebook_loginview_logged_in_as" gender="unknown">מחובר/ת בתור: %1$s</string>
     <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">מחובר/ת כמשתמש בפייסבוק</string>
     <string name="com_facebook_loginview_log_out_action" gender="unknown">התנתק/י</string>
-    <string name="com_facebook_loginview_cancel_action" gender="unknown">בטל</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">ביטול</string>
     <string name="com_facebook_loading" gender="unknown">טוען...</string>
     <string name="com_facebook_internet_permission_error_title" gender="unknown">שגיאת AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message" gender="unknown">התחברות WebView דורשת הרשאת אינטרנט</string>
diff --git a/facebook-login/src/main/res/values-zh-rCN/strings.xml b/facebook-login/src/main/res/values-zh-rCN/strings.xml
index 125758e72..4c17fd1e4 100644
--- a/facebook-login/src/main/res/values-zh-rCN/strings.xml
+++ b/facebook-login/src/main/res/values-zh-rCN/strings.xml
@@ -6,13 +6,13 @@
 <resources exclude-from-buck-resource-map="true">
     <string name="com_facebook_like_button_not_liked" gender="unknown">赞</string>
     <string name="com_facebook_like_button_liked" gender="unknown">赞了</string>
-    <string name="com_facebook_loginview_log_out_button" gender="unknown">注销</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">退出</string>
     <string name="com_facebook_loginview_log_in_button" gender="unknown">登录</string>
     <string name="com_facebook_loginview_log_in_button_long" gender="unknown">使用 Facebook 登录</string>
     <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">前往 Facebook</string>
     <string name="com_facebook_loginview_logged_in_as" gender="unknown">登录身份：%1$s</string>
     <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">已通过 Facebook 登录</string>
-    <string name="com_facebook_loginview_log_out_action" gender="unknown">注销</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">退出</string>
     <string name="com_facebook_loginview_cancel_action" gender="unknown">取消</string>
     <string name="com_facebook_loading" gender="unknown">正在加载...</string>
     <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest 错误</string>
diff --git a/facebook-messenger/build.gradle b/facebook-messenger/build.gradle
index cfb6a4346..fb62910aa 100644
--- a/facebook-messenger/build.gradle
+++ b/facebook-messenger/build.gradle
@@ -5,7 +5,7 @@ project.group 'com.facebook.android'
 project.ext.name = 'Facebook-Messenger-Android-SDK'
 project.ext.artifactId = "facebook-messenger"
 project.ext.description = 'Facebook Messenger Android SDK'
-project.ext.url = 'https://github.com/facebook/facebook-android-sdk/facebook-messenger'
+project.ext.url = 'https://github.com/facebook/facebook-android-sdk'
 
 dependencies {
     // Facebook Dependencies
diff --git a/facebook-messenger/proguard-rules.pro b/facebook-messenger/proguard-rules.pro
index b19a92289..fdc4aa0c9 100644
--- a/facebook-messenger/proguard-rules.pro
+++ b/facebook-messenger/proguard-rules.pro
@@ -19,7 +19,10 @@
 #   public *;
 #}
 
+-keepnames class * implements java.io.Serializable
+
 -keepclassmembers class * implements java.io.Serializable {
+    static final long serialVersionUID;
     private static final java.io.ObjectStreamField[] serialPersistentFields;
     private void writeObject(java.io.ObjectOutputStream);
     private void readObject(java.io.ObjectInputStream);
diff --git a/facebook-places/build.gradle b/facebook-places/build.gradle
index 356e67e04..655e6adf8 100644
--- a/facebook-places/build.gradle
+++ b/facebook-places/build.gradle
@@ -5,7 +5,7 @@ project.group 'com.facebook.android'
 project.ext.name = 'Facebook-Places-Android-SDK'
 project.ext.artifactId = "facebook-places"
 project.ext.description = 'Facebook Places Android SDK'
-project.ext.url = 'https://github.com/facebook/facebook-android-sdk/facebook-places'
+project.ext.url = 'https://github.com/facebook/facebook-android-sdk'
 
 dependencies {
     // Facebook Dependencies
diff --git a/facebook-share/build.gradle b/facebook-share/build.gradle
index e27749b89..fca643859 100644
--- a/facebook-share/build.gradle
+++ b/facebook-share/build.gradle
@@ -5,7 +5,7 @@ project.group 'com.facebook.android'
 project.ext.name = 'Facebook-Share-Android-SDK'
 project.ext.artifactId = "facebook-share"
 project.ext.description = 'Facebook Share Android SDK'
-project.ext.url = 'https://github.com/facebook/facebook-android-sdk/facebook-share'
+project.ext.url = 'https://github.com/facebook/facebook-android-sdk'
 
 dependencies {
     // Facebook Dependencies
diff --git a/facebook-share/src/main/java/com/facebook/share/model/AppInviteContent.java b/facebook-share/src/main/java/com/facebook/share/model/AppInviteContent.java
index c9b690cf5..7f30ffdf3 100644
--- a/facebook-share/src/main/java/com/facebook/share/model/AppInviteContent.java
+++ b/facebook-share/src/main/java/com/facebook/share/model/AppInviteContent.java
@@ -24,8 +24,10 @@
 import android.text.TextUtils;
 
 /**
- * Describes the content that will be displayed by the AppInviteDialog
+ * @deprecated
+ * AppInvites is deprecated
  */
+@Deprecated
 public final class AppInviteContent implements ShareModel {
     private final String applinkUrl;
     private final String previewImageUrl;
@@ -41,6 +43,11 @@ private AppInviteContent(final Builder builder) {
         this.destination = builder.destination;
     }
 
+    /**
+     * @deprecated
+     * AppInvites is deprecated
+     */
+    @Deprecated
     AppInviteContent(final Parcel in) {
         this.applinkUrl = in.readString();
         this.previewImageUrl = in.readString();
@@ -57,41 +64,46 @@ private AppInviteContent(final Builder builder) {
     }
 
     /**
-     * Gets the applink url.
-     * @return The applink url for the invite.
+     * @deprecated
+     * AppInvites is deprecated
      */
+    @Deprecated
     public String getApplinkUrl() {
         return applinkUrl;
     }
 
     /**
-     * Gets the preview image url.
-     * @return The preview image url for the invite.
+     * @deprecated
+     * AppInvites is deprecated
      */
+    @Deprecated
     public String getPreviewImageUrl() {
         return previewImageUrl;
     }
 
     /**
-     * Gets the promotion code.
-     * @return The promotion code for invite.
+     * @deprecated
+     * AppInvites is deprecated
      */
+    @Deprecated
     public String getPromotionCode() {
         return promoCode;
     }
 
     /**
-     * Gets the promotion text.
-     * @return The promotion text for invite.
+     * @deprecated
+     * AppInvites is deprecated
      */
+    @Deprecated
     public String getPromotionText() {
         return promoText;
     }
 
     /**
-     * Gets the destination for the invite.
-     * @return The destination for the invite.
+     * @deprecated
+     * AppInvites is deprecated
      */
+    @Deprecated
     public Builder.Destination getDestination() {
         if (destination != null) {
             return destination;
@@ -100,10 +112,20 @@ public String getPromotionText() {
         }
     }
 
+    /**
+     * @deprecated
+     * AppInvites is deprecated
+     */
+    @Deprecated
     public int describeContents() {
         return 0;
     }
 
+    /**
+     * @deprecated
+     * AppInvites is deprecated
+     */
+    @Deprecated
     public void writeToParcel(final Parcel out, final int flags) {
         out.writeString(this.applinkUrl);
         out.writeString(this.previewImageUrl);
@@ -112,6 +134,11 @@ public void writeToParcel(final Parcel out, final int flags) {
         out.writeString(this.destination.toString());
     }
 
+    /**
+     * @deprecated
+     * AppInvites is deprecated
+     */
+    @Deprecated
     @SuppressWarnings("unused")
     public static final Creator<AppInviteContent> CREATOR =
         new Creator<AppInviteContent>() {
@@ -125,8 +152,10 @@ public AppInviteContent createFromParcel(final Parcel in) {
         };
 
     /**
-     * Builder class for a concrete instance of AppInviteContent
+     * @deprecated
+     * AppInvites is deprecated
      */
+    @Deprecated
     public static class Builder
             implements ShareModelBuilder<AppInviteContent, Builder> {
         private String applinkUrl;
@@ -136,6 +165,11 @@ public AppInviteContent createFromParcel(final Parcel in) {
         private Destination destination;
 
 
+        /**
+         * @deprecated
+         * AppInvites is deprecated
+         */
+        @Deprecated
         public enum Destination {
             FACEBOOK ("facebook"),
             MESSENGER ("messenger");
@@ -156,39 +190,30 @@ public String toString() {
         }
 
         /**
-         * Sets the applink url that will be used for deep-linking
-         *
-         * @param applinkUrl the applink url
-         * @return the builder
+         * @deprecated
+         * AppInvites is deprecated
          */
+        @Deprecated
         public Builder setApplinkUrl(final String applinkUrl) {
             this.applinkUrl = applinkUrl;
             return this;
         }
 
         /**
-         * Sets the preview image url for this invite. See guidelines for correct dimensions.
-         *
-         * @param previewImageUrl url of the image that is going to be used as a preview for invite
-         * @return the builder
+         * @deprecated
+         * AppInvites is deprecated
          */
+        @Deprecated
         public Builder setPreviewImageUrl(final String previewImageUrl) {
             this.previewImageUrl = previewImageUrl;
             return this;
         }
 
         /**
-         * Sets promotion code and promotion text to be shown on sender and receiver flows
-         * for app invites.
-         *
-         * @param promotionText Promotion text to be shown on sender and receiver flows.
-         *                      Promotion text has to be between 1 and 80 characters long.
-         * @param promotionCode Promotion code to be shown on sender and receiver flows.
-         *                      Promotion code is optional and has to be less than 10 characters
-         *                      long. promotionText needs to be specified if promotionCode
-         *                      is provided.
-         * @return the builder
+         * @deprecated
+         * AppInvites is deprecated
          */
+        @Deprecated
         public Builder setPromotionDetails(final String promotionText, final String promotionCode) {
             if (!TextUtils.isEmpty(promotionText)) {
                 if (promotionText.length() > 80) {
@@ -227,18 +252,33 @@ public Builder setPromotionDetails(final String promotionText, final String prom
             return this;
         }
 
+        /**
+         * @deprecated
+         * AppInvites is deprecated
+         */
+        @Deprecated
         public Builder setDestination(Destination destination) {
             this.destination = destination;
             return this;
         }
 
 
+        /**
+         * @deprecated
+         * AppInvites is deprecated
+         */
+        @Deprecated
         @Override
         public AppInviteContent build() {
             return new AppInviteContent(this);
         }
 
 
+        /**
+         * @deprecated
+         * AppInvites is deprecated
+         */
+        @Deprecated
         @Override
         public Builder readFrom(final AppInviteContent content) {
             if (content == null) {
diff --git a/facebook-share/src/main/java/com/facebook/share/widget/AppInviteDialog.java b/facebook-share/src/main/java/com/facebook/share/widget/AppInviteDialog.java
index 90f6f4b56..b05bbd849 100644
--- a/facebook-share/src/main/java/com/facebook/share/widget/AppInviteDialog.java
+++ b/facebook-share/src/main/java/com/facebook/share/widget/AppInviteDialog.java
@@ -45,14 +45,18 @@
 import java.util.List;
 
 /**
- * A dialog for inviting users.
+ * @deprecated
+ * AppInvites is deprecated
  */
+@Deprecated
 public class AppInviteDialog
         extends FacebookDialogBase<AppInviteContent, AppInviteDialog.Result> {
 
     /**
-     * Helper object for handling the result from an app invites dialog.
+     * @deprecated
+     * AppInvites is deprecated
      */
+    @Deprecated
     public static final class Result {
         private final Bundle bundle;
 
@@ -81,21 +85,19 @@ public Bundle getData() {
             CallbackManagerImpl.RequestCodeOffset.AppInvite.toRequestCode();
 
     /**
-     * Indicates whether the app invite dialog can be shown.
-     *
-     * @return true if the dialog can be shown
+     * @deprecated
+     * AppInvites is deprecated
      */
+    @Deprecated
     public static boolean canShow() {
-        return canShowNativeDialog() || canShowWebFallback();
+        return false;
     }
 
     /**
-     * Helper to show the provided {@link com.facebook.share.model.AppInviteContent} using
-     * the provided Activity. No callback will be invoked.
-     *
-     * @param activity          Activity to use to share the provided content
-     * @param appInviteContent Content of the app invite to send
+     * @deprecated
+     * AppInvites is deprecated
      */
+    @Deprecated
     public static void show(
             final Activity activity,
             final AppInviteContent appInviteContent) {
@@ -104,12 +106,10 @@ public static void show(
     }
 
     /**
-     * Helper to show the provided {@link com.facebook.share.model.AppInviteContent} using
-     * the provided Fragment. No callback will be invoked.
-     *
-     * @param fragment          android.support.v4.app.Fragment to use to share the provided content
-     * @param appInviteContent Content of the app invite to send
+     * @deprecated
+     * AppInvites is deprecated
      */
+    @Deprecated
     public static void show(
             final Fragment fragment,
             final AppInviteContent appInviteContent) {
@@ -117,12 +117,10 @@ public static void show(
     }
 
     /**
-     * Helper to show the provided {@link com.facebook.share.model.AppInviteContent} using
-     * the provided Fragment. No callback will be invoked.
-     *
-     * @param fragment          android.app.Fragment to use to share the provided content
-     * @param appInviteContent Content of the app invite to send
+     * @deprecated
+     * AppInvites is deprecated
      */
+    @Deprecated
     public static void show(
             final android.app.Fragment fragment,
             final AppInviteContent appInviteContent) {
@@ -137,36 +135,36 @@ private static void show(
     }
 
     private static boolean canShowNativeDialog() {
-        return DialogPresenter.canPresentNativeDialogWithFeature(getFeature());
+        return false;
     }
 
     private static boolean canShowWebFallback() {
-        return DialogPresenter.canPresentWebFallbackDialogWithFeature(getFeature());
+        return false;
     }
 
     /**
-     * Constructs a new AppInviteDialog.
-     *
-     * @param activity Activity to use to share the provided content.
+     * @deprecated
+     * AppInvites is deprecated
      */
+    @Deprecated
     public AppInviteDialog(final Activity activity) {
         super(activity, DEFAULT_REQUEST_CODE);
     }
 
     /**
-     * Constructs a new AppInviteDialog.
-     *
-     * @param fragment android.support.v4.app.Fragment to use to share the provided content.
+     * @deprecated
+     * AppInvites is deprecated
      */
+    @Deprecated
     public AppInviteDialog(final Fragment fragment) {
         this(new FragmentWrapper(fragment));
     }
 
     /**
-     * Constructs a new AppInviteDialog.
-     *
-     * @param fragment android.app.Fragment to use to share the provided content.
+     * @deprecated
+     * AppInvites is deprecated
      */
+    @Deprecated
     public AppInviteDialog(final android.app.Fragment fragment) {
         this(new FragmentWrapper(fragment));
     }
@@ -175,6 +173,16 @@ private AppInviteDialog(final FragmentWrapper fragment) {
         super(fragment, DEFAULT_REQUEST_CODE);
     }
 
+    /**
+     * @deprecated
+     * AppInvites is deprecated
+     */
+    @Deprecated
+    @Override
+    public void show(AppInviteContent content) {
+        // Deprecated. No-op
+    }
+
     protected void registerCallbackImpl(
             final CallbackManagerImpl callbackManager,
             final FacebookCallback<Result> callback) {
@@ -225,7 +233,7 @@ protected AppCall createBaseAppCall() {
     private class NativeHandler extends ModeHandler {
         @Override
         public boolean canShow(AppInviteContent content, boolean isBestEffort) {
-            return AppInviteDialog.canShowNativeDialog();
+            return false;
         }
 
         @Override
@@ -258,7 +266,7 @@ public Bundle getLegacyParameters() {
     private class WebFallbackHandler extends ModeHandler {
         @Override
         public boolean canShow(final AppInviteContent content, boolean isBestEffort) {
-            return AppInviteDialog.canShowWebFallback();
+            return false;
         }
 
         @Override
diff --git a/facebook/src/main/java/com.facebook.all/All.java b/facebook/src/main/java/com/facebook/all/All.java
similarity index 100%
rename from facebook/src/main/java/com.facebook.all/All.java
rename to facebook/src/main/java/com/facebook/all/All.java
diff --git a/plugin/FacebookSDKPlugin/resources/META-INF/plugin.xml b/plugin/FacebookSDKPlugin/resources/META-INF/plugin.xml
deleted file mode 100644
index 5ac08bc60..000000000
--- a/plugin/FacebookSDKPlugin/resources/META-INF/plugin.xml
+++ /dev/null
@@ -1,66 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<idea-plugin version="2">
-  <id>com.facebook.plugin</id>
-  <name>Facebook SDK Plugin</name>
-  <version>0.1</version>
-  <vendor email="support@facebook.com"
-          url="https://developers.facebook.com/">
-    Facebook SDK
-  </vendor>
-
-  <description>
-    Description of Facebook SDK etc etc.
-  </description>
-
-  <change-notes>
-    Initial experiment version
-  </change-notes>
-
-  <idea-version since-build="141.0"/>
-
-  <depends>com.intellij.modules.lang</depends>
-  <depends>com.intellij.modules.platform</depends>
-  <depends>org.jetbrains.android</depends>
-  <depends>org.jetbrains.plugins.gradle</depends>
-
-  <extensions defaultExtensionNs="com.intellij">
-  </extensions>
-
-  <actions>
-    <group id="FacebookSDK.ToolMenu"
-           class="com.intellij.openapi.actionSystem.DefaultActionGroup"
-           text="Facebook SDK"
-           description="Facebook SDK Actions"
-           popup="true"
-           icon="/icons/facebook-ldpi.png">
-      <add-to-group group-id="ToolsMenu" anchor="last" />
-    </group>
-    <action id="FacebookSDK.InstallAccountKit"
-            class="com.facebook.plugin.actions.AccountKitInstallerAction"
-            text="Install Account Kit"
-            description="Install Account Kit"
-            icon="/icons/accountkit-ldpi.png">
-      <add-to-group group-id="FacebookSDK.ToolMenu" anchor="first" />
-    </action>
-  </actions>
-</idea-plugin>
diff --git a/plugin/FacebookSDKPlugin/resources/icons/accountkit-ldpi.png b/plugin/FacebookSDKPlugin/resources/icons/accountkit-ldpi.png
deleted file mode 100644
index f4d788adf..000000000
Binary files a/plugin/FacebookSDKPlugin/resources/icons/accountkit-ldpi.png and /dev/null differ
diff --git a/plugin/FacebookSDKPlugin/resources/icons/facebook-ldpi.png b/plugin/FacebookSDKPlugin/resources/icons/facebook-ldpi.png
deleted file mode 100644
index d1178eff1..000000000
Binary files a/plugin/FacebookSDKPlugin/resources/icons/facebook-ldpi.png and /dev/null differ
diff --git a/plugin/FacebookSDKPlugin/resources/values/strings.properties b/plugin/FacebookSDKPlugin/resources/values/strings.properties
deleted file mode 100644
index 6cb626345..000000000
--- a/plugin/FacebookSDKPlugin/resources/values/strings.properties
+++ /dev/null
@@ -1,58 +0,0 @@
-prereqsText = \
-  <html>\
-  <h2>Prerequisites</h2>\
-  Before you begin integrating Account Kit into your app, make sure you have completed the following prerequisites\
-  <p/>\
-  If you already have a Facebook App configured, you can skip to the next page.\
-  <p/>\
-  <h3>A. Create a Developer Account</h3>\
-  If you don't have a Facebook developer account, create one by going to<br/>\
-  <a href="https://www.facebook.com/login">https://www.facebook.com/login</a>.\
-  <p/>\
-  Your Facebook developer account gives you access to developer tools and allows you to create Facebook apps.\
-  <p/>\
-  <h3>B. Get a Facebook App ID</h3>\
-  Account Kit for Android requires a Facebook app ID. Follow the steps in the Getting Started, or to use Quick Start by going to<br/>\
-  <a href="https://developers.facebook.com/quickstarts">https://developers.facebook.com/quickstarts</a>.\
-  <p/>\
-  <h3>C. Choose Your App Settings</h3>\
-  Choose whether to allow email and SMS login, and choose security settings for your app by going to<br/>\
-  <a href="https://developers.facebook.com/apps">https://developers.facebook.com/apps</a>.\
-  </html>
-
-completedText = \
-  <html>\
-  <h2>All Done</h2>\
-  You're all done! AccountKit has been installed and configured for your project.\
-  <p/>\
-  For more information, tips and tricks, please visit the official documentation at<br/>\
-  <a href="https://developers.facebook.com/docs/accountkit/android">https://developers.facebook.com/docs/accountkit/android</a>\
-  <p/>\
-  You may close the installation wizard now. Or go back and install AccountKit on more modules or activities.\
-  </html>
-
-configureSDKText = \
-  <html>\
-  <h2>Configure the SDK</h2>\
-  Select the module that you would like to install Account Kit SDK on; \
-  this should be the module that contains your login buttons and logic.\
-  </html>
-
-configureParamsText = \
-  <html>\
-  Facebook app ID and name are shown at the top of your application dashboard;<br/>\
-  The client token is found in the Account Kit tab in the App Dashboard.\
-  </html>
-
-configureActivityText = \
-  <html>\
-  <h2>Configure Login Activity</h2>\
-  Select an Activity from your application that will have the AccountKit login buttons.<br/>\
-  This activity will be configured to receive the intent callbacks and have the logic for retrieving the \
-  AccountKit login tokens inside.\
-  </html>
-
-configureActivityDesc = \
-  <html>\
-  Click next to copy the setup and retrieval code to this activity.\
-  </html>
\ No newline at end of file
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitModuleConfigurator.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitModuleConfigurator.java
deleted file mode 100644
index 89d8cc46d..000000000
--- a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitModuleConfigurator.java
+++ /dev/null
@@ -1,151 +0,0 @@
-/*
- * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.plugin.config;
-
-import com.facebook.plugin.utils.PsiHelper;
-import com.intellij.openapi.module.Module;
-import com.intellij.openapi.module.ModuleManager;
-import com.intellij.openapi.project.Project;
-import org.jetbrains.plugins.gradle.util.GradleConstants;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class AccountKitModuleConfigurator implements Configurator {
-    private final Configurator[] configurators;
-
-    public AccountKitModuleConfigurator(final String appName,
-                                        final String appId,
-                                        final String clientToken) {
-        this.configurators = createConfigurators(appName, appId, clientToken);
-    }
-
-    @Override
-    public boolean isConfigured(final Module module) {
-        for (Configurator configurator : configurators) {
-            if (!configurator.isConfigured(module)) {
-                return false;
-            }
-        }
-
-        return true;
-    }
-
-    @Override
-    public void doConfigure(final Module module) {
-        for (Configurator configurator : configurators) {
-            configurator.doConfigure(module);
-        }
-    }
-
-    private static Configurator[] createConfigurators(
-            final String appName,
-            final String appId,
-            final String clientToken) {
-
-        return new Configurator[]{
-                new GradleBuildConfigurator(
-                        "jcenter",
-                        "com.facebook.android:account-kit-sdk",
-                        "4.+"),
-                new AndroidManifestConfigurator(
-                        "com.facebook.accountkit.ui.AccountKitActivity")
-                        .addMetadata(
-                                "com.facebook.accountkit.ApplicationName",
-                                "@string/fb_app_name")
-                        .addMetadata(
-                                "com.facebook.sdk.ApplicationId",
-                                "@string/fb_app_id")
-                        .addMetadata(
-                                "com.facebook.accountkit.ClientToken",
-                                "@string/ak_client_token")
-                        .addPermission("android.permission.INTERNET")
-                        .addPermission("android.permission.READ_PHONE_STATE")
-                        .addPermission("android.permission.RECEIVE_SMS")
-                        .addPermission("android.permission.GET_ACCOUNTS"),
-                new AndroidResourcesConfigurator()
-                        .addResourceString("fb_app_id", appId)
-                        .addResourceString("fb_app_name", appName)
-                        .addResourceString("ak_client_token", clientToken)
-        };
-    }
-
-    public enum InstallationType {
-        CannotInstall,
-        AlreadyInstalled,
-        Available
-    }
-
-    public static final class AvailableModule {
-        private final Module module;
-        private final InstallationType installationType;
-
-        AvailableModule(final Module module, final InstallationType installationType) {
-            this.module = module;
-            this.installationType = installationType;
-        }
-
-        public Module getModule() {
-            return module;
-        }
-
-        public InstallationType getInstallationType() {
-            return installationType;
-        }
-
-        @Override
-        public String toString() {
-            String title = module.getName();
-            if (installationType == InstallationType.CannotInstall) {
-                title += " (unavailable)";
-            } else if (installationType == InstallationType.AlreadyInstalled) {
-                title += " (already installed)";
-            }
-
-            return title;
-        }
-    }
-
-    public static AvailableModule[] getModuleAvailabilities(final Project project) {
-        Configurator[] checkConfigurators = createConfigurators("", "", "");
-        Module[] allModules = ModuleManager.getInstance(project).getModules();
-        List<AvailableModule> res = new ArrayList<>();
-
-        for (Module module : allModules) {
-            InstallationType moduleType = InstallationType.CannotInstall;
-
-            if (PsiHelper.findAllFiles(module, GradleConstants.DEFAULT_SCRIPT_NAME).size() > 0) {
-                moduleType = InstallationType.AlreadyInstalled;
-
-                for (Configurator configurator : checkConfigurators) {
-                    if (!configurator.isConfigured(module)) {
-                        moduleType = InstallationType.Available;
-                        break;
-                    }
-                }
-            }
-
-            res.add(new AvailableModule(module, moduleType));
-        }
-
-        return res.toArray(new AvailableModule[res.size()]);
-    }
-}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisites.form b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisites.form
deleted file mode 100644
index 93e0bc31a..000000000
--- a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisites.form
+++ /dev/null
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.AccountKitPrerequisitesForm">
-  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="2" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
-    <margin top="0" left="0" bottom="0" right="0"/>
-    <constraints>
-      <xy x="20" y="20" width="1069" height="369"/>
-    </constraints>
-    <properties/>
-    <border type="none"/>
-    <children>
-      <component id="34af8" class="javax.swing.JLabel">
-        <constraints>
-          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
-        </constraints>
-        <properties>
-          <horizontalTextPosition value="10"/>
-          <text resource-bundle="values/strings" key="prereqsText"/>
-          <verticalAlignment value="1"/>
-          <verticalTextPosition value="1"/>
-        </properties>
-      </component>
-      <vspacer id="66a18">
-        <constraints>
-          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
-        </constraints>
-      </vspacer>
-    </children>
-  </grid>
-</form>
diff --git a/plugins/FacebookSDKPlugin/lib/rsyntaxtextarea-2.6.1-javadoc.jar b/plugins/FacebookSDKPlugin/lib/rsyntaxtextarea-2.6.1-javadoc.jar
new file mode 100644
index 000000000..571a253e4
Binary files /dev/null and b/plugins/FacebookSDKPlugin/lib/rsyntaxtextarea-2.6.1-javadoc.jar differ
diff --git a/plugins/FacebookSDKPlugin/lib/rsyntaxtextarea-2.6.1-sources.jar b/plugins/FacebookSDKPlugin/lib/rsyntaxtextarea-2.6.1-sources.jar
new file mode 100644
index 000000000..d929ad3a8
Binary files /dev/null and b/plugins/FacebookSDKPlugin/lib/rsyntaxtextarea-2.6.1-sources.jar differ
diff --git a/plugins/FacebookSDKPlugin/lib/rsyntaxtextarea-2.6.1.jar b/plugins/FacebookSDKPlugin/lib/rsyntaxtextarea-2.6.1.jar
new file mode 100644
index 000000000..b834e2d41
Binary files /dev/null and b/plugins/FacebookSDKPlugin/lib/rsyntaxtextarea-2.6.1.jar differ
diff --git a/plugins/FacebookSDKPlugin/resources/META-INF/plugin.xml b/plugins/FacebookSDKPlugin/resources/META-INF/plugin.xml
new file mode 100644
index 000000000..743aaf299
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/resources/META-INF/plugin.xml
@@ -0,0 +1,92 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<!-- TODO: (t22065513) create a docs landing page for this plugin https://developers.facebook.com/android_studio_plugin -->
+<idea-plugin url="https://developers.facebook.com">
+    <id>com.facebook.plugin</id>
+
+    <name>Facebook Assistant (Beta)</name>
+
+    <version>0.1</version>
+
+    <vendor url="https://developers.facebook.com/"
+            email="support@facebook.com">
+        Facebook Assistant (Beta)
+    </vendor>
+
+    <description>
+        Facebook Assistant (Beta) aids in integrating an Android project with the
+        Facebook and AccountKit SDKs.
+    </description>
+
+    <change-notes>
+        Beta release.
+    </change-notes>
+
+    <!-- Minimum and maximum build of IDEA compatible with the plugin -->
+    <idea-version since-build="141.0"/>
+
+    <depends>com.intellij.modules.java</depends>
+    <depends>com.intellij.modules.lang</depends>
+    <depends>com.intellij.modules.platform</depends>
+    <depends>org.jetbrains.android</depends>
+    <depends>org.jetbrains.plugins.gradle</depends>
+
+    <!-- Allows a plugin to integrate its help system (in JavaHelp format)
+       with the IDEA help system. The "file" attribute specifies the name
+       of the JAR file in the "help" subdirectory of the plugin directory.
+       The "path" attribute specifies the name of the helpset file within
+       the JAR file.-->
+    <!--<helpset file="myhelp.jar" path="/Help.hs" />-->
+
+    <!-- Resource bundle from which the text of plugin descriptions,
+           action names and etc. will be loaded -->
+    <!--<resource-bundle>messages.MyPluginBundle</resource-bundle>-->
+
+    <!-- Actions -->
+    <actions>
+        <action id="FacebookSDK.OpenFacebookAssistant"
+                class="com.facebook.plugin.actions.OpenFacebookAssistantAction"
+                text="Facebook Assistant (Beta)"
+                description="Open Facebook Assistant"
+                icon="/icons/glyph-app-facebook-blue.png">
+            <add-to-group group-id="ToolsMenu" anchor="last" />
+        </action>
+
+        <action id="FacebookSDK.FacebookLogin"
+                class="com.facebook.plugin.actions.FacebookLoginAction"
+                text="Facebook Login (Beta)"
+                icon="/icons/glyph-app-facebook-blue.png">
+            <add-to-group group-id="MainToolBar" anchor="last" />
+            <add-to-group group-id="NavBarToolBar" anchor="last" />
+        </action>
+    </actions>
+
+    <!-- Extensions -->
+    <extensions defaultExtensionNs="com.intellij">
+        <toolWindow
+                id="Facebook Assistant (Beta)"
+                icon="/icons/glyph-app-facebook-blue.png"
+                anchor="right"
+                factoryClass="com.facebook.plugin.ui.FbToolWindowForm"/>
+    </extensions>
+
+</idea-plugin>
diff --git a/plugins/FacebookSDKPlugin/resources/icons/1.png b/plugins/FacebookSDKPlugin/resources/icons/1.png
new file mode 100644
index 000000000..6a71def42
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/1.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/2.png b/plugins/FacebookSDKPlugin/resources/icons/2.png
new file mode 100644
index 000000000..0ed2aca85
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/2.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/3.png b/plugins/FacebookSDKPlugin/resources/icons/3.png
new file mode 100644
index 000000000..f5141c785
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/3.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/4.png b/plugins/FacebookSDKPlugin/resources/icons/4.png
new file mode 100644
index 000000000..46072d0c9
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/4.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/5.png b/plugins/FacebookSDKPlugin/resources/icons/5.png
new file mode 100644
index 000000000..f17b87489
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/5.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/6.png b/plugins/FacebookSDKPlugin/resources/icons/6.png
new file mode 100644
index 000000000..089fdedfd
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/6.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/7.png b/plugins/FacebookSDKPlugin/resources/icons/7.png
new file mode 100644
index 000000000..e65414abd
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/7.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/8.png b/plugins/FacebookSDKPlugin/resources/icons/8.png
new file mode 100644
index 000000000..fbfeeec47
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/8.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/9.png b/plugins/FacebookSDKPlugin/resources/icons/9.png
new file mode 100644
index 000000000..499db3de1
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/9.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/facebook-icon.png b/plugins/FacebookSDKPlugin/resources/icons/facebook-icon.png
new file mode 100755
index 000000000..3e7d8eeec
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/facebook-icon.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/facebook_banner.png b/plugins/FacebookSDKPlugin/resources/icons/facebook_banner.png
new file mode 100644
index 000000000..957576afa
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/facebook_banner.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/glyph-app-facebook-blue.png b/plugins/FacebookSDKPlugin/resources/icons/glyph-app-facebook-blue.png
new file mode 100644
index 000000000..82e8ed7fe
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/glyph-app-facebook-blue.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/glyph-app-facebook-hollow.png b/plugins/FacebookSDKPlugin/resources/icons/glyph-app-facebook-hollow.png
new file mode 100644
index 000000000..e65c8d123
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/glyph-app-facebook-hollow.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/glyph-app-facebook.png b/plugins/FacebookSDKPlugin/resources/icons/glyph-app-facebook.png
new file mode 100644
index 000000000..41f1baea5
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/glyph-app-facebook.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/glyph-app-messenger.png b/plugins/FacebookSDKPlugin/resources/icons/glyph-app-messenger.png
new file mode 100644
index 000000000..56666e2f6
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/glyph-app-messenger.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/glyph-chevron-right.png b/plugins/FacebookSDKPlugin/resources/icons/glyph-chevron-right.png
new file mode 100644
index 000000000..5c3d05742
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/glyph-chevron-right.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/glyph-friend-share.png b/plugins/FacebookSDKPlugin/resources/icons/glyph-friend-share.png
new file mode 100644
index 000000000..edd7cfe03
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/glyph-friend-share.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/glyph-key.png b/plugins/FacebookSDKPlugin/resources/icons/glyph-key.png
new file mode 100644
index 000000000..67a02de71
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/glyph-key.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/glyph-line-chart.png b/plugins/FacebookSDKPlugin/resources/icons/glyph-line-chart.png
new file mode 100644
index 000000000..8bc38184e
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/glyph-line-chart.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/glyph-nav-arrow-left.png b/plugins/FacebookSDKPlugin/resources/icons/glyph-nav-arrow-left.png
new file mode 100644
index 000000000..f4f6ccdd5
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/glyph-nav-arrow-left.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/glyph-nearby-places.png b/plugins/FacebookSDKPlugin/resources/icons/glyph-nearby-places.png
new file mode 100644
index 000000000..757ad9fdb
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/glyph-nearby-places.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/glyph-triangle-down.png b/plugins/FacebookSDKPlugin/resources/icons/glyph-triangle-down.png
new file mode 100644
index 000000000..f9c154456
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/glyph-triangle-down.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/glyph-triangle-right.png b/plugins/FacebookSDKPlugin/resources/icons/glyph-triangle-right.png
new file mode 100644
index 000000000..9e132e90f
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/glyph-triangle-right.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/icons/play.png b/plugins/FacebookSDKPlugin/resources/icons/play.png
new file mode 100644
index 000000000..b80c0f0b7
Binary files /dev/null and b/plugins/FacebookSDKPlugin/resources/icons/play.png differ
diff --git a/plugins/FacebookSDKPlugin/resources/themes/dark.xml b/plugins/FacebookSDKPlugin/resources/themes/dark.xml
new file mode 100644
index 000000000..01899caea
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/resources/themes/dark.xml
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE RSyntaxTheme SYSTEM "theme.dtd">
+
+<!--
+	Dark theme based off of Notepad++'s Obsidian theme.
+	See theme.dtd and org.fife.ui.rsyntaxtextarea.Theme for more information.
+-->
+<RSyntaxTheme version="1.0">
+
+	<!-- Omitting baseFont will use a system-appropriate monospaced. -->
+	<!--<baseFont family="..." size="13"/>-->
+
+	<!--  General editor colors. -->
+	<background color="293134" />
+	<caret color="c1cbc2" />
+	<selection useFG="false" bg="404E51" roundedEdges="false" />
+	<currentLineHighlight color="2F393C" fade="false" />
+	<marginLine fg="394448" />
+	<markAllHighlight color="6b8189" />
+	<!-- TODO: Fix me -->
+	<markOccurrencesHighlight color="5b7179" border="false" />
+	<matchedBracket fg="6A8088" bg="6b8189" highlightBoth="false" animate="true" />
+	<hyperlinks fg="a082bd" />
+	<secondaryLanguages>
+		<language index="1" bg="333344" />
+		<language index="2" bg="223322" />
+		<language index="3" bg="332222" />
+	</secondaryLanguages>
+
+	<!-- Gutter styling. -->
+	<gutterBorder color="81969A" />
+	<lineNumbers fg="81969A" />
+	<foldIndicator fg="6A8088" iconBg="2f383c" iconArmedBg="3f484c" />
+	<iconRowHeader activeLineRange="3399ff" />
+
+	<!-- Syntax tokens. -->
+	<tokenStyles>
+		<style token="IDENTIFIER" fg="a9b7c6" />
+		<style token="RESERVED_WORD" fg="93C763" bold="true" />
+		<style token="RESERVED_WORD_2" fg="93C763" bold="true" />
+		<style token="ANNOTATION" fg="E8E2B7" />
+		<style token="COMMENT_DOCUMENTATION" fg="6C788C" />
+		<style token="COMMENT_EOL" fg="66747B" />
+		<style token="COMMENT_MULTILINE" fg="66747B" />
+		<style token="COMMENT_KEYWORD" fg="ae9fbf" />
+		<style token="COMMENT_MARKUP" fg="ae9fbf" />
+		<style token="FUNCTION" fg="E0E2E4" />
+		<style token="DATA_TYPE" fg="678CB1" bold="true" />
+		<style token="LITERAL_BOOLEAN" fg="93C763" bold="true" />
+		<style token="LITERAL_NUMBER_DECIMAL_INT" fg="FFCD22" />
+		<style token="LITERAL_NUMBER_FLOAT" fg="FFCD22" />
+		<style token="LITERAL_NUMBER_HEXADECIMAL" fg="FFCD22" />
+		<style token="LITERAL_STRING_DOUBLE_QUOTE" fg="EC7600" />
+		<style token="LITERAL_CHAR" fg="EC7600" />
+		<style token="LITERAL_BACKQUOTE" fg="EC7600" />
+		<style token="MARKUP_TAG_DELIMITER" fg="678CB1" />
+		<style token="MARKUP_TAG_NAME" fg="ABBFD3" bold="true" />
+		<style token="MARKUP_TAG_ATTRIBUTE" fg="B3B689" />
+		<style token="MARKUP_TAG_ATTRIBUTE_VALUE" fg="e1e2cf" />
+		<style token="MARKUP_COMMENT" fg="66747B" />
+		<style token="MARKUP_DTD" fg="A082BD" />
+		<style token="MARKUP_PROCESSING_INSTRUCTION" fg="A082BD" />
+		<style token="MARKUP_CDATA" fg="d5e6f0" />
+		<style token="MARKUP_CDATA_DELIMITER" fg="ae9fbf" />
+		<style token="MARKUP_ENTITY_REFERENCE" fg="678CB1" />
+		<style token="OPERATOR" fg="E8E2B7" />
+		<style token="PREPROCESSOR" fg="A082BD" />
+		<style token="REGEX" fg="d39745" />
+		<style token="SEPARATOR" fg="E8E2B7" />
+		<style token="VARIABLE" fg="ae9fbf" bold="true" />
+		<style token="WHITESPACE" fg="E0E2E4" />
+
+		<style token="ERROR_IDENTIFIER" fg="E0E2E4" bg="04790e" />
+		<style token="ERROR_NUMBER_FORMAT" fg="E0E2E4" bg="04790e" />
+		<style token="ERROR_STRING_DOUBLE" fg="E0E2E4" bg="04790e" />
+		<style token="ERROR_CHAR" fg="E0E2E4" bg="04790e" />
+	</tokenStyles>
+
+</RSyntaxTheme>
diff --git a/plugin/FacebookSDKPlugin/resources/values/code.properties b/plugins/FacebookSDKPlugin/resources/values/code.properties
similarity index 100%
rename from plugin/FacebookSDKPlugin/resources/values/code.properties
rename to plugins/FacebookSDKPlugin/resources/values/code.properties
diff --git a/plugins/FacebookSDKPlugin/resources/values/strings.properties b/plugins/FacebookSDKPlugin/resources/values/strings.properties
new file mode 100644
index 000000000..bcbd8e425
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/resources/values/strings.properties
@@ -0,0 +1,183 @@
+akCompletedText = <html>\
+  <h2>All Done</h2>\
+  You're all done! AccountKit has been installed and configured for your project.\
+  <p/>\
+  For more information, tips and tricks, please visit the official documentation at<br/>\
+  <a href="https://developers.facebook.com/docs/accountkit/android">https://developers.facebook.com/docs/accountkit/android</a>\
+  <p/>\
+  You may close the installation wizard now. Or go back and install AccountKit on more modules or activities.\
+  </html>
+
+fbCompletedText = \
+  <html>\
+  <h2>All Done</h2>\
+  You're all done! Facebook has been installed and configured for your project.\
+  <p/>\
+  For more information, tips and tricks, please visit the official documentation at<br/>\
+  <a href="https://developers.facebook.com/docs/facebook-login/android">https://developers.facebook.com/docs/facebook-login/android</a>\
+  <p/>\
+  You may close the installation wizard now. Or go back and install Facebook on more modules or activities.\
+  </html>
+
+akConfigureSDKText = \
+  <html>\
+  <h2>Configure the SDK</h2>\
+  Select the module that you would like to install AccountKit SDK on; \
+  this should be the module that contains your login buttons and logic.\
+  </html>
+
+fbCconfigureSDKText = \
+  <html>\
+  <h2>Configure the SDK</h2>\
+  Select the module that you would like to install Facebook SDK on; \
+  this should be the module that contains your login buttons and logic.\
+  </html>
+
+akConfigureParamsText = \
+  <html>\
+  Facebook app ID and name can be found at the top of your application dashboard;<br/>\
+  The client token is found in the AccountKit tab in the App Dashboard.\
+  </html>
+
+fbConfigureParamsText = \
+  <html>\
+  Facebook app ID can be found at the top of your application dashboard.\
+  </html>
+
+configureActivityText = \
+  <html>\
+  <h2>Configure Login Activity</h2>\
+  Select an Activity from your application that will have the AccountKit login buttons.<br/>\
+  This activity will be configured to receive the intent callbacks and have the logic for retrieving the \
+  AccountKit login tokens inside.\
+  </html>
+
+configureActivityDesc = \
+  <html>\
+  Click next to copy the setup and retrieval code to this activity.\
+  </html>
+
+facebook=Facebook
+
+title_description = \
+  <html>\
+  This assistant gives you the tools to quickly, and easily integrate your app with our SDKs\
+  </html>
+
+facebookCoreSDK=<html><h3>Analytics</h3></html>
+
+facebookCoreDescription=<html>Measure user activity and engagement with free, easy, and unlimited analytics.<THIS WAS COMPLETELY RIPPED OFF FROM FIREBASE PLUGIN></html>
+
+integrateFacebookCoreSDKBold=<html><b>Integrate Facebook AppEvents</b></html>
+
+integrateFacebookCoreSDK=<html>Integrate Facebook AppEvents</html>
+
+facebookAnalyticsSectionDescription=<html>App Events help you understand the makeup of people who engage with your app and measure \
+  and reach specific sets of your users with Facebook mobile app ads. This is done by logging events from your app via \
+  Facebook's Android SDK. The event can be one of 14 predefined events such as added to cart in a commerce app or \
+  achieved level in a game, or any custom events you can define.</html>
+
+integrateFacebookCoreSDKLink=<html><u>Integrate Facebook AppEvents</u></html>
+
+facebookLoginSDK=<html><h3>Login</h3></html>
+
+facebookLoginSectionDescription=<html>The Facebook SDK for Android enables people to sign into your app with \
+  Facebook Login. When people log into your app with Facebook they can grant permissions to your app so you can \
+  retrieve information or perform actions on Facebook on their behalf.</html>
+
+facebookLoginDescription=<html>Sign in and manage users with ease, accepting emails, Facebook login,...<THIS WAS COMPLETELY RIPPED OFF FROM FIREBASE PLUGIN></html>
+
+integrateFacebookLoginSDKBold=<html><b>Integrate Facebook Login</b></html>
+
+integrateFacebookLoginSDK=<html>Integrate Facebook Login</html>
+
+integrateFacebookLoginSDKLink=<html><u>Integrate Facebook Login</u></html>
+
+facebookShareSDK=<html><h3>Sharing</h3></html>
+
+facebookShareSectionDescription=<html>Sharing is a simple way of letting people bring content from \
+  your website or mobile app to Facebook. Sharing is triggered when someone clicks a social plugin like the \
+  Share or Send button. This launches the corresponding Share or Message dialog. You can also choose to design your \
+  own button to launch one of these dialogs or a custom sharing interface.</html>
+
+facebookShareDescription=<html>Sharing is a simple way of letting people bring content from your website or mobile app to Facebook.</html>
+
+integrateFacebookShareSDKBold=<html><b>Integrate Facebook Sharing</b></html>
+
+integrateFacebookShareSDK=<html>Integrate Facebook Sharing</html>
+
+integrateFacebookShareSDKLink=<html><u>Integrate Facebook Sharing</u></html>
+
+facebookPlacesSDK=<html><h3>Places</h3></html>
+
+facebookPlacesSectionDescription=<html>Search for places within a specified radius, and receive a list of places \
+  filtered by specified category (for example, restaurants). By providing raw location signals (GPS, Wi-Fi, and \
+  Bluetooth), retrieve a list of place candidates along with confidence level estimates—that your user is at those \
+  places. By providing a place ID, retrieve place-related information about the place (for example, address and hours \
+  of operation). If your request is authenticated with a user access token, then you can also retrieve social-related \
+  information like the number of friends who liked and checked into the place.</html>
+
+facebookPlacesDescription=<html>Places lets you search for places, estimate the current place where the device is \
+  located, fetch information about a specific place and more.</html>
+
+integrateFacebookPlacesSDKBold=<html><b>Integrate Facebook Places</b></html>
+
+integrateFacebookPlacesSDK=<html>Integrate Facebook Places</html>
+
+integrateFacebookPlacesSDKLink=<html><u>Integrate Facebook Places</u></html>
+
+facebookMessengerSDK=<html><h3>Messenger</h3></html>
+
+facebookMessengerSectionDescription=<html>Build fun new ways for people to express themselves in the conversations they are already having.</html>
+
+facebookMessengerDescription=<html>Send images, animated gifs, videos and audio clips to Messenger from your Android app</html>
+
+integrateFacebookMessengerSDKBold=<html><b>Integrate Facebook Messenger</b></html>
+
+integrateFacebookMessengerSDK=<html>Integrate Facebook Messenger</html>
+
+integrateFacebookMessengerSDKLink=<html><u>Integrate Facebook Messenger</u></html>
+
+accountKitSDK=<html><h3>AccountKit SDK</h3></html>
+
+accountKitSectionDescription=<html>AccountKit helps people quickly and easily register and log into your app \
+  using their phone number or email address as passwordless credentials. AccountKit is powered by Facebook's \
+  email and SMS sending infrastructure for reliable scalable performance with global reach. Because it uses email \
+  and phone number authentication, AccountKit doesn't require a Facebook account and is the ideal alternative to \
+  a social login.</html>
+
+accountKitDescription=<html>Enable phone number and email authentication in your app.</html>
+
+integrateAccountKitSDKBold=<html><b>Integrate AccountKit SDK</b></html>
+
+integrateAccountKitSDK=<html>Integrate AccountKit SDK</html>
+
+integrateAccountKitSDKLink=<html><u>Integrate AccountKit SDK</u></html>
+
+moreInfo=<html><u href>More info</u></html>
+
+login_description = \
+  <html>\
+  Log in to Facebook to start using Facebook Assistant with your Android projects.\
+  </html>
+
+loginUseThisCode = \
+  <html>\
+  Verify the following code to log into Facebook Assistant:\
+  </html>
+
+loginAlternatives = \
+  <html>\
+  If your browser did not open automatically, go to \
+  <a href="https://www.facebook.com/device">facebook.com/device</a> \
+  or open the Facebook App on your mobile device and go to 'Device Requests' \
+  to enter your code manually. \
+  </html>
+
+connectToFacebook=Connect to Facebook
+
+connectYourApp=<html><b>Connect your app to Facebook</b></html>
+
+connected=Connected
+
+completed=Completed
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/actions/FacebookLoginAction.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/actions/FacebookLoginAction.java
new file mode 100644
index 000000000..d88dd8580
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/actions/FacebookLoginAction.java
@@ -0,0 +1,51 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.actions;
+
+import com.facebook.plugin.login.FacebookLoginActionButton;
+import com.facebook.plugin.login.FacebookUserPane;
+import com.intellij.openapi.actionSystem.ActionToolbar;
+import com.intellij.openapi.actionSystem.AnAction;
+import com.intellij.openapi.actionSystem.AnActionEvent;
+import com.intellij.openapi.actionSystem.Presentation;
+import com.intellij.openapi.actionSystem.RightAlignedToolbarAction;
+import com.intellij.openapi.actionSystem.ex.CustomComponentAction;
+
+import javax.swing.JComponent;
+
+public class FacebookLoginAction
+        extends AnAction
+        implements CustomComponentAction, RightAlignedToolbarAction {
+
+    @Override
+    public void actionPerformed(final AnActionEvent event) {
+        FacebookUserPane.popup((JComponent)event.getInputEvent().getSource());
+    }
+
+    @Override
+    public JComponent createCustomComponent(Presentation presentation) {
+        return new FacebookLoginActionButton(
+                this,
+                presentation,
+                presentation.getText(),
+                ActionToolbar.DEFAULT_MINIMUM_BUTTON_SIZE);
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/actions/AccountKitInstallerAction.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/actions/OpenFacebookAssistantAction.java
similarity index 77%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/actions/AccountKitInstallerAction.java
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/actions/OpenFacebookAssistantAction.java
index 54baebdb2..93e7c33d5 100644
--- a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/actions/AccountKitInstallerAction.java
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/actions/OpenFacebookAssistantAction.java
@@ -20,19 +20,14 @@
 
 package com.facebook.plugin.actions;
 
-import com.facebook.plugin.ui.AccountKitInstallerWizard;
+import com.facebook.plugin.ui.FbToolWindowForm;
 import com.intellij.openapi.actionSystem.AnAction;
 import com.intellij.openapi.actionSystem.AnActionEvent;
-import com.intellij.openapi.actionSystem.PlatformDataKeys;
-import com.intellij.openapi.project.Project;
 
-public class AccountKitInstallerAction extends AnAction {
+public class OpenFacebookAssistantAction extends AnAction {
 
     @Override
     public void actionPerformed(final AnActionEvent event) {
-        Project project = event.getData(PlatformDataKeys.PROJECT);
-
-        AccountKitInstallerWizard dialog = new AccountKitInstallerWizard(project);
-        dialog.show();
+        FbToolWindowForm.showToolWindow();
     }
 }
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitActivityConfigurator.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitActivityConfigurator.java
similarity index 100%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitActivityConfigurator.java
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitActivityConfigurator.java
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitModuleConfigurator.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitModuleConfigurator.java
new file mode 100644
index 000000000..299ead09d
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitModuleConfigurator.java
@@ -0,0 +1,123 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.intellij.openapi.module.Module;
+
+public class AccountKitModuleConfigurator implements Configurator {
+    private final Configurable[] configurators;
+
+    public AccountKitModuleConfigurator() {
+        this.configurators = createConfigurables();
+    }
+
+    /**
+     * Updates the Configurator with the provided values
+     * @param appName the String {@link AndroidResourcesConfigurator#FB_APP_ID} to update
+     * @param appId the String {@link AndroidResourcesConfigurator#FB_APP_NAME} to update
+     * @param clientToken the String {@link AndroidResourcesConfigurator#AK_CLIENT_TOKEN} to update
+     */
+    public void set(final String appName,
+             final String appId,
+             final String clientToken) {
+        for (Configurable configurable : configurators) {
+            if (configurable instanceof AndroidResourcesConfigurator) {
+                ((AndroidResourcesConfigurator) configurable)
+                        .addResourceString(AndroidResourcesConfigurator.FB_APP_NAME, appName)
+                        .addResourceString(AndroidResourcesConfigurator.FB_APP_ID, appId)
+                        .addResourceString(
+                                AndroidResourcesConfigurator.AK_CLIENT_TOKEN,
+                                clientToken)
+                        .addResourceString(
+                                AndroidResourcesConfigurator.AK_LOGIN_PROTOCOL_SCHEME,
+                                "ak" + appId);
+            }
+        }
+    }
+
+    @Override
+    public boolean isConfigured(final Module module) {
+        for (Configurable configurable : configurators) {
+            if (!configurable.isConfigured(module)) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    @Override
+    public void doConfigure(final Module module) {
+        for (Configurable configurator : configurators) {
+            configurator.doConfigure(module);
+        }
+    }
+
+    @Override
+    public Configurable[] getConfigurables() {
+        return configurators;
+    }
+
+    private static Configurable[] createConfigurables() {
+        // TODO: (T22294124) Clean these up
+        return new Configurable[] {
+                new GradleBuildConfigurator(
+                        "mavenCentral",
+                        "com.facebook.android:account-kit-sdk",
+                        "4.+"),
+                new AndroidResourcesConfigurator(
+                        new String[] {
+                                AndroidResourcesConfigurator.FB_APP_ID,
+                                AndroidResourcesConfigurator.FB_APP_NAME,
+                                AndroidResourcesConfigurator.AK_CLIENT_TOKEN,
+                                AndroidResourcesConfigurator.AK_LOGIN_PROTOCOL_SCHEME }),
+                new AndroidManifestConfigurator()
+                        .addPermission("android.permission.INTERNET")
+                        .addPermission("android.permission.READ_PHONE_STATE")
+                        .addPermission("android.permission.RECEIVE_SMS")
+                        .addPermission("android.permission.GET_ACCOUNTS")
+                        .addMetadata(
+                                "com.facebook.accountkit.ApplicationName",
+                                "@string/fb_app_name")
+                        .addMetadata(
+                                "com.facebook.sdk.ApplicationId",
+                                "@string/fb_app_id")
+                        .addMetadata(
+                                "com.facebook.accountkit.ClientToken",
+                                "@string/ak_client_token")
+                        .addActivity(
+                                new AndroidActivity(
+                                        "com.facebook.accountkit.ui.AccountKitActivity",
+                                        false,
+                                        null,
+                                        null,
+                                        null,
+                                        false))
+                        .addActivity(
+                                new AndroidActivity(
+                                        "com.facebook.accountkit.ui.AccountKitEmailRedirectActivity",
+                                        false,
+                                        null,
+                                        null,
+                                        AndroidActivity.AK_SCHEME_VALUE,
+                                        false))
+        };
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidActivity.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidActivity.java
new file mode 100644
index 000000000..c1cd6c8f3
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidActivity.java
@@ -0,0 +1,123 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.intellij.psi.XmlElementFactory;
+import com.intellij.psi.xml.XmlTag;
+import org.jetbrains.android.dom.manifest.Activity;
+
+import javax.annotation.Nullable;
+
+public class AndroidActivity {
+
+    static final String METADATA_TAG = "<meta-data/>";
+    static final String PERMISSION_TAG = "<uses-permission/>";
+    private static final String INTENT_FILTER_TAG = "<intent-filter/>";
+    private static final String ACTION_TAG = "<action/>";
+    private static final String CATEGORY_TAG = "<category/>";
+    private static final String DATA_TAG = "<data/>";
+
+    static final String NAME_ATTR = "android:name";
+    static final String VALUE_ATTR = "android:value";
+    private static final String CONFIG_CHANGES_ATTR = "android:configChanges";
+    private static final String LABEL_ATTR = "android:label";
+    private static final String EXPORTED_ATTR = "android:exported";
+    private static final String SCHEME_ATTR = "android:scheme";
+    private static final String AUTHORITIES_ATTR = "android:authorities";
+
+    public static final String FB_SCHEME_VALUE = "@string/fb_login_protocol_scheme";
+    public static final String AK_SCHEME_VALUE = "@string/ak_login_protocol_scheme";
+    private static final String CONFIG_CHANGES_VALUE =
+            "keyboard|keyboardHidden|screenLayout|screenSize|orientation";
+    private static final String INTENT_ACTION_VIEW_VALUE = "android.intent.action.VIEW";
+    private static final String CATEGORY_DEFAULT_VALUE = "android.intent.category.DEFAULT";
+    private static final String CATEGORY_BROWSABLE_VALUE = "android.intent.category.BROWSABLE";
+    private static final String AUTHORITIES_VALUE = "com.facebook.app.FacebookContentProvider%1$s";
+
+    private final String name;
+    private final boolean configChanges;
+    private final @Nullable String label;
+    private final @Nullable Boolean exported;
+    private final @Nullable String intentFiltersScheme;
+    private final boolean authorities;
+
+    public AndroidActivity(
+            final String name,
+            final  boolean configChanges,
+            final @Nullable  String label,
+            final @Nullable Boolean exported,
+            final @Nullable String intentFiltersScheme,
+            final boolean authorities) {
+        this.name = name;
+        this.configChanges = configChanges;
+        this.label = label;
+        this.exported = exported;
+        this.intentFiltersScheme = intentFiltersScheme;
+        this.authorities = authorities;
+    }
+
+    void create(final XmlElementFactory elementFactory, final Activity activity, final String appId) {
+        activity.getActivityClass().setStringValue(this.name);
+        XmlTag newActivityTag = activity.getXmlTag();
+
+        if (this.configChanges) {
+            newActivityTag.setAttribute(CONFIG_CHANGES_ATTR, CONFIG_CHANGES_VALUE);
+        }
+
+        if (this.label != null) {
+            newActivityTag.setAttribute(LABEL_ATTR, this.label);
+        }
+
+        if (this.authorities && appId != null) {
+            newActivityTag.setAttribute(AUTHORITIES_ATTR, String.format(AUTHORITIES_VALUE, appId));
+        }
+
+        if (this.exported != null) {
+            newActivityTag.setAttribute(EXPORTED_ATTR, this.exported.toString());
+        }
+
+        if (this.intentFiltersScheme != null) {
+            XmlTag intentFilters = elementFactory.createTagFromText(INTENT_FILTER_TAG);
+
+            XmlTag childTag = elementFactory.createTagFromText(ACTION_TAG);
+            childTag.setAttribute(AndroidActivity.NAME_ATTR, INTENT_ACTION_VIEW_VALUE);
+            intentFilters.addSubTag(childTag, false);
+
+            childTag = elementFactory.createTagFromText(CATEGORY_TAG);
+            childTag.setAttribute(AndroidActivity.NAME_ATTR, CATEGORY_DEFAULT_VALUE);
+            intentFilters.addSubTag(childTag, false);
+
+            childTag = elementFactory.createTagFromText(CATEGORY_TAG);
+            childTag.setAttribute(AndroidActivity.NAME_ATTR, CATEGORY_BROWSABLE_VALUE);
+            intentFilters.addSubTag(childTag, false);
+
+            childTag = elementFactory.createTagFromText(DATA_TAG);
+            childTag.setAttribute(SCHEME_ATTR, this.intentFiltersScheme);
+            intentFilters.addSubTag(childTag, false);
+
+            newActivityTag.addSubTag(intentFilters, false);
+        }
+    }
+
+    String getName() {
+        return this.name;
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidManifestConfigurator.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidManifestConfigurator.java
similarity index 75%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidManifestConfigurator.java
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidManifestConfigurator.java
index 0d6eb9984..38fb1269b 100644
--- a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidManifestConfigurator.java
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidManifestConfigurator.java
@@ -37,26 +37,24 @@
 import org.jetbrains.android.facet.AndroidFacet;
 import org.jetbrains.annotations.NotNull;
 
+import javax.annotation.Nullable;
 import java.util.ArrayList;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 
-public class AndroidManifestConfigurator implements Configurator {
+public class AndroidManifestConfigurator implements Configurable {
 
-    private static final String METADATA_TAG = "<meta-data/>";
-    private static final String PERMISSION_TAG = "<uses-permission/>";
-    private static final String NAME_ATTR = "android:name";
-    private static final String VALUE_ATTR = "android:value";
 
     private final Map<String, String> metadata;
     private final List<String> permissions;
-    private final String activityName;
+    private final List<AndroidActivity> activities;
+    private @Nullable String appId;
 
-    AndroidManifestConfigurator(final String activityName) {
-        this.activityName = activityName;
+    AndroidManifestConfigurator() {
         this.metadata = new LinkedHashMap<>();
         this.permissions = new ArrayList<>();
+        this.activities = new ArrayList<>();
     }
 
     AndroidManifestConfigurator addMetadata(final String name, final String value) {
@@ -69,6 +67,21 @@ AndroidManifestConfigurator addPermission(final String permission) {
         return this;
     }
 
+    AndroidManifestConfigurator addActivity(final AndroidActivity activity) {
+        activities.add(activity);
+        return this;
+    }
+
+    AndroidManifestConfigurator addActivities(final List<AndroidActivity> activities) {
+        this.activities.addAll(activities);
+        return this;
+    }
+
+    AndroidManifestConfigurator addAppId(final String appId) {
+        this.appId = appId;
+        return this;
+    }
+
     @Override
     public boolean isConfigured(final Module module) {
         final Manifest androidManifest = getAndroidManifest(module);
@@ -76,8 +89,10 @@ public boolean isConfigured(final Module module) {
             return false;
         }
 
-        if (!androidManifest.getXmlElement().getText().contains(activityName)) {
-            return false;
+        for (String permission : permissions) {
+            if (!androidManifest.getXmlElement().getText().contains(permission)) {
+                return false;
+            }
         }
 
         for (String metadataName : metadata.keySet()) {
@@ -86,8 +101,8 @@ public boolean isConfigured(final Module module) {
             }
         }
 
-        for (String permission : permissions) {
-            if (!androidManifest.getXmlElement().getText().contains(permission)) {
+        for (AndroidActivity activity : activities) {
+            if (!androidManifest.getApplication().getXmlElement().getText().contains(activity.getName())) {
                 return false;
             }
         }
@@ -121,24 +136,28 @@ protected void run(@NotNull Result result) {
 
                 for (String permission : permissions) {
                     if (!androidManifest.getXmlElement().getText().contains(permission)) {
-                        XmlTag permTag = elementFactory.createTagFromText(PERMISSION_TAG);
-                        permTag.setAttribute(NAME_ATTR, permission);
+                        XmlTag permTag = elementFactory
+                                .createTagFromText(AndroidActivity.PERMISSION_TAG);
+                        permTag.setAttribute(AndroidActivity.NAME_ATTR, permission);
                         androidManifest.getXmlElement().addBefore(permTag, applicationTag);
                     }
                 }
 
                 for (Map.Entry<String, String> metadata : metadata.entrySet()) {
                     if (!applicationTag.getText().contains(metadata.getKey())) {
-                        XmlTag mdTag = elementFactory.createTagFromText(METADATA_TAG);
-                        mdTag.setAttribute(NAME_ATTR, metadata.getKey());
-                        mdTag.setAttribute(VALUE_ATTR, metadata.getValue());
+                        XmlTag mdTag = elementFactory
+                                .createTagFromText(AndroidActivity.METADATA_TAG);
+                        mdTag.setAttribute(AndroidActivity.NAME_ATTR, metadata.getKey());
+                        mdTag.setAttribute(AndroidActivity.VALUE_ATTR, metadata.getValue());
                         application.getXmlElement().add(mdTag);
                     }
                 }
 
-                if (!applicationTag.getText().contains(activityName)) {
-                    final Activity newActivity = application.addActivity();
-                    newActivity.getActivityClass().setStringValue(activityName);
+                for (AndroidActivity activity : activities) {
+                    if (!applicationTag.getText().contains(activity.getName())) {
+                        final Activity newActivity = application.addActivity();
+                        activity.create(elementFactory, newActivity, appId);
+                    }
                 }
 
                 CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(manifestFile);
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidResourcesConfigurator.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidResourcesConfigurator.java
similarity index 54%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidResourcesConfigurator.java
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidResourcesConfigurator.java
index 4fd8efd6d..87961f2a7 100644
--- a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidResourcesConfigurator.java
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidResourcesConfigurator.java
@@ -30,23 +30,42 @@
 import com.intellij.openapi.application.Result;
 import com.intellij.openapi.command.WriteCommandAction;
 import com.intellij.openapi.module.Module;
-import com.intellij.psi.PsiFile;
 import com.intellij.psi.XmlElementFactory;
+import com.intellij.psi.xml.XmlFile;
 import com.intellij.psi.xml.XmlTag;
 import org.apache.commons.lang.StringUtils;
 import org.jetbrains.annotations.NotNull;
 
+import java.util.HashMap;
 import java.util.LinkedHashMap;
 import java.util.List;
 import java.util.Map;
 
-public class AndroidResourcesConfigurator implements Configurator {
+public class AndroidResourcesConfigurator implements Configurable {
 
     private static final String STRING_TAG = "<string/>";
     private static final String NAME_ATTR = "name";
 
+    private static final String EMPTY_VALUE = "EMPTY";
+
+    public static final String FB_APP_ID = "fb_app_id";
+    public static final String FB_APP_NAME = "fb_app_name";
+    public static final String FB_LOGIN_PROTOCOL_SCHEME = "fb_login_protocol_scheme";
+    public static final String AK_CLIENT_TOKEN = "ak_client_token";
+    public static final String AK_LOGIN_PROTOCOL_SCHEME = "ak_login_protocol_scheme";
+
     private final Map<String, String> resourceStrings = new LinkedHashMap<>();
 
+    /**
+     * @param stringResources an array of String resource IDs that you plan on configuring.
+     *        I.E. {@link #FB_APP_ID}, {@link #FB_APP_NAME}, or {@link #AK_CLIENT_TOKEN}
+     */
+    AndroidResourcesConfigurator(String[] stringResources) {
+        for (String resource: stringResources) {
+            addResourceString(resource, EMPTY_VALUE);
+        }
+    }
+
     AndroidResourcesConfigurator addResourceString(final String name, final String value) {
         if (!StringUtils.isBlank(name) && !StringUtils.isBlank(value)) {
             resourceStrings.put(name, value);
@@ -54,6 +73,11 @@ AndroidResourcesConfigurator addResourceString(final String name, final String v
         return this;
     }
 
+    String getResourceString(final Module module, final String name) {
+        ResourceItem item = getResourceItem(module, name);
+        return item == null ? "" : item.getResourceValue(false).getValue();
+    }
+
     @Override
     public boolean isConfigured(final Module module) {
         LocalResourceRepository resourceRepository =
@@ -73,6 +97,18 @@ public boolean isConfigured(final Module module) {
         return true;
     }
 
+    private ResourceItem getResourceItem(final Module module, final String resourceName) {
+        LocalResourceRepository resourceRepository =
+                ModuleResourceRepository.getModuleResources(module, false);
+        if (resourceRepository == null) {
+            return null;
+        }
+
+        List<ResourceItem> resourceItems =
+                resourceRepository.getResourceItem(ResourceType.STRING, resourceName);
+        return resourceItems.size() != 1 ? null : resourceItems.get(0);
+    }
+
     @Override
     public void doConfigure(final Module module) {
         LocalResourceRepository resourceRepository =
@@ -88,10 +124,7 @@ public void doConfigure(final Module module) {
         }
 
         ResourceItem firstStringResource = stringResources.values().iterator().next();
-        XmlTag resourceTag = ModuleResourceRepository.getItemTag(
-                module.getProject(),
-                firstStringResource);
-        PsiFile resourceFile = ModuleResourceRepository.getItemPsiFile(
+        XmlFile resourceFile = (XmlFile) ModuleResourceRepository.getItemPsiFile(
                 module.getProject(),
                 firstStringResource);
         final XmlElementFactory elementFactory =
@@ -101,16 +134,26 @@ public void doConfigure(final Module module) {
             @Override
             protected void run(@NotNull Result result) {
 
-                for (String resourceName : resourceStrings.keySet()) {
-                    List<ResourceItem> resourceItems =
-                            resourceRepository.getResourceItem(ResourceType.STRING, resourceName);
-                    if (resourceItems.size() == 0) {
-                        XmlTag newResourceTag = elementFactory.createTagFromText(STRING_TAG);
-                        newResourceTag.setAttribute(NAME_ATTR, resourceName);
-                        newResourceTag.add(elementFactory.createDisplayText(
-                                resourceStrings.get(resourceName)));
+                Map<String, String> workingStringResources =
+                    getValidStringResources(resourceStrings);
+                if (workingStringResources.isEmpty()) {
+                    return;
+                }
+
+                for (String resourceName : workingStringResources.keySet()) {
+                    ResourceItem resourceItem = getResourceItem(module, resourceName);
 
-                        resourceFile.addAfter(newResourceTag, resourceTag);
+                    XmlTag newResourceTag = elementFactory.createTagFromText(STRING_TAG);
+                    newResourceTag.setAttribute(NAME_ATTR, resourceName);
+                    newResourceTag.add(elementFactory.createDisplayText(
+                            workingStringResources.get(resourceName)));
+
+                    if (resourceItem == null) {
+                        resourceFile.getRootTag().addSubTag(newResourceTag, true);
+                    } else {
+                        ModuleResourceRepository
+                                .getItemTag(module.getProject(), resourceItem)
+                                .replace(newResourceTag);
                     }
                 }
 
@@ -122,4 +165,22 @@ protected void run(@NotNull Result result) {
 
         OpenFileAction.openFile(resourceFile.getVirtualFile().getPath(), module.getProject());
     }
+
+    /**
+     * Because we use {@link #EMPTY_VALUE} as a placeholder to enable
+     * checking if this is initially in a configured state this is used
+     * to sanatize the working Map
+     * @param stringResources the {@link Map<String, String>} to sanitize
+     * @return a copy of the provided Map with any EMPTY_VALUEs removed.
+     */
+    private static Map<String, String> getValidStringResources(
+        Map<String, String> stringResources) {
+        Map<String, String> workingStrings = new HashMap<>(stringResources);
+        for (String key : workingStrings.keySet()) {
+            if (workingStrings.get(key).contentEquals(EMPTY_VALUE)) {
+                workingStrings.remove(key);
+            }
+        }
+        return workingStrings;
+    }
 }
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AvailableModule.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AvailableModule.java
new file mode 100644
index 000000000..4572069fd
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/AvailableModule.java
@@ -0,0 +1,79 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.facebook.plugin.utils.PsiHelper;
+import com.intellij.openapi.module.Module;
+import org.jetbrains.plugins.gradle.util.GradleConstants;
+
+public final class AvailableModule {
+
+    private enum InstallationStatus {
+        UNAVAILABLE,
+        INSTALLED,
+        AVAILABLE
+    }
+
+    private final Module module;
+    private final InstallationStatus installationStatus;
+
+    AvailableModule(final Module module, final Configurable[] configurables) {
+        AvailableModule.InstallationStatus moduleType =
+                AvailableModule.InstallationStatus.UNAVAILABLE;
+
+        if (PsiHelper.findAllFiles(module, GradleConstants.DEFAULT_SCRIPT_NAME).size() > 0) {
+            moduleType = AvailableModule.InstallationStatus.INSTALLED;
+
+            for (Configurable configurable : configurables) {
+                if (!configurable.isConfigured(module)) {
+                    moduleType = AvailableModule.InstallationStatus.AVAILABLE;
+                    break;
+                }
+            }
+        }
+
+        this.module = module;
+        this.installationStatus = moduleType;
+    }
+
+    public Module getModule() {
+        return module;
+    }
+
+    public boolean isInstalled() {
+        return installationStatus == InstallationStatus.INSTALLED;
+    }
+
+    public boolean isUnavailable() {
+        return installationStatus == InstallationStatus.UNAVAILABLE;
+    }
+
+    @Override
+    public String toString() {
+        StringBuilder builder = new StringBuilder(module.getName());
+        if (installationStatus == InstallationStatus.UNAVAILABLE) {
+            builder.append(" (unavailable)");
+        } else if (installationStatus == InstallationStatus.INSTALLED) {
+            builder.append(" (installed)");
+        }
+        return builder.toString();
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/Configurable.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/Configurable.java
new file mode 100644
index 000000000..a6c32a331
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/Configurable.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.intellij.openapi.module.Module;
+
+/**
+ * Something that may, or may not be, configured.
+ */
+public interface Configurable {
+
+    /**
+     * @param module the module to check configuration with
+     * @return true if the {@link Configurable} has configured the {@link Module};
+     * false otherwise
+     */
+    boolean isConfigured(final Module module);
+
+    /**
+     * Perform configuration for the provided module
+     * @param module the {@link Module} to configure.
+     */
+    void doConfigure(final Module module);
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/Configurator.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/Configurator.java
new file mode 100644
index 000000000..efddfa4f3
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/Configurator.java
@@ -0,0 +1,65 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.intellij.openapi.module.Module;
+import com.intellij.openapi.module.ModuleManager;
+import com.intellij.openapi.project.Project;
+import org.jetbrains.android.facet.AndroidFacet;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public interface Configurator extends Configurable {
+
+    /**
+     * @return the {@link Configurable}s that comprise this Configurator
+     */
+    Configurable[] getConfigurables();
+
+    /**
+     * @param project the {@link Project} to query Modules from.
+     * @return the {@link AvailableModule.InstallationStatus} for each {@link AvailableModule}
+     */
+    default AvailableModule[] getAvailableModules(final Project project) {
+        Configurable[] configurables = getConfigurables();
+        Module[] allModules = ModuleManager.getInstance(project).getModules();
+
+        List<AvailableModule> res = new ArrayList<>();
+        for (Module module : allModules) {
+            if (AndroidFacet.getInstance(module) != null) {
+                res.add(new AvailableModule(module, configurables));
+            }
+        }
+        return res.toArray(new AvailableModule[res.size()]);
+    }
+
+    default String getConfiguredValue(final Module module, final String resourceKey) {
+        String val = "";
+        for (Configurable configurable : getConfigurables()) {
+            if (configurable instanceof AndroidResourcesConfigurator) {
+                val = ((AndroidResourcesConfigurator) configurable)
+                        .getResourceString(module, resourceKey);
+            }
+        }
+        return val;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/FacebookModuleConfigurator.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/FacebookModuleConfigurator.java
new file mode 100644
index 000000000..f42066389
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/FacebookModuleConfigurator.java
@@ -0,0 +1,106 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.intellij.openapi.module.Module;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class FacebookModuleConfigurator implements Configurator {
+    private final Configurable[] configurators;
+    private final List<String> stringResources;
+
+    public FacebookModuleConfigurator(
+            final String library,
+            final List<String> stringResources,
+            final List<AndroidActivity> activities) {
+        this.stringResources = new ArrayList<>(stringResources);
+        this.configurators = createConfigurables(library, stringResources, activities);
+    }
+
+    /**
+     * Updates the Configurator with the provided values
+     * @param appId the String {@link AndroidResourcesConfigurator#FB_APP_NAME} to update
+     */
+    public void setAppId(final String appId) {
+        for (Configurable configurable : configurators) {
+            if (configurable instanceof AndroidResourcesConfigurator) {
+                AndroidResourcesConfigurator androidResourcesConfigurator =
+                        (AndroidResourcesConfigurator) configurable;
+                if (this.stringResources.contains(AndroidResourcesConfigurator.FB_APP_ID)) {
+                    androidResourcesConfigurator.addResourceString(
+                            AndroidResourcesConfigurator.FB_APP_ID, appId);
+                }
+                if (this.stringResources.contains(AndroidResourcesConfigurator.FB_LOGIN_PROTOCOL_SCHEME)) {
+                    androidResourcesConfigurator.addResourceString(
+                            AndroidResourcesConfigurator.FB_LOGIN_PROTOCOL_SCHEME, "fb" + appId);
+                }
+
+            } else if (configurable instanceof AndroidManifestConfigurator) {
+                ((AndroidManifestConfigurator) configurable).addAppId(appId);
+            }
+        }
+    }
+
+    @Override
+    public boolean isConfigured(final Module module) {
+        for (Configurable configurable : configurators) {
+            if (!configurable.isConfigured(module)) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    @Override
+    public void doConfigure(final Module module) {
+        for (Configurable configurator : configurators) {
+            configurator.doConfigure(module);
+        }
+    }
+
+    @Override
+    public Configurable[] getConfigurables() {
+        return configurators;
+    }
+
+    private static Configurable[] createConfigurables(
+            final String library,
+            final List<String> stringResources,
+            final List<AndroidActivity> activities) {
+        return new Configurable[]{
+                new GradleBuildConfigurator(
+                        "mavenCentral",
+                        library,
+                        "4.+"),
+                new AndroidResourcesConfigurator(
+                        stringResources.toArray(
+                                new String[stringResources.size()])),
+                new AndroidManifestConfigurator()
+                        .addMetadata(
+                                "com.facebook.sdk.ApplicationId",
+                                "@string/fb_app_id")
+                        .addPermission("android.permission.INTERNET")
+                        .addActivities(activities),
+        };
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/GradleBuildConfigurator.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/GradleBuildConfigurator.java
similarity index 98%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/GradleBuildConfigurator.java
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/GradleBuildConfigurator.java
index 2b84fa332..cab61a689 100644
--- a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/GradleBuildConfigurator.java
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/config/GradleBuildConfigurator.java
@@ -47,7 +47,7 @@
 
 import java.io.File;
 
-public class GradleBuildConfigurator implements Configurator {
+public class GradleBuildConfigurator implements Configurable {
 
     private static final String BLOCK_REPOSITORIES = "repositories";
     private static final String BLOCK_DEPENDENCIES = "dependencies";
@@ -118,7 +118,7 @@ protected void run(@NotNull Result result) {
             Messages.showErrorDialog(
                 module.getProject(),
                 "Cannot find or modify build.gradle file for module " + module.getName(),
-                "Facebook SDK Plugin");
+                "Facebook Assistant");
         }
     }
 
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookAssistantConstants.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookAssistantConstants.java
new file mode 100644
index 000000000..a0bdac655
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookAssistantConstants.java
@@ -0,0 +1,82 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.login;
+
+/**
+ * Constants needed for IDE-wide FBLogin to Facebook Assistant app
+ */
+public final class FacebookAssistantConstants {
+
+    public static final String PREFERENCES_PATH = "/com/facebook/login";
+
+    public static final String LOG_IN_TEXT = "Log in to Facebook";
+    public static final String LOGGED_IN_TEXT = "Logged in as %s";
+    public static final String LOGGED_IN_DESCRIPTION = "<html><h2>%s</h2><span>%s</span></html>";
+
+    public static final String BUTTON_LOGIN = "Log In";
+    public static final String BUTTON_LOGOUT = "Log Out";
+
+    public static final String GRAPH_API_URL = "https://graph.facebook.com/v2.10";
+    public static final String LOGIN_REQUEST_PATH = "/device/login";
+    public static final String LOGIN_STATUS_PATH = "/device/login_status";
+    public static final String PROFILE_PATH = "/me";
+
+    public static final String HEADER_NAME = "Accept";
+    public static final String HEADER_VALUE = "application/json";
+
+    public static final String PARAM_ACCESS_TOKEN = "access_token";
+    public static final String PARAM_CODE = "code";
+    public static final String PARAM_SCOPE = "scope";
+    public static final String PARAM_REDIRECT_URI = "redirect_uri";
+    public static final String PARAM_FIELDS = "fields";
+
+    public static final String RESPONSE_CODE = "code";
+    public static final String RESPONSE_USER_CODE = "user_code";
+    public static final String RESPONSE_VERIFICATION_URL = "verification_uri";
+    public static final String RESPONSE_EXPIRES_IN = "expires_in";
+    public static final String RESPONSE_INTERVAL = "interval";
+    public static final String RESPONSE_ACCESS_TOKEN = "access_token";
+    public static final String RESPONSE_ERROR = "error";
+    public static final String RESPONSE_ERROR_SUBCODE = "error_subcode";
+
+    public static final int ERROR_SUBCODE_NOT_AUTHORIZED = 1349174;
+    public static final int ERROR_SUBCODE_TOO_FREQUENT = 1349172;
+    public static final int ERROR_SUBCODE_LOGIN_EXPIRED = 1349152;
+
+    public static final String DEFAULT_VERIFICATION_URL = "https://www.facebook.com/device";
+
+    public static final String DEVICE_CODE_QUERY = "?user_code=%s";
+
+    public static final String APP_ID = "266842207168836";
+    public static final String CLIENT_TOKEN = "370ca2dca3dd544117f1b0b8792fab6f";
+    public static final String ACCESS_TOKEN_FORMAT = "%s|%s";
+
+    public static final String LOGIN_SCOPES = "public_profile,email";
+    public static final String PROFILE_FIELDS = "name,email,picture";
+
+    public static final String REDIRECT_URL = "https://developers.facebook.com/apps/";
+
+    public static final String FIELD_NAME = "name";
+    public static final String FIELD_EMAIL = "email";
+    public static final String FIELD_PICTURE = "picture";
+    public static final String FIELD_DATA = "data";
+    public static final String FIELD_URL = "url";
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookAuthSpinner.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookAuthSpinner.form
new file mode 100644
index 000000000..984979c1c
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookAuthSpinner.form
@@ -0,0 +1,109 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.login.FacebookAuthSpinner">
+  <grid id="cbd77" binding="contentPane" layout-manager="GridLayoutManager" row-count="2" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="10" left="10" bottom="10" right="10"/>
+    <constraints>
+      <xy x="48" y="54" width="732" height="333"/>
+    </constraints>
+    <properties>
+      <maximumSize width="600" height="2147483647"/>
+      <minimumSize width="400" height="200"/>
+      <preferredSize width="600" height="250"/>
+    </properties>
+    <border type="none"/>
+    <children>
+      <grid id="94766" layout-manager="GridLayoutManager" row-count="1" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+        <margin top="0" left="0" bottom="0" right="0"/>
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children>
+          <hspacer id="98af6">
+            <constraints>
+              <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="6" anchor="0" fill="1" indent="0" use-parent-layout="false"/>
+            </constraints>
+          </hspacer>
+          <grid id="9538f" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+            <margin top="0" left="0" bottom="0" right="0"/>
+            <constraints>
+              <grid row="0" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+            </constraints>
+            <properties/>
+            <border type="none"/>
+            <children>
+              <component id="5723f" class="javax.swing.JButton" binding="buttonCancel">
+                <constraints>
+                  <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="3" anchor="0" fill="1" indent="0" use-parent-layout="false"/>
+                </constraints>
+                <properties>
+                  <text value="Cancel Login"/>
+                </properties>
+              </component>
+            </children>
+          </grid>
+        </children>
+      </grid>
+      <grid id="e3588" layout-manager="GridLayoutManager" row-count="7" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+        <margin top="0" left="0" bottom="0" right="0"/>
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children>
+          <vspacer id="ab95e">
+            <constraints>
+              <grid row="6" column="0" row-span="1" col-span="1" vsize-policy="2" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
+            </constraints>
+          </vspacer>
+          <component id="f10ce" class="javax.swing.JLabel" binding="codeLabel">
+            <constraints>
+              <grid row="2" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+            </constraints>
+            <properties>
+              <horizontalAlignment value="0"/>
+              <horizontalTextPosition value="0"/>
+              <text value=""/>
+            </properties>
+          </component>
+          <component id="dec22" class="javax.swing.JLabel" binding="fallbackLabel">
+            <constraints>
+              <grid row="3" column="0" row-span="1" col-span="1" vsize-policy="2" hsize-policy="1" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+            </constraints>
+            <properties>
+              <text resource-bundle="values/strings" key="loginAlternatives"/>
+            </properties>
+          </component>
+          <vspacer id="76c0b">
+            <constraints>
+              <grid row="4" column="0" row-span="1" col-span="1" vsize-policy="2" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
+            </constraints>
+          </vspacer>
+          <component id="7429e" class="javax.swing.JProgressBar" default-binding="true">
+            <constraints>
+              <grid row="5" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="6" anchor="0" fill="1" indent="0" use-parent-layout="false"/>
+            </constraints>
+            <properties>
+              <indeterminate value="true"/>
+            </properties>
+          </component>
+          <component id="dd07a" class="javax.swing.JLabel">
+            <constraints>
+              <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+            </constraints>
+            <properties>
+              <text resource-bundle="values/strings" key="loginUseThisCode"/>
+            </properties>
+          </component>
+          <vspacer id="f2731">
+            <constraints>
+              <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="2" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
+            </constraints>
+          </vspacer>
+        </children>
+      </grid>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookAuthSpinner.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookAuthSpinner.java
new file mode 100644
index 000000000..52d343902
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookAuthSpinner.java
@@ -0,0 +1,160 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.login;
+
+import com.facebook.plugin.ui.LinkClickable;
+import com.google.common.base.Strings;
+import com.intellij.openapi.wm.WindowManager;
+
+import javax.swing.*;
+import java.awt.*;
+import java.awt.event.*;
+import java.net.URI;
+import java.time.LocalDateTime;
+import java.util.concurrent.Executors;
+import java.util.concurrent.TimeUnit;
+
+public class FacebookAuthSpinner
+        extends JDialog
+        implements FacebookLoginEventListener, LinkClickable {
+    private JPanel contentPane;
+    private JButton buttonCancel;
+    private JLabel codeLabel;
+    private JLabel fallbackLabel;
+
+    private final FacebookLogin fbLogin = FacebookLogin.getInstance();
+
+    public FacebookAuthSpinner() {
+        setContentPane(contentPane);
+        setModal(true);
+
+        buttonCancel.addActionListener(e -> cancel());
+
+        // call cancel() when cross is clicked
+        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
+        addWindowListener(new WindowAdapter() {
+            public void windowClosing(WindowEvent e) {
+                cancel();
+            }
+        });
+
+        // call cancel() on ESCAPE
+        contentPane.registerKeyboardAction(
+                e -> cancel(),
+                KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
+                JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
+    }
+
+    public void popup() {
+        if (fbLogin.getAccessToken() != null) {
+            // Already logged in, no need to show spinner
+            setVisible(false);
+            return;
+        }
+
+        fbLogin.addEventListener(this);
+
+        if (Strings.isNullOrEmpty(fbLogin.getUserCode()) ||
+                LocalDateTime.now().isAfter(fbLogin.getExpiryTime())) {
+            // No code was requested, or code is invalid, or expired
+            fbLogin.startLoginAsync();
+        }
+
+        if (Strings.isNullOrEmpty(fbLogin.getUserCode())) {
+            // Request failed
+            cancel();
+            return;
+        }
+
+        // Set the code's font size to be 10 points larger than the default font size in the IDE
+        final Font labelFont = codeLabel.getFont();
+        codeLabel.setFont(new Font(labelFont.getName(), Font.BOLD, labelFont.getSize() + 10));
+        codeLabel.setText(fbLogin.getUserCode());
+
+        fbLogin.waitForLoginAsync();
+
+        // Wait a couple of seconds before trying to open the browser with the login URL
+        Executors.newSingleThreadScheduledExecutor().schedule(() -> {
+                    if (isVisible()) {
+                        URI verificationUrl = FacebookLogin.getInstance().getVerificationUrl();
+                        clickLink(verificationUrl);
+
+                        MouseAdapter mouseAdapter = new MouseAdapter() {
+                            @Override
+                            public void mouseEntered(MouseEvent e) {
+                                e.getComponent().setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
+                            }
+
+                            @Override
+                            public void mouseExited(MouseEvent e) {
+                                e.getComponent().setCursor(Cursor.getDefaultCursor());
+                            }
+
+                            @Override
+                            public void mouseClicked(MouseEvent e) {
+                                clickLink(verificationUrl);
+                            }
+                        };
+
+                        codeLabel.addMouseListener(mouseAdapter);
+                        fallbackLabel.addMouseListener(mouseAdapter);
+                    }
+                },
+                2,
+                TimeUnit.SECONDS);
+
+        pack();
+        setLocationRelativeTo(WindowManager.getInstance().findVisibleFrame());
+        setVisible(true);
+
+        fbLogin.removeEventListener(this);
+    }
+
+    public void cancel() {
+        fbLogin.removeEventListener(this);
+        fbLogin.logOut();
+
+        setVisible(false);
+        dispose();
+    }
+
+    public void handleEvent(final FacebookLoginEventType eventType) {
+        switch (eventType) {
+            case LoginInitiated:
+                popup();
+                break;
+
+            case LoginFailed:
+            case LoginExpired:
+                // TODO(T22379300): Show something about login failed on the dialog instead
+                cancel();
+                break;
+
+            case LoggedOut:
+                cancel();
+                break;
+
+            case LoggedIn:
+                setVisible(false);
+                break;
+        }
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookLogin.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookLogin.java
new file mode 100644
index 000000000..289e7ec54
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookLogin.java
@@ -0,0 +1,445 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.login;
+
+import com.google.gson.JsonObject;
+import com.google.gson.JsonParser;
+import com.google.gson.JsonSyntaxException;
+import com.google.gson.stream.JsonReader;
+import org.apache.http.client.fluent.Request;
+import org.apache.http.client.utils.URIBuilder;
+import org.apache.http.message.BasicNameValuePair;
+import org.jetbrains.annotations.Contract;
+import org.jetbrains.annotations.Nullable;
+
+import javax.swing.*;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.net.URI;
+import java.net.URISyntaxException;
+import java.time.LocalDateTime;
+import java.util.Formatter;
+import java.util.List;
+import java.util.concurrent.CopyOnWriteArrayList;
+import java.util.concurrent.Executors;
+import java.util.concurrent.ScheduledExecutorService;
+import java.util.concurrent.ScheduledFuture;
+import java.util.concurrent.TimeUnit;
+import java.util.prefs.BackingStoreException;
+import java.util.prefs.Preferences;
+
+public final class FacebookLogin {
+
+    private String code = null;
+    private String userCode = null;
+    private String verificationUrl = FacebookAssistantConstants.DEFAULT_VERIFICATION_URL;
+    private int expiresIn = 0;
+    private int refreshInterval = 0;
+
+    private LocalDateTime requestTime = LocalDateTime.MIN;
+    private long lastRefreshTime = 0;
+
+    private String accessToken = null;
+
+    private ScheduledExecutorService executor;
+    private ScheduledFuture<?> loginChecker = null;
+
+    private final List<FacebookLoginEventListener> eventListeners;
+
+    private final Preferences preferences;
+
+    private static class LazyHolder {
+        static final FacebookLogin INSTANCE = new FacebookLogin();
+    }
+
+    @Contract(pure = true)
+    public static FacebookLogin getInstance() {
+        return LazyHolder.INSTANCE;
+    }
+
+    private FacebookLogin() {
+        executor = Executors.newSingleThreadScheduledExecutor();
+        eventListeners = new CopyOnWriteArrayList<>();
+        preferences = loadPreferences();
+
+        if (accessToken != null) {
+            fireEvent(FacebookLoginEventType.LoggedIn);
+        }
+    }
+
+    public void addEventListener(final FacebookLoginEventListener eventListener) {
+        if ((eventListener != null) && !eventListeners.contains(eventListener)) {
+            eventListeners.add(eventListener);
+        }
+    }
+
+    public void removeEventListener(final FacebookLoginEventListener eventListener) {
+        if ((eventListener != null) && eventListeners.contains(eventListener)) {
+            eventListeners.remove(eventListener);
+        }
+    }
+
+    private Preferences loadPreferences() {
+        final Preferences preferences = Preferences.userRoot()
+                .node(FacebookAssistantConstants.PREFERENCES_PATH);
+
+        code = preferences.get(FacebookAssistantConstants.PARAM_CODE, null);
+        accessToken = preferences.get(FacebookAssistantConstants.PARAM_ACCESS_TOKEN, null);
+
+        return preferences;
+    }
+
+    private void savePreferences() {
+        if (code == null) {
+            preferences.remove(FacebookAssistantConstants.PARAM_CODE);
+        } else {
+            preferences.put(FacebookAssistantConstants.PARAM_CODE, code);
+        }
+
+        if (accessToken == null) {
+            preferences.remove(FacebookAssistantConstants.PARAM_ACCESS_TOKEN);
+        } else {
+            preferences.put(FacebookAssistantConstants.PARAM_ACCESS_TOKEN, accessToken);
+        }
+
+        try {
+            preferences.flush();
+        } catch (BackingStoreException e) {
+            // Do not save anything
+        }
+    }
+
+    private void clearPreferences() {
+        code = null;
+        accessToken = null;
+        savePreferences();
+    }
+
+    @Nullable
+    public String getUserCode() {
+        return userCode;
+    }
+
+    public URI getVerificationUrl() {
+        String uri = verificationUrl;
+        if (userCode != null) {
+            uri += new Formatter()
+                    .format(FacebookAssistantConstants.DEVICE_CODE_QUERY, userCode)
+                    .toString();
+        }
+
+        return URI.create(uri);
+    }
+
+    public LocalDateTime getExpiryTime() {
+        return requestTime.plusMinutes(expiresIn);
+    }
+
+    @Nullable
+    public String getAccessToken() {
+        return accessToken;
+    }
+
+    @Nullable
+    public JsonObject getProfile() {
+        if (getAccessToken() == null) {
+            return null;
+        }
+
+        try {
+            final URI requestPath = new URIBuilder(
+                    FacebookAssistantConstants.GRAPH_API_URL +
+                            FacebookAssistantConstants.PROFILE_PATH)
+                    .addParameter(
+                            FacebookAssistantConstants.PARAM_FIELDS,
+                            FacebookAssistantConstants.PROFILE_FIELDS)
+                    .addParameter(
+                            FacebookAssistantConstants.PARAM_ACCESS_TOKEN,
+                            accessToken)
+                    .build();
+
+            final String response = Request
+                    .Get(requestPath)
+                    .execute()
+                    .returnContent()
+                    .asString();
+
+            return new JsonParser()
+                    .parse(response)
+                    .getAsJsonObject();
+
+        } catch (IOException e) {
+            // Error contacting /me endpoint. Probably a bad access token
+            accessToken = null;
+            clearPreferences();
+            fireEvent(FacebookLoginEventType.LoginExpired);
+
+        } catch (URISyntaxException | JsonSyntaxException e) {
+            // URI or JSON errors. Pretend like we're not logged in
+        }
+
+        return null;
+    }
+
+    /**
+     * Starts a login attempt and returns immediately. The event listener is invoked when
+     * login process finishes.
+     *
+     * @param eventListener Optional event listener to receive callbacks on login events
+     */
+    public synchronized void logIn(@Nullable final FacebookLoginEventListener eventListener) {
+
+        addEventListener(eventListener);
+
+        if (getAccessToken() != null) {
+            // Already logged in
+            if (eventListener != null) {
+                eventListener.handleEvent(FacebookLoginEventType.LoggedIn);
+            }
+
+            return;
+        }
+
+        addEventListener(new FacebookAuthSpinner());
+        startLoginAsync();
+    }
+
+    /**
+     * Logs out the current user (if present) and clears all the access tokens and background data
+     */
+    public synchronized void logOut() {
+        cancelLoginChecker();
+
+        code = null;
+        userCode = null;
+
+        if (getAccessToken() != null) {
+            accessToken = null;
+            fireEvent(FacebookLoginEventType.LoggedOut);
+        }
+
+        clearPreferences();
+    }
+
+    private void fireEvent(final FacebookLoginEventType eventType) {
+        for (FacebookLoginEventListener listener : eventListeners) {
+            SwingUtilities.invokeLater(() -> listener.handleEvent(eventType));
+        }
+    }
+
+    void startLoginAsync() {
+
+        try {
+            // Request a login
+            final String response = Request
+                    .Post(
+                            FacebookAssistantConstants.GRAPH_API_URL +
+                                    FacebookAssistantConstants.LOGIN_REQUEST_PATH)
+                    .setHeader(
+                            FacebookAssistantConstants.HEADER_NAME,
+                            FacebookAssistantConstants.HEADER_VALUE)
+                    .bodyForm(
+                            new BasicNameValuePair(
+                                    FacebookAssistantConstants.PARAM_ACCESS_TOKEN,
+                                    new Formatter()
+                                            .format(
+                                                    FacebookAssistantConstants.ACCESS_TOKEN_FORMAT,
+                                                    FacebookAssistantConstants.APP_ID,
+                                                    FacebookAssistantConstants.CLIENT_TOKEN)
+                                            .toString()),
+                            /*
+                            new BasicNameValuePair(
+                                    FacebookAssistantConstants.PARAM_REDIRECT_URI,
+                                    FacebookAssistantConstants.REDIRECT_URL),
+                            */
+                            new BasicNameValuePair(
+                                    FacebookAssistantConstants.PARAM_SCOPE,
+                                    FacebookAssistantConstants.LOGIN_SCOPES))
+                    .execute()
+                    .returnContent()
+                    .asString();
+
+            final JsonObject json = new JsonParser()
+                    .parse(response)
+                    .getAsJsonObject();
+
+            code =
+                    json.get(FacebookAssistantConstants.RESPONSE_CODE).getAsString();
+            userCode =
+                    json.get(FacebookAssistantConstants.RESPONSE_USER_CODE).getAsString();
+            verificationUrl =
+                    json.get(FacebookAssistantConstants.RESPONSE_VERIFICATION_URL).getAsString();
+            expiresIn =
+                    json.get(FacebookAssistantConstants.RESPONSE_EXPIRES_IN).getAsInt();
+            refreshInterval =
+                    json.get(FacebookAssistantConstants.RESPONSE_INTERVAL).getAsInt();
+
+        } catch (IOException | JsonSyntaxException | IllegalStateException e) {
+            // HTTP request / JSON errors
+            clearPreferences();
+            fireEvent(FacebookLoginEventType.LoginFailed);
+            return;
+        }
+
+        // Reset all timers and tasks
+        requestTime = LocalDateTime.now();
+        lastRefreshTime = System.currentTimeMillis();
+        accessToken = null;
+
+        cancelLoginChecker();
+        savePreferences();
+
+        fireEvent(FacebookLoginEventType.LoginInitiated);
+    }
+
+    void waitForLoginAsync() {
+
+        cancelLoginChecker();
+
+        if ((code == null) || (accessToken != null)) {
+            return;
+        }
+
+        final Runnable taskLoginChecker = () -> {
+            try {
+                if (checkLoginStatus()) {
+                    cancelLoginChecker();
+
+                    if (accessToken != null) {
+                        savePreferences();
+                        fireEvent(FacebookLoginEventType.LoggedIn);
+                    } else {
+                        clearPreferences();
+                        fireEvent(FacebookLoginEventType.LoginFailed);
+                    }
+                }
+            } catch (IOException e) {
+                cancelLoginChecker();
+                clearPreferences();
+                fireEvent(FacebookLoginEventType.LoginFailed);
+            }
+        };
+
+        loginChecker = executor.scheduleAtFixedRate(
+                taskLoginChecker,
+                refreshInterval,
+                refreshInterval,
+                TimeUnit.SECONDS);
+    }
+
+    private void cancelLoginChecker() {
+        if (loginChecker != null) {
+            loginChecker.cancel(true);
+            loginChecker = null;
+        }
+    }
+
+    private boolean checkLoginStatus()
+            throws IOException {
+
+        // Too soon to check. Back off and try later
+        if (System.currentTimeMillis() - lastRefreshTime < refreshInterval * 1000) {
+            return false;
+        }
+
+        // Code is invalid or expired. Signal that we need to stop checking
+        if ((code == null) ||
+                LocalDateTime.now().isAfter(getExpiryTime())) {
+            return true;
+        }
+
+        // Check login status
+        final InputStream response = Request
+                .Post(
+                        FacebookAssistantConstants.GRAPH_API_URL +
+                                FacebookAssistantConstants.LOGIN_STATUS_PATH)
+                .setHeader(
+                        FacebookAssistantConstants.HEADER_NAME,
+                        FacebookAssistantConstants.HEADER_VALUE)
+                .bodyForm(
+                        new BasicNameValuePair(
+                                FacebookAssistantConstants.PARAM_ACCESS_TOKEN,
+                                new Formatter()
+                                        .format(
+                                                FacebookAssistantConstants.ACCESS_TOKEN_FORMAT,
+                                                FacebookAssistantConstants.APP_ID,
+                                                FacebookAssistantConstants.CLIENT_TOKEN)
+                                        .toString()),
+                        new BasicNameValuePair(
+                                FacebookAssistantConstants.PARAM_CODE,
+                                code))
+                .execute()
+                .returnResponse()
+                .getEntity()
+                .getContent();
+
+        try {
+            final JsonObject json = new JsonParser()
+                .parse(new JsonReader(new InputStreamReader(response)))
+                .getAsJsonObject();
+
+            if (json.has(FacebookAssistantConstants.RESPONSE_ACCESS_TOKEN)) {
+                accessToken =
+                        json.get(FacebookAssistantConstants.RESPONSE_ACCESS_TOKEN).getAsString();
+            }
+            if (accessToken != null) {
+                // Successful login!
+                return true;
+            }
+
+            if (json.has(FacebookAssistantConstants.RESPONSE_ERROR)) {
+                final int errorSubCode = json
+                        .get(FacebookAssistantConstants.RESPONSE_ERROR)
+                        .getAsJsonObject()
+                        .get(FacebookAssistantConstants.RESPONSE_ERROR_SUBCODE)
+                        .getAsInt();
+
+                switch (errorSubCode) {
+                    case FacebookAssistantConstants.ERROR_SUBCODE_NOT_AUTHORIZED:
+                        // Has not approved login yet. Do not stop polling
+                        return false;
+
+                    case FacebookAssistantConstants.ERROR_SUBCODE_TOO_FREQUENT:
+                        // Checking status too frequently. Back off and try later
+                        return false;
+
+                    case FacebookAssistantConstants.ERROR_SUBCODE_LOGIN_EXPIRED:
+                        // Login expired. Have to stop and start over
+                        code = null;
+                        return true;
+
+                    default:
+                        // Unknown error code. Probably network issue?
+                        return false;
+                }
+            }
+
+        } catch (RuntimeException re) {
+            // A bunch of json parsing methods just throw subtypes of RuntimeException.
+            // We want to deal with these errors gracefully.
+            throw new IOException(re);
+        }
+
+        // Signal that we should try again later because we didn't get any response
+        return false;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookLoginActionButton.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookLoginActionButton.java
new file mode 100644
index 000000000..bb9fdabcf
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookLoginActionButton.java
@@ -0,0 +1,106 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.login;
+
+import com.facebook.plugin.ui.Icon;
+import com.google.gson.JsonObject;
+import com.intellij.openapi.actionSystem.AnAction;
+import com.intellij.openapi.actionSystem.Presentation;
+import com.intellij.openapi.actionSystem.impl.ActionButton;
+
+import javax.imageio.ImageIO;
+import javax.swing.ImageIcon;
+import java.awt.Dimension;
+import java.awt.Image;
+import java.io.IOException;
+import java.net.URL;
+import java.util.Formatter;
+
+public final class FacebookLoginActionButton
+        extends ActionButton
+        implements FacebookLoginEventListener {
+
+    public FacebookLoginActionButton(
+            final AnAction action,
+            final Presentation presentation,
+            final String place,
+            final Dimension minimumSize) {
+
+        super(action, presentation, place, minimumSize);
+        FacebookLogin.getInstance().addEventListener(this);
+        update();
+    }
+
+    private void update() {
+        boolean loadDefault;
+
+        try {
+            loadDefault = !loadProfileInfo();
+        } catch (IOException | RuntimeException e) {
+            loadDefault = true;
+        }
+
+        if (loadDefault) {
+            setToolTipText(FacebookAssistantConstants.LOG_IN_TEXT);
+            myPresentation.setDescription(FacebookAssistantConstants.LOG_IN_TEXT);
+            myPresentation.setIcon(Icon.facebook_icon.get());
+        }
+    }
+
+    private boolean loadProfileInfo()
+            throws IOException {
+
+        final JsonObject profile = FacebookLogin.getInstance().getProfile();
+        if (profile == null) {
+            return false;
+        }
+
+        final String toolTip = new Formatter().format(
+                FacebookAssistantConstants.LOGGED_IN_TEXT,
+                profile.get(FacebookAssistantConstants.FIELD_NAME).getAsString())
+                .toString();
+
+        final String pictureUrl = profile
+                .get(FacebookAssistantConstants.FIELD_PICTURE)
+                .getAsJsonObject()
+                .get(FacebookAssistantConstants.FIELD_DATA)
+                .getAsJsonObject()
+                .get(FacebookAssistantConstants.FIELD_URL)
+                .getAsString();
+        final Image image = ImageIO.read(new URL(pictureUrl));
+        final Image scaledImage = image.getScaledInstance(16, 16, Image.SCALE_SMOOTH);
+
+        setToolTipText(toolTip);
+        myPresentation.setDescription(toolTip);
+        myPresentation.setIcon(new ImageIcon(scaledImage));
+
+        return true;
+    }
+
+    @Override
+    public void handleEvent(final FacebookLoginEventType eventType) {
+        if ((eventType == FacebookLoginEventType.LoggedIn) ||
+                (eventType == FacebookLoginEventType.LoginExpired) ||
+                (eventType == FacebookLoginEventType.LoggedOut)) {
+            update();
+        }
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookLoginEventListener.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookLoginEventListener.java
new file mode 100644
index 000000000..9cd08d08e
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookLoginEventListener.java
@@ -0,0 +1,30 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.login;
+
+/**
+ * Event listener types that can register with FacebookLogin to receive callback when a
+ * Facebook Login event occurs
+ */
+public interface FacebookLoginEventListener {
+
+    void handleEvent(final FacebookLoginEventType eventType);
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookLoginEventType.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookLoginEventType.java
new file mode 100644
index 000000000..b41c0fc7f
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookLoginEventType.java
@@ -0,0 +1,29 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.login;
+
+public enum FacebookLoginEventType {
+    LoginInitiated,
+    LoginFailed,
+    LoginExpired,
+    LoggedIn,
+    LoggedOut,
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookUserPane.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookUserPane.form
new file mode 100644
index 000000000..d637a3406
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookUserPane.form
@@ -0,0 +1,164 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.login.FacebookUserPane">
+  <grid id="27dc6" binding="displayPanel" layout-manager="GridLayoutManager" row-count="3" column-count="4" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="486" height="290"/>
+    </constraints>
+    <properties>
+      <minimumSize width="-1" height="-1"/>
+      <preferredSize width="400" height="160"/>
+    </properties>
+    <border type="etched"/>
+    <children>
+      <component id="872e4" class="javax.swing.JButton" binding="signInOutButton">
+        <constraints>
+          <grid row="1" column="2" row-span="1" col-span="1" vsize-policy="3" hsize-policy="0" anchor="4" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <label value="Log In"/>
+          <text value="Log In"/>
+        </properties>
+      </component>
+      <hspacer id="1ae92">
+        <constraints>
+          <grid row="2" column="1" row-span="1" col-span="2" vsize-policy="1" hsize-policy="6" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="-1" height="20"/>
+            <preferred-size width="-1" height="20"/>
+            <maximum-size width="-1" height="20"/>
+          </grid>
+        </constraints>
+      </hspacer>
+      <vspacer id="17d71">
+        <constraints>
+          <grid row="1" column="3" row-span="1" col-span="1" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false">
+            <minimum-size width="10" height="-1"/>
+            <preferred-size width="10" height="-1"/>
+            <maximum-size width="10" height="-1"/>
+          </grid>
+        </constraints>
+      </vspacer>
+      <component id="abe82" class="javax.swing.JLabel" binding="descriptionLabel">
+        <constraints>
+          <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text resource-bundle="values/strings" key="login_description"/>
+          <visible value="true"/>
+        </properties>
+      </component>
+      <vspacer id="bd782">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false">
+            <minimum-size width="10" height="-1"/>
+            <preferred-size width="10" height="-1"/>
+            <maximum-size width="10" height="-1"/>
+          </grid>
+        </constraints>
+      </vspacer>
+      <grid id="d50c4" binding="contentPanel" layout-manager="CardLayout" hgap="0" vgap="0" show="ab97a">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="4" vsize-policy="3" hsize-policy="3" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children>
+          <grid id="ab97a" layout-manager="BorderLayout" hgap="0" vgap="0">
+            <constraints>
+              <card name="Card2"/>
+            </constraints>
+            <properties>
+              <background color="-10983765"/>
+            </properties>
+            <border type="none"/>
+            <children>
+              <component id="dfaa4" class="javax.swing.JLabel">
+                <constraints border-constraint="Center"/>
+                <properties>
+                  <background color="-10983765"/>
+                  <horizontalAlignment value="0"/>
+                  <horizontalTextPosition value="0"/>
+                  <icon value="icons/facebook_banner.png"/>
+                  <text value=""/>
+                </properties>
+              </component>
+            </children>
+          </grid>
+          <grid id="3e938" layout-manager="GridLayoutManager" row-count="4" column-count="4" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+            <margin top="0" left="0" bottom="0" right="0"/>
+            <constraints>
+              <card name="Card1"/>
+            </constraints>
+            <properties/>
+            <border type="none"/>
+            <children>
+              <component id="92832" class="javax.swing.JLabel" binding="profileImage">
+                <constraints>
+                  <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false">
+                    <minimum-size width="72" height="72"/>
+                    <preferred-size width="83" height="72"/>
+                    <maximum-size width="72" height="72"/>
+                  </grid>
+                </constraints>
+                <properties>
+                  <icon value="icons/facebook-icon.png"/>
+                  <text value=""/>
+                </properties>
+              </component>
+              <hspacer id="6193e">
+                <constraints>
+                  <grid row="2" column="1" row-span="1" col-span="2" vsize-policy="1" hsize-policy="0" anchor="0" fill="1" indent="0" use-parent-layout="false">
+                    <minimum-size width="-1" height="10"/>
+                    <preferred-size width="-1" height="10"/>
+                    <maximum-size width="-1" height="10"/>
+                  </grid>
+                </constraints>
+              </hspacer>
+              <component id="a8c6b" class="javax.swing.JSeparator">
+                <constraints>
+                  <grid row="3" column="1" row-span="1" col-span="2" vsize-policy="0" hsize-policy="6" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+                </constraints>
+                <properties/>
+              </component>
+              <hspacer id="cfb1">
+                <constraints>
+                  <grid row="0" column="1" row-span="1" col-span="2" vsize-policy="1" hsize-policy="0" anchor="0" fill="1" indent="0" use-parent-layout="false">
+                    <minimum-size width="-1" height="10"/>
+                    <preferred-size width="-1" height="10"/>
+                    <maximum-size width="-1" height="10"/>
+                  </grid>
+                </constraints>
+              </hspacer>
+              <component id="1f559" class="javax.swing.JLabel" binding="credentialsPanel">
+                <constraints>
+                  <grid row="1" column="2" row-span="1" col-span="1" vsize-policy="7" hsize-policy="7" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+                </constraints>
+                <properties>
+                  <text value="&lt;html&gt;name&lt;br/&gt;email&lt;/html&gt;"/>
+                </properties>
+              </component>
+              <vspacer id="51245">
+                <constraints>
+                  <grid row="1" column="3" row-span="2" col-span="1" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false">
+                    <minimum-size width="10" height="-1"/>
+                    <preferred-size width="10" height="-1"/>
+                    <maximum-size width="10" height="-1"/>
+                  </grid>
+                </constraints>
+              </vspacer>
+              <vspacer id="9d3c8">
+                <constraints>
+                  <grid row="1" column="0" row-span="2" col-span="1" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false">
+                    <minimum-size width="10" height="-1"/>
+                    <preferred-size width="10" height="-1"/>
+                    <maximum-size width="10" height="-1"/>
+                  </grid>
+                </constraints>
+              </vspacer>
+            </children>
+          </grid>
+        </children>
+      </grid>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookUserPane.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookUserPane.java
new file mode 100644
index 000000000..a122469b2
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/login/FacebookUserPane.java
@@ -0,0 +1,130 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.login;
+
+import com.facebook.plugin.ui.ClickableMouseAdapter;
+import com.google.gson.JsonObject;
+import com.intellij.openapi.ui.popup.JBPopup;
+import com.intellij.openapi.ui.popup.JBPopupFactory;
+import com.intellij.ui.awt.RelativePoint;
+
+import javax.imageio.ImageIO;
+import javax.swing.ImageIcon;
+import javax.swing.JButton;
+import javax.swing.JComponent;
+import javax.swing.JLabel;
+import javax.swing.JPanel;
+import java.awt.*;
+import java.awt.Image;
+import java.awt.Point;
+import java.io.IOException;
+import java.net.URL;
+import java.util.Formatter;
+
+public class FacebookUserPane {
+    private JPanel displayPanel;
+    private JLabel profileImage;
+    private JLabel descriptionLabel;
+    private JButton signInOutButton;
+    private JLabel credentialsPanel;
+    private JPanel contentPanel;
+
+    private JBPopup popup;
+
+    private FacebookLogin fbLogin = FacebookLogin.getInstance();
+
+    FacebookUserPane() {
+        this.signInOutButton.addMouseListener(new ClickableMouseAdapter());
+    }
+
+    public static void popup(final JComponent source) {
+        final JBPopup popup = new FacebookUserPane().getPopup();
+
+        // Figure out the starting point for the popup
+        final JComponent component = popup.getContent();
+        final int startingPoint = (int)(source.getWidth() -
+                component.getPreferredSize().getWidth());
+
+        popup.show(new RelativePoint(source, new Point(startingPoint, source.getHeight() - 1)));
+    }
+
+    private JBPopup getPopup() {
+        final JsonObject profile = fbLogin.getProfile();
+
+        boolean loadDefault = true;
+
+        if (profile != null) {
+            try {
+                final String description = new Formatter().format(
+                        FacebookAssistantConstants.LOGGED_IN_DESCRIPTION,
+                        profile.get(FacebookAssistantConstants.FIELD_NAME).getAsString(),
+                        profile.get(FacebookAssistantConstants.FIELD_EMAIL).getAsString())
+                        .toString();
+
+                final String pictureUrl = profile
+                        .get(FacebookAssistantConstants.FIELD_PICTURE)
+                        .getAsJsonObject()
+                        .get(FacebookAssistantConstants.FIELD_DATA)
+                        .getAsJsonObject()
+                        .get(FacebookAssistantConstants.FIELD_URL)
+                        .getAsString();
+                final Image image = ImageIO.read(new URL(pictureUrl));
+                final Image scaledImage = image.getScaledInstance(72, 72, Image.SCALE_SMOOTH);
+
+                credentialsPanel.setText(description);
+                profileImage.setIcon(new ImageIcon(scaledImage));
+
+
+                signInOutButton.setText(FacebookAssistantConstants.BUTTON_LOGOUT);
+                signInOutButton.addActionListener(e -> logout());
+
+                loadDefault = false;
+
+            } catch (IOException | RuntimeException e) {
+                loadDefault = true;
+            }
+        }
+
+        descriptionLabel.setVisible(loadDefault);
+
+        if (loadDefault) {
+            signInOutButton.setText(FacebookAssistantConstants.BUTTON_LOGIN);
+            signInOutButton.addActionListener(e -> login());
+        } else {
+            ((CardLayout)contentPanel.getLayout()).last(contentPanel);
+        }
+
+        popup = JBPopupFactory.getInstance()
+                .createComponentPopupBuilder(displayPanel, null)
+                .createPopup();
+        return popup;
+    }
+
+    private void login() {
+        fbLogin.logIn(null);
+        popup.cancel();
+    }
+
+    private void logout() {
+        fbLogin.logOut();
+        popup.cancel();
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCode.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCode.form
new file mode 100644
index 000000000..02a53ad83
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCode.form
@@ -0,0 +1,230 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.AccountKitCodeForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="18" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="10" right="10"/>
+    <constraints>
+      <xy x="20" y="20" width="463" height="3477"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="11da4" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt; If your app will receive the user's access token directly (i.e., the Enable Client Access Token Flow switch in your app's dashboard is ON) then you should check for a valid, existing token:&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="cd7cb" binding="checkSessionsCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="2" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="220"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="19b91" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="3" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;If your app will receive an authorization code that it will pass to the server (i.e. the Enable Client Access Token Flow switch in your app's dashboard is OFF), it is up to you to have your server communicate the correct login status to your client application.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="28e2" binding="smsCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="5" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="470"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="e2b14" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="6" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;The APP_REQUEST_CODE is your custom code to track your login flow. It can be any integer, but it needs to be set by your application. When initializing your intent extras, be sure to specify the AccountKitActivity.ResponseType that matches your application's authorization setting in the Facebook developer portal dashboard: TOKEN if the Enable Client Access Token Flow switch in your app's dashboard is ON, and CODE if it is OFF. If people are logged into their Facebook account on their Android devices, and have a verified phone number, Account Kit verifies them without requiring them to enter the SMS code. For more information, see Instant Verification.&#10;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="38c37" binding="emailCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="8" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="470"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="be210" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="10" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt; Capture the Account Kit activity's result and extract the `AccountKitLoginResult` from the Intent argument to determine the status of the login attempt.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="30d38" binding="handleResultCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="11" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="980"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="6ce1b" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="13" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt; If you began the login session with `AccountKitActivity.ResponseType.TOKEN`, a logout option is available to remove the stored AccessToken from the device.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="3cc80" binding="logoutCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="14" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="110"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="ad884" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="16" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt; If your began the login session with AccountKitActivity.ResponseType.TOKEN, it's possible to access the Account Kit ID, phone number and email of the current account via a call to getCurrentAccount().&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="16da0" binding="accessInfoCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="17" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="440"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="c1eb1" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Check for Existing Sessions&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="26310" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/2.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <hspacer id="b4b28">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="0" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+      <component id="fd9a2" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="4" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt; &lt;h2&gt;Initiate a Login Flow for SMS&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="487c1" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="4" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/3.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <component id="27079" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="7" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Initiate a Login Flow for Email&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="91e9a" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="7" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/4.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <component id="965ff" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="9" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Handle the Activity's Result&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="d13b4" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="9" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/5.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <component id="2a65" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="12" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Provide a Logout Button&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="90c7a" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="12" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/6.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <component id="d447a" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="15" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Access Account Information on the Device&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="2c33e" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="15" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/7.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCodeForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCodeForm.java
new file mode 100644
index 000000000..b4c21ce3c
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCodeForm.java
@@ -0,0 +1,160 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import javax.swing.*;
+
+public class AccountKitCodeForm extends CodeFormContainer {
+    private JPanel mainPanel;
+    private JPanel checkSessionsCode;
+    private JPanel smsCode;
+    private JPanel emailCode;
+    private JPanel handleResultCode;
+    private JPanel logoutCode;
+    private JPanel accessInfoCode;
+
+    AccountKitCodeForm() {
+        setCodeForm("\n" +
+                "import com.facebook.accountkit.AccountKit;\n" +
+                "import com.facebook.accountkit.AccessToken;\n" +
+                "\n" +
+                "AccessToken accessToken = AccountKit.getCurrentAccessToken();\n" +
+                "\n" +
+                "if (accessToken != null) {\n" +
+                "  //Handle Returning User\n" +
+                "} else {\n" +
+                "  //Handle new or logged out user\n" +
+                "}", checkSessionsCode);
+
+        setCodeForm("\n" +
+                "import com.facebook.accountkit.AccountKit;\n" +
+                "\n" +
+                "public static int APP_REQUEST_CODE = 99;\n" +
+                "\n" +
+                "public void phoneLogin(final View view) {\n" +
+                "  final Intent intent = new Intent(getActivity(), AccountKitActivity.class);\n" +
+                "  AccountKitConfiguration.AccountKitConfigurationBuilder configurationBuilder =\n" +
+                "    new AccountKitConfiguration.AccountKitConfigurationBuilder(\n" +
+                "      LoginType.PHONE,\n" +
+                "      AccountKitActivity.ResponseType.CODE); // or .ResponseType.TOKEN\n" +
+                "  // ... perform additional configuration ...\n" +
+                "  intent.putExtra(\n" +
+                "    AccountKitActivity.ACCOUNT_KIT_ACTIVITY_CONFIGURATION,\n" +
+                "    configurationBuilder.build());\n" +
+                "  startActivityForResult(intent, APP_REQUEST_CODE);\n" +
+                "}\n", smsCode);
+
+        setCodeForm("\n" +
+                "import com.facebook.accountkit.AccountKit.\n" +
+                "\n" +
+                "public static int APP_REQUEST_CODE = 99;\n" +
+                "\n" +
+                "public void emailLogin(final View view) {\n" +
+                "  final Intent intent = new Intent(getActivity(), AccountKitActivity.class);\n" +
+                "  AccountKitConfiguration.AccountKitConfigurationBuilder configurationBuilder =\n" +
+                "    new AccountKitConfiguration.AccountKitConfigurationBuilder(\n" +
+                "      LoginType.EMAIL,\n" +
+                "      AccountKitActivity.ResponseType.CODE); // or .ResponseType.TOKEN\n" +
+                "  // ... perform additional configuration ...\n" +
+                "  intent.putExtra(\n" +
+                "    AccountKitActivity.ACCOUNT_KIT_ACTIVITY_CONFIGURATION,\n" +
+                "    configurationBuilder.build());\n" +
+                "  startActivityForResult(intent, APP_REQUEST_CODE);\n" +
+                "}\n", emailCode);
+
+        setCodeForm("\n" +
+                "    @Override\n" +
+                "    protected void onActivityResult(\n" +
+                "            final int requestCode,\n" +
+                "            final int resultCode,\n" +
+                "            final Intent data) {\n" +
+                "        super.onActivityResult(requestCode, resultCode, data);\n" +
+                "        if (requestCode == APP_REQUEST_CODE) { // confirm that this response matches your request\n" +
+                "            AccountKitLoginResult loginResult = " +
+                "data.getParcelableExtra(AccountKitLoginResult.RESULT_KEY);\n" +
+                "            String toastMessage;\n" +
+                "            if (loginResult.getError() != null) {\n" +
+                "                toastMessage = loginResult.getError().getErrorType().getMessage();\n" +
+                "                showErrorActivity(loginResult.getError());\n" +
+                "            } else if (loginResult.wasCancelled()) {\n" +
+                "                toastMessage = \"Login Cancelled\";\n" +
+                "            } else {\n" +
+                "                if (loginResult.getAccessToken() != null) {\n" +
+                "                    toastMessage = \"Success:\" + loginResult.getAccessToken().getAccountId();\n" +
+                "                } else {\n" +
+                "                    toastMessage = String.format(\n" +
+                "                            \"Success:%s...\",\n" +
+                "                            loginResult.getAuthorizationCode().substring(0,10));\n" +
+                "                }\n" +
+                "\n" +
+                "                // If you have an authorization code, retrieve it from\n" +
+                "                // loginResult.getAuthorizationCode()\n" +
+                "                // and pass it to your server and exchange it for an access token.\n" +
+                "\n" +
+                "                // Success! Start your next activity...\n" +
+                "                goToMyLoggedInActivity();\n" +
+                "            }\n" +
+                "\n" +
+                "            // Surface the result to your user in an appropriate way.\n" +
+                "            Toast.makeText(\n" +
+                "                    this,\n" +
+                "                    toastMessage,\n" +
+                "                    Toast.LENGTH_LONG)\n" +
+                "                    .show();\n" +
+                "        }\n" +
+                "    }\n" +
+                "\n", handleResultCode);
+
+        setCodeForm("\n" +
+                "\n" +
+                "import com.facebook.accountkit.AccountKit;\n" +
+                "\n" +
+                "AccountKit.logOut();\n" +
+                "\n", logoutCode);
+
+        setCodeForm("\n" +
+                "\n" +
+                "AccountKit.getCurrentAccount(new AccountKitCallback<Account>() {\n" +
+                "  @Override\n" +
+                "  public void onSuccess(final Account account) {\n" +
+                "    // Get Account Kit ID\n" +
+                "    String accountKitId = account.getId();\n" +
+                "\n" +
+                "    // Get phone number\n" +
+                "    PhoneNumber phoneNumber = account.getPhoneNumber();\n" +
+                "    String phoneNumberString = phoneNumber.toString();\n" +
+                "\n" +
+                "    // Get email\n" +
+                "    String email = account.getEmail();\n" +
+                "  }\n" +
+                "  \n" +
+                "  @Override\n" +
+                "  public void onError(final AccountKitError error) {\n" +
+                "    // Handle Error\n" +
+                "  }\n" +
+                "});\n", accessInfoCode);
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivity.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivity.form
similarity index 100%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivity.form
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivity.form
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivityForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivityForm.java
similarity index 97%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivityForm.java
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivityForm.java
index 16d36550d..ec5158faa 100644
--- a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivityForm.java
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivityForm.java
@@ -35,7 +35,7 @@
     private final Project project;
 
     private JPanel mainPanel;
-    private JComboBox activitySelector;
+    private JComboBox<AccountKitActivityConfigurator.AvailableActivity> activitySelector;
     private JTextField requestCodeField;
 
     AccountKitInstallActivityForm(final Project project) {
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependencies.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependencies.form
similarity index 95%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependencies.form
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependencies.form
index f2d3f0571..c1985de7b 100644
--- a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependencies.form
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependencies.form
@@ -3,7 +3,7 @@
   <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="7" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
     <margin top="0" left="0" bottom="0" right="0"/>
     <constraints>
-      <xy x="20" y="20" width="1154" height="263"/>
+      <xy x="20" y="20" width="1213" height="263"/>
     </constraints>
     <properties/>
     <border type="none"/>
@@ -14,7 +14,7 @@
         </constraints>
         <properties>
           <horizontalTextPosition value="10"/>
-          <text resource-bundle="values/strings" key="configureSDKText"/>
+          <text resource-bundle="values/strings" key="akConfigureSDKText"/>
           <verticalAlignment value="1"/>
           <verticalTextPosition value="1"/>
         </properties>
@@ -99,7 +99,7 @@
         </constraints>
         <properties>
           <horizontalTextPosition value="10"/>
-          <text resource-bundle="values/strings" key="configureParamsText"/>
+          <text resource-bundle="values/strings" key="akConfigureParamsText"/>
           <verticalAlignment value="1"/>
           <verticalTextPosition value="1"/>
         </properties>
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependenciesForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependenciesForm.java
similarity index 63%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependenciesForm.java
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependenciesForm.java
index 2a312a350..40cb2114b 100644
--- a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependenciesForm.java
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependenciesForm.java
@@ -21,6 +21,9 @@
 package com.facebook.plugin.ui;
 
 import com.facebook.plugin.config.AccountKitModuleConfigurator;
+import com.facebook.plugin.config.AndroidResourcesConfigurator;
+import com.facebook.plugin.config.AvailableModule;
+import com.intellij.openapi.module.Module;
 import com.intellij.openapi.project.Project;
 import com.intellij.openapi.ui.Messages;
 import org.apache.commons.lang.StringUtils;
@@ -32,16 +35,23 @@
 import javax.swing.JTextField;
 
 public class AccountKitInstallDependenciesForm implements WizardStep {
+
+    private static final String AVAILABLE_MODULE_CHANGED_ACTION = "availableModuleChangedAction";
+
     private final Project project;
+    private final AccountKitModuleConfigurator moduleConfigurator;
 
     private JPanel mainPanel;
-    private JComboBox moduleSelector;
+    private JComboBox<AvailableModule> moduleSelector;
     private JTextField appNameField;
     private JTextField appIdField;
     private JTextField clientTokenField;
 
-    AccountKitInstallDependenciesForm(final Project project) {
+    AccountKitInstallDependenciesForm(
+            final Project project,
+            final AccountKitModuleConfigurator configurator) {
         this.project = project;
+        this.moduleConfigurator = configurator;
     }
 
     @Override
@@ -52,13 +62,37 @@ public JComponent getComponent() {
     @Override
     public void fillForm() {
         moduleSelector.setModel(new DefaultComboBoxModel<>(
-                AccountKitModuleConfigurator.getModuleAvailabilities(project)));
+                moduleConfigurator.getAvailableModules(project)));
+
+        moduleSelector.setActionCommand(AVAILABLE_MODULE_CHANGED_ACTION);
+
+        moduleSelector.addActionListener(e -> {
+            if (AVAILABLE_MODULE_CHANGED_ACTION.contentEquals(e.getActionCommand())) {
+                Module module = ((AvailableModule)moduleSelector.getSelectedItem())
+                        .getModule();
+                appIdField.setText(
+                        moduleConfigurator.getConfiguredValue(
+                                module,
+                                AndroidResourcesConfigurator.FB_APP_ID));
+
+                appNameField.setText(
+                        moduleConfigurator.getConfiguredValue(
+                                module,
+                                AndroidResourcesConfigurator.FB_APP_NAME));
+
+                clientTokenField.setText(
+                        moduleConfigurator.getConfiguredValue(
+                                module,
+                                AndroidResourcesConfigurator.AK_CLIENT_TOKEN));
+            }
+        });
+        moduleSelector.setSelectedIndex(0);
     }
 
     @Override
     public boolean commitForm() {
-        AccountKitModuleConfigurator.AvailableModule selectedModule =
-                (AccountKitModuleConfigurator.AvailableModule) moduleSelector.getSelectedItem();
+        AvailableModule selectedModule =
+                (AvailableModule) moduleSelector.getSelectedItem();
 
         if (selectedModule == null) {
             Messages.showErrorDialog(
@@ -68,8 +102,7 @@ public boolean commitForm() {
             return false;
         }
 
-        if (selectedModule.getInstallationType() ==
-                AccountKitModuleConfigurator.InstallationType.CannotInstall) {
+        if (selectedModule.isUnavailable()) {
             Messages.showErrorDialog(
                 project,
                 "Cannot install AccountKit on module " +
@@ -80,11 +113,6 @@ public boolean commitForm() {
             return false;
         }
 
-        if (selectedModule.getInstallationType() ==
-                AccountKitModuleConfigurator.InstallationType.AlreadyInstalled) {
-            return true;
-        }
-
         if (StringUtils.isBlank(appNameField.getText())) {
             Messages.showErrorDialog(
                 project,
@@ -110,23 +138,20 @@ public boolean commitForm() {
             return false;
         }
 
-        AccountKitModuleConfigurator accountKitModuleConfigurator =
-                new AccountKitModuleConfigurator(
+        moduleConfigurator.set(
                         appNameField.getText(),
                         appIdField.getText(),
                         clientTokenField.getText());
 
-        if (!accountKitModuleConfigurator.isConfigured(selectedModule.getModule())) {
-            try {
-                accountKitModuleConfigurator.doConfigure(selectedModule.getModule());
-            } catch (Exception e) {
-                Messages.showErrorDialog(
+        try {
+            moduleConfigurator.doConfigure(selectedModule.getModule());
+        } catch (Exception e) {
+            Messages.showErrorDialog(
                     project,
                     "Something went wrong while installing module " +
-                      selectedModule.getModule().getName() +
-                      ": \n" + e.getMessage(),
+                            selectedModule.getModule().getName() +
+                            ": \n" + e.getMessage(),
                     "Install Failed");
-            }
         }
 
         return true;
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallerWizard.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallerWizard.java
new file mode 100644
index 000000000..853aef45e
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallerWizard.java
@@ -0,0 +1,46 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.facebook.plugin.config.AccountKitModuleConfigurator;
+import com.intellij.openapi.project.Project;
+
+import javax.annotation.Nonnull;
+
+class AccountKitInstallerWizard extends WizardDialog {
+
+    private static final String COMPLETE_STRING_KEY = "akCompletedText";
+    private static final String REFERENCE_LINK_URL =
+            "https://developers.facebook.com/docs/accountkit/android";
+
+    AccountKitInstallerWizard(@Nonnull final Project project,
+                              final AccountKitModuleConfigurator configurator) {
+        super(
+                project,
+                "Integrate AccountKit SDK",
+                new WizardStep[]{
+                        new AccountKitPrerequisitesForm(),
+                        new AccountKitInstallDependenciesForm(project, configurator),
+                        new AccountKitInstallActivityForm(project),
+                        new CompletedForm(COMPLETE_STRING_KEY, REFERENCE_LINK_URL)
+                });
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitIntegrationForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitIntegrationForm.java
new file mode 100644
index 000000000..d6b696a70
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitIntegrationForm.java
@@ -0,0 +1,46 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.facebook.plugin.config.AccountKitModuleConfigurator;
+import com.intellij.openapi.project.Project;
+
+class AccountKitIntegrationForm extends IntegrationButtonForm<AccountKitModuleConfigurator> {
+
+    AccountKitIntegrationForm(final Project project) {
+        super(
+                project,
+                new AccountKitModuleConfigurator(),
+                true,
+                "integrateAccountKitSDKBold",
+                "integrateAccountKitSDK");
+
+        updateUI();
+    }
+
+    @Override
+    void onButtonClick(Project project) {
+        AccountKitInstallerWizard installerWizard =
+                new AccountKitInstallerWizard(project, getConfigurator());
+        installerWizard.show();
+        updateUI();
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisites.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisites.form
new file mode 100644
index 000000000..71493cc36
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisites.form
@@ -0,0 +1,61 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.AccountKitPrerequisitesForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="6" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="753" height="499"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <vspacer id="66a18">
+        <constraints>
+          <grid row="5" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
+        </constraints>
+      </vspacer>
+      <component id="66c65" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Prerequisites&lt;/h2&gt;Before you begin integrating AccountKit into your app, make sure you have completed the following prerequisites&lt;p/&gt;If you already have a Facebook App configured, you can skip to the next page.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="f73f4" class="javax.swing.JLabel" binding="step1Label">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="9" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/1.png"/>
+          <text value="&lt;html&gt;&lt;h3&gt;Create a Developer Account&lt;/h3&gt;If you don't have a Facebook developer account, create one by going to&lt;br/&gt;&lt;a href=&quot;https://developers.facebook.com&quot;&gt;https://developers.facebook.com&lt;/a&gt;.&lt;p/&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="f4b6c" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="2" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="8" fill="0" indent="3" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;Your Facebook developer account gives you access to developer tools and allows you to create Facebook apps.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="127c" class="javax.swing.JLabel" binding="step3Label">
+        <constraints>
+          <grid row="4" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="9" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/3.png"/>
+          <text value="&lt;html&gt;&lt;h3&gt;Choose Your App Settings&lt;/h3&gt;Choose whether to allow email and SMS login, and choose security settings for your app by going to&lt;br/&gt;&lt;a href=&quot;https://developers.facebook.com&quot;&gt;https://developers.facebook.com&lt;/a&gt;.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="dde5e" class="javax.swing.JLabel" binding="step2Label">
+        <constraints>
+          <grid row="3" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="9" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/2.png"/>
+          <text value="&lt;html&gt;&lt;h3&gt;Get a Facebook App ID&lt;/h3&gt;AccountKit for Android requires a Facebook app ID. Follow the steps in the Getting Started, or to use Quick Start by going to&lt;br/&gt;&lt;a href=&quot;https://developers.facebook.com/apps/&quot;&gt;https://developers.facebook.com/apps/&lt;/a&gt;.&lt;p/&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisitesForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisitesForm.java
new file mode 100644
index 000000000..79740cf48
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisitesForm.java
@@ -0,0 +1,72 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import javax.swing.*;
+import java.awt.*;
+import java.awt.event.MouseAdapter;
+import java.awt.event.MouseEvent;
+
+public class AccountKitPrerequisitesForm implements WizardStep, LinkClickable {
+
+    private static final String STEP_1_LINK = "https://developers.facebook.com";
+    private static final String STEP_2_LINK = "https://developers.facebook.com/apps/";
+    private static final String STEP_3_LINK = STEP_1_LINK;
+
+    private JPanel mainPanel;
+    private JLabel step1Label;
+    private JLabel step3Label;
+    private JLabel step2Label;
+
+    AccountKitPrerequisitesForm() {
+        MouseAdapter mouseAdapter = new ClickableMouseAdapter() {
+
+            @Override
+            public void mouseClicked(MouseEvent e) {
+                Component component = e.getComponent();
+                if (component == step1Label) {
+                    clickLink(STEP_1_LINK);
+                } else if (component == step2Label) {
+                    clickLink(STEP_2_LINK);
+                } else if (component == step3Label) {
+                    clickLink(STEP_3_LINK);
+                }
+            }
+        };
+
+        this.step1Label.addMouseListener(mouseAdapter);
+        this.step2Label.addMouseListener(mouseAdapter);
+        this.step3Label.addMouseListener(mouseAdapter);
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+
+    @Override
+    public void fillForm() { /* no op */ }
+
+    @Override
+    public boolean commitForm() {
+        return true;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/ActionTree.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/ActionTree.java
new file mode 100644
index 000000000..4389592af
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/ActionTree.java
@@ -0,0 +1,46 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.intellij.openapi.project.Project;
+import com.intellij.openapi.roots.ui.componentsList.components.ScrollablePanel;
+import com.intellij.uiDesigner.core.GridConstraints;
+import com.intellij.uiDesigner.core.GridLayoutManager;
+
+import javax.swing.*;
+import java.awt.*;
+
+class ActionTree extends ScrollablePanel {
+
+    ActionTree(Project project, FbToolWindowForm toolWindow) {
+        super(new GridLayoutManager(7, 1));
+
+        ActionTreeCellForm[] actions = ActionTreeCellForm.getActions(project, toolWindow);
+        for (int i = 0; i < actions.length; i++) {
+            final ActionTreeCellForm action = actions[i];
+            final GridConstraints gridConstraints = new GridConstraints();
+            gridConstraints.setRow(i);
+            gridConstraints.setColumn(0);
+            gridConstraints.setFill(GridConstraints.FILL_BOTH);
+            add(action.getComponent(), gridConstraints);
+        }
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/ActionTreeCell.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/ActionTreeCell.form
new file mode 100644
index 000000000..aea9b0637
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/ActionTreeCell.form
@@ -0,0 +1,105 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.ActionTreeCellForm">
+  <grid id="27dc6" binding="panel" layout-manager="GridLayoutManager" row-count="2" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="0" vgap="0">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="541" height="250"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <grid id="9f32e" layout-manager="GridLayoutManager" row-count="2" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="0" vgap="0">
+        <margin top="0" left="0" bottom="0" right="0"/>
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="1" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children>
+          <vspacer id="675c0">
+            <constraints>
+              <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="1" anchor="1" fill="0" indent="0" use-parent-layout="false">
+                <minimum-size width="-1" height="12"/>
+                <preferred-size width="-1" height="12"/>
+                <maximum-size width="-1" height="12"/>
+              </grid>
+            </constraints>
+          </vspacer>
+          <component id="625aa" class="javax.swing.JLabel" binding="arrowLabel">
+            <constraints>
+              <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="1" fill="0" indent="0" use-parent-layout="false"/>
+            </constraints>
+            <properties>
+              <icon value="icons/glyph-triangle-right.png"/>
+              <text value=""/>
+            </properties>
+          </component>
+        </children>
+      </grid>
+      <grid id="496e2" layout-manager="GridLayoutManager" row-count="4" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="0" vgap="0">
+        <margin top="0" left="0" bottom="0" right="0"/>
+        <constraints>
+          <grid row="0" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="1" fill="1" indent="1" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children>
+          <component id="4e1c2" class="javax.swing.JLabel" binding="title">
+            <constraints>
+              <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="7" anchor="2" fill="1" indent="0" use-parent-layout="false"/>
+            </constraints>
+            <properties>
+              <icon value="icons/glyph-app-facebook-hollow.png"/>
+              <text value="&lt;html&gt;Cell Title&lt;/html&gt;"/>
+            </properties>
+          </component>
+          <component id="8f7" class="javax.swing.JLabel" binding="description">
+            <constraints>
+              <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="8" fill="0" indent="2" use-parent-layout="false"/>
+            </constraints>
+            <properties>
+              <text value="&lt;html&gt;This is the cell description&lt;/html&gt;"/>
+            </properties>
+          </component>
+          <component id="44058" class="javax.swing.JLabel" binding="descriptionLink">
+            <constraints>
+              <grid row="2" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="2" use-parent-layout="false"/>
+            </constraints>
+            <properties>
+              <horizontalAlignment value="2"/>
+              <horizontalTextPosition value="2"/>
+              <text value="&lt;html&gt;&lt;u&gt;More Info&lt;/u&gt;&lt;/html&gt;"/>
+              <verticalAlignment value="0"/>
+              <verticalTextPosition value="0"/>
+            </properties>
+          </component>
+          <vspacer id="b471">
+            <constraints>
+              <grid row="3" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false">
+                <minimum-size width="-1" height="10"/>
+              </grid>
+            </constraints>
+          </vspacer>
+        </children>
+      </grid>
+      <grid id="22172" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="2" vsize-policy="3" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children>
+          <grid id="1daf" binding="childPanel" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="5" vgap="5">
+            <margin top="15" left="5" bottom="0" right="0"/>
+            <constraints border-constraint="Center"/>
+            <properties>
+              <visible value="false"/>
+            </properties>
+            <border type="none"/>
+            <children/>
+          </grid>
+        </children>
+      </grid>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/ActionTreeCellForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/ActionTreeCellForm.java
new file mode 100644
index 000000000..816976493
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/ActionTreeCellForm.java
@@ -0,0 +1,295 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.google.common.base.Strings;
+import com.intellij.openapi.project.Project;
+import com.intellij.ui.JBColor;
+import com.intellij.uiDesigner.core.GridConstraints;
+import com.intellij.util.ui.UIUtil;
+
+import javax.annotation.Nonnull;
+import javax.annotation.Nullable;
+import javax.swing.*;
+import java.awt.*;
+import java.awt.event.MouseAdapter;
+import java.awt.event.MouseEvent;
+import java.util.ResourceBundle;
+
+public class ActionTreeCellForm implements Viewable, LinkClickable {
+
+    // region static
+
+    static ActionTreeCellForm[] getActions(Project project, FbToolWindowForm toolWindow) {
+        return new ActionTreeCellForm[] {
+                new ActionTreeCellForm(
+                        "facebookCoreSDK",
+                        "facebookCoreDescription",
+                        "https://developers.facebook.com/docs/app-events/android",
+                        Icon.line_chart,
+                        getParentAction(new ActionTreeCellForm(
+                                "integrateFacebookCoreSDKLink",
+                                null,
+                                null,
+                                Icon.play,
+                                (self) -> toolWindow.addView(
+                                        "facebookCoreSDK",
+                                        new SectionTitlePanelForm(
+                                                "integrateFacebookCoreSDK",
+                                                "facebookAnalyticsSectionDescription",
+                                                "https://developers.facebook.com/docs/app-events/android"),
+                                        new InstallerForm(
+                                                new FacebookCoreIntegrationForm(project),
+                                                new FacebookCoreCodeForm()))))),
+                new ActionTreeCellForm(
+                        "facebookLoginSDK",
+                        "facebookLoginDescription",
+                        "https://developers.facebook.com/docs/facebook-login/android",
+                        Icon.facebook_hollow,
+                        getParentAction(new ActionTreeCellForm(
+                                "integrateFacebookLoginSDKLink",
+                                null,
+                                null,
+                                Icon.play,
+                                (self) -> toolWindow.addView(
+                                        "facebookLoginSDK",
+                                        new SectionTitlePanelForm(
+                                                "facebookLoginSDK",
+                                                "facebookLoginSectionDescription",
+                                                "https://developers.facebook.com/docs/facebook-login/android"),
+                                        new InstallerForm(
+                                                new FacebookLoginIntegrationForm(project),
+                                                new FacebookLoginCodeForm()))))),
+                new ActionTreeCellForm(
+                        "facebookShareSDK",
+                        "facebookShareDescription",
+                        "https://developers.facebook.com/docs/sharing/android",
+                        Icon.friend_share,
+                        getParentAction(new ActionTreeCellForm(
+                                "integrateFacebookShareSDKLink",
+                                null,
+                                null,
+                                Icon.play,
+                                (self) -> toolWindow.addView(
+                                        "facebookShareSDK",
+                                        new SectionTitlePanelForm(
+                                                "facebookShareSDK",
+                                                "facebookShareSectionDescription",
+                                                "https://developers.facebook.com/docs/sharing/android"),
+                                        new InstallerForm(
+                                                new FacebookShareIntegrationForm(project),
+                                                new FacebookShareCodeForm()))))),
+                new ActionTreeCellForm(
+                        "facebookPlacesSDK",
+                        "facebookPlacesDescription",
+                        "https://developers.facebook.com/docs/places/android",
+                        Icon.places,
+                        getParentAction(new ActionTreeCellForm(
+                                "integrateFacebookPlacesSDKLink",
+                                null,
+                                null,
+                                Icon.play,
+                                (self) -> toolWindow.addView(
+                                        "facebookPlacesSDK",
+                                        new SectionTitlePanelForm(
+                                                "facebookPlacesSDK",
+                                                "facebookPlacesSectionDescription",
+                                                "https://developers.facebook.com/docs/places/android"),
+                                        new InstallerForm(
+                                                new FacebookPlacesIntegrationForm(project),
+                                                new FacebookPlacesCodeForm()))))),
+                new ActionTreeCellForm(
+                        "facebookMessengerSDK",
+                        "facebookMessengerDescription",
+                        "https://developers.facebook.com/docs/messenger/android",
+                        Icon.messenger,
+                        getParentAction(new ActionTreeCellForm(
+                                "integrateFacebookMessengerSDKLink",
+                                null,
+                                null,
+                                Icon.play,
+                                (self) -> toolWindow.addView(
+                                        "facebookMessengerSDK",
+                                        new SectionTitlePanelForm(
+                                                "facebookMessengerSDK",
+                                                "facebookMessengerSectionDescription",
+                                                "https://developers.facebook.com/docs/messenger/android"),
+                                        new InstallerForm(
+                                                new FacebookMessengerIntegrationForm(project),
+                                                new FacebookMessengerCodeForm()))))),
+                new ActionTreeCellForm(
+                        "accountKitSDK",
+                        "accountKitDescription",
+                        "https://developers.facebook.com/docs/accountkit/android",
+                        Icon.key,
+                        getParentAction(new ActionTreeCellForm(
+                                "integrateAccountKitSDKLink",
+                                null,
+                                null,
+                                Icon.play,
+                                (self) -> toolWindow.addView(
+                                        "accountKitSDK",
+                                        new SectionTitlePanelForm(
+                                                "accountKitSDK",
+                                                "accountKitSectionDescription",
+                                                "https://developers.facebook.com/docs/accountkit/android"),
+                                        new InstallerForm(
+                                                new AccountKitIntegrationForm(project),
+                                                new AccountKitCodeForm())))))
+        };
+    }
+
+    // endregion
+
+    private JLabel title;
+    private JLabel description;
+    private JPanel panel;
+    private JLabel descriptionLink;
+    private JPanel childPanel;
+    private JLabel arrowLabel;
+    private boolean expanded;
+
+    private interface IAction {
+        void execute(ActionTreeCellForm self);
+    }
+
+    private interface IParentAction extends IAction {}
+    private static IParentAction getParentAction(ActionTreeCellForm childAction) {
+        return (self) -> {
+            if (self.expanded) {
+                self.contract();
+            } else {
+                self.expand(childAction);
+            }
+        };
+    }
+
+    private ActionTreeCellForm(
+            @Nonnull String titleKey,
+            @Nullable String descriptionKey,
+            @Nullable String link,
+            @Nullable Icon icon,
+            @Nonnull IAction action) {
+        if (Strings.isNullOrEmpty(titleKey)) {
+            this.title.setVisible(false);
+        } else {
+            this.title.setText(ResourceBundle.getBundle("values/strings").getString(titleKey));
+            this.title.setIcon(icon.get());
+            this.title.setVisible(true);
+        }
+
+        if (Strings.isNullOrEmpty(descriptionKey)) {
+            this.description.setVisible(false);
+        } else {
+            this.description.setText(ResourceBundle.getBundle("values/strings").getString(descriptionKey));
+            this.description.setVisible(true);
+        }
+
+        if (Strings.isNullOrEmpty(link)) {
+            this.descriptionLink.setVisible(false);
+        } else {
+            this.descriptionLink.setText(ResourceBundle.getBundle("values/strings").getString("moreInfo"));
+            this.descriptionLink.setVisible(true);
+        }
+
+        this.expanded = false;
+
+        getComponent().addMouseListener(new MouseAdapter() {
+            @Override
+            public void mouseEntered(MouseEvent e) {
+                if (action instanceof IParentAction) {
+                    JPanel hovered = (JPanel) e.getComponent();
+                    for (Component c : hovered.getComponents()) {
+                        c.setBackground(JBColor.background().darker());
+                    }
+                    hovered.setBackground(JBColor.background().darker());
+                } else {
+                    e.getComponent().setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
+                }
+            }
+
+            @Override
+            public void mouseExited(MouseEvent e) {
+                e.getComponent().setCursor(Cursor.getDefaultCursor());
+                if (action instanceof IParentAction) {
+                    JPanel unhovered = (JPanel) e.getComponent();
+                    for (Component c : unhovered.getComponents()) {
+                        c.setBackground(UIUtil.getLabelBackground());
+                    }
+                    unhovered.setBackground(UIUtil.getLabelBackground());
+                } else {
+                    e.getComponent().setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
+                }
+            }
+
+            @Override
+            public void mouseClicked(MouseEvent e) {
+                action.execute(ActionTreeCellForm.this);
+            }
+        });
+
+        this.descriptionLink.addMouseListener(new ClickableMouseAdapter() {
+
+            @Override
+            public void mouseClicked(MouseEvent e) {
+                clickLink(link);
+            }
+        });
+
+        this.arrowLabel.setIcon(Icon.triangle_right.get());
+        if (!(action instanceof IParentAction)) {
+            this.arrowLabel.setVisible(false);
+        }
+    }
+
+    /**
+     * Expands (adds) the child view
+     */
+    private void expand(ActionTreeCellForm childAction) {
+        final GridConstraints gridConstraints = new GridConstraints();
+        gridConstraints.setRow(0);
+        gridConstraints.setColumn(0);
+        gridConstraints.setFill(GridConstraints.FILL_BOTH);
+        gridConstraints.setHSizePolicy(GridConstraints.ALIGN_FILL);
+        gridConstraints.setVSizePolicy(GridConstraints.ALIGN_FILL);
+        this.arrowLabel.setIcon(Icon.triangle_down.get());
+        childPanel.add(childAction.getComponent(), gridConstraints);
+        childPanel.setVisible(true);
+        childPanel.updateUI();
+        expanded = true;
+    }
+
+    /**
+     * Contracts (removes) the child view
+     */
+    private void contract() {
+        this.arrowLabel.setIcon(Icon.triangle_right.get());
+        childPanel.removeAll();
+        childPanel.setVisible(false);
+        childPanel.updateUI();
+        expanded = false;
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return this.panel;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/ActionTreeCellRenderer.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/ActionTreeCellRenderer.java
new file mode 100644
index 000000000..2df613be1
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/ActionTreeCellRenderer.java
@@ -0,0 +1,53 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import javax.swing.*;
+import javax.swing.tree.DefaultMutableTreeNode;
+import javax.swing.tree.TreeCellRenderer;
+import java.awt.*;
+
+// Based on: http://www.java2s.com/Code/Java/Swing-JFC/TreeCellRenderer.htm
+public class ActionTreeCellRenderer implements TreeCellRenderer {
+
+    @Override
+    public Component getTreeCellRendererComponent(
+            JTree tree,
+            Object value,
+            boolean selected,
+            boolean expanded,
+            boolean leaf,
+            int row,
+            boolean hasFocus) {
+
+        Component ret = null;
+
+        if (value != null && value instanceof DefaultMutableTreeNode) {
+            Object userObject = ((DefaultMutableTreeNode) value).getUserObject();
+            if (userObject instanceof ActionTreeCellForm) {
+                ret = ((ActionTreeCellForm) userObject).getComponent();
+                ret.setEnabled(tree.isEnabled());
+            }
+        }
+
+        return ret;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/BreadCrumb.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/BreadCrumb.form
new file mode 100644
index 000000000..0efa24e13
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/BreadCrumb.form
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.BreadCrumbForm">
+  <grid id="27dc6" binding="panel" layout-manager="GridLayoutManager" row-count="1" column-count="3" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="411" height="413"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="4bac8" class="javax.swing.JLabel" binding="facebookLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/glyph-nav-arrow-left.png"/>
+          <text resource-bundle="values/strings" key="facebook"/>
+        </properties>
+      </component>
+      <component id="c718e" class="javax.swing.JLabel" binding="actionLabel">
+        <constraints>
+          <grid row="0" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/glyph-chevron-right.png"/>
+          <text value="Label"/>
+        </properties>
+        <clientProperties>
+          <html.disable class="java.lang.Boolean" value="false"/>
+        </clientProperties>
+      </component>
+      <hspacer id="66c4b">
+        <constraints>
+          <grid row="0" column="2" row-span="1" col-span="1" vsize-policy="1" hsize-policy="6" anchor="0" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+      </hspacer>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/BreadCrumbForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/BreadCrumbForm.java
new file mode 100644
index 000000000..f012a753c
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/BreadCrumbForm.java
@@ -0,0 +1,49 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import javax.swing.*;
+import java.awt.event.MouseEvent;
+
+public class BreadCrumbForm implements Viewable {
+    private JPanel panel;
+    private JLabel facebookLabel;
+    private JLabel actionLabel;
+
+    BreadCrumbForm(FbToolWindowForm fbToolWindowForm) {
+        this.facebookLabel.addMouseListener(new ClickableMouseAdapter() {
+
+            @Override
+            public void mouseClicked(MouseEvent e) {
+                fbToolWindowForm.removeView();
+            }
+        });
+    }
+
+    public void setText(String text) {
+        actionLabel.setText(text);
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return this.panel;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/ClickableMouseAdapter.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/ClickableMouseAdapter.java
new file mode 100644
index 000000000..9ce22800a
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/ClickableMouseAdapter.java
@@ -0,0 +1,44 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import java.awt.*;
+import java.awt.event.MouseAdapter;
+import java.awt.event.MouseEvent;
+
+/**
+ * A MouseAdapter that handles changing the cursor to a clickable
+ * hand when hovering over the clickable object.
+ *
+ * Node: most likely you will want to implement {@link #mouseClicked(MouseEvent)}
+ */
+public class ClickableMouseAdapter extends MouseAdapter {
+
+    @Override
+    public void mouseEntered(MouseEvent e) {
+        e.getComponent().setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
+    }
+
+    @Override
+    public void mouseExited(MouseEvent e) {
+        e.getComponent().setCursor(Cursor.getDefaultCursor());
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/Code.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/Code.form
new file mode 100644
index 000000000..f51e098b3
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/Code.form
@@ -0,0 +1,51 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.CodeForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="BorderLayout" hgap="0" vgap="0">
+    <constraints>
+      <xy x="20" y="20" width="525" height="23"/>
+    </constraints>
+    <properties>
+      <background color="-14473683"/>
+      <enabled value="true"/>
+      <maximumSize width="-1" height="-1"/>
+      <minimumSize width="-1" height="-1"/>
+      <preferredSize width="-1" height="-1"/>
+      <toolTipText value="Copy code"/>
+    </properties>
+    <border type="bevel-lowered"/>
+    <children>
+      <grid id="790c3" class="org.fife.ui.rsyntaxtextarea.RSyntaxTextArea" binding="codeArea" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+        <margin top="0" left="0" bottom="0" right="10"/>
+        <constraints border-constraint="Center"/>
+        <properties>
+          <EOLMarkersVisible value="false"/>
+          <animateBracketMatching value="false"/>
+          <antiAliasingEnabled value="false"/>
+          <autoIndentEnabled value="true"/>
+          <background color="-14473683"/>
+          <bracketMatchingEnabled value="true"/>
+          <clearWhitespaceLinesEnabled value="false"/>
+          <closeCurlyBraces value="true"/>
+          <closeMarkupTags value="false"/>
+          <codeFoldingEnabled value="false"/>
+          <editable value="false"/>
+          <foreground color="-4473925"/>
+          <highlightCurrentLine value="false"/>
+          <highlightSecondaryLanguages value="false"/>
+          <hyperlinksEnabled value="false"/>
+          <lineWrap value="true"/>
+          <marginLineEnabled value="false"/>
+          <markAllOnOccurrenceSearches value="false"/>
+          <roundedSelectionEdges value="false"/>
+          <showMatchedBracketPopup value="false"/>
+          <syntaxEditingStyle value="text/java"/>
+          <text value="logger.logPurchase(BigDecimal.valueOf(4.32), Currency.getInstance(&quot;USD&quot;));"/>
+          <useSelectedTextColor value="false"/>
+          <whitespaceVisible value="false"/>
+        </properties>
+        <border type="none"/>
+        <children/>
+      </grid>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/CodeForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/CodeForm.java
new file mode 100644
index 000000000..6caed2d3c
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/CodeForm.java
@@ -0,0 +1,63 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
+import org.fife.ui.rsyntaxtextarea.Theme;
+
+import javax.swing.*;
+import java.awt.*;
+import java.awt.event.MouseAdapter;
+import java.awt.event.MouseEvent;
+import java.io.IOException;
+
+public class CodeForm implements Viewable {
+
+    private JPanel mainPanel;
+    private RSyntaxTextArea codeArea;
+
+    CodeForm(String codeBlock) {
+        try {
+            Theme theme = Theme.load(getClass().getResourceAsStream("/themes/dark.xml"));
+            theme.apply(codeArea);
+        } catch (IOException e) { /* no op */ }
+        codeArea.setText(codeBlock);
+        Dimension dimens = codeArea.getMinimumSize();
+        dimens.height += 20;
+        mainPanel.setMinimumSize(dimens);
+
+        codeArea.addMouseListener(new MouseAdapter() {
+            @Override
+            public void mouseClicked(MouseEvent e) {
+                codeArea.selectAll();
+            }
+        });
+    }
+
+    public String copy() {
+        return codeArea.getText();
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisitesForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/CodeFormContainer.java
similarity index 73%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisitesForm.java
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/CodeFormContainer.java
index b7e9f4e29..a6f61e25d 100644
--- a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisitesForm.java
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/CodeFormContainer.java
@@ -20,25 +20,12 @@
 
 package com.facebook.plugin.ui;
 
-import javax.swing.JComponent;
-import javax.swing.JPanel;
+import javax.swing.*;
+import java.awt.*;
 
-public class AccountKitPrerequisitesForm implements WizardStep {
-    private JPanel mainPanel;
+abstract class CodeFormContainer implements Viewable {
 
-    @Override
-    public JComponent getComponent() {
-        return mainPanel;
-    }
-
-    @Override
-    public void fillForm() {
-        // Nothing to fill
-    }
-
-    @Override
-    public boolean commitForm() {
-        // Nothing to commit
-        return true;
+    static void setCodeForm(final String codeBlock, JPanel codeContainer) {
+        codeContainer.add(new CodeForm(codeBlock).getComponent(), BorderLayout.CENTER);
     }
 }
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompleted.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/Completed.form
similarity index 76%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompleted.form
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/Completed.form
index 615760e18..993dae594 100644
--- a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompleted.form
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/Completed.form
@@ -1,20 +1,20 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.AccountKitCompletedForm">
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.CompletedForm">
   <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="2" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
     <margin top="0" left="0" bottom="0" right="0"/>
     <constraints>
-      <xy x="20" y="20" width="1069" height="369"/>
+      <xy x="20" y="20" width="2920" height="369"/>
     </constraints>
     <properties/>
     <border type="none"/>
     <children>
-      <component id="34af8" class="javax.swing.JLabel">
+      <component id="34af8" class="javax.swing.JLabel" binding="textLabel">
         <constraints>
-          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="1" use-parent-layout="false"/>
         </constraints>
         <properties>
           <horizontalTextPosition value="10"/>
-          <text resource-bundle="values/strings" key="completedText"/>
+          <text resource-bundle="values/strings" key="akCompletedText"/>
           <verticalAlignment value="1"/>
           <verticalTextPosition value="1"/>
         </properties>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/CompletedForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/CompletedForm.java
new file mode 100644
index 000000000..da7dbab39
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/CompletedForm.java
@@ -0,0 +1,53 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import javax.swing.*;
+import java.awt.event.MouseEvent;
+import java.util.ResourceBundle;
+
+public class CompletedForm implements WizardStep, LinkClickable {
+    private JPanel mainPanel;
+    private JLabel textLabel;
+
+    CompletedForm(final String textKey, final String linkUrl) {
+        textLabel.setText(ResourceBundle.getBundle("values/strings").getString(textKey));
+        textLabel.addMouseListener(new ClickableMouseAdapter() {
+            @Override
+            public void mouseClicked(MouseEvent e) {
+                clickLink(linkUrl);
+            }
+        });
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+
+    @Override
+    public void fillForm() { /* no op */ }
+
+    @Override
+    public boolean commitForm() {
+        return true;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookCoreCode.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookCoreCode.form
new file mode 100644
index 000000000..dfb27bbb3
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookCoreCode.form
@@ -0,0 +1,188 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.FacebookCoreCodeForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="11" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="10" right="10"/>
+    <constraints>
+      <xy x="20" y="20" width="435" height="975"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="1075f" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;br/&gt; Create an AppEventsLogger object and use the helper methods to log your events. To create a AppEventsLogger:&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="9c38f" class="com.intellij.openapi.roots.ui.componentsList.components.ScrollablePanel" binding="appEventsLoggerPanel" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="2" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="40"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="ef644" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="3" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;Where this is the Activity your method is in.&lt;br/&gt;&lt;br/&gt;You can then log your event to logger:&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="1c77" class="com.intellij.openapi.roots.ui.componentsList.components.ScrollablePanel" binding="logEventPanel" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="4" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="40"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="6285" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="5" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;Where AppEventConstants.EVENT_NAME_{XXXX} is one of the constants shown in the Events table (found at https://developers.facebook.com/docs/app-events/android).&lt;br/&gt;Or where &quot;battledAnOrc&quot; is a custom eventName of your choosing.&lt;br/&gt;&lt;br/&gt;You can also specify a set of parameters in a Bundle and a valueToSum property which is an arbitrary number that can represent any value (e.g., a price or a quantity). When reported, all of the valueToSum properties will be summed together. For example, if 10 people each purchased one item that cost $10 (and passed in valueToSum) then they would be summed to report a number of $100.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="62375" class="com.intellij.openapi.roots.ui.componentsList.components.ScrollablePanel" binding="bundleCodePanel" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="6" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="220"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="b2a7b" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="7" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;Note that both the valueToSum and parameters arguments are optional.&lt;br/&gt;&lt;br/&gt;The full list of pre-defined events and pre-defined parameters can be at https://developers.facebook.com/docs/app-events/android."/>
+        </properties>
+      </component>
+      <component id="8c05b" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="8" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;Use the Purchase helper method to log purchases with a single line of code:&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="706dc" class="com.intellij.openapi.roots.ui.componentsList.components.ScrollablePanel" binding="purchaseCodePanel" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="9" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="40"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="9bddc" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="10" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;The currency specification is expected to be an ISO 4217 currency code. This is used to determine a uniform value for use in ads optimization.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <hspacer id="45822">
+        <constraints>
+          <grid row="2" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="6" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+      <hspacer id="dd833">
+        <constraints>
+          <grid row="3" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="6" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+      <hspacer id="9426">
+        <constraints>
+          <grid row="4" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="6" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+      <hspacer id="9f9b5">
+        <constraints>
+          <grid row="5" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="6" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+      <hspacer id="7ae28">
+        <constraints>
+          <grid row="6" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="6" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+      <hspacer id="864fe">
+        <constraints>
+          <grid row="7" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="6" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+      <hspacer id="adc2">
+        <constraints>
+          <grid row="8" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="6" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+      <hspacer id="c7a6b">
+        <constraints>
+          <grid row="9" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="6" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+      <hspacer id="a2765">
+        <constraints>
+          <grid row="10" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="6" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+      <component id="654e4" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Logging Events Manually&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="8d710" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/2.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <hspacer id="76786">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="6" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookCoreCodeForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookCoreCodeForm.java
new file mode 100644
index 000000000..aab71dcfb
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookCoreCodeForm.java
@@ -0,0 +1,61 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.intellij.openapi.roots.ui.componentsList.components.ScrollablePanel;
+
+import javax.swing.*;
+
+public class FacebookCoreCodeForm extends CodeFormContainer {
+
+    private JPanel mainPanel;
+    private ScrollablePanel purchaseCodePanel;
+    private ScrollablePanel appEventsLoggerPanel;
+    private ScrollablePanel logEventPanel;
+    private ScrollablePanel bundleCodePanel;
+
+    FacebookCoreCodeForm() {
+        setCodeForm("logger.logPurchase(BigDecimal.valueOf(4.32), Currency.getInstance(\"USD\"));",
+                purchaseCodePanel);
+
+        setCodeForm("AppEventsLogger logger = AppEventsLogger.newLogger(this);",
+                appEventsLoggerPanel);
+
+        setCodeForm("logger.logEvent(AppEventsConstants.EVENT_NAME_{XXXXX});\n" +
+                        "\nlogger.logEvent(\"battledAnOrc\");",
+                logEventPanel);
+
+        setCodeForm("Bundle parameters = new Bundle();\n" +
+                "parameters.putString(AppEventsConstants.EVENT_PARAM_CURRENCY, \"USD\");\n" +
+                "parameters.putString(AppEventsConstants.EVENT_PARAM_CONTENT_TYPE, \"product\");\n" +
+                "parameters.putString(AppEventsConstants.EVENT_PARAM_CONTENT_ID, \"HDFU-8452\");\n" +
+                "\n" +
+                "logger.logEvent(AppEventsConstants.EVENT_NAME_ADDED_TO_CART,\n" +
+                "                54.23,\n" +
+                "                parameters);",
+                bundleCodePanel);
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return this.mainPanel;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookCoreIntegrationForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookCoreIntegrationForm.java
new file mode 100644
index 000000000..03f64f978
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookCoreIntegrationForm.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.facebook.plugin.config.AndroidResourcesConfigurator;
+import com.facebook.plugin.config.FacebookModuleConfigurator;
+import com.intellij.openapi.project.Project;
+
+import java.util.Collections;
+
+class FacebookCoreIntegrationForm extends FacebookIntegrationForm {
+
+    FacebookCoreIntegrationForm(final Project project) {
+        super(
+                project,
+                new FacebookModuleConfigurator(
+                        "com.facebook.android:facebook-core",
+                        Collections.singletonList(AndroidResourcesConfigurator.FB_APP_ID),
+                        Collections.EMPTY_LIST),
+                true,
+                "integrateFacebookCoreSDKBold",
+                "integrateFacebookCoreSDK");
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookInstallDependencies.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookInstallDependencies.form
new file mode 100644
index 000000000..d86c27a4d
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookInstallDependencies.form
@@ -0,0 +1,73 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.FacebookInstallDependenciesForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="5" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="1203" height="263"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="8c970" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="2" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalTextPosition value="10"/>
+          <text resource-bundle="values/strings" key="fbCconfigureSDKText"/>
+          <verticalAlignment value="1"/>
+          <verticalTextPosition value="1"/>
+        </properties>
+      </component>
+      <vspacer id="b1924">
+        <constraints>
+          <grid row="4" column="0" row-span="1" col-span="2" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
+        </constraints>
+      </vspacer>
+      <component id="ad7eb" class="javax.swing.JComboBox" binding="moduleSelector">
+        <constraints>
+          <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="2" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+      </component>
+      <component id="d2f86" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <labelFor value="ad7eb"/>
+          <text value="Module:"/>
+        </properties>
+      </component>
+      <component id="4ee59" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="2" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="App Id:"/>
+        </properties>
+      </component>
+      <component id="6b35e" class="javax.swing.JTextField" binding="appIdField">
+        <constraints>
+          <grid row="2" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="2" anchor="8" fill="0" indent="0" use-parent-layout="false">
+            <preferred-size width="300" height="-1"/>
+          </grid>
+        </constraints>
+        <properties>
+          <columns value="0"/>
+        </properties>
+      </component>
+      <component id="ade2c" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="3" column="0" row-span="1" col-span="2" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalTextPosition value="10"/>
+          <text resource-bundle="values/strings" key="fbConfigureParamsText"/>
+          <verticalAlignment value="1"/>
+          <verticalTextPosition value="1"/>
+        </properties>
+      </component>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookInstallDependenciesForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookInstallDependenciesForm.java
new file mode 100644
index 000000000..647108ecd
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookInstallDependenciesForm.java
@@ -0,0 +1,122 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.facebook.plugin.config.AndroidResourcesConfigurator;
+import com.facebook.plugin.config.AvailableModule;
+import com.facebook.plugin.config.FacebookModuleConfigurator;
+import com.intellij.openapi.project.Project;
+import com.intellij.openapi.ui.Messages;
+import org.apache.commons.lang.StringUtils;
+
+import javax.swing.*;
+
+public class FacebookInstallDependenciesForm implements WizardStep {
+
+    private static final String AVAILABLE_MODULE_CHANGED_ACTION = "availableModuleChangedAction";
+
+    private final Project project;
+    private FacebookModuleConfigurator moduleConfigurator;
+
+    private JPanel mainPanel;
+    private JComboBox<AvailableModule> moduleSelector;
+    private JTextField appIdField;
+
+    FacebookInstallDependenciesForm(
+            final Project project,
+            final FacebookModuleConfigurator configurator) {
+        this.project = project;
+        this.moduleConfigurator = configurator;
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+
+    @Override
+    public void fillForm() {
+        moduleSelector.setModel(new DefaultComboBoxModel<>(
+                moduleConfigurator.getAvailableModules(project)));
+
+        moduleSelector.setActionCommand(AVAILABLE_MODULE_CHANGED_ACTION);
+
+        moduleSelector.addActionListener(e -> {
+            if (AVAILABLE_MODULE_CHANGED_ACTION.contentEquals(e.getActionCommand())) {
+                appIdField.setText(
+                        moduleConfigurator.getConfiguredValue(
+                                ((AvailableModule)moduleSelector.getSelectedItem())
+                                        .getModule(),
+                                AndroidResourcesConfigurator.FB_APP_ID));
+            }
+        });
+        moduleSelector.setSelectedIndex(0);
+    }
+
+    @Override
+    public boolean commitForm() {
+        AvailableModule selectedModule =
+                (AvailableModule) moduleSelector.getSelectedItem();
+
+        if (selectedModule == null) {
+            Messages.showErrorDialog(
+                    project,
+                    "Please select a module to continue.",
+                    "Install Failed");
+            return false;
+        }
+
+        if (selectedModule.isUnavailable()) {
+            Messages.showErrorDialog(
+                    project,
+                    "Cannot install Facebook on module " +
+                            selectedModule.getModule().getName() +
+                            " because it either is not an Android module " +
+                            "or is not built using Gradle.",
+                    "Install Failed");
+            return false;
+        }
+
+        if (StringUtils.isBlank(appIdField.getText()) ||
+                !StringUtils.isNumeric(appIdField.getText())) {
+            Messages.showErrorDialog(
+                    project,
+                    "App Id must be a valid number.",
+                    "Install Failed");
+            return false;
+        }
+
+        moduleConfigurator.setAppId(appIdField.getText());
+
+        try {
+            moduleConfigurator.doConfigure(selectedModule.getModule());
+        } catch (Exception e) {
+            Messages.showErrorDialog(
+                    project,
+                    "Something went wrong while installing module " +
+                            selectedModule.getModule().getName() +
+                            ": \n" + e.getMessage(),
+                    "Install Failed");
+        }
+
+        return true;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookInstallerWizard.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookInstallerWizard.java
new file mode 100644
index 000000000..22c0468de
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookInstallerWizard.java
@@ -0,0 +1,48 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.facebook.plugin.config.FacebookModuleConfigurator;
+import com.intellij.openapi.project.Project;
+
+import javax.annotation.Nonnull;
+
+class FacebookInstallerWizard extends WizardDialog {
+
+    private static final String COMPLETE_STRING_KEY = "fbCompletedText";
+    private static final String REFERENCE_LINK_URL =
+            "https://developers.facebook.com/docs/facebook-login/android";
+
+    FacebookInstallerWizard(
+            @Nonnull final Project project,
+            final FacebookModuleConfigurator configurator) {
+        super(
+                project,
+                "Integrate Facebook SDK",
+                new WizardStep[] {
+                        new FacebookPrerequisitesForm(),
+                        new FacebookInstallDependenciesForm(
+                                project,
+                                configurator),
+                        new CompletedForm(COMPLETE_STRING_KEY, REFERENCE_LINK_URL)
+                });
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookIntegrationForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookIntegrationForm.java
new file mode 100644
index 000000000..85a06457b
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookIntegrationForm.java
@@ -0,0 +1,48 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.facebook.plugin.config.FacebookModuleConfigurator;
+import com.intellij.openapi.project.Project;
+
+abstract class FacebookIntegrationForm extends IntegrationButtonForm<FacebookModuleConfigurator> {
+
+    FacebookIntegrationForm(
+            final Project project,
+            final FacebookModuleConfigurator configurator,
+            final boolean requiresFBLogin,
+            final String titleKey,
+            final String buttonKey) {
+        super(project, configurator, requiresFBLogin, titleKey, buttonKey);
+
+        updateUI();
+    }
+
+    @Override
+    void onButtonClick(final Project project) {
+        FacebookInstallerWizard installerWizard =
+                new FacebookInstallerWizard(
+                        project,
+                        getConfigurator());
+        installerWizard.show();
+        updateUI();
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookLoginCode.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookLoginCode.form
new file mode 100644
index 000000000..7956101ad
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookLoginCode.form
@@ -0,0 +1,221 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.FacebookLoginCodeForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="20" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="10" right="10"/>
+    <constraints>
+      <xy x="20" y="20" width="347" height="3495"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="2442b" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;The simplest way to add Facebook Login to your app is to add LoginButton from the SDK. The LoginButton is a UI element that wraps functionality available in the LoginManager. When someone clicks on the button, the login is initiated with the permissions set in the LoginManager. The button follows the login state, and displays the correct text based on someone's authentication state.&lt;br/&gt;&lt;br/&gt;To add the Facebook Login button, first add it to your layout XML file with the full class name, com.facebook.widget.LoginButton:&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="ec460" binding="loginButtonPanel" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="2" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="150"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="c0201" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="3" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;Then set up the button in your UI by adding it to a fragment and update your activity to use your fragment.&lt;br/&gt;&lt;br/&gt;You can customize the properties of Login button and register a callback in your onCreateView() method. Properties you can customize includes LoginBehavior, DefaultAudience, ToolTipPopup.Style and permissions on the LoginButton. For example:&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="c1e56" binding="customizeButtonPanel" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="4" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="640"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="87b09" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="5" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;If you use the LoginButton in a fragment, you need to set the fragment on the button as shown by calling setFragment. Then call CallbackManager.Factory.create to create a callback manager to handle login responses.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="68996" binding="onCreatePanel" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="6" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="270"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="cfb02" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="7" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;Finally, call callbackManager.onActivityResult to pass the login results to the LoginManager via callbackManager.&lt;html/&gt;"/>
+        </properties>
+      </component>
+      <component id="1b3a3" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="9" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;To respond to a login result, you need to register a callback with either LoginManager or LoginButton. If you register the callback with LoginButton, don't need to register the callback on Login manager. You add the callback to your activity or fragment's onCreate() method:&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="af1e1" binding="registerCallbackCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="10" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="520"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="b1307" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="11" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;If login succeeds, the LoginResult parameter has the new AccessToken, and the most recently granted or declined permissions.&lt;br/&gt;&lt;br/&gt;You don't need a registerCallback for login to succeed, you can choose to follow current access token changes with the AccessTokenTracker class described below.&lt;br/&gt;&lt;br/&gt;Then in onActivityResult() forward the login results to the callbackManager created in onCreate():&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="aaa52" binding="onActivityResultCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="12" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="170"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="264a5" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="13" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;Every activity and fragment that you integrate with the FacebookSDK Login or Share should forward onActivityResult to the callbackManager.&lt;html/&gt;"/>
+        </properties>
+      </component>
+      <component id="a4761" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="15" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;Your app can only have one person at a time logged in, and LoginManager sets the current AccessToken and Profile for that person. The FacebookSDK saves this data in shared preferences and sets at the beginning of the session. You can see if a person is already logged in by checking AccessToken.getCurrentAccessToken() and Profile.getCurrentProfile().&lt;br/&gt;&lt;br/&gt;You can load AccessToken.getCurrentAccessToken with the SDK from cache or from an app book mark when your app cold launches. You should check its validity at your Activity's onCreate method:&lt;html/&gt;"/>
+        </properties>
+      </component>
+      <grid id="a14ac" binding="checkLoginStatusCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="16" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="230"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="9c78e" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="17" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;Then you can later perform the actual login, such as in a custom button's OnClickListener:&lt;html/&gt;"/>
+        </properties>
+      </component>
+      <grid id="88a2b" binding="performLoginCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="18" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="70"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="9828b" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="19" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;Finally, in the onActivityResult in your Activity, pass the result to the CallbackManager.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="87ac1" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Add the Facebook Login Button&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="5414f" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/2.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <hspacer id="b6171">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="0" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+      <component id="e15cb" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="8" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Register a Callback&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="499d2" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="8" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/3.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <component id="ff300" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="14" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Check Login Status&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="20199" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="14" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/4.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookLoginCodeForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookLoginCodeForm.java
new file mode 100644
index 000000000..d6d22b88d
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookLoginCodeForm.java
@@ -0,0 +1,148 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import javax.swing.*;
+
+public class FacebookLoginCodeForm extends CodeFormContainer {
+
+    private JPanel mainPanel;
+    private JPanel loginButtonPanel;
+    private JPanel customizeButtonPanel;
+    private JPanel onCreatePanel;
+    private JPanel registerCallbackCode;
+    private JPanel onActivityResultCode;
+    private JPanel checkLoginStatusCode;
+    private JPanel performLoginCode;
+
+    FacebookLoginCodeForm() {
+        setCodeForm("\n" +
+                "<com.facebook.login.widget.LoginButton\n" +
+                "    android:id=\"@+id/login_button\"\n" +
+                "    android:layout_width=\"wrap_content\"\n" +
+                "    android:layout_height=\"wrap_content\"\n" +
+                "    android:layout_gravity=\"center_horizontal\"\n" +
+                "    android:layout_marginTop=\"30dp\"\n" +
+                "    android:layout_marginBottom=\"30dp\" /> ", loginButtonPanel);
+
+        setCodeForm("\n" +
+                "@Override\n" +
+                "public View onCreateView(\n" +
+                "        LayoutInflater inflater,\n" +
+                "        ViewGroup container,\n" +
+                "        Bundle savedInstanceState) {\n" +
+                "    View view = inflater.inflate(R.layout.splash, container, false);\n" +
+                "\n" +
+                "    loginButton = (LoginButton) view.findViewById(R.id.login_button);\n" +
+                "    loginButton.setReadPermissions(\"email\");\n" +
+                "    // If using in a fragment\n" +
+                "    loginButton.setFragment(this);    \n" +
+                "    // Other app specific specialization\n" +
+                "\n" +
+                "    // Callback registration\n" +
+                "    loginButton.registerCallback(callbackManager, new FacebookCallback<LoginResult>() {\n" +
+                "        @Override\n" +
+                "        public void onSuccess(LoginResult loginResult) {\n" +
+                "            // App code\n" +
+                "        }\n" +
+                "\n" +
+                "        @Override\n" +
+                "        public void onCancel() {\n" +
+                "            // App code\n" +
+                "        }\n" +
+                "\n" +
+                "        @Override\n" +
+                "        public void onError(FacebookException exception) {\n" +
+                "            // App code\n" +
+                "        }\n" +
+                "    });    \n" +
+                "}", customizeButtonPanel);
+
+        setCodeForm("\n" +
+                "public class MainActivity extends FragmentActivity {\n" +
+                "    CallbackManager callbackManager;\n" +
+                "    @Override\n" +
+                "    public void onCreate(Bundle savedInstanceState) {\n" +
+                "        super.onCreate(savedInstanceState);\n" +
+                "        callbackManager = CallbackManager.Factory.create();\n" +
+                "        LoginButton loginButton = (LoginButton) " +
+                "view.findViewById(R.id.usersettings_fragment_login_button);\n" +
+                "        loginButton.registerCallback(callbackManager, " +
+                "new FacebookCallback<LoginResult>() { ... });\n" +
+                "    }\n" +
+                "}", onCreatePanel);
+
+        setCodeForm("\n" +
+                "@Override\n" +
+                "public void onCreate(Bundle savedInstanceState) {\n" +
+                "    super.onCreate(savedInstanceState);\n" +
+                "\n" +
+                "    callbackManager = CallbackManager.Factory.create();\n" +
+                "\n" +
+                "    LoginManager.getInstance().registerCallback(callbackManager,\n" +
+                "            new FacebookCallback<LoginResult>() {\n" +
+                "                @Override\n" +
+                "                public void onSuccess(LoginResult loginResult) {\n" +
+                "                    // App code\n" +
+                "                }\n" +
+                "\n" +
+                "                @Override\n" +
+                "                public void onCancel() {\n" +
+                "                     // App code\n" +
+                "                }\n" +
+                "\n" +
+                "                @Override\n" +
+                "                public void onError(FacebookException exception) {\n" +
+                "                     // App code   \n" +
+                "                }\n" +
+                "    });\n" +
+                "}", registerCallbackCode);
+
+        setCodeForm("\n" +
+                "@Override\n" +
+                "protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n" +
+                "    super.onActivityResult(requestCode, resultCode, data);\n" +
+                "    callbackManager.onActivityResult(requestCode, resultCode, data);\n" +
+                "}", onActivityResultCode);
+
+        setCodeForm("\n" +
+                "public class MainActivity extends FragmentActivity {\n" +
+                "    CallbackManager callbackManager;\n" +
+                "    @Override\n" +
+                "    public void onCreate(Bundle savedInstanceState) {\n" +
+                "        super.onCreate(savedInstanceState);\n" +
+                "        callbackManager = CallbackManager.Factory.create();\n" +
+                "        LoginManager.getInstance().registerCallback(callbackManager, " +
+                "new FacebookCallback<LoginResult>() {...});\n" +
+                "    }\n" +
+                "}", checkLoginStatusCode);
+
+        setCodeForm("\n" +
+                "LoginManager.getInstance().logInWithReadPermissions(this, Arrays.asList(\"public_profile\"));",
+                performLoginCode);
+
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return this.mainPanel;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookLoginIntegrationForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookLoginIntegrationForm.java
new file mode 100644
index 000000000..f683a1ed5
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookLoginIntegrationForm.java
@@ -0,0 +1,59 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.facebook.plugin.config.AndroidActivity;
+import com.facebook.plugin.config.AndroidResourcesConfigurator;
+import com.facebook.plugin.config.FacebookModuleConfigurator;
+import com.intellij.openapi.project.Project;
+
+import java.util.Arrays;
+
+class FacebookLoginIntegrationForm extends FacebookIntegrationForm {
+
+    FacebookLoginIntegrationForm(final Project project) {
+        super(
+                project,
+                new FacebookModuleConfigurator(
+                        "com.facebook.android:facebook-login",
+                        Arrays.asList(
+                                AndroidResourcesConfigurator.FB_APP_ID,
+                                AndroidResourcesConfigurator.FB_LOGIN_PROTOCOL_SCHEME),
+                        Arrays.asList(
+                                new AndroidActivity(
+                                        "com.facebook.FacebookActivity",
+                                        true,
+                                        "@string/app_name",
+                                        null,
+                                        null,
+                                        false),
+                                new AndroidActivity(
+                                        "com.facebook.CustomTabActivity",
+                                        false,
+                                        null,
+                                        true,
+                                        AndroidActivity.FB_SCHEME_VALUE,
+                                        false))),
+                true,
+                "integrateFacebookLoginSDKBold",
+                "integrateFacebookLoginSDK");
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookMessengerCode.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookMessengerCode.form
new file mode 100644
index 000000000..f254c9303
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookMessengerCode.form
@@ -0,0 +1,213 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.FacebookMessengerCodeForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="17" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="10" right="10"/>
+    <constraints>
+      <xy x="20" y="20" width="443" height="2437"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="b2db8" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt; With Messenger integration, you can share images, videos, animated gifs, and audio clips. You can use the Facebook SDK or share directly through Intents. We highly recommend using the SDK, as it provides a convenient API and handles edge cases such as different versions of Messenger, as well as Messenger being absent on a phone, correctly. &lt;/br&gt; The sample code below illustrates usage of MessengerUtils to share an image (a jpeg, in this case) to Messenger:&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="660d8" binding="messengerUtilsCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="2" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="250"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="129f7" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="4" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;  If you're supporting optimized integration, you can send extra metadata that contains information about the content being shared. For example, you can store a serialized JSON string, which your app will be able to acces in the Reply flow on the receiver's device - if a person taps &quot;Reply&quot; on content with metadata, this information will be relayed back to your app.  In order to add metadata to your content, add it to the ShareToMessengerParams:&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="5ff8" binding="additionalParametersCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="5" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="230" height="130"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="ffc43" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="7" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;  The Messenger SDK includes assets for Messenger-themed buttons. These buttons are available in blue and white, and in rectangular or circular shapes. The layouts for these buttons are available under /res/layout/:&#10;&lt;br/&gt;&#10;&lt;br/&gt;- messenger_button_send_blue_small.xml&#10;&lt;br/&gt;- messenger_button_send_blue_large.xml  &#10;&lt;br/&gt;- messenger_button_send_blue_round.xml&#10;&lt;br/&gt;- messenger_button_send_white_small.xml  &#10;&lt;br/&gt;- messenger_button_send_white_large.xml&#10;&lt;br/&gt;- messenger_button_send_white_round.xml &#10;&lt;br/&gt;&lt;br/&gt; &#10;You can use an include tag to place a Messenger button in your layout:"/>
+        </properties>
+      </component>
+      <grid id="809f5" binding="messengerButtonsCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="8" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="140"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="268a1" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="10" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt; Messenger may call into your app in two different situations: through the &quot;Reply&quot; button under attributed content, or through the composer tab. In order to handle these calls, add the following IntentFilter for an Activity in your AndroidManifest.xml:&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="d9d67" binding="manifestCallbackCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="11" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="230"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="b4c7a" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="12" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;Messenger will start the Activity tied to the IntentFilter with a call to startActivityForResult, and you should create and send the content back to Messenger from this Activity.  Save the state so that you know you know you came in through this flow. We're using a boolean mPicking.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="848c" binding="pickingCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="13" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="270"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="81893" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="15" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;  After the person creates their content, call the following to send it back to Messenger. Note that we call finishShareToMessenger if mPicking is true, otherwise we call shareToMessenger.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="e088" binding="sendingContentBackCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="16" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="260"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="545c5" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Sharing content&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="893ee" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/2.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <hspacer id="51516">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="0" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+      <component id="94aae" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="3" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Additional parameters&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="4a374" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="3" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/3.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <component id="f795e" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="6" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Using Messenger Buttons&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="ed3ec" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="6" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/4.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <component id="aea52" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="9" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Handling calls from Messenger&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="d1fe7" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="9" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/5.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <component id="4b422" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="14" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Sending content back to Messenger&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="25446" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="14" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/6.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookMessengerCodeForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookMessengerCodeForm.java
new file mode 100644
index 000000000..18723f058
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookMessengerCodeForm.java
@@ -0,0 +1,108 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import javax.swing.*;
+
+public class FacebookMessengerCodeForm extends CodeFormContainer {
+    private JPanel mainPanel;
+    private JPanel messengerUtilsCode;
+    private JPanel additionalParametersCode;
+    private JPanel messengerButtonsCode;
+    private JPanel manifestCallbackCode;
+    private JPanel pickingCode;
+    private JPanel sendingContentBackCode;
+
+    FacebookMessengerCodeForm() {
+        setCodeForm("\n" +
+                "String mimeType = \"image/jpeg\";\n" +
+                "\n" +
+                "// contentUri points to the content being shared to Messenger\n" +
+                "ShareToMessengerParams shareToMessengerParams =\n" +
+                "        ShareToMessengerParams.newBuilder(contentUri, mimeType)\n" +
+                "                .build();\n" +
+                "\n" +
+                "// Sharing from an Activity\n" +
+                "MessengerUtils.shareToMessenger(\n" +
+                "       this,\n" +
+                "       REQUEST_CODE_SHARE_TO_MESSENGER,\n" +
+                "       shareToMessengerParams);", messengerUtilsCode);
+
+        setCodeForm("\n" +
+                "String metadata = \"{ \\\"image\\\" : \\\"trees\\\" }\";\n" +
+                "ShareToMessengerParams shareToMessengerParams =\n" +
+                "        ShareToMessengerParams.newBuilder(contentUri, \"image/jpeg\")\n" +
+                "                .setMetaData(metadata)\n" +
+                "                .build();", additionalParametersCode);
+
+        setCodeForm("\n" +
+                "<LinearLayout>\n" +
+                "  <!-- Include this in your layout -->\n" +
+                "  <include layout=\"@layout/messenger_button_send_blue_large\" />    \n" +
+                "\n" +
+                "</LinearLayout>", messengerButtonsCode);
+
+        setCodeForm("\n" +
+                "<activity ...>\n" +
+                "\n" +
+                "  <intent-filter>\n" +
+                "      <action android:name=\"android.intent.action.PICK\"/>\n" +
+                "      <category android:name=\"android.intent.category.DEFAULT\" />\n" +
+                "      <category android:name=\"com.facebook.orca.category.PLATFORM_THREAD_20150314\" />\n" +
+                "  </intent-filter>\n" +
+                "\n" +
+                "</activity>", manifestCallbackCode);
+
+        setCodeForm("\n" +
+                "// Are we in a PICK flow?\n" +
+                "private boolean mPicking;\n" +
+                "\n" +
+                "Intent intent = getIntent();\n" +
+                "\n" +
+                "if (Intent.ACTION_PICK.equals(intent.getAction())) {\n" +
+                "    mPicking = true;    \n" +
+                "    MessengerThreadParams mThreadParams = MessengerUtils.getMessengerThreadParamsForIntent(intent);\n" +
+                "    \n" +
+                "    String metadata = mThreadParams.metadata;\n" +
+                "    List<String> participantIds = mThreadParams.participants;\n" +
+                "}", pickingCode);
+
+        setCodeForm("\n" +
+                "ShareToMessengerParams shareToMessengerParams =\n" +
+                "    ShareToMessengerParams.newBuilder(contentUri, \"image/jpeg\")\n" +
+                "        .setMetaData(\"{ \\\"image\\\" : \\\"trees\\\" }\")\n" +
+                "        .build();\n" +
+                "\n" +
+                "if (mPicking) {\n" +
+                "    MessengerUtils.finishShareToMessenger(this, shareToMessengerParams);\n" +
+                "} else {  \n" +
+                "    MessengerUtils.shareToMessenger(\n" +
+                "        this,\n" +
+                "        REQUEST_CODE_SHARE_TO_MESSENGER,\n" +
+                "        shareToMessengerParams);\n" +
+                "}", sendingContentBackCode);
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return this.mainPanel;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookMessengerIntegrationForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookMessengerIntegrationForm.java
new file mode 100644
index 000000000..9f05df2e1
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookMessengerIntegrationForm.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.facebook.plugin.config.AndroidResourcesConfigurator;
+import com.facebook.plugin.config.FacebookModuleConfigurator;
+import com.intellij.openapi.project.Project;
+
+import java.util.Collections;
+
+class FacebookMessengerIntegrationForm extends FacebookIntegrationForm {
+
+    FacebookMessengerIntegrationForm(final Project project) {
+        super(
+                project,
+                new FacebookModuleConfigurator(
+                        "com.facebook.android:facebook-messenger",
+                        Collections.singletonList(AndroidResourcesConfigurator.FB_APP_ID),
+                        Collections.EMPTY_LIST),
+                true,
+                "integrateFacebookMessengerSDKBold",
+                "integrateFacebookMessengerSDK");
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookPlacesCode.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookPlacesCode.form
new file mode 100644
index 000000000..fd23a9914
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookPlacesCode.form
@@ -0,0 +1,106 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.FacebookPlacesCodeForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="8" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="10" right="10"/>
+    <constraints>
+      <xy x="20" y="20" width="432" height="1712"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="6d53c" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;The following example code demonstrates how to build a request for searching for places around the current device location. The SDK automatically retrieves the device location.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="af1cf" binding="placeSearchCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="2" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="89b89" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="4" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;The following code example demonstrates how to handle the response.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="eb5d" binding="handleResponseCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="5" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="660"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="1930f" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="6" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;The following code example demonstrates how to create a request to search for places around a specified location, and it also demonstrates how to use a search query.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="91ea9" binding="providedLocationCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="7" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="540"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="8f038" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Place Search&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="a9c2f" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/2.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <component id="c286a" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="3" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;How to Handle the Response&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="61c2a" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="3" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/3.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <hspacer id="59763">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="0" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookPlacesCodeForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookPlacesCodeForm.java
new file mode 100644
index 000000000..d0514bc38
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookPlacesCodeForm.java
@@ -0,0 +1,108 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import javax.swing.*;
+
+public class FacebookPlacesCodeForm extends CodeFormContainer {
+
+    private JPanel mainPanel;
+    private JPanel placeSearchCode;
+    private JPanel handleResponseCode;
+    private JPanel providedLocationCode;
+
+    FacebookPlacesCodeForm() {
+        setCodeForm("\n" +
+                "PlaceSearchRequestParams.Builder builder = \n" +
+                "      new PlaceSearchRequestParams.Builder();\n" +
+                "\n" +
+                "builder.setSearchText(\"Cafe\");\n" +
+                "builder.setDistance(1000); // 1,000 m. max distance.\n" +
+                "builder.setLimit(10);\n" +
+                "builder.addField(PlaceFields.NAME);\n" +
+                "builder.addField(PlaceFields.LOCATION);\n" +
+                "builder.addField(PlaceFields.PHONE);\n" +
+                "\n" +
+                "PlaceSearchRequestCallback callback = new PlaceSearchRequestCallback();\n" +
+                "\n" +
+                "// The SDK will automatically retrieve the device location and invoke \n" +
+                "// the OnRequestReadyCallback when the request is ready to be executed.\n" +
+                "PlaceManager.newPlaceSearchRequest(builder.build(), callback);", placeSearchCode);
+
+        setCodeForm("\n" +
+                "private class PlaceSearchRequestCallback\n" +
+                "    implements PlaceManager.OnRequestReadyCallback, GraphRequest.Callback {\n" +
+                "\n" +
+                "    @Override\n" +
+                "    public void onRequestReady(GraphRequest graphRequest) {\n" +
+                "        // The place search request is ready to be executed.\n" +
+                "        // The request can be customized here if needed.\n" +
+                "\n" +
+                "        // Sets the callback and executes the request.\n" +
+                "        graphRequest.setCallback(this);\n" +
+                "        graphRequest.executeAsync();\n" +
+                "    }\n" +
+                "\n" +
+                "    @Override\n" +
+                "    public void onCompleted(GraphResponse response) {\n" +
+                "        // This event is invoked when the place search response is received.\n" +
+                "        // Parse the places from the response object.\n" +
+                "    }\n" +
+                "\n" +
+                "    @Override\n" +
+                "    public void onLocationError(PlaceManager.LocationError error) {\n" +
+                "        // Invoked if the Places Graph SDK failed to retrieve\n" +
+                "        // the device location.\n" +
+                "    }\n" +
+                "}", handleResponseCode);
+
+        setCodeForm("\n" +
+                "PlaceSearchRequestParams.Builder builder = \n" +
+                "      new PlaceSearchRequestParams.Builder();\n" +
+                "\n" +
+                "builder.setSearchText(\"Cafe\");\n" +
+                "builder.setDistance(1000); // 1,000 meter maximum distance.\n" +
+                "builder.setLimit(10);\n" +
+                "builder.addField(PlaceFields.NAME);\n" +
+                "builder.addField(PlaceFields.LOCATION);\n" +
+                "builder.addField(PlaceFields.PHONE);\n" +
+                "\n" +
+                "// Get the current location from LocationManager or FusedLocationProviderApi\n" +
+                "Location location = getCurrentLocation();\n" +
+                "\n" +
+                "GraphRequest request =\n" +
+                "    PlaceManager.newPlaceSearchRequestForLocation(builder.build(), location);\n" +
+                "\n" +
+                "request.setCallback(new GraphRequest.Callback() {\n" +
+                "    @Override\n" +
+                "    public void onCompleted(GraphResponse response) {\n" +
+                "        // Handle the response.\n" +
+                "    }\n" +
+                "});\n" +
+                "      \n" +
+                "request.executeAsync();", providedLocationCode);
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return this.mainPanel;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookPlacesIntegrationForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookPlacesIntegrationForm.java
new file mode 100644
index 000000000..6848e6c25
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookPlacesIntegrationForm.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.facebook.plugin.config.AndroidResourcesConfigurator;
+import com.facebook.plugin.config.FacebookModuleConfigurator;
+import com.intellij.openapi.project.Project;
+
+import java.util.Collections;
+
+class FacebookPlacesIntegrationForm extends FacebookIntegrationForm {
+
+    FacebookPlacesIntegrationForm(final Project project) {
+        super(
+                project,
+                new FacebookModuleConfigurator(
+                        "com.facebook.android:facebook-places",
+                        Collections.singletonList(AndroidResourcesConfigurator.FB_APP_ID),
+                        Collections.EMPTY_LIST),
+                true,
+                "integrateFacebookPlacesSDKBold",
+                "integrateFacebookPlacesSDK");
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookPrerequisites.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookPrerequisites.form
new file mode 100644
index 000000000..124a00ff2
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookPrerequisites.form
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.FacebookPrerequisitesForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="4" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="668" height="268"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <vspacer id="7eab4">
+        <constraints>
+          <grid row="3" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
+        </constraints>
+      </vspacer>
+      <component id="ec42d" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Prerequisites&lt;/h2&gt;Before you begin integrating Facebook into your app, make sure you have completed the following prerequisites&lt;p/&gt;If you already have a Facebook App configured, please continue onto the next page.&lt;p/&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="321b7" class="javax.swing.JLabel" binding="step1Label">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/1.png"/>
+          <text value="&lt;html&gt;&lt;h3&gt;Create a Developer Account&lt;/h3&gt;If you don't have a Facebook developer account, create one by going to&lt;br/&gt;&lt;a href=&quot;https://developers.facebook.com/apps/&quot;&gt;https://developers.facebook.com/apps/&lt;/a&gt;.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="cf8d1" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="2" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;br/&gt;Your Facebook developer account gives you access to developer tools and allows you to create Facebook apps.&lt;/html&gt;"/>
+        </properties>
+      </component>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookPrerequisitesForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookPrerequisitesForm.java
new file mode 100644
index 000000000..2c7ba4582
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookPrerequisitesForm.java
@@ -0,0 +1,44 @@
+// Copyright 2004-present Facebook. All Rights Reserved.
+
+package com.facebook.plugin.ui;
+
+import javax.swing.*;
+import java.awt.*;
+import java.awt.event.MouseAdapter;
+import java.awt.event.MouseEvent;
+
+public class FacebookPrerequisitesForm implements WizardStep, LinkClickable {
+
+    private static final String STEP_1_LINK = "https://developers.facebook.com/apps/";
+
+    private JPanel mainPanel;
+    private JLabel step1Label;
+
+    FacebookPrerequisitesForm() {
+        MouseAdapter mouseAdapter = new ClickableMouseAdapter() {
+
+            @Override
+            public void mouseClicked(MouseEvent e) {
+                Component component = e.getComponent();
+                if (component == step1Label) {
+                    clickLink(STEP_1_LINK);
+                }
+            }
+        };
+
+        this.step1Label.addMouseListener(mouseAdapter);
+    }
+
+    @Override
+    public void fillForm() { /* no op */ }
+
+    @Override
+    public boolean commitForm() {
+        return true;
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookShareCode.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookShareCode.form
new file mode 100644
index 000000000..5f3f71c6a
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookShareCode.form
@@ -0,0 +1,391 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.FacebookShareCodeForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="35" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="10" right="10"/>
+    <constraints>
+      <xy x="20" y="20" width="551" height="4569"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="9fe90" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;When people share links from your app to Facebook, it includes a contentURL with the link to be shared. Build your share content for links into the ShareLinkContent model. For a list of all attributes, see ShareLinkContent reference.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="1f8bf" binding="shareLinkCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="2" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="150"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="8b9a8" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="4" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;People can share photos from your app to Facebook with the Share Dialog or with a custom interface.&lt;br/&gt;&lt;br/&gt;The photos must be less than 12MB in size&lt;br/&gt;People need the native Facebook for Android app installed, version 7.0 or higher&lt;br/&gt;&lt;br/&gt;Build your share content for photos into the SharePhotoContent model. For a list of all attributes, see SharePhotoContent reference.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="84852" binding="sharePhotoCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="5" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="180"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="c26a0" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="7" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;People using your app can share videos to Facebook with the Share dialog or with your own custom interface.&lt;br/&gt;&lt;br/&gt;Videos must be less than 12MB in size.&lt;br/&gt;&lt;br/&gt;Build your share content for videos into the ShareVideoContent model. For a list of all attributes, see ShareVideoContent reference.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="17d79" binding="shareVideoCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="8" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="180"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="8cee3" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="10" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;People can share a combination of photos and videos from your app to Facebook with the Share Dialog. Note the following:&lt;br/&gt;&lt;br/&gt;People need the native Facebook for Android app installed, version 71 or higher. &lt;br/&gt;Photos must be less than 12MB in size. &lt;br/&gt;Videos must be less than 12MB in size. &lt;br/&gt;People can share a maximum of 6 photos and videos at a time. &lt;br/&gt;&lt;br/&gt;Build your multimedia share content with the ShareMediaContent model. For a list of all attributes, see ShareMediaContent reference.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="bfdf2" binding="shareMultimediaCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="11" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="420"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="7049a" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="12" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Buttons&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="a97b8" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="13" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Like Button&lt;/h2&gt;&#10;The Like button is a quick way for people to share content with their friends. A tap on the Like button will 'like' pieces of content from your app and share them on Facebook. The Like button can be used to like a Facebook Page or any Open Graph object and can be referenced by URL or ID. To add a Like button add the following code snippet to your view:&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="c15c5" binding="likeButtonCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="14" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="120"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="29d94" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="15" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Share Button&lt;/h2&gt;&#10;The Share button will call a Share dialog. To add a Share button add the following code snippet to your view:&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="203cd" binding="shareButtonCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="16" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="100"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="f8e65" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="17" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Send Button&lt;/h2&gt;&#10;The Send button lets people privately send photos, videos and links to their friends and contacts using the Facebook Messenger. The Send button will call a Message dialog. To add a Send button to your view add the following code snippet to your view:&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="586d1" binding="sendButtonCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="18" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="120"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="530f9" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="20" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Share Dialog&lt;/h2&gt;The Share dialog switches to the native Facebook for Android app, then returns control to your app after a post is published. Depending on the SDK you're using, people may need tap the back arrow icon to return to your app. If the Facebook app is not installed, the Share dialog automatically falls back to the web-based dialog.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="84b15" binding="shareDialogCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="21" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="50"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="8c1fc" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="22" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;For example, to show the ShareDialog for a link in your activity, create a ShareDialog instance in your onCreate method:&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="a2597" binding="shareDialogOnCreateCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="23" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="270"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="2bdcc" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="24" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;Then show the ShareDialog:&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="7cda7" binding="shareDialogShowCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="25" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="200"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="17af4" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="26" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;Finally call the SDK's callbackManager in your onActivityResult to handle the response:&#10;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="cec5a" binding="shareDialogOnActivityResultCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="27" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="200"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="8a9a5" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="28" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Message Dialog&lt;/h2&gt;The Message dialog switches to the native Messenger for Android app, then returns control to your app after a post is published. Depending on the SDK you're using, people may need tap the back arrow icon to return to your app.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="f27c0" binding="messageDialogCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="29" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="50"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="f4ebd" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="31" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt; When you use the Facebook share dialog, you have additional options that aren't available when you share by using the API. &lt;h2&gt;Hashtags&lt;/h2&gt; You can specify a single hashtag to appear with a shared photo, link, or video. This hashtag also appears in the Share dialog, and people have the the opportunity to remove it before publishing. &lt;br/&gt;&lt;br/&gt; The following is an example of adding a hashtag to a link share.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="ae6ec" binding="hashtagsCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="32" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="200"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="a621e" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="33" column="1" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Quote Sharing&lt;/h2&gt;&#10;You can enable people to highlight text to appear as a quote with a shared link. Alternatively, you can predefine a quote, for example, a pull quote in an article, to appear with the shared link. In either case, the quote appears in its own field separate from the user comments.&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <grid id="49d3c" binding="quoteSharingCode" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="34" column="1" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false">
+            <minimum-size width="220" height="160"/>
+          </grid>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <component id="cbf04" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Integrate Sharing&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="de5b6" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/2.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <component id="e4656" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="3" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Photos&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <hspacer id="9426d">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="0" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+      <component id="a0460" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="3" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/3.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <component id="399dc" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="6" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Videos&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="580bd" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="6" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/4.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <component id="14e6a" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="9" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Multimedia&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="36475" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="9" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/5.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <component id="87b1e" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="12" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/6.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <component id="963be" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="19" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Dialogs&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="7b4cf" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="19" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/7.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <component id="6edf1" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="30" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;h2&gt;Additional Features&lt;/h2&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+      <component id="7981d" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="30" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/8.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookShareCodeForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookShareCodeForm.java
new file mode 100644
index 000000000..570ae6717
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookShareCodeForm.java
@@ -0,0 +1,168 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import javax.swing.*;
+
+public class FacebookShareCodeForm extends CodeFormContainer {
+
+    private JPanel mainPanel;
+    private JPanel shareLinkCode;
+    private JPanel sharePhotoCode;
+    private JPanel shareVideoCode;
+    private JPanel shareMultimediaCode;
+    private JPanel likeButtonCode;
+    private JPanel shareButtonCode;
+    private JPanel sendButtonCode;
+    private JPanel shareDialogCode;
+    private JPanel shareDialogOnCreateCode;
+    private JPanel shareDialogShowCode;
+    private JPanel shareDialogOnActivityResultCode;
+    private JPanel messageDialogCode;
+    private JPanel hashtagsCode;
+    private JPanel quoteSharingCode;
+
+    FacebookShareCodeForm() {
+        setCodeForm("\n" +
+                "ShareLinkContent content = new ShareLinkContent.Builder()\n" +
+                "        .setContentUrl(Uri.parse(\"https://developers.facebook.com\"))\n" +
+                "        .build();", shareLinkCode);
+
+        setCodeForm("\n" +
+                "Bitmap image = ...\n" +
+                "SharePhoto photo = new SharePhoto.Builder()\n" +
+                "        .setBitmap(image)\n" +
+                "        .build();\n" +
+                "SharePhotoContent content = new SharePhotoContent.Builder()\n" +
+                "        .addPhoto(photo)\n" +
+                "        .build();", sharePhotoCode);
+
+        setCodeForm("\n" +
+                "Uri videoFileUri = ...\n" +
+                "ShareVideo = new ShareVideo.Builder()\n" +
+                "        .setLocalUrl(videoUrl)\n" +
+                "        .build();\n" +
+                "ShareVideoContent content = new ShareVideoContent.Builder()\n" +
+                "        .setVideo(video)\n" +
+                "        .build();", shareVideoCode);
+
+        setCodeForm("\n" +
+                "SharePhoto sharePhoto1 = new SharePhoto.Builder()\n" +
+                "    .setBitmap(...)\n" +
+                "    .build();\n" +
+                "SharePhoto sharePhoto2 = new SharePhoto.Builder()\n" +
+                "    .setBitmap(...)\n" +
+                "    .build();\n" +
+                "ShareVideo shareVideo1 = new ShareVideo.Builder()\n" +
+                "    .setLocalUrl(...)\n" +
+                "    .build();\n" +
+                "ShareVideo shareVideo2 = new ShareVideo.Builder()\n" +
+                "    .setLocalUrl(...)\n" +
+                "    .build();\n" +
+                "\n" +
+                "ShareContent shareContent = new ShareMediaContent.Builder()\n" +
+                "    .addMedium(sharePhoto1)\n" +
+                "    .addMedium(sharePhoto2)\n" +
+                "    .addMedium(shareVideo1)\n" +
+                "    .addMedium(shareVideo2)\n" +
+                "    .build();\n" +
+                "\n" +
+                "ShareDialog shareDialog = new ShareDialog(...);\n" +
+                "shareDialog.show(shareContent, Mode.AUTOMATIC);", shareMultimediaCode);
+
+
+        setCodeForm("\n" +
+                "LikeView likeView = (LikeView) findViewById(R.id.like_view);\n" +
+                "likeView.setObjectIdAndType(\n" +
+                "    \"https://www.facebook.com/FacebookDevelopers\",\n" +
+                "    LikeView.ObjectType.PAGE);", likeButtonCode);
+
+
+        setCodeForm("\n" +
+                "ShareButton shareButton = (ShareButton)findViewById(R.id.fb_share_button);\n" +
+                "shareButton.setShareContent(content);", shareButtonCode);
+
+
+        setCodeForm("\n" +
+                "SendButton sendButton = (SendButton)findViewById(R.id.fb_send_button);\n" +
+                "sendButton.setShareContent(shareContent);\n" +
+                "sendButton.registerCallback(callbackManager, new FacebookCallback<Sharer.Result>() { ... });",
+                sendButtonCode);
+
+
+        setCodeForm("\n" +
+                "ShareDialog.show(activityOrFragment, content);", shareDialogCode);
+
+        setCodeForm("\n" +
+                "public class MainActivity extends FragmentActivity {\n" +
+                "    CallbackManager callbackManager;\n" +
+                "    ShareDialog shareDialog;\n" +
+                "    @Override\n" +
+                "    public void onCreate(Bundle savedInstanceState) {\n" +
+                "        super.onCreate(savedInstanceState);\n" +
+                "        callbackManager = CallbackManager.Factory.create();\n" +
+                "        shareDialog = new ShareDialog(this);\n" +
+                "        // this part is optional\n" +
+                "        shareDialog.registerCallback(callbackManager, " +
+                "new FacebookCallback<Sharer.Result>() { ... });\n" +
+                "    }", shareDialogOnCreateCode);
+
+
+        setCodeForm("\n" +
+                "if (ShareDialog.canShow(ShareLinkContent.class)) {\n" +
+                "    ShareLinkContent linkContent = new ShareLinkContent.Builder()\n" +
+                "            .setContentUrl(Uri.parse(\"http://developers.facebook.com/android\"))\n" +
+                "            .build();\n" +
+                "    shareDialog.show(linkContent);\n" +
+                "}", shareDialogShowCode);
+
+
+        setCodeForm("\n" +
+                "@Override\n" +
+                "protected void onActivityResult(final int requestCode, final int resultCode, final Intent data) {\n" +
+                "    super.onActivityResult(requestCode, resultCode, data);\n" +
+                "    callbackManager.onActivityResult(requestCode, resultCode, data);\n" +
+                "}", shareDialogOnActivityResultCode);
+
+
+        setCodeForm("\n" +
+                "MessageDialog.show(activityOrFragment, content);", messageDialogCode);
+
+        setCodeForm("\n" +
+                "ShareLinkContent content = new ShareLinkContent.Builder()\n" +
+                "        .setContentUrl(Uri.parse(\"https://developers.facebook.com\"))\n" +
+                "        .setShareHashtag(new ShareHashtag.Builder()\n" +
+                "                .setHashtag(\"#ConnectTheWorld\")\n" +
+                "                .build());\n" +
+                "        .build();", hashtagsCode);
+
+        setCodeForm("\n" +
+                "ShareLinkContent content = new ShareLinkContent.Builder()\n" +
+                "        .setContentUrl(Uri.parse(\"https://developers.facebook.com\"))\n" +
+                "        .setQuote(\"Connect on a global scale.\")\n" +
+                "        .build();", quoteSharingCode);
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return this.mainPanel;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookShareIntegrationForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookShareIntegrationForm.java
new file mode 100644
index 000000000..ced151966
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FacebookShareIntegrationForm.java
@@ -0,0 +1,50 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.facebook.plugin.config.AndroidActivity;
+import com.facebook.plugin.config.AndroidResourcesConfigurator;
+import com.facebook.plugin.config.FacebookModuleConfigurator;
+import com.intellij.openapi.project.Project;
+
+import java.util.Collections;
+
+class FacebookShareIntegrationForm extends FacebookIntegrationForm {
+
+    FacebookShareIntegrationForm(final Project project) {
+        super(
+                project,
+                new FacebookModuleConfigurator(
+                        "com.facebook.android:facebook-share",
+                        Collections.singletonList(AndroidResourcesConfigurator.FB_APP_ID),
+                        Collections.singletonList(
+                                new AndroidActivity(
+                                        "com.facebook.FacebookContentProvider",
+                                        false,
+                                        null,
+                                        true,
+                                        null,
+                                        true))),
+                true,
+                "integrateFacebookShareSDKBold",
+                "integrateFacebookShareSDK");
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FbToolWindow.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FbToolWindow.form
new file mode 100644
index 000000000..489f1208b
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FbToolWindow.form
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.FbToolWindowForm">
+  <grid id="27dc6" binding="containerPanel" layout-manager="GridLayoutManager" row-count="4" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="190" height="476"/>
+    </constraints>
+    <properties/>
+    <clientProperties>
+      <html.disable class="java.lang.Boolean" value="false"/>
+    </clientProperties>
+    <border type="none" title=""/>
+    <children>
+      <grid id="37ba1" binding="headerPanel" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <grid id="efc2b" binding="titlePanel" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="0" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <scrollpane id="1324d" binding="scrollPane">
+        <constraints>
+          <grid row="2" column="0" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalScrollBarPolicy value="31"/>
+          <verticalScrollBarPolicy value="20"/>
+        </properties>
+        <border type="none"/>
+        <children>
+          <grid id="d0ec0" class="com.intellij.openapi.roots.ui.componentsList.components.ScrollablePanel" binding="contentPanel" layout-manager="BorderLayout" hgap="0" vgap="0">
+            <constraints/>
+            <properties/>
+            <border type="none"/>
+            <children/>
+          </grid>
+        </children>
+      </scrollpane>
+      <grid id="eb0d9" binding="footerPanel" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="3" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FbToolWindowForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FbToolWindowForm.java
new file mode 100644
index 000000000..785acb081
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/FbToolWindowForm.java
@@ -0,0 +1,148 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.intellij.openapi.project.Project;
+import com.intellij.openapi.roots.ui.componentsList.components.ScrollablePanel;
+import com.intellij.openapi.wm.ToolWindow;
+import com.intellij.openapi.wm.ToolWindowFactory;
+import com.intellij.ui.content.Content;
+import com.intellij.ui.content.ContentFactory;
+import org.jetbrains.annotations.NotNull;
+
+import javax.swing.*;
+import java.awt.*;
+import java.util.ResourceBundle;
+
+public class FbToolWindowForm implements ToolWindowFactory {
+
+    // global
+    private static ToolWindow sToolWindow;
+    private JPanel containerPanel;
+    // header
+    private JPanel headerPanel;
+    private BreadCrumbForm header;
+    // title
+    private JPanel titlePanel;
+    private TitlePanelForm defaultTitle;
+    // content
+    private JScrollPane scrollPane;
+    private ScrollablePanel contentPanel;
+    private ActionTree defaultContentView;
+    // footer
+    private JPanel footerPanel;
+    private BreadCrumbForm footer;
+
+    public static void showToolWindow() {
+        if (sToolWindow != null) {
+            if (sToolWindow.isVisible()) {
+                sToolWindow.hide(null);
+            } else {
+                sToolWindow.show(null);
+            }
+        }
+    }
+
+    @Override
+    public void createToolWindowContent(@NotNull Project project, @NotNull ToolWindow toolWindow) {
+        final ContentFactory contentFactory = ContentFactory.SERVICE.getInstance();
+        final Content content = contentFactory.createContent(containerPanel, "", false);
+        toolWindow.getContentManager().addContent(content);
+
+        initTitle();
+        initHeader();
+        initActionsTree(project);
+        initFooter();
+    }
+
+    private void initHeader() {
+        headerPanel.removeAll();
+        header = new BreadCrumbForm(this);
+        headerPanel.add(header.getComponent(), BorderLayout.CENTER);
+        headerPanel.setVisible(false);
+    }
+
+    private void initTitle() {
+        titlePanel.removeAll();
+        defaultTitle = new TitlePanelForm();
+        titlePanel.add(defaultTitle.getComponent(), BorderLayout.CENTER);
+    }
+
+    private void initActionsTree(@NotNull Project project) {
+        contentPanel.removeAll();
+        defaultContentView = new ActionTree(project, this);
+        contentPanel.add(defaultContentView, BorderLayout.CENTER);
+    }
+
+    private void initFooter() {
+        footerPanel.removeAll();
+        footer = new BreadCrumbForm(this);
+        footerPanel.add(footer.getComponent(), BorderLayout.CENTER);
+        footerPanel.setVisible(false);
+    }
+
+    /**
+     * Shows the Viewable. If it is not yet added it also adds it to the View
+     * @param viewable the Viewable to show.
+     */
+    void addView(String titleKey, SectionTitlePanelForm sectionTitle, Viewable viewable) {
+        // header
+        header.setText(ResourceBundle.getBundle("values/strings").getString(titleKey));
+        headerPanel.setVisible(true);
+
+        // title
+        titlePanel.removeAll();
+        titlePanel.add(sectionTitle.getComponent(), BorderLayout.CENTER);
+
+        // content
+        contentPanel.removeAll();
+        contentPanel.add(viewable.getComponent(), BorderLayout.CENTER);
+        JScrollBar vertical = scrollPane.getVerticalScrollBar();
+        vertical.setValue(vertical.getMinimum());
+
+        // footer
+        footer.setText(ResourceBundle.getBundle("values/strings").getString(titleKey));
+        footerPanel.setVisible(true);
+    }
+
+    void removeView() {
+        // header
+        headerPanel.setVisible(false);
+
+        // title
+        titlePanel.removeAll();
+        titlePanel.add(defaultTitle.getComponent(), BorderLayout.CENTER);
+
+        // content
+        contentPanel.removeAll();
+        contentPanel.add(defaultContentView, BorderLayout.CENTER);
+        JScrollBar vertical = scrollPane.getVerticalScrollBar();
+        vertical.setValue(vertical.getMinimum());
+
+        // footer
+        footerPanel.setVisible(false);
+    }
+
+    @Override
+    public void init(ToolWindow toolWindow) {
+        sToolWindow = toolWindow;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/Icon.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/Icon.java
new file mode 100644
index 000000000..6f6449935
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/Icon.java
@@ -0,0 +1,50 @@
+// Copyright 2004-present Facebook. All Rights Reserved.
+
+package com.facebook.plugin.ui;
+
+import com.intellij.openapi.util.IconLoader;
+import com.intellij.ui.JBColor;
+
+public enum Icon {
+    one("/icons/1.png", null),
+    two("/icons/2.png",  null),
+    three("/icons/3.png",  null),
+    four("/icons/4.png",  null),
+    five("/icons/5.png",  null),
+    six("/icons/6.png",  null),
+    seven("/icons/7.png",  null),
+    eight("/icons/8.png",  null),
+    nine("/icons/9.png",  null),
+    triangle_down("/icons/glyph-triangle-down.png",  null),
+    triangle_right("/icons/glyph-triangle-right.png",  null),
+    key("/icons/glyph-key.png",  null),
+    play("/icons/play.png", null),
+    places("/icons/glyph-nearby-places.png", null),
+    arrow_left("/icons/glyph-nav-arrow-left.png", null),
+    line_chart("/icons/glyph-line-chart.png", null),
+    friend_share("/icons/glyph-friend-share.png", null),
+    chevron_right("/icons/glyph-chevron-right.png", null),
+    messenger("/icons/glyph-app-messenger.png", null),
+    facebook_hollow("/icons/glyph-app-facebook-hollow.png", null),
+    facebook_icon("/icons/glyph-app-facebook.png", null),
+    facebook_banner("/icons/facebook_banner.png",null),
+    facebook_icon_large("/icons/facebook-icon.png", null);
+
+    private javax.swing.Icon light;
+    private javax.swing.Icon dark;
+
+    Icon(final String darkPath, final String lightPath) {
+        this.dark = IconLoader.getIcon(darkPath);
+        if (lightPath != null) {
+            this.light = IconLoader.getIcon(lightPath);
+        }
+    }
+
+    /**
+     * @return The correct {@link javax.swing.Icon} based on whether the IDE is requesting
+     * a light or a dark compatible image.
+     */
+    public javax.swing.Icon get() {
+        return (JBColor.isBright() && (light != null)) ? light : dark;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/InstallerForm.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/InstallerForm.form
new file mode 100644
index 000000000..45470b980
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/InstallerForm.form
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.InstallerForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="2" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="107" height="121"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <grid id="8a828" class="com.intellij.openapi.roots.ui.componentsList.components.ScrollablePanel" binding="integrationPanel" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+      <grid id="d03e" class="com.intellij.openapi.roots.ui.componentsList.components.ScrollablePanel" binding="codePanel" layout-manager="BorderLayout" hgap="0" vgap="0">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="7" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children/>
+      </grid>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/InstallerForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/InstallerForm.java
new file mode 100644
index 000000000..f13119031
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/InstallerForm.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.intellij.openapi.roots.ui.componentsList.components.ScrollablePanel;
+
+import javax.swing.*;
+import java.awt.*;
+
+class InstallerForm implements Viewable {
+
+    private JPanel mainPanel;
+    private ScrollablePanel integrationPanel;
+    private ScrollablePanel codePanel;
+
+    InstallerForm(final Viewable integrationForm, final Viewable codeForm) {
+        this.integrationPanel.add(integrationForm.getComponent(), BorderLayout.CENTER);
+        this.codePanel.add(codeForm.getComponent(), BorderLayout.CENTER);
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/IntegrationButtonForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/IntegrationButtonForm.java
new file mode 100644
index 000000000..eb75607d0
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/IntegrationButtonForm.java
@@ -0,0 +1,137 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.facebook.plugin.config.AvailableModule;
+import com.facebook.plugin.config.Configurator;
+import com.facebook.plugin.login.FacebookLogin;
+import com.facebook.plugin.login.FacebookLoginEventListener;
+import com.facebook.plugin.login.FacebookLoginEventType;
+import com.intellij.openapi.project.Project;
+
+
+abstract class IntegrationButtonForm<T extends Configurator>
+        extends TitleButtonForm implements FacebookLoginEventListener {
+
+    private static final FacebookLogin fbLogin = FacebookLogin.getInstance();
+    private final boolean requiresFBLogin;
+    private boolean isConnected = false;
+    private final Project project;
+    private T configurator;
+
+    // TODO: (T22774398) update this signature when developer.facebook.com API for getting apps is completed
+        IntegrationButtonForm(
+                final Project project,
+                final T configurator,
+                final boolean requiresFBLogin,
+                final String titleKey,
+                final String buttonKey) {
+        super(
+                titleKey,
+                Icon.one,
+                buttonKey,
+                "completed");
+
+        this.configurator = configurator;
+
+        this.requiresFBLogin = requiresFBLogin;
+        if (requiresFBLogin) {
+            this.isConnected = fbLogin.getAccessToken() != null;
+            fbLogin.addEventListener(this);
+        }
+        this.project = project;
+
+        this.button.addActionListener(e -> {
+
+            if (requiresFBLogin && !isConnected) {
+                fbLogin.logIn(this);
+            } else {
+                launchDialog();
+            }
+        });
+
+        updateUI();
+    }
+
+    @Override
+    public void handleEvent(FacebookLoginEventType eventType) {
+        if (eventType == FacebookLoginEventType.LoggedIn) {
+            launchDialog();
+        }
+        this.isConnected = fbLogin.getAccessToken() != null;
+        updateUI();
+    }
+
+    private void launchDialog() {
+        updateUI();
+        onButtonClick(project);
+    }
+
+    private boolean icConnected() {
+        return !requiresFBLogin || isConnected;
+    }
+
+    T getConfigurator() {
+            return this.configurator;
+    }
+
+    @Override
+    boolean isCompletelyUnavailable() {
+        if (!icConnected() || configurator == null) return false;
+
+        boolean hasAvailableModules = false;
+        boolean hasCompletedModules = false;
+        AvailableModule[] availableModules =
+                configurator.getAvailableModules(project);
+        for (AvailableModule availableModule : availableModules) {
+            if (!hasAvailableModules) {
+                if (availableModule.isInstalled()) {
+                    hasCompletedModules = true;
+                } else if (!availableModule.isUnavailable()) {
+                    hasAvailableModules = true;
+                }
+            }
+        }
+        return !hasCompletedModules && !hasAvailableModules;
+    }
+
+    @Override
+    boolean isCompletelyCompleted() {
+        if (!icConnected() || configurator == null) return false;
+
+        boolean hasAvailableModules = false;
+        boolean hasCompletedModules = false;
+        AvailableModule[] availableModules =
+                configurator.getAvailableModules(project);
+        for (AvailableModule availableModule : availableModules) {
+            if (!hasAvailableModules) {
+                if (availableModule.isInstalled()) {
+                    hasCompletedModules = true;
+                } else if (!availableModule.isUnavailable()) {
+                    hasAvailableModules = true;
+                }
+            }
+        }
+        return hasCompletedModules && !hasAvailableModules;
+    }
+
+    abstract void onButtonClick(final Project project);
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/LinkClickable.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/LinkClickable.java
new file mode 100644
index 000000000..16cee0718
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/LinkClickable.java
@@ -0,0 +1,52 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import java.awt.*;
+import java.io.IOException;
+import java.net.URI;
+import java.net.URISyntaxException;
+
+public interface LinkClickable {
+
+    /**
+     * Opens up the Desktop Browser for the specified link
+     * @param link the link to navigate to
+     */
+    default void clickLink(String link) {
+        try {
+            clickLink(new URI(link));
+        } catch (URISyntaxException e) { /* no op */ }
+    }
+
+    /**
+     * Opens up the Desktop Browser for the specified link
+     * @param linkUri the {@link URI} to navigate to
+     */
+    default void clickLink(URI linkUri) {
+        if (Desktop.isDesktopSupported()
+                && Desktop.getDesktop().isSupported(Desktop.Action.BROWSE)) {
+            try {
+                Desktop.getDesktop().browse(linkUri);
+            } catch (IOException ignored) { /* no op */ }
+        }
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/SectionTitlePanel.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/SectionTitlePanel.form
new file mode 100644
index 000000000..dd9c3e2d8
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/SectionTitlePanel.form
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.SectionTitlePanelForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="6" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="0" vgap="-1">
+    <margin top="0" left="0" bottom="10" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="244" height="149"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="8adc4" class="javax.swing.JSeparator">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+      </component>
+      <component id="5cd5a" class="javax.swing.JLabel" binding="titleLabel">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="9" fill="0" indent="1" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="Label"/>
+          <verticalAlignment value="0"/>
+        </properties>
+      </component>
+      <vspacer id="d6993">
+        <constraints>
+          <grid row="2" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false">
+            <minimum-size width="-1" height="10"/>
+          </grid>
+        </constraints>
+      </vspacer>
+      <component id="86bf7" class="javax.swing.JLabel" binding="descriptionLabel">
+        <constraints>
+          <grid row="3" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="8" fill="0" indent="2" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="Label"/>
+        </properties>
+      </component>
+      <vspacer id="28fff">
+        <constraints>
+          <grid row="4" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false">
+            <minimum-size width="-1" height="15"/>
+          </grid>
+        </constraints>
+      </vspacer>
+      <component id="a5326" class="javax.swing.JLabel" binding="linkLabel">
+        <constraints>
+          <grid row="5" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="2" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="&lt;html&gt;&lt;u&gt;Open in Browser&lt;/u&gt;&lt;/html&gt;"/>
+        </properties>
+      </component>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/SectionTitlePanelForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/SectionTitlePanelForm.java
new file mode 100644
index 000000000..37240abe6
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/SectionTitlePanelForm.java
@@ -0,0 +1,55 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import javax.annotation.Nonnull;
+import javax.swing.*;
+import java.awt.event.MouseEvent;
+import java.util.ResourceBundle;
+
+public class SectionTitlePanelForm implements Viewable, LinkClickable {
+
+    private JPanel mainPanel;
+    private JLabel linkLabel;
+    private JLabel descriptionLabel;
+    private JLabel titleLabel;
+
+    SectionTitlePanelForm(
+            final String titleKey,
+            final String descriptionKey,
+            @Nonnull final String link) {
+        this.titleLabel.setText(ResourceBundle.getBundle("values/strings").getString(titleKey));
+        this.descriptionLabel.setText(ResourceBundle.getBundle("values/strings").getString(descriptionKey));
+
+        this.linkLabel.addMouseListener(new ClickableMouseAdapter() {
+
+            @Override
+            public void mouseClicked(MouseEvent e) {
+                clickLink(link);
+            }
+        });
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/TitleButtonForm.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/TitleButtonForm.form
new file mode 100644
index 000000000..946216cbc
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/TitleButtonForm.form
@@ -0,0 +1,73 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.TitleButtonForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="2" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="270" height="73"/>
+    </constraints>
+    <properties/>
+    <border type="none" title-justification="1" title-position="2"/>
+    <children>
+      <component id="2cfac" class="javax.swing.JLabel" binding="titleLabel">
+        <constraints>
+          <grid row="0" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="4" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text resource-bundle="values/strings" key="connectYourApp"/>
+        </properties>
+      </component>
+      <component id="1e134" class="javax.swing.JLabel" binding="stepNumberLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <icon value="icons/1.png"/>
+          <text value=""/>
+        </properties>
+      </component>
+      <grid id="b712c" binding="contentPanel" layout-manager="CardLayout" hgap="0" vgap="0" show="798b2">
+        <constraints>
+          <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="9" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+        <border type="none"/>
+        <children>
+          <component id="798b2" class="javax.swing.JButton" binding="button">
+            <constraints>
+              <card name="connect"/>
+            </constraints>
+            <properties>
+              <text resource-bundle="values/strings" key="connectToFacebook"/>
+              <visible value="false"/>
+            </properties>
+          </component>
+          <component id="d0549" class="javax.swing.JLabel" binding="completedLabel">
+            <constraints>
+              <card name="connected"/>
+            </constraints>
+            <properties>
+              <foreground color="-10437815"/>
+              <text resource-bundle="values/strings" key="connected"/>
+            </properties>
+          </component>
+          <component id="1b1d" class="javax.swing.JLabel" binding="unavailableLabel">
+            <constraints>
+              <card name="unavailable"/>
+            </constraints>
+            <properties>
+              <foreground color="-4303546"/>
+              <text value="Unavailable"/>
+            </properties>
+          </component>
+        </children>
+      </grid>
+      <hspacer id="7df9e">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="1" hsize-policy="0" anchor="0" fill="1" indent="0" use-parent-layout="false">
+            <minimum-size width="35" height="-1"/>
+          </grid>
+        </constraints>
+      </hspacer>
+    </children>
+  </grid>
+</form>
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/TitleButtonForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/TitleButtonForm.java
new file mode 100644
index 000000000..89bd65ab9
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/TitleButtonForm.java
@@ -0,0 +1,75 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import javax.swing.*;
+import java.awt.*;
+import java.util.ResourceBundle;
+
+/**
+ * Generic View that contains a numbers title
+ * with a single Button as its child
+ * and handles updating it based on completed/available
+ * states.
+ */
+abstract class TitleButtonForm implements Viewable {
+
+    private JPanel mainPanel;
+    protected JButton button;
+    protected JLabel completedLabel;
+    protected JPanel contentPanel;
+    protected JLabel titleLabel;
+    private JLabel stepNumberLabel;
+    private JLabel unavailableLabel;
+
+    TitleButtonForm(String titleKey, Icon icon, String buttonKey, String completedKey) {
+        this.titleLabel.setText(ResourceBundle.getBundle("/values/strings").getString(titleKey));
+        this.stepNumberLabel.setIcon(icon.get());
+        this.button.setText(ResourceBundle.getBundle("/values/strings").getString(buttonKey));
+        this.completedLabel.setText(ResourceBundle.getBundle("/values/strings").getString(completedKey));
+
+        this.button.addMouseListener(new ClickableMouseAdapter());
+
+        this.updateUI();
+    }
+
+    abstract boolean isCompletelyCompleted();
+
+    abstract boolean isCompletelyUnavailable();
+
+    /**
+     * Causes the view UI to be updated.
+     */
+    void updateUI() {
+        if (isCompletelyCompleted()) {
+            ((CardLayout) contentPanel.getLayout()).show(contentPanel, "connected");
+        } else if (isCompletelyUnavailable()) {
+            ((CardLayout) contentPanel.getLayout()).show(contentPanel, "unavailable");
+        } else {
+            ((CardLayout) contentPanel.getLayout()).show(contentPanel, "connect");
+        }
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/TitlePanel.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/TitlePanel.form
new file mode 100644
index 000000000..d80cec284
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/TitlePanel.form
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.TitlePanelForm">
+  <grid id="72189" binding="titlePanel" layout-manager="GridLayoutManager" row-count="2" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="0" y="0" width="238" height="157"/>
+    </constraints>
+    <border type="none"/>
+    <children>
+      <grid id="ab5a4" layout-manager="GridLayoutManager" row-count="1" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+        <margin top="18" left="0" bottom="17" right="0"/>
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="0" fill="3" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <background color="-10983765"/>
+        </properties>
+        <border type="none"/>
+        <children>
+          <component id="a9411" class="javax.swing.JLabel">
+            <constraints>
+              <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="7" hsize-policy="7" anchor="0" fill="0" indent="0" use-parent-layout="false"/>
+            </constraints>
+            <properties>
+              <background color="-10983765"/>
+              <font size="22" style="0"/>
+              <icon value="icons/facebook_banner.png"/>
+              <text value=""/>
+              <verticalAlignment value="0"/>
+              <verticalTextPosition value="0"/>
+            </properties>
+          </component>
+        </children>
+      </grid>
+      <component id="42c5c" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="7" hsize-policy="7" anchor="8" fill="0" indent="2" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text resource-bundle="values/strings" key="title_description"/>
+        </properties>
+      </component>
+    </children>
+  </grid>
+</form>
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompletedForm.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/TitlePanelForm.java
similarity index 77%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompletedForm.java
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/TitlePanelForm.java
index a9d223e1a..6caa714f0 100644
--- a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompletedForm.java
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/TitlePanelForm.java
@@ -20,25 +20,13 @@
 
 package com.facebook.plugin.ui;
 
-import javax.swing.JComponent;
-import javax.swing.JPanel;
+import javax.swing.*;
 
-public class AccountKitCompletedForm implements WizardStep {
-    private JPanel mainPanel;
+public class TitlePanelForm implements Viewable {
+    private JPanel titlePanel;
 
     @Override
     public JComponent getComponent() {
-        return mainPanel;
-    }
-
-    @Override
-    public void fillForm() {
-        // Nothing to fill
-    }
-
-    @Override
-    public boolean commitForm() {
-        // Nothing to commit
-        return true;
+        return titlePanel;
     }
 }
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/WizardStep.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/Viewable.java
similarity index 91%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/WizardStep.java
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/Viewable.java
index 95cf1f482..eb92d671b 100644
--- a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/WizardStep.java
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/Viewable.java
@@ -17,15 +17,10 @@
  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
-
 package com.facebook.plugin.ui;
 
-import javax.swing.JComponent;
+import javax.swing.*;
 
-public interface WizardStep {
+public interface Viewable {
     JComponent getComponent();
-
-    void fillForm();
-
-    boolean commitForm();
 }
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallerWizard.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/WizardDialog.java
similarity index 56%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallerWizard.java
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/WizardDialog.java
index 22a5538ef..6eca5fcc2 100644
--- a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallerWizard.java
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/WizardDialog.java
@@ -20,43 +20,37 @@
 
 package com.facebook.plugin.ui;
 
+import com.intellij.CommonBundle;
 import com.intellij.openapi.project.Project;
 import com.intellij.openapi.ui.DialogWrapper;
 import org.jetbrains.annotations.NotNull;
 import org.jetbrains.annotations.Nullable;
 
-import javax.swing.Action;
-import javax.swing.JComponent;
-import javax.swing.JPanel;
-import java.awt.Dimension;
-import java.awt.GridLayout;
+import javax.annotation.Nonnull;
+import javax.swing.*;
+import java.awt.*;
 import java.awt.event.ActionEvent;
+import java.util.ArrayList;
 
-public class AccountKitInstallerWizard extends DialogWrapper {
+abstract class WizardDialog extends DialogWrapper implements Viewable {
 
     private static final Dimension defaultMinSize = new Dimension(800, 400);
     private static final Dimension defaultMaxSize = new Dimension(800, 600);
 
     private JPanel mainPanel;
 
-    private WizardStep[] wizardSteps;
-    private WizardAction previousAction;
-    private WizardAction nextAction;
     private int currentStep = 0;
+    private WizardStep[] wizardSteps;
+    private WizardAction[] actions;
 
-    public AccountKitInstallerWizard(final Project project) {
+    WizardDialog(@Nonnull final Project project, @Nonnull String title, WizardStep[] wizardSteps) {
         super(project);
 
-        wizardSteps = new WizardStep[]{
-                new AccountKitPrerequisitesForm(),
-                new AccountKitInstallDependenciesForm(project),
-                new AccountKitInstallActivityForm(project),
-                new AccountKitCompletedForm()
-        };
+        this.wizardSteps = wizardSteps;
 
-        setTitle("Install AccountKit SDK");
+        setTitle(title);
         init();
-        setStep(0, false);
+        setStep(0, true);
     }
 
     @NotNull
@@ -70,12 +64,20 @@ public AccountKitInstallerWizard(final Project project) {
     @NotNull
     @Override
     protected Action[] createActions() {
-        previousAction = new WizardAction("< Previous", -1);
-        nextAction = new WizardAction("Next >", 1);
-        return new Action[]{
-                previousAction,
-                nextAction
-        };
+        ArrayList<WizardAction> actionsList = new ArrayList<>(1);
+        actionsList.add(new WizardAction(true));
+        if (wizardSteps.length > 1) {
+            actionsList.add(0, new WizardAction(false));
+        }
+
+        this.actions = actionsList.toArray(new WizardAction[actionsList.size()]);
+        return actions;
+    }
+
+    private void updateButtonUI() {
+        for (WizardAction action : actions) {
+            action.updateUI();
+        }
     }
 
     @Nullable
@@ -88,15 +90,13 @@ protected JComponent createCenterPanel() {
         return mainPanel;
     }
 
-    private void setStep(final int newStep, final boolean shouldCommit) {
+    private void setStep(final int newStep, final boolean skipConfirmCheck) {
         if ((newStep < 0) || (newStep >= wizardSteps.length) || (mainPanel == null)) {
             return;
         }
 
-        if (shouldCommit) {
-            if (!wizardSteps[currentStep].commitForm()) {
-                return;
-            }
+        if (!skipConfirmCheck && !wizardSteps[currentStep].commitForm()) {
+            return;
         }
 
         currentStep = newStep;
@@ -113,21 +113,44 @@ private void setStep(final int newStep, final boolean shouldCommit) {
         mainPanel.invalidate();
         mainPanel.updateUI();
 
-        previousAction.setEnabled(currentStep > 0);
-        nextAction.setEnabled(currentStep < wizardSteps.length - 1);
+        updateButtonUI();
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
     }
 
-    protected final class WizardAction extends DialogWrapperAction {
-        final int delta;
+    private class WizardAction extends DialogWrapperAction {
 
-        private WizardAction(@NotNull final String name, final int delta) {
-            super(name);
-            this.delta = delta;
+        private static final String PREVIOUS = "< Previous";
+        private static final String NEXT = "Next >";
+
+        private WizardAction(final boolean isPrimaryAction) {
+            super(isPrimaryAction ? NEXT : PREVIOUS);
+            putValue(DEFAULT_ACTION, isPrimaryAction);
         }
 
         @Override
         protected void doAction(ActionEvent actionEvent) {
-            setStep(currentStep + delta, delta > 0);
+            boolean isPrimaryAction = (boolean) getValue(DEFAULT_ACTION);
+            if (isPrimaryAction && currentStep == wizardSteps.length - 1) {
+                close(OK_EXIT_CODE);
+            } else {
+                int delta = isPrimaryAction ? 1 : -1;
+                setStep(currentStep + delta, delta < 0);
+            }
+        }
+
+        void updateUI() {
+            boolean isPrimaryAction = (boolean) getValue(DEFAULT_ACTION);
+            if (!isPrimaryAction) {
+                setEnabled(currentStep > 0);
+            } else if (currentStep == wizardSteps.length - 1) {
+                putValue(NAME, CommonBundle.getOkButtonText());
+            } else {
+                putValue(NAME, NEXT);
+            }
         }
     }
 }
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/WizardStep.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/WizardStep.java
new file mode 100644
index 000000000..e7bf24c1a
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/WizardStep.java
@@ -0,0 +1,31 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+
+public interface WizardStep extends Viewable {
+    void fillForm();
+
+    /**
+     * @return true if the form was committed successfully; false otherwise.
+     */
+    boolean commitForm();
+}
diff --git a/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/fbLoginAction.form b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/fbLoginAction.form
new file mode 100644
index 000000000..7494a913c
--- /dev/null
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/fbLoginAction.form
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.fbLoginActionForm">
+  <grid id="27dc6" layout-manager="GridLayoutManager" row-count="2" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="4" left="0" bottom="2" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="500" height="400"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="a6187" class="javax.swing.JLabel" binding="title">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="2" vsize-policy="3" hsize-policy="3" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="Title"/>
+          <verticalAlignment value="0"/>
+          <verticalTextPosition value="0"/>
+        </properties>
+      </component>
+      <component id="fc24b" class="javax.swing.JLabel" binding="description">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="3" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="Description"/>
+          <verticalAlignment value="0"/>
+          <verticalTextPosition value="0"/>
+        </properties>
+      </component>
+    </children>
+  </grid>
+</form>
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/Configurator.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/fbLoginActionForm.java
similarity index 84%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/Configurator.java
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/fbLoginActionForm.java
index 384939767..004dd3d6c 100644
--- a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/Configurator.java
+++ b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/ui/fbLoginActionForm.java
@@ -18,13 +18,11 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.plugin.config;
+package com.facebook.plugin.ui;
 
-import com.intellij.openapi.module.Module;
+import javax.swing.*;
 
-public interface Configurator {
-
-    boolean isConfigured(final Module module);
-
-    void doConfigure(final Module module);
+public class fbLoginActionForm {
+    private JLabel title;
+    private JLabel description;
 }
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/utils/PsiHelper.java b/plugins/FacebookSDKPlugin/src/com/facebook/plugin/utils/PsiHelper.java
similarity index 100%
rename from plugin/FacebookSDKPlugin/src/com/facebook/plugin/utils/PsiHelper.java
rename to plugins/FacebookSDKPlugin/src/com/facebook/plugin/utils/PsiHelper.java
diff --git a/samples/FBLoginSample/CONTRIBUTING.mdown b/samples/FBLoginSample/CONTRIBUTING.mdown
new file mode 100644
index 000000000..dab085cfd
--- /dev/null
+++ b/samples/FBLoginSample/CONTRIBUTING.mdown
@@ -0,0 +1,21 @@
+{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
+{\fonttbl\f0\fmodern\fcharset0 Courier;}
+{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
+{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
+\margl1440\margr1440\vieww10800\viewh8400\viewkind0
+\deftab720
+\pard\pardeftab720\sl280\partightenfactor0
+
+\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
+\outl0\strokewidth0 \strokec2 Facebook welcomes contributions to our SDKs.\
+\
+All contributors must sign a CLA (contributor license agreement) here:\
+\
+  https://developers.facebook.com/opensource/cla\
+\
+To contribute on behalf of your employer, sign the company CLA\
+To contribute on behalf of yourself, sign the individual CLA\
+\
+By contributing to, you agree that your contributions will be licensed\
+under the LICENSE file in the root directory of this source tree.\
+}
\ No newline at end of file
diff --git a/samples/FBLoginSample/LICENSE b/samples/FBLoginSample/LICENSE
new file mode 100644
index 000000000..1ac68e225
--- /dev/null
+++ b/samples/FBLoginSample/LICENSE
@@ -0,0 +1,27 @@
+{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
+{\fonttbl\f0\fmodern\fcharset0 Courier;}
+{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
+{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
+\margl1440\margr1440\vieww10800\viewh8400\viewkind0
+\deftab720
+\pard\pardeftab720\sl280\partightenfactor0
+
+\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
+\outl0\strokewidth0 \strokec2 Copyright (c) 2017-present, Facebook, Inc. All rights reserved.\
+\
+You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\
+copy, modify, and distribute this software in source code or binary form for use\
+in connection with the web services and APIs provided by Facebook.\
+\
+As with any software that integrates with the Facebook platform, your use of\
+this software is subject to the Facebook Developer Principles and Policies\
+[http://developers.facebook.com/policy/]. This copyright notice shall be\
+included in all copies or substantial portions of the software.\
+\
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\
+FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\
+COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\
+IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\
+CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\
+}
\ No newline at end of file
diff --git a/samples/FBLoginSample/README.mdown b/samples/FBLoginSample/README.mdown
new file mode 100644
index 000000000..ad0454c77
--- /dev/null
+++ b/samples/FBLoginSample/README.mdown
@@ -0,0 +1,34 @@
+{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
+{\fonttbl\f0\fmodern\fcharset0 Courier;}
+{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
+{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
+\margl1440\margr1440\vieww10800\viewh8400\viewkind0
+\deftab720
+\pard\pardeftab720\sl280\partightenfactor0
+
+\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
+\outl0\strokewidth0 \strokec2 Facebook Login Android Sample\
+========================\
+\
+This repository contains a sample app demonstrating how to integrate with Facebook Login.\
+\
+Learn more about the provided sample, documentation, integrating the SDK into your app, accessing source code, and more at {\field{\*\fldinst{HYPERLINK "https://developers.facebook.com/docs/facebook-login"}}{\fldrslt https://developers.facebook.com/docs/facebook-login}}\
+\
+GIVE FEEDBACK\
+-------------\
+Please report bugs or issues related to Facebook Login to https://developers.facebook.com/bugs/\
+\
+You can also join the Facebook Developers Group on Facebook (https://www.facebook.com/groups/fbdevelopers/) or ask questions on Stack Overflow (http://facebook.stackoverflow.com)\
+\
+CONTRIBUTING\
+-------------\
+We are able to accept contributions to the Facebook Login Sample App for Android. To contribute please do the following.\
+- Follow the instructions in the [CONTRIBUTING.mdown](https://github.com/fbsamples/facebook-login-sample-for-android/blob/master/CONTRIBUTING.mdown).\
+- Submit your pull request to the [dev](https://github.com/fbsamples/facebook-login-sample-for-android/tree/dev) branch. This allows us to merge your change into our internal master and then push out the change in the next release.\
+\
+LICENSE\
+-------\
+Except as otherwise noted, the Facebook Login Sample for Android is licensed under the Facebook Platform License (https://github.com/fbsamples/facebook-login-sample-for-android/blob/master/LICENSE.txt).\
+\
+Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the specific language governing permissions and limitations under the License.\
+}
\ No newline at end of file
diff --git a/samples/FBLoginSample/build.gradle b/samples/FBLoginSample/build.gradle
new file mode 100755
index 000000000..29caf4883
--- /dev/null
+++ b/samples/FBLoginSample/build.gradle
@@ -0,0 +1,47 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 26
+    buildToolsVersion "26.0.2"
+    defaultConfig {
+        applicationId "com.facebook.fbloginsample"
+        minSdkVersion 15
+        targetSdkVersion 26
+        versionCode 1
+        versionName "0.1"
+        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+
+    lintOptions {
+        abortOnError false
+    }
+
+    splits {
+        abi {
+            enable true
+            reset()
+            include 'armeabi', 'armeabi-v7a', 'x86'
+            universalApk true
+        }
+    }
+}
+
+dependencies {
+    compile fileTree(dir: 'libs', include: ['*.jar'])
+    compile 'com.facebook.android:facebook-android-sdk:[4,5)'
+    compile 'com.android.support:appcompat-v7:26.0.2'
+    compile 'com.facebook.fresco:fresco:0.14.0'
+
+
+    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
+        exclude group: 'com.android.support', module: 'support-annotations'
+    })
+    testCompile 'junit:junit:4.12'
+    compile 'com.android.support:support-annotations:26.0.2'
+}
diff --git a/samples/FBLoginSample/proguard-rules.pro b/samples/FBLoginSample/proguard-rules.pro
new file mode 100644
index 000000000..5fd7f4073
--- /dev/null
+++ b/samples/FBLoginSample/proguard-rules.pro
@@ -0,0 +1,25 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in /Users/inathan/Library/Android/sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
diff --git a/samples/FBLoginSample/src/androidTest/java/com/facebook/fbloginsample/ExampleInstrumentedTest.java b/samples/FBLoginSample/src/androidTest/java/com/facebook/fbloginsample/ExampleInstrumentedTest.java
new file mode 100644
index 000000000..ff89ee558
--- /dev/null
+++ b/samples/FBLoginSample/src/androidTest/java/com/facebook/fbloginsample/ExampleInstrumentedTest.java
@@ -0,0 +1,47 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample;
+
+import android.content.Context;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static junit.framework.Assert.assertEquals;
+
+
+/**
+ * Instrumentation test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+    @Test
+    public void useAppContext() throws Exception {
+        // Context of the app under test.
+        Context appContext = InstrumentationRegistry.getTargetContext();
+
+        assertEquals("com.facebook.fbloginsample", appContext.getPackageName());
+    }
+}
diff --git a/samples/FBLoginSample/src/main/AndroidManifest.xml b/samples/FBLoginSample/src/main/AndroidManifest.xml
new file mode 100644
index 000000000..e0232b0e0
--- /dev/null
+++ b/samples/FBLoginSample/src/main/AndroidManifest.xml
@@ -0,0 +1,34 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+
+    package="com.facebook.fbloginsample">
+
+    <uses-permission android:name="android.permission.INTERNET"/>
+
+    <application
+        android:name=".FBLoginSampleApp"
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:roundIcon="@mipmap/ic_launcher_round"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme">
+
+        <activity android:name=".MainActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN"/>
+                <category android:name="android.intent.category.LAUNCHER"/>
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".FacebookLoginActivity"
+            android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation">
+        </activity>
+        <activity android:name=".PostFeedActivity"/>
+        <activity android:name=".ProfileActivity"/>
+        <activity android:name=".PermissionsActivity"/>
+
+        <meta-data
+            android:name="com.facebook.sdk.ApplicationId"
+            android:value="@string/facebook_app_id"/>
+    </application>
+</manifest>
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FBLoginSampleApp.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FBLoginSampleApp.java
new file mode 100644
index 000000000..4d3b36090
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FBLoginSampleApp.java
@@ -0,0 +1,37 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample;
+
+import android.app.Application;
+
+import com.facebook.FacebookSdk;
+import com.facebook.drawee.backends.pipeline.Fresco;
+
+public class FBLoginSampleApp extends Application {
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        FacebookSdk.sdkInitialize(getApplicationContext());
+
+        Fresco.initialize(this);
+    }
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FacebookLoginActivity.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FacebookLoginActivity.java
new file mode 100644
index 000000000..c4eec198d
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/FacebookLoginActivity.java
@@ -0,0 +1,79 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.os.Bundle;
+
+import com.facebook.CallbackManager;
+import com.facebook.FacebookCallback;
+import com.facebook.FacebookException;
+import com.facebook.login.LoginResult;
+import com.facebook.login.widget.LoginButton;
+
+import java.util.Arrays;
+
+public class FacebookLoginActivity extends Activity {
+    private static final String EMAIL = "email";
+    private static final String USER_POSTS = "user_posts";
+
+    private CallbackManager mCallbackManager;
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        mCallbackManager.onActivityResult(requestCode, resultCode, data);
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_facebook_login);
+        mCallbackManager = CallbackManager.Factory.create();
+
+        LoginButton mLoginButton = findViewById(R.id.login_button);
+
+        // Set the initial permissions to request from the user while logging in
+        mLoginButton.setReadPermissions(Arrays.asList(EMAIL, USER_POSTS));
+
+        // Register a callback to respond to the user
+        mLoginButton.registerCallback(mCallbackManager, new FacebookCallback<LoginResult>() {
+            @Override
+            public void onSuccess(LoginResult loginResult) {
+                setResult(RESULT_OK);
+                finish();
+            }
+
+            @Override
+            public void onCancel() {
+                setResult(RESULT_CANCELED);
+                finish();
+            }
+
+            @Override
+            public void onError(FacebookException e) {
+                // Handle exception
+            }
+        });
+    }
+
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/MainActivity.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/MainActivity.java
new file mode 100644
index 000000000..18e41b8de
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/MainActivity.java
@@ -0,0 +1,135 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Button;
+
+import com.facebook.AccessToken;
+import com.facebook.login.LoginManager;
+
+public class MainActivity extends Activity {
+
+    private static final int RESULT_PROFILE_ACTIVITY = 1;
+    private static final int RESULT_POSTS_ACTIVITY = 2;
+    private static final int RESULT_PERMISSIONS_ACTIVITY = 3;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+
+        // If MainActivity is reached without the user being logged in, redirect to the Login
+        // Activity
+        if (AccessToken.getCurrentAccessToken() == null) {
+            Intent loginIntent = new Intent(MainActivity.this, FacebookLoginActivity.class);
+            startActivity(loginIntent);
+        }
+
+        // Make a button which leads to profile information of the user
+        Button gotoProfileButton = findViewById(R.id.btn_profile);
+        gotoProfileButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                if (AccessToken.getCurrentAccessToken() == null) {
+                    Intent profileIntent = new Intent(MainActivity.this, FacebookLoginActivity
+                            .class);
+                    startActivityForResult(profileIntent, RESULT_PROFILE_ACTIVITY);
+                } else {
+                    Intent profilentent = new Intent(MainActivity.this, ProfileActivity.class);
+                    startActivity(profilentent);
+                }
+            }
+        });
+
+        // Make a button which leads to posts made by the user
+        Button gotoPostsFeedButton = findViewById(R.id.btn_posts);
+        gotoPostsFeedButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                if (AccessToken.getCurrentAccessToken() == null) {
+                    Intent loginIntent = new Intent(MainActivity.this, FacebookLoginActivity.class);
+                    startActivityForResult(loginIntent, RESULT_POSTS_ACTIVITY);
+                } else {
+                    Intent postsFeedIntent = new Intent(MainActivity.this, PostFeedActivity.class);
+                    startActivity(postsFeedIntent);
+                }
+            }
+        });
+
+        // Make a button which leads to request or revoke permissions
+        Button gotoPermissionsButton = findViewById(R.id.btn_permissions);
+        gotoPermissionsButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                if (AccessToken.getCurrentAccessToken() == null) {
+                    Intent loginIntent = new Intent(MainActivity.this, FacebookLoginActivity.class);
+                    startActivityForResult(loginIntent, RESULT_PERMISSIONS_ACTIVITY);
+                } else {
+                    Intent permissionsIntent = new Intent(MainActivity.this, PermissionsActivity
+                            .class);
+                    startActivity(permissionsIntent);
+                }
+            }
+        });
+
+        // Make a logout button
+        Button fbLogoutButton = findViewById(R.id.btn_fb_logout);
+        fbLogoutButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                LoginManager.getInstance().logOut();
+                Intent loginIntent = new Intent(MainActivity.this, FacebookLoginActivity.class);
+                startActivity(loginIntent);
+            }
+        });
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        switch (requestCode) {
+            case RESULT_PROFILE_ACTIVITY:
+                if (resultCode == RESULT_OK) {
+                    Intent profileIntent = new Intent(MainActivity.this, ProfileActivity.class);
+                    startActivity(profileIntent);
+                }
+                break;
+            case RESULT_POSTS_ACTIVITY:
+                if (resultCode == RESULT_OK) {
+                    Intent postFeedIntent = new Intent(MainActivity.this, PostFeedActivity.class);
+                    startActivity(postFeedIntent);
+                }
+                break;
+            case RESULT_PERMISSIONS_ACTIVITY:
+                if (resultCode == RESULT_OK) {
+                    Intent permissionsIntent = new Intent(MainActivity.this, PermissionsActivity
+                            .class);
+                    startActivity(permissionsIntent);
+                }
+                break;
+            default:
+                super.onActivityResult(requestCode,resultCode, data);
+        }
+    }
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/PermissionsActivity.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/PermissionsActivity.java
new file mode 100644
index 000000000..b1e469791
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/PermissionsActivity.java
@@ -0,0 +1,224 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.os.Bundle;
+import android.widget.CompoundButton;
+import android.widget.Switch;
+import android.widget.Toast;
+
+import com.facebook.AccessToken;
+import com.facebook.CallbackManager;
+import com.facebook.FacebookCallback;
+import com.facebook.FacebookException;
+import com.facebook.GraphResponse;
+import com.facebook.fbloginsample.callbacks.PermissionCallback;
+import com.facebook.fbloginsample.requests.PermissionRequest;
+import com.facebook.login.LoginManager;
+import com.facebook.login.LoginResult;
+
+import java.util.Arrays;
+import java.util.Set;
+
+public class PermissionsActivity extends Activity implements PermissionCallback
+        .IPermissionResponse, AccessToken.AccessTokenRefreshCallback,
+        FacebookCallback<LoginResult> {
+    private static final String EMAIL = "email";
+    private static final String USER_POSTS = "user_posts";
+    private static final String PUBLISH_ACTIONS = "publish_actions";
+    private static final String PUBLIC_PROFILE = "public_profile";
+    private static final String APP = "app";
+
+
+    private Switch mEmailPermSwitch;
+    private Switch mUserPostsPermSwitch;
+    private Switch mPublishPostPermSwitch;
+    private Switch mAppPermSwitch;
+    private CallbackManager mCallbackManager;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_permissions);
+        mCallbackManager = CallbackManager.Factory.create();
+        LoginManager.getInstance().registerCallback(mCallbackManager, this);
+
+        // Make a switch for the email permission
+        mEmailPermSwitch = findViewById(R.id.switch_email_permission);
+        mEmailPermSwitch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+            @Override
+            public void onCheckedChanged(CompoundButton compoundButton, boolean isChecked) {
+                Set<String> permissions = AccessToken.getCurrentAccessToken().getPermissions();
+                if (isChecked && !permissions.contains(EMAIL)) {
+                    // Make request to user to grant email permission
+                    LoginManager.getInstance().logInWithReadPermissions(PermissionsActivity.this,
+                            Arrays.asList(EMAIL));
+                } else if (!isChecked && permissions.contains(EMAIL)) {
+                    // Make revoke email permission request
+                    PermissionRequest.makeRevokePermRequest(EMAIL, new PermissionCallback
+                            (PermissionsActivity.this).getCallback());
+                }
+            }
+        });
+
+        // Make a switch for the user posts permission
+        mUserPostsPermSwitch = findViewById(R.id.switch_user_posts_permission);
+        mUserPostsPermSwitch.setOnCheckedChangeListener(new CompoundButton
+                .OnCheckedChangeListener() {
+            @Override
+            public void onCheckedChanged(CompoundButton compoundButton, boolean isChecked) {
+                Set<String> permissions = AccessToken.getCurrentAccessToken().getPermissions();
+                if (isChecked && !permissions.contains(USER_POSTS)) {
+                    // Make request to user to grant user_posts permission
+                    LoginManager.getInstance().logInWithReadPermissions(PermissionsActivity.this,
+                            Arrays.asList(USER_POSTS));
+                } else if (!isChecked && permissions.contains(USER_POSTS)) {
+                    // Make revoke user_posts permission request
+                    PermissionRequest.makeRevokePermRequest(USER_POSTS, new PermissionCallback
+                            (PermissionsActivity.this).getCallback());
+                }
+            }
+        });
+
+        // Make a switch for the publish posts permission
+        mPublishPostPermSwitch = findViewById(R.id.switch_publish_post_permission);
+        mPublishPostPermSwitch.setOnCheckedChangeListener(new CompoundButton
+                .OnCheckedChangeListener() {
+            @Override
+            public void onCheckedChanged(CompoundButton compoundButton, boolean isChecked) {
+                Set<String> permissions = AccessToken.getCurrentAccessToken().getPermissions();
+                if (isChecked && !permissions.contains(PUBLISH_ACTIONS)) {
+                    // Make request to user to grant publish_actions permission
+                    LoginManager.getInstance().logInWithPublishPermissions(PermissionsActivity
+                            .this, Arrays.asList(PUBLISH_ACTIONS));
+                } else if (!isChecked && permissions.contains(PUBLISH_ACTIONS)) {
+                    // Make revoke publish_actions permission request
+                    PermissionRequest.makeRevokePermRequest(PUBLISH_ACTIONS, new
+                            PermissionCallback(PermissionsActivity.this).getCallback());
+                }
+            }
+        });
+
+        // Make a switch for the app login permission
+        mAppPermSwitch = findViewById(R.id.switch_app_permission);
+        mAppPermSwitch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+            @Override
+            public void onCheckedChanged(CompoundButton compoundButton, boolean isChecked) {
+                if (isChecked && AccessToken.getCurrentAccessToken() == null) {
+                    // Make request to user to login
+                    LoginManager.getInstance().logInWithReadPermissions(PermissionsActivity.this,
+                            Arrays.asList(PUBLIC_PROFILE));
+                } else if (!isChecked && AccessToken.getCurrentAccessToken() != null) {
+                    PermissionRequest.makeRevokePermRequest(APP, new PermissionCallback
+                            (PermissionsActivity.this).getCallback());
+                }
+            }
+        });
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        mCallbackManager.onActivityResult(requestCode, resultCode, data);
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+        setPermissionsSwitches();
+    }
+
+    // PermissionCallback.IPermissionResponse Callbacks
+    @Override
+    public void onCompleted(GraphResponse response) {
+        if (response.getError() != null) {
+            Toast.makeText(this, "Error with permissions request: " + response.getError()
+                    .getErrorMessage(), Toast.LENGTH_LONG).show();
+        }
+        AccessToken.refreshCurrentAccessTokenAsync(PermissionsActivity.this);
+    }
+
+    // Facebook Login Callbacks
+    @Override
+    public void onSuccess(LoginResult loginResult) {
+        // Refresh token cached on device after login succeeds
+        AccessToken.refreshCurrentAccessTokenAsync(this);
+    }
+
+    @Override
+    public void onCancel() {
+        // Handle user cancel ...
+    }
+
+    @Override
+    public void onError(FacebookException error) {
+        // Handle exception ...
+    }
+
+
+    // Access Token Refresh Callbacks
+    @Override
+    public void OnTokenRefreshed(AccessToken accessToken) {
+        if (accessToken == null) {
+            LoginManager.getInstance().logOut();
+            Intent loginIntent = new Intent(PermissionsActivity.this, FacebookLoginActivity.class);
+            startActivity(loginIntent);
+        } else {
+            setPermissionsSwitches();
+        }
+    }
+
+    @Override
+    public void OnTokenRefreshFailed(FacebookException exception) {
+        // Handle exception ...
+    }
+
+     // Set switch on/off according to current user-granted permissions
+    private void setPermissionsSwitches() {
+        Set<String> permissions = AccessToken.getCurrentAccessToken().getPermissions();
+
+        if (permissions.contains(EMAIL)) {
+            mEmailPermSwitch.setChecked(true);
+        } else {
+            mEmailPermSwitch.setChecked(false);
+        }
+
+        if (permissions.contains(USER_POSTS)) {
+            mUserPostsPermSwitch.setChecked(true);
+        } else {
+            mUserPostsPermSwitch.setChecked(false);
+        }
+
+        if (permissions.contains(PUBLISH_ACTIONS)) {
+            mPublishPostPermSwitch.setChecked(true);
+        } else {
+            mPublishPostPermSwitch.setChecked(false);
+        }
+
+        if (AccessToken.getCurrentAccessToken() != null) {
+            mAppPermSwitch.setChecked(true);
+        } else {
+            mAppPermSwitch.setChecked(false);
+        }
+    }
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/PostFeedActivity.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/PostFeedActivity.java
new file mode 100644
index 000000000..2f89dda01
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/PostFeedActivity.java
@@ -0,0 +1,182 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Button;
+import android.widget.ImageButton;
+import android.widget.ListView;
+import android.widget.TextView;
+
+import com.facebook.AccessToken;
+import com.facebook.CallbackManager;
+import com.facebook.FacebookCallback;
+import com.facebook.FacebookException;
+import com.facebook.fbloginsample.adapters.PostAdapter;
+import com.facebook.fbloginsample.callbacks.GetPostsCallback;
+import com.facebook.fbloginsample.callbacks.PublishPostCallback;
+import com.facebook.fbloginsample.entities.Post;
+import com.facebook.fbloginsample.requests.PostsRequest;
+import com.facebook.login.LoginManager;
+import com.facebook.login.LoginResult;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+public class PostFeedActivity extends Activity implements
+        GetPostsCallback.IGetPostsResponse,
+        PublishPostCallback.IPublishPostResponse,
+        AccessToken.AccessTokenRefreshCallback,
+        FacebookCallback<LoginResult> {
+
+    private static final int PICK_IMAGE = 1;
+    private static final String PUBLISH_ACTIONS = "publish_actions";
+    private static final String SELECT_PICTURE = "Select Picture";
+    private static final String TYPE_IMAGE = "image/*";
+
+    private ListView mPostsListView;
+    private TextView mComposeText;
+    private Uri mAttachmentUri;
+    private CallbackManager mCallbackManager;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_post_feed);
+        mCallbackManager = CallbackManager.Factory.create();
+        LoginManager.getInstance().registerCallback(mCallbackManager, this);
+
+        PostAdapter postApapter = new PostAdapter(this, new ArrayList<Post>());
+        mPostsListView = findViewById(R.id.post_list_view);
+        mPostsListView.setAdapter(postApapter);
+
+        // Attach image
+        ImageButton attachImgBtn = findViewById(R.id.btn_attach);
+        attachImgBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Intent intent = new Intent();
+                intent.setType(TYPE_IMAGE);
+                intent.setAction(Intent.ACTION_GET_CONTENT);
+                startActivityForResult(Intent.createChooser(intent, SELECT_PICTURE), PICK_IMAGE);
+            }
+        });
+
+        // Compose post
+        mComposeText = findViewById(R.id.compose_text);
+        Button composePostBtn = findViewById(R.id.btn_send);
+        composePostBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (AccessToken.getCurrentAccessToken().getPermissions().contains
+                        (PUBLISH_ACTIONS)) {
+                    makePost();
+                } else {
+                    // Get Publish Permissions
+                    LoginManager.getInstance().logInWithPublishPermissions(
+                            PostFeedActivity.this, Arrays.asList(PUBLISH_ACTIONS));
+                }
+            }
+        });
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+        getPosts();
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        mCallbackManager.onActivityResult(requestCode, resultCode, data);
+        if (requestCode == PICK_IMAGE && data != null) {
+            mAttachmentUri = data.getData();
+        }
+    }
+
+
+    // From GetPostsCallback
+    @Override
+    public void onGetPostsCompleted(List<Post> posts) {
+        if (posts != null && !posts.isEmpty()) {
+            mPostsListView.setAdapter(new PostAdapter(PostFeedActivity.this, posts));
+        }
+    }
+
+    // From PublishPostCallback
+    @Override
+    public void onPublishCompleted() {
+        getPosts();
+    }
+
+    // From AccessTokenRefreshCallback
+    @Override
+    public void OnTokenRefreshed(AccessToken accessToken) {
+        makePost();
+    }
+
+    @Override
+    public void OnTokenRefreshFailed(FacebookException e) {
+        // Handle exception ...
+    }
+
+    // From FacebookLogin
+    @Override
+    public void onSuccess(LoginResult loginResult) {
+        // Refresh token cached on device after login succeeds
+        AccessToken.refreshCurrentAccessTokenAsync(this);
+    }
+
+    @Override
+    public void onCancel() {
+        // Handle user cancel ...
+    }
+
+    @Override
+    public void onError(FacebookException e) {
+        // Handle exception ...
+    }
+
+    // Private methods
+    private void getPosts() {
+        PostsRequest.makeGetPostsRequest(new GetPostsCallback(this).getCallback());
+    }
+
+    private void makePost() {
+        if (mAttachmentUri == null) {
+            PostsRequest.makePublishPostRequest(
+                    mComposeText.getText().toString(),
+                    new PublishPostCallback(this).getGraphRequestCallback());
+        } else {
+            PostsRequest.makePublishPostRequest(
+                    mAttachmentUri,
+                    new PublishPostCallback(this).getShareCallback());
+        }
+        mComposeText.setText("");
+        mAttachmentUri = null;
+    }
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/ProfileActivity.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/ProfileActivity.java
new file mode 100644
index 000000000..d9259d470
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/ProfileActivity.java
@@ -0,0 +1,72 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample;
+
+import android.app.Activity;
+import android.graphics.Color;
+import android.os.Bundle;
+import android.widget.TextView;
+
+import com.facebook.drawee.view.SimpleDraweeView;
+import com.facebook.fbloginsample.callbacks.GetUserCallback;
+import com.facebook.fbloginsample.entities.User;
+import com.facebook.fbloginsample.requests.UserRequest;
+
+public class ProfileActivity extends Activity implements GetUserCallback.IGetUserResponse {
+    private SimpleDraweeView mProfilePhotoView;
+    private TextView mName;
+    private TextView mId;
+    private TextView mEmail;
+    private TextView mPermissions;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_profile);
+
+        mProfilePhotoView = findViewById(R.id.profile_photo);
+        mName = findViewById(R.id.name);
+        mId = findViewById(R.id.id);
+        mEmail = findViewById(R.id.email);
+        mPermissions = findViewById(R.id.permissions);
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+        UserRequest.makeUserRequest(new GetUserCallback(ProfileActivity.this).getCallback());
+    }
+
+    @Override
+    public void onCompleted(User user) {
+        mProfilePhotoView.setImageURI(user.getPicture());
+        mName.setText(user.getName());
+        mId.setText(user.getId());
+        if (user.getEmail() == null) {
+            mEmail.setText(R.string.no_email_perm);
+            mEmail.setTextColor(Color.RED);
+        } else {
+            mEmail.setText(user.getEmail());
+            mEmail.setTextColor(Color.BLACK);
+        }
+        mPermissions.setText(user.getPermissions());
+    }
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/Util.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/Util.java
new file mode 100644
index 000000000..2861d4248
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/Util.java
@@ -0,0 +1,63 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample;
+
+import java.text.ParsePosition;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.Locale;
+
+public class Util {
+
+    public static String MakePrettyDate(String getCreatedTime) {
+        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd'T'hh:mm:ssZ", Locale.US);
+        ParsePosition pos = new ParsePosition(0);
+        long then = formatter.parse(getCreatedTime, pos).getTime();
+        long now = new Date().getTime();
+
+        long seconds = (now - then) / 1000;
+        long minutes = seconds / 60;
+        long hours = minutes / 60;
+        long days = hours / 24;
+
+        String friendly = null;
+        long num = 0;
+        if (days > 0) {
+            num = days;
+            friendly = days + " day";
+        } else if (hours > 0) {
+            num = hours;
+            friendly = hours + " hour";
+        } else if (minutes > 0) {
+            num = minutes;
+            friendly = minutes + " minute";
+        } else {
+            num = seconds;
+            friendly = seconds + " second";
+        }
+        if (num > 1) {
+            friendly += "s";
+        }
+        String postTimeStamp = friendly + " ago";
+        return postTimeStamp;
+    }
+
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/adapters/PostAdapter.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/adapters/PostAdapter.java
new file mode 100644
index 000000000..ca62f00c4
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/adapters/PostAdapter.java
@@ -0,0 +1,84 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample.adapters;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.TextView;
+
+import com.facebook.drawee.view.SimpleDraweeView;
+import com.facebook.fbloginsample.R;
+import com.facebook.fbloginsample.Util;
+import com.facebook.fbloginsample.entities.Post;
+import com.facebook.login.widget.ProfilePictureView;
+
+import java.util.List;
+
+public class PostAdapter extends ArrayAdapter<Post> {
+    private Context mContext;
+    private List<Post> mPosts;
+
+    public PostAdapter(Context context, List<Post> posts) {
+        super(context, R.layout.news_feed_item, posts);
+        mContext = context;
+        mPosts = posts;
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        Post post = mPosts.get(position);
+        View rowView = convertView;
+
+        if (rowView == null) {
+            LayoutInflater inflater = (LayoutInflater) mContext.getSystemService(Context
+                    .LAYOUT_INFLATER_SERVICE);
+            rowView = inflater.inflate(R.layout.news_feed_item, null);
+            ViewHolder viewHolder = new ViewHolder();
+            viewHolder.profilePhoto = rowView.findViewById(R.id.profile_photo);
+            viewHolder.postDate = rowView.findViewById(R.id.post_date);
+            viewHolder.username = rowView.findViewById(R.id.username);
+            viewHolder.message = rowView.findViewById(R.id.message);
+            viewHolder.postPicture = rowView.findViewById(R.id.post_picture);
+            rowView.setTag(viewHolder);
+
+        }
+
+        ViewHolder holder = (ViewHolder) rowView.getTag();
+        holder.profilePhoto.setProfileId(post.getFromId());
+        holder.postDate.setText(Util.MakePrettyDate(post.getCreatedTime()));
+        holder.username.setText(post.getFromName());
+        holder.message.setText(post.getMessage());
+        holder.postPicture.setImageURI(post.getPicture());
+
+        return rowView;
+    }
+
+    private static class ViewHolder {
+        ProfilePictureView profilePhoto;
+        TextView postDate;
+        TextView username;
+        TextView message;
+        SimpleDraweeView postPicture;
+    }
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/GetPostsCallback.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/GetPostsCallback.java
new file mode 100644
index 000000000..a91f08133
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/GetPostsCallback.java
@@ -0,0 +1,96 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample.callbacks;
+
+import com.facebook.GraphRequest;
+import com.facebook.GraphResponse;
+import com.facebook.fbloginsample.entities.Post;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class GetPostsCallback {
+
+    public interface IGetPostsResponse {
+        void onGetPostsCompleted(List<Post> posts);
+    }
+
+    private IGetPostsResponse mGetPostsResponse;
+    private GraphRequest.Callback mCallback;
+    private ArrayList<Post> mPosts = new ArrayList<>();
+
+    public GetPostsCallback(final IGetPostsResponse getPostsResponse) {
+
+        mGetPostsResponse = getPostsResponse;
+        mCallback = new GraphRequest.Callback() {
+            @Override
+            public void onCompleted(GraphResponse response) {
+                try {
+                    JSONObject postsObj = response.getJSONObject();
+                    if (postsObj == null) {
+                        return;
+                    }
+                    JSONArray posts = postsObj.getJSONArray("data");
+                    for (int i = 0; i < posts.length(); i++) {
+                        JSONObject jPost = posts.getJSONObject(i);
+                        Post post = jsonToPost(jPost);
+                        if (post != null) {
+                            mPosts.add(post);
+                        }
+                    }
+
+                } catch (JSONException e) {
+                    // Handle exception ...
+                }
+
+                // Handled by PostFeedActivity
+                mGetPostsResponse.onGetPostsCompleted(mPosts);
+            }
+        };
+    }
+
+    private Post jsonToPost(JSONObject post) throws JSONException {
+        String message = null;
+        if (post.has("message")) {
+            message = post.getString("message");
+        }
+        String picture = null;
+        if (post.has("picture")) {
+            picture = post.getString("picture");
+        }
+        String created_time = post.getString("created_time");
+        String id = post.getString("id");
+
+        JSONObject from = post.getJSONObject("from");
+        String from_name = from.getString("name");
+        String from_id = from.getString("id");
+
+        return new Post(message, created_time, id, picture, from_name, from_id);
+    }
+
+    public GraphRequest.Callback getCallback() {
+        return mCallback;
+    }
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/GetUserCallback.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/GetUserCallback.java
new file mode 100644
index 000000000..8feca2137
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/GetUserCallback.java
@@ -0,0 +1,92 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample.callbacks;
+
+import android.net.Uri;
+
+import com.facebook.GraphRequest;
+import com.facebook.GraphResponse;
+import com.facebook.fbloginsample.entities.User;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+public class GetUserCallback {
+
+    public interface IGetUserResponse {
+        void onCompleted(User user);
+    }
+
+    private IGetUserResponse mGetUserResponse;
+    private GraphRequest.Callback mCallback;
+
+    public GetUserCallback(final IGetUserResponse getUserResponse) {
+
+        mGetUserResponse = getUserResponse;
+        mCallback = new GraphRequest.Callback() {
+            @Override
+            public void onCompleted(GraphResponse response) {
+                User user = null;
+                try {
+                    JSONObject userObj = response.getJSONObject();
+                    if (userObj == null) {
+                        return;
+                    }
+                    user = jsonToUser(userObj);
+
+                } catch (JSONException e) {
+                    // Handle exception ...
+                }
+
+                // Handled by ProfileActivity
+                mGetUserResponse.onCompleted(user);
+            }
+        };
+    }
+
+    private User jsonToUser(JSONObject user) throws JSONException {
+        Uri picture = Uri.parse(user.getJSONObject("picture").getJSONObject("data").getString
+                ("url"));
+        String name = user.getString("name");
+        String id = user.getString("id");
+        String email = null;
+        if (user.has("email")) {
+            email = user.getString("email");
+        }
+
+        // Build permissions display string
+        StringBuilder builder = new StringBuilder();
+        JSONArray perms = user.getJSONObject("permissions").getJSONArray("data");
+        builder.append("Permissions:\n");
+        for (int i = 0; i < perms.length(); i++) {
+            builder.append(perms.getJSONObject(i).get("permission")).append(": ").append(perms
+                    .getJSONObject(i).get("status")).append("\n");
+        }
+        String permissions = builder.toString();
+
+        return new User(picture, name, id, email, permissions);
+    }
+
+    public GraphRequest.Callback getCallback() {
+        return mCallback;
+    }
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/PermissionCallback.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/PermissionCallback.java
new file mode 100644
index 000000000..963e2b2f4
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/PermissionCallback.java
@@ -0,0 +1,49 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample.callbacks;
+
+import com.facebook.GraphRequest;
+import com.facebook.GraphResponse;
+
+public class PermissionCallback {
+
+    public interface IPermissionResponse {
+        void onCompleted(GraphResponse response);
+    }
+
+    private GraphRequest.Callback mCallback;
+
+    public PermissionCallback(final IPermissionResponse caller) {
+
+        mCallback = new GraphRequest.Callback() {
+
+            // Handled by PermissionsActivity
+            @Override
+            public void onCompleted(GraphResponse response) {
+                caller.onCompleted(response);
+            }
+        };
+    }
+
+    public GraphRequest.Callback getCallback() {
+        return mCallback;
+    }
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/PublishPostCallback.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/PublishPostCallback.java
new file mode 100644
index 000000000..a68c5a1a7
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/callbacks/PublishPostCallback.java
@@ -0,0 +1,75 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample.callbacks;
+
+import com.facebook.FacebookCallback;
+import com.facebook.FacebookException;
+import com.facebook.GraphRequest;
+import com.facebook.GraphResponse;
+import com.facebook.share.Sharer;
+
+public class PublishPostCallback {
+
+    public interface IPublishPostResponse {
+        void onPublishCompleted();
+    }
+
+    private GraphRequest.Callback mCallback;
+
+    private FacebookCallback<Sharer.Result> mShareCallback;
+
+    public PublishPostCallback(final IPublishPostResponse caller) {
+
+        mCallback = new GraphRequest.Callback() {
+            @Override
+            public void onCompleted(GraphResponse response) {
+                // Handled by PostFeedActivity
+                caller.onPublishCompleted();
+            }
+        };
+
+        mShareCallback = new FacebookCallback<Sharer.Result>() {
+            @Override
+            public void onSuccess(Sharer.Result result) {
+                // Handled by PostFeedActivity
+                caller.onPublishCompleted();
+            }
+
+            @Override
+            public void onCancel() {
+                // Handle user cancel ...
+            }
+
+            @Override
+            public void onError(FacebookException error) {
+                // Handle exception ...
+            }
+        };
+    }
+
+    public GraphRequest.Callback getGraphRequestCallback() {
+        return mCallback;
+    }
+
+    public FacebookCallback<Sharer.Result> getShareCallback() {
+        return mShareCallback;
+    }
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/entities/Post.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/entities/Post.java
new file mode 100644
index 000000000..678dd50cd
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/entities/Post.java
@@ -0,0 +1,65 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample.entities;
+
+public class Post {
+    private final String message;
+    private final String created_time;
+    private final String id;
+    private final String picture;
+    private final String from_name;
+    private final String from_id;
+
+    public Post(String message, String created_time,
+                String id, String picture, String from_name, String from_id) {
+        this.message = message;
+        this.created_time = created_time;
+        this.id = id;
+        this.picture = picture;
+        this.from_name = from_name;
+        this.from_id = from_id;
+    }
+
+    public String getMessage() {
+        return message;
+    }
+
+    public String getCreatedTime() {
+        return created_time;
+    }
+
+    public String getId() {
+        return id;
+    }
+
+    public String getPicture() {
+        return picture;
+    }
+
+    public String getFromName() {
+        return from_name;
+    }
+
+    public String getFromId() {
+        return from_id;
+    }
+
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/entities/User.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/entities/User.java
new file mode 100644
index 000000000..aec599215
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/entities/User.java
@@ -0,0 +1,60 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample.entities;
+
+import android.net.Uri;
+
+public class User {
+    private final Uri picture;
+    private final String name;
+    private final String id;
+    private final String email;
+    private final String permissions;
+
+    public User(Uri picture, String name,
+                String id, String email, String permissions) {
+        this.picture = picture;
+        this.name = name;
+        this.id = id;
+        this.email = email;
+        this.permissions = permissions;
+    }
+
+    public Uri getPicture() {
+        return picture;
+    }
+
+    public String getName() {
+        return name;
+    }
+
+    public String getId() {
+        return id;
+    }
+
+    public String getEmail() {
+        return email;
+    }
+
+    public String getPermissions() {
+        return permissions;
+    }
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/PermissionRequest.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/PermissionRequest.java
new file mode 100644
index 000000000..3e45ea480
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/PermissionRequest.java
@@ -0,0 +1,48 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample.requests;
+
+import com.facebook.AccessToken;
+import com.facebook.GraphRequest;
+import com.facebook.HttpMethod;
+
+public class PermissionRequest {
+    private static final String PERMISSIONS_ENDPOINT = "/me/permissions";
+    private static final String APP = "app";
+
+    public static void makeRevokePermRequest(String permission, GraphRequest.Callback callback) {
+        String graphPath;
+        if (permission.equals(APP)) {
+            graphPath = PERMISSIONS_ENDPOINT;
+        } else {
+            graphPath = PERMISSIONS_ENDPOINT + "/" + permission;
+        }
+
+        GraphRequest request = GraphRequest.newGraphPathRequest(
+                AccessToken.getCurrentAccessToken(),
+                graphPath,
+                callback
+        );
+        request.setHttpMethod(HttpMethod.DELETE);
+        request.executeAsync();
+    }
+
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/PostsRequest.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/PostsRequest.java
new file mode 100644
index 000000000..25c2f924b
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/PostsRequest.java
@@ -0,0 +1,78 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample.requests;
+
+import android.net.Uri;
+import android.os.Bundle;
+
+import com.facebook.AccessToken;
+import com.facebook.FacebookCallback;
+import com.facebook.GraphRequest;
+import com.facebook.HttpMethod;
+import com.facebook.share.ShareApi;
+import com.facebook.share.Sharer;
+import com.facebook.share.model.SharePhoto;
+import com.facebook.share.model.SharePhotoContent;
+
+public class PostsRequest {
+    private static final String FEED_ENDPOINT = "/me/feed";
+
+    public static void makeGetPostsRequest(GraphRequest.Callback callback) {
+
+        Bundle params = new Bundle();
+        params.putString("fields", "message,created_time,id,picture,story,from");
+
+        GraphRequest request = new GraphRequest(
+                AccessToken.getCurrentAccessToken(),
+                FEED_ENDPOINT,
+                params,
+                HttpMethod.GET,
+                callback
+        );
+        request.executeAsync();
+    }
+
+    public static void makePublishPostRequest(String message, GraphRequest.Callback callback) {
+        Bundle params = new Bundle();
+        params.putString("message", message);
+        GraphRequest request = new GraphRequest(
+                AccessToken.getCurrentAccessToken(),
+                FEED_ENDPOINT,
+                params,
+                HttpMethod.POST,
+                callback
+        );
+        request.executeAsync();
+    }
+
+    public static void makePublishPostRequest(Uri attachmentUri, FacebookCallback<Sharer.Result>
+            callback) {
+        SharePhoto photo = new SharePhoto.Builder()
+                .setImageUrl(attachmentUri)
+                .build();
+        SharePhotoContent content = new SharePhotoContent.Builder()
+                .addPhoto(photo)
+                .build();
+
+        ShareApi.share(content, callback);
+    }
+
+}
diff --git a/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/UserRequest.java b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/UserRequest.java
new file mode 100644
index 000000000..941e31d98
--- /dev/null
+++ b/samples/FBLoginSample/src/main/java/com/facebook/fbloginsample/requests/UserRequest.java
@@ -0,0 +1,46 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample.requests;
+
+import android.os.Bundle;
+
+import com.facebook.AccessToken;
+import com.facebook.GraphRequest;
+import com.facebook.HttpMethod;
+
+public class UserRequest {
+    private static final String ME_ENDPOINT = "/me";
+
+    public static void makeUserRequest(GraphRequest.Callback callback) {
+        Bundle params = new Bundle();
+        params.putString("fields", "picture,name,id,email,permissions");
+
+
+        GraphRequest request = new GraphRequest(
+                AccessToken.getCurrentAccessToken(),
+                ME_ENDPOINT,
+                params,
+                HttpMethod.GET,
+                callback
+        );
+        request.executeAsync();
+    }
+}
diff --git a/samples/FBLoginSample/src/main/res/drawable/placeholder.jpg b/samples/FBLoginSample/src/main/res/drawable/placeholder.jpg
new file mode 100644
index 000000000..6f61d19b7
Binary files /dev/null and b/samples/FBLoginSample/src/main/res/drawable/placeholder.jpg differ
diff --git a/samples/FBLoginSample/src/main/res/layout/activity_facebook_login.xml b/samples/FBLoginSample/src/main/res/layout/activity_facebook_login.xml
new file mode 100644
index 000000000..2720458c2
--- /dev/null
+++ b/samples/FBLoginSample/src/main/res/layout/activity_facebook_login.xml
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+              android:orientation="vertical"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent">
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/info"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentTop="true"
+        android:textSize="18sp"
+        />
+
+    <com.facebook.login.widget.LoginButton
+        android:id="@+id/login_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_horizontal"
+        android:layout_marginTop="30dp"
+        android:layout_marginBottom="30dp" />
+
+</LinearLayout>
diff --git a/samples/FBLoginSample/src/main/res/layout/activity_main.xml b/samples/FBLoginSample/src/main/res/layout/activity_main.xml
new file mode 100644
index 000000000..4983ba863
--- /dev/null
+++ b/samples/FBLoginSample/src/main/res/layout/activity_main.xml
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.facebook.fbloginsample.MainActivity" >
+
+    <Button
+        android:id="@+id/btn_profile"
+        android:text="@string/profile"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerHorizontal="true"/>
+    <Button
+        android:id="@+id/btn_posts"
+        android:text="@string/posts_feed"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/btn_profile"
+        android:layout_centerHorizontal="true"/>
+    <Button
+        android:id="@+id/btn_permissions"
+        android:text="@string/permissions"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/btn_posts"
+        android:layout_centerHorizontal="true"/>
+    <Button
+        android:id="@+id/btn_fb_logout"
+        android:text="@string/logout"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/btn_permissions"
+        android:layout_centerHorizontal="true"/>
+
+
+</RelativeLayout>
diff --git a/samples/FBLoginSample/src/main/res/layout/activity_permissions.xml b/samples/FBLoginSample/src/main/res/layout/activity_permissions.xml
new file mode 100644
index 000000000..fe7a3cab4
--- /dev/null
+++ b/samples/FBLoginSample/src/main/res/layout/activity_permissions.xml
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical"
+        android:paddingLeft="@dimen/activity_horizontal_margin"
+        android:paddingRight="@dimen/activity_horizontal_margin"
+        android:paddingTop="@dimen/activity_vertical_margin"
+        android:paddingBottom="@dimen/activity_vertical_margin"
+        tools:context=".ProfileActivity">
+
+    <TextView
+        android:id="@+id/no_fb_review"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="@string/no_fb_review" />
+    <Switch
+        android:id="@+id/switch_email_permission"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="@string/email_permission" />
+    <Switch
+        android:id="@+id/switch_app_permission"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="@string/app_permission" />
+
+    <TextView
+        android:id="@+id/fb_review"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:paddingTop="20dp"
+        android:text="@string/fb_review" />
+    <Switch
+        android:id="@+id/switch_user_posts_permission"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="@string/user_posts_permission" />
+    <Switch
+        android:id="@+id/switch_publish_post_permission"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="@string/make_post_permission" />
+</LinearLayout>
diff --git a/samples/FBLoginSample/src/main/res/layout/activity_post_feed.xml b/samples/FBLoginSample/src/main/res/layout/activity_post_feed.xml
new file mode 100644
index 000000000..91de4bd0d
--- /dev/null
+++ b/samples/FBLoginSample/src/main/res/layout/activity_post_feed.xml
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<LinearLayout
+        xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:tools="http://schemas.android.com/tools"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical"
+        android:paddingLeft="@dimen/activity_horizontal_margin"
+        android:paddingRight="@dimen/activity_horizontal_margin"
+        android:paddingTop="@dimen/activity_vertical_margin"
+        android:paddingBottom="@dimen/activity_vertical_margin"
+        tools:context=".PostFeedActivity">
+
+    <ListView
+        android:id="@+id/post_list_view"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_weight="1"
+        />
+
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="bottom">
+
+        <EditText
+            android:id="@+id/compose_text"
+            android:layout_width="0dp"
+            android:layout_height="match_parent"
+            android:layout_weight="1"
+            android:hint="@string/enter_text"
+            android:inputType="textMultiLine" />
+
+        <ImageButton
+            android:id="@+id/btn_attach"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:src="@android:drawable/ic_menu_camera" />
+        <Button
+            android:id="@+id/btn_send"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/messenger_send_button_text"/>
+    </LinearLayout>
+</LinearLayout>
diff --git a/samples/FBLoginSample/src/main/res/layout/activity_profile.xml b/samples/FBLoginSample/src/main/res/layout/activity_profile.xml
new file mode 100644
index 000000000..30709e9e9
--- /dev/null
+++ b/samples/FBLoginSample/src/main/res/layout/activity_profile.xml
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:fresco="http://schemas.android.com/tools"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical"
+        android:paddingLeft="@dimen/activity_horizontal_margin"
+        android:paddingRight="@dimen/activity_horizontal_margin"
+        android:paddingTop="@dimen/activity_vertical_margin"
+        android:paddingBottom="@dimen/activity_vertical_margin"
+        tools:context=".ProfileActivity">
+
+    <com.facebook.drawee.view.SimpleDraweeView
+        android:id="@+id/profile_photo"
+        android:layout_width="128dp"
+        android:layout_height="128dp"
+        fresco:placeholderiImage="@drawable/com_facebook_profile_picture_blank_square"
+        android:layout_margin="@dimen/margin_small" />
+
+    <TextView
+        android:id="@+id/name"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        tools:text="Name" />
+
+    <TextView
+        android:id="@+id/id"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        tools:text="ID" />
+
+    <TextView
+        android:id="@+id/email"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        tools:text="Email" />
+
+    <TextView
+        android:id="@+id/permissions"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        tools:text="Permissions" />
+</LinearLayout>
diff --git a/samples/FBLoginSample/src/main/res/layout/news_feed_item.xml b/samples/FBLoginSample/src/main/res/layout/news_feed_item.xml
new file mode 100644
index 000000000..aed656a18
--- /dev/null
+++ b/samples/FBLoginSample/src/main/res/layout/news_feed_item.xml
@@ -0,0 +1,84 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:fresco="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    >
+
+    <com.facebook.login.widget.ProfilePictureView
+        android:id="@+id/profile_photo"
+        android:layout_width="64dp"
+        android:layout_height="64dp"
+        android:layout_alignParentTop="true"
+        android:layout_margin="@dimen/margin_small">
+    </com.facebook.login.widget.ProfilePictureView>
+
+    <TextView
+        android:id="@+id/post_date"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentTop="true"
+        android:layout_alignParentRight="true"
+        android:layout_margin="@dimen/margin_small"
+        tools:text="HH:MM"
+        android:textSize="@dimen/text_size_normal">
+    </TextView>
+
+    <TextView
+        android:id="@+id/username"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_toRightOf="@id/profile_photo"
+        android:layout_toLeftOf="@id/post_date"
+        android:layout_margin="@dimen/margin_small"
+        tools:text="User Name goes here"
+        android:textSize="@dimen/text_size_big">
+    </TextView>
+
+    <TextView
+        android:id="@+id/message"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:minHeight="44dp"
+        android:maxHeight="64dp"
+        android:layout_below="@id/username"
+        android:layout_toRightOf="@id/profile_photo"
+        android:layout_margin="@dimen/margin_small"
+        tools:text="User content goes here"
+        android:textSize="@dimen/text_size_normal"
+        android:autoLink="web">
+    </TextView>
+
+    <com.facebook.drawee.view.SimpleDraweeView
+        android:id="@+id/post_picture"
+        android:layout_width="match_parent"
+        android:layout_height="128dp"
+        android:layout_below="@id/message"
+        android:layout_margin="@dimen/margin_small"
+        fresco:placeholderImage="@drawable/placeholder"
+        fresco:viewAspectRatio="1">
+    </com.facebook.drawee.view.SimpleDraweeView>
+
+</RelativeLayout>
diff --git a/samples/FBLoginSample/src/main/res/mipmap-hdpi/ic_launcher.png b/samples/FBLoginSample/src/main/res/mipmap-hdpi/ic_launcher.png
new file mode 100755
index 000000000..b63bd2f93
Binary files /dev/null and b/samples/FBLoginSample/src/main/res/mipmap-hdpi/ic_launcher.png differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-hdpi/ic_launcher_round.png b/samples/FBLoginSample/src/main/res/mipmap-hdpi/ic_launcher_round.png
new file mode 100755
index 000000000..3250e16c6
Binary files /dev/null and b/samples/FBLoginSample/src/main/res/mipmap-hdpi/ic_launcher_round.png differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-mdpi/ic_launcher.png b/samples/FBLoginSample/src/main/res/mipmap-mdpi/ic_launcher.png
new file mode 100755
index 000000000..d47edc626
Binary files /dev/null and b/samples/FBLoginSample/src/main/res/mipmap-mdpi/ic_launcher.png differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-mdpi/ic_launcher_round.png b/samples/FBLoginSample/src/main/res/mipmap-mdpi/ic_launcher_round.png
new file mode 100755
index 000000000..4f1a75404
Binary files /dev/null and b/samples/FBLoginSample/src/main/res/mipmap-mdpi/ic_launcher_round.png differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-xhdpi/ic_launcher.png b/samples/FBLoginSample/src/main/res/mipmap-xhdpi/ic_launcher.png
new file mode 100755
index 000000000..d820e45f5
Binary files /dev/null and b/samples/FBLoginSample/src/main/res/mipmap-xhdpi/ic_launcher.png differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-xhdpi/ic_launcher_round.png b/samples/FBLoginSample/src/main/res/mipmap-xhdpi/ic_launcher_round.png
new file mode 100755
index 000000000..8ecb1431b
Binary files /dev/null and b/samples/FBLoginSample/src/main/res/mipmap-xhdpi/ic_launcher_round.png differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-xxhdpi/ic_launcher.png b/samples/FBLoginSample/src/main/res/mipmap-xxhdpi/ic_launcher.png
new file mode 100755
index 000000000..621e658b5
Binary files /dev/null and b/samples/FBLoginSample/src/main/res/mipmap-xxhdpi/ic_launcher.png differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-xxhdpi/ic_launcher_round.png b/samples/FBLoginSample/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
new file mode 100755
index 000000000..87062b8e8
Binary files /dev/null and b/samples/FBLoginSample/src/main/res/mipmap-xxhdpi/ic_launcher_round.png differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-xxxhdpi/ic_launcher.png b/samples/FBLoginSample/src/main/res/mipmap-xxxhdpi/ic_launcher.png
new file mode 100755
index 000000000..4f866aa5e
Binary files /dev/null and b/samples/FBLoginSample/src/main/res/mipmap-xxxhdpi/ic_launcher.png differ
diff --git a/samples/FBLoginSample/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png b/samples/FBLoginSample/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
new file mode 100755
index 000000000..00f4ce48f
Binary files /dev/null and b/samples/FBLoginSample/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png differ
diff --git a/samples/FBLoginSample/src/main/res/values/colors.xml b/samples/FBLoginSample/src/main/res/values/colors.xml
new file mode 100644
index 000000000..eb77a2e45
--- /dev/null
+++ b/samples/FBLoginSample/src/main/res/values/colors.xml
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <color name="colorPrimary">#3F51B5</color>
+    <color name="colorPrimaryDark">#303F9F</color>
+    <color name="colorAccent">#FF4081</color>
+</resources>
diff --git a/samples/FBLoginSample/src/main/res/values/dimens.xml b/samples/FBLoginSample/src/main/res/values/dimens.xml
new file mode 100644
index 000000000..97bd5e1f0
--- /dev/null
+++ b/samples/FBLoginSample/src/main/res/values/dimens.xml
@@ -0,0 +1,10 @@
+<resources>
+    <dimen name="activity_horizontal_margin">4dp</dimen>
+    <dimen name="activity_vertical_margin">4dp</dimen>
+    <dimen name="margin_small">2dp</dimen>
+    <dimen name="margin_medium">4dp</dimen>
+
+    <dimen name="text_size_big">18sp</dimen>
+    <dimen name="text_size_normal">14sp</dimen>
+
+</resources>
diff --git a/samples/FBLoginSample/src/main/res/values/strings.xml b/samples/FBLoginSample/src/main/res/values/strings.xml
new file mode 100644
index 000000000..505d55124
--- /dev/null
+++ b/samples/FBLoginSample/src/main/res/values/strings.xml
@@ -0,0 +1,18 @@
+<resources>
+    <string name="app_name">FB Login Sample</string>
+    <string name="facebook_app_id">117498238887011</string>
+    <string name="fb_login_protocol_scheme">fb117498238887011</string>
+    <string name="posts_feed">Posts</string>
+    <string name="logout">Logout</string>
+    <string name="enter_text">Compose a post</string>
+    <string name="profile">Profile</string>
+    <string name="permissions">Permissions</string>
+    <string name="email_permission">Email Permission</string>
+    <string name="user_posts_permission">User Posts Permission</string>
+    <string name="make_post_permission">Make Post Permission</string>
+    <string name="app_permission">Entire App Permission</string>
+    <string name="no_fb_review">Permissions Granted without FB Review</string>
+    <string name="fb_review">Permissions Requiring FB Review</string>
+    <string name="no_email_perm">Email permission not granted</string>
+
+</resources>
diff --git a/samples/FBLoginSample/src/main/res/values/styles.xml b/samples/FBLoginSample/src/main/res/values/styles.xml
new file mode 100644
index 000000000..5885930df
--- /dev/null
+++ b/samples/FBLoginSample/src/main/res/values/styles.xml
@@ -0,0 +1,11 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+</resources>
diff --git a/samples/FBLoginSample/src/test/java/com/facebook/fbloginsample/ExampleUnitTest.java b/samples/FBLoginSample/src/test/java/com/facebook/fbloginsample/ExampleUnitTest.java
new file mode 100644
index 000000000..d5f0fafc5
--- /dev/null
+++ b/samples/FBLoginSample/src/test/java/com/facebook/fbloginsample/ExampleUnitTest.java
@@ -0,0 +1,37 @@
+/**
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ * <p>
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ * <p>
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ * <p>
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.fbloginsample;
+
+import org.junit.Test;
+
+import static junit.framework.Assert.assertEquals;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitLoginActivity.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitLoginActivity.java
index eb2994572..de90efcb2 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitLoginActivity.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitLoginActivity.java
@@ -98,7 +98,8 @@ protected void onCreate(final Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.accountkit_activity_main);
 
-        if (AccountKit.getCurrentAccessToken() != null) {
+        // Check if we're logged in already when the app is first started.
+        if (AccountKit.getCurrentAccessToken() != null && savedInstanceState == null) {
             showHelloActivity(null);
         }
 
diff --git a/samples/LoginSample/src/main/res/layout/accountkit_activity_main.xml b/samples/LoginSample/src/main/res/layout/accountkit_activity_main.xml
index 85d90e742..d36b08fa0 100644
--- a/samples/LoginSample/src/main/res/layout/accountkit_activity_main.xml
+++ b/samples/LoginSample/src/main/res/layout/accountkit_activity_main.xml
@@ -27,6 +27,7 @@
     >
     <LinearLayout style="@style/Sample.ScrollContent">
         <LinearLayout
+            android:id="@+id/configuration_options"
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:orientation="vertical"
diff --git a/samples/RPSSample/AndroidManifest.xml b/samples/RPSSample/AndroidManifest.xml
index bf78b7072..9aa32a366 100644
--- a/samples/RPSSample/AndroidManifest.xml
+++ b/samples/RPSSample/AndroidManifest.xml
@@ -70,7 +70,8 @@
         <meta-data
             android:name="com.facebook.sdk.ApplicationName"
             android:value="@string/facebook_app_name" />
-
+        <meta-data android:name="com.facebook.sdk.AutoLogAppEventsEnabled"
+            android:value="true"/>
         <provider
             android:name="com.facebook.FacebookContentProvider"
             android:authorities="com.facebook.app.FacebookContentProvider157578437735213"
diff --git a/samples/RPSSample/res/values/strings.xml b/samples/RPSSample/res/values/strings.xml
index 0572a4f6f..57ecc3996 100644
--- a/samples/RPSSample/res/values/strings.xml
+++ b/samples/RPSSample/res/values/strings.xml
@@ -42,7 +42,6 @@
     <string name="check_settings">Check Facebook Settings</string>
     <string name="friends_using_rps">Friends Rockin\' RPS</string>
     <string name="friend_activity">Friend\'s Activity</string>
-    <string name="invite_friends">Invite Friends</string>
     <string name="challenge_friends">Challenge Friends</string>
     <string name="challenge_dialog_title">Challenge a Friend</string>
     <string name="challenge_dialog_message">Please come play RPS with me!</string>
diff --git a/samples/RPSSample/src/com/example/rps/MainActivity.java b/samples/RPSSample/src/com/example/rps/MainActivity.java
index f3bad16b1..891df2bc8 100644
--- a/samples/RPSSample/src/com/example/rps/MainActivity.java
+++ b/samples/RPSSample/src/com/example/rps/MainActivity.java
@@ -39,10 +39,14 @@
 import com.facebook.share.model.GameRequestContent;
 import com.facebook.share.widget.GameRequestDialog;
 
+import org.json.JSONObject;
+import org.json.JSONException;
+
 import static com.example.rps.RpsGameUtils.INVALID_CHOICE;
 
 public class MainActivity extends FragmentActivity {
     private static final String TAG = "MainActivity";
+    private static final String INAPP_PURCHASE_DATA = "INAPP_PURCHASE_DATA";
 
     static final int RPS = 0;
     static final int SETTINGS = 1;
@@ -54,7 +58,6 @@
     private MenuItem challenge;
     private MenuItem share;
     private MenuItem message;
-    private MenuItem invite;
     private boolean isResumed = false;
     private boolean hasNativeLink = false;
     private CallbackManager callbackManager;
@@ -64,6 +67,10 @@
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
+
+        FacebookSdk.addLoggingBehavior(LoggingBehavior.APP_EVENTS);
+        FacebookSdk.setIsDebugEnabled(true);
+
         super.onCreate(savedInstanceState);
         accessTokenTracker = new AccessTokenTracker() {
             @Override
@@ -135,6 +142,20 @@ public void onPause() {
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         callbackManager.onActivityResult(requestCode, resultCode, data);
         super.onActivityResult(requestCode, resultCode, data);
+        if (requestCode == RpsFragment.IN_APP_PURCHASE_RESULT) {
+            String purchaseData = data.getStringExtra(INAPP_PURCHASE_DATA);
+
+            if (resultCode == RESULT_OK) {
+                RpsFragment fragment = (RpsFragment) fragments[RPS];
+                try {
+                    JSONObject jo = new JSONObject(purchaseData);
+                    fragment.onInAppPurchaseSuccess(jo);
+                }
+                catch (JSONException e) {
+                    Log.e(TAG, "In app purchase invalid json.", e);
+                }
+            }
+        }
     }
 
     @Override
@@ -164,7 +185,6 @@ public boolean onPrepareOptionsMenu(Menu menu) {
                 message = menu.add(R.string.send_with_messenger);
                 challenge = menu.add(R.string.challenge_friends);
                 settings = menu.add(R.string.check_settings);
-                invite = menu.add(R.string.invite_friends);
             }
             return true;
         } else {
@@ -196,9 +216,6 @@ public boolean onOptionsItemSelected(MenuItem item) {
             RpsFragment fragment = (RpsFragment) fragments[RPS];
             fragment.shareUsingMessengerDialog();
             return true;
-        } else if (item.equals(invite)) {
-            RpsFragment fragment = (RpsFragment) fragments[RPS];
-            fragment.presentAppInviteDialog();
         }
         return false;
     }
diff --git a/samples/RPSSample/src/com/example/rps/RpsFragment.java b/samples/RPSSample/src/com/example/rps/RpsFragment.java
index 675df413f..f60c81ed9 100644
--- a/samples/RPSSample/src/com/example/rps/RpsFragment.java
+++ b/samples/RPSSample/src/com/example/rps/RpsFragment.java
@@ -105,6 +105,8 @@
     private static final String RESPONSE_CODE = "RESPONSE_CODE";
 
     public static final int BILLING_RESPONSE_RESULT_OK = 0;
+    public static final int IN_APP_PURCHASE_RESULT = 1001;
+    public static final int IN_APP_PURCHASE_VERSION = 3;
 
     private static String[] PHOTO_URIS = {null, null, null};
 
@@ -169,7 +171,7 @@ public void onClick(DialogInterface dialogInterface, int i) {
         }
     };
 
-    private class InitHandler extends Handler {
+     private class InitHandler extends Handler {
         @Override
         public void handleMessage(Message msg) {
             if (!isResumed()) {
@@ -441,7 +443,8 @@ private int getResponseCodeFromBundle(Bundle b) {
         else {
             Log.e(TAG, "Unexpected type for bundle response code.");
             Log.e(TAG, o.getClass().getName());
-            throw new RuntimeException("Unexpected type for bundle response code: " + o.getClass().getName());
+            throw new RuntimeException(
+                    "Unexpected type for bundle response code: " + o.getClass().getName());
         }
     }
 
@@ -463,7 +466,7 @@ private void makePurchase() {
             PendingIntent pendingIntent = buyIntentBundle.getParcelable(BUY_INTENT);
             getActivity().startIntentSenderForResult(
                 pendingIntent.getIntentSender(),
-                1001,
+                IN_APP_PURCHASE_RESULT,
                 new Intent(),
                 Integer.valueOf(0),
                 Integer.valueOf(0),
@@ -477,6 +480,32 @@ private void makePurchase() {
         }
     }
 
+    public void onInAppPurchaseSuccess(JSONObject jo)  {
+        String token = null;
+        try {
+            token = jo.getString("purchaseToken");
+            String packageName = jo.getString("packageName");
+            consumePurchase(token, packageName);
+        } catch (JSONException e) {
+            Log.e(TAG, "In app purchase invalid json.", e);
+        }
+    }
+
+    private void consumePurchase(String packageName, String token) {
+        try {
+            int consumeResponse = inAppBillingService.consumePurchase(
+                    IN_APP_PURCHASE_VERSION, packageName, token);
+            if (consumeResponse == 0) {
+                Log.d(TAG, "Successfully consumed package: " + packageName);
+            } else {
+                Log.d(TAG, "Faileds to consume package: " + packageName + " "
+                        + consumeResponse);
+            }
+        } catch (RemoteException e) {
+            Log.e(TAG, "Consuming purchase remote exception.", e);
+        }
+    }
+
     public void shareUsingNativeDialog() {
         if (playerChoice == INVALID_CHOICE || computerChoice == INVALID_CHOICE) {
             ShareContent content = getLinkContent();
@@ -703,7 +732,7 @@ public void onServiceConnected(
                 Utility.logd(TAG, "In app billing service connected");
                 try {
                     Bundle ownedItems = inAppBillingService.getPurchases(
-                        3,
+                        IN_APP_PURCHASE_VERSION,
                         context.getPackageName(),
                         "inapp",
                         null);
@@ -718,24 +747,11 @@ public void onServiceConnected(
 
                         for (int i = 0; i < purchaseDataList.size(); ++i) {
                             String purchaseData = purchaseDataList.get(i);
-                            String signature = signatureList.get(i);
-                            String sku = ownedSkus.get(i);
 
                             try {
                                 JSONObject jo = new JSONObject(purchaseData);
                                 String token = jo.getString("purchaseToken");
-                                int consumeResponse = inAppBillingService.consumePurchase(
-                                    3,
-                                    context.getPackageName(),
-                                    token);
-                                if (response == 0) {
-                                    Log.d(TAG, "Successfully consumed sku: " + sku);
-                                } else {
-                                    Log.d(
-                                        TAG,
-                                        "Error consuming consuming sku " + sku + ". "
-                                            + consumeResponse);
-                                }
+                                consumePurchase(context.getPackageName(), token);
                             }
                             catch (JSONException e) {
                                 Log.e(TAG, "Error parsing purchase data.", e);
diff --git a/samples/ShareIt/res/layout/share_it_view.xml b/samples/ShareIt/res/layout/share_it_view.xml
index b4fe0c07e..65faf509f 100644
--- a/samples/ShareIt/res/layout/share_it_view.xml
+++ b/samples/ShareIt/res/layout/share_it_view.xml
@@ -35,14 +35,6 @@
             android:layout_height="wrap_content"
             android:layout_margin="5dp" />
 
-        <com.facebook.share.widget.LikeView
-            android:id="@+id/like_photo"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_gravity="start"
-            android:layout_margin="5dp"
-            fb:com_facebook_style="button" />
-
         <com.example.shareit.PageSelector
             android:id="@+id/page_selector"
             android:layout_width="wrap_content"
@@ -62,14 +54,5 @@
             android:layout_gravity="center_horizontal"
             android:layout_margin="5dp"
             android:text="@string/main_page_text" />
-
-        <com.facebook.share.widget.LikeView
-            android:id="@+id/like_page"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center_horizontal"
-            android:layout_margin="5dp"
-            fb:com_facebook_object_id="shareitexampleapp"
-            fb:com_facebook_object_type="page" />
     </LinearLayout>
 </ScrollView>
diff --git a/samples/ShareIt/src/com/example/shareit/ShareFragment.java b/samples/ShareIt/src/com/example/shareit/ShareFragment.java
index dc115430a..76ee90d48 100644
--- a/samples/ShareIt/src/com/example/shareit/ShareFragment.java
+++ b/samples/ShareIt/src/com/example/shareit/ShareFragment.java
@@ -20,7 +20,6 @@
 
 package com.example.shareit;
 
-import android.app.Activity;
 import android.content.Intent;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
@@ -35,7 +34,6 @@
 
 import com.facebook.CallbackManager;
 import com.facebook.login.widget.LoginButton;
-import com.facebook.share.widget.LikeView;
 
 import java.util.ArrayList;
 
@@ -70,8 +68,6 @@ public View onCreateView(
         loginButton.setReadPermissions("public_profile");
 
         setupViewPage(view);
-        LikeView pageLike = (LikeView) view.findViewById(R.id.like_page);
-        pageLike.setFragment(this);
         return view;
     }
 
@@ -115,9 +111,6 @@ private void setupViewPage(View view) {
         final PageSelector pageSelector = (PageSelector) view.findViewById(R.id.page_selector);
         pageSelector.setImageCount(IMAGE_IDS.size());
 
-        final LikeView photoLike = (LikeView) view.findViewById(R.id.like_photo);
-        photoLike.setFragment(this);
-
         mViewPage.setOnPageChangeListener(new ViewPager.OnPageChangeListener() {
             @Override
             public void onPageScrolled(
@@ -126,9 +119,6 @@ public void onPageScrolled(
                     int positionOffsetPixels) {
                 pageSelector.setPosition(position);
                 String shareContent = IMAGE_IDS.get(position).second;
-                photoLike.setObjectIdAndType(
-                        shareContent,
-                        LikeView.ObjectType.OPEN_GRAPH);
                 mShareContentChangedListener.onShareContentChanged(shareContent);
             }
 
diff --git a/scripts/build_documentation.sh b/scripts/build_documentation.sh
index 49b58cf04..5abdd8279 100755
--- a/scripts/build_documentation.sh
+++ b/scripts/build_documentation.sh
@@ -38,9 +38,47 @@ popd >/dev/null
 # The root directory where the Facebook SDK for android is cloned
 FB_SDK_ROOT=$(dirname "$FB_SDK_SCRIPT")
 
+# Path to java source file under each kit folder
+PATH_TO_SRC='src/main/java'
+
+# mkdir -p $FB_SDK_ROOT/out
+mkdir -p $FB_SDK_ROOT/out/docs
+
+# The tmp directory where source files can processed
+DOCS_TMP_DIR=out/docs/tmp
+
+# Source folders for Facebook
+FB_SRC_FOLDERS=(
+  'facebook'
+  'facebook-core'
+  'facebook-common'
+  'facebook-login'
+  'facebook-share'
+  'facebook-places'
+  'facebook-messenger'
+  'facebook-applinks'
+)
+
+  echo ""
+  echo "Preparing source files for docs generation"
+  echo ""
+
+# 'Flattens' Facebook sources into a single folder.
+FB_SRC_DEST=$FB_SDK_ROOT/$DOCS_TMP_DIR/facebook/$PATH_TO_SRC
+mkdir -p $FB_SRC_DEST
+
+for (( i = 0; i < ${#FB_SRC_FOLDERS[@]}; i++ ))
+do
+  FB_SRC=${FB_SRC_FOLDERS[$i]}
+
+  FB_SRC_FOLDER=$FB_SDK_ROOT/$FB_SRC/$PATH_TO_SRC
+
+  cp -rn $FB_SRC_FOLDER/ $FB_SRC_DEST
+done
+
 # Source folders of each kit
 KIT_SRC_FOLDERS=(
-  'facebook'
+  $DOCS_TMP_DIR/facebook
   'accountkit/accountkitsdk'
   'ads/ads'
 )
@@ -52,31 +90,30 @@ KIT_DOC_FOLDERS=(
   'audiencenetwork'
 )
 
-# Path to java source file under each kit folder
-PATH_TO_SRC='src/main/java'
-
-mkdir -p $FB_SDK_ROOT/docs
-
 for (( i = 0; i < ${#KIT_SRC_FOLDERS[@]}; i++ ))
 do
   KIT_SRC=${KIT_SRC_FOLDERS[$i]}
   KIT_DOC=${KIT_DOC_FOLDERS[$i]}
 
   SRC_FOLDER=$FB_SDK_ROOT/$KIT_SRC/$PATH_TO_SRC
-  DOC_FOLDER=$FB_SDK_ROOT/docs/$KIT_DOC
-  LOG_FILE=$FB_SDK_ROOT/docs/$KIT_DOC.log
+  DOC_FOLDER=$FB_SDK_ROOT/out/docs/$KIT_DOC
+  LOG_FILE=$FB_SDK_ROOT/out/docs/$KIT_DOC.log
 
   # Find all the facebook packages except internal ones
   # Then use javadoc to generate docs for those packages
   grep --recursive --no-filename -Po '(?<=package )com\.facebook.*?(?=;)' $SRC_FOLDER | sort | uniq | grep -v internal \
     | xargs javadoc -quiet -d $DOC_FOLDER -sourcepath $SRC_FOLDER &> $LOG_FILE
 
-  cd $FB_SDK_ROOT/docs
+  cd $FB_SDK_ROOT/out/docs
   zip --quiet --recurse-paths $DOC_FOLDER.zip $KIT_DOC
 
   echo ""
   echo "Generated docs in $DOC_FOLDER"
   echo "... zip as $DOC_FOLDER.zip"
   echo "... see log file at $LOG_FILE"
+  echo ""
 done
 
+# Clean up tmp directory
+rm -rf ${FB_SDK_ROOT:?}/$DOCS_TMP_DIR
+
diff --git a/settings.gradle b/settings.gradle
index 21e4c0a3b..7cb29f60e 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -13,6 +13,7 @@ include ':samples:PlacesGraphSample'
 include ':samples:Scrumptious'
 include ':samples:SwitchUserSample'
 include ':samples:ShareIt'
+include ':samples:FBLoginSample'
 
 if (file('internal/internal-settings.gradle').exists()) {
     apply from: 'internal/internal-settings.gradle'
