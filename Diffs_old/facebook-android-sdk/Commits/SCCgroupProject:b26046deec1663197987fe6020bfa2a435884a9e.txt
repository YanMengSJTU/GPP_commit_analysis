diff --git a/build.gradle b/build.gradle
index e435642ee..8bdbb7557 100644
--- a/build.gradle
+++ b/build.gradle
@@ -13,3 +13,6 @@ allprojects {
         mavenCentral()
     }
 }
+
+apply plugin: 'java'
+apply from: 'cobertura.gradle'
\ No newline at end of file
diff --git a/cobertura.gradle b/cobertura.gradle
new file mode 100644
index 000000000..12df2586c
--- /dev/null
+++ b/cobertura.gradle
@@ -0,0 +1,51 @@
+logger.info "Configuring Cobertura Plugin"
+
+configurations{
+  coberturaRuntime {extendsFrom testRuntime}
+}
+
+dependencies {
+  coberturaRuntime 'net.sourceforge.cobertura:cobertura:1.9.4'
+}
+
+def serFile="${project.buildDir}/cobertura.ser"
+def classes="${project.buildDir}/classes/main"
+def classesCopy="${classes}-copy"
+
+
+task cobertura(type: Test){
+  dependencies {
+    testRuntime 'net.sourceforge.cobertura:cobertura:1.9.4'
+  }
+
+  systemProperty "net.sourceforge.cobertura.datafile", serFile
+}
+
+cobertura.doFirst  {
+  logger.quiet "Instrumenting classes for Cobertura"
+  ant {
+    delete(file:serFile, failonerror:false)
+    delete(dir: classesCopy, failonerror:false)
+    copy(todir: classesCopy) { fileset(dir: classes) }
+
+    taskdef(resource:'tasks.properties', classpath: configurations.coberturaRuntime.asPath)
+    'cobertura-instrument'(datafile: serFile) {
+      fileset(dir: classes,
+              includes:"**/*.class",
+              excludes:"**/*Test.class")
+    }
+  }
+}
+
+cobertura.doLast{
+  if (new File(classesCopy).exists()) {
+    //create html cobertura report
+    ant.'cobertura-report'(destdir:"${project.reportsDir}/cobertura",
+            format:'html', srcdir:"src/main/java", datafile: serFile)
+    //create xml cobertura report
+     ant.'cobertura-report'(destdir:"${project.reportsDir}/cobertura",
+            format:'xml', srcdir:"src/main/java", datafile: serFile)
+    ant.delete(file: classes)
+    ant.move(file: classesCopy, tofile: classes)
+  }
+}
\ No newline at end of file
