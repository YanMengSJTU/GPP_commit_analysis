diff --git a/facebook/build.gradle b/facebook/build.gradle
index 8754881ce..5c9de2f29 100644
--- a/facebook/build.gradle
+++ b/facebook/build.gradle
@@ -8,10 +8,10 @@ project.group = 'com.facebook.android'
 
 dependencies {
     // Facebook Dependencies
-    compile 'com.android.support:support-v4:23.4.0'
-    compile 'com.android.support:appcompat-v7:23.4.0'
-    compile 'com.android.support:cardview-v7:23.4.0'
-    compile 'com.android.support:customtabs:23.4.0'
+    compile 'com.android.support:support-v4:25.0.0'
+    compile 'com.android.support:appcompat-v7:25.0.0'
+    compile 'com.android.support:cardview-v7:25.0.0'
+    compile 'com.android.support:customtabs:25.0.0'
     compile 'com.parse.bolts:bolts-android:1.4.0'
 
     // Unit Tests
diff --git a/facebook/src/androidTest/java/com/facebook/appevents/UpdateUserPropertiesTests.java b/facebook/src/androidTest/java/com/facebook/appevents/UpdateUserPropertiesTests.java
new file mode 100644
index 000000000..ebc23cd87
--- /dev/null
+++ b/facebook/src/androidTest/java/com/facebook/appevents/UpdateUserPropertiesTests.java
@@ -0,0 +1,55 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.appevents;
+
+import android.os.Bundle;
+
+import com.facebook.FacebookTestCase;
+import com.facebook.GraphRequest;
+import com.facebook.GraphResponse;
+import com.facebook.TestBlocker;
+
+public class UpdateUserPropertiesTests extends FacebookTestCase {
+    public void testUserUpdateProperties() throws Exception {
+        final TestBlocker blocker = getTestBlocker();
+        Bundle parameters = new Bundle();
+        parameters.putString("custom_value", "1");
+        AppEventsLogger.setUserID("1");
+        AppEventsLogger.updateUserProperties(
+                parameters,
+                getApplicationId(),
+                new GraphRequest.Callback() {
+            @Override
+            public void onCompleted(GraphResponse response) {
+                if (response.getError() != null) {
+                    blocker.setException(response.getError().getException());
+                }
+
+                blocker.signal();
+            }
+        });
+
+        blocker.waitForSignals(1);
+        if (blocker.getException() != null) {
+            throw blocker.getException();
+        }
+    }
+}
diff --git a/facebook/src/androidTest/java/com/facebook/internal/UtilityTest.java b/facebook/src/androidTest/java/com/facebook/internal/UtilityTest.java
index 464531a21..3480a0f27 100644
--- a/facebook/src/androidTest/java/com/facebook/internal/UtilityTest.java
+++ b/facebook/src/androidTest/java/com/facebook/internal/UtilityTest.java
@@ -29,8 +29,8 @@
 
     @LargeTest
     public void testFetchedAppSettingsErrorClassification() throws Exception {
-        Utility.FetchedAppSettings fetchedAppSettings =
-                Utility.queryAppSettings(getApplicationId(), false);
+        FetchedAppSettings fetchedAppSettings =
+                FetchedAppSettingsManager.queryAppSettings(getApplicationId(), false);
         FacebookRequestErrorClassification errorClassification = fetchedAppSettings
                 .getErrorClassification();
         assertNotNull(errorClassification);
diff --git a/facebook/src/main/java/com/facebook/AccessToken.java b/facebook/src/main/java/com/facebook/AccessToken.java
index 523b34c6f..289e99e7c 100644
--- a/facebook/src/main/java/com/facebook/AccessToken.java
+++ b/facebook/src/main/java/com/facebook/AccessToken.java
@@ -23,8 +23,6 @@
 import android.annotation.SuppressLint;
 import android.content.Intent;
 import android.os.Bundle;
-import android.os.Handler;
-import android.os.Looper;
 import android.os.Parcel;
 import android.os.Parcelable;
 import android.support.annotation.Nullable;
@@ -37,7 +35,13 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import java.util.*;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Date;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
 
 /**
  * This class represents an immutable access token for using Facebook APIs. It also includes
diff --git a/facebook/src/main/java/com/facebook/FacebookRequestError.java b/facebook/src/main/java/com/facebook/FacebookRequestError.java
index 1512b6d59..596e2691e 100644
--- a/facebook/src/main/java/com/facebook/FacebookRequestError.java
+++ b/facebook/src/main/java/com/facebook/FacebookRequestError.java
@@ -24,6 +24,8 @@
 import android.os.Parcelable;
 
 import com.facebook.internal.FacebookRequestErrorClassification;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.Utility;
 
 import org.json.JSONException;
@@ -442,8 +444,8 @@ static FacebookRequestError checkResponseAndCreateError(
 
     static synchronized FacebookRequestErrorClassification getErrorClassification() {
         FacebookRequestErrorClassification errorClassification;
-        Utility.FetchedAppSettings appSettings =
-                Utility.getAppSettingsWithoutQuery(FacebookSdk.getApplicationId());
+        FetchedAppSettings appSettings =
+                FetchedAppSettingsManager.getAppSettingsWithoutQuery(FacebookSdk.getApplicationId());
         if (appSettings == null) {
             return FacebookRequestErrorClassification.getDefaultErrorClassification();
         }
diff --git a/facebook/src/main/java/com/facebook/FacebookSdk.java b/facebook/src/main/java/com/facebook/FacebookSdk.java
index 2e143b371..f8d56db40 100644
--- a/facebook/src/main/java/com/facebook/FacebookSdk.java
+++ b/facebook/src/main/java/com/facebook/FacebookSdk.java
@@ -27,12 +27,12 @@
 import android.content.pm.PackageManager;
 import android.content.pm.Signature;
 import android.os.AsyncTask;
-import android.text.TextUtils;
 import android.util.Base64;
 import android.util.Log;
 
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.internal.AppEventsLoggerUtility;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.LockOnGetVariable;
 import com.facebook.internal.BoltsMeasurementEventListener;
 import com.facebook.internal.AttributionIdentifiers;
@@ -40,7 +40,6 @@
 import com.facebook.internal.ServerProtocol;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
-import com.facebook.internal.WebDialog;
 
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -212,7 +211,7 @@ public static synchronized void sdkInitialize(
         sdkInitialized = true;
 
         // Load app settings from network so that dialog configs are available
-        Utility.loadAppSettingsAsync(FacebookSdk.applicationContext, applicationId);
+        FetchedAppSettingsManager.loadAppSettingsAsync(FacebookSdk.applicationContext, applicationId);
         // Fetch available protocol versions from the apps on the device
         NativeProtocol.updateAllAvailableProtocolVersionsAsync();
 
diff --git a/facebook/src/main/java/com/facebook/FacebookSdkVersion.java b/facebook/src/main/java/com/facebook/FacebookSdkVersion.java
index 1b0ebe765..6e0d5c43c 100644
--- a/facebook/src/main/java/com/facebook/FacebookSdkVersion.java
+++ b/facebook/src/main/java/com/facebook/FacebookSdkVersion.java
@@ -21,5 +21,5 @@
 package com.facebook;
 
 final class FacebookSdkVersion {
-    public static final String BUILD = "4.16.1";
+    public static final String BUILD = "4.17.0";
 }
diff --git a/facebook/src/main/java/com/facebook/GraphResponse.java b/facebook/src/main/java/com/facebook/GraphResponse.java
index 34868efb4..f7de20e11 100644
--- a/facebook/src/main/java/com/facebook/GraphResponse.java
+++ b/facebook/src/main/java/com/facebook/GraphResponse.java
@@ -359,8 +359,7 @@ public String toString() {
         }
 
         if (!(object instanceof JSONArray) || ((JSONArray) object).length() != numRequests) {
-            FacebookException exception = new FacebookException("Unexpected number of results");
-            throw exception;
+            throw new FacebookException("Unexpected number of results");
         }
 
         JSONArray jsonArray = (JSONArray) object;
diff --git a/facebook/src/main/java/com/facebook/Profile.java b/facebook/src/main/java/com/facebook/Profile.java
index 919ba1686..22488c669 100644
--- a/facebook/src/main/java/com/facebook/Profile.java
+++ b/facebook/src/main/java/com/facebook/Profile.java
@@ -21,7 +21,6 @@
 package com.facebook;
 
 import android.net.Uri;
-import android.os.Bundle;
 import android.os.Parcel;
 import android.os.Parcelable;
 import android.support.annotation.Nullable;
diff --git a/facebook/src/main/java/com/facebook/appevents/AnalyticsUserIDStore.java b/facebook/src/main/java/com/facebook/appevents/AnalyticsUserIDStore.java
new file mode 100644
index 000000000..960ab1c76
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/appevents/AnalyticsUserIDStore.java
@@ -0,0 +1,113 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.appevents;
+
+import android.content.SharedPreferences;
+import android.preference.PreferenceManager;
+import android.util.Log;
+
+import com.facebook.FacebookSdk;
+import com.facebook.appevents.internal.AppEventUtility;
+
+import java.util.concurrent.locks.ReentrantReadWriteLock;
+
+class AnalyticsUserIDStore {
+    private static final String TAG = AnalyticsUserIDStore.class.getSimpleName();
+    private static final String ANALYTICS_USER_ID_KEY =
+            "com.facebook.appevents.AnalyticsUserIDStore.userID";
+
+    private static ReentrantReadWriteLock lock = new ReentrantReadWriteLock();
+    private static String userID;
+    private static volatile boolean initialized = false;
+
+    public static void initStore() {
+        if (initialized) {
+            return;
+        }
+
+        AppEventsLogger.getAnalyticsExecutor().execute(new Runnable() {
+            @Override
+            public void run() {
+                initAndWait();
+            }
+        });
+    }
+
+    public static void setUserID(final String id) {
+        AppEventUtility.assertIsNotMainThread();
+        if (!initialized) {
+            Log.w(TAG, "initStore should have been called before calling setUserID");
+            initAndWait();
+        }
+
+        AppEventsLogger.getAnalyticsExecutor().execute(new Runnable() {
+            @Override
+            public void run() {
+                lock.writeLock().lock();
+                try {
+                    userID = id;
+                    SharedPreferences sharedPreferences = PreferenceManager
+                            .getDefaultSharedPreferences(
+                                    FacebookSdk.getApplicationContext());
+                    SharedPreferences.Editor editor = sharedPreferences.edit();
+                    editor.putString(ANALYTICS_USER_ID_KEY, userID);
+                    editor.apply();
+                } finally {
+                    lock.writeLock().unlock();
+                }
+            }
+        });
+    }
+
+    public static String getUserID() {
+        if (!initialized) {
+            Log.w(TAG, "initStore should have been called before calling setUserID");
+            initAndWait();
+        }
+
+        lock.readLock().lock();
+        try {
+            return userID;
+        } finally {
+            lock.readLock().unlock();
+        }
+    }
+
+    private static void initAndWait() {
+        if (initialized) {
+            return;
+        }
+
+        lock.writeLock().lock();
+        try {
+            if (initialized) {
+                return;
+            }
+
+            SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(
+                    FacebookSdk.getApplicationContext());
+            userID = sharedPreferences.getString(ANALYTICS_USER_ID_KEY, null);
+            initialized = true;
+        } finally {
+            lock.writeLock().unlock();
+        }
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/appevents/AppEvent.java b/facebook/src/main/java/com/facebook/appevents/AppEvent.java
index 52d2d7c98..af8ffd51b 100644
--- a/facebook/src/main/java/com/facebook/appevents/AppEvent.java
+++ b/facebook/src/main/java/com/facebook/appevents/AppEvent.java
@@ -124,7 +124,7 @@ private static void validateIdentifier(String identifier) throws FacebookExcepti
             );
         }
 
-        boolean alreadyValidated = false;
+        boolean alreadyValidated;
         synchronized (validatedIdentifiers) {
             alreadyValidated = validatedIdentifiers.contains(identifier);
         }
@@ -174,6 +174,11 @@ private static JSONObject getJSONObjectForAppEvent(
             eventObject.put("_implicitlyLogged", "1");
         }
 
+        String externalAnalyticsUserId = AppEventsLogger.getUserID();
+        if (externalAnalyticsUserId != null) {
+            eventObject.put("_app_user_id", externalAnalyticsUserId);
+        }
+
         if (parameters != null) {
             for (String key : parameters.keySet()) {
 
@@ -254,7 +259,7 @@ private String calculateChecksum() {
 
     private static String md5Checksum(String toHash )
     {
-        String hash = null;
+        String hash;
         try
         {
             MessageDigest digest = MessageDigest.getInstance("MD5");
diff --git a/facebook/src/main/java/com/facebook/appevents/AppEventQueue.java b/facebook/src/main/java/com/facebook/appevents/AppEventQueue.java
index 690611996..25656822b 100644
--- a/facebook/src/main/java/com/facebook/appevents/AppEventQueue.java
+++ b/facebook/src/main/java/com/facebook/appevents/AppEventQueue.java
@@ -31,6 +31,8 @@
 import com.facebook.GraphRequest;
 import com.facebook.GraphResponse;
 import com.facebook.LoggingBehavior;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.Logger;
 import com.facebook.internal.Utility;
 
@@ -38,7 +40,6 @@
 import org.json.JSONException;
 
 import java.util.ArrayList;
-import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
 import java.util.concurrent.Executors;
@@ -194,8 +195,8 @@ private static GraphRequest buildRequestForSession(
             final FlushStatistics flushState) {
         String applicationId = accessTokenAppId.getApplicationId();
 
-        Utility.FetchedAppSettings fetchedAppSettings =
-                Utility.queryAppSettings(applicationId, false);
+        FetchedAppSettings fetchedAppSettings =
+                FetchedAppSettingsManager.queryAppSettings(applicationId, false);
 
         final GraphRequest postRequest = GraphRequest.newPostRequest(
                 null,
diff --git a/facebook/src/main/java/com/facebook/appevents/AppEventStore.java b/facebook/src/main/java/com/facebook/appevents/AppEventStore.java
index 35d6bc518..fb5f45ffe 100644
--- a/facebook/src/main/java/com/facebook/appevents/AppEventStore.java
+++ b/facebook/src/main/java/com/facebook/appevents/AppEventStore.java
@@ -21,15 +21,12 @@
 package com.facebook.appevents;
 
 import android.content.Context;
-import android.os.Looper;
 import android.util.Log;
 
 import com.facebook.FacebookSdk;
 import com.facebook.appevents.internal.AppEventUtility;
 import com.facebook.internal.Utility;
 
-import junit.framework.Assert;
-
 import java.io.BufferedInputStream;
 import java.io.BufferedOutputStream;
 import java.io.FileNotFoundException;
@@ -38,8 +35,6 @@
 import java.io.ObjectInputStream;
 import java.io.ObjectOutputStream;
 import java.io.ObjectStreamClass;
-import java.util.HashMap;
-import java.util.List;
 
 class AppEventStore {
     private static final String TAG = AppEventStore.class.getName();
diff --git a/facebook/src/main/java/com/facebook/appevents/AppEventsLogger.java b/facebook/src/main/java/com/facebook/appevents/AppEventsLogger.java
index 2652736c8..b3d7ea1eb 100644
--- a/facebook/src/main/java/com/facebook/appevents/AppEventsLogger.java
+++ b/facebook/src/main/java/com/facebook/appevents/AppEventsLogger.java
@@ -43,6 +43,7 @@
 import com.facebook.appevents.internal.ActivityLifecycleTracker;
 import com.facebook.internal.AttributionIdentifiers;
 import com.facebook.internal.BundleJSONConverter;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.Logger;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
@@ -222,6 +223,8 @@ public static void activateApp(Application application, String applicationId) {
                     "activateApp");
         }
 
+        AnalyticsUserIDStore.initStore();
+
         if (applicationId == null) {
             applicationId = FacebookSdk.getApplicationId();
         }
@@ -280,6 +283,8 @@ public static void activateApp(Context context, String applicationId) {
             throw new IllegalArgumentException("Both context and applicationId must be non-null");
         }
 
+        AnalyticsUserIDStore.initStore();
+
         if ((context instanceof Activity)) {
             setSourceApplication((Activity) context);
         } else {
@@ -695,6 +700,94 @@ static String getPushNotificationsRegistrationId() {
         }
     }
 
+    /**
+     * Sets a user id to associate with all app events. This can be used to associate your own
+     * user id with the app events logged from this instance of an application.
+     *
+     * The user ID will be persisted between application instantces.
+     *
+     * @param userID A User ID
+     */
+    public static void setUserID(final String userID) {
+        AnalyticsUserIDStore.setUserID(userID);
+    }
+
+    /**
+     * Returns the set user id else null.
+     */
+    public static String getUserID() {
+       return AnalyticsUserIDStore.getUserID();
+    }
+
+    /**
+     * Clears the currently set user id.
+     */
+    public static void clearUserID() {
+        AnalyticsUserIDStore.setUserID(null);
+    }
+
+    public static void updateUserProperties(
+            Bundle parameters,
+            GraphRequest.Callback callback) {
+        updateUserProperties(
+                parameters,
+                FacebookSdk.getApplicationId(),
+                callback);
+    }
+
+    public static void updateUserProperties(
+            final Bundle parameters,
+            final String applicationID,
+            final GraphRequest.Callback callback) {
+        final String userID = getUserID();
+        if (userID == null || userID.isEmpty()) {
+            Logger.log(
+                    LoggingBehavior.APP_EVENTS,
+                    TAG,
+                    "AppEventsLogger userID cannot be null or empty");
+            return;
+        }
+
+        getAnalyticsExecutor().execute(new Runnable() {
+            @Override
+            public void run() {
+                Bundle userPropertiesParams = new Bundle();
+                userPropertiesParams.putString("user_unique_id", userID);
+                userPropertiesParams.putBundle("custom_data", parameters);
+                // This call must be run on the background thread
+                AttributionIdentifiers identifiers =
+                        AttributionIdentifiers.getAttributionIdentifiers(
+                            FacebookSdk.getApplicationContext());
+                if (identifiers != null && identifiers.getAndroidAdvertiserId() != null) {
+                    userPropertiesParams.putString(
+                            "advertiser_id",
+                            identifiers.getAndroidAdvertiserId());
+                }
+
+                Bundle data = new Bundle();
+                try {
+                    JSONObject userData = BundleJSONConverter.convertToJSON(userPropertiesParams);
+                    JSONArray dataArray = new JSONArray();
+                    dataArray.put(userData);
+
+                    data.putString(
+                            "data", dataArray.toString());
+                } catch (JSONException ex) {
+                    throw new FacebookException("Failed to construct request", ex);
+                }
+
+                GraphRequest request = new GraphRequest(
+                        AccessToken.getCurrentAccessToken(),
+                        String.format(Locale.US, "%s/user_properties", applicationID),
+                        data,
+                        HttpMethod.POST,
+                        callback);
+                request.setSkipClientToken(true);
+                request.executeAsync();
+            }
+        });
+    }
+
     /**
      * This method is intended only for internal use by the Facebook SDK and other use is
      * unsupported.
@@ -776,7 +869,7 @@ public void run() {
                 }
 
                 for (String applicationId : applicationIds) {
-                    Utility.queryAppSettings(applicationId, true);
+                    FetchedAppSettingsManager.queryAppSettings(applicationId, true);
                 }
             }
         };
diff --git a/facebook/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java b/facebook/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java
index f9e27b90b..e174c4c7e 100644
--- a/facebook/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java
+++ b/facebook/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java
@@ -24,15 +24,14 @@
 import android.app.Application;
 import android.content.Context;
 import android.os.Bundle;
-import android.os.Looper;
 import android.util.Log;
 
 import com.facebook.FacebookSdk;
 import com.facebook.appevents.AppEventsLogger;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.Utility;
 
-import junit.framework.Assert;
-
 import java.util.UUID;
 import java.util.concurrent.Executors;
 import java.util.concurrent.ScheduledExecutorService;
@@ -268,8 +267,8 @@ public void run() {
     }
 
     private static int getSessionTimeoutInSeconds() {
-        Utility.FetchedAppSettings settings =
-                Utility.getAppSettingsWithoutQuery(FacebookSdk.getApplicationId());
+        FetchedAppSettings settings =
+                FetchedAppSettingsManager.getAppSettingsWithoutQuery(FacebookSdk.getApplicationId());
         if (settings == null) {
             return Constants.getDefaultAppEventsSessionTimeoutInSeconds();
         }
diff --git a/facebook/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java b/facebook/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java
index b2d069d15..7b886dc51 100644
--- a/facebook/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java
+++ b/facebook/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java
@@ -24,8 +24,8 @@
 import android.os.Bundle;
 
 import com.facebook.appevents.AppEventsLogger;
-import com.facebook.internal.Utility;
-import com.facebook.internal.Utility.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
 
 class AutomaticAnalyticsLogger {
 
@@ -35,7 +35,7 @@ public static void logActivityTimeSpentEvent(
             String activityName,
             long timeSpentInSeconds) {
         AppEventsLogger l = AppEventsLogger.newLogger(context);
-        final FetchedAppSettings settings = Utility.queryAppSettings(appId, false);
+        final FetchedAppSettings settings = FetchedAppSettingsManager.queryAppSettings(appId, false);
         if (settings.getAutomaticLoggingEnabled() && timeSpentInSeconds > 0) {
             Bundle params = new Bundle(1);
             params.putCharSequence(Constants.AA_TIME_SPENT_SCREEN_PARAMETER_NAME, activityName);
diff --git a/facebook/src/main/java/com/facebook/appevents/internal/SessionLogger.java b/facebook/src/main/java/com/facebook/appevents/internal/SessionLogger.java
index 8b88f5527..fb9d45774 100644
--- a/facebook/src/main/java/com/facebook/appevents/internal/SessionLogger.java
+++ b/facebook/src/main/java/com/facebook/appevents/internal/SessionLogger.java
@@ -20,17 +20,13 @@
 
 package com.facebook.appevents.internal;
 
-import android.app.Activity;
 import android.content.Context;
 import android.os.Bundle;
 import android.text.format.DateUtils;
 
-import com.facebook.FacebookSdk;
 import com.facebook.LoggingBehavior;
 import com.facebook.appevents.AppEventsConstants;
-import com.facebook.appevents.AppEventsLogger;
 import com.facebook.internal.Logger;
-import com.facebook.internal.Utility;
 
 import java.util.Locale;
 
diff --git a/facebook/src/main/java/com/facebook/applinks/FacebookAppLinkResolver.java b/facebook/src/main/java/com/facebook/applinks/FacebookAppLinkResolver.java
index 807d92f1f..6045c7129 100644
--- a/facebook/src/main/java/com/facebook/applinks/FacebookAppLinkResolver.java
+++ b/facebook/src/main/java/com/facebook/applinks/FacebookAppLinkResolver.java
@@ -28,15 +28,20 @@
 import com.facebook.GraphRequest;
 import com.facebook.GraphResponse;
 
-import bolts.AppLink;
-import bolts.AppLinkResolver;
-import bolts.Continuation;
-import bolts.Task;
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import java.util.*;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Map;
+
+import bolts.AppLink;
+import bolts.AppLinkResolver;
+import bolts.Continuation;
+import bolts.Task;
 
 /**
  * Provides an implementation for the {@link AppLinkResolver AppLinkResolver} interface that uses
@@ -93,7 +98,7 @@ public AppLink then(Task<Map<Uri, AppLink>> resolveUrisTask) throws Exception {
         StringBuilder graphRequestFields = new StringBuilder();
 
         for (Uri uri : uris) {
-            AppLink appLink = null;
+            AppLink appLink;
             synchronized (cachedAppLinks) {
                 appLink = cachedAppLinks.get(uri);
             }
@@ -153,7 +158,7 @@ public void onCompleted(GraphResponse response) {
                                 continue;
                             }
 
-                            JSONObject urlData = null;
+                            JSONObject urlData;
                             try {
                                 urlData = responseJson.getJSONObject(uri.toString());
                                 JSONObject appLinkData = urlData.getJSONObject(APP_LINK_KEY);
diff --git a/facebook/src/main/java/com/facebook/devicerequests/internal/DeviceRequestsHelper.java b/facebook/src/main/java/com/facebook/devicerequests/internal/DeviceRequestsHelper.java
new file mode 100644
index 000000000..8c0803f6a
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/devicerequests/internal/DeviceRequestsHelper.java
@@ -0,0 +1,177 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.devicerequests.internal;
+
+import android.annotation.TargetApi;
+import android.content.Context;
+import android.net.nsd.NsdManager;
+import android.net.nsd.NsdServiceInfo;
+import android.os.Build;
+
+import com.facebook.FacebookSdk;
+import com.facebook.internal.FetchedAppSettingsManager;
+import com.facebook.internal.SmartLoginOption;
+import com.facebook.internal.Utility;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.HashMap;
+
+/**
+ * com.facebook.devicerequests.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public class DeviceRequestsHelper {
+
+    public static final String DEVICE_INFO_PARAM = "device_info";
+
+    static final String DEVICE_INFO_DEVICE = "device";
+    static final String DEVICE_INFO_MODEL = "model";
+
+    static final String SDK_HEADER = "fbsdk";
+    static final String SDK_FLAVOR = "android";
+
+    static final String SERVICE_TYPE = "_fb._tcp.";
+
+    private static HashMap<String, NsdManager.RegistrationListener> deviceRequestsListeners =
+            new HashMap<>();
+
+    public static String getDeviceInfo() {
+        // Device info
+        // We don't need all the information in Utility.setAppEventExtendedDeviceInfoParameters
+        // We only want the model so we can show it to the user, so they know which device
+        // the login request comes from
+        JSONObject deviceInfo = new JSONObject();
+        try {
+            deviceInfo.put(DEVICE_INFO_DEVICE, Build.DEVICE);
+            deviceInfo.put(DEVICE_INFO_MODEL, Build.MODEL);
+        } catch (JSONException ignored) {
+        }
+
+        return deviceInfo.toString();
+    }
+
+    public static boolean startAdvertisementService(String userCode) {
+        if (isAvailable()) {
+            return startAdvertisementServiceImpl(userCode);
+        }
+
+        return false;
+    }
+
+    /*
+    returns true if smart login is enabled and the android api level is supported.
+     */
+    public static boolean isAvailable() {
+        return (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) &&
+                FetchedAppSettingsManager.getAppSettingsWithoutQuery(FacebookSdk.getApplicationId()).
+                        getSmartLoginOptions().contains(SmartLoginOption.Enabled);
+    }
+
+    public static void cleanUpAdvertisementService(String userCode) {
+        cleanUpAdvertisementServiceImpl(userCode);
+    }
+
+    @TargetApi(16)
+    private static boolean startAdvertisementServiceImpl(final String userCode) {
+        if (deviceRequestsListeners.containsKey(userCode)) {
+            return true;
+        }
+
+        // Dots in the version will mess up the Bonjour DNS record parsing
+        String sdkVersion = FacebookSdk.getSdkVersion().replace('.', '|');
+        // Other SDKs that adopt this feature should use different flavor name
+        // The whole name should not exceed 60 characters
+        final String nsdServiceName = String.format("%s_%s_%s",
+                // static identifier
+                SDK_HEADER,
+                // sdk type and version
+                // client app parses the string based on this version
+                String.format("%s-%s",
+                        SDK_FLAVOR,
+                        sdkVersion
+                ),
+
+                // Additional fields should be added here
+
+                // short code for the login flow
+                userCode
+        );
+
+        NsdServiceInfo nsdLoginAdvertisementService = new NsdServiceInfo();
+        nsdLoginAdvertisementService.setServiceType(SERVICE_TYPE);
+        nsdLoginAdvertisementService.setServiceName(nsdServiceName);
+        nsdLoginAdvertisementService.setPort(80);
+
+        NsdManager nsdManager = (NsdManager)FacebookSdk
+                .getApplicationContext()
+                .getSystemService(Context.NSD_SERVICE);
+
+        NsdManager.RegistrationListener nsdRegistrationListener =
+                new NsdManager.RegistrationListener() {
+                    @Override
+                    public void onServiceRegistered(NsdServiceInfo NsdServiceInfo) {
+                        // Android may have changed the service name in order to resolve a conflict
+                        if (!nsdServiceName.equals(NsdServiceInfo.getServiceName())) {
+                            cleanUpAdvertisementService(userCode);
+                        }
+                    }
+
+                    @Override
+                    public void onServiceUnregistered(NsdServiceInfo serviceInfo) {
+                    }
+
+                    @Override
+                    public void onRegistrationFailed(NsdServiceInfo serviceInfo, int errorCode) {
+                        cleanUpAdvertisementService(userCode);
+                    }
+
+                    @Override
+                    public void onUnregistrationFailed(NsdServiceInfo serviceInfo, int errorCode) {
+                    }
+                };
+
+        deviceRequestsListeners.put(userCode, nsdRegistrationListener);
+
+        nsdManager.registerService(nsdLoginAdvertisementService,
+                NsdManager.PROTOCOL_DNS_SD,
+                nsdRegistrationListener);
+
+        return true;
+    }
+
+    @TargetApi(16)
+    private static void cleanUpAdvertisementServiceImpl(String userCode) {
+        NsdManager.RegistrationListener nsdRegistrationListener =
+                deviceRequestsListeners.get(userCode);
+        if (nsdRegistrationListener != null) {
+            NsdManager nsdManager = (NsdManager)FacebookSdk
+                    .getApplicationContext()
+                    .getSystemService(Context.NSD_SERVICE);
+
+            nsdManager.unregisterService(nsdRegistrationListener);
+
+            deviceRequestsListeners.remove(userCode);
+        }
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/internal/AnalyticsEvents.java b/facebook/src/main/java/com/facebook/internal/AnalyticsEvents.java
index 753eec00e..bf23211b2 100644
--- a/facebook/src/main/java/com/facebook/internal/AnalyticsEvents.java
+++ b/facebook/src/main/java/com/facebook/internal/AnalyticsEvents.java
@@ -113,4 +113,6 @@
 
     public static final String EVENT_DEVICE_SHARE_BUTTON_CREATE = "fb_device_share_button_create";
     public static final String EVENT_DEVICE_SHARE_BUTTON_DID_TAP= "fb_device_share_button_did_tap";
+
+    public static final String EVENT_SMART_LOGIN_SERVICE = "fb_smart_login_service";
 }
diff --git a/facebook/src/main/java/com/facebook/internal/CollectionMapper.java b/facebook/src/main/java/com/facebook/internal/CollectionMapper.java
index 6ab0f110a..191073e35 100644
--- a/facebook/src/main/java/com/facebook/internal/CollectionMapper.java
+++ b/facebook/src/main/java/com/facebook/internal/CollectionMapper.java
@@ -22,7 +22,6 @@
 
 import com.facebook.FacebookException;
 
-import java.util.HashSet;
 import java.util.Iterator;
 import java.util.LinkedList;
 import java.util.List;
diff --git a/facebook/src/main/java/com/facebook/internal/DialogPresenter.java b/facebook/src/main/java/com/facebook/internal/DialogPresenter.java
index d2f934bd3..065de8b33 100644
--- a/facebook/src/main/java/com/facebook/internal/DialogPresenter.java
+++ b/facebook/src/main/java/com/facebook/internal/DialogPresenter.java
@@ -25,7 +25,6 @@
 import android.content.Intent;
 import android.net.Uri;
 import android.os.Bundle;
-import android.support.v4.app.Fragment;
 
 import com.facebook.FacebookActivity;
 import com.facebook.FacebookException;
@@ -224,8 +223,8 @@ private static Uri getDialogWebFallbackUri(DialogFeature feature) {
         String action = feature.getAction();
         String applicationId = FacebookSdk.getApplicationId();
 
-        Utility.DialogFeatureConfig config =
-                Utility.getDialogFeatureConfig(applicationId, action, featureName);
+        FetchedAppSettings.DialogFeatureConfig config =
+                FetchedAppSettings.getDialogFeatureConfig(applicationId, action, featureName);
         Uri fallbackUrl = null;
         if (config != null) {
             fallbackUrl = config.getFallbackUrl();
@@ -251,8 +250,8 @@ public static int getProtocolVersionForNativeDialog(
             DialogFeature feature) {
         // Return the value from DialogFeatureConfig if available. Otherwise, just
         // default to the min-version
-        Utility.DialogFeatureConfig config =
-                Utility.getDialogFeatureConfig(applicationId, actionName, feature.name());
+        FetchedAppSettings.DialogFeatureConfig config =
+                FetchedAppSettings.getDialogFeatureConfig(applicationId, actionName, feature.name());
         if (config != null) {
             return config.getVersionSpec();
         } else {
diff --git a/facebook/src/main/java/com/facebook/internal/FetchedAppSettings.java b/facebook/src/main/java/com/facebook/internal/FetchedAppSettings.java
new file mode 100644
index 000000000..8b6728f51
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/internal/FetchedAppSettings.java
@@ -0,0 +1,238 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.internal;
+
+import android.net.Uri;
+
+import org.json.JSONArray;
+import org.json.JSONObject;
+
+import java.util.EnumSet;
+import java.util.Map;
+
+/**
+ * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
+ * Android. Use of any of the classes in this package is unsupported, and they may be modified or
+ * removed without warning at any time.
+ */
+public final class FetchedAppSettings {
+    private boolean supportsImplicitLogging;
+    private String nuxContent;
+    private boolean nuxEnabled;
+    private boolean customTabsEnabled;
+    private int sessionTimeoutInSeconds;
+    private EnumSet<SmartLoginOption> smartLoginOptions;
+    private Map<String, Map<String, DialogFeatureConfig>> dialogConfigMap;
+    private boolean automaticLoggingEnabled;
+    private FacebookRequestErrorClassification errorClassification;
+    private String smartLoginBookmarkIconURL;
+    private String smartLoginMenuIconURL;
+
+    public FetchedAppSettings(boolean supportsImplicitLogging,
+                               String nuxContent,
+                               boolean nuxEnabled,
+                               boolean customTabsEnabled,
+                               int sessionTimeoutInSeconds,
+                               EnumSet<SmartLoginOption> smartLoginOptions,
+                               Map<String, Map<String, DialogFeatureConfig>> dialogConfigMap,
+                               boolean automaticLoggingEnabled,
+                               FacebookRequestErrorClassification errorClassification,
+                               String smartLoginBookmarkIconURL,
+                               String smartLoginMenuIconURL
+    ) {
+        this.supportsImplicitLogging = supportsImplicitLogging;
+        this.nuxContent = nuxContent;
+        this.nuxEnabled = nuxEnabled;
+        this.customTabsEnabled = customTabsEnabled;
+        this.dialogConfigMap = dialogConfigMap;
+        this.errorClassification = errorClassification;
+        this.sessionTimeoutInSeconds = sessionTimeoutInSeconds;
+        this.automaticLoggingEnabled = automaticLoggingEnabled;
+        this.smartLoginOptions = smartLoginOptions;
+        this.smartLoginBookmarkIconURL = smartLoginBookmarkIconURL;
+        this.smartLoginMenuIconURL = smartLoginMenuIconURL;
+    }
+
+    public boolean supportsImplicitLogging() {
+        return supportsImplicitLogging;
+    }
+
+    public String getNuxContent() {
+        return nuxContent;
+    }
+
+    public boolean getNuxEnabled() {
+        return nuxEnabled;
+    }
+
+    public boolean getCustomTabsEnabled() {
+        return customTabsEnabled;
+    }
+
+    public int getSessionTimeoutInSeconds() {
+        return sessionTimeoutInSeconds;
+    }
+
+    public boolean getAutomaticLoggingEnabled() {
+        return automaticLoggingEnabled;
+    }
+
+    public EnumSet<SmartLoginOption> getSmartLoginOptions() {
+        return smartLoginOptions;
+    }
+
+    public Map<String, Map<String, DialogFeatureConfig>> getDialogConfigurations() {
+        return dialogConfigMap;
+    }
+
+    public FacebookRequestErrorClassification getErrorClassification() {
+        return errorClassification;
+    }
+
+    public String getSmartLoginBookmarkIconURL() { return smartLoginBookmarkIconURL; }
+    public String getSmartLoginMenuIconURL() { return smartLoginMenuIconURL; }
+
+
+    public static class DialogFeatureConfig {
+        private static final String DIALOG_CONFIG_DIALOG_NAME_FEATURE_NAME_SEPARATOR = "\\|";
+        private static final String DIALOG_CONFIG_NAME_KEY = "name";
+        private static final String DIALOG_CONFIG_VERSIONS_KEY = "versions";
+        private static final String DIALOG_CONFIG_URL_KEY = "url";
+
+        public static DialogFeatureConfig parseDialogConfig(JSONObject dialogConfigJSON) {
+            String dialogNameWithFeature = dialogConfigJSON.optString(DIALOG_CONFIG_NAME_KEY);
+            if (Utility.isNullOrEmpty(dialogNameWithFeature)) {
+                return null;
+            }
+
+            String[] components = dialogNameWithFeature.split(
+                    DIALOG_CONFIG_DIALOG_NAME_FEATURE_NAME_SEPARATOR);
+            if (components.length != 2) {
+                // We expect the format to be dialogName|FeatureName, where both components are
+                // non-empty.
+                return null;
+            }
+
+            String dialogName = components[0];
+            String featureName = components[1];
+            if (Utility.isNullOrEmpty(dialogName) || Utility.isNullOrEmpty(featureName)) {
+                return null;
+            }
+
+            String urlString = dialogConfigJSON.optString(DIALOG_CONFIG_URL_KEY);
+            Uri fallbackUri = null;
+            if (!Utility.isNullOrEmpty(urlString)) {
+                fallbackUri = Uri.parse(urlString);
+            }
+
+            JSONArray versionsJSON = dialogConfigJSON.optJSONArray(DIALOG_CONFIG_VERSIONS_KEY);
+
+            int[] featureVersionSpec = parseVersionSpec(versionsJSON);
+
+            return new DialogFeatureConfig(
+                    dialogName, featureName, fallbackUri, featureVersionSpec);
+        }
+
+        private static int[] parseVersionSpec(JSONArray versionsJSON) {
+            // Null signifies no overrides to the min-version as specified by the SDK.
+            // An empty array would basically turn off the dialog (i.e no supported versions), so
+            // DON'T default to that.
+            int[] versionSpec = null;
+            if (versionsJSON != null) {
+                int numVersions = versionsJSON.length();
+                versionSpec = new int[numVersions];
+                for (int i = 0; i < numVersions; i++) {
+                    // See if the version was stored directly as an Integer
+                    int version = versionsJSON.optInt(i, NativeProtocol.NO_PROTOCOL_AVAILABLE);
+                    if (version == NativeProtocol.NO_PROTOCOL_AVAILABLE) {
+                        // If not, then see if it was stored as a string that can be parsed out.
+                        // If even that fails, then we will leave it as NO_PROTOCOL_AVAILABLE
+                        String versionString = versionsJSON.optString(i);
+                        if (!Utility.isNullOrEmpty(versionString)) {
+                            try {
+                                version = Integer.parseInt(versionString);
+                            } catch (NumberFormatException nfe) {
+                                Utility.logd(Utility.LOG_TAG, nfe);
+                                version = NativeProtocol.NO_PROTOCOL_AVAILABLE;
+                            }
+                        }
+                    }
+
+                    versionSpec[i] = version;
+                }
+            }
+
+            return versionSpec;
+        }
+
+        private String dialogName;
+        private String featureName;
+        private Uri fallbackUrl;
+        private int[] featureVersionSpec;
+
+        private DialogFeatureConfig(
+                String dialogName,
+                String featureName,
+                Uri fallbackUrl,
+                int[] featureVersionSpec) {
+            this.dialogName = dialogName;
+            this.featureName = featureName;
+            this.fallbackUrl = fallbackUrl;
+            this.featureVersionSpec = featureVersionSpec;
+        }
+
+        public String getDialogName() {
+            return dialogName;
+        }
+
+        public String getFeatureName() {
+            return featureName;
+        }
+
+        public Uri getFallbackUrl() {
+            return fallbackUrl;
+        }
+
+        public int[] getVersionSpec() {
+            return featureVersionSpec;
+        }
+    }
+
+    public static DialogFeatureConfig getDialogFeatureConfig(
+            String applicationId,
+            String actionName,
+            String featureName) {
+        if (Utility.isNullOrEmpty(actionName) || Utility.isNullOrEmpty(featureName)) {
+            return null;
+        }
+
+        FetchedAppSettings settings = FetchedAppSettingsManager.
+                getAppSettingsWithoutQuery(applicationId);
+        if (settings != null) {
+            Map<String, DialogFeatureConfig> featureMap =
+                    settings.getDialogConfigurations().get(actionName);
+            if (featureMap != null) {
+                return featureMap.get(featureName);
+            }
+        }
+        return null;
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/internal/FetchedAppSettingsManager.java b/facebook/src/main/java/com/facebook/internal/FetchedAppSettingsManager.java
new file mode 100644
index 000000000..74b77ca3e
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/internal/FetchedAppSettingsManager.java
@@ -0,0 +1,237 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.internal;
+
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.os.Bundle;
+import android.text.TextUtils;
+
+import com.facebook.FacebookSdk;
+import com.facebook.GraphRequest;
+import com.facebook.appevents.internal.Constants;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.HashMap;
+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.atomic.AtomicBoolean;
+
+/**
+ * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
+ * Android. Use of any of the classes in this package is unsupported, and they may be modified or
+ * removed without warning at any time.
+ */
+public final class FetchedAppSettingsManager {
+    private static final String APP_SETTINGS_PREFS_STORE =
+            "com.facebook.internal.preferences.APP_SETTINGS";
+    private static final String APP_SETTINGS_PREFS_KEY_FORMAT =
+            "com.facebook.internal.APP_SETTINGS.%s";
+    private static final String APP_SETTING_SUPPORTS_IMPLICIT_SDK_LOGGING =
+            "supports_implicit_sdk_logging";
+    private static final String APP_SETTING_NUX_CONTENT = "gdpv4_nux_content";
+    private static final String APP_SETTING_NUX_ENABLED = "gdpv4_nux_enabled";
+    private static final String APP_SETTING_CUSTOM_TABS_ENABLED =
+            "gdpv4_chrome_custom_tabs_enabled";
+    private static final String APP_SETTING_DIALOG_CONFIGS = "android_dialog_configs";
+    private static final String APP_SETTING_ANDROID_SDK_ERROR_CATEGORIES =
+            "android_sdk_error_categories";
+    private static final String APP_SETTING_APP_EVENTS_SESSION_TIMEOUT =
+            "app_events_session_timeout";
+    private static final String APP_SETTING_APP_EVENTS_FEATURE_BITMASK =
+            "app_events_feature_bitmask";
+    private static final int AUTOMATIC_LOGGING_ENABLED_BITMASK_FIELD = 1 << 3;
+    private static final String APP_SETTING_SMART_LOGIN_OPTIONS =
+            "seamless_login";
+    private static final String SMART_LOGIN_BOOKMARK_ICON_URL = "smart_login_bookmark_icon_url";
+    private static final String SMART_LOGIN_MENU_ICON_URL = "smart_login_menu_icon_url";
+
+    private static final String[] APP_SETTING_FIELDS = new String[]{
+            APP_SETTING_SUPPORTS_IMPLICIT_SDK_LOGGING,
+            APP_SETTING_NUX_CONTENT,
+            APP_SETTING_NUX_ENABLED,
+            APP_SETTING_CUSTOM_TABS_ENABLED,
+            APP_SETTING_DIALOG_CONFIGS,
+            APP_SETTING_ANDROID_SDK_ERROR_CATEGORIES,
+            APP_SETTING_APP_EVENTS_SESSION_TIMEOUT,
+            APP_SETTING_APP_EVENTS_FEATURE_BITMASK,
+            APP_SETTING_SMART_LOGIN_OPTIONS,
+            SMART_LOGIN_BOOKMARK_ICON_URL,
+            SMART_LOGIN_MENU_ICON_URL,
+    };
+    private static final String APPLICATION_FIELDS = "fields";
+
+    private static Map<String, FetchedAppSettings> fetchedAppSettings =
+            new ConcurrentHashMap<String, FetchedAppSettings>();
+    private static AtomicBoolean loadingSettings = new AtomicBoolean(false);
+
+    public static void loadAppSettingsAsync(
+            final Context context,
+            final String applicationId
+    ) {
+        boolean canStartLoading = loadingSettings.compareAndSet(false, true);
+        if (Utility.isNullOrEmpty(applicationId) ||
+                fetchedAppSettings.containsKey(applicationId) ||
+                !canStartLoading) {
+            return;
+        }
+
+        final String settingsKey = String.format(APP_SETTINGS_PREFS_KEY_FORMAT, applicationId);
+
+        FacebookSdk.getExecutor().execute(new Runnable() {
+            @Override
+            public void run() {
+                // See if we had a cached copy and use that immediately.
+                SharedPreferences sharedPrefs = context.getSharedPreferences(
+                        APP_SETTINGS_PREFS_STORE,
+                        Context.MODE_PRIVATE);
+                String settingsJSONString = sharedPrefs.getString(settingsKey, null);
+                if (!Utility.isNullOrEmpty(settingsJSONString)) {
+                    JSONObject settingsJSON = null;
+                    try {
+                        settingsJSON = new JSONObject(settingsJSONString);
+                    } catch (JSONException je) {
+                        Utility.logd(Utility.LOG_TAG, je);
+                    }
+                    if (settingsJSON != null) {
+                        parseAppSettingsFromJSON(applicationId, settingsJSON);
+                    }
+                }
+
+                JSONObject resultJSON = getAppSettingsQueryResponse(applicationId);
+                if (resultJSON != null) {
+                    parseAppSettingsFromJSON(applicationId, resultJSON);
+
+                    sharedPrefs.edit()
+                            .putString(settingsKey, resultJSON.toString())
+                            .apply();
+                }
+
+                loadingSettings.set(false);
+            }
+        });
+    }
+
+    // This call only gets the app settings if they're already fetched
+    public static FetchedAppSettings getAppSettingsWithoutQuery(final String applicationId) {
+        return applicationId != null ? fetchedAppSettings.get(applicationId) : null;
+    }
+
+    // Note that this method makes a synchronous Graph API call, so should not be called from the
+    // main thread.
+    public static FetchedAppSettings queryAppSettings(
+            final String applicationId,
+            final boolean forceRequery) {
+        // Cache the last app checked results.
+        if (!forceRequery && fetchedAppSettings.containsKey(applicationId)) {
+            return fetchedAppSettings.get(applicationId);
+        }
+
+        JSONObject response = getAppSettingsQueryResponse(applicationId);
+        if (response == null) {
+            return null;
+        }
+
+        return parseAppSettingsFromJSON(applicationId, response);
+    }
+
+    private static FetchedAppSettings parseAppSettingsFromJSON(
+            String applicationId,
+            JSONObject settingsJSON) {
+        JSONArray errorClassificationJSON =
+                settingsJSON.optJSONArray(APP_SETTING_ANDROID_SDK_ERROR_CATEGORIES);
+        FacebookRequestErrorClassification errorClassification =
+                errorClassificationJSON == null
+                        ? FacebookRequestErrorClassification.getDefaultErrorClassification()
+                        : FacebookRequestErrorClassification.createFromJSON(
+                        errorClassificationJSON
+                );
+        int featureBitmask = settingsJSON.optInt(APP_SETTING_APP_EVENTS_FEATURE_BITMASK,0);
+        boolean automaticLoggingEnabled =
+                (featureBitmask & AUTOMATIC_LOGGING_ENABLED_BITMASK_FIELD) != 0;
+        FetchedAppSettings result = new FetchedAppSettings(
+                settingsJSON.optBoolean(APP_SETTING_SUPPORTS_IMPLICIT_SDK_LOGGING, false),
+                settingsJSON.optString(APP_SETTING_NUX_CONTENT, ""),
+                settingsJSON.optBoolean(APP_SETTING_NUX_ENABLED, false),
+                settingsJSON.optBoolean(APP_SETTING_CUSTOM_TABS_ENABLED, false),
+                settingsJSON.optInt(
+                        APP_SETTING_APP_EVENTS_SESSION_TIMEOUT,
+                        Constants.getDefaultAppEventsSessionTimeoutInSeconds()),
+                SmartLoginOption.parseOptions(settingsJSON.optLong(APP_SETTING_SMART_LOGIN_OPTIONS)),
+                parseDialogConfigurations(settingsJSON.optJSONObject(APP_SETTING_DIALOG_CONFIGS)),
+                automaticLoggingEnabled,
+                errorClassification,
+                settingsJSON.optString(SMART_LOGIN_BOOKMARK_ICON_URL),
+                settingsJSON.optString(SMART_LOGIN_MENU_ICON_URL)
+        );
+
+        fetchedAppSettings.put(applicationId, result);
+
+        return result;
+    }
+
+    // Note that this method makes a synchronous Graph API call, so should not be called from the
+    // main thread.
+    private static JSONObject getAppSettingsQueryResponse(String applicationId) {
+        Bundle appSettingsParams = new Bundle();
+        appSettingsParams.putString(APPLICATION_FIELDS, TextUtils.join(",", APP_SETTING_FIELDS));
+
+        GraphRequest request = GraphRequest.newGraphPathRequest(null, applicationId, null);
+        request.setSkipClientToken(true);
+        request.setParameters(appSettingsParams);
+
+        return request.executeAndWait().getJSONObject();
+    }
+
+    private static Map<String, Map<String, FetchedAppSettings.DialogFeatureConfig>> parseDialogConfigurations(
+            JSONObject dialogConfigResponse) {
+        HashMap<String, Map<String, FetchedAppSettings.DialogFeatureConfig>> dialogConfigMap
+                = new HashMap<String, Map<String, FetchedAppSettings.DialogFeatureConfig>>();
+
+        if (dialogConfigResponse != null) {
+            JSONArray dialogConfigData = dialogConfigResponse.optJSONArray("data");
+            if (dialogConfigData != null) {
+                for (int i = 0; i < dialogConfigData.length(); i++) {
+                    FetchedAppSettings.DialogFeatureConfig dialogConfig =
+                            FetchedAppSettings.DialogFeatureConfig.parseDialogConfig(
+                            dialogConfigData.optJSONObject(i));
+                    if (dialogConfig == null) {
+                        continue;
+                    }
+
+                    String dialogName = dialogConfig.getDialogName();
+                    Map<String, FetchedAppSettings.DialogFeatureConfig> featureMap =
+                            dialogConfigMap.get(dialogName);
+                    if (featureMap == null) {
+                        featureMap = new HashMap<String, FetchedAppSettings.DialogFeatureConfig>();
+                        dialogConfigMap.put(dialogName, featureMap);
+                    }
+                    featureMap.put(dialogConfig.getFeatureName(), dialogConfig);
+                }
+            }
+        }
+
+        return dialogConfigMap;
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/internal/FileLruCache.java b/facebook/src/main/java/com/facebook/internal/FileLruCache.java
index 72e73d467..fcbc1c501 100644
--- a/facebook/src/main/java/com/facebook/internal/FileLruCache.java
+++ b/facebook/src/main/java/com/facebook/internal/FileLruCache.java
@@ -127,7 +127,7 @@ public InputStream get(String key) throws IOException {
     public InputStream get(String key, String contentTag) throws IOException {
         File file = new File(this.directory, Utility.md5hash(key));
 
-        FileInputStream input = null;
+        FileInputStream input;
         try {
             input = new FileInputStream(file);
         } catch (IOException e) {
@@ -184,7 +184,7 @@ public OutputStream openPutStream(final String key, String contentTag) throws IO
             throw new IOException("Could not create file at " + buffer.getAbsolutePath());
         }
 
-        FileOutputStream file = null;
+        FileOutputStream file;
         try {
             file = new FileOutputStream(buffer);
         } catch (FileNotFoundException e) {
@@ -448,7 +448,7 @@ static JSONObject readHeader(InputStream stream) throws IOException {
             }
 
             String headerString = new String(headerBytes);
-            JSONObject header = null;
+            JSONObject header;
             JSONTokener tokener = new JSONTokener(headerString);
             try {
                 Object parsed = tokener.nextValue();
diff --git a/facebook/src/main/java/com/facebook/internal/GraphUtil.java b/facebook/src/main/java/com/facebook/internal/GraphUtil.java
index 93b4566ed..ea60a38d1 100644
--- a/facebook/src/main/java/com/facebook/internal/GraphUtil.java
+++ b/facebook/src/main/java/com/facebook/internal/GraphUtil.java
@@ -22,17 +22,11 @@
 
 import com.facebook.FacebookException;
 import com.facebook.internal.NativeProtocol;
-import com.facebook.internal.Validate;
+
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import java.util.List;
-import java.util.Locale;
-
 /**
  * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
  * Android. Use of any of the classes in this package is unsupported, and they may be modified or
diff --git a/facebook/src/main/java/com/facebook/internal/ImageDownloader.java b/facebook/src/main/java/com/facebook/internal/ImageDownloader.java
index 9309f2beb..14b308920 100644
--- a/facebook/src/main/java/com/facebook/internal/ImageDownloader.java
+++ b/facebook/src/main/java/com/facebook/internal/ImageDownloader.java
@@ -33,8 +33,6 @@
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.net.HttpURLConnection;
-import java.net.URI;
-import java.net.URISyntaxException;
 import java.net.URL;
 import java.util.HashMap;
 import java.util.Map;
diff --git a/facebook/src/main/java/com/facebook/internal/ImageRequest.java b/facebook/src/main/java/com/facebook/internal/ImageRequest.java
index f0dbfbf3e..acbe35ebb 100644
--- a/facebook/src/main/java/com/facebook/internal/ImageRequest.java
+++ b/facebook/src/main/java/com/facebook/internal/ImageRequest.java
@@ -23,8 +23,6 @@
 import android.content.Context;
 import android.net.Uri;
 
-import java.net.URI;
-import java.net.URISyntaxException;
 import java.util.Locale;
 
 /**
diff --git a/facebook/src/main/java/com/facebook/internal/ImageResponseCache.java b/facebook/src/main/java/com/facebook/internal/ImageResponseCache.java
index 847c441d4..0a4b47583 100644
--- a/facebook/src/main/java/com/facebook/internal/ImageResponseCache.java
+++ b/facebook/src/main/java/com/facebook/internal/ImageResponseCache.java
@@ -29,9 +29,6 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.net.HttpURLConnection;
-import java.net.URI;
-import java.net.URISyntaxException;
-import java.net.URL;
 
 /**
  * com.facebook.internal is solely for the use of other packages within the
diff --git a/facebook/src/main/java/com/facebook/internal/JsonUtil.java b/facebook/src/main/java/com/facebook/internal/JsonUtil.java
index 021f9a7ef..b009e11b2 100644
--- a/facebook/src/main/java/com/facebook/internal/JsonUtil.java
+++ b/facebook/src/main/java/com/facebook/internal/JsonUtil.java
@@ -34,7 +34,7 @@
 class JsonUtil {
     static void jsonObjectClear(JSONObject jsonObject) {
         @SuppressWarnings("unchecked")
-        Iterator<String> keys = (Iterator<String>) jsonObject.keys();
+        Iterator<String> keys = jsonObject.keys();
         while (keys.hasNext()) {
             keys.next();
             keys.remove();
@@ -43,7 +43,7 @@ static void jsonObjectClear(JSONObject jsonObject) {
 
     static boolean jsonObjectContainsValue(JSONObject jsonObject, Object value) {
         @SuppressWarnings("unchecked")
-        Iterator<String> keys = (Iterator<String>) jsonObject.keys();
+        Iterator<String> keys = jsonObject.keys();
         while (keys.hasNext()) {
             Object thisValue = jsonObject.opt(keys.next());
             if (thisValue != null && thisValue.equals(value)) {
@@ -84,7 +84,7 @@ public Object setValue(Object object) {
         HashSet<Map.Entry<String, Object>> result = new HashSet<Map.Entry<String, Object>>();
 
         @SuppressWarnings("unchecked")
-        Iterator<String> keys = (Iterator<String>) jsonObject.keys();
+        Iterator<String> keys = jsonObject.keys();
         while (keys.hasNext()) {
             String key = keys.next();
             Object value = jsonObject.opt(key);
@@ -98,7 +98,7 @@ public Object setValue(Object object) {
         HashSet<String> result = new HashSet<String>();
 
         @SuppressWarnings("unchecked")
-        Iterator<String> keys = (Iterator<String>) jsonObject.keys();
+        Iterator<String> keys = jsonObject.keys();
         while (keys.hasNext()) {
             result.add(keys.next());
         }
@@ -121,7 +121,7 @@ static void jsonObjectPutAll(JSONObject jsonObject, Map<String, Object> map) {
         ArrayList<Object> result = new ArrayList<Object>();
 
         @SuppressWarnings("unchecked")
-        Iterator<String> keys = (Iterator<String>) jsonObject.keys();
+        Iterator<String> keys = jsonObject.keys();
         while (keys.hasNext()) {
             result.add(jsonObject.opt(keys.next()));
         }
diff --git a/facebook/src/main/java/com/facebook/internal/NativeAppCallAttachmentStore.java b/facebook/src/main/java/com/facebook/internal/NativeAppCallAttachmentStore.java
index 18814f355..e3a44572f 100644
--- a/facebook/src/main/java/com/facebook/internal/NativeAppCallAttachmentStore.java
+++ b/facebook/src/main/java/com/facebook/internal/NativeAppCallAttachmentStore.java
@@ -81,7 +81,7 @@ private static void processAttachmentFile(
             File outputFile) throws IOException {
         FileOutputStream outputStream = new FileOutputStream(outputFile);
         try {
-            InputStream inputStream = null;
+            InputStream inputStream;
             if (!isContentUri) {
                 inputStream = new FileInputStream(imageUri.getPath());
             } else {
diff --git a/facebook/src/main/java/com/facebook/internal/NativeProtocol.java b/facebook/src/main/java/com/facebook/internal/NativeProtocol.java
index 610acea34..4750fbbdf 100644
--- a/facebook/src/main/java/com/facebook/internal/NativeProtocol.java
+++ b/facebook/src/main/java/com/facebook/internal/NativeProtocol.java
@@ -23,7 +23,12 @@
 import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
-import android.content.pm.*;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.ProviderInfo;
+import android.content.pm.ResolveInfo;
+import android.content.pm.Signature;
 import android.database.Cursor;
 import android.net.Uri;
 import android.os.Build;
@@ -36,12 +41,17 @@
 import com.facebook.FacebookSdk;
 import com.facebook.login.DefaultAudience;
 
-import java.util.*;
-import java.util.concurrent.Callable;
-import java.util.concurrent.Executors;
-import java.util.concurrent.FutureTask;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.TreeSet;
+import java.util.UUID;
 import java.util.concurrent.atomic.AtomicBoolean;
-import java.util.concurrent.atomic.AtomicInteger;
 
 /**
  * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
@@ -257,7 +267,7 @@ public boolean validateSignature(Context context, String packageName) {
                 return true;
             }
 
-            PackageInfo packageInfo = null;
+            PackageInfo packageInfo;
             try {
                 packageInfo = context.getPackageManager().getPackageInfo(packageName,
                         PackageManager.GET_SIGNATURES);
diff --git a/facebook/src/main/java/com/facebook/internal/SmartLoginOption.java b/facebook/src/main/java/com/facebook/internal/SmartLoginOption.java
new file mode 100644
index 000000000..4283bda91
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/internal/SmartLoginOption.java
@@ -0,0 +1,49 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+package com.facebook.internal;
+
+import java.util.EnumSet;
+
+public enum SmartLoginOption {
+    None(0),
+    Enabled(1),
+    RequireConfirm(2);
+
+    public static final EnumSet<SmartLoginOption> ALL = EnumSet.allOf(SmartLoginOption.class);
+    public static EnumSet<SmartLoginOption> parseOptions(long bitmask) {
+        EnumSet<SmartLoginOption> result = EnumSet.noneOf(SmartLoginOption.class);
+        for (SmartLoginOption opt : ALL) {
+            if ((bitmask & opt.getValue()) != 0) {
+                result.add(opt);
+            }
+        }
+        return result;
+    }
+
+    private final long mValue;
+
+    SmartLoginOption(long value) {
+        this.mValue= value;
+    }
+
+    public long getValue(){
+        return mValue;
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/internal/Utility.java b/facebook/src/main/java/com/facebook/internal/Utility.java
index 7c1411a1b..fcf3fdc82 100644
--- a/facebook/src/main/java/com/facebook/internal/Utility.java
+++ b/facebook/src/main/java/com/facebook/internal/Utility.java
@@ -21,7 +21,6 @@
 package com.facebook.internal;
 
 import android.content.Context;
-import android.content.SharedPreferences;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
 import android.database.Cursor;
@@ -47,25 +46,42 @@
 import com.facebook.GraphRequest;
 import com.facebook.GraphResponse;
 import com.facebook.HttpMethod;
-import com.facebook.appevents.AppEventsConstants;
-import com.facebook.appevents.internal.Constants;
 
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 import org.json.JSONTokener;
 
-import java.io.*;
+import java.io.BufferedInputStream;
+import java.io.Closeable;
+import java.io.File;
+import java.io.FilenameFilter;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.io.UnsupportedEncodingException;
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
 import java.math.BigInteger;
 import java.net.HttpURLConnection;
 import java.net.URLConnection;
-
 import java.net.URLDecoder;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
-import java.util.*;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Locale;
+import java.util.Map;
+import java.util.Random;
+import java.util.Set;
+import java.util.TimeZone;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.regex.Pattern;
@@ -80,44 +96,10 @@
     private static final String HASH_ALGORITHM_MD5 = "MD5";
     private static final String HASH_ALGORITHM_SHA1 = "SHA-1";
     private static final String URL_SCHEME = "https";
-    private static final String APP_SETTINGS_PREFS_STORE =
-            "com.facebook.internal.preferences.APP_SETTINGS";
-    private static final String APP_SETTINGS_PREFS_KEY_FORMAT =
-            "com.facebook.internal.APP_SETTINGS.%s";
-    private static final String APP_SETTING_SUPPORTS_IMPLICIT_SDK_LOGGING =
-            "supports_implicit_sdk_logging";
-    private static final String APP_SETTING_NUX_CONTENT = "gdpv4_nux_content";
-    private static final String APP_SETTING_NUX_ENABLED = "gdpv4_nux_enabled";
-    private static final String APP_SETTING_CUSTOM_TABS_ENABLED =
-            "gdpv4_chrome_custom_tabs_enabled";
-    private static final String APP_SETTING_DIALOG_CONFIGS = "android_dialog_configs";
-    private static final String APP_SETTING_ANDROID_SDK_ERROR_CATEGORIES =
-            "android_sdk_error_categories";
-    private static final String APP_SETTING_APP_EVENTS_SESSION_TIMEOUT =
-            "app_events_session_timeout";
-    private static final String APP_SETTING_APP_EVENTS_FEATURE_BITMASK =
-            "app_events_feature_bitmask";
-    private static final int AUTOMATIC_LOGGING_ENABLED_BITMASK_FIELD = 1 << 3;
     private static final String EXTRA_APP_EVENTS_INFO_FORMAT_VERSION = "a2";
-    private static final String DIALOG_CONFIG_DIALOG_NAME_FEATURE_NAME_SEPARATOR = "\\|";
-    private static final String DIALOG_CONFIG_NAME_KEY = "name";
-    private static final String DIALOG_CONFIG_VERSIONS_KEY = "versions";
-    private static final String DIALOG_CONFIG_URL_KEY = "url";
 
     private final static String UTF8 = "UTF-8";
 
-    private static final String[] APP_SETTING_FIELDS = new String[]{
-            APP_SETTING_SUPPORTS_IMPLICIT_SDK_LOGGING,
-            APP_SETTING_NUX_CONTENT,
-            APP_SETTING_NUX_ENABLED,
-            APP_SETTING_CUSTOM_TABS_ENABLED,
-            APP_SETTING_DIALOG_CONFIGS,
-            APP_SETTING_ANDROID_SDK_ERROR_CATEGORIES,
-            APP_SETTING_APP_EVENTS_SESSION_TIMEOUT,
-            APP_SETTING_APP_EVENTS_FEATURE_BITMASK
-    };
-    private static final String APPLICATION_FIELDS = "fields";
-
     // This is the default used by the buffer streams, but they trace a warning if you do not
     // specify.
     public static final int DEFAULT_STREAM_BUFFER_SIZE = 8192;
@@ -129,11 +111,6 @@
 
     private static final int GINGERBREAD_MR1 = 10;
 
-    private static Map<String, FetchedAppSettings> fetchedAppSettings =
-            new ConcurrentHashMap<String, FetchedAppSettings>();
-
-    private static AtomicBoolean loadingSettings = new AtomicBoolean(false);
-
     private static int numCPUCores = 0;
 
     private static long timestampOfLastCheck = -1;
@@ -143,167 +120,6 @@
     private static String deviceTimeZoneName = "";
     private static String carrierName = noCarrierConstant;
 
-    public static class FetchedAppSettings {
-        private boolean supportsImplicitLogging;
-        private String nuxContent;
-        private boolean nuxEnabled;
-        private boolean customTabsEnabled;
-        private int sessionTimeoutInSeconds;
-        private Map<String, Map<String, DialogFeatureConfig>> dialogConfigMap;
-        private boolean automaticLoggingEnabled;
-        private FacebookRequestErrorClassification errorClassification;
-
-        private FetchedAppSettings(boolean supportsImplicitLogging,
-                                   String nuxContent,
-                                   boolean nuxEnabled,
-                                   boolean customTabsEnabled,
-                                   int sessionTimeoutInSeconds,
-                                   Map<String, Map<String, DialogFeatureConfig>> dialogConfigMap,
-                                   boolean automaticLoggingEnabled,
-                                   FacebookRequestErrorClassification errorClassification) {
-            this.supportsImplicitLogging = supportsImplicitLogging;
-            this.nuxContent = nuxContent;
-            this.nuxEnabled = nuxEnabled;
-            this.customTabsEnabled = customTabsEnabled;
-            this.dialogConfigMap = dialogConfigMap;
-            this.errorClassification = errorClassification;
-            this.sessionTimeoutInSeconds = sessionTimeoutInSeconds;
-            this.automaticLoggingEnabled = automaticLoggingEnabled;
-        }
-
-        public boolean supportsImplicitLogging() {
-            return supportsImplicitLogging;
-        }
-
-        public String getNuxContent() {
-            return nuxContent;
-        }
-
-        public boolean getNuxEnabled() {
-            return nuxEnabled;
-        }
-
-        public boolean getCustomTabsEnabled() {
-            return customTabsEnabled;
-        }
-
-        public int getSessionTimeoutInSeconds() {
-            return sessionTimeoutInSeconds;
-        }
-
-        public boolean getAutomaticLoggingEnabled() {
-            return automaticLoggingEnabled;
-        }
-
-        public Map<String, Map<String, DialogFeatureConfig>> getDialogConfigurations() {
-            return dialogConfigMap;
-        }
-
-        public FacebookRequestErrorClassification getErrorClassification() {
-            return errorClassification;
-        }
-    }
-
-    public static class DialogFeatureConfig {
-        private static DialogFeatureConfig parseDialogConfig(JSONObject dialogConfigJSON) {
-            String dialogNameWithFeature = dialogConfigJSON.optString(DIALOG_CONFIG_NAME_KEY);
-            if (Utility.isNullOrEmpty(dialogNameWithFeature)) {
-                return null;
-            }
-
-            String[] components = dialogNameWithFeature.split(
-                    DIALOG_CONFIG_DIALOG_NAME_FEATURE_NAME_SEPARATOR);
-            if (components.length != 2) {
-                // We expect the format to be dialogName|FeatureName, where both components are
-                // non-empty.
-                return null;
-            }
-
-            String dialogName = components[0];
-            String featureName = components[1];
-            if (isNullOrEmpty(dialogName) || isNullOrEmpty(featureName)) {
-                return null;
-            }
-
-            String urlString = dialogConfigJSON.optString(DIALOG_CONFIG_URL_KEY);
-            Uri fallbackUri = null;
-            if (!Utility.isNullOrEmpty(urlString)) {
-                fallbackUri = Uri.parse(urlString);
-            }
-
-            JSONArray versionsJSON = dialogConfigJSON.optJSONArray(DIALOG_CONFIG_VERSIONS_KEY);
-
-            int[] featureVersionSpec = parseVersionSpec(versionsJSON);
-
-            return new DialogFeatureConfig(
-                    dialogName, featureName, fallbackUri, featureVersionSpec);
-        }
-
-        private static int[] parseVersionSpec(JSONArray versionsJSON) {
-            // Null signifies no overrides to the min-version as specified by the SDK.
-            // An empty array would basically turn off the dialog (i.e no supported versions), so
-            // DON'T default to that.
-            int[] versionSpec = null;
-            if (versionsJSON != null) {
-                int numVersions = versionsJSON.length();
-                versionSpec = new int[numVersions];
-                for (int i = 0; i < numVersions; i++) {
-                    // See if the version was stored directly as an Integer
-                    int version = versionsJSON.optInt(i, NativeProtocol.NO_PROTOCOL_AVAILABLE);
-                    if (version == NativeProtocol.NO_PROTOCOL_AVAILABLE) {
-                        // If not, then see if it was stored as a string that can be parsed out.
-                        // If even that fails, then we will leave it as NO_PROTOCOL_AVAILABLE
-                        String versionString = versionsJSON.optString(i);
-                        if (!isNullOrEmpty(versionString)) {
-                            try {
-                                version = Integer.parseInt(versionString);
-                            } catch (NumberFormatException nfe) {
-                                logd(LOG_TAG, nfe);
-                                version = NativeProtocol.NO_PROTOCOL_AVAILABLE;
-                            }
-                        }
-                    }
-
-                    versionSpec[i] = version;
-                }
-            }
-
-            return versionSpec;
-        }
-
-        private String dialogName;
-        private String featureName;
-        private Uri fallbackUrl;
-        private int[] featureVersionSpec;
-
-        private DialogFeatureConfig(
-                String dialogName,
-                String featureName,
-                Uri fallbackUrl,
-                int[] featureVersionSpec) {
-            this.dialogName = dialogName;
-            this.featureName = featureName;
-            this.fallbackUrl = fallbackUrl;
-            this.featureVersionSpec = featureVersionSpec;
-        }
-
-        public String getDialogName() {
-            return dialogName;
-        }
-
-        public String getFeatureName() {
-            return featureName;
-        }
-
-        public Uri getFallbackUrl() {
-            return fallbackUrl;
-        }
-
-        public int[] getVersionSpec() {
-            return featureVersionSpec;
-        }
-    }
-
     /**
      * Each array represents a set of closed or open Range, like so: [0,10,50,60] - Ranges are
      * {0-9}, {50-59} [20] - Ranges are {20-} [30,40,100] - Ranges are {30-39}, {100-}
@@ -576,9 +392,9 @@ public static boolean putJSONValueInBundle(Bundle bundle, String key, Object val
         } else if (value instanceof String) {
             bundle.putString(key, (String) value);
         } else if (value instanceof JSONArray) {
-            bundle.putString(key, ((JSONArray) value).toString());
+            bundle.putString(key, value.toString());
         } else if (value instanceof JSONObject) {
-            bundle.putString(key, ((JSONObject) value).toString());
+            bundle.putString(key, value.toString());
         } else {
             return false;
         }
@@ -796,168 +612,6 @@ public static boolean hasSameId(JSONObject a, JSONObject b) {
         return idA.equals(idB);
     }
 
-    public static void loadAppSettingsAsync(
-            final Context context,
-            final String applicationId
-    ) {
-        boolean canStartLoading = loadingSettings.compareAndSet(false, true);
-        if (Utility.isNullOrEmpty(applicationId) ||
-                fetchedAppSettings.containsKey(applicationId) ||
-                !canStartLoading) {
-            return;
-        }
-
-        final String settingsKey = String.format(APP_SETTINGS_PREFS_KEY_FORMAT, applicationId);
-
-        FacebookSdk.getExecutor().execute(new Runnable() {
-            @Override
-            public void run() {
-                // See if we had a cached copy and use that immediately.
-                SharedPreferences sharedPrefs = context.getSharedPreferences(
-                        APP_SETTINGS_PREFS_STORE,
-                        Context.MODE_PRIVATE);
-                String settingsJSONString = sharedPrefs.getString(settingsKey, null);
-                if (!isNullOrEmpty(settingsJSONString)) {
-                    JSONObject settingsJSON = null;
-                    try {
-                        settingsJSON = new JSONObject(settingsJSONString);
-                    } catch (JSONException je) {
-                        logd(LOG_TAG, je);
-                    }
-                    if (settingsJSON != null) {
-                        parseAppSettingsFromJSON(applicationId, settingsJSON);
-                    }
-                }
-
-                JSONObject resultJSON = getAppSettingsQueryResponse(applicationId);
-                if (resultJSON != null) {
-                    parseAppSettingsFromJSON(applicationId, resultJSON);
-
-                    sharedPrefs.edit()
-                            .putString(settingsKey, resultJSON.toString())
-                            .apply();
-                }
-
-                loadingSettings.set(false);
-            }
-        });
-    }
-
-    // This call only gets the app settings if they're already fetched
-    public static FetchedAppSettings getAppSettingsWithoutQuery(final String applicationId) {
-        return applicationId != null ? fetchedAppSettings.get(applicationId) : null;
-    }
-
-    // Note that this method makes a synchronous Graph API call, so should not be called from the
-    // main thread.
-    public static FetchedAppSettings queryAppSettings(
-            final String applicationId,
-            final boolean forceRequery) {
-        // Cache the last app checked results.
-        if (!forceRequery && fetchedAppSettings.containsKey(applicationId)) {
-            return fetchedAppSettings.get(applicationId);
-        }
-
-        JSONObject response = getAppSettingsQueryResponse(applicationId);
-        if (response == null) {
-            return null;
-        }
-
-        return parseAppSettingsFromJSON(applicationId, response);
-    }
-
-    private static FetchedAppSettings parseAppSettingsFromJSON(
-            String applicationId,
-            JSONObject settingsJSON) {
-        JSONArray errorClassificationJSON =
-                settingsJSON.optJSONArray(APP_SETTING_ANDROID_SDK_ERROR_CATEGORIES);
-        FacebookRequestErrorClassification errorClassification =
-                errorClassificationJSON == null
-                        ? FacebookRequestErrorClassification.getDefaultErrorClassification()
-                        : FacebookRequestErrorClassification.createFromJSON(
-                        errorClassificationJSON
-                );
-        int featureBitmask = settingsJSON.optInt(APP_SETTING_APP_EVENTS_FEATURE_BITMASK,0);
-        boolean automaticLoggingEnabled =
-                (featureBitmask & AUTOMATIC_LOGGING_ENABLED_BITMASK_FIELD) != 0;
-        FetchedAppSettings result = new FetchedAppSettings(
-                settingsJSON.optBoolean(APP_SETTING_SUPPORTS_IMPLICIT_SDK_LOGGING, false),
-                settingsJSON.optString(APP_SETTING_NUX_CONTENT, ""),
-                settingsJSON.optBoolean(APP_SETTING_NUX_ENABLED, false),
-                settingsJSON.optBoolean(APP_SETTING_CUSTOM_TABS_ENABLED, false),
-                settingsJSON.optInt(
-                        APP_SETTING_APP_EVENTS_SESSION_TIMEOUT,
-                        Constants.getDefaultAppEventsSessionTimeoutInSeconds()),
-                parseDialogConfigurations(settingsJSON.optJSONObject(APP_SETTING_DIALOG_CONFIGS)),
-                automaticLoggingEnabled,
-                errorClassification
-        );
-
-        fetchedAppSettings.put(applicationId, result);
-
-        return result;
-    }
-
-    // Note that this method makes a synchronous Graph API call, so should not be called from the
-    // main thread.
-    private static JSONObject getAppSettingsQueryResponse(String applicationId) {
-        Bundle appSettingsParams = new Bundle();
-        appSettingsParams.putString(APPLICATION_FIELDS, TextUtils.join(",", APP_SETTING_FIELDS));
-
-        GraphRequest request = GraphRequest.newGraphPathRequest(null, applicationId, null);
-        request.setSkipClientToken(true);
-        request.setParameters(appSettingsParams);
-
-        return request.executeAndWait().getJSONObject();
-    }
-
-    public static DialogFeatureConfig getDialogFeatureConfig(
-            String applicationId,
-            String actionName,
-            String featureName) {
-        if (Utility.isNullOrEmpty(actionName) || Utility.isNullOrEmpty(featureName)) {
-            return null;
-        }
-
-        FetchedAppSettings settings = fetchedAppSettings.get(applicationId);
-        if (settings != null) {
-            Map<String, DialogFeatureConfig> featureMap =
-                    settings.getDialogConfigurations().get(actionName);
-            if (featureMap != null) {
-                return featureMap.get(featureName);
-            }
-        }
-        return null;
-    }
-
-    private static Map<String, Map<String, DialogFeatureConfig>> parseDialogConfigurations(
-            JSONObject dialogConfigResponse) {
-        HashMap<String, Map<String, DialogFeatureConfig>> dialogConfigMap = new HashMap<String, Map<String, DialogFeatureConfig>>();
-
-        if (dialogConfigResponse != null) {
-            JSONArray dialogConfigData = dialogConfigResponse.optJSONArray("data");
-            if (dialogConfigData != null) {
-                for (int i = 0; i < dialogConfigData.length(); i++) {
-                    DialogFeatureConfig dialogConfig = DialogFeatureConfig.parseDialogConfig(
-                            dialogConfigData.optJSONObject(i));
-                    if (dialogConfig == null) {
-                        continue;
-                    }
-
-                    String dialogName = dialogConfig.getDialogName();
-                    Map<String, DialogFeatureConfig> featureMap = dialogConfigMap.get(dialogName);
-                    if (featureMap == null) {
-                        featureMap = new HashMap<String, DialogFeatureConfig>();
-                        dialogConfigMap.put(dialogName, featureMap);
-                    }
-                    featureMap.put(dialogConfig.getFeatureName(), dialogConfig);
-                }
-            }
-        }
-
-        return dialogConfigMap;
-    }
-
     public static String safeGetStringFromResponse(JSONObject response, String propertyName) {
         return response != null ? response.optString(propertyName, "") : "";
     }
@@ -1075,7 +729,7 @@ public static void setAppEventExtendedDeviceInfoParameters(
         extraInfoArray.put(Build.MODEL);
 
         // Locale
-        Locale locale = null;
+        Locale locale;
         try {
             locale = appContext.getResources().getConfiguration().locale;
         } catch (Exception e) {
@@ -1246,7 +900,7 @@ public static Date getBundleLongAsDate(Bundle bundle, String key, Date dateBase)
             return null;
         }
 
-        long secondsFromBase = Long.MIN_VALUE;
+        long secondsFromBase;
 
         Object secondsObject = bundle.get(key);
         if (secondsObject instanceof Long) {
@@ -1372,7 +1026,6 @@ private static int refreshBestGuessNumberOfCPUCores() {
 
         // Enumerate all available CPU files and try to count the number of CPU cores.
         try {
-            int res = 0;
             File cpuDir = new File("/sys/devices/system/cpu/");
             File[] cpuFiles = cpuDir.listFiles(new FilenameFilter() {
                 @Override
diff --git a/facebook/src/main/java/com/facebook/internal/WebDialog.java b/facebook/src/main/java/com/facebook/internal/WebDialog.java
index 528d55d6e..03fce8859 100644
--- a/facebook/src/main/java/com/facebook/internal/WebDialog.java
+++ b/facebook/src/main/java/com/facebook/internal/WebDialog.java
@@ -399,7 +399,7 @@ protected void sendSuccessToListener(Bundle values) {
     protected void sendErrorToListener(Throwable error) {
         if (onCompleteListener != null && !listenerCalled) {
             listenerCalled = true;
-            FacebookException facebookException = null;
+            FacebookException facebookException;
             if (error instanceof FacebookException) {
                 facebookException = (FacebookException) error;
             } else {
diff --git a/facebook/src/main/java/com/facebook/login/CustomTabLoginMethodHandler.java b/facebook/src/main/java/com/facebook/login/CustomTabLoginMethodHandler.java
index 9298f6de5..06c5b33c4 100644
--- a/facebook/src/main/java/com/facebook/login/CustomTabLoginMethodHandler.java
+++ b/facebook/src/main/java/com/facebook/login/CustomTabLoginMethodHandler.java
@@ -37,6 +37,8 @@
 import com.facebook.FacebookRequestError;
 import com.facebook.FacebookSdk;
 import com.facebook.FacebookServiceException;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.ServerProtocol;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
@@ -110,7 +112,7 @@ private boolean isCustomTabsAllowed() {
 
     private boolean isCustomTabsEnabled() {
         final String appId = Utility.getMetadataApplicationId(loginClient.getActivity());
-        final Utility.FetchedAppSettings settings = Utility.getAppSettingsWithoutQuery(appId);
+        final FetchedAppSettings settings = FetchedAppSettingsManager.getAppSettingsWithoutQuery(appId);
         return settings != null && settings.getCustomTabsEnabled();
     }
 
diff --git a/facebook/src/main/java/com/facebook/login/DeviceAuthDialog.java b/facebook/src/main/java/com/facebook/login/DeviceAuthDialog.java
index b6f8c66d9..f81687eba 100644
--- a/facebook/src/main/java/com/facebook/login/DeviceAuthDialog.java
+++ b/facebook/src/main/java/com/facebook/login/DeviceAuthDialog.java
@@ -20,8 +20,12 @@
 
 package com.facebook.login;
 
+import android.app.AlertDialog;
 import android.app.Dialog;
 import android.content.DialogInterface;
+import android.graphics.Bitmap;
+import android.graphics.drawable.BitmapDrawable;
+import android.net.Uri;
 import android.os.Bundle;
 import android.os.Parcel;
 import android.os.Parcelable;
@@ -48,6 +52,15 @@
 import com.facebook.GraphResponse;
 import com.facebook.HttpMethod;
 import com.facebook.R;
+import com.facebook.appevents.AppEventsLogger;
+import com.facebook.devicerequests.internal.DeviceRequestsHelper;
+import com.facebook.internal.AnalyticsEvents;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
+import com.facebook.internal.ImageDownloader;
+import com.facebook.internal.ImageRequest;
+import com.facebook.internal.ImageResponse;
+import com.facebook.internal.SmartLoginOption;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
 
@@ -81,6 +94,8 @@
     // Used to tell if we are destroying the fragment because it was dismissed or dismissing the
     // fragment because it is being destroyed.
     private boolean isBeingDestroyed = false;
+    private boolean isRetry = false;
+    private LoginClient.Request mRequest = null;
 
     @Nullable
     @Override
@@ -110,22 +125,8 @@ public View onCreateView(
     public Dialog onCreateDialog(Bundle savedInstanceState) {
         dialog = new Dialog(getActivity(), R.style.com_facebook_auth_dialog);
         LayoutInflater inflater = getActivity().getLayoutInflater();
-        View view = inflater.inflate(R.layout.com_facebook_device_auth_dialog_fragment, null);
-        progressBar = (ProgressBar)view.findViewById(R.id.progress_bar);
-        confirmationCode = (TextView)view.findViewById(R.id.confirmation_code);
-
-        Button cancelButton = (Button) view.findViewById(R.id.cancel_button);
-        cancelButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                onCancel();
-            }
-        });
 
-        TextView instructions = (TextView)view.findViewById(
-                R.id.com_facebook_device_auth_instructions);
-        instructions.setText(
-                Html.fromHtml(getString(R.string.com_facebook_device_auth_instructions)));
+        View view = initializeContentView(DeviceRequestsHelper.isAvailable() && !this.isRetry);
 
         dialog.setContentView(view);
         return dialog;
@@ -165,6 +166,7 @@ public void onDestroy() {
     }
 
     public void startLogin(final LoginClient.Request request) {
+        this.mRequest = request;
         Bundle parameters = new Bundle();
         parameters.putString("scope", TextUtils.join(",", request.getPermissions()));
 
@@ -175,6 +177,9 @@ public void startLogin(final LoginClient.Request request) {
 
         String accessToken = Validate.hasAppID()+ "|" + Validate.hasClientToken();
         parameters.putString(GraphRequest.ACCESS_TOKEN_PARAM, accessToken);
+        parameters.putString(DeviceRequestsHelper.DEVICE_INFO_PARAM,
+                             DeviceRequestsHelper.getDeviceInfo());
+
         GraphRequest graphRequest = new GraphRequest(
                 null,
                 DEVICE_LOGIN_ENDPOINT,
@@ -211,6 +216,13 @@ private void setCurrentRequestState(RequestState currentRequestState) {
         confirmationCode.setVisibility(View.VISIBLE);
         progressBar.setVisibility(View.GONE);
 
+        if (!isRetry) {
+            if (DeviceRequestsHelper.startAdvertisementService(currentRequestState.getUserCode())) {
+                final AppEventsLogger logger = AppEventsLogger.newLogger(getContext());
+                logger.logSdkEvent(AnalyticsEvents.EVENT_SMART_LOGIN_SERVICE, null, null);
+            }
+        }
+
         // If we polled within the last interval schedule a poll else start a poll.
         if (currentRequestState.withinLastRefreshWindow()) {
             schedulePoll();
@@ -219,6 +231,68 @@ private void setCurrentRequestState(RequestState currentRequestState) {
         }
     }
 
+    private void appendIconToTextView(final TextView textView, final String iconUriString) {
+        final int iconSize = 24;
+        ImageRequest request = new ImageRequest.Builder(
+                this.getContext(),
+                Uri.parse(iconUriString))
+                .setCallback( new ImageRequest.Callback() {
+                    @Override
+                    public void onCompleted(ImageResponse response) {
+                        if (response.getBitmap() != null) {
+                            Bitmap bitmap = Bitmap.createScaledBitmap(response.getBitmap(),
+                                    iconSize, iconSize, false);
+                            BitmapDrawable drawable = new BitmapDrawable(getResources(),
+                                    bitmap);
+                            textView.setCompoundDrawablesWithIntrinsicBounds(
+                                    null, null, drawable, null);
+                        }
+
+                    }
+                }).build();
+        ImageDownloader.downloadAsync(request);
+    }
+
+    private View initializeContentView(boolean isSmartLogin) {
+        View view;
+        LayoutInflater inflater = this.getActivity().getLayoutInflater();
+        if (isSmartLogin) {
+            view = inflater.inflate(R.layout.com_facebook_smart_device_dialog_fragment, null);
+
+            FetchedAppSettings settings =
+                    FetchedAppSettingsManager.getAppSettingsWithoutQuery(
+                            FacebookSdk.getApplicationId());
+            if (settings.getSmartLoginBookmarkIconURL() != null) {
+                final TextView instructions2 = (TextView)view.findViewById(
+                        R.id.com_facebook_smart_instructions_2);
+                this.appendIconToTextView(instructions2, settings.getSmartLoginBookmarkIconURL());
+            }
+            if (settings.getSmartLoginMenuIconURL() != null) {
+                final TextView instructions1 = (TextView)view.findViewById(
+                        R.id.com_facebook_smart_instructions_1);
+                this.appendIconToTextView(instructions1, settings.getSmartLoginMenuIconURL());
+            }
+        } else {
+            view = inflater.inflate(R.layout.com_facebook_device_auth_dialog_fragment, null);
+        }
+        progressBar = (ProgressBar)view.findViewById(R.id.progress_bar);
+        confirmationCode = (TextView)view.findViewById(R.id.confirmation_code);
+
+        Button cancelButton = (Button) view.findViewById(R.id.cancel_button);
+        cancelButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                onCancel();
+            }
+        });
+
+        TextView instructions = (TextView)view.findViewById(
+                R.id.com_facebook_device_auth_instructions);
+        instructions.setText(
+                Html.fromHtml(getString(R.string.com_facebook_device_auth_instructions)));
+        return view;
+    }
+
     private void poll() {
         currentRequestState.setLastPoll(new Date().getTime());
         currentGraphRequestPoll = getPollRequest().executeAsync();
@@ -284,9 +358,37 @@ public void onCompleted(GraphResponse response) {
                 });
     }
 
+    private void presentConfirmation(final String userId,
+                                     final Utility.PermissionsPair permissions,
+                                     final String accessToken,
+                                     final String name) {
+        final String message = getResources().getString(
+            R.string.com_facebook_smart_login_confirmation_title);
+        final String continueFormat = getResources().getString(
+            R.string.com_facebook_smart_login_confirmation_continue_as);
+        final String cancel = getResources().getString(
+            R.string.com_facebook_smart_login_confirmation_cancel);
+        final String continueText = String.format(continueFormat, name);
+        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
+        builder.setMessage(message)
+                .setCancelable(true)
+                .setNegativeButton(continueText, new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface alertDialog, int which) {
+                        completeLogin(userId, permissions, accessToken);
+                    }
+                })
+                .setPositiveButton(cancel, new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface alertDialog, int which) {
+                        View view = initializeContentView(false);
+                        dialog.setContentView(view);
+                        startLogin(mRequest);
+                    }
+                });
+        builder.create().show();
+    }
     private void onSuccess(final String accessToken) {
         Bundle parameters = new Bundle();
-        parameters.putString("fields", "id,permissions");
+        parameters.putString("fields", "id,permissions,name");
         AccessToken temporaryToken = new AccessToken(
                 accessToken,
                 FacebookSdk.getApplicationId(),
@@ -316,35 +418,58 @@ public void onCompleted(GraphResponse response) {
 
                         String userId;
                         Utility.PermissionsPair permissions;
+                        String name;
                         try {
                             JSONObject jsonObject = response.getJSONObject();
                             userId = jsonObject.getString("id");
                             permissions = Utility.handlePermissionResponse(jsonObject);
+                            name = jsonObject.getString("name");
                         } catch (JSONException ex) {
                             onError(new FacebookException(ex));
                             return;
                         }
+                        DeviceRequestsHelper.cleanUpAdvertisementService(
+                                currentRequestState.getUserCode());
+
+                        boolean requireConfirm =
+                                FetchedAppSettingsManager.
+                                getAppSettingsWithoutQuery(FacebookSdk.getApplicationId()).
+                                getSmartLoginOptions().contains(SmartLoginOption.RequireConfirm);
+                        if (requireConfirm && !isRetry) {
+                            isRetry = true;
+                            presentConfirmation(userId, permissions, accessToken, name);
+                            return;
+                        }
 
-                        deviceAuthMethodHandler.onSuccess(
-                                accessToken,
-                                FacebookSdk.getApplicationId(),
-                                userId,
-                                permissions.getGrantedPermissions(),
-                                permissions.getDeclinedPermissions(),
-                                AccessTokenSource.DEVICE_AUTH,
-                                null,
-                                null);
-                        dialog.dismiss();
+                        completeLogin(userId, permissions, accessToken);
                     }
                 });
         request.executeAsync();
     }
 
+    private void completeLogin(String userId,
+                               Utility.PermissionsPair permissions,
+                               String accessToken) {
+        deviceAuthMethodHandler.onSuccess(
+                accessToken,
+                FacebookSdk.getApplicationId(),
+                userId,
+                permissions.getGrantedPermissions(),
+                permissions.getDeclinedPermissions(),
+                AccessTokenSource.DEVICE_AUTH,
+                null,
+                null);
+        dialog.dismiss();
+    }
+
     private void onError(FacebookException ex) {
         if (!completed.compareAndSet(false, true)) {
             return;
         }
 
+        if (currentRequestState != null) {
+            DeviceRequestsHelper.cleanUpAdvertisementService(currentRequestState.getUserCode());
+        }
         deviceAuthMethodHandler.onError(ex);
         dialog.dismiss();
     }
@@ -355,6 +480,8 @@ private void onCancel() {
             return;
         }
 
+        DeviceRequestsHelper.cleanUpAdvertisementService(currentRequestState.getUserCode());
+
         if (deviceAuthMethodHandler != null) {
             // We are detached and cannot send a cancel message back
             deviceAuthMethodHandler.onCancel();
diff --git a/facebook/src/main/java/com/facebook/login/DeviceAuthMethodHandler.java b/facebook/src/main/java/com/facebook/login/DeviceAuthMethodHandler.java
index 9539525f3..e034b18e8 100644
--- a/facebook/src/main/java/com/facebook/login/DeviceAuthMethodHandler.java
+++ b/facebook/src/main/java/com/facebook/login/DeviceAuthMethodHandler.java
@@ -20,7 +20,6 @@
 
 package com.facebook.login;
 
-import android.app.Dialog;
 import android.os.Parcel;
 import android.os.Parcelable;
 
diff --git a/facebook/src/main/java/com/facebook/login/FacebookLiteLoginMethodHandler.java b/facebook/src/main/java/com/facebook/login/FacebookLiteLoginMethodHandler.java
index a39406278..4de6dfa9b 100644
--- a/facebook/src/main/java/com/facebook/login/FacebookLiteLoginMethodHandler.java
+++ b/facebook/src/main/java/com/facebook/login/FacebookLiteLoginMethodHandler.java
@@ -20,19 +20,12 @@
 
 package com.facebook.login;
 
-import android.app.Activity;
-import android.content.ActivityNotFoundException;
 import android.content.Intent;
-import android.os.Bundle;
 import android.os.Parcel;
 import android.os.Parcelable;
 
-import com.facebook.AccessToken;
-import com.facebook.AccessTokenSource;
-import com.facebook.FacebookException;
 import com.facebook.internal.NativeProtocol;
 import com.facebook.internal.ServerProtocol;
-import com.facebook.internal.Utility;
 
 
 class FacebookLiteLoginMethodHandler extends NativeAppLoginMethodHandler {
diff --git a/facebook/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java b/facebook/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java
index 0651b1c9a..fee9eac8f 100644
--- a/facebook/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java
+++ b/facebook/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java
@@ -20,19 +20,12 @@
 
 package com.facebook.login;
 
-import android.app.Activity;
-import android.content.ActivityNotFoundException;
 import android.content.Intent;
-import android.os.Bundle;
 import android.os.Parcel;
 import android.os.Parcelable;
 
-import com.facebook.AccessToken;
-import com.facebook.AccessTokenSource;
-import com.facebook.FacebookException;
 import com.facebook.internal.NativeProtocol;
 import com.facebook.internal.ServerProtocol;
-import com.facebook.internal.Utility;
 
 class KatanaProxyLoginMethodHandler extends NativeAppLoginMethodHandler {
 
diff --git a/facebook/src/main/java/com/facebook/login/LoginBehavior.java b/facebook/src/main/java/com/facebook/login/LoginBehavior.java
index a7b8f1957..45c3cac4b 100644
--- a/facebook/src/main/java/com/facebook/login/LoginBehavior.java
+++ b/facebook/src/main/java/com/facebook/login/LoginBehavior.java
@@ -65,7 +65,7 @@
     private final boolean allowsCustomTabAuth;
     private final boolean allowsFacebookLiteAuth;
 
-    private LoginBehavior(
+    LoginBehavior(
             boolean allowsGetTokenAuth,
             boolean allowsKatanaAuth,
             boolean allowsWebViewAuth,
diff --git a/facebook/src/main/java/com/facebook/login/LoginClient.java b/facebook/src/main/java/com/facebook/login/LoginClient.java
index e0beee610..486b26b9e 100644
--- a/facebook/src/main/java/com/facebook/login/LoginClient.java
+++ b/facebook/src/main/java/com/facebook/login/LoginClient.java
@@ -24,8 +24,6 @@
 import android.app.Activity;
 import android.content.Intent;
 import android.content.pm.PackageManager;
-import android.net.Uri;
-import android.os.Bundle;
 import android.os.Parcel;
 import android.os.Parcelable;
 import android.support.v4.app.Fragment;
@@ -33,17 +31,13 @@
 import android.text.TextUtils;
 
 import com.facebook.AccessToken;
-import com.facebook.GraphRequest;
-import com.facebook.GraphResponse;
-import com.facebook.appevents.AppEventsConstants;
 import com.facebook.FacebookException;
-import com.facebook.HttpMethod;
 import com.facebook.R;
+import com.facebook.appevents.AppEventsConstants;
 import com.facebook.internal.CallbackManagerImpl;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
 
-import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
@@ -51,7 +45,6 @@
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.HashSet;
-import java.util.List;
 import java.util.Map;
 import java.util.Set;
 
@@ -341,7 +334,7 @@ void validateSameFbidAndFinish(Result pendingResult) {
         AccessToken newToken = pendingResult.token;
 
         try {
-            Result result = null;
+            Result result;
             if (previousToken != null && newToken != null &&
                     previousToken.getUserId().equals(newToken.getUserId())) {
                 result = Result.createTokenResult(pendingRequest, pendingResult.token);
@@ -524,7 +517,7 @@ private Request(Parcel parcel) {
             this.defaultAudience = enumValue != null ? DefaultAudience.valueOf(enumValue) : null;
             this.applicationId = parcel.readString();
             this.authId = parcel.readString();
-            this.isRerequest = parcel.readByte() != 0 ? true : false;
+            this.isRerequest = parcel.readByte() != 0;
             this.deviceRedirectUriString = parcel.readString();
         }
 
diff --git a/facebook/src/main/java/com/facebook/login/LoginFragment.java b/facebook/src/main/java/com/facebook/login/LoginFragment.java
index e06756791..737e3ddc7 100644
--- a/facebook/src/main/java/com/facebook/login/LoginFragment.java
+++ b/facebook/src/main/java/com/facebook/login/LoginFragment.java
@@ -81,7 +81,7 @@ public void onCompleted(LoginClient.Result outcome) {
         if (activity.getIntent() != null) {
             Intent intent = activity.getIntent();
             Bundle bundle = intent.getBundleExtra(REQUEST_KEY);
-            request = (LoginClient.Request)bundle.getParcelable(EXTRA_REQUEST);
+            request = bundle.getParcelable(EXTRA_REQUEST);
         }
     }
 
diff --git a/facebook/src/main/java/com/facebook/login/LoginLogger.java b/facebook/src/main/java/com/facebook/login/LoginLogger.java
index ad6cefbb2..d8ca97151 100644
--- a/facebook/src/main/java/com/facebook/login/LoginLogger.java
+++ b/facebook/src/main/java/com/facebook/login/LoginLogger.java
@@ -143,7 +143,7 @@ public void logCompleteLogin(String loginRequestId, Map<String, String> loggingE
 
         // Combine extras from the request and from the result.
         JSONObject jsonObject = null;
-        if (loggingExtras.isEmpty() == false) {
+        if (!loggingExtras.isEmpty()) {
             jsonObject = new JSONObject(loggingExtras);
         }
         if (resultExtras != null) {
diff --git a/facebook/src/main/java/com/facebook/login/LoginManager.java b/facebook/src/main/java/com/facebook/login/LoginManager.java
index ac0224167..a43df449a 100644
--- a/facebook/src/main/java/com/facebook/login/LoginManager.java
+++ b/facebook/src/main/java/com/facebook/login/LoginManager.java
@@ -179,7 +179,7 @@ boolean onActivityResult(int resultCode, Intent data, FacebookCallback<LoginResu
         boolean isCanceled = false;
         if (data != null) {
             LoginClient.Result result =
-                    (LoginClient.Result) data.getParcelableExtra(LoginFragment.RESULT_KEY);
+                    data.getParcelableExtra(LoginFragment.RESULT_KEY);
             if (result != null) {
                 originalRequest = result.request;
                 code = result.code;
@@ -517,10 +517,7 @@ private boolean tryFacebookActivity(
     private boolean resolveIntent(Intent intent) {
         ResolveInfo resolveInfo = FacebookSdk.getApplicationContext().getPackageManager()
             .resolveActivity(intent, 0);
-        if (resolveInfo == null) {
-            return false;
-        }
-        return true;
+        return resolveInfo != null;
     }
 
     protected Intent getFacebookActivityIntent(LoginClient.Request request) {
@@ -529,7 +526,6 @@ protected Intent getFacebookActivityIntent(LoginClient.Request request) {
         intent.setAction(request.getLoginBehavior().toString());
 
         // Let FacebookActivity populate extras appropriately
-        LoginClient.Request authClientRequest = request;
         Bundle extras = new Bundle();
         extras.putParcelable(LoginFragment.EXTRA_REQUEST, request);
         intent.putExtra(LoginFragment.REQUEST_KEY, extras);
diff --git a/facebook/src/main/java/com/facebook/login/LoginMethodHandler.java b/facebook/src/main/java/com/facebook/login/LoginMethodHandler.java
index fc3e01879..607dab2ab 100644
--- a/facebook/src/main/java/com/facebook/login/LoginMethodHandler.java
+++ b/facebook/src/main/java/com/facebook/login/LoginMethodHandler.java
@@ -29,13 +29,11 @@
 
 import com.facebook.AccessToken;
 import com.facebook.AccessTokenSource;
-import com.facebook.FacebookAuthorizationException;
 import com.facebook.FacebookException;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.NativeProtocol;
 import com.facebook.internal.Utility;
-import com.facebook.internal.Validate;
 
 import org.json.JSONException;
 import org.json.JSONObject;
diff --git a/facebook/src/main/java/com/facebook/login/widget/LoginButton.java b/facebook/src/main/java/com/facebook/login/widget/LoginButton.java
index 0ae9eb9a2..1d0fb7bd8 100644
--- a/facebook/src/main/java/com/facebook/login/widget/LoginButton.java
+++ b/facebook/src/main/java/com/facebook/login/widget/LoginButton.java
@@ -27,17 +27,25 @@
 import android.content.res.TypedArray;
 import android.graphics.Canvas;
 import android.graphics.Paint;
-import android.net.Uri;
 import android.os.Bundle;
 import android.util.AttributeSet;
 import android.view.View;
-import com.facebook.*;
+
+import com.facebook.AccessToken;
+import com.facebook.AccessTokenTracker;
+import com.facebook.CallbackManager;
+import com.facebook.FacebookButtonBase;
+import com.facebook.FacebookCallback;
+import com.facebook.FacebookSdk;
+import com.facebook.Profile;
+import com.facebook.R;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.CallbackManagerImpl;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.LoginAuthorizationType;
 import com.facebook.internal.Utility;
-import com.facebook.internal.Utility.FetchedAppSettings;
 import com.facebook.login.DefaultAudience;
 import com.facebook.login.LoginBehavior;
 import com.facebook.login.LoginManager;
@@ -123,7 +131,7 @@ public int getValue() {
 
     static class LoginButtonProperties {
         private DefaultAudience defaultAudience = DefaultAudience.FRIENDS;
-        private List<String> permissions = Collections.<String>emptyList();
+        private List<String> permissions = Collections.emptyList();
         private LoginAuthorizationType authorizationType = null;
         private LoginBehavior loginBehavior = LoginBehavior.NATIVE_WITH_FALLBACK;
 
@@ -488,7 +496,7 @@ private void checkToolTipSettings() {
                 FacebookSdk.getExecutor().execute(new Runnable() {
                     @Override
                     public void run() {
-                        final FetchedAppSettings settings = Utility.queryAppSettings(appId, false);
+                        final FetchedAppSettings settings = FetchedAppSettingsManager.queryAppSettings(appId, false);
                         getActivity().runOnUiThread(new Runnable() {
                             @Override
                             public void run() {
@@ -638,11 +646,10 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
 
     private int measureButtonWidth(final String text) {
         int textWidth = measureTextWidth(text);
-        int width = (getCompoundPaddingLeft() +
+        return (getCompoundPaddingLeft() +
                 getCompoundDrawablePadding() +
                 textWidth +
                 getCompoundPaddingRight());
-        return width;
     }
 
     private void setButtonText() {
diff --git a/facebook/src/main/java/com/facebook/share/DeviceShareDialog.java b/facebook/src/main/java/com/facebook/share/DeviceShareDialog.java
index c9c017124..bbf8422e8 100644
--- a/facebook/src/main/java/com/facebook/share/DeviceShareDialog.java
+++ b/facebook/src/main/java/com/facebook/share/DeviceShareDialog.java
@@ -22,7 +22,6 @@
 import android.app.Activity;
 import android.app.Fragment;
 import android.content.Intent;
-import android.os.Bundle;
 
 import com.facebook.FacebookActivity;
 import com.facebook.FacebookCallback;
@@ -121,7 +120,6 @@ protected void registerCallbackImpl(
                 new CallbackManagerImpl.Callback() {
                     @Override
                     public boolean onActivityResult(int resultCode, Intent data) {
-                        Bundle extras = data.getExtras();
                         if (data.hasExtra("error")) {
                             FacebookRequestError error = data.getParcelableExtra("error");
                             callback.onError(error.getException());
diff --git a/facebook/src/main/java/com/facebook/share/ShareApi.java b/facebook/src/main/java/com/facebook/share/ShareApi.java
index 2917e345e..7940f63f2 100644
--- a/facebook/src/main/java/com/facebook/share/ShareApi.java
+++ b/facebook/src/main/java/com/facebook/share/ShareApi.java
@@ -350,7 +350,7 @@ public void onCompleted(GraphResponse response) {
         };
         try {
             for (SharePhoto photo : photoContent.getPhotos()) {
-                Bundle params = null;
+                Bundle params;
                 try {
                     params = getSharePhotoCommonParameters(photo, photoContent);
                 } catch (JSONException e) {
diff --git a/facebook/src/main/java/com/facebook/share/internal/DeviceShareDialogFragment.java b/facebook/src/main/java/com/facebook/share/internal/DeviceShareDialogFragment.java
index 82bc20cef..9a974f2fc 100644
--- a/facebook/src/main/java/com/facebook/share/internal/DeviceShareDialogFragment.java
+++ b/facebook/src/main/java/com/facebook/share/internal/DeviceShareDialogFragment.java
@@ -43,6 +43,7 @@
 import com.facebook.GraphResponse;
 import com.facebook.HttpMethod;
 import com.facebook.R;
+import com.facebook.devicerequests.internal.DeviceRequestsHelper;
 import com.facebook.internal.Validate;
 import com.facebook.share.model.ShareContent;
 import com.facebook.share.model.ShareLinkContent;
@@ -135,6 +136,8 @@ public void onSaveInstanceState(Bundle outState) {
     }
 
     private void finishActivity(int resultCode, Intent data) {
+        DeviceRequestsHelper.cleanUpAdvertisementService(currentRequestState.getUserCode());
+
         if (isAdded()) {
             Activity activity = getActivity();
             activity.setResult(resultCode, data);
@@ -171,8 +174,12 @@ private void startShare() {
             this.finishActivityWithError(
                     new FacebookRequestError(0, "", "Failed to get share content"));
         }
+
         String accessToken = Validate.hasAppID()+ "|" + Validate.hasClientToken();
         parameters.putString(GraphRequest.ACCESS_TOKEN_PARAM, accessToken);
+        parameters.putString(DeviceRequestsHelper.DEVICE_INFO_PARAM,
+                             DeviceRequestsHelper.getDeviceInfo());
+
         GraphRequest graphRequest = new GraphRequest(
                 null,
                 DEVICE_SHARE_ENDPOINT,
diff --git a/facebook/src/main/java/com/facebook/share/internal/LegacyNativeDialogParameters.java b/facebook/src/main/java/com/facebook/share/internal/LegacyNativeDialogParameters.java
index a00f9e5fc..7b187ac5b 100644
--- a/facebook/src/main/java/com/facebook/share/internal/LegacyNativeDialogParameters.java
+++ b/facebook/src/main/java/com/facebook/share/internal/LegacyNativeDialogParameters.java
@@ -20,7 +20,6 @@
 
 package com.facebook.share.internal;
 
-import android.content.Context;
 import android.os.Bundle;
 
 import com.facebook.FacebookException;
@@ -28,7 +27,6 @@
 import com.facebook.internal.Validate;
 import com.facebook.share.model.ShareContent;
 import com.facebook.share.model.ShareLinkContent;
-import com.facebook.share.model.ShareOpenGraphAction;
 import com.facebook.share.model.ShareOpenGraphContent;
 import com.facebook.share.model.SharePhotoContent;
 import com.facebook.share.model.ShareVideoContent;
diff --git a/facebook/src/main/java/com/facebook/share/internal/OpenGraphJSONUtility.java b/facebook/src/main/java/com/facebook/share/internal/OpenGraphJSONUtility.java
index dfa01941d..787600ca2 100644
--- a/facebook/src/main/java/com/facebook/share/internal/OpenGraphJSONUtility.java
+++ b/facebook/src/main/java/com/facebook/share/internal/OpenGraphJSONUtility.java
@@ -20,9 +20,8 @@
 
 package com.facebook.share.internal;
 
-import android.os.Bundle;
 import android.support.annotation.Nullable;
-import com.facebook.internal.Validate;
+
 import com.facebook.share.model.ShareOpenGraphAction;
 import com.facebook.share.model.ShareOpenGraphObject;
 import com.facebook.share.model.SharePhoto;
diff --git a/facebook/src/main/java/com/facebook/share/internal/ShareContentValidation.java b/facebook/src/main/java/com/facebook/share/internal/ShareContentValidation.java
index bd5643b1c..728534c7e 100644
--- a/facebook/src/main/java/com/facebook/share/internal/ShareContentValidation.java
+++ b/facebook/src/main/java/com/facebook/share/internal/ShareContentValidation.java
@@ -260,7 +260,7 @@ private static void validateOpenGraphAction(
             throw new FacebookException("ShareOpenGraphAction must have a non-empty actionType");
         }
 
-        validator.validate((ShareOpenGraphValueContainer) openGraphAction, false);
+        validator.validate(openGraphAction, false);
     }
 
     private static void validateOpenGraphObject(
@@ -270,7 +270,7 @@ private static void validateOpenGraphObject(
             throw new FacebookException("Cannot share a null ShareOpenGraphObject");
         }
 
-        validator.validate((ShareOpenGraphValueContainer) openGraphObject, true);
+        validator.validate(openGraphObject, true);
     }
 
     private static void validateOpenGraphValueContainer(
diff --git a/facebook/src/main/java/com/facebook/share/internal/ShareFeedContent.java b/facebook/src/main/java/com/facebook/share/internal/ShareFeedContent.java
index 295ca4047..e3f3cdfdd 100644
--- a/facebook/src/main/java/com/facebook/share/internal/ShareFeedContent.java
+++ b/facebook/src/main/java/com/facebook/share/internal/ShareFeedContent.java
@@ -25,9 +25,6 @@
 
 import com.facebook.share.model.ShareContent;
 
-import java.util.HashMap;
-import java.util.Map;
-
 // This class is used specifically for backwards support in unity for various feed parameters
 // Currently this content is only supported if you set the mode to Feed when sharing.
 public class ShareFeedContent
diff --git a/facebook/src/main/java/com/facebook/share/internal/ShareInternalUtility.java b/facebook/src/main/java/com/facebook/share/internal/ShareInternalUtility.java
index 4e8305eb2..c5c8d365f 100644
--- a/facebook/src/main/java/com/facebook/share/internal/ShareInternalUtility.java
+++ b/facebook/src/main/java/com/facebook/share/internal/ShareInternalUtility.java
@@ -401,7 +401,7 @@ public JSONObject toJSONObject(SharePhoto photo) {
             for (String peopleId : content.getPeopleIds()) {
                 peopleIdSet.add(peopleId);
             }
-            actionJSON.put("tags", new ArrayList<>(peopleIdSet));
+            actionJSON.put("tags", new JSONArray(peopleIdSet));
         }
 
         return actionJSON;
@@ -460,7 +460,7 @@ public static JSONObject removeNamespacesFromOGJsonObject(
             JSONArray names = jsonObject.names();
             for (int i = 0; i < names.length(); ++i) {
                 String key = names.getString(i);
-                Object value = null;
+                Object value;
                 value = jsonObject.get(key);
                 if (value instanceof JSONObject) {
                     value = removeNamespacesFromOGJsonObject((JSONObject) value, true);
diff --git a/facebook/src/main/java/com/facebook/share/internal/VideoUploader.java b/facebook/src/main/java/com/facebook/share/internal/VideoUploader.java
index 52a012d9d..48c370a22 100644
--- a/facebook/src/main/java/com/facebook/share/internal/VideoUploader.java
+++ b/facebook/src/main/java/com/facebook/share/internal/VideoUploader.java
@@ -230,7 +230,7 @@ private static synchronized void enqueueRequest(
         int bufferSize = Math.min(8192, chunkSize);
         byte[] buffer = new byte[bufferSize];
 
-        int len = 0;
+        int len;
         while ((len = uploadContext.videoStream.read(buffer)) != -1) {
             byteBufferStream.write(buffer, 0, len);
 
@@ -333,7 +333,7 @@ private UploadContext(
 
         private void initialize()
                 throws FileNotFoundException {
-            ParcelFileDescriptor fileDescriptor = null;
+            ParcelFileDescriptor fileDescriptor;
             try {
                 if (Utility.isFileUri(videoUri)) {
                     fileDescriptor = ParcelFileDescriptor.open(
diff --git a/facebook/src/main/java/com/facebook/share/internal/WebDialogParameters.java b/facebook/src/main/java/com/facebook/share/internal/WebDialogParameters.java
index fd0cef464..ca2b5f5d8 100644
--- a/facebook/src/main/java/com/facebook/share/internal/WebDialogParameters.java
+++ b/facebook/src/main/java/com/facebook/share/internal/WebDialogParameters.java
@@ -33,12 +33,9 @@
 import com.facebook.share.model.SharePhoto;
 import com.facebook.share.model.SharePhotoContent;
 
-import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import java.util.ArrayList;
-import java.util.List;
 import java.util.Locale;
 
 /**
diff --git a/facebook/src/main/java/com/facebook/share/model/GameRequestContent.java b/facebook/src/main/java/com/facebook/share/model/GameRequestContent.java
index d9d185471..cc4fa0c2b 100644
--- a/facebook/src/main/java/com/facebook/share/model/GameRequestContent.java
+++ b/facebook/src/main/java/com/facebook/share/model/GameRequestContent.java
@@ -23,7 +23,6 @@
 import android.os.Parcel;
 import android.text.TextUtils;
 
-import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareMedia.java b/facebook/src/main/java/com/facebook/share/model/ShareMedia.java
index f1be45be7..96efc6b29 100644
--- a/facebook/src/main/java/com/facebook/share/model/ShareMedia.java
+++ b/facebook/src/main/java/com/facebook/share/model/ShareMedia.java
@@ -22,11 +22,9 @@
 
 import android.os.Bundle;
 import android.os.Parcel;
-import android.os.ParcelFormatException;
 import android.os.Parcelable;
 
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.List;
 
 /**
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareModelBuilder.java b/facebook/src/main/java/com/facebook/share/model/ShareModelBuilder.java
index 4e8fe2968..3500dde49 100644
--- a/facebook/src/main/java/com/facebook/share/model/ShareModelBuilder.java
+++ b/facebook/src/main/java/com/facebook/share/model/ShareModelBuilder.java
@@ -20,8 +20,6 @@
 
 package com.facebook.share.model;
 
-import android.os.Parcel;
-
 import com.facebook.share.ShareBuilder;
 
 /**
diff --git a/facebook/src/main/java/com/facebook/share/model/SharePhotoContent.java b/facebook/src/main/java/com/facebook/share/model/SharePhotoContent.java
index fccbc67de..8b740bf7b 100644
--- a/facebook/src/main/java/com/facebook/share/model/SharePhotoContent.java
+++ b/facebook/src/main/java/com/facebook/share/model/SharePhotoContent.java
@@ -23,8 +23,6 @@
 import android.os.Parcel;
 import android.support.annotation.Nullable;
 
-import com.facebook.share.internal.ShareConstants;
-
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
diff --git a/facebook/src/main/java/com/facebook/share/widget/AppInviteDialog.java b/facebook/src/main/java/com/facebook/share/widget/AppInviteDialog.java
index d65bdcbd0..3266093e0 100644
--- a/facebook/src/main/java/com/facebook/share/widget/AppInviteDialog.java
+++ b/facebook/src/main/java/com/facebook/share/widget/AppInviteDialog.java
@@ -32,7 +32,6 @@
 import com.facebook.share.internal.*;
 import com.facebook.share.model.AppInviteContent;
 
-import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
diff --git a/facebook/src/main/java/com/facebook/share/widget/MessageDialog.java b/facebook/src/main/java/com/facebook/share/widget/MessageDialog.java
index 01fb16943..03abaabd0 100644
--- a/facebook/src/main/java/com/facebook/share/widget/MessageDialog.java
+++ b/facebook/src/main/java/com/facebook/share/widget/MessageDialog.java
@@ -212,7 +212,6 @@ public AppCall createAppCall(final ShareContent content) {
 
             final AppCall appCall = createBaseAppCall();
             final boolean shouldFailOnDataError = getShouldFailOnDataError();
-            final Activity activity = getActivityContext();
 
             DialogPresenter.setupAppCallForNativeDialog(
                     appCall,
diff --git a/facebook/src/main/java/com/facebook/share/widget/SendButton.java b/facebook/src/main/java/com/facebook/share/widget/SendButton.java
index 068d9ebc6..a85330561 100644
--- a/facebook/src/main/java/com/facebook/share/widget/SendButton.java
+++ b/facebook/src/main/java/com/facebook/share/widget/SendButton.java
@@ -22,7 +22,6 @@
 
 import android.content.Context;
 import android.util.AttributeSet;
-import android.view.View;
 
 import com.facebook.R;
 import com.facebook.internal.AnalyticsEvents;
diff --git a/facebook/src/main/java/com/facebook/share/widget/ShareButton.java b/facebook/src/main/java/com/facebook/share/widget/ShareButton.java
index 2c5835150..810218227 100644
--- a/facebook/src/main/java/com/facebook/share/widget/ShareButton.java
+++ b/facebook/src/main/java/com/facebook/share/widget/ShareButton.java
@@ -22,7 +22,6 @@
 
 import android.content.Context;
 import android.util.AttributeSet;
-import android.view.View;
 
 import com.facebook.R;
 import com.facebook.internal.AnalyticsEvents;
diff --git a/facebook/src/main/java/com/facebook/share/widget/ShareDialog.java b/facebook/src/main/java/com/facebook/share/widget/ShareDialog.java
index 4613c6a25..0ad84e399 100644
--- a/facebook/src/main/java/com/facebook/share/widget/ShareDialog.java
+++ b/facebook/src/main/java/com/facebook/share/widget/ShareDialog.java
@@ -27,6 +27,7 @@
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 
+import com.facebook.AccessToken;
 import com.facebook.FacebookCallback;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.internal.AnalyticsEvents;
@@ -168,9 +169,14 @@ private static boolean canShowWebTypeCheck(Class<? extends ShareContent> content
         // The instance method version of this check is more accurate and should be used on
         // ShareDialog instances.
 
+        // SharePhotoContent currently requires the user staging endpoint, so we need a user access
+        // token, so we need to see if we have one
+        final AccessToken accessToken = AccessToken.getCurrentAccessToken();
+        final boolean haveUserAccessToken = accessToken != null && !accessToken.isExpired();
+
         return ShareLinkContent.class.isAssignableFrom(contentType)
                 || ShareOpenGraphContent.class.isAssignableFrom(contentType)
-                || SharePhotoContent.class.isAssignableFrom(contentType);
+                || (SharePhotoContent.class.isAssignableFrom(contentType) && haveUserAccessToken);
     }
 
     /**
diff --git a/facebook/src/main/res/layout/com_facebook_device_auth_dialog_fragment.xml b/facebook/src/main/res/layout/com_facebook_device_auth_dialog_fragment.xml
index 5b7001999..3acc823e0 100644
--- a/facebook/src/main/res/layout/com_facebook_device_auth_dialog_fragment.xml
+++ b/facebook/src/main/res/layout/com_facebook_device_auth_dialog_fragment.xml
@@ -27,13 +27,13 @@
     app:cardElevation="10dp">
 
     <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="wrap_content"
+        android:layout_width="300dp"
         android:layout_height="wrap_content"
         android:background="@drawable/com_facebook_auth_dialog_background"
         android:orientation="vertical">
 
         <RelativeLayout
-            android:layout_width="300dp"
+            android:layout_width="match_parent"
             android:layout_height="100dp"
             android:background="@drawable/com_facebook_auth_dialog_header_background"
             android:orientation="horizontal">
@@ -93,7 +93,7 @@
 
         <FrameLayout
             android:layout_width="match_parent"
-            android:layout_height="match_parent"
+            android:layout_height="wrap_content"
             android:layout_marginBottom="17dp"
             android:layout_marginTop="14dp">
 
diff --git a/facebook/src/main/res/layout/com_facebook_smart_device_dialog_fragment.xml b/facebook/src/main/res/layout/com_facebook_smart_device_dialog_fragment.xml
new file mode 100644
index 000000000..e86adda67
--- /dev/null
+++ b/facebook/src/main/res/layout/com_facebook_smart_device_dialog_fragment.xml
@@ -0,0 +1,155 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    app:cardBackgroundColor="@android:color/transparent"
+    app:cardElevation="10dp">
+
+    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+        android:layout_width="600dp"
+        android:layout_height="405dp"
+        android:background="@drawable/com_facebook_auth_dialog_background"
+        android:orientation="vertical"
+        android:gravity="center_horizontal"
+        >
+
+        <RelativeLayout
+            android:layout_width="match_parent"
+            android:layout_height="110dp"
+            android:background="@drawable/com_facebook_auth_dialog_header_background"
+            android:orientation="horizontal">
+
+            <FrameLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content">
+
+                <android.support.v7.widget.AppCompatImageView
+                    android:layout_width="18dp"
+                    android:layout_height="18dp"
+                    android:layout_marginBottom="11dp"
+                    android:layout_marginStart="12dp"
+                    android:layout_marginLeft="12dp"
+                    android:layout_marginTop="11dp"
+                    android:adjustViewBounds="false"
+                    android:scaleType="fitXY"
+                    app:srcCompat="@drawable/com_facebook_favicon_blue" />
+            </FrameLayout>
+
+            <TextView
+                android:id="@+id/confirmation_code"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_centerInParent="true"
+                android:fontFamily="sans-serif-light"
+                android:gravity="center"
+                android:textColor="@color/com_smart_login_code"
+                android:textSize="52sp"
+                android:typeface="sans"
+                android:visibility="invisible" />
+
+            <ProgressBar
+                android:id="@+id/progress_bar"
+                android:layout_width="wrap_content"
+                android:layout_height="0dp"
+                android:layout_alignBottom="@+id/confirmation_code"
+                android:layout_alignTop="@+id/confirmation_code"
+                android:layout_centerHorizontal="true"
+                android:layout_centerInParent="true"
+                android:layout_centerVertical="true" />
+
+        </RelativeLayout>
+
+        <TextView
+            android:id="@+id/com_facebook_smart_instructions_0"
+            style="@style/com_facebook_auth_dialog_instructions_textview"
+            android:layout_marginTop="18dp"
+            android:text="@string/com_facebook_smart_device_instructions_0"
+            />
+        <TextView
+            android:id="@+id/com_facebook_smart_instructions_1"
+            style="@style/com_facebook_auth_dialog_instructions_textview"
+            android:text="@string/com_facebook_smart_device_instructions_1"
+            android:drawablePadding="10dp"
+            android:layout_marginTop="7dp"
+            />
+
+
+        <TextView
+            android:id="@+id/com_facebook_smart_instructions_2"
+            style="@style/com_facebook_auth_dialog_instructions_textview"
+            android:text="@string/com_facebook_smart_device_instructions_2"
+            android:drawablePadding="10dp"
+            android:layout_marginTop="7dp"
+            />
+        <TextView
+            android:id="@+id/com_facebook_smart_instructions_3"
+            style="@style/com_facebook_auth_dialog_instructions_textview"
+            android:text="@string/com_facebook_smart_device_instructions_3"
+            android:layout_marginTop="7dp"
+            />
+
+        <TextView
+            android:id="@+id/com_facebook_smart_instructions_or"
+            style="@style/com_facebook_auth_dialog_instructions_textview"
+            android:layout_width="match_parent"
+            android:gravity="center_horizontal"
+            android:textStyle="bold"
+            android:layout_marginTop="12dp"
+            android:layout_marginStart="0dp"
+            android:layout_marginEnd="0dp"
+            android:text="@string/com_facebook_smart_device_instructions_or"
+            />
+
+        <TextView
+            android:id="@+id/com_facebook_device_auth_instructions"
+            style="@style/com_facebook_auth_dialog_instructions_textview"
+            android:layout_marginTop="12dp"
+            />
+
+        <FrameLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="17dp"
+            android:layout_marginTop="28dp">
+
+            <Button
+                android:id="@+id/cancel_button"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:minWidth="200dp"
+                android:layout_gravity="center_horizontal"
+                android:background="@drawable/com_facebook_auth_dialog_cancel_background"
+                android:clickable="true"
+                android:focusable="true"
+                android:fontFamily="sans-serif-medium"
+                android:text="@android:string/cancel"
+                android:textAllCaps="true"
+                android:textColor="@color/com_facebook_device_auth_text"
+                android:textSize="18sp"
+                android:textStyle="bold"
+                android:typeface="sans" />
+        </FrameLayout>
+
+    </LinearLayout>
+</android.support.v7.widget.CardView>
diff --git a/facebook/src/main/res/values-af/strings.xml b/facebook/src/main/res/values-af/strings.xml
index c5932dc6a..31cccc15d 100644
--- a/facebook/src/main/res/values-af/strings.xml
+++ b/facebook/src/main/res/values-af/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Met Facebook aangemeld</string>
     <string name="com_facebook_loginview_log_out_action">Meld af</string>
     <string name="com_facebook_loginview_cancel_action">Kanselleer</string>
-    <string name="com_facebook_loading">Laai tans...</string>
+    <string name="com_facebook_loading">Laai tans&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest-fout</string>
     <string name="com_facebook_internet_permission_error_message">Webaansig-aanmelding benodig INTERNET-toestemming</string>
     <string name="com_facebook_tooltip_default">Nuut! Jy is in beheer - kies watter inligting jy met toepassings wil deel.</string>
diff --git a/facebook/src/main/res/values-ar/strings.xml b/facebook/src/main/res/values-ar/strings.xml
index 946c6c9b8..b331a73b9 100644
--- a/facebook/src/main/res/values-ar/strings.xml
+++ b/facebook/src/main/res/values-ar/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">تم تسجيل الدخول بحساب فيسبوك</string>
     <string name="com_facebook_loginview_log_out_action">تسجيل الخروج</string>
     <string name="com_facebook_loginview_cancel_action">إلغاء</string>
-    <string name="com_facebook_loading">جارٍ التحميل...</string>
+    <string name="com_facebook_loading">جارٍ التحميل&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">خطأ AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">يتطلب تسجيل الدخول إلى WebView إذن الاتصال بالإنترنت</string>
     <string name="com_facebook_tooltip_default">جديد! أنت المتحكم - اختر المعلومات التي تريد مشاركتها مع التطبيقات.</string>
diff --git a/facebook/src/main/res/values-bn/strings.xml b/facebook/src/main/res/values-bn/strings.xml
index 1fb7ec1d1..b87786e12 100644
--- a/facebook/src/main/res/values-bn/strings.xml
+++ b/facebook/src/main/res/values-bn/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ব্যবহার করে লগ ইন করা হয়েছে</string>
     <string name="com_facebook_loginview_log_out_action">লগ আউট করুন</string>
     <string name="com_facebook_loginview_cancel_action">বাতিল করুন</string>
-    <string name="com_facebook_loading">লোড হচ্ছে...</string>
+    <string name="com_facebook_loading">লোড হচ্ছে&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest ত্রুটি</string>
     <string name="com_facebook_internet_permission_error_message">WebView লগ ইন করার জন্য INTERNET-এর অনুমতির প্রয়োজন আছে</string>
     <string name="com_facebook_tooltip_default">নতুন! আপনি নিয়ন্ত্রণে আছেন-অ্যাপসের সাথে আপনি কোন তথ্য ভাগ করতে চাইছেন তা চয়ন করুন৷</string>
diff --git a/facebook/src/main/res/values-cs/strings.xml b/facebook/src/main/res/values-cs/strings.xml
index ff7de1b51..3f3323e90 100644
--- a/facebook/src/main/res/values-cs/strings.xml
+++ b/facebook/src/main/res/values-cs/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Přihlášen(a) přes Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Odhlásit</string>
     <string name="com_facebook_loginview_cancel_action">Zrušit</string>
-    <string name="com_facebook_loading">Načítání…</string>
+    <string name="com_facebook_loading">Načítání&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Chyba AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">Webové přihlášení vyžaduje oprávnění použít INTERNET</string>
     <string name="com_facebook_tooltip_default">Novinka! Je jen na vás, které informace chcete s aplikacemi sdílet.</string>
diff --git a/facebook/src/main/res/values-da/strings.xml b/facebook/src/main/res/values-da/strings.xml
index 994356453..7f7f35b1a 100644
--- a/facebook/src/main/res/values-da/strings.xml
+++ b/facebook/src/main/res/values-da/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Logget på med Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Log af</string>
     <string name="com_facebook_loginview_cancel_action">Annuller</string>
-    <string name="com_facebook_loading">Indlæser ...</string>
+    <string name="com_facebook_loading">Indlæser &#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Fejl i forbindelse med AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">WebView-login kræver tilladelse til INTERNET</string>
     <string name="com_facebook_tooltip_default">Nyhed! Du har styringen – vælg de oplysninger, som du vil dele med apps.</string>
diff --git a/facebook/src/main/res/values-de/strings.xml b/facebook/src/main/res/values-de/strings.xml
index 0913a44e6..372c34f10 100644
--- a/facebook/src/main/res/values-de/strings.xml
+++ b/facebook/src/main/res/values-de/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Über Facebook angemeldet</string>
     <string name="com_facebook_loginview_log_out_action">Abmelden</string>
     <string name="com_facebook_loginview_cancel_action">Abbrechen</string>
-    <string name="com_facebook_loading">Wird geladen ...</string>
+    <string name="com_facebook_loading">Wird geladen &#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest-Fehler</string>
     <string name="com_facebook_internet_permission_error_message">Die WebView-Anmeldung erfordert die INTERNET-Berechtigung</string>
     <string name="com_facebook_tooltip_default">Neu! Es liegt ganz an dir – du kannst dir aussuchen, was du mit Apps teilen möchtest.</string>
diff --git a/facebook/src/main/res/values-el/strings.xml b/facebook/src/main/res/values-el/strings.xml
index 0d4699dcb..de516a464 100644
--- a/facebook/src/main/res/values-el/strings.xml
+++ b/facebook/src/main/res/values-el/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Έχει γίνει σύνδεση μέσω Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Αποσύνδεση</string>
     <string name="com_facebook_loginview_cancel_action">Άκυρο</string>
-    <string name="com_facebook_loading">Φόρτωση...</string>
+    <string name="com_facebook_loading">Φόρτωση&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Σφάλμα AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">Για τη σύνδεση στο WebView απαιτείται σύνδεση INTERNET</string>
     <string name="com_facebook_tooltip_default">Νέο! Έχετε τον έλεγχο - επιλέξτε ποιες πληροφορίες θέλετε να κοινοποιούνται στις εφαρμογές.</string>
diff --git a/facebook/src/main/res/values-es-rES/strings.xml b/facebook/src/main/res/values-es-rES/strings.xml
index bc0b08e39..1281e8136 100644
--- a/facebook/src/main/res/values-es-rES/strings.xml
+++ b/facebook/src/main/res/values-es-rES/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Sesión iniciada con Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Salir</string>
     <string name="com_facebook_loginview_cancel_action">Cancelar</string>
-    <string name="com_facebook_loading">Cargando...</string>
+    <string name="com_facebook_loading">Cargando&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Error de AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">El inicio de sesión de WebView requiere permiso para INTERNET</string>
     <string name="com_facebook_tooltip_default">Novedad: Tú eres quien controla y elige la información que quieres compartir con las aplicaciones.</string>
diff --git a/facebook/src/main/res/values-es/strings.xml b/facebook/src/main/res/values-es/strings.xml
index 9a211ca6c..b07477656 100644
--- a/facebook/src/main/res/values-es/strings.xml
+++ b/facebook/src/main/res/values-es/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Sesión iniciada con Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Salir</string>
     <string name="com_facebook_loginview_cancel_action">Cancelar</string>
-    <string name="com_facebook_loading">Cargando…</string>
+    <string name="com_facebook_loading">Cargando&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Error AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">El inicio de sesión a la web requiere permiso de conexión a internet</string>
     <string name="com_facebook_tooltip_default">¡Nuevo! Tú tienes el control: elige qué información quieres compartir con las aplicaciones.</string>
diff --git a/facebook/src/main/res/values-fi/strings.xml b/facebook/src/main/res/values-fi/strings.xml
index 3962c6cc3..c300738c5 100644
--- a/facebook/src/main/res/values-fi/strings.xml
+++ b/facebook/src/main/res/values-fi/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Sisäänkirjautunut Facebookin avulla</string>
     <string name="com_facebook_loginview_log_out_action">Kirjaudu ulos</string>
     <string name="com_facebook_loginview_cancel_action">Peruuta</string>
-    <string name="com_facebook_loading">Ladataan...</string>
+    <string name="com_facebook_loading">Ladataan&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest-virhe</string>
     <string name="com_facebook_internet_permission_error_message">WebView-kirjautuminen edellyttää INTERNET-käyttöoikeutta</string>
     <string name="com_facebook_tooltip_default">Uutta! Sinä päätät – valitse, mitä haluat jakaa sovellusten kanssa.</string>
diff --git a/facebook/src/main/res/values-fr/strings.xml b/facebook/src/main/res/values-fr/strings.xml
index d7a686d8b..6bcc5a86b 100644
--- a/facebook/src/main/res/values-fr/strings.xml
+++ b/facebook/src/main/res/values-fr/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Connecté(e) à l’aide de Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Déconnexion</string>
     <string name="com_facebook_loginview_cancel_action">Annuler</string>
-    <string name="com_facebook_loading">Chargement...</string>
+    <string name="com_facebook_loading">Chargement&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Erreur AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">La connexion au web nécessite une autorisation d’accéder à INTERNET</string>
     <string name="com_facebook_tooltip_default">Nouveau ! Choisissez les informations que vous souhaitez partager avec les applications.</string>
diff --git a/facebook/src/main/res/values-gu/strings.xml b/facebook/src/main/res/values-gu/strings.xml
index 633e58a60..c2e09da34 100644
--- a/facebook/src/main/res/values-gu/strings.xml
+++ b/facebook/src/main/res/values-gu/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">ફેસબુકનો ઉપયોગ કરીને લૉગ ઇન કરો</string>
     <string name="com_facebook_loginview_log_out_action">લૉગ આઉટ કરો</string>
     <string name="com_facebook_loginview_cancel_action">રદ કરો</string>
-    <string name="com_facebook_loading">લોડ કરી રહ્યાં છે...</string>
+    <string name="com_facebook_loading">લોડ કરી રહ્યાં છે&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest ભૂલ</string>
     <string name="com_facebook_internet_permission_error_message">WebView લૉગિન માટે ઇન્ટરનેટ પરવાગની આવશ્યક છે</string>
     <string name="com_facebook_tooltip_default">નવું! તમે નિયંત્રણ કરો છો - તમે એપ્લિકેશન્સ સાથે કઈ માહિતી શેર કરવા માંગો છો તે પસંદ કરો.</string>
diff --git a/facebook/src/main/res/values-hi/strings.xml b/facebook/src/main/res/values-hi/strings.xml
index 1784ecf2d..5bbd03852 100644
--- a/facebook/src/main/res/values-hi/strings.xml
+++ b/facebook/src/main/res/values-hi/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Facebook का उपयोग करके लॉग इन किया हुआ है</string>
     <string name="com_facebook_loginview_log_out_action">लॉग आउट</string>
     <string name="com_facebook_loginview_cancel_action">रद्द करें</string>
-    <string name="com_facebook_loading">लोड हो रहा है...</string>
+    <string name="com_facebook_loading">लोड हो रहा है&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest गलती</string>
     <string name="com_facebook_internet_permission_error_message">WebView लॉग इन के लिए INTERNET अनुमति की आवश्यकता है</string>
     <string name="com_facebook_tooltip_default">नया! आप नियंत्रण में हैं - चुनें कि आप एप्लिकेशन से कौन-सी जानकारी साझा करना चाहते हैं.</string>
diff --git a/facebook/src/main/res/values-hr/strings.xml b/facebook/src/main/res/values-hr/strings.xml
index 24cd1b72f..573d63b1f 100644
--- a/facebook/src/main/res/values-hr/strings.xml
+++ b/facebook/src/main/res/values-hr/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Prijavljen putem Facebooka</string>
     <string name="com_facebook_loginview_log_out_action">Odjavi se</string>
     <string name="com_facebook_loginview_cancel_action">Odustani</string>
-    <string name="com_facebook_loading">Učitavanje u tijeku…</string>
+    <string name="com_facebook_loading">Učitavanje u tijeku&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Pogreška datoteke AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">Za prijavu u aplikaciju WebView potrebna je dozvola INTERNET</string>
     <string name="com_facebook_tooltip_default">Novo! Vi odlučujete – odaberite koje informacije želite podijeliti u aplikacijama.</string>
diff --git a/facebook/src/main/res/values-hu/strings.xml b/facebook/src/main/res/values-hu/strings.xml
index e91c8444e..0ad501345 100644
--- a/facebook/src/main/res/values-hu/strings.xml
+++ b/facebook/src/main/res/values-hu/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Bejelentkezve a Facebook használatával</string>
     <string name="com_facebook_loginview_log_out_action">Kijelentkezés</string>
     <string name="com_facebook_loginview_cancel_action">Törlés</string>
-    <string name="com_facebook_loading">Betöltés...</string>
+    <string name="com_facebook_loading">Betöltés&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest-hiba</string>
     <string name="com_facebook_internet_permission_error_message">A webes bejelentkezéshez szükséges a jogosultság az internet használatára.</string>
     <string name="com_facebook_tooltip_default">Újdonság! A döntés a kezedben van: kiválaszthatod, hogy milyen adatokat osztasz meg az alkalmazásokkal.</string>
diff --git a/facebook/src/main/res/values-id/strings.xml b/facebook/src/main/res/values-id/strings.xml
index 76bbb24bc..837ff5597 100644
--- a/facebook/src/main/res/values-id/strings.xml
+++ b/facebook/src/main/res/values-id/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Masuk menggunakan Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Keluar</string>
     <string name="com_facebook_loginview_cancel_action">Batal</string>
-    <string name="com_facebook_loading">Memuat...</string>
+    <string name="com_facebook_loading">Memuat&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Kesalahan AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">Masuk WebView memerlukan izin INTERNET</string>
     <string name="com_facebook_tooltip_default">Baru! Anda memegang kendali - pilih info yang ingin Anda bagikan dengan aplikasi.</string>
diff --git a/facebook/src/main/res/values-it/strings.xml b/facebook/src/main/res/values-it/strings.xml
index 9e46b98bd..ce45068f2 100644
--- a/facebook/src/main/res/values-it/strings.xml
+++ b/facebook/src/main/res/values-it/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Accesso effettuato con Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Esci</string>
     <string name="com_facebook_loginview_cancel_action">Annulla</string>
-    <string name="com_facebook_loading">Caricamento...</string>
+    <string name="com_facebook_loading">Caricamento&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest Error</string>
     <string name="com_facebook_internet_permission_error_message">L\'accesso tramite Web richiede
         l\'autorizzazione INTERNET</string>
diff --git a/facebook/src/main/res/values-ja/strings.xml b/facebook/src/main/res/values-ja/strings.xml
index 858d388e5..a36132c1f 100644
--- a/facebook/src/main/res/values-ja/strings.xml
+++ b/facebook/src/main/res/values-ja/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Facebookを使用してログイン中</string>
     <string name="com_facebook_loginview_log_out_action">ログアウト</string>
     <string name="com_facebook_loginview_cancel_action">キャンセル</string>
-    <string name="com_facebook_loading">読み込み中...</string>
+    <string name="com_facebook_loading">読み込み中&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifestエラー</string>
     <string name="com_facebook_internet_permission_error_message">WebViewログインにはINTERNET権限が必要です</string>
     <string name="com_facebook_tooltip_default">新機能！アプリと共有する情報をコントロールできます。</string>
diff --git a/facebook/src/main/res/values-kn/strings.xml b/facebook/src/main/res/values-kn/strings.xml
index c3ca7a696..10c32a500 100644
--- a/facebook/src/main/res/values-kn/strings.xml
+++ b/facebook/src/main/res/values-kn/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ಬಳಸಿಕೊಂಡು ಲಾಗಿನ್‌ ಮಾಡಲಾಗಿದೆ</string>
     <string name="com_facebook_loginview_log_out_action">ಲಾಗ್‌ ಔಟ್‌</string>
     <string name="com_facebook_loginview_cancel_action">ರದ್ದುಮಾಡು</string>
-    <string name="com_facebook_loading">ಲೋಡ್‌ ಆಗುತ್ತಿದೆ...</string>
+    <string name="com_facebook_loading">ಲೋಡ್‌ ಆಗುತ್ತಿದೆ&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest ದೋಷ</string>
     <string name="com_facebook_internet_permission_error_message">WebView ಲಾಗಿನ್‌ಗೆ ಇಂಟರ್ನೆಟ್ ಅನುಮತಿಯ ಅಗತ್ಯವಿದೆ</string>
     <string name="com_facebook_tooltip_default">ಹೊಸ! ನೀವು ನಿಯಂತ್ರಣದಲ್ಲಿರುವಿರಿ - ನೀವು ಅಪ್ಲಿಕೇಶನ್‌ಗಳನ್ನು ಬಳಸಿಕೊಂಡು ಹಂಚಿಕೊಳ್ಳಲು ಬಯಸುವ ವಿಷಯವನ್ನು ಆರಿಸಿ.</string>
diff --git a/facebook/src/main/res/values-ko/strings.xml b/facebook/src/main/res/values-ko/strings.xml
index c925e6ef7..b52bc7b41 100644
--- a/facebook/src/main/res/values-ko/strings.xml
+++ b/facebook/src/main/res/values-ko/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Facebook 계정으로 로그인함</string>
     <string name="com_facebook_loginview_log_out_action">로그아웃</string>
     <string name="com_facebook_loginview_cancel_action">취소</string>
-    <string name="com_facebook_loading">읽어들이는 중...</string>
+    <string name="com_facebook_loading">읽어들이는 중&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest 오류</string>
     <string name="com_facebook_internet_permission_error_message">WebView에 로그인하려면 인터넷 권한이 필요합니다</string>
     <string name="com_facebook_tooltip_default">새로운 기능! 이제 앱과 어떤 정보를 공유할지 자유롭게 선택할 수 있습니다.</string>
diff --git a/facebook/src/main/res/values-ml/strings.xml b/facebook/src/main/res/values-ml/strings.xml
index ff740a8ed..bcf8ea01c 100644
--- a/facebook/src/main/res/values-ml/strings.xml
+++ b/facebook/src/main/res/values-ml/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ഉപയോഗിച്ച് ലോഗിൻ ചെയ്‌തു</string>
     <string name="com_facebook_loginview_log_out_action">ലോഗ്ഔട്ട് ചെയ്യുക</string>
     <string name="com_facebook_loginview_cancel_action">റദ്ദാക്കുക</string>
-    <string name="com_facebook_loading">ലോഡുചെയ്യുന്നു...</string>
+    <string name="com_facebook_loading">ലോഡുചെയ്യുന്നു&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest പിശക്</string>
     <string name="com_facebook_internet_permission_error_message">WebView ലോഗിന് ഇന്റർനെറ്റ് അനുമതി ആവശ്യമാണ്</string>
     <string name="com_facebook_tooltip_default">പുതിയത്! നിങ്ങൾ നിയന്ത്രണത്തിലാണ് - നിങ്ങൾക്ക് ആപ്ലിക്കേഷനുകളുമായി പങ്കിടേണ്ടതുണ്ടെങ്കിൽ തിരഞ്ഞെടുക്കുക.</string>
diff --git a/facebook/src/main/res/values-mr/strings.xml b/facebook/src/main/res/values-mr/strings.xml
index ab6105bb9..170fd6725 100644
--- a/facebook/src/main/res/values-mr/strings.xml
+++ b/facebook/src/main/res/values-mr/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">फेसबुक वापरून लॉग इन केले</string>
     <string name="com_facebook_loginview_log_out_action">लॉग आउट करा</string>
     <string name="com_facebook_loginview_cancel_action">रद्द करा</string>
-    <string name="com_facebook_loading">लोड होत आहे...</string>
+    <string name="com_facebook_loading">लोड होत आहे&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest त्रुटी</string>
     <string name="com_facebook_internet_permission_error_message">वेबदृश्य लॉग इन आवश्यकता इंटरनेट परवानगी</string>
     <string name="com_facebook_tooltip_default">नवीन! आपण नियंत्रणात आहात - आपण कोणती माहिती अनुप्रयोगांसह शेअर करू इच्छिता ते निवडा.</string>
diff --git a/facebook/src/main/res/values-ms/strings.xml b/facebook/src/main/res/values-ms/strings.xml
index 2c5b536f2..f8f1a171e 100644
--- a/facebook/src/main/res/values-ms/strings.xml
+++ b/facebook/src/main/res/values-ms/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Dilog masuk menggunakan Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Log keluar</string>
     <string name="com_facebook_loginview_cancel_action">Batal</string>
-    <string name="com_facebook_loading">Memuatkan...</string>
+    <string name="com_facebook_loading">Memuatkan&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Ralat AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">Log masuk WebView memerlukan kebenaran INTERNET</string>
     <string name="com_facebook_tooltip_default">Baru! Anda yang mengawal - pilih maklumat yang anda ingin kongsi dengan aplikasi.</string>
diff --git a/facebook/src/main/res/values-nb/strings.xml b/facebook/src/main/res/values-nb/strings.xml
index 1b909f5eb..9864d3953 100644
--- a/facebook/src/main/res/values-nb/strings.xml
+++ b/facebook/src/main/res/values-nb/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Logget inn med Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Logg ut</string>
     <string name="com_facebook_loginview_cancel_action">Avbryt</string>
-    <string name="com_facebook_loading">Laster inn …</string>
+    <string name="com_facebook_loading">Laster inn &#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest-feil</string>
     <string name="com_facebook_internet_permission_error_message">Webvisning-innlogging krever INTERNETT-tillatelse</string>
     <string name="com_facebook_tooltip_default">Nyhet! Du bestemmer – velg hvilke opplysninger du vil dele med appene.</string>
diff --git a/facebook/src/main/res/values-nl/strings.xml b/facebook/src/main/res/values-nl/strings.xml
index cb9e6235d..98d4506e3 100644
--- a/facebook/src/main/res/values-nl/strings.xml
+++ b/facebook/src/main/res/values-nl/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Aangemeld via Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Afmelden</string>
     <string name="com_facebook_loginview_cancel_action">Annuleren</string>
-    <string name="com_facebook_loading">Laden…</string>
+    <string name="com_facebook_loading">Laden&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest Error</string>
     <string name="com_facebook_internet_permission_error_message">Voor aanmelding via webweergave is de toestemming INTERNET vereist</string>
     <string name="com_facebook_tooltip_default">Nieuw! Jij hebt de controle. Kies welke informatie je met apps wilt delen.</string>
diff --git a/facebook/src/main/res/values-pa/strings.xml b/facebook/src/main/res/values-pa/strings.xml
index 391c572f4..fd870a0af 100644
--- a/facebook/src/main/res/values-pa/strings.xml
+++ b/facebook/src/main/res/values-pa/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ਦਾ ਉਪਯੋਗ ਕਰਕੇ ਲੌਗ ਇਨ ਕੀਤਾ ਗਿਆ</string>
     <string name="com_facebook_loginview_log_out_action">ਲੌਗ ਆਉਟ ਕਰੋ</string>
     <string name="com_facebook_loginview_cancel_action">ਰੱਦ ਕਰੋ</string>
-    <string name="com_facebook_loading">ਲੋਡ ਕਰ ਰਿਹਾ ਹੈ...</string>
+    <string name="com_facebook_loading">ਲੋਡ ਕਰ ਰਿਹਾ ਹੈ&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest ਤਰੁੱਟੀ</string>
     <string name="com_facebook_internet_permission_error_message">WebView ਲੌਗ ਨੂੰ ਇੰਟਰਨੈੱਟ ਅਨੁਮਤੀ ਦੀ ਲੋੜ ਹੁੰਦੀ ਹੈ</string>
     <string name="com_facebook_tooltip_default">ਨਵਾਂ! ਤੁ\ਸੀਂ ਨਿਯੰਤਰਣ ਵਿੱਚ ਹੋ - ਉਹ ਜਾਣਕਾਰੀ ਚੁਣੋ ਜੋ ਤੁਸੀਂ ਐਪਸ ਦੇ ਨਾਲ ਸਾਂਝੀ ਕਰਨੀ ਚਾਹੁੰਦੇ ਹੋ।</string>
diff --git a/facebook/src/main/res/values-pl/strings.xml b/facebook/src/main/res/values-pl/strings.xml
index e0a49498b..bf612fdd3 100644
--- a/facebook/src/main/res/values-pl/strings.xml
+++ b/facebook/src/main/res/values-pl/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Zalogowano przez Facebooka</string>
     <string name="com_facebook_loginview_log_out_action">Wyloguj się</string>
     <string name="com_facebook_loginview_cancel_action">Anuluj</string>
-    <string name="com_facebook_loading">Ładowanie...</string>
+    <string name="com_facebook_loading">Ładowanie&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest Error</string>
     <string name="com_facebook_internet_permission_error_message">Logowanie się do sieci wymaga zezwolenia na dostęp do INTERNETU</string>
     <string name="com_facebook_tooltip_default">Nowość! Masz pełną kontrolę – określ, jakie informacje chcesz udostępniać aplikacjom.</string>
diff --git a/facebook/src/main/res/values-pt-rPT/strings.xml b/facebook/src/main/res/values-pt-rPT/strings.xml
index 6df0f03e5..a6fe887b7 100644
--- a/facebook/src/main/res/values-pt-rPT/strings.xml
+++ b/facebook/src/main/res/values-pt-rPT/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Com sessão iniciada através do Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Terminar sessão</string>
     <string name="com_facebook_loginview_cancel_action">Cancelar</string>
-    <string name="com_facebook_loading">A carregar...</string>
+    <string name="com_facebook_loading">A carregar&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Erro AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">O início de sessão WebView necessita de permissão para aceder à INTERNET</string>
     <string name="com_facebook_tooltip_default">Novidade! Tens o controlo: escolhe a informação que pretendes partilhar com as aplicações.</string>
diff --git a/facebook/src/main/res/values-pt/strings.xml b/facebook/src/main/res/values-pt/strings.xml
index 9f09bbd33..cf04b45dd 100644
--- a/facebook/src/main/res/values-pt/strings.xml
+++ b/facebook/src/main/res/values-pt/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Você entrou usando o Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Sair</string>
     <string name="com_facebook_loginview_cancel_action">Cancelar</string>
-    <string name="com_facebook_loading">Carregando...</string>
+    <string name="com_facebook_loading">Carregando&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Erro no AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">A permissão de INTERNET é necessária para fazer o login WebView</string>
     <string name="com_facebook_tooltip_default">Novidade! Você está no controle - escolha quais informações quer compartilhar com os aplicativos.</string>
diff --git a/facebook/src/main/res/values-ru/strings.xml b/facebook/src/main/res/values-ru/strings.xml
index 8f47ce62b..ffefaf4a1 100644
--- a/facebook/src/main/res/values-ru/strings.xml
+++ b/facebook/src/main/res/values-ru/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Выполнен вход с помощью Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Выход</string>
     <string name="com_facebook_loginview_cancel_action">Отменить</string>
-    <string name="com_facebook_loading">Загрузка...</string>
+    <string name="com_facebook_loading">Загрузка&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Ошибка AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">Для входа в WebView необходимо разрешение INTERNET</string>
     <string name="com_facebook_tooltip_default">Новинка! У вас все под контролем — выбирайте, какой информацией вы хотите поделиться с приложениями.</string>
diff --git a/facebook/src/main/res/values-sk/strings.xml b/facebook/src/main/res/values-sk/strings.xml
index c67312513..bc677fe07 100644
--- a/facebook/src/main/res/values-sk/strings.xml
+++ b/facebook/src/main/res/values-sk/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Prihlásený cez Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Odhlásiť sa</string>
     <string name="com_facebook_loginview_cancel_action">Zrušiť</string>
-    <string name="com_facebook_loading">Načítava sa...</string>
+    <string name="com_facebook_loading">Načítava sa&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Chyba súboru AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">Na prihlásenie sa v rozhraní WebView sa vyžaduje povolenie pre INTERNET</string>
     <string name="com_facebook_tooltip_default">Novinka! Máte to pod kontrolou: vyberte, ktoré informácie chcete zdieľať s aplikáciami.</string>
diff --git a/facebook/src/main/res/values-sv/strings.xml b/facebook/src/main/res/values-sv/strings.xml
index af2f460e6..940ef07d3 100644
--- a/facebook/src/main/res/values-sv/strings.xml
+++ b/facebook/src/main/res/values-sv/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Inloggad med Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Logga ut</string>
     <string name="com_facebook_loginview_cancel_action">Avbryt</string>
-    <string name="com_facebook_loading">Laddar ...</string>
+    <string name="com_facebook_loading">Laddar &#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest-fel</string>
     <string name="com_facebook_internet_permission_error_message">Webbinloggning kräver internetbehörighet</string>
     <string name="com_facebook_tooltip_default">Nyhet! Du bestämmer – välj vilken info du vill dela med appar.</string>
diff --git a/facebook/src/main/res/values-ta/strings.xml b/facebook/src/main/res/values-ta/strings.xml
index 95d878bee..cf6edb596 100644
--- a/facebook/src/main/res/values-ta/strings.xml
+++ b/facebook/src/main/res/values-ta/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Facebook மூலம் உள்நுழையப்பட்டுள்ளது</string>
     <string name="com_facebook_loginview_log_out_action">வெளியேறு</string>
     <string name="com_facebook_loginview_cancel_action">ரத்துசெய்</string>
-    <string name="com_facebook_loading">ஏற்றுகிறது...</string>
+    <string name="com_facebook_loading">ஏற்றுகிறது&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest பிழை</string>
     <string name="com_facebook_internet_permission_error_message">WebView இல் உள்நுழைய இணைய அனுமதி தேவை</string>
     <string name="com_facebook_tooltip_default">புதிது! உங்கள் கட்டுப்பாட்டில் இருப்பதால், பயன்பாடுகளுடன் பகிர வேண்டிய தகவலைத் தேர்வுசெய்யவும்.</string>
diff --git a/facebook/src/main/res/values-te/strings.xml b/facebook/src/main/res/values-te/strings.xml
index 3421df3eb..cff69e113 100644
--- a/facebook/src/main/res/values-te/strings.xml
+++ b/facebook/src/main/res/values-te/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ఉపయోగించి లాగిన్ చేసారు</string>
     <string name="com_facebook_loginview_log_out_action">లాగ్ అవుట్ చేయి</string>
     <string name="com_facebook_loginview_cancel_action">రద్దు చేయి</string>
-    <string name="com_facebook_loading">లోడ్ చేస్తోంది...</string>
+    <string name="com_facebook_loading">లోడ్ చేస్తోంది&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest లోపం</string>
     <string name="com_facebook_internet_permission_error_message">వెబ్ వీక్షణ లాగిన్‌కు ఇంటర్నెట్ అనుమతి అవసరం</string>
     <string name="com_facebook_tooltip_default">సరికొత్తది! మీకు నియంత్రణ ఉంది - మీరు అప్లికేషన్‌లతో ఏ సమాచారాన్ని భాగస్వామ్యం చేయాలనుకుంటున్నారో ఎంచుకోండి.</string>
diff --git a/facebook/src/main/res/values-th/strings.xml b/facebook/src/main/res/values-th/strings.xml
index f044656db..afea4ff91 100644
--- a/facebook/src/main/res/values-th/strings.xml
+++ b/facebook/src/main/res/values-th/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">เข้าสู่ระบบโดยใช้ Facebook</string>
     <string name="com_facebook_loginview_log_out_action">ออกจากระบบ</string>
     <string name="com_facebook_loginview_cancel_action">ยกเลิก</string>
-    <string name="com_facebook_loading">กำลังโหลด...</string>
+    <string name="com_facebook_loading">กำลังโหลด&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">ข้อผิดพลาดของ AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">การเข้าสู่ระบบ WebView จำเป็นต้องได้รับอนุญาตจากอินเทอร์เน็ต</string>
     <string name="com_facebook_tooltip_default">ใหม่! คุณเป็นฝ่ายควบคุม โปรดเลือกข้อมูลที่คุณต้องการแชร์ด้วยแอพ</string>
diff --git a/facebook/src/main/res/values-tl/strings.xml b/facebook/src/main/res/values-tl/strings.xml
index 3d8fe9009..08bbe51c4 100644
--- a/facebook/src/main/res/values-tl/strings.xml
+++ b/facebook/src/main/res/values-tl/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Naka-log in gamit ang Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Mag-log out</string>
     <string name="com_facebook_loginview_cancel_action">Kanselahin</string>
-    <string name="com_facebook_loading">Naglo-load...</string>
+    <string name="com_facebook_loading">Naglo-load&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Error na AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">Ang pag-log in sa Web ay nangangailangan ng pahintulot sa INTERNET</string>
     <string name="com_facebook_tooltip_default">Bago! Ikaw ang may kontrol - piliin kung anong impormasyon ang gusto mong ibahagi sa mga app.</string>
diff --git a/facebook/src/main/res/values-tr/strings.xml b/facebook/src/main/res/values-tr/strings.xml
index 2e9595ffd..8736f407a 100644
--- a/facebook/src/main/res/values-tr/strings.xml
+++ b/facebook/src/main/res/values-tr/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ile giriş yapıldı</string>
     <string name="com_facebook_loginview_log_out_action">Çıkış yap</string>
     <string name="com_facebook_loginview_cancel_action">İptal</string>
-    <string name="com_facebook_loading">Yükleniyor...</string>
+    <string name="com_facebook_loading">Yükleniyor&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest Hatası</string>
     <string name="com_facebook_internet_permission_error_message">WebView girişi için İNTERNET izni gerekir</string>
     <string name="com_facebook_tooltip_default">Yeni! Kontrol sende. Uygulamalarla paylaşmak istediğin bilgileri seç.</string>
diff --git a/facebook/src/main/res/values-vi/strings.xml b/facebook/src/main/res/values-vi/strings.xml
index 480478e3e..04df68fdf 100644
--- a/facebook/src/main/res/values-vi/strings.xml
+++ b/facebook/src/main/res/values-vi/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Đã đăng nhập bằng Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Đăng xuất</string>
     <string name="com_facebook_loginview_cancel_action">Hủy</string>
-    <string name="com_facebook_loading">Đang tải...</string>
+    <string name="com_facebook_loading">Đang tải&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Lỗi AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">Đăng nhập WebView yêu cầu INTERNET cho phép</string>
     <string name="com_facebook_tooltip_default">Mới! Bạn đang có quyền kiểm soát - hãy chọn thông tin bạn muốn chia sẻ với các ứng dụng.</string>
diff --git a/facebook/src/main/res/values-zh-rCN/strings.xml b/facebook/src/main/res/values-zh-rCN/strings.xml
index 868a0fa2d..92374e254 100644
--- a/facebook/src/main/res/values-zh-rCN/strings.xml
+++ b/facebook/src/main/res/values-zh-rCN/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">已使用 Facebook 登录</string>
     <string name="com_facebook_loginview_log_out_action">退出</string>
     <string name="com_facebook_loginview_cancel_action">取消</string>
-    <string name="com_facebook_loading">正在加载...</string>
+    <string name="com_facebook_loading">正在加载&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest 错误</string>
     <string name="com_facebook_internet_permission_error_message">Web 登录需要互联网许可</string>
     <string name="com_facebook_tooltip_default">新增功能！一切任您掌控 — 选择您想通过应用分享的信息。</string>
diff --git a/facebook/src/main/res/values-zh-rTW/strings.xml b/facebook/src/main/res/values-zh-rTW/strings.xml
index 914ca3023..de6ab257c 100644
--- a/facebook/src/main/res/values-zh-rTW/strings.xml
+++ b/facebook/src/main/res/values-zh-rTW/strings.xml
@@ -29,7 +29,7 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">已使用 Facebook 登入</string>
     <string name="com_facebook_loginview_log_out_action">登出</string>
     <string name="com_facebook_loginview_cancel_action">取消</string>
-    <string name="com_facebook_loading">正在載入…</string>
+    <string name="com_facebook_loading">正在載入&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest 錯誤</string>
     <string name="com_facebook_internet_permission_error_message">WebView 登入需要「網際網路」授權</string>
     <string name="com_facebook_tooltip_default">新消息！您已成功登入，請選擇要與應用程式分享的資訊。</string>
diff --git a/facebook/src/main/res/values/strings.xml b/facebook/src/main/res/values/strings.xml
index 070cb88b6..72c2a213a 100644
--- a/facebook/src/main/res/values/strings.xml
+++ b/facebook/src/main/res/values/strings.xml
@@ -29,12 +29,20 @@
     <string name="com_facebook_loginview_logged_in_using_facebook">Logged in using Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Log out</string>
     <string name="com_facebook_loginview_cancel_action">Cancel</string>
-    <string name="com_facebook_loading">Loading...</string>
+    <string name="com_facebook_loading">Loading&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest Error</string>
     <string name="com_facebook_internet_permission_error_message">WebView login requires INTERNET permission</string>
     <string name="com_facebook_tooltip_default">New! You\'re in control - choose what info you want to share with apps.</string>
     <string name="com_facebook_image_download_unknown_error">Unexpected error while downloading an image.</string>
     <string name="com_facebook_share_button_text">Share</string>
     <string name="com_facebook_send_button_text">Send</string>
-    <string name="com_facebook_device_auth_instructions">Visit &lt;b&gt;facebook.com/device&lt;/b&gt; on your smartphone or computer and enter this code</string>
+    <string name="com_facebook_device_auth_instructions">Visit &lt;b&gt;facebook.com/device&lt;/b&gt; and enter your code.</string>
+    <string name="com_facebook_smart_device_instructions_0">Confirm your code on Facebook.</string>
+    <string name="com_facebook_smart_device_instructions_1">1.\tGo to the Menu</string>
+    <string name="com_facebook_smart_device_instructions_2">2.\tSelect Device Requests</string>
+    <string name="com_facebook_smart_device_instructions_3">3.\tConfirm code.</string>
+    <string name="com_facebook_smart_device_instructions_or">- OR -</string>
+    <string name="com_facebook_smart_login_confirmation_title">Confirm Login</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as">Continue as %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel">Not you?</string>
 </resources>
diff --git a/facebook/src/main/res/values/styles.xml b/facebook/src/main/res/values/styles.xml
index 01a9e708c..16c04198a 100644
--- a/facebook/src/main/res/values/styles.xml
+++ b/facebook/src/main/res/values/styles.xml
@@ -19,7 +19,9 @@
     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 -->
 
-<resources xmlns:android="http://schemas.android.com/apk/res/android">
+<resources xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools">
+    <color name="com_smart_login_code">#3C6499</color>
     <color name="com_facebook_blue">#3B5998</color>
     <color name="com_facebook_messenger_blue">#0084ff</color>
 
@@ -51,7 +53,7 @@
 
     <dimen name="com_facebook_tooltip_horizontal_padding">10dp</dimen>
 
-    <color name="com_facebook_device_auth_text">#797E87</color>
+    <color name="com_facebook_device_auth_text">#90949C</color>
 
     <style name="tooltip_bubble_text">
         <item name="android:textColor">@android:color/white</item>
@@ -120,6 +122,17 @@
         <item name="android:windowIsFloating">true</item>
     </style>
 
+    <style name="com_facebook_auth_dialog_instructions_textview" tools:targetApi="17">
+        <item name="android:layout_width">wrap_content</item>
+        <item name="android:layout_height">wrap_content</item>
+        <item name="android:fontFamily">roboto</item>
+        <item name="android:gravity">center</item>
+        <item name="android:singleLine">false</item>
+        <item name="android:textColor">@color/com_facebook_device_auth_text</item>
+        <item name="android:textSize">16sp</item>
+        <item name="android:typeface">sans</item>
+    </style>
+
     <style name="com_facebook_activity_theme" parent="@style/Theme.AppCompat.NoActionBar">
         <item name="android:windowIsTranslucent">true</item>
         <item name="android:windowBackground">@android:color/transparent</item>
diff --git a/facebook/src/test/java/com/facebook/AccessTokenCacheTest.java b/facebook/src/test/java/com/facebook/AccessTokenCacheTest.java
index caf1f87c0..16f2b8200 100644
--- a/facebook/src/test/java/com/facebook/AccessTokenCacheTest.java
+++ b/facebook/src/test/java/com/facebook/AccessTokenCacheTest.java
@@ -33,7 +33,6 @@
 import org.mockito.Mock;
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
-import org.robolectric.Robolectric;
 import org.robolectric.RuntimeEnvironment;
 
 import java.util.Arrays;
diff --git a/facebook/src/test/java/com/facebook/AccessTokenManagerTest.java b/facebook/src/test/java/com/facebook/AccessTokenManagerTest.java
index 3ae3d47a6..af1debf1e 100644
--- a/facebook/src/test/java/com/facebook/AccessTokenManagerTest.java
+++ b/facebook/src/test/java/com/facebook/AccessTokenManagerTest.java
@@ -31,18 +31,24 @@
 import org.json.JSONException;
 import org.junit.Before;
 import org.junit.Test;
-import org.mockito.Mock;
-import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
-import org.robolectric.Robolectric;
 import org.robolectric.RuntimeEnvironment;
 
 import java.util.Arrays;
 import java.util.Date;
 import java.util.List;
 
-import static org.mockito.Mockito.*;
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertNull;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
+import static org.mockito.Mockito.any;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.never;
+import static org.mockito.Mockito.times;
+import static org.mockito.Mockito.verify;
 import static org.powermock.api.mockito.PowerMockito.mockStatic;
 import static org.powermock.api.mockito.PowerMockito.when;
 import static org.powermock.api.support.membermodification.MemberMatcher.method;
@@ -139,9 +145,9 @@ public void onReceive(Context context, Intent intent) {
         assertNotNull(intent);
 
         AccessToken oldAccessToken =
-                (AccessToken) intent.getParcelableExtra(AccessTokenManager.EXTRA_OLD_ACCESS_TOKEN);
+                intent.getParcelableExtra(AccessTokenManager.EXTRA_OLD_ACCESS_TOKEN);
         AccessToken newAccessToken =
-                (AccessToken) intent.getParcelableExtra(AccessTokenManager.EXTRA_NEW_ACCESS_TOKEN);
+                intent.getParcelableExtra(AccessTokenManager.EXTRA_NEW_ACCESS_TOKEN);
 
         assertEquals(accessToken.getToken(), oldAccessToken.getToken());
         assertEquals(anotherAccessToken.getToken(), newAccessToken.getToken());
diff --git a/facebook/src/test/java/com/facebook/AccessTokenTest.java b/facebook/src/test/java/com/facebook/AccessTokenTest.java
index 8ec902bbe..cf218918d 100644
--- a/facebook/src/test/java/com/facebook/AccessTokenTest.java
+++ b/facebook/src/test/java/com/facebook/AccessTokenTest.java
@@ -30,18 +30,20 @@
 import org.junit.Test;
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
-import org.robolectric.Robolectric;
 import org.robolectric.RuntimeEnvironment;
 
 import java.io.IOException;
 import java.util.Arrays;
 import java.util.Collection;
+import java.util.Collections;
 import java.util.Date;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
 import static org.powermock.api.support.membermodification.MemberModifier.stub;
 
 @PrepareForTest( {Utility.class})
@@ -231,7 +233,7 @@ public void testCachePutGet() {
         String userId = "1000";
 
         List<String> normalList = Arrays.asList("", "Another completely random token value");
-        List<String> emptyList = Arrays.asList();
+        List<String> emptyList = Collections.emptyList();
         HashSet<String> normalArrayList = new HashSet<String>(normalList);
         HashSet<String> emptyArrayList = new HashSet<String>();
         @SuppressWarnings("unchecked")
@@ -273,7 +275,7 @@ public void testParceling() throws IOException {
         Set<String> permissions = new HashSet<String>(
                 Arrays.asList("permission_1", "permission_2"));
         Set<String> declinedPermissions = new HashSet<String>(
-                Arrays.asList("permission_3"));
+                Collections.singletonList("permission_3"));
         AccessTokenSource source = AccessTokenSource.WEB_VIEW;
         AccessToken accessToken1 = new AccessToken(
                 token,
diff --git a/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java b/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
index 3893e5c16..8ed66f9c2 100644
--- a/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
+++ b/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
@@ -27,6 +27,7 @@
 import android.os.ConditionVariable;
 
 import com.facebook.internal.CallbackManagerImpl;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.ServerProtocol;
 import com.facebook.internal.Utility;
 
@@ -48,14 +49,14 @@
 import static org.powermock.api.support.membermodification.MemberMatcher.method;
 import static org.powermock.api.support.membermodification.MemberModifier.stub;
 
-@PrepareForTest({ FacebookSdk.class, Utility.class })
+@PrepareForTest({ FacebookSdk.class, Utility.class, FetchedAppSettingsManager.class})
 public final class FacebookSdkPowerMockTest extends FacebookPowerMockTestCase {
 
     @Before
     public void before() {
         Whitebox.setInternalState(FacebookSdk.class, "callbackRequestCodeOffset", 0xface);
         Whitebox.setInternalState(FacebookSdk.class, "sdkInitialized", false);
-        stub(method(Utility.class, "loadAppSettingsAsync")).toReturn(null);
+        stub(method(FetchedAppSettingsManager.class, "loadAppSettingsAsync")).toReturn(null);
 
     }
 
diff --git a/facebook/src/test/java/com/facebook/appevents/AnalyticsUserIDTest.java b/facebook/src/test/java/com/facebook/appevents/AnalyticsUserIDTest.java
new file mode 100644
index 000000000..f7485fd75
--- /dev/null
+++ b/facebook/src/test/java/com/facebook/appevents/AnalyticsUserIDTest.java
@@ -0,0 +1,61 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.appevents;
+
+import com.facebook.FacebookPowerMockTestCase;
+import com.facebook.FacebookSdk;
+
+import org.json.JSONObject;
+import org.junit.Assert;
+import org.junit.Before;
+import org.junit.Test;
+import org.robolectric.RuntimeEnvironment;
+
+public class AnalyticsUserIDTest extends FacebookPowerMockTestCase {
+    @Before
+    public void init() {
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
+        AnalyticsUserIDStore.initStore();
+    }
+
+    @Test
+    public void testUserIDPersistence() throws Exception {
+        String userID = "123456789";
+
+        AppEventsLogger.setUserID(userID);
+        // The userID is saved async so we must wait before checking for the value
+        Thread.sleep(10);
+        Assert.assertEquals(userID, AppEventsLogger.getUserID());
+        AppEventsLogger.clearUserID();
+        Thread.sleep(10);
+        Assert.assertNull(AppEventsLogger.getUserID());
+    }
+
+    @Test
+    public void testUserIDAddedToAppEvent() throws Exception {
+        String userID = "123456789";
+        AppEventsLogger.setUserID(userID);
+        AppEvent appEvent = AppEventTestUtilities.getTestAppEvent();
+        JSONObject jsonObject = appEvent.getJSONObject();
+        Assert.assertEquals(jsonObject.getString("_app_user_id"), userID);
+    }
+
+}
diff --git a/facebook/src/test/java/com/facebook/appevents/AutomaticAnalyticsTest.java b/facebook/src/test/java/com/facebook/appevents/AutomaticAnalyticsTest.java
index 8613d120a..f156f708d 100644
--- a/facebook/src/test/java/com/facebook/appevents/AutomaticAnalyticsTest.java
+++ b/facebook/src/test/java/com/facebook/appevents/AutomaticAnalyticsTest.java
@@ -20,8 +20,9 @@
 
 package com.facebook.appevents;
 
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.Utility;
-import com.facebook.internal.Utility.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettings;
 import com.facebook.FacebookTestCase;
 
 import org.json.JSONObject;
@@ -36,27 +37,27 @@ public void testAutomaticLoggingEnabledServerConfiguration() throws Exception {
         JSONObject settingsJSON = new JSONObject();
         settingsJSON.put("app_events_feature_bitmask", "0");
         FetchedAppSettings settings = Whitebox.invokeMethod(
-                Utility.class, "parseAppSettingsFromJSON", "123", settingsJSON);
+                FetchedAppSettingsManager.class, "parseAppSettingsFromJSON", "123", settingsJSON);
         assertEquals(settings.getAutomaticLoggingEnabled(),false);
 
         settingsJSON.put("app_events_feature_bitmask", "7");
         settings = Whitebox.invokeMethod(
-                Utility.class, "parseAppSettingsFromJSON", "123", settingsJSON);
+                FetchedAppSettingsManager.class, "parseAppSettingsFromJSON", "123", settingsJSON);
         assertEquals(settings.getAutomaticLoggingEnabled(),false);
 
         settingsJSON.put("app_events_feature_bitmask", "23");
         settings = Whitebox.invokeMethod(
-                Utility.class, "parseAppSettingsFromJSON", "123", settingsJSON);
+                FetchedAppSettingsManager.class, "parseAppSettingsFromJSON", "123", settingsJSON);
         assertEquals(settings.getAutomaticLoggingEnabled(),false);
 
         settingsJSON.put("app_events_feature_bitmask", "8");
         settings = Whitebox.invokeMethod(
-                Utility.class, "parseAppSettingsFromJSON", "123", settingsJSON);
+                FetchedAppSettingsManager.class, "parseAppSettingsFromJSON", "123", settingsJSON);
         assertEquals(settings.getAutomaticLoggingEnabled(),true);
 
         JSONObject noBitmaskFieldSettings = new JSONObject();
         settings = Whitebox.invokeMethod(
-                Utility.class, "parseAppSettingsFromJSON", "123", noBitmaskFieldSettings);
+                FetchedAppSettingsManager.class, "parseAppSettingsFromJSON", "123", noBitmaskFieldSettings);
         assertEquals(settings.getAutomaticLoggingEnabled(),false);
     }
 
diff --git a/facebook/src/test/java/com/facebook/internal/ShareInternalUtilityTest.java b/facebook/src/test/java/com/facebook/internal/ShareInternalUtilityTest.java
index 78249805b..efa4d443c 100644
--- a/facebook/src/test/java/com/facebook/internal/ShareInternalUtilityTest.java
+++ b/facebook/src/test/java/com/facebook/internal/ShareInternalUtilityTest.java
@@ -35,7 +35,6 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Locale;
-import java.util.UUID;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotNull;
@@ -93,7 +92,7 @@ public void testJsonSerializationOfOpenGraph() {
             List<String> peopleIds = Utility.jsonArrayToStringList(object.getJSONArray("tags"));
             assertEquals(4, peopleIds.size());
             for (int i = 1; i < 5; ++i) {
-                assertTrue(peopleIds.contains(new Integer(i).toString()));
+                assertTrue(peopleIds.contains(Integer.valueOf(i).toString()));
             }
 
             assertEquals(placeId, object.getString("place"));
diff --git a/facebook/src/test/java/com/facebook/login/CustomTabLoginMethodHandlerTest.java b/facebook/src/test/java/com/facebook/login/CustomTabLoginMethodHandlerTest.java
index 4e50fc641..f1be054a3 100644
--- a/facebook/src/test/java/com/facebook/login/CustomTabLoginMethodHandlerTest.java
+++ b/facebook/src/test/java/com/facebook/login/CustomTabLoginMethodHandlerTest.java
@@ -35,6 +35,8 @@
 import com.facebook.FacebookOperationCanceledException;
 import com.facebook.FacebookSdk;
 import com.facebook.TestUtils;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
 
@@ -66,7 +68,10 @@
         Validate.class,
         Utility.class,
         FacebookSdk.class,
-        AccessToken.class })
+        AccessToken.class,
+        FetchedAppSettings.class,
+        FetchedAppSettingsManager.class
+})
 public class CustomTabLoginMethodHandlerTest extends LoginHandlerTestCase {
     private final static String SIGNED_REQUEST_STR = "ggarbage.eyJhbGdvcml0aG0iOiJITUFDSEEyNTYiLCJ"
             + "jb2RlIjoid2h5bm90IiwiaXNzdWVkX2F0IjoxNDIyNTAyMDkyLCJ1c2VyX2lkIjoiMTIzIn0";
@@ -223,10 +228,10 @@ private void mockCustomTabRedirectActivity(final boolean hasActivity) {
     }
 
     private void mockCustomTabsAllowed(final boolean allowed) {
-        final Utility.FetchedAppSettings settings = mock(Utility.FetchedAppSettings.class);
+        final FetchedAppSettings settings = mock(FetchedAppSettings.class);
         when(settings.getCustomTabsEnabled()).thenReturn(allowed);
-        mockStatic(Utility.class);
-        when(Utility.getAppSettingsWithoutQuery(anyString())).thenReturn(settings);
+        mockStatic(FetchedAppSettingsManager.class);
+        when(FetchedAppSettingsManager.getAppSettingsWithoutQuery(anyString())).thenReturn(settings);
     }
 
 }
diff --git a/facebook/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java b/facebook/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java
index c57831876..5f8249d15 100644
--- a/facebook/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java
+++ b/facebook/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java
@@ -32,7 +32,6 @@
 import org.junit.Test;
 import org.mockito.ArgumentCaptor;
 import org.powermock.core.classloader.annotations.PrepareForTest;
-import org.robolectric.Robolectric;
 import org.robolectric.RuntimeEnvironment;
 
 import java.util.Date;
diff --git a/samples/LoginSample/build.gradle b/samples/LoginSample/build.gradle
index eb806cb5e..032dc78c8 100644
--- a/samples/LoginSample/build.gradle
+++ b/samples/LoginSample/build.gradle
@@ -13,8 +13,12 @@ android {
     }
 
     buildTypes {
+        debug {
+            minifyEnabled true
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
         release {
-            minifyEnabled false
+            minifyEnabled true
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitSampleAdvancedUIManager.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitSampleAdvancedUIManager.java
index 669acdd8f..37a128079 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitSampleAdvancedUIManager.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitSampleAdvancedUIManager.java
@@ -90,6 +90,7 @@ public ButtonType getButtonType(final LoginFlowState state) {
             case EMAIL_INPUT:
                 return entryButton;
             case CODE_INPUT:
+            case CONFIRM_ACCOUNT_VERIFIED:
                 return confirmButton;
             default:
                 return null;
@@ -158,6 +159,15 @@ private PlaceholderFragment getPlaceholderFragment(
             case EMAIL_INPUT:
                 prefix = "Custom Email ";
                 break;
+            case ACCOUNT_VERIFIED:
+                prefix = "Custom Account Verified ";
+                break;
+            case CONFIRM_ACCOUNT_VERIFIED:
+                prefix = "Custom Confirm Account Verified ";
+                break;
+            case CONFIRM_INSTANT_VERIFICATION_LOGIN:
+                prefix = "Custom Confirm Instant Verification Login ";
+                break;
             case EMAIL_VERIFY:
                 prefix = "Custom Email Verify ";
                 break;
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbActionBarFragment.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbActionBarFragment.java
index 13dfa8adb..7b11d49a9 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbActionBarFragment.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbActionBarFragment.java
@@ -92,15 +92,24 @@ private void updateTitleView(@Nullable final View view) {
                 case SENT_CODE:
                     titleView.setText(R.string.reverb_title_sent_code);
                     break;
+                case ACCOUNT_VERIFIED:
+                    titleView.setText(R.string.reverb_title_account_verified);
+                    break;
                 case CODE_INPUT:
                     titleView.setText(R.string.reverb_title_code_input);
                     break;
                 case EMAIL_VERIFY:
                     titleView.setText(R.string.reverb_title_email_verify);
                     break;
+                case CONFIRM_ACCOUNT_VERIFIED:
+                    titleView.setText(R.string.reverb_title_account_verified);
+                    break;
                 case VERIFYING_CODE:
                     titleView.setText(R.string.reverb_title_verifying_code);
                     break;
+                case CONFIRM_INSTANT_VERIFICATION_LOGIN:
+                    titleView.setText(R.string.reverb_title_logging_in);
+                    break;
                 case VERIFIED:
                     titleView.setText(R.string.reverb_title_verified);
                     break;
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java
index 47171a24b..038af7a37 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java
@@ -92,6 +92,7 @@ public Fragment getBodyFragment(final LoginFlowState state) {
                 iconResourceId = R.drawable.reverb_email_sent;
                 break;
             case VERIFYING_CODE:
+            case CONFIRM_INSTANT_VERIFICATION_LOGIN:
                 showProgressSpinner = true;
                 break;
             case VERIFIED:
@@ -103,6 +104,7 @@ public Fragment getBodyFragment(final LoginFlowState state) {
             case PHONE_NUMBER_INPUT:
             case EMAIL_INPUT:
             case CODE_INPUT:
+            case CONFIRM_ACCOUNT_VERIFIED:
             case RESEND:
             case NONE:
             default:
@@ -122,6 +124,7 @@ public ButtonType getButtonType(final LoginFlowState state) {
             case EMAIL_INPUT:
                 return entryButton;
             case CODE_INPUT:
+            case CONFIRM_ACCOUNT_VERIFIED:
                 return confirmButton;
             default:
                 return null;
@@ -143,9 +146,11 @@ public Fragment getFooterFragment(final LoginFlowState state) {
                 break;
             case CODE_INPUT:
             case EMAIL_VERIFY:
+            case CONFIRM_ACCOUNT_VERIFIED:
                 progress = 3;
                 break;
             case VERIFYING_CODE:
+            case CONFIRM_INSTANT_VERIFICATION_LOGIN:
                 progress = 4;
                 break;
             case VERIFIED:
diff --git a/samples/LoginSample/src/main/res/values/accountkit_strings.xml b/samples/LoginSample/src/main/res/values/accountkit_strings.xml
index 51c76ef59..8ab1f956e 100644
--- a/samples/LoginSample/src/main/res/values/accountkit_strings.xml
+++ b/samples/LoginSample/src/main/res/values/accountkit_strings.xml
@@ -61,8 +61,8 @@
     <string name="reverb_advanced_ui_required">
         Advanced UI theming is required for Reverb themes. Select a different theme to disable.
     </string>
-    <string name="reverb_switch_login_type_email">SIGN IN WITH PHONE</string>
-    <string name="reverb_switch_login_type_phone">SIGN IN WITH EMAIL</string>
+    <string name="reverb_switch_login_type_phone">SIGN IN WITH PHONE</string>
+    <string name="reverb_switch_login_type_email">SIGN IN WITH EMAIL</string>
     <string name="reverb_title_code_input">Enter your code</string>
     <string name="reverb_title_email_input">Enter your email address</string>
     <string name="reverb_title_email_verify">Open the email and confirm your address</string>
@@ -71,6 +71,8 @@
     <string name="reverb_title_resend">We\'re sorry. Try these options to continue.</string>
     <string name="reverb_title_sending_code">Sending your code…</string>
     <string name="reverb_title_sent_code">Sent!</string>
+    <string name="reverb_title_account_verified">Account verified!</string>
+    <string name="reverb_title_logging_in">Logging in…</string>
     <string name="reverb_title_verified">Done!</string>
     <string name="reverb_title_verifying_code">Verifying your code…</string>
     <string-array name="theme_options">
