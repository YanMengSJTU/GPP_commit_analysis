diff --git a/facebook-core/src/main/java/com/facebook/FacebookSdk.java b/facebook-core/src/main/java/com/facebook/FacebookSdk.java
index 10802189e..375e43704 100644
--- a/facebook-core/src/main/java/com/facebook/FacebookSdk.java
+++ b/facebook-core/src/main/java/com/facebook/FacebookSdk.java
@@ -28,6 +28,7 @@
 import android.content.pm.PackageManager;
 import android.content.pm.Signature;
 import android.os.AsyncTask;
+import android.support.annotation.RestrictTo;
 import android.util.Base64;
 import android.util.Log;
 
@@ -158,6 +159,7 @@ public Thread newThread(Runnable runnable) {
     public static final String CALLBACK_OFFSET_PROPERTY = "com.facebook.sdk.CallbackOffset";
 
     private static Boolean sdkInitialized = false;
+    private static Boolean sdkFullyInitialized = false;
 
     /**
      * This function initializes the Facebook SDK. This function is called automatically on app
@@ -296,6 +298,11 @@ public static synchronized void sdkInitialize(
         // exceptions.
         sdkInitialized = true;
 
+        // Set sdkFullyInitialzed if auto init enabled.
+        if (getAutoInitEnabled()) {
+            fullyInitialize();
+        }
+
         // Register ActivityLifecycleTracker callbacks now, so will log activate app event properly
         if ((FacebookSdk.applicationContext instanceof Application)
                 && UserSettingsManager.getAutoLogAppEventsEnabled()) {
@@ -359,6 +366,25 @@ public static synchronized boolean isInitialized() {
         return sdkInitialized;
     }
 
+    /**
+     * Indicates whether the Facebook SDK has been fully initialized.
+     *
+     * Facebook SDK won't work before fully initialized.
+     *
+     * @return true if fully initialized, false if not
+     */
+    @RestrictTo(RestrictTo.Scope.LIBRARY_GROUP)
+    public static synchronized boolean isFullyInitialized() {
+        return sdkFullyInitialized;
+    }
+
+    /**
+     * Mark Facebook SDK fully intialized to make it works as expected.
+     */
+    public static void fullyInitialize() {
+        sdkFullyInitialized = true;
+    }
+
     /**
      * Certain logging behaviors are available for debugging beyond those that should be
      * enabled in production.
diff --git a/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java b/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
index 2892f399e..c26be49f7 100644
--- a/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
+++ b/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
@@ -36,6 +36,7 @@
 import org.powermock.reflect.Whitebox;
 import org.robolectric.RuntimeEnvironment;
 
+import java.lang.reflect.Field;
 import java.util.concurrent.Executor;
 
 import static org.junit.Assert.assertEquals;
@@ -199,4 +200,24 @@ public void testRequestCodeRange() {
         assertFalse(FacebookSdk.isFacebookRequestCode(1100));
         assertFalse(FacebookSdk.isFacebookRequestCode(0));
     }
+
+    @Test
+    public void testFullyInitialize() {
+        FacebookSdk.setApplicationId("123456789");
+        stub(method(FacebookSdk.class, "getAutoInitEnabled")).toReturn(true);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
+        assertTrue(FacebookSdk.isFullyInitialized());
+    }
+
+    @Test
+    public void testNotFullyInitialize() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
+        Field field = FacebookSdk.class.getDeclaredField("sdkFullyInitialized");
+        field.setAccessible(true);
+        field.set(null, Boolean.valueOf(false));
+
+        stub(method(FacebookSdk.class, "getAutoInitEnabled")).toReturn(false);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
+        assertFalse(FacebookSdk.isFullyInitialized());
+    }
 }
