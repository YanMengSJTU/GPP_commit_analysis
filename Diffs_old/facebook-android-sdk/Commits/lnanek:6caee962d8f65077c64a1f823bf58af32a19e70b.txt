diff --git a/facebook/src/com/facebook/android/Facebook.java b/facebook/src/com/facebook/android/Facebook.java
index f4f02a549..e50fc112e 100644
--- a/facebook/src/com/facebook/android/Facebook.java
+++ b/facebook/src/com/facebook/android/Facebook.java
@@ -680,10 +680,21 @@ public void setAccessExpires(long time) {
      *            - duration in seconds
      */
     public void setAccessExpiresIn(String expiresIn) {
+    	/* Original code
         if (expiresIn != null && !expiresIn.equals("0")) {
             setAccessExpires(System.currentTimeMillis()
                     + Integer.parseInt(expiresIn) * 1000);
         }
+        */
+    	// Changed to accept 0 to mean not expiring.
+        if (expiresIn != null) {
+            if (expiresIn.equals("0")) {
+                setAccessExpires(0);
+            } else { 
+                setAccessExpires(System.currentTimeMillis()
+                        + Integer.parseInt(expiresIn) * 1000);
+            }
+        }
     }
 
     public String getAppId() {
diff --git a/facebook/src/com/facebook/android/FbDialog.java b/facebook/src/com/facebook/android/FbDialog.java
index f6f959e16..0b356e8e2 100644
--- a/facebook/src/com/facebook/android/FbDialog.java
+++ b/facebook/src/com/facebook/android/FbDialog.java
@@ -19,6 +19,7 @@
 import android.app.Dialog;
 import android.app.ProgressDialog;
 import android.content.Context;
+import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.res.Configuration;
 import android.graphics.Bitmap;
@@ -29,6 +30,7 @@
 import android.os.Bundle;
 import android.util.Log;
 import android.view.Display;
+import android.view.View;
 import android.view.ViewGroup;
 import android.view.Window;
 import android.webkit.WebView;
@@ -38,6 +40,8 @@
 import android.widget.TextView;
 
 import com.facebook.android.Facebook.DialogListener;
+import com.facebook.android.support.DialogUtil;
+import com.facebook.android.support.NoNPEWebView;
 
 public class FbDialog extends Dialog {
 
@@ -70,7 +74,16 @@ protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         mSpinner = new ProgressDialog(getContext());
         mSpinner.requestWindowFeature(Window.FEATURE_NO_TITLE);
-        mSpinner.setMessage("Loading...");
+        // If previously saved authorization was used, user wasn't certain this was Facebook that was loading. So added name. -Lance
+        mSpinner.setMessage("Loading Facebook...");
+        // Cancel listener added to spinner to cancel posting to Facebook. 
+        // Was just dismissing spinner previously. -Lance
+        mSpinner.setOnCancelListener(new OnCancelListener() {
+			@Override
+			public void onCancel(DialogInterface dialog) {
+				FbDialog.this.cancel();
+			}
+		});
 
         mContent = new LinearLayout(getContext());
         mContent.setOrientation(LinearLayout.VERTICAL);
@@ -87,6 +100,15 @@ protected void onCreate(Bundle savedInstanceState) {
         addContentView(mContent, new LinearLayout.LayoutParams(
                 display.getWidth() - ((int) (dimensions[0] * scale + 0.5f)),
                 display.getHeight() - ((int) (dimensions[1] * scale + 0.5f))));
+        
+        //XXX The Facebook SDK wasn't sending anything to the listener when a dialog was left by the back button.
+        // This fixes that, allowing the calling activity to react. -Lance
+		this.setOnCancelListener(new OnCancelListener() {
+			@Override
+			public void onCancel(DialogInterface dialog) {
+				mListener.onCancel();
+			}
+		});
     }
 
     private void setUpTitle() {
@@ -106,9 +128,14 @@ private void setUpTitle() {
     }
 
     private void setUpWebView() {
-        mWebView = new WebView(getContext());
-        mWebView.setVerticalScrollBarEnabled(false);
-        mWebView.setHorizontalScrollBarEnabled(false);
+        mWebView = new NoNPEWebView(getContext());
+        
+        //XXX Rotating to landscape on login screen put login button out of sight without ability to scroll to it. 
+        // So scrollbars were enabled here. -Lance
+        mWebView.setScrollBarStyle(View.SCROLLBARS_INSIDE_OVERLAY);
+        //mWebView.setVerticalScrollBarEnabled(false);
+        //mWebView.setHorizontalScrollBarEnabled(false);
+
         mWebView.setWebViewClient(new FbDialog.FbWebViewClient());
         mWebView.getSettings().setJavaScriptEnabled(true);
         mWebView.loadUrl(mUrl);
@@ -116,6 +143,18 @@ private void setUpWebView() {
         mContent.addView(mWebView);
     }
 
+	//WebView wasn't finishing loading after the dialog had been dismissed
+	//in some situations. So make sure it is stopped and doesn't callback. -Lance
+    @Override
+	protected void onStop() {
+		super.onStop();
+		if ( null != mWebView ) {
+			mWebView.setWebViewClient(new WebViewClient());
+			mWebView.stopLoading();
+		}
+		DialogUtil.safeDismiss(mSpinner);
+	}	    
+    
     private class FbWebViewClient extends WebViewClient {
 
         @Override
@@ -137,12 +176,11 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 } else {
                     mListener.onFacebookError(new FacebookError(error));
                 }
-
-                FbDialog.this.dismiss();
+                DialogUtil.safeDismiss(FbDialog.this);
                 return true;
             } else if (url.startsWith(Facebook.CANCEL_URI)) {
                 mListener.onCancel();
-                FbDialog.this.dismiss();
+                DialogUtil.safeDismiss(FbDialog.this);
                 return true;
             } else if (url.contains(DISPLAY_STRING)) {
                 return false;
@@ -159,14 +197,14 @@ public void onReceivedError(WebView view, int errorCode,
             super.onReceivedError(view, errorCode, description, failingUrl);
             mListener.onError(
                     new DialogError(description, errorCode, failingUrl));
-            FbDialog.this.dismiss();
+            DialogUtil.safeDismiss(FbDialog.this);
         }
 
         @Override
         public void onPageStarted(WebView view, String url, Bitmap favicon) {
             Log.d("Facebook-WebView", "Webview loading URL: " + url);
             super.onPageStarted(view, url, favicon);
-            mSpinner.show();
+            DialogUtil.safeShow(mSpinner);
         }
 
         @Override
@@ -176,7 +214,7 @@ public void onPageFinished(WebView view, String url) {
             if (title != null && title.length() > 0) {
                 mTitle.setText(title);
             }
-            mSpinner.dismiss();
+            DialogUtil.safeDismiss(mSpinner);
         }
 
     }
diff --git a/facebook/src/com/facebook/android/support/DialogUtil.java b/facebook/src/com/facebook/android/support/DialogUtil.java
new file mode 100755
index 000000000..efb9267b4
--- /dev/null
+++ b/facebook/src/com/facebook/android/support/DialogUtil.java
@@ -0,0 +1,65 @@
+package com.facebook.android.support;
+
+import android.app.Activity;
+import android.app.Dialog;
+import android.view.WindowManager.BadTokenException;
+
+/**
+ * Utility methods for working with dialogs.
+ * 
+ * @author Lance Nanek
+ *
+ */
+public class DialogUtil {
+	
+	public static void safeDismiss(final Dialog dialog) {
+		if ( null == dialog ) {
+			return;
+		}
+		
+		try {
+			dialog.dismiss();
+		} catch(IllegalArgumentException e) {
+			//Do nothing. Happens when dismiss is called for a dialog already 
+			//removed because an activity was left:
+			//IllegalArgumentException: View not attached to window manager
+		}
+	}
+	
+	public static void safeDismiss(final Activity activity, final int dialogId) {
+		if ( null == activity ) {
+			return;
+		}
+		
+		try {
+			activity.dismissDialog(dialogId);
+		} catch(IllegalArgumentException e) {
+			//Do nothing. Happens when this instance of the activity hasn't shown the dialog yet.
+		}
+	}
+	
+	public static void safeShow(final Dialog dialog) {
+		if ( null == dialog ) {
+			return;
+		}
+		
+		try {
+			dialog.show();
+		} catch(BadTokenException e) {
+			//Do nothing. Happens on spurious calls after an activity has ended, like if a thread finishes.
+		}
+	}
+	
+	public static void safeShow(final Activity activity, final int dialogId) {
+		if ( null == activity ) {
+			return;
+		}
+		
+		try {
+			activity.showDialog(dialogId);
+		} catch(BadTokenException e) {
+			//Do nothing. Happens on spurious calls after an activity has ended, like if a thread finishes.
+		}
+	}
+
+}
diff --git a/facebook/src/com/facebook/android/support/NoNPEWebView.java b/facebook/src/com/facebook/android/support/NoNPEWebView.java
new file mode 100755
index 000000000..ac778eb03
--- /dev/null
+++ b/facebook/src/com/facebook/android/support/NoNPEWebView.java
@@ -0,0 +1,32 @@
+package com.facebook.android.support;
+
+import android.content.Context;
+import android.util.AttributeSet;
+import android.util.Log;
+import android.webkit.WebView;
+
+public class NoNPEWebView extends WebView {
+	
+	private static final String LOG_TAG = "NoNPEWebView";
+	
+	public NoNPEWebView(Context context) {
+		super(context);
+	}
+
+	public NoNPEWebView(Context context, AttributeSet attrs) {
+		super(context, attrs);
+	}
+
+	public NoNPEWebView(Context context, AttributeSet attrs, int defStyle) {
+		super(context, attrs, defStyle);
+	}
+
+    @Override
+    public void onWindowFocusChanged(boolean hasWindowFocus) {
+        try {
+            super.onWindowFocusChanged(hasWindowFocus);
+        } catch(NullPointerException e) {
+        	Log.e(LOG_TAG, "Ignoring exception thrown by WebView#onWindowFocusChanged.", e);
+        }
+    }
+}
