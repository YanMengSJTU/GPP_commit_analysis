diff --git a/.buckconfig b/.buckconfig
index cfa58a9e4..ed8b51685 100644
--- a/.buckconfig
+++ b/.buckconfig
@@ -7,8 +7,8 @@
     src_roots = /facebook/src/, /samples/HelloFacebookSample/src/
 
     # We target gingerbread. Ensure that libraries target that.
-    source_level = 6
-    target_level = 6
+    source_level = 7
+    target_level = 7
 
 [build]
     build_dependencies = FIRST_ORDER_ONLY
@@ -16,3 +16,7 @@
 [alias]
     sdk = //facebook:android-sdk
     hello-facebook = //samples/HelloFacebookSample:app
+    iconicus = //samples/Iconicus:app
+    rps = //samples/RPSSample:app
+    scrumptious = //samples/Scrumptious:app
+    switch-user = //samples/SwitchUserSample:app
diff --git a/.buckversion b/.buckversion
index f2e2f6494..33b8b7e09 100644
--- a/.buckversion
+++ b/.buckversion
@@ -1 +1 @@
-62a21e0436bc4b72db9aa7fc2237d9cdf162b29f
+edff8b2b8818bb64982837158dd546a66b6ef6c2
diff --git a/.travis.yml b/.travis.yml
index 7ed80e8f8..4f136b59e 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -1,5 +1,13 @@
 language: android
 
+android:
+  components:
+    - build-tools-21.1.2
+    - build-tools-21.0.2
+    - android-18
+    - android-21
+    - extra
+
 # Override the install and test so that we don't run integration tests
 install: 
   - ./gradlew assemble
diff --git a/README.mdown b/README.mdown
index fb35fc7b7..2c0d09c85 100644
--- a/README.mdown
+++ b/README.mdown
@@ -19,6 +19,7 @@ FEATURES
 * Sharing - https://developers.facebook.com/docs/sharing
 * App Links - https://developers.facebook.com/docs/applinks
 * Graph API - https://developers.facebook.com/docs/android/graph
+* Analytics for Apps - https://developers.facebook.com/docs/analytics
 
 GIVE FEEDBACK
 -------------
@@ -26,6 +27,12 @@ Please report bugs or issues to https://developers.facebook.com/bugs/
 
 You can also join the Facebook Developers Group on Facebook (https://www.facebook.com/groups/fbdevelopers/) or ask questions on Stack Overflow (http://facebook.stackoverflow.com)
 
+CONTRIBUTING
+-------------
+We are able to accept contributions to the Facebook SDK for Android. To contribute please do the following.
+- Follow the instructions in the [CONTRIBUTING.mdown](https://github.com/facebook/facebook-android-sdk/blob/master/CONTRIBUTING.mdown).
+- Submit your pull request to the [dev](https://github.com/facebook/facebook-android-sdk/tree/dev) branch. This allows us to merge your change into our internal master and then push out the change in the next release.
+
 LICENSE
 -------
 Except as otherwise noted, the Facebook SDK for Android is licensed under the Facebook Platform License (https://github.com/facebook/facebook-android-sdk/blob/master/LICENSE.txt).
diff --git a/build.gradle b/build.gradle
index 1296bf37b..dba1720a9 100644
--- a/build.gradle
+++ b/build.gradle
@@ -4,7 +4,7 @@ buildscript {
         mavenCentral()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:1.0.0'
+        classpath 'com.android.tools.build:gradle:1.2.3'
     }
 }
 
diff --git a/facebook/BUCK b/facebook/BUCK
index d6a6dfcfe..b7d6df31e 100644
--- a/facebook/BUCK
+++ b/facebook/BUCK
@@ -1,7 +1,6 @@
-build_config(
-  name = 'config-debug',
+android_build_config(
+  name = 'build_config',
   package = 'com.facebook',
-  debug = True,
 )
 
 android_resource(
@@ -14,8 +13,9 @@ android_resource(
 
 android_library(
   name = 'android-sdk',
-  srcs = glob(['src/**/*.java']) + [':config-debug'],
+  srcs = glob(['src/**/*.java']),
   deps = [
+    ':build_config',
     ':res',
     '//libs:android-support-v4',
     '//libs:bolts',
@@ -24,3 +24,8 @@ android_library(
     'PUBLIC',
   ],
 )
+
+project_config(
+  src_target = ':android-sdk',
+  src_roots = ['src'],
+)
diff --git a/facebook/build.gradle b/facebook/build.gradle
index fdb6ac90a..fa11b59ba 100644
--- a/facebook/build.gradle
+++ b/facebook/build.gradle
@@ -1,13 +1,13 @@
 apply plugin: 'com.android.library'
 
 repositories {
-  mavenCentral()
+    mavenCentral()
 }
 
 project.group = 'com.facebook.android'
 
 dependencies {
-    compile 'com.android.support:support-v4:[21,22)'
+    compile 'com.android.support:support-v4:[22,23)'
     compile 'com.parse.bolts:bolts-android:1.2.0'
 }
 
@@ -31,6 +31,11 @@ android {
             res.srcDirs = ['res']
         }
     }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_7
+        targetCompatibility JavaVersion.VERSION_1_7
+    }
 }
 
 apply plugin: 'maven'
@@ -47,12 +52,12 @@ task setVersion {
     sdkVersionFile.eachLine{
         def matcher = (it =~ /(?:.*BUILD = \")(.*)(?:\".*)/)
         if (matcher.matches()) {
-          project.version = matcher[0][1]
-          return
+            project.version = matcher[0][1]
+            return
         }
     }
     if (project.version.is('unspecified')) {
-      throw new GradleScriptException('Version could not be found.', null)
+        throw new GradleScriptException('Version could not be found.', null)
     }
 }
 
@@ -109,6 +114,10 @@ signing {
 task androidJavadocs(type: Javadoc) {
     source = android.sourceSets.main.java.srcDirs
     classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
+    // JDK 1.8 is more strict then 1.7. Have JDK 1.8 behave like 1.7 for javadoc generation
+    if (org.gradle.internal.jvm.Jvm.current().getJavaVersion() == JavaVersion.VERSION_1_8) {
+        options.addStringOption('Xdoclint:none', '-quiet')
+    }
 }
 
 task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
diff --git a/facebook/junitTests/build.gradle b/facebook/junitTests/build.gradle
index 680019b55..b7aabf4b7 100644
--- a/facebook/junitTests/build.gradle
+++ b/facebook/junitTests/build.gradle
@@ -3,20 +3,23 @@ buildscript {
         mavenCentral()
     }
     dependencies {
-        classpath 'com.github.jcandksolutions.gradle:android-unit-test:2.1.1'
+        classpath 'org.robolectric:robolectric-gradle-plugin:1.0.1'
     }
 }
 
 apply plugin: 'com.android.application'
+apply plugin: 'org.robolectric'
 
 android {
-    compileSdkVersion 18
-    buildToolsVersion "21.1.2"
+    // roboelectric v21 is currently broken for some of our tests
+    compileSdkVersion 19
+    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
 
     defaultConfig {
         applicationId "com.facebook.junittests"
-        minSdkVersion 9
-        targetSdkVersion 18
+        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
+        // roboelectric v21 is currently broken for some of our tests
+        targetSdkVersion 19
         versionCode 1
         versionName "1.0"
     }
@@ -26,19 +29,22 @@ android {
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_7
+        targetCompatibility JavaVersion.VERSION_1_7
+    }
 }
 
-apply plugin: 'android-unit-test'
-
 dependencies {
     def powerMockVersion = '1.6.1'
 
     compile fileTree(dir: 'libs', include: ['*.jar'])
-    compile 'com.android.support:appcompat-v7:18.+'
+    compile 'com.android.support:appcompat-v7:19.+'
     compile project(':facebook')
 
     testCompile 'junit:junit:4.12'
-    testCompile 'org.robolectric:robolectric:2.4'
+    testCompile 'org.robolectric:robolectric:3.0-rc3'
+    testCompile 'org.robolectric:shadows-support-v4:3.0-rc3'
 
     // PowerMock brings in the mockito dependency
     testCompile "org.powermock:powermock-module-junit4:$powerMockVersion"
diff --git a/facebook/junitTests/src/main/AndroidManifest.xml b/facebook/junitTests/src/main/AndroidManifest.xml
index f1eecc854..0e71c34e3 100644
--- a/facebook/junitTests/src/main/AndroidManifest.xml
+++ b/facebook/junitTests/src/main/AndroidManifest.xml
@@ -25,11 +25,11 @@
     <application
         android:allowBackup="true"
         android:icon="@drawable/ic_launcher"
-        android:label="@string/app_name"
-        android:theme="@style/AppTheme" >
+        android:label="junitTests"
+        android:theme="@style/Theme.AppCompat.Light.DarkActionBar" >
         <activity
             android:name=".MainActivity"
-            android:label="@string/app_name" >
+            android:label="junitTests" >
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
diff --git a/facebook/junitTests/src/main/java/com/facebook/junittests/MainActivity.java b/facebook/junitTests/src/main/java/com/facebook/junittests/MainActivity.java
index da299bbe4..bc8e3c97e 100644
--- a/facebook/junitTests/src/main/java/com/facebook/junittests/MainActivity.java
+++ b/facebook/junitTests/src/main/java/com/facebook/junittests/MainActivity.java
@@ -20,6 +20,7 @@
 
 package com.facebook.junittests;
 
+import android.support.v4.app.FragmentActivity;
 import android.support.v7.app.ActionBarActivity;
 import android.os.Bundle;
 import android.view.Menu;
@@ -28,7 +29,7 @@
 import com.facebook.FacebookSdk;
 
 
-public class MainActivity extends ActionBarActivity {
+public class MainActivity extends FragmentActivity {
     private static String APP_ID = "1234";
     @Override
     protected void onCreate(Bundle savedInstanceState) {
diff --git a/facebook/junitTests/src/main/res/values/styles.xml b/facebook/junitTests/src/main/res/values/styles.xml
index a7a50cfc1..f4968fccf 100644
--- a/facebook/junitTests/src/main/res/values/styles.xml
+++ b/facebook/junitTests/src/main/res/values/styles.xml
@@ -19,9 +19,4 @@
 -->
 
 <resources>
-    <!-- Base application theme. -->
-    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
-        <!-- Customize your theme here. -->
-    </style>
-
 </resources>
diff --git a/facebook/junitTests/src/test/java/com/facebook/AccessTokenCacheTest.java b/facebook/junitTests/src/test/java/com/facebook/AccessTokenCacheTest.java
index c0f3b723c..caf1f87c0 100644
--- a/facebook/junitTests/src/test/java/com/facebook/AccessTokenCacheTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/AccessTokenCacheTest.java
@@ -34,6 +34,7 @@
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.Arrays;
 import java.util.Date;
@@ -77,7 +78,7 @@
     @Before
     public void before() throws Exception {
         mockStatic(FacebookSdk.class);
-        sharedPreferences = Robolectric.application.getSharedPreferences(
+        sharedPreferences = RuntimeEnvironment.application.getSharedPreferences(
                 AccessTokenManager.SHARED_PREFERENCES_NAME, Context.MODE_PRIVATE);
         sharedPreferences.edit().clear().commit();
         cachingStrategyFactory = mock(
diff --git a/facebook/junitTests/src/test/java/com/facebook/AccessTokenManagerTest.java b/facebook/junitTests/src/test/java/com/facebook/AccessTokenManagerTest.java
index 796c329e4..3ae3d47a6 100644
--- a/facebook/junitTests/src/test/java/com/facebook/AccessTokenManagerTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/AccessTokenManagerTest.java
@@ -35,6 +35,7 @@
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.Arrays;
 import java.util.Date;
@@ -64,10 +65,10 @@
     public void before() throws Exception {
         mockStatic(FacebookSdk.class);
         when(FacebookSdk.isInitialized()).thenReturn(true);
-        when(FacebookSdk.getApplicationContext()).thenReturn(Robolectric.application);
+        when(FacebookSdk.getApplicationContext()).thenReturn(RuntimeEnvironment.application);
         suppress(method(Utility.class, "clearFacebookCookies"));
 
-        localBroadcastManager = LocalBroadcastManager.getInstance(Robolectric.application);
+        localBroadcastManager = LocalBroadcastManager.getInstance(RuntimeEnvironment.application);
         accessTokenCache = mock(AccessTokenCache.class);
     }
 
diff --git a/facebook/junitTests/src/test/java/com/facebook/AccessTokenTest.java b/facebook/junitTests/src/test/java/com/facebook/AccessTokenTest.java
index 9c4db5d7d..8ec902bbe 100644
--- a/facebook/junitTests/src/test/java/com/facebook/AccessTokenTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/AccessTokenTest.java
@@ -31,6 +31,7 @@
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.io.IOException;
 import java.util.Arrays;
@@ -173,7 +174,7 @@ public void testCacheRoundtrip() {
         assertTrue(!accessToken.isExpired());
 
         Bundle cache = AccessTokenTestHelper.toLegacyCacheBundle(accessToken);
-        TestUtils.assertEqualContents(bundle, cache);
+        TestUtils.assertEqualContentsWithoutOrder(bundle, cache);
     }
 
     @Test
@@ -185,7 +186,7 @@ public void testFromCacheWithMissingApplicationId() {
         LegacyTokenHelper.putToken(bundle, token);
         // no app id
 
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         FacebookSdk.setApplicationId(applicationId);
 
         AccessToken accessToken = AccessToken.createFromLegacyCache(bundle);
diff --git a/facebook/junitTests/src/test/java/com/facebook/AccessTokenTrackerTest.java b/facebook/junitTests/src/test/java/com/facebook/AccessTokenTrackerTest.java
index 3bbfa5910..670ecfaac 100644
--- a/facebook/junitTests/src/test/java/com/facebook/AccessTokenTrackerTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/AccessTokenTrackerTest.java
@@ -28,6 +28,7 @@
 import org.junit.Test;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.Arrays;
 import java.util.Date;
@@ -52,9 +53,9 @@
     public void before() throws Exception {
         mockStatic(FacebookSdk.class);
         when(FacebookSdk.isInitialized()).thenReturn(true);
-        when(FacebookSdk.getApplicationContext()).thenReturn(Robolectric.application);
+        when(FacebookSdk.getApplicationContext()).thenReturn(RuntimeEnvironment.application);
 
-        localBroadcastManager = LocalBroadcastManager.getInstance(Robolectric.application);
+        localBroadcastManager = LocalBroadcastManager.getInstance(RuntimeEnvironment.application);
     }
 
     @After
diff --git a/facebook/junitTests/src/test/java/com/facebook/ApplicationTest.java b/facebook/junitTests/src/test/java/com/facebook/ApplicationTest.java
index 8754c0cfe..a6452b5a1 100644
--- a/facebook/junitTests/src/test/java/com/facebook/ApplicationTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/ApplicationTest.java
@@ -24,9 +24,14 @@
 
 import com.facebook.junittests.MainActivity;
 
+import org.junit.Before;
 import org.junit.Test;
 import org.robolectric.Robolectric;
 
+import java.util.concurrent.CountDownLatch;
+import java.util.concurrent.TimeUnit;
+import java.util.concurrent.atomic.AtomicBoolean;
+
 import static org.junit.Assert.*;
 
 public class ApplicationTest extends FacebookTestCase {
@@ -35,4 +40,22 @@ public void testCreateActivity() throws Exception {
         Activity activity = Robolectric.buildActivity(MainActivity.class).create().get();
         assertTrue(activity != null);
     }
+
+    @Test
+    public void testSdkInitializeCallback() throws Exception{
+        final CountDownLatch lock = new CountDownLatch(1);
+        Activity activity = Robolectric.buildActivity(MainActivity.class).create().get();
+        final AtomicBoolean initialized = new AtomicBoolean(false);
+        FacebookSdk.sdkInitialize(activity, new FacebookSdk.InitializeCallback() {
+            @Override
+            public void onInitialized() {
+                initialized.set(true);
+                lock.countDown();
+            }
+        });
+
+        lock.await(100, TimeUnit.MILLISECONDS);
+
+        assertTrue(initialized.get());
+    }
 }
diff --git a/facebook/junitTests/src/test/java/com/facebook/FacebookContentProviderTest.java b/facebook/junitTests/src/test/java/com/facebook/FacebookContentProviderTest.java
index 7818efc8f..24f1c28be 100644
--- a/facebook/junitTests/src/test/java/com/facebook/FacebookContentProviderTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/FacebookContentProviderTest.java
@@ -30,6 +30,7 @@
 import org.junit.Test;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.io.File;
 import java.io.FileNotFoundException;
@@ -176,7 +177,7 @@ public static void addAttachment(UUID callId, String attachmentName) {
         public static File openAttachment(UUID callId, String attachmentName)
                 throws FileNotFoundException {
             if (attachments.contains(new Pair<>(callId, attachmentName))) {
-                File cacheDir = Robolectric.application.getCacheDir();
+                File cacheDir = RuntimeEnvironment.application.getCacheDir();
                 File dummyFile = new File(cacheDir, DUMMY_FILE_NAME);
                 if (!dummyFile.exists()) {
                     try {
diff --git a/facebook/junitTests/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java b/facebook/junitTests/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java
index 3b03fbf66..5ef42b907 100644
--- a/facebook/junitTests/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java
@@ -25,7 +25,10 @@
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
+import org.junit.Before;
 import org.junit.Test;
+import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import static org.junit.Assert.*;
 
@@ -166,6 +169,11 @@
             "  }\n" +
             "}";
 
+    @Before
+    public void before() throws Exception {
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
+    }
+
     @Test
     public void testClientException() {
         final String errorMsg = "some error happened";
diff --git a/facebook/junitTests/src/test/java/com/facebook/FacebookSdkPowerMockTest.java b/facebook/junitTests/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
index cc8d157d5..3893e5c16 100644
--- a/facebook/junitTests/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
@@ -35,6 +35,7 @@
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.powermock.reflect.Whitebox;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.concurrent.Executor;
 
@@ -156,10 +157,10 @@ public void testLoadDefaultsDoesNotOverwrite() throws Exception {
 
     @Test
     public void testRequestCodeOffsetAfterInit() throws Exception {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
 
         try {
-            FacebookSdk.sdkInitialize(Robolectric.application, 1000);
+            FacebookSdk.sdkInitialize(RuntimeEnvironment.application, 1000);
             fail();
         } catch (FacebookException exception) {
             assertEquals(FacebookSdk.CALLBACK_OFFSET_CHANGED_AFTER_INIT, exception.getMessage());
@@ -170,7 +171,7 @@ public void testRequestCodeOffsetAfterInit() throws Exception {
     public void testRequestCodeOffsetNegative() throws Exception {
         try {
             // last bit set, so negative
-            FacebookSdk.sdkInitialize(Robolectric.application, 0xFACEB00C);
+            FacebookSdk.sdkInitialize(RuntimeEnvironment.application, 0xFACEB00C);
             fail();
         } catch (FacebookException exception) {
             assertEquals(FacebookSdk.CALLBACK_OFFSET_NEGATIVE, exception.getMessage());
@@ -179,13 +180,13 @@ public void testRequestCodeOffsetNegative() throws Exception {
 
     @Test
     public void testRequestCodeOffset() throws Exception {
-        FacebookSdk.sdkInitialize(Robolectric.application, 1000);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application, 1000);
         assertEquals(1000, FacebookSdk.getCallbackRequestCodeOffset());
     }
 
     @Test
     public void testRequestCodeRange() {
-        FacebookSdk.sdkInitialize(Robolectric.application, 1000);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application, 1000);
         assertTrue(FacebookSdk.isFacebookRequestCode(1000));
         assertTrue(FacebookSdk.isFacebookRequestCode(1099));
         assertFalse(FacebookSdk.isFacebookRequestCode(999));
diff --git a/facebook/junitTests/src/test/java/com/facebook/GraphErrorTest.java b/facebook/junitTests/src/test/java/com/facebook/GraphErrorTest.java
index ad84cdbf5..23fcc6000 100644
--- a/facebook/junitTests/src/test/java/com/facebook/GraphErrorTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/GraphErrorTest.java
@@ -30,6 +30,7 @@
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.io.IOException;
 import java.net.HttpURLConnection;
@@ -57,7 +58,7 @@ public void before() throws Exception {
         mockStatic(FacebookSdk.class);
         suppress(method(Utility.class, "clearFacebookCookies"));
         when(FacebookSdk.isInitialized()).thenReturn(true);
-        when(FacebookSdk.getApplicationContext()).thenReturn(Robolectric.application);
+        when(FacebookSdk.getApplicationContext()).thenReturn(RuntimeEnvironment.application);
         stub(method(AccessTokenCache.class, "save")).toReturn(null);
     }
 
diff --git a/facebook/junitTests/src/test/java/com/facebook/GraphRequestTest.java b/facebook/junitTests/src/test/java/com/facebook/GraphRequestTest.java
index 7f9104600..3aca6e1c5 100644
--- a/facebook/junitTests/src/test/java/com/facebook/GraphRequestTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/GraphRequestTest.java
@@ -89,7 +89,14 @@ public void testCreateMyFriendsRequest() {
     public void testCreateUploadPhotoRequest() {
         Bitmap image = Bitmap.createBitmap(128, 128, Bitmap.Config.ALPHA_8);
 
-        GraphRequest request = ShareInternalUtility.newUploadPhotoRequest(null, image, null, null);
+        GraphRequest request =
+                GraphRequest.newUploadPhotoRequest(
+                        null,
+                        ShareInternalUtility.MY_PHOTOS,
+                        image,
+                        null,
+                        null,
+                        null);
         assertTrue(request != null);
 
         Bundle parameters = request.getParameters();
@@ -132,115 +139,6 @@ public void testCreatePlacesSearchRequestRequiresLocationOrSearchText() {
         }
     }
 
-    @Test
-    public void testNewPostOpenGraphObjectRequestRequiresObject() {
-        try {
-            ShareInternalUtility.newPostOpenGraphObjectRequest(null, null, null);
-            fail("expected exception");
-        } catch (FacebookException exception) {
-            // Success
-        }
-    }
-
-    @Test
-    public void testNewPostOpenGraphObjectRequestRequiresObjectType() {
-        try {
-            JSONObject object = GraphUtil.createOpenGraphObjectForPost(null);
-            ShareInternalUtility.newPostOpenGraphObjectRequest(null, object, null);
-            fail("expected exception");
-        } catch (FacebookException exception) {
-            // Success
-        }
-    }
-
-    @Test
-    public void testNewPostOpenGraphObjectRequestRequiresNonEmptyObjectType() throws JSONException {
-        try {
-            JSONObject object = GraphUtil.createOpenGraphObjectForPost("");
-            object.put("title", "bar");
-            ShareInternalUtility.newPostOpenGraphObjectRequest(null, object, null);
-            fail("expected exception");
-        } catch (FacebookException exception) {
-            // Success
-        }
-    }
-
-    @Test
-    public void testNewPostOpenGraphObjectRequestRequiresTitle() {
-        try {
-            JSONObject object = GraphUtil.createOpenGraphObjectForPost("foo");
-            ShareInternalUtility.newPostOpenGraphObjectRequest(null, object, null);
-            fail("expected exception");
-        } catch (FacebookException exception) {
-            // Success
-        }
-    }
-
-    @Test
-    public void testNewPostOpenGraphObjectRequestRequiresNonEmptyTitle() throws JSONException {
-        try {
-            JSONObject object = GraphUtil.createOpenGraphObjectForPost("foo");
-            object.put("title", "");
-            ShareInternalUtility.newPostOpenGraphObjectRequest(null, object, null);
-            fail("expected exception");
-        } catch (FacebookException exception) {
-            // Success
-        }
-    }
-
-    @Test
-    public void testNewPostOpenGraphObjectRequest() throws JSONException {
-        JSONObject object = GraphUtil.createOpenGraphObjectForPost("foo");
-        object.put("title", "bar");
-        GraphRequest request = ShareInternalUtility.newPostOpenGraphObjectRequest(
-                null,
-                object,
-                null);
-        assertNotNull(request);
-    }
-
-    @Test
-    public void testNewPostOpenGraphActionRequestRequiresAction() {
-        try {
-            ShareInternalUtility.newPostOpenGraphActionRequest(null, null, null);
-            fail("expected exception");
-        } catch (FacebookException exception) {
-            // Success
-        }
-    }
-
-    @Test
-    public void testNewPostOpenGraphActionRequestRequiresActionType() {
-        try {
-            JSONObject action = GraphUtil.createOpenGraphActionForPost(null);
-            ShareInternalUtility.newPostOpenGraphActionRequest(null, action, null);
-            fail("expected exception");
-        } catch (FacebookException exception) {
-            // Success
-        }
-    }
-
-    @Test
-    public void testNewPostOpenGraphActionRequestRequiresNonEmptyActionType() {
-        try {
-            JSONObject action = GraphUtil.createOpenGraphActionForPost("");
-            ShareInternalUtility.newPostOpenGraphActionRequest(null, action, null);
-            fail("expected exception");
-        } catch (FacebookException exception) {
-            // Success
-        }
-    }
-
-    @Test
-    public void testNewPostOpenGraphActionRequest() {
-        JSONObject action = GraphUtil.createOpenGraphActionForPost("foo");
-        GraphRequest request = ShareInternalUtility.newPostOpenGraphActionRequest(
-                null,
-                action,
-                null);
-        assertNotNull(request);
-    }
-
     @Test
     public void testSetHttpMethodToNilGivesDefault() {
         GraphRequest request = new GraphRequest();
diff --git a/facebook/junitTests/src/test/java/com/facebook/LegacyTokenCacheTest.java b/facebook/junitTests/src/test/java/com/facebook/LegacyTokenCacheTest.java
index 03bece4c9..c7a80713b 100644
--- a/facebook/junitTests/src/test/java/com/facebook/LegacyTokenCacheTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/LegacyTokenCacheTest.java
@@ -30,6 +30,7 @@
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.lang.reflect.Array;
 import java.util.ArrayList;
@@ -71,7 +72,7 @@
     public void setUp() {
         super.setUp();
 
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
     @Before
@@ -106,10 +107,10 @@ public void testAllTypes() {
 
         ensureApplicationContext();
 
-        LegacyTokenHelper cache = new LegacyTokenHelper(Robolectric.application);
+        LegacyTokenHelper cache = new LegacyTokenHelper(RuntimeEnvironment.application);
         cache.save(originalBundle);
 
-        LegacyTokenHelper cache2 = new LegacyTokenHelper(Robolectric.application);
+        LegacyTokenHelper cache2 = new LegacyTokenHelper(RuntimeEnvironment.application);
         Bundle cachedBundle = cache2.load();
 
         assertEquals(originalBundle.getBoolean(BOOLEAN_KEY), cachedBundle.getBoolean(BOOLEAN_KEY));
@@ -146,16 +147,18 @@ public void testMultipleCaches() {
 
         ensureApplicationContext();
 
-        LegacyTokenHelper cache1 = new LegacyTokenHelper(Robolectric.application);
-        LegacyTokenHelper cache2 = new LegacyTokenHelper(Robolectric.application, "CustomCache");
+        LegacyTokenHelper cache1 = new LegacyTokenHelper(RuntimeEnvironment.application);
+        LegacyTokenHelper cache2 = new LegacyTokenHelper(
+                RuntimeEnvironment.application,
+                "CustomCache");
 
         cache1.save(bundle1);
         cache2.save(bundle2);
 
         // Get new references to make sure we are getting persisted data.
         // Reverse the cache references for fun.
-        cache1 = new LegacyTokenHelper(Robolectric.application, "CustomCache");
-        cache2 = new LegacyTokenHelper(Robolectric.application);
+        cache1 = new LegacyTokenHelper(RuntimeEnvironment.application, "CustomCache");
+        cache2 = new LegacyTokenHelper(RuntimeEnvironment.application);
 
         Bundle newBundle1 = cache1.load(), newBundle2 = cache2.load();
 
@@ -174,7 +177,7 @@ public void testCacheRoundtrip() {
         String applicationId = "1234";
 
         LegacyTokenHelper cache =
-                new LegacyTokenHelper(Robolectric.application);
+                new LegacyTokenHelper(RuntimeEnvironment.application);
         cache.clear();
 
         Bundle bundle = new Bundle();
@@ -200,7 +203,7 @@ public void testCacheRoundtrip() {
         assertTrue(!accessToken.isExpired());
 
         Bundle cachedBundle = AccessTokenTestHelper.toLegacyCacheBundle(accessToken);
-        TestUtils.assertEqualContents(bundle, cachedBundle);
+        TestUtils.assertEqualContentsWithoutOrder(bundle, cachedBundle);
     }
 
     private static void assertArrayEquals(Object a1, Object a2) {
@@ -367,7 +370,8 @@ private void ensureApplicationContext() {
         long waitedFor = 0;
         try {
             // Don't hold up execution for too long.
-            while (Robolectric.application.getApplicationContext() == null && waitedFor <= 2000) {
+            while (RuntimeEnvironment.application.getApplicationContext() == null
+                    && waitedFor <= 2000) {
                 Thread.sleep(50);
                 waitedFor += 50;
             }
diff --git a/facebook/junitTests/src/test/java/com/facebook/ProfileCacheTest.java b/facebook/junitTests/src/test/java/com/facebook/ProfileCacheTest.java
index f9c122793..e77179d7e 100644
--- a/facebook/junitTests/src/test/java/com/facebook/ProfileCacheTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/ProfileCacheTest.java
@@ -25,14 +25,15 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import static org.junit.Assert.*;
 
 public final class ProfileCacheTest extends FacebookTestCase {
     @Before
     public void before() throws Exception {
-        FacebookSdk.sdkInitialize(Robolectric.application);
-        Robolectric.application.getSharedPreferences(
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
+        RuntimeEnvironment.application.getSharedPreferences(
                 ProfileCache.SHARED_PREFERENCES_NAME,
                 Context.MODE_PRIVATE)
                 .edit().
diff --git a/facebook/junitTests/src/test/java/com/facebook/ProfileManagerTest.java b/facebook/junitTests/src/test/java/com/facebook/ProfileManagerTest.java
index 921ade1a6..1747f5af4 100644
--- a/facebook/junitTests/src/test/java/com/facebook/ProfileManagerTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/ProfileManagerTest.java
@@ -28,6 +28,7 @@
 import org.junit.Test;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.InputMismatchException;
 
@@ -44,7 +45,7 @@
 
     @Before
     public void before() {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
     @Test
diff --git a/facebook/junitTests/src/test/java/com/facebook/ProfileTest.java b/facebook/junitTests/src/test/java/com/facebook/ProfileTest.java
index 7ff282054..980986d80 100644
--- a/facebook/junitTests/src/test/java/com/facebook/ProfileTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/ProfileTest.java
@@ -26,6 +26,7 @@
 import org.json.JSONObject;
 import org.junit.Test;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import static org.junit.Assert.*;
 
@@ -134,7 +135,7 @@ public void testParcelSerialization() {
 
     @Test
     public void testGetSetCurrentProfile() {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         Profile profile1 = createDefaultProfile();
         Profile.setCurrentProfile(profile1);
         assertEquals(ProfileManager.getInstance().getCurrentProfile(), profile1);
diff --git a/facebook/junitTests/src/test/java/com/facebook/ProfileTrackerTest.java b/facebook/junitTests/src/test/java/com/facebook/ProfileTrackerTest.java
index ede333d17..0c8a60890 100644
--- a/facebook/junitTests/src/test/java/com/facebook/ProfileTrackerTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/ProfileTrackerTest.java
@@ -25,15 +25,16 @@
 
 import org.junit.Test;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import static org.junit.Assert.*;
 
 public class ProfileTrackerTest extends FacebookPowerMockTestCase {
     @Test
     public void testStartStopTrackingAndBroadcast() {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         LocalBroadcastManager localBroadcastManager =
-                LocalBroadcastManager.getInstance(Robolectric.application);
+                LocalBroadcastManager.getInstance(RuntimeEnvironment.application);
         TestProfileTracker testProfileTracker = new TestProfileTracker();
         // Starts tracking
         assertTrue(testProfileTracker.isTracking());
diff --git a/facebook/junitTests/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java b/facebook/junitTests/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java
index 99c8fa237..7296683fe 100644
--- a/facebook/junitTests/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java
@@ -24,6 +24,7 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import static org.junit.Assert.*;
 
@@ -33,7 +34,7 @@
 
     @Before
     public void before() throws Exception {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         stream = new ProgressNoopOutputStream(null);
     }
 
diff --git a/facebook/junitTests/src/test/java/com/facebook/ProgressOutputStreamTest.java b/facebook/junitTests/src/test/java/com/facebook/ProgressOutputStreamTest.java
index 6d5fa2053..dfc408638 100644
--- a/facebook/junitTests/src/test/java/com/facebook/ProgressOutputStreamTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/ProgressOutputStreamTest.java
@@ -24,6 +24,7 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.io.ByteArrayOutputStream;
 import java.util.HashMap;
@@ -41,7 +42,7 @@
 
     @Before
     public void before() throws Exception {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         r1 = new GraphRequest(null, "4");
         r2 = new GraphRequest(null, "4");
 
diff --git a/facebook/junitTests/src/test/java/com/facebook/TestUtils.java b/facebook/junitTests/src/test/java/com/facebook/TestUtils.java
index 47e2a024d..def8ca2e5 100644
--- a/facebook/junitTests/src/test/java/com/facebook/TestUtils.java
+++ b/facebook/junitTests/src/test/java/com/facebook/TestUtils.java
@@ -104,20 +104,30 @@ public static void assertSamePermissions(final Collection<String> expected, fina
         }
     }
 
-    public static void assertSamePermissions(final Collection<String> expected, final Collection<String> actual) {
+    public static void assertSameCollectionContents(
+            final Collection expected,
+            final Collection actual) {
         if (expected == null) {
             Assert.assertEquals(null, actual);
         } else {
-            for (String p : expected) {
+            for (Object p : expected) {
                 Assert.assertTrue(actual.contains(p));
             }
-            for (String p : actual) {
+            for (Object p : actual) {
                 Assert.assertTrue(expected.contains(p));
             }
         }
     }
 
-    public static void assertAtLeastExpectedPermissions(final Collection<String> expected, final Collection<String> actual) {
+    public static void assertSamePermissions(
+            final Collection<String> expected,
+            final Collection<String> actual) {
+        assertSameCollectionContents(expected, actual);
+    }
+
+    public static void assertAtLeastExpectedPermissions(
+            final Collection<String> expected,
+            final Collection<String> actual) {
         if (expected != null) {
             for (String p : expected) {
                 Assert.assertTrue(actual.contains(p));
@@ -125,12 +135,23 @@ public static void assertAtLeastExpectedPermissions(final Collection<String> exp
         }
     }
 
-    public static void assertEqualContents(final Bundle a, final Bundle b) {
+    private static void assertEqualContents(
+            final Bundle a,
+            final Bundle b,
+            boolean collectionOrderMatters) {
         for (String key : a.keySet()) {
             if (!b.containsKey(key)) {
                 Assert.fail("bundle does not include key " + key);
             }
-            Assert.assertEquals(a.get(key), b.get(key));
+            Object aValue = a.get(key);
+            Object bValue = b.get(key);
+            if (!collectionOrderMatters &&
+                aValue instanceof Collection &&
+                bValue instanceof Collection) {
+                assertSameCollectionContents((Collection) aValue, (Collection) bValue);
+            } else {
+                Assert.assertEquals(a.get(key), b.get(key));
+            }
         }
         for (String key : b.keySet()) {
             if (!a.containsKey(key)) {
@@ -139,6 +160,18 @@ public static void assertEqualContents(final Bundle a, final Bundle b) {
         }
     }
 
+    public static void assertEqualContentsWithoutOrder(
+            final Bundle a,
+            final Bundle b) {
+        assertEqualContents(a, b, false);
+    }
+
+    public static void assertEqualContents(
+            final Bundle a,
+            final Bundle b) {
+        assertEqualContents(a, b, true);
+    }
+
     @TargetApi(16)
     public static void assertEquals(final JSONObject expected, final JSONObject actual) {
         // JSONObject.equals does not do an order-independent comparison, so let's roll our own  :(
diff --git a/facebook/junitTests/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java b/facebook/junitTests/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java
index cd599c259..27dcb3125 100644
--- a/facebook/junitTests/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java
@@ -30,6 +30,7 @@
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.powermock.reflect.Whitebox;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.HashMap;
 
@@ -42,7 +43,7 @@
 
     @Before
     public void before() {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         // Reset the static state every time so tests don't interfere with each other.
         Whitebox.setInternalState(
                 CallbackManagerImpl.class,
diff --git a/facebook/junitTests/src/test/java/com/facebook/internal/FileLruCacheTest.java b/facebook/junitTests/src/test/java/com/facebook/internal/FileLruCacheTest.java
index cc57d2e0b..e4a6e00e2 100644
--- a/facebook/junitTests/src/test/java/com/facebook/internal/FileLruCacheTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/internal/FileLruCacheTest.java
@@ -28,6 +28,7 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
@@ -42,7 +43,7 @@
 
     @Before
     public void before() {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
     @Test
diff --git a/facebook/junitTests/src/test/java/com/facebook/internal/ShareInternalUtilityTest.java b/facebook/junitTests/src/test/java/com/facebook/internal/ShareInternalUtilityTest.java
index 0376ecce8..78249805b 100644
--- a/facebook/junitTests/src/test/java/com/facebook/internal/ShareInternalUtilityTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/internal/ShareInternalUtilityTest.java
@@ -23,17 +23,24 @@
 
 import com.facebook.FacebookTestCase;
 import com.facebook.share.internal.ShareInternalUtility;
+import com.facebook.share.model.ShareOpenGraphAction;
+import com.facebook.share.model.ShareOpenGraphContent;
 
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 import org.junit.Test;
 
+import java.util.ArrayList;
 import java.util.Iterator;
+import java.util.List;
 import java.util.Locale;
+import java.util.UUID;
 
+import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertNull;
+import static org.junit.Assert.assertTrue;
 import static org.junit.Assert.fail;
 
 public class ShareInternalUtilityTest extends FacebookTestCase {
@@ -62,6 +69,61 @@ public void testRemoveNamespaceFromComplexOGJsonObject() {
         }
     }
 
+    @Test
+    public void testJsonSerializationOfOpenGraph() {
+        String placeId = "1";
+        ShareOpenGraphContent content = new ShareOpenGraphContent.Builder()
+                .setAction(
+                        new ShareOpenGraphAction.Builder()
+                                .putStringArrayList("tags", new ArrayList<String>() {{
+                                    add("2");
+                                    add("4");
+                                }})
+                                .build()
+                ).setPeopleIds(new ArrayList<String>() {{
+                    add("1");
+                    add("1");
+                    add("2");
+                    add("3");
+                }}).setPlaceId(placeId)
+                .build();
+
+        try {
+            JSONObject object = ShareInternalUtility.toJSONObjectForCall(null, content);
+            List<String> peopleIds = Utility.jsonArrayToStringList(object.getJSONArray("tags"));
+            assertEquals(4, peopleIds.size());
+            for (int i = 1; i < 5; ++i) {
+                assertTrue(peopleIds.contains(new Integer(i).toString()));
+            }
+
+            assertEquals(placeId, object.getString("place"));
+        } catch (JSONException ex) {
+            // Fail
+            assertNotNull(ex);
+            return;
+        }
+    }
+
+    @Test
+    public void testJsonSerializationOfOpenGraphExistingPlace() {
+        ShareOpenGraphContent content = new ShareOpenGraphContent.Builder()
+                .setAction(
+                        new ShareOpenGraphAction.Builder()
+                                .putString("place", "1")
+                                .build()
+                ).setPlaceId("2")
+                .build();
+
+        try {
+            JSONObject object = ShareInternalUtility.toJSONObjectForCall(null, content);
+            assertEquals("1", object.getString("place"));
+        } catch (JSONException ex) {
+            // Fail
+            assertNotNull(ex);
+            return;
+        }
+    }
+
     private static JSONObject getJsonOGActionTestObject() throws JSONException {
         JSONObject testAction = new JSONObject();
         testAction.put("og:field", 1);
diff --git a/facebook/junitTests/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java b/facebook/junitTests/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java
index c0b044900..c57831876 100644
--- a/facebook/junitTests/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java
@@ -33,6 +33,7 @@
 import org.mockito.ArgumentCaptor;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.Date;
 
@@ -55,7 +56,7 @@
     @Override
     public void before() throws Exception {
         super.before();
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
     @Test
diff --git a/facebook/junitTests/src/test/java/com/facebook/login/LoginClientTest.java b/facebook/junitTests/src/test/java/com/facebook/login/LoginClientTest.java
index cd2919827..61076cbb8 100644
--- a/facebook/junitTests/src/test/java/com/facebook/login/LoginClientTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/login/LoginClientTest.java
@@ -34,6 +34,7 @@
 import org.mockito.Mock;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.Arrays;
 import java.util.HashSet;
@@ -67,7 +68,7 @@ public void before() throws Exception {
 
     @Test
     public void testReauthorizationWithSameFbidSucceeds() throws Exception {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         LoginClient.Request request = createRequest(ACCESS_TOKEN);
 
         AccessToken token = new AccessToken(
@@ -112,7 +113,7 @@ public void testRequestParceling() {
 
         LoginClient.Request unparceledRequest = TestUtils.parcelAndUnparcel(request);
 
-        assertEquals(LoginBehavior.SSO_WITH_FALLBACK, unparceledRequest.getLoginBehavior());
+        assertEquals(LoginBehavior.NATIVE_WITH_FALLBACK, unparceledRequest.getLoginBehavior());
         assertEquals(new HashSet<String>(PERMISSIONS), unparceledRequest.getPermissions());
         assertEquals(DefaultAudience.FRIENDS, unparceledRequest.getDefaultAudience());
         assertEquals("1234", unparceledRequest.getApplicationId());
@@ -123,7 +124,7 @@ public void testRequestParceling() {
     @Test
     public void testResultParceling() {
         LoginClient.Request request = new LoginClient.Request(
-                LoginBehavior.SUPPRESS_SSO,
+                LoginBehavior.WEB_ONLY,
                 null,
                 DefaultAudience.EVERYONE,
                 null,
@@ -149,7 +150,7 @@ public void testResultParceling() {
         LoginClient.Result unparceledResult = TestUtils.parcelAndUnparcel(result);
         LoginClient.Request unparceledRequest = unparceledResult.request;
 
-        assertEquals(LoginBehavior.SUPPRESS_SSO, unparceledRequest.getLoginBehavior());
+        assertEquals(LoginBehavior.WEB_ONLY, unparceledRequest.getLoginBehavior());
         assertEquals(new HashSet<String>(), unparceledRequest.getPermissions());
         assertEquals(DefaultAudience.EVERYONE, unparceledRequest.getDefaultAudience());
         assertEquals(null, unparceledRequest.getApplicationId());
@@ -165,7 +166,7 @@ public void testResultParceling() {
 
     protected LoginClient.Request createRequest(String previousAccessTokenString) {
         return new LoginClient.Request(
-                LoginBehavior.SSO_WITH_FALLBACK,
+                LoginBehavior.NATIVE_WITH_FALLBACK,
                 new HashSet<String>(PERMISSIONS),
                 DefaultAudience.FRIENDS,
                 "1234",
diff --git a/facebook/junitTests/src/test/java/com/facebook/login/LoginHandlerTestCase.java b/facebook/junitTests/src/test/java/com/facebook/login/LoginHandlerTestCase.java
index cd256a96a..30fe97fa2 100644
--- a/facebook/junitTests/src/test/java/com/facebook/login/LoginHandlerTestCase.java
+++ b/facebook/junitTests/src/test/java/com/facebook/login/LoginHandlerTestCase.java
@@ -20,7 +20,6 @@
 
 package com.facebook.login;
 
-import android.app.Activity;
 import android.support.v4.app.FragmentActivity;
 
 import com.facebook.FacebookPowerMockTestCase;
@@ -61,7 +60,7 @@ public void before() throws Exception {
     protected LoginClient.Request createRequest(String previousAccessTokenString) {
 
         return new LoginClient.Request(
-                LoginBehavior.SSO_WITH_FALLBACK,
+                LoginBehavior.NATIVE_WITH_FALLBACK,
                 new HashSet<String>(PERMISSIONS),
                 DefaultAudience.FRIENDS,
                 "1234",
diff --git a/facebook/junitTests/src/test/java/com/facebook/login/LoginManagerTest.java b/facebook/junitTests/src/test/java/com/facebook/login/LoginManagerTest.java
index eadbb97e1..a3797ee7b 100644
--- a/facebook/junitTests/src/test/java/com/facebook/login/LoginManagerTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/login/LoginManagerTest.java
@@ -124,14 +124,14 @@ public void testGetInstance() {
     @Test
     public void testLoginBehaviorDefaultsToSsoWithFallback() {
         LoginManager loginManager = new LoginManager();
-        assertEquals(LoginBehavior.SSO_WITH_FALLBACK, loginManager.getLoginBehavior());
+        assertEquals(LoginBehavior.NATIVE_WITH_FALLBACK, loginManager.getLoginBehavior());
     }
 
     @Test
     public void testCanChangeLoginBehavior() {
         LoginManager loginManager = new LoginManager();
-        loginManager.setLoginBehavior(LoginBehavior.SSO_ONLY);
-        assertEquals(LoginBehavior.SSO_ONLY, loginManager.getLoginBehavior());
+        loginManager.setLoginBehavior(LoginBehavior.NATIVE_ONLY);
+        assertEquals(LoginBehavior.NATIVE_ONLY, loginManager.getLoginBehavior());
     }
 
     @Test
@@ -231,7 +231,7 @@ public void testLogInWithReadDoesNotThrowWithReadPermissions() {
     public void testLogInWithReadListCreatesPendingRequestWithCorrectValues() {
         LoginManager loginManager = new LoginManager();
         // Change some defaults so we can verify the pending request picks them up.
-        loginManager.setLoginBehavior(LoginBehavior.SSO_ONLY);
+        loginManager.setLoginBehavior(LoginBehavior.NATIVE_ONLY);
         loginManager.setDefaultAudience(DefaultAudience.EVERYONE);
         loginManager.logInWithReadPermissions(mockActivity,
             Arrays.asList("public_profile", "user_friends"));
@@ -262,7 +262,7 @@ public void implTestLogInCreatesPendingRequestWithCorrectValues(
         assertNotNull(request);
 
         assertEquals(MOCK_APP_ID, request.getApplicationId());
-        assertEquals(LoginBehavior.SSO_ONLY, request.getLoginBehavior());
+        assertEquals(LoginBehavior.NATIVE_ONLY, request.getLoginBehavior());
         assertEquals(DefaultAudience.EVERYONE, request.getDefaultAudience());
 
         Set<String> permissions = request.getPermissions();
@@ -285,7 +285,7 @@ public void testLogInWithReadAndActivityStartsFacebookActivityWithCorrectRequest
 
         ComponentName componentName = intent.getComponent();
         assertEquals(FacebookActivity.class.getName(), componentName.getClassName());
-        assertEquals(LoginBehavior.SSO_WITH_FALLBACK.name(), intent.getAction());
+        assertEquals(LoginBehavior.NATIVE_WITH_FALLBACK.name(), intent.getAction());
     }
 
     @Test
@@ -301,7 +301,7 @@ public void testLogInWithReadAndFragmentStartsFacebookActivityWithCorrectRequest
 
         ComponentName componentName = intent.getComponent();
         assertEquals(FacebookActivity.class.getName(), componentName.getClassName());
-        assertEquals(LoginBehavior.SSO_WITH_FALLBACK.name(), intent.getAction());
+        assertEquals(LoginBehavior.NATIVE_WITH_FALLBACK.name(), intent.getAction());
     }
 
     @Test
@@ -315,7 +315,7 @@ public void testLogInWitPublishDoesNotThrowWithPublishPermissions() {
     public void testLogInWithPublishListCreatesPendingRequestWithCorrectValues() {
         LoginManager loginManager = new LoginManager();
         // Change some defaults so we can verify the pending request picks them up.
-        loginManager.setLoginBehavior(LoginBehavior.SSO_ONLY);
+        loginManager.setLoginBehavior(LoginBehavior.NATIVE_ONLY);
         loginManager.setDefaultAudience(DefaultAudience.EVERYONE);
         loginManager.logInWithPublishPermissions(mockActivity,
             Arrays.asList("publish_actions", "publish_stream"));
diff --git a/facebook/junitTests/src/test/java/com/facebook/login/LoginResultTest.java b/facebook/junitTests/src/test/java/com/facebook/login/LoginResultTest.java
index ba985e7ba..38d6bf73a 100644
--- a/facebook/junitTests/src/test/java/com/facebook/login/LoginResultTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/login/LoginResultTest.java
@@ -27,6 +27,7 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.HashSet;
 import java.util.Set;
@@ -47,7 +48,7 @@
 
     @Before
     public void before() throws Exception {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
     @Test
@@ -99,7 +100,7 @@ private AccessToken createAccessToken(Set<String> permissions,
 
     private LoginClient.Request createRequest(Set<String> permissions, boolean isRerequest) {
         LoginClient.Request request = new LoginClient.Request(
-                LoginBehavior.SSO_WITH_FALLBACK,
+                LoginBehavior.NATIVE_WITH_FALLBACK,
                 permissions,
                 DefaultAudience.EVERYONE,
                 "123",
diff --git a/facebook/junitTests/src/test/java/com/facebook/login/widget/LoginButtonTest.java b/facebook/junitTests/src/test/java/com/facebook/login/widget/LoginButtonTest.java
index 9cf532c7f..cd842c176 100644
--- a/facebook/junitTests/src/test/java/com/facebook/login/widget/LoginButtonTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/login/widget/LoginButtonTest.java
@@ -22,6 +22,7 @@
 
 import android.app.Activity;
 
+import com.facebook.BuildConfig;
 import com.facebook.FacebookTestCase;
 import com.facebook.junittests.MainActivity;
 import com.facebook.junittests.R;
@@ -29,7 +30,10 @@
 import com.facebook.login.LoginManager;
 
 import org.junit.Test;
+import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
+import org.robolectric.RobolectricGradleTestRunner;
+import org.robolectric.annotation.Config;
 
 import java.util.ArrayList;
 
diff --git a/facebook/junitTests/src/test/java/com/facebook/messenger/MessengerUtilsTest.java b/facebook/junitTests/src/test/java/com/facebook/messenger/MessengerUtilsTest.java
index 5012a5f37..f102ec1a5 100644
--- a/facebook/junitTests/src/test/java/com/facebook/messenger/MessengerUtilsTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/messenger/MessengerUtilsTest.java
@@ -37,6 +37,7 @@
 import org.mockito.ArgumentCaptor;
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
+import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
 import java.util.Arrays;
@@ -49,7 +50,7 @@
  * Tests for {@link com.facebook.messenger.MessengerUtils}
  */
 @RunWith(RobolectricTestRunner.class)
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 public class MessengerUtilsTest {
 
   private Activity mMockActivity;
@@ -63,7 +64,7 @@ public void setup() {
     mMockContentResolver = mock(ContentResolver.class);
     when(mMockActivity.getPackageManager()).thenReturn(mMockPackageManager);
     when(mMockActivity.getContentResolver()).thenReturn(mMockContentResolver);
-    FacebookSdk.sdkInitialize(Robolectric.application);
+    FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     FacebookSdk.setApplicationId("200");
   }
 
diff --git a/facebook/junitTests/src/test/java/com/facebook/share/internal/ShareOpenGraphUtilityTest.java b/facebook/junitTests/src/test/java/com/facebook/share/internal/ShareOpenGraphUtilityTest.java
index 0654be83e..7c2a7a05c 100644
--- a/facebook/junitTests/src/test/java/com/facebook/share/internal/ShareOpenGraphUtilityTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/share/internal/ShareOpenGraphUtilityTest.java
@@ -25,19 +25,14 @@
 import com.facebook.share.model.ShareOpenGraphAction;
 import com.facebook.share.model.ShareOpenGraphObject;
 
-import org.apache.maven.artifact.ant.shaded.IOUtil;
 import org.json.JSONException;
 import org.json.JSONObject;
 import org.junit.Test;
-import org.robolectric.Robolectric;
-import org.robolectric.util.RobolectricBackgroundExecutorService;
+import org.robolectric.shadows.ShadowApplication;
 
 import java.io.IOException;
-import java.net.URL;
 import java.util.ArrayList;
 
-import static junit.framework.Assert.assertNotNull;
-
 public class ShareOpenGraphUtilityTest extends FacebookTestCase {
     private static final String TYPE_KEY = "type";
 
@@ -87,7 +82,7 @@ private JSONObject getActionJSONObject() throws IOException, JSONException {
 
     private String getActionJSONString() throws IOException {
         return TestUtils.getAssetFileStringContents(
-                Robolectric.getShadowApplication().getApplicationContext(),
+                ShadowApplication.getInstance().getApplicationContext(),
                 "ShareOpenGraphUtilityTests_actionJSON.json"
         );
     }
diff --git a/facebook/libs b/facebook/libs
deleted file mode 120000
index d4bda9b46..000000000
--- a/facebook/libs
+++ /dev/null
@@ -1 +0,0 @@
-../libs
\ No newline at end of file
diff --git a/facebook/res/values-af/strings.xml b/facebook/res/values-af/strings.xml
new file mode 100644
index 000000000..3400cae2c
--- /dev/null
+++ b/facebook/res/values-af/strings.xml
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Hou van</string>
+    <string name="com_facebook_like_button_liked">Hou van</string>
+    <string name="com_facebook_loginview_log_out_button">Meld af</string>
+    <string name="com_facebook_loginview_log_in_button">Meld aan</string>
+    <string name="com_facebook_loginview_log_in_button_long">Meld met Facebook aan</string>
+    <string name="com_facebook_loginview_logged_in_as">Aangemeld as: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Met Facebook aangemeld</string>
+    <string name="com_facebook_loginview_log_out_action">Meld af</string>
+    <string name="com_facebook_loginview_cancel_action">Kanselleer</string>
+    <string name="com_facebook_loading">Laai tans...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest-fout</string>
+    <string name="com_facebook_internet_permission_error_message">Webaansig-aanmelding benodig INTERNET-toestemming</string>
+    <string name="com_facebook_tooltip_default">Nuut! Jy is in beheer - kies watter inligting jy met toepassings wil deel.</string>
+    <string name="com_facebook_image_download_unknown_error">Onverwagse fout met aflaai van \'n
+        prent.</string>
+    <string name="com_facebook_share_button_text">Deel</string>
+    <string name="com_facebook_send_button_text">Stuur</string>
+</resources>
diff --git a/facebook/res/values-ar/strings.xml b/facebook/res/values-ar/strings.xml
new file mode 100644
index 000000000..4380e9073
--- /dev/null
+++ b/facebook/res/values-ar/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">إعجاب</string>
+    <string name="com_facebook_like_button_liked">أعجبني</string>
+    <string name="com_facebook_loginview_log_out_button">تسجيل الخروج</string>
+    <string name="com_facebook_loginview_log_in_button">تسجيل الدخول</string>
+    <string name="com_facebook_loginview_log_in_button_long">تسجيل الدخول بحساب فيسبوك</string>
+    <string name="com_facebook_loginview_logged_in_as">تم تسجيل الدخول باسم: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">تم تسجيل الدخول بحساب فيسبوك</string>
+    <string name="com_facebook_loginview_log_out_action">تسجيل الخروج</string>
+    <string name="com_facebook_loginview_cancel_action">إلغاء</string>
+    <string name="com_facebook_loading">جارٍ التحميل...</string>
+    <string name="com_facebook_internet_permission_error_title">خطأ AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">يتطلب تسجيل الدخول إلى WebView إذن الاتصال بالإنترنت</string>
+    <string name="com_facebook_tooltip_default">جديد! أنت المتحكم - اختر المعلومات التي تريد مشاركتها مع التطبيقات.</string>
+    <string name="com_facebook_image_download_unknown_error">حدث خطأ غير متوقع أثناء تنزيل صورة.</string>
+    <string name="com_facebook_share_button_text">مشاركة</string>
+    <string name="com_facebook_send_button_text">إرسال</string>
+</resources>
diff --git a/facebook/res/values-bn/strings.xml b/facebook/res/values-bn/strings.xml
new file mode 100644
index 000000000..9b46fb75b
--- /dev/null
+++ b/facebook/res/values-bn/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">পছন্দ করুন</string>
+    <string name="com_facebook_like_button_liked">পছন্দ করা হয়েছে</string>
+    <string name="com_facebook_loginview_log_out_button">লগ আউট করুন</string>
+    <string name="com_facebook_loginview_log_in_button">লগ ইন করুন</string>
+    <string name="com_facebook_loginview_log_in_button_long">Facebook -এর সাথে লগ ইন করুন</string>
+    <string name="com_facebook_loginview_logged_in_as">এই হিসাবে লগ ইন করা হয়েছে: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ব্যবহার করে লগ ইন করা হয়েছে</string>
+    <string name="com_facebook_loginview_log_out_action">লগ আউট করুন</string>
+    <string name="com_facebook_loginview_cancel_action">বাতিল করুন</string>
+    <string name="com_facebook_loading">লোড হচ্ছে...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest ত্রুটি</string>
+    <string name="com_facebook_internet_permission_error_message">WebView লগ ইন করার জন্য INTERNET-এর অনুমতির প্রয়োজন আছে</string>
+    <string name="com_facebook_tooltip_default">নতুন! আপনি নিয়ন্ত্রণে আছেন-অ্যাপসের সাথে আপনি কোন তথ্য ভাগ করতে চাইছেন তা চয়ন করুন৷</string>
+    <string name="com_facebook_image_download_unknown_error">একটি চিত্র ডাউনলোড করার সময়ে অপ্রত্যাশিত ত্রুটি দেখা দিচ্ছে৷</string>
+    <string name="com_facebook_share_button_text">ভাগ করুন</string>
+    <string name="com_facebook_send_button_text">পাঠান</string>
+</resources>
diff --git a/facebook/res/values-cs/strings.xml b/facebook/res/values-cs/strings.xml
new file mode 100644
index 000000000..cf6dde3e1
--- /dev/null
+++ b/facebook/res/values-cs/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">To se mi líbí</string>
+    <string name="com_facebook_like_button_liked">Už se mi to líbí</string>
+    <string name="com_facebook_loginview_log_out_button">Odhlásit</string>
+    <string name="com_facebook_loginview_log_in_button">Přihlásit</string>
+    <string name="com_facebook_loginview_log_in_button_long">Přihlásit se přes Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Přihlášen(a) jako: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Přihlášen(a) přes Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Odhlásit</string>
+    <string name="com_facebook_loginview_cancel_action">Zrušit</string>
+    <string name="com_facebook_loading">Načítání…</string>
+    <string name="com_facebook_internet_permission_error_title">Chyba AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">Webové přihlášení vyžaduje oprávnění použít INTERNET</string>
+    <string name="com_facebook_tooltip_default">Novinka! Je jen na vás, které informace chcete s aplikacemi sdílet.</string>
+    <string name="com_facebook_image_download_unknown_error">Při stahování obrázku došlo k nečekané chybě.</string>
+    <string name="com_facebook_share_button_text">Sdílet</string>
+    <string name="com_facebook_send_button_text">Odeslat</string>
+</resources>
diff --git a/facebook/res/values-da/strings.xml b/facebook/res/values-da/strings.xml
new file mode 100644
index 000000000..81d321b45
--- /dev/null
+++ b/facebook/res/values-da/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Synes godt om</string>
+    <string name="com_facebook_like_button_liked">Synes godt om</string>
+    <string name="com_facebook_loginview_log_out_button">Log af</string>
+    <string name="com_facebook_loginview_log_in_button">Log på</string>
+    <string name="com_facebook_loginview_log_in_button_long">Log på med Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Logget på som: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Logget på med Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Log af</string>
+    <string name="com_facebook_loginview_cancel_action">Annuller</string>
+    <string name="com_facebook_loading">Indlæser ...</string>
+    <string name="com_facebook_internet_permission_error_title">Fejl i forbindelse med AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">WebView-login kræver tilladelse til INTERNET</string>
+    <string name="com_facebook_tooltip_default">Nyhed! Du har styringen – vælg de oplysninger, som du vil dele med apps.</string>
+    <string name="com_facebook_image_download_unknown_error">Der opstod en uventet fejl under download af et billede.</string>
+    <string name="com_facebook_share_button_text">Del</string>
+    <string name="com_facebook_send_button_text">Send</string>
+</resources>
diff --git a/facebook/res/values-de/strings.xml b/facebook/res/values-de/strings.xml
new file mode 100644
index 000000000..8f6f6edef
--- /dev/null
+++ b/facebook/res/values-de/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Gefällt mir</string>
+    <string name="com_facebook_like_button_liked">Gefällt dir</string>
+    <string name="com_facebook_loginview_log_out_button">Abmelden</string>
+    <string name="com_facebook_loginview_log_in_button">Anmelden</string>
+    <string name="com_facebook_loginview_log_in_button_long">Über Facebook anmelden</string>
+    <string name="com_facebook_loginview_logged_in_as">Angemeldet als: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Über Facebook angemeldet</string>
+    <string name="com_facebook_loginview_log_out_action">Abmelden</string>
+    <string name="com_facebook_loginview_cancel_action">Abbrechen</string>
+    <string name="com_facebook_loading">Wird geladen ...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest-Fehler</string>
+    <string name="com_facebook_internet_permission_error_message">Die WebView-Anmeldung erfordert die INTERNET-Berechtigung</string>
+    <string name="com_facebook_tooltip_default">Neu! Es liegt ganz an dir – du kannst dir aussuchen, was du mit Apps teilen möchtest.</string>
+    <string name="com_facebook_image_download_unknown_error">Unerwarteter Fehler beim Herunterladen eines Bildes.</string>
+    <string name="com_facebook_share_button_text">Teilen</string>
+    <string name="com_facebook_send_button_text">Senden</string>
+</resources>
diff --git a/facebook/res/values-el/strings.xml b/facebook/res/values-el/strings.xml
new file mode 100644
index 000000000..8547a29b9
--- /dev/null
+++ b/facebook/res/values-el/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Μου αρέσει!</string>
+    <string name="com_facebook_like_button_liked">Σας αρέσει</string>
+    <string name="com_facebook_loginview_log_out_button">Αποσύνδεση</string>
+    <string name="com_facebook_loginview_log_in_button">Σύνδεση</string>
+    <string name="com_facebook_loginview_log_in_button_long">Σύνδεση μέσω Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Έχει γίνει σύνδεση ως: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Έχει γίνει σύνδεση μέσω Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Αποσύνδεση</string>
+    <string name="com_facebook_loginview_cancel_action">Άκυρο</string>
+    <string name="com_facebook_loading">Φόρτωση...</string>
+    <string name="com_facebook_internet_permission_error_title">Σφάλμα AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">Για τη σύνδεση στο WebView απαιτείται σύνδεση INTERNET</string>
+    <string name="com_facebook_tooltip_default">Νέο! Έχετε τον έλεγχο - επιλέξτε ποιες πληροφορίες θέλετε να κοινοποιούνται στις εφαρμογές.</string>
+    <string name="com_facebook_image_download_unknown_error">Προέκυψε μη αναμενόμενο σφάλμα κατά τη λήψη μιας εικόνας.</string>
+    <string name="com_facebook_share_button_text">Κοινοποίηση</string>
+    <string name="com_facebook_send_button_text">Αποστολή</string>
+</resources>
diff --git a/facebook/res/values-es-rES/strings.xml b/facebook/res/values-es-rES/strings.xml
new file mode 100644
index 000000000..628fb3b8f
--- /dev/null
+++ b/facebook/res/values-es-rES/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Me gusta</string>
+    <string name="com_facebook_like_button_liked">Te gusta</string>
+    <string name="com_facebook_loginview_log_out_button">Salir</string>
+    <string name="com_facebook_loginview_log_in_button">Inicio de sesión</string>
+    <string name="com_facebook_loginview_log_in_button_long">Iniciar sesión con Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Sesión iniciada como: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Sesión iniciada con Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Salir</string>
+    <string name="com_facebook_loginview_cancel_action">Cancelar</string>
+    <string name="com_facebook_loading">Cargando...</string>
+    <string name="com_facebook_internet_permission_error_title">Error de AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">El inicio de sesión de WebView requiere permiso para INTERNET</string>
+    <string name="com_facebook_tooltip_default">Novedad: Tú eres quien controla y elige la información que quieres compartir con las aplicaciones.</string>
+    <string name="com_facebook_image_download_unknown_error">Error inesperado al descargar una imagen.</string>
+    <string name="com_facebook_share_button_text">Compartir</string>
+    <string name="com_facebook_send_button_text">Enviar</string>
+</resources>
diff --git a/facebook/res/values-es/strings.xml b/facebook/res/values-es/strings.xml
index 78af85e6c..8583881bb 100644
--- a/facebook/res/values-es/strings.xml
+++ b/facebook/res/values-es/strings.xml
@@ -20,14 +20,20 @@
 -->
 
 <resources>
-    <string name="com_facebook_loginview_log_out_button">Cerrar sesión</string>
-    <string name="com_facebook_loginview_log_in_button">Iniciar sesión con Facebook</string>
+    <string name="com_facebook_like_button_not_liked">Me gusta</string>
+    <string name="com_facebook_like_button_liked">Te gusta</string>
+    <string name="com_facebook_loginview_log_out_button">Salir</string>
+    <string name="com_facebook_loginview_log_in_button">Inicio de sesión</string>
+    <string name="com_facebook_loginview_log_in_button_long">Iniciar sesión con Facebook</string>
     <string name="com_facebook_loginview_logged_in_as">Sesión iniciada como: %1$s</string>
     <string name="com_facebook_loginview_logged_in_using_facebook">Sesión iniciada con Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Cerrar sesión</string>
+    <string name="com_facebook_loginview_log_out_action">Salir</string>
     <string name="com_facebook_loginview_cancel_action">Cancelar</string>
-    <string name="com_facebook_loading">Cargando</string>
-    <string name="com_facebook_internet_permission_error_title">Error de AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">WebView inicio de sesión requiere permiso INTERNET</string>
-    <string name="com_facebook_image_download_unknown_error">Error al descargar la imagen.</string>
+    <string name="com_facebook_loading">Cargando…</string>
+    <string name="com_facebook_internet_permission_error_title">Error AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">El inicio de sesión a la web requiere permiso de conexión a internet</string>
+    <string name="com_facebook_tooltip_default">¡Nuevo! Tú tienes el control: elige qué información quieres compartir con las aplicaciones.</string>
+    <string name="com_facebook_image_download_unknown_error">Se produjo un error inesperado al descargar una imagen.</string>
+    <string name="com_facebook_share_button_text">Compartir</string>
+    <string name="com_facebook_send_button_text">Enviar</string>
 </resources>
diff --git a/facebook/res/values-fi/strings.xml b/facebook/res/values-fi/strings.xml
new file mode 100644
index 000000000..f0414e2ea
--- /dev/null
+++ b/facebook/res/values-fi/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Tykkää</string>
+    <string name="com_facebook_like_button_liked">Tykätty</string>
+    <string name="com_facebook_loginview_log_out_button">Kirjaudu ulos</string>
+    <string name="com_facebook_loginview_log_in_button">Kirjaudu sisään</string>
+    <string name="com_facebook_loginview_log_in_button_long">Kirjaudu sisään Facebookin avulla</string>
+    <string name="com_facebook_loginview_logged_in_as">Sisäänkirjautunut nimellä: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Sisäänkirjautunut Facebookin avulla</string>
+    <string name="com_facebook_loginview_log_out_action">Kirjaudu ulos</string>
+    <string name="com_facebook_loginview_cancel_action">Peruuta</string>
+    <string name="com_facebook_loading">Ladataan...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest-virhe</string>
+    <string name="com_facebook_internet_permission_error_message">WebView-kirjautuminen edellyttää INTERNET-käyttöoikeutta</string>
+    <string name="com_facebook_tooltip_default">Uutta! Sinä päätät – valitse, mitä haluat jakaa sovellusten kanssa.</string>
+    <string name="com_facebook_image_download_unknown_error">Odottamaton virhe kuvan palvelimesta lataamisen aikana.</string>
+    <string name="com_facebook_share_button_text">Jaa</string>
+    <string name="com_facebook_send_button_text">Lähetä</string>
+</resources>
diff --git a/facebook/res/values-fr/strings.xml b/facebook/res/values-fr/strings.xml
new file mode 100644
index 000000000..3a1428c78
--- /dev/null
+++ b/facebook/res/values-fr/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">J’aime</string>
+    <string name="com_facebook_like_button_liked">J’aime déjà</string>
+    <string name="com_facebook_loginview_log_out_button">Déconnexion</string>
+    <string name="com_facebook_loginview_log_in_button">Connexion</string>
+    <string name="com_facebook_loginview_log_in_button_long">Connexion avec Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Connexion en tant que : %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Connecté(e) à l’aide de Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Déconnexion</string>
+    <string name="com_facebook_loginview_cancel_action">Annuler</string>
+    <string name="com_facebook_loading">Chargement...</string>
+    <string name="com_facebook_internet_permission_error_title">Erreur AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">La connexion au web nécessite une autorisation d’accéder à INTERNET</string>
+    <string name="com_facebook_tooltip_default">Nouveau ! Choisissez les informations que vous souhaitez partager avec les applications.</string>
+    <string name="com_facebook_image_download_unknown_error">Une erreur inattendue s’est produite au moment de télécharger une image.</string>
+    <string name="com_facebook_share_button_text">Partager</string>
+    <string name="com_facebook_send_button_text">Envoyer</string>
+</resources>
diff --git a/facebook/res/values-gu/strings.xml b/facebook/res/values-gu/strings.xml
new file mode 100644
index 000000000..11b6fa85f
--- /dev/null
+++ b/facebook/res/values-gu/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">પસંદ કરો</string>
+    <string name="com_facebook_like_button_liked">પસંદ કર્યું</string>
+    <string name="com_facebook_loginview_log_out_button">લૉગ આઉટ કરો</string>
+    <string name="com_facebook_loginview_log_in_button">લૉગ ઇન કરો</string>
+    <string name="com_facebook_loginview_log_in_button_long">ફેસબુક સાથે લૉગ ઇન કરો</string>
+    <string name="com_facebook_loginview_logged_in_as">આ તરીકે લૉગ ઇન થયાં: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">ફેસબુકનો ઉપયોગ કરીને લૉગ ઇન કરો</string>
+    <string name="com_facebook_loginview_log_out_action">લૉગ આઉટ કરો</string>
+    <string name="com_facebook_loginview_cancel_action">રદ કરો</string>
+    <string name="com_facebook_loading">લોડ કરી રહ્યાં છે...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest ભૂલ</string>
+    <string name="com_facebook_internet_permission_error_message">WebView લૉગિન માટે ઇન્ટરનેટ પરવાગની આવશ્યક છે</string>
+    <string name="com_facebook_tooltip_default">નવું! તમે નિયંત્રણ કરો છો - તમે એપ્લિકેશન્સ સાથે કઈ માહિતી શેર કરવા માંગો છો તે પસંદ કરો.</string>
+    <string name="com_facebook_image_download_unknown_error">છબી ડાઉનલોડ કરતી વખતે અનપેક્ષિત ભૂલ આવી.</string>
+    <string name="com_facebook_share_button_text">શેર કરો</string>
+    <string name="com_facebook_send_button_text">મોકલો</string>
+</resources>
diff --git a/facebook/res/values-hi/strings.xml b/facebook/res/values-hi/strings.xml
new file mode 100644
index 000000000..6395da2e5
--- /dev/null
+++ b/facebook/res/values-hi/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">पसंद करें</string>
+    <string name="com_facebook_like_button_liked">पसंद किया</string>
+    <string name="com_facebook_loginview_log_out_button">लॉग आउट</string>
+    <string name="com_facebook_loginview_log_in_button">लॉग इन करें</string>
+    <string name="com_facebook_loginview_log_in_button_long">Facebook से लॉग इन करें</string>
+    <string name="com_facebook_loginview_logged_in_as">इस रूप में लॉग इन किया: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook का उपयोग करके लॉग इन किया हुआ है</string>
+    <string name="com_facebook_loginview_log_out_action">लॉग आउट</string>
+    <string name="com_facebook_loginview_cancel_action">रद्द करें</string>
+    <string name="com_facebook_loading">लोड हो रहा है...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest गलती</string>
+    <string name="com_facebook_internet_permission_error_message">WebView लॉग इन के लिए INTERNET अनुमति की आवश्यकता है</string>
+    <string name="com_facebook_tooltip_default">नया! आप नियंत्रण में हैं - चुनें कि आप एप्लिकेशन से कौन-सी जानकारी साझा करना चाहते हैं.</string>
+    <string name="com_facebook_image_download_unknown_error">एक चित्र डाउनलोड करते समय अनपेक्षित गलती हुई.</string>
+    <string name="com_facebook_share_button_text">साझा करें</string>
+    <string name="com_facebook_send_button_text">भेजें</string>
+</resources>
diff --git a/facebook/res/values-hr/strings.xml b/facebook/res/values-hr/strings.xml
new file mode 100644
index 000000000..dbe469a53
--- /dev/null
+++ b/facebook/res/values-hr/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Sviđa mi se</string>
+    <string name="com_facebook_like_button_liked">Označeno sa "sviđa mi se"</string>
+    <string name="com_facebook_loginview_log_out_button">Odjavi se</string>
+    <string name="com_facebook_loginview_log_in_button">Prijavi se</string>
+    <string name="com_facebook_loginview_log_in_button_long">Prijava putem Facebooka</string>
+    <string name="com_facebook_loginview_logged_in_as">Prijavljen kao: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Prijavljen putem Facebooka</string>
+    <string name="com_facebook_loginview_log_out_action">Odjavi se</string>
+    <string name="com_facebook_loginview_cancel_action">Odustani</string>
+    <string name="com_facebook_loading">Učitavanje u tijeku…</string>
+    <string name="com_facebook_internet_permission_error_title">Pogreška datoteke AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">Za prijavu u aplikaciju WebView potrebna je dozvola INTERNET</string>
+    <string name="com_facebook_tooltip_default">Novo! Vi odlučujete – odaberite koje informacije želite podijeliti u aplikacijama.</string>
+    <string name="com_facebook_image_download_unknown_error">Prilikom preuzimanja slike došlo je do neočekivane pogreške.</string>
+    <string name="com_facebook_share_button_text">Dijeli</string>
+    <string name="com_facebook_send_button_text">Pošalji</string>
+</resources>
diff --git a/facebook/res/values-hu/strings.xml b/facebook/res/values-hu/strings.xml
new file mode 100644
index 000000000..fac7ae504
--- /dev/null
+++ b/facebook/res/values-hu/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Tetszik</string>
+    <string name="com_facebook_like_button_liked">Kedveled</string>
+    <string name="com_facebook_loginview_log_out_button">Kijelentkezés</string>
+    <string name="com_facebook_loginview_log_in_button">Bejelentkezés</string>
+    <string name="com_facebook_loginview_log_in_button_long">Bejelentkezés a Facebook használatával</string>
+    <string name="com_facebook_loginview_logged_in_as">Bejelentkezve %1$s néven</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Bejelentkezve a Facebook használatával</string>
+    <string name="com_facebook_loginview_log_out_action">Kijelentkezés</string>
+    <string name="com_facebook_loginview_cancel_action">Törlés</string>
+    <string name="com_facebook_loading">Betöltés...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest-hiba</string>
+    <string name="com_facebook_internet_permission_error_message">A webes bejelentkezéshez szükséges a jogosultság az internet használatára.</string>
+    <string name="com_facebook_tooltip_default">Újdonság! A döntés a kezedben van: kiválaszthatod, hogy milyen adatokat osztasz meg az alkalmazásokkal.</string>
+    <string name="com_facebook_image_download_unknown_error">Váratlan hiba történt egy kép betöltése közben.</string>
+    <string name="com_facebook_share_button_text">Megosztás</string>
+    <string name="com_facebook_send_button_text">Küldés</string>
+</resources>
diff --git a/facebook/res/values-id/strings.xml b/facebook/res/values-id/strings.xml
new file mode 100644
index 000000000..b52c7972e
--- /dev/null
+++ b/facebook/res/values-id/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Suka</string>
+    <string name="com_facebook_like_button_liked">Disukai</string>
+    <string name="com_facebook_loginview_log_out_button">Keluar</string>
+    <string name="com_facebook_loginview_log_in_button">Masuk</string>
+    <string name="com_facebook_loginview_log_in_button_long">Masuk menggunakan Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Masuk sebagai: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Masuk menggunakan Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Keluar</string>
+    <string name="com_facebook_loginview_cancel_action">Batal</string>
+    <string name="com_facebook_loading">Memuat...</string>
+    <string name="com_facebook_internet_permission_error_title">Kesalahan AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">Masuk WebView memerlukan izin INTERNET</string>
+    <string name="com_facebook_tooltip_default">Baru! Anda memegang kendali - pilih info yang ingin Anda bagikan dengan aplikasi.</string>
+    <string name="com_facebook_image_download_unknown_error">Kesalahan yang tidak diharapkan saat mengunduh gambar.</string>
+    <string name="com_facebook_share_button_text">Berbagi</string>
+    <string name="com_facebook_send_button_text">Kirim</string>
+</resources>
diff --git a/facebook/res/values-it/strings.xml b/facebook/res/values-it/strings.xml
new file mode 100644
index 000000000..0c943b035
--- /dev/null
+++ b/facebook/res/values-it/strings.xml
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Mi piace</string>
+    <string name="com_facebook_like_button_liked">Ti piace</string>
+    <string name="com_facebook_loginview_log_out_button">Esci</string>
+    <string name="com_facebook_loginview_log_in_button">Accedi</string>
+    <string name="com_facebook_loginview_log_in_button_long">Accedi con Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Accesso effettuato come: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Accesso effettuato con Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Esci</string>
+    <string name="com_facebook_loginview_cancel_action">Annulla</string>
+    <string name="com_facebook_loading">Caricamento...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest Error</string>
+    <string name="com_facebook_internet_permission_error_message">L\'accesso tramite Web richiede
+        l\'autorizzazione INTERNET</string>
+    <string name="com_facebook_tooltip_default">Novità! Il controllo è nelle tue mani: scegli quali informazioni condividere con le applicazioni.</string>
+    <string name="com_facebook_image_download_unknown_error">Errore imprevisto durante il
+        caricamento di un\'immagine.</string>
+    <string name="com_facebook_share_button_text">Condividi</string>
+    <string name="com_facebook_send_button_text">Invia</string>
+</resources>
diff --git a/facebook/res/values-ja/strings.xml b/facebook/res/values-ja/strings.xml
new file mode 100644
index 000000000..72993768b
--- /dev/null
+++ b/facebook/res/values-ja/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">いいね！</string>
+    <string name="com_facebook_like_button_liked">いいね！済み</string>
+    <string name="com_facebook_loginview_log_out_button">ログアウト</string>
+    <string name="com_facebook_loginview_log_in_button">ログイン</string>
+    <string name="com_facebook_loginview_log_in_button_long">Facebookでログイン</string>
+    <string name="com_facebook_loginview_logged_in_as">次のユーザーとしてログイン中: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Facebookを使用してログイン中</string>
+    <string name="com_facebook_loginview_log_out_action">ログアウト</string>
+    <string name="com_facebook_loginview_cancel_action">キャンセル</string>
+    <string name="com_facebook_loading">読み込み中...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifestエラー</string>
+    <string name="com_facebook_internet_permission_error_message">WebViewログインにはINTERNET権限が必要です</string>
+    <string name="com_facebook_tooltip_default">新機能！アプリと共有する情報をコントロールできます。</string>
+    <string name="com_facebook_image_download_unknown_error">画像のダウンロード中に予期しないエラーが発生しました。</string>
+    <string name="com_facebook_share_button_text">シェア</string>
+    <string name="com_facebook_send_button_text">送信</string>
+</resources>
diff --git a/facebook/res/values-kn/strings.xml b/facebook/res/values-kn/strings.xml
new file mode 100644
index 000000000..ccda2eed9
--- /dev/null
+++ b/facebook/res/values-kn/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">ಇಷ್ಟವಾಗಿದೆ</string>
+    <string name="com_facebook_like_button_liked">ಇಷ್ಟಪಟ್ಟಿದ್ದಾರೆ</string>
+    <string name="com_facebook_loginview_log_out_button">ಲಾಗ್‌ ಔಟ್‌</string>
+    <string name="com_facebook_loginview_log_in_button">ಲಾಗ್‌ ಇನ್‌</string>
+    <string name="com_facebook_loginview_log_in_button_long">Facebook ಮೂಲಕ ಲಾಗ್‌ ಇನ್‌ ಮಾಡಿ</string>
+    <string name="com_facebook_loginview_logged_in_as">ಇದರಂತೆ ಲಾಗಿನ್‌ ಮಾಡಲಾಗಿದೆ: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ಬಳಸಿಕೊಂಡು ಲಾಗಿನ್‌ ಮಾಡಲಾಗಿದೆ</string>
+    <string name="com_facebook_loginview_log_out_action">ಲಾಗ್‌ ಔಟ್‌</string>
+    <string name="com_facebook_loginview_cancel_action">ರದ್ದುಮಾಡು</string>
+    <string name="com_facebook_loading">ಲೋಡ್‌ ಆಗುತ್ತಿದೆ...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest ದೋಷ</string>
+    <string name="com_facebook_internet_permission_error_message">WebView ಲಾಗಿನ್‌ಗೆ ಇಂಟರ್ನೆಟ್ ಅನುಮತಿಯ ಅಗತ್ಯವಿದೆ</string>
+    <string name="com_facebook_tooltip_default">ಹೊಸ! ನೀವು ನಿಯಂತ್ರಣದಲ್ಲಿರುವಿರಿ - ನೀವು ಅಪ್ಲಿಕೇಶನ್‌ಗಳನ್ನು ಬಳಸಿಕೊಂಡು ಹಂಚಿಕೊಳ್ಳಲು ಬಯಸುವ ವಿಷಯವನ್ನು ಆರಿಸಿ.</string>
+    <string name="com_facebook_image_download_unknown_error">ಚಿತ್ರವನ್ನು ಡೌನ್‌ಲೋಡ್‌ ಮಾಡುವಾಗ ಅನಿರೀಕ್ಷಿತ ದೋಷ ಕಂಡುಬಂದಿದೆ.</string>
+    <string name="com_facebook_share_button_text">ಹಂಚಿಕೊಳ್ಳಿ</string>
+    <string name="com_facebook_send_button_text">ಕಳುಹಿಸಿ</string>
+</resources>
diff --git a/facebook/res/values-ko/strings.xml b/facebook/res/values-ko/strings.xml
new file mode 100644
index 000000000..fe4bf371e
--- /dev/null
+++ b/facebook/res/values-ko/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">좋아요</string>
+    <string name="com_facebook_like_button_liked">좋아요</string>
+    <string name="com_facebook_loginview_log_out_button">로그아웃</string>
+    <string name="com_facebook_loginview_log_in_button">로그인</string>
+    <string name="com_facebook_loginview_log_in_button_long">Facebook으로 로그인</string>
+    <string name="com_facebook_loginview_logged_in_as">로그인할 이름: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook 계정으로 로그인함</string>
+    <string name="com_facebook_loginview_log_out_action">로그아웃</string>
+    <string name="com_facebook_loginview_cancel_action">취소</string>
+    <string name="com_facebook_loading">읽어들이는 중...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest 오류</string>
+    <string name="com_facebook_internet_permission_error_message">WebView에 로그인하려면 인터넷 권한이 필요합니다</string>
+    <string name="com_facebook_tooltip_default">새로운 기능! 이제 앱과 어떤 정보를 공유할지 자유롭게 선택할 수 있습니다.</string>
+    <string name="com_facebook_image_download_unknown_error">이미지를 다운로드하는 중 예기치 않은 오류가 발생했습니다.</string>
+    <string name="com_facebook_share_button_text">공유하기</string>
+    <string name="com_facebook_send_button_text">보내기</string>
+</resources>
diff --git a/facebook/res/values-ml/strings.xml b/facebook/res/values-ml/strings.xml
new file mode 100644
index 000000000..60d537c59
--- /dev/null
+++ b/facebook/res/values-ml/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">ലൈക്കുചെയ്യുക</string>
+    <string name="com_facebook_like_button_liked">ലൈക്കുചെയ്‌‌തു</string>
+    <string name="com_facebook_loginview_log_out_button">ലോഗ്ഔട്ട് ചെയ്യുക</string>
+    <string name="com_facebook_loginview_log_in_button">ലോഗിൻ ചെയ്യുക</string>
+    <string name="com_facebook_loginview_log_in_button_long">Facebook ഉപയോഗിച്ച് ലോഗിൻ ചെയ്യുക</string>
+    <string name="com_facebook_loginview_logged_in_as">ഇതുപ്രകാരം ലോഗിൻ ചെയ്യുക: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ഉപയോഗിച്ച് ലോഗിൻ ചെയ്‌തു</string>
+    <string name="com_facebook_loginview_log_out_action">ലോഗ്ഔട്ട് ചെയ്യുക</string>
+    <string name="com_facebook_loginview_cancel_action">റദ്ദാക്കുക</string>
+    <string name="com_facebook_loading">ലോഡുചെയ്യുന്നു...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest പിശക്</string>
+    <string name="com_facebook_internet_permission_error_message">WebView ലോഗിന് ഇന്റർനെറ്റ് അനുമതി ആവശ്യമാണ്</string>
+    <string name="com_facebook_tooltip_default">പുതിയത്! നിങ്ങൾ നിയന്ത്രണത്തിലാണ് - നിങ്ങൾക്ക് ആപ്ലിക്കേഷനുകളുമായി പങ്കിടേണ്ടതുണ്ടെങ്കിൽ തിരഞ്ഞെടുക്കുക.</string>
+    <string name="com_facebook_image_download_unknown_error">ചിത്രം ഡൗൺലോഡുചെയ്യുന്നതിൽ അപ്രതീക്ഷിത പിശക് സംഭവിച്ചു.</string>
+    <string name="com_facebook_share_button_text">പങ്കിടുക</string>
+    <string name="com_facebook_send_button_text">അയയ്‌ക്കുക</string>
+</resources>
diff --git a/facebook/res/values-mr/strings.xml b/facebook/res/values-mr/strings.xml
new file mode 100644
index 000000000..786b0ea98
--- /dev/null
+++ b/facebook/res/values-mr/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">आवडले</string>
+    <string name="com_facebook_like_button_liked">आवडलेले</string>
+    <string name="com_facebook_loginview_log_out_button">लॉग आउट करा</string>
+    <string name="com_facebook_loginview_log_in_button">लॉग इन करा</string>
+    <string name="com_facebook_loginview_log_in_button_long">फेसबुकसह लॉग इन करा</string>
+    <string name="com_facebook_loginview_logged_in_as">म्हणून लॉग इन केले: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">फेसबुक वापरून लॉग इन केले</string>
+    <string name="com_facebook_loginview_log_out_action">लॉग आउट करा</string>
+    <string name="com_facebook_loginview_cancel_action">रद्द करा</string>
+    <string name="com_facebook_loading">लोड होत आहे...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest त्रुटी</string>
+    <string name="com_facebook_internet_permission_error_message">वेबदृश्य लॉग इन आवश्यकता इंटरनेट परवानगी</string>
+    <string name="com_facebook_tooltip_default">नवीन! आपण नियंत्रणात आहात - आपण कोणती माहिती अनुप्रयोगांसह शेअर करू इच्छिता ते निवडा.</string>
+    <string name="com_facebook_image_download_unknown_error">प्रतिमा डाउनलोड करताना अनपेक्षित त्रुटी.</string>
+    <string name="com_facebook_share_button_text">सामायिक करा</string>
+    <string name="com_facebook_send_button_text">पाठवा</string>
+</resources>
diff --git a/facebook/res/values-ms/strings.xml b/facebook/res/values-ms/strings.xml
new file mode 100644
index 000000000..2c5b536f2
--- /dev/null
+++ b/facebook/res/values-ms/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Suka</string>
+    <string name="com_facebook_like_button_liked">Disukai</string>
+    <string name="com_facebook_loginview_log_out_button">Log keluar</string>
+    <string name="com_facebook_loginview_log_in_button">Log masuk</string>
+    <string name="com_facebook_loginview_log_in_button_long">Log masuk dengan Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Dilog masuk sebagai: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Dilog masuk menggunakan Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Log keluar</string>
+    <string name="com_facebook_loginview_cancel_action">Batal</string>
+    <string name="com_facebook_loading">Memuatkan...</string>
+    <string name="com_facebook_internet_permission_error_title">Ralat AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">Log masuk WebView memerlukan kebenaran INTERNET</string>
+    <string name="com_facebook_tooltip_default">Baru! Anda yang mengawal - pilih maklumat yang anda ingin kongsi dengan aplikasi.</string>
+    <string name="com_facebook_image_download_unknown_error">Ralat tidak dijangka ketika memuat turun imej.</string>
+    <string name="com_facebook_share_button_text">Kongsi</string>
+    <string name="com_facebook_send_button_text">Hantar</string>
+</resources>
diff --git a/facebook/res/values-nb/strings.xml b/facebook/res/values-nb/strings.xml
new file mode 100644
index 000000000..0e39cc0b3
--- /dev/null
+++ b/facebook/res/values-nb/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Liker</string>
+    <string name="com_facebook_like_button_liked">Likt</string>
+    <string name="com_facebook_loginview_log_out_button">Logg ut</string>
+    <string name="com_facebook_loginview_log_in_button">Logg inn</string>
+    <string name="com_facebook_loginview_log_in_button_long">Logg inn med Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Logget inn som: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Logget inn med Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Logg ut</string>
+    <string name="com_facebook_loginview_cancel_action">Avbryt</string>
+    <string name="com_facebook_loading">Laster inn …</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest-feil</string>
+    <string name="com_facebook_internet_permission_error_message">Webvisning-innlogging krever INTERNETT-tillatelse</string>
+    <string name="com_facebook_tooltip_default">Nyhet! Du bestemmer – velg hvilke opplysninger du vil dele med appene.</string>
+    <string name="com_facebook_image_download_unknown_error">Det oppstod en uventet feil ved nedlasting av et bilde.</string>
+    <string name="com_facebook_share_button_text">Del</string>
+    <string name="com_facebook_send_button_text">Send</string>
+</resources>
diff --git a/facebook/res/values-nl/strings.xml b/facebook/res/values-nl/strings.xml
new file mode 100644
index 000000000..60f198139
--- /dev/null
+++ b/facebook/res/values-nl/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Vind ik leuk</string>
+    <string name="com_facebook_like_button_liked">Vind ik leuk</string>
+    <string name="com_facebook_loginview_log_out_button">Afmelden</string>
+    <string name="com_facebook_loginview_log_in_button">Aanmelden</string>
+    <string name="com_facebook_loginview_log_in_button_long">Aanmelden met Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Aangemeld als: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Aangemeld via Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Afmelden</string>
+    <string name="com_facebook_loginview_cancel_action">Annuleren</string>
+    <string name="com_facebook_loading">Laden…</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest Error</string>
+    <string name="com_facebook_internet_permission_error_message">Voor aanmelding via webweergave is de toestemming INTERNET vereist</string>
+    <string name="com_facebook_tooltip_default">Nieuw! Jij hebt de controle. Kies welke informatie je met apps wilt delen.</string>
+    <string name="com_facebook_image_download_unknown_error">Onverwachte fout tijdens het downloaden van een afbeelding.</string>
+    <string name="com_facebook_share_button_text">Delen</string>
+    <string name="com_facebook_send_button_text">Verzenden</string>
+</resources>
diff --git a/facebook/res/values-pa/strings.xml b/facebook/res/values-pa/strings.xml
new file mode 100644
index 000000000..333626cfb
--- /dev/null
+++ b/facebook/res/values-pa/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">ਪਸੰਦ ਕਰੋ</string>
+    <string name="com_facebook_like_button_liked">ਪਸੰਦ ਕੀਤਾ ਗਿਆ</string>
+    <string name="com_facebook_loginview_log_out_button">ਲੌਗ ਆਉਟ ਕਰੋ</string>
+    <string name="com_facebook_loginview_log_in_button">ਲੌਗ ਇਨ ਕਰੋ</string>
+    <string name="com_facebook_loginview_log_in_button_long">Facebook ਦੇ ਨਾਲ ਲੌਗ ਇਨ ਕਰੋ</string>
+    <string name="com_facebook_loginview_logged_in_as">ਇਸ ਵੱਜੋਂ ਲੌਗ ਇਨ ਕੀਤਾ ਗਿਆ: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ਦਾ ਉਪਯੋਗ ਕਰਕੇ ਲੌਗ ਇਨ ਕੀਤਾ ਗਿਆ</string>
+    <string name="com_facebook_loginview_log_out_action">ਲੌਗ ਆਉਟ ਕਰੋ</string>
+    <string name="com_facebook_loginview_cancel_action">ਰੱਦ ਕਰੋ</string>
+    <string name="com_facebook_loading">ਲੋਡ ਕਰ ਰਿਹਾ ਹੈ...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest ਤਰੁੱਟੀ</string>
+    <string name="com_facebook_internet_permission_error_message">WebView ਲੌਗ ਨੂੰ ਇੰਟਰਨੈੱਟ ਅਨੁਮਤੀ ਦੀ ਲੋੜ ਹੁੰਦੀ ਹੈ</string>
+    <string name="com_facebook_tooltip_default">ਨਵਾਂ! ਤੁ\ਸੀਂ ਨਿਯੰਤਰਣ ਵਿੱਚ ਹੋ - ਉਹ ਜਾਣਕਾਰੀ ਚੁਣੋ ਜੋ ਤੁਸੀਂ ਐਪਸ ਦੇ ਨਾਲ ਸਾਂਝੀ ਕਰਨੀ ਚਾਹੁੰਦੇ ਹੋ।</string>
+    <string name="com_facebook_image_download_unknown_error">ਕਿਸੇ ਤਸਵੀਰ ਨੂੰ ਡਾਉਨਲੋਡ ਕਰਨ ਵੇਲੇ ਅਗਿਆਤ ਤਰੁੱਟੀ ਹੋ ਗਈ।</string>
+    <string name="com_facebook_share_button_text">ਸਾਂਝਾ ਕਰੋ</string>
+    <string name="com_facebook_send_button_text">ਭੇਜੋ</string>
+</resources>
diff --git a/facebook/res/values-pl/strings.xml b/facebook/res/values-pl/strings.xml
new file mode 100644
index 000000000..22e04826b
--- /dev/null
+++ b/facebook/res/values-pl/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Lubię to!</string>
+    <string name="com_facebook_like_button_liked">Polubione</string>
+    <string name="com_facebook_loginview_log_out_button">Wyloguj się</string>
+    <string name="com_facebook_loginview_log_in_button">Zaloguj się</string>
+    <string name="com_facebook_loginview_log_in_button_long">Zaloguj się przez Facebooka</string>
+    <string name="com_facebook_loginview_logged_in_as">Zalogowano jako: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Zalogowano przez Facebooka</string>
+    <string name="com_facebook_loginview_log_out_action">Wyloguj się</string>
+    <string name="com_facebook_loginview_cancel_action">Anuluj</string>
+    <string name="com_facebook_loading">Ładowanie...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest Error</string>
+    <string name="com_facebook_internet_permission_error_message">Logowanie się do sieci wymaga zezwolenia na dostęp do INTERNETU</string>
+    <string name="com_facebook_tooltip_default">Nowość! Masz pełną kontrolę – określ, jakie informacje chcesz udostępniać aplikacjom.</string>
+    <string name="com_facebook_image_download_unknown_error">Nieoczekiwany błąd podczas pobierania obrazu.</string>
+    <string name="com_facebook_share_button_text">Udostępnij</string>
+    <string name="com_facebook_send_button_text">Wyślij</string>
+</resources>
diff --git a/facebook/res/values-pt-rPT/strings.xml b/facebook/res/values-pt-rPT/strings.xml
new file mode 100644
index 000000000..2ffea467d
--- /dev/null
+++ b/facebook/res/values-pt-rPT/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Gosto</string>
+    <string name="com_facebook_like_button_liked">Gostei</string>
+    <string name="com_facebook_loginview_log_out_button">Terminar sessão</string>
+    <string name="com_facebook_loginview_log_in_button">Iniciar sessão</string>
+    <string name="com_facebook_loginview_log_in_button_long">Iniciar sessão com o Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Com sessão iniciada como: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Com sessão iniciada através do Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Terminar sessão</string>
+    <string name="com_facebook_loginview_cancel_action">Cancelar</string>
+    <string name="com_facebook_loading">A carregar...</string>
+    <string name="com_facebook_internet_permission_error_title">Erro AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">O início de sessão WebView necessita de permissão para aceder à INTERNET</string>
+    <string name="com_facebook_tooltip_default">Novidade! Tens o controlo: escolhe a informação que pretendes partilhar com as aplicações.</string>
+    <string name="com_facebook_image_download_unknown_error">Ocorreu um erro inesperado ao descarregar uma imagem.</string>
+    <string name="com_facebook_share_button_text">Partilhar</string>
+    <string name="com_facebook_send_button_text">Enviar</string>
+</resources>
diff --git a/facebook/res/values-pt/strings.xml b/facebook/res/values-pt/strings.xml
new file mode 100644
index 000000000..75dd91815
--- /dev/null
+++ b/facebook/res/values-pt/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Curtir</string>
+    <string name="com_facebook_like_button_liked">Curtiu</string>
+    <string name="com_facebook_loginview_log_out_button">Sair</string>
+    <string name="com_facebook_loginview_log_in_button">Entrar</string>
+    <string name="com_facebook_loginview_log_in_button_long">Entrar com o Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Conectado como: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Você entrou usando o Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Sair</string>
+    <string name="com_facebook_loginview_cancel_action">Cancelar</string>
+    <string name="com_facebook_loading">Carregando...</string>
+    <string name="com_facebook_internet_permission_error_title">Erro no AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">A permissão de INTERNET é necessária para fazer o login WebView</string>
+    <string name="com_facebook_tooltip_default">Novidade! Você está no controle - escolha quais informações quer compartilhar com os aplicativos.</string>
+    <string name="com_facebook_image_download_unknown_error">Erro inesperado ao baixar uma imagem.</string>
+    <string name="com_facebook_share_button_text">Compartilhar</string>
+    <string name="com_facebook_send_button_text">Envio</string>
+</resources>
diff --git a/facebook/res/values-ru/strings.xml b/facebook/res/values-ru/strings.xml
new file mode 100644
index 000000000..a0d33b755
--- /dev/null
+++ b/facebook/res/values-ru/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Нравится</string>
+    <string name="com_facebook_like_button_liked">Понравилось</string>
+    <string name="com_facebook_loginview_log_out_button">Выход</string>
+    <string name="com_facebook_loginview_log_in_button">Вход</string>
+    <string name="com_facebook_loginview_log_in_button_long">Вход через Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Вы вошли как: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Выполнен вход с помощью Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Выход</string>
+    <string name="com_facebook_loginview_cancel_action">Отменить</string>
+    <string name="com_facebook_loading">Загрузка...</string>
+    <string name="com_facebook_internet_permission_error_title">Ошибка AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">Для входа в WebView необходимо разрешение INTERNET</string>
+    <string name="com_facebook_tooltip_default">Новинка! У вас все под контролем — выбирайте, какой информацией вы хотите поделиться с приложениями.</string>
+    <string name="com_facebook_image_download_unknown_error">При загрузке изображения возникла неожиданная ошибка.</string>
+    <string name="com_facebook_share_button_text">Поделиться</string>
+    <string name="com_facebook_send_button_text">Отправить</string>
+</resources>
diff --git a/facebook/res/values-sk/strings.xml b/facebook/res/values-sk/strings.xml
new file mode 100644
index 000000000..ececc84de
--- /dev/null
+++ b/facebook/res/values-sk/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Páči sa mi to</string>
+    <string name="com_facebook_like_button_liked">Páči sa mi to</string>
+    <string name="com_facebook_loginview_log_out_button">Odhlásiť sa</string>
+    <string name="com_facebook_loginview_log_in_button">Prihlásiť sa</string>
+    <string name="com_facebook_loginview_log_in_button_long">Prihlásiť sa cez Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Prihlásený ako: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Prihlásený cez Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Odhlásiť sa</string>
+    <string name="com_facebook_loginview_cancel_action">Zrušiť</string>
+    <string name="com_facebook_loading">Načítava sa...</string>
+    <string name="com_facebook_internet_permission_error_title">Chyba súboru AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">Na prihlásenie sa v rozhraní WebView sa vyžaduje povolenie pre INTERNET</string>
+    <string name="com_facebook_tooltip_default">Novinka! Máte to pod kontrolou: vyberte, ktoré informácie chcete zdieľať s aplikáciami.</string>
+    <string name="com_facebook_image_download_unknown_error">Pri sťahovaní obrázka sa vyskytla neočakávaná chyba.</string>
+    <string name="com_facebook_share_button_text">Zdieľať</string>
+    <string name="com_facebook_send_button_text">Odoslať</string>
+</resources>
diff --git a/facebook/res/values-he/strings.xml b/facebook/res/values-sv/strings.xml
similarity index 54%
rename from facebook/res/values-he/strings.xml
rename to facebook/res/values-sv/strings.xml
index e5c22ea91..b34d73b66 100644
--- a/facebook/res/values-he/strings.xml
+++ b/facebook/res/values-sv/strings.xml
@@ -20,14 +20,20 @@
 -->
 
 <resources>
-    <string name="com_facebook_loginview_log_out_button">התנתק</string>
-    <string name="com_facebook_loginview_log_in_button">התחבר לפייסבוק</string>
-    <string name="com_facebook_loginview_logged_in_as">מחובר בשם: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">מחובר באמצעות פייסבוק</string>
-    <string name="com_facebook_loginview_log_out_action">התנתק</string>
-    <string name="com_facebook_loginview_cancel_action">בטל</string>
-    <string name="com_facebook_loading">..מעלה</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest שגיאת</string>
-    <string name="com_facebook_internet_permission_error_message">ההתחברות לתצוגת אתר דורשת אישור אינטרנט</string>
-    <string name="com_facebook_image_download_unknown_error">שגיאה בעת הורדת תמונה</string>
+    <string name="com_facebook_like_button_not_liked">Gilla</string>
+    <string name="com_facebook_like_button_liked">Gillade</string>
+    <string name="com_facebook_loginview_log_out_button">Logga ut</string>
+    <string name="com_facebook_loginview_log_in_button">Logga in</string>
+    <string name="com_facebook_loginview_log_in_button_long">Logga in med Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Inloggad som: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Inloggad med Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Logga ut</string>
+    <string name="com_facebook_loginview_cancel_action">Avbryt</string>
+    <string name="com_facebook_loading">Laddar ...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest-fel</string>
+    <string name="com_facebook_internet_permission_error_message">Webbinloggning kräver internetbehörighet</string>
+    <string name="com_facebook_tooltip_default">Nyhet! Du bestämmer – välj vilken info du vill dela med appar.</string>
+    <string name="com_facebook_image_download_unknown_error">Oväntat fel vid hämtning av en bild.</string>
+    <string name="com_facebook_share_button_text">Dela</string>
+    <string name="com_facebook_send_button_text">Skicka</string>
 </resources>
diff --git a/facebook/res/values-ta/strings.xml b/facebook/res/values-ta/strings.xml
new file mode 100644
index 000000000..95847eaa9
--- /dev/null
+++ b/facebook/res/values-ta/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">விருப்பம்</string>
+    <string name="com_facebook_like_button_liked">விரும்பப்பட்டது</string>
+    <string name="com_facebook_loginview_log_out_button">வெளியேறு</string>
+    <string name="com_facebook_loginview_log_in_button">உள்நுழைவு</string>
+    <string name="com_facebook_loginview_log_in_button_long">Facebook மூலம் உள்நுழையவும்</string>
+    <string name="com_facebook_loginview_logged_in_as">உள்நுழைந்துள்ள கணக்கு: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook மூலம் உள்நுழையப்பட்டுள்ளது</string>
+    <string name="com_facebook_loginview_log_out_action">வெளியேறு</string>
+    <string name="com_facebook_loginview_cancel_action">ரத்துசெய்</string>
+    <string name="com_facebook_loading">ஏற்றுகிறது...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest பிழை</string>
+    <string name="com_facebook_internet_permission_error_message">WebView இல் உள்நுழைய இணைய அனுமதி தேவை</string>
+    <string name="com_facebook_tooltip_default">புதிது! உங்கள் கட்டுப்பாட்டில் இருப்பதால், பயன்பாடுகளுடன் பகிர வேண்டிய தகவலைத் தேர்வுசெய்யவும்.</string>
+    <string name="com_facebook_image_download_unknown_error">படத்தைப் பதிவிறக்கும் போது பிழை ஏற்பட்டது.</string>
+    <string name="com_facebook_share_button_text">பகிர்</string>
+    <string name="com_facebook_send_button_text">அனுப்பு</string>
+</resources>
diff --git a/facebook/res/values-te/strings.xml b/facebook/res/values-te/strings.xml
new file mode 100644
index 000000000..6c18bdcfa
--- /dev/null
+++ b/facebook/res/values-te/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">ఇష్టంగా గుర్తు పెట్టు</string>
+    <string name="com_facebook_like_button_liked">ఇష్టంగా గుర్తు పెట్టబడింది</string>
+    <string name="com_facebook_loginview_log_out_button">లాగ్ అవుట్ చేయి</string>
+    <string name="com_facebook_loginview_log_in_button">లాగిన్ చేయి</string>
+    <string name="com_facebook_loginview_log_in_button_long">Facebookతో లాగిన్ చేయి</string>
+    <string name="com_facebook_loginview_logged_in_as">ఇలా లాగిన్ చేసారు: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ఉపయోగించి లాగిన్ చేసారు</string>
+    <string name="com_facebook_loginview_log_out_action">లాగ్ అవుట్ చేయి</string>
+    <string name="com_facebook_loginview_cancel_action">రద్దు చేయి</string>
+    <string name="com_facebook_loading">లోడ్ చేస్తోంది...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest లోపం</string>
+    <string name="com_facebook_internet_permission_error_message">వెబ్ వీక్షణ లాగిన్‌కు ఇంటర్నెట్ అనుమతి అవసరం</string>
+    <string name="com_facebook_tooltip_default">సరికొత్తది! మీకు నియంత్రణ ఉంది - మీరు అప్లికేషన్‌లతో ఏ సమాచారాన్ని భాగస్వామ్యం చేయాలనుకుంటున్నారో ఎంచుకోండి.</string>
+    <string name="com_facebook_image_download_unknown_error">చిత్రాన్ని డౌన్‌లోడ్ చేస్తున్నప్పుడు ఊహించని లోపం ఏర్పడింది.</string>
+    <string name="com_facebook_share_button_text">భాగస్వామ్యం చేయండి</string>
+    <string name="com_facebook_send_button_text">పంపు</string>
+</resources>
diff --git a/facebook/res/values-th/strings.xml b/facebook/res/values-th/strings.xml
new file mode 100644
index 000000000..c865963ca
--- /dev/null
+++ b/facebook/res/values-th/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">ถูกใจ</string>
+    <string name="com_facebook_like_button_liked">ถูกใจแล้ว</string>
+    <string name="com_facebook_loginview_log_out_button">ออกจากระบบ</string>
+    <string name="com_facebook_loginview_log_in_button">เข้าสู่ระบบ</string>
+    <string name="com_facebook_loginview_log_in_button_long">เข้าสู่ระบบด้วย Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">เข้าสู่ระบบในชื่อ: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">เข้าสู่ระบบโดยใช้ Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">ออกจากระบบ</string>
+    <string name="com_facebook_loginview_cancel_action">ยกเลิก</string>
+    <string name="com_facebook_loading">กำลังโหลด...</string>
+    <string name="com_facebook_internet_permission_error_title">ข้อผิดพลาดของ AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">การเข้าสู่ระบบ WebView จำเป็นต้องได้รับอนุญาตจากอินเทอร์เน็ต</string>
+    <string name="com_facebook_tooltip_default">ใหม่! คุณเป็นฝ่ายควบคุม โปรดเลือกข้อมูลที่คุณต้องการแชร์ด้วยแอพ</string>
+    <string name="com_facebook_image_download_unknown_error">เกิดข้อผิดพลาดที่ไม่คาดคิดขณะดาวน์โหลดรูปภาพ</string>
+    <string name="com_facebook_share_button_text">แชร์</string>
+    <string name="com_facebook_send_button_text">ส่ง</string>
+</resources>
diff --git a/facebook/res/values-tl/strings.xml b/facebook/res/values-tl/strings.xml
new file mode 100644
index 000000000..4ca5557e2
--- /dev/null
+++ b/facebook/res/values-tl/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Gustuhin</string>
+    <string name="com_facebook_like_button_liked">Nagustuhan</string>
+    <string name="com_facebook_loginview_log_out_button">Mag-log out</string>
+    <string name="com_facebook_loginview_log_in_button">Mag-log in</string>
+    <string name="com_facebook_loginview_log_in_button_long">Mag-log in sa pamamagitan ng Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Naka-log in bilang si: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Naka-log in gamit ang Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Mag-log out</string>
+    <string name="com_facebook_loginview_cancel_action">Kanselahin</string>
+    <string name="com_facebook_loading">Naglo-load...</string>
+    <string name="com_facebook_internet_permission_error_title">Error na AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">Ang pag-log in sa Web ay nangangailangan ng pahintulot sa INTERNET</string>
+    <string name="com_facebook_tooltip_default">Bago! Ikaw ang may kontrol - piliin kung anong impormasyon ang gusto mong ibahagi sa mga app.</string>
+    <string name="com_facebook_image_download_unknown_error">Hindi inaasahang error habang dina-download ang imahe.</string>
+    <string name="com_facebook_share_button_text">Ibahagi</string>
+    <string name="com_facebook_send_button_text">Ipadala</string>
+</resources>
diff --git a/facebook/res/values-tr/strings.xml b/facebook/res/values-tr/strings.xml
new file mode 100644
index 000000000..56d0203e1
--- /dev/null
+++ b/facebook/res/values-tr/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Beğen</string>
+    <string name="com_facebook_like_button_liked">Beğendin</string>
+    <string name="com_facebook_loginview_log_out_button">Çıkış yap</string>
+    <string name="com_facebook_loginview_log_in_button">Giriş yap</string>
+    <string name="com_facebook_loginview_log_in_button_long">Facebook ile giriş yap</string>
+    <string name="com_facebook_loginview_logged_in_as">Giriş yapan: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ile giriş yapıldı</string>
+    <string name="com_facebook_loginview_log_out_action">Çıkış yap</string>
+    <string name="com_facebook_loginview_cancel_action">İptal</string>
+    <string name="com_facebook_loading">Yükleniyor...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest Hatası</string>
+    <string name="com_facebook_internet_permission_error_message">WebView girişi için İNTERNET izni gerekir</string>
+    <string name="com_facebook_tooltip_default">Yeni! Kontrol sende. Uygulamalarla paylaşmak istediğin bilgileri seç.</string>
+    <string name="com_facebook_image_download_unknown_error">Görsel indirilirken beklenmeyen hata.</string>
+    <string name="com_facebook_share_button_text">Paylaş</string>
+    <string name="com_facebook_send_button_text">Gönder</string>
+</resources>
diff --git a/facebook/res/values-vi/strings.xml b/facebook/res/values-vi/strings.xml
new file mode 100644
index 000000000..6d90625ed
--- /dev/null
+++ b/facebook/res/values-vi/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">Thích</string>
+    <string name="com_facebook_like_button_liked">Đã thích</string>
+    <string name="com_facebook_loginview_log_out_button">Đăng xuất</string>
+    <string name="com_facebook_loginview_log_in_button">Đăng nhập</string>
+    <string name="com_facebook_loginview_log_in_button_long">Đăng nhập bằng Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Đã đăng nhập với tư cách là: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Đã đăng nhập bằng Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Đăng xuất</string>
+    <string name="com_facebook_loginview_cancel_action">Hủy</string>
+    <string name="com_facebook_loading">Đang tải...</string>
+    <string name="com_facebook_internet_permission_error_title">Lỗi AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message">Đăng nhập WebView yêu cầu INTERNET cho phép</string>
+    <string name="com_facebook_tooltip_default">Mới! Bạn đang có quyền kiểm soát - hãy chọn thông tin bạn muốn chia sẻ với các ứng dụng.</string>
+    <string name="com_facebook_image_download_unknown_error">Lỗi bất ngờ khi tải ảnh xuống.</string>
+    <string name="com_facebook_share_button_text">Chia sẻ</string>
+    <string name="com_facebook_send_button_text">Gửi</string>
+</resources>
diff --git a/facebook/res/values-iw/strings.xml b/facebook/res/values-zh-rCN/strings.xml
similarity index 54%
rename from facebook/res/values-iw/strings.xml
rename to facebook/res/values-zh-rCN/strings.xml
index e5c22ea91..148020fbf 100644
--- a/facebook/res/values-iw/strings.xml
+++ b/facebook/res/values-zh-rCN/strings.xml
@@ -20,14 +20,20 @@
 -->
 
 <resources>
-    <string name="com_facebook_loginview_log_out_button">התנתק</string>
-    <string name="com_facebook_loginview_log_in_button">התחבר לפייסבוק</string>
-    <string name="com_facebook_loginview_logged_in_as">מחובר בשם: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">מחובר באמצעות פייסבוק</string>
-    <string name="com_facebook_loginview_log_out_action">התנתק</string>
-    <string name="com_facebook_loginview_cancel_action">בטל</string>
-    <string name="com_facebook_loading">..מעלה</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest שגיאת</string>
-    <string name="com_facebook_internet_permission_error_message">ההתחברות לתצוגת אתר דורשת אישור אינטרנט</string>
-    <string name="com_facebook_image_download_unknown_error">שגיאה בעת הורדת תמונה</string>
+    <string name="com_facebook_like_button_not_liked">赞</string>
+    <string name="com_facebook_like_button_liked">赞了</string>
+    <string name="com_facebook_loginview_log_out_button">退出</string>
+    <string name="com_facebook_loginview_log_in_button">登录</string>
+    <string name="com_facebook_loginview_log_in_button_long">使用 Facebook 登录</string>
+    <string name="com_facebook_loginview_logged_in_as">已以%1$s 身份登录</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">已使用 Facebook 登录</string>
+    <string name="com_facebook_loginview_log_out_action">退出</string>
+    <string name="com_facebook_loginview_cancel_action">取消</string>
+    <string name="com_facebook_loading">正在加载...</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest 错误</string>
+    <string name="com_facebook_internet_permission_error_message">Web 登录需要互联网许可</string>
+    <string name="com_facebook_tooltip_default">新增功能！一切任您掌控 — 选择您想通过应用分享的信息。</string>
+    <string name="com_facebook_image_download_unknown_error">下载图片时出现意外错误。</string>
+    <string name="com_facebook_share_button_text">分享</string>
+    <string name="com_facebook_send_button_text">发送</string>
 </resources>
diff --git a/facebook/res/values-zh-rHK/strings.xml b/facebook/res/values-zh-rHK/strings.xml
new file mode 100644
index 000000000..b233194a6
--- /dev/null
+++ b/facebook/res/values-zh-rHK/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">讚好</string>
+    <string name="com_facebook_like_button_liked">已讚好</string>
+    <string name="com_facebook_loginview_log_out_button">登出</string>
+    <string name="com_facebook_loginview_log_in_button">登入</string>
+    <string name="com_facebook_loginview_log_in_button_long">使用 Facebook 登入</string>
+    <string name="com_facebook_loginview_logged_in_as">以以下身分登入：%1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">使用 Facebook 登入</string>
+    <string name="com_facebook_loginview_log_out_action">登出</string>
+    <string name="com_facebook_loginview_cancel_action">取消</string>
+    <string name="com_facebook_loading">載入中⋯</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest 錯誤</string>
+    <string name="com_facebook_internet_permission_error_message">WebView 登入需有 INTERNET 權限</string>
+    <string name="com_facebook_tooltip_default">最新消息！控制權在您 - 選擇您要與應用程式分享的資訊。</string>
+    <string name="com_facebook_image_download_unknown_error">下載圖像時發生預期外的錯誤。</string>
+    <string name="com_facebook_share_button_text">分享</string>
+    <string name="com_facebook_send_button_text">傳送</string>
+</resources>
diff --git a/facebook/res/values-zh-rTW/strings.xml b/facebook/res/values-zh-rTW/strings.xml
new file mode 100644
index 000000000..3e6b7e7b2
--- /dev/null
+++ b/facebook/res/values-zh-rTW/strings.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="com_facebook_like_button_not_liked">讚</string>
+    <string name="com_facebook_like_button_liked">說讚</string>
+    <string name="com_facebook_loginview_log_out_button">登出</string>
+    <string name="com_facebook_loginview_log_in_button">登入</string>
+    <string name="com_facebook_loginview_log_in_button_long">使用 Facebook 登入</string>
+    <string name="com_facebook_loginview_logged_in_as">使用下列身分登入：%1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">已使用 Facebook 登入</string>
+    <string name="com_facebook_loginview_log_out_action">登出</string>
+    <string name="com_facebook_loginview_cancel_action">取消</string>
+    <string name="com_facebook_loading">正在載入…</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest 錯誤</string>
+    <string name="com_facebook_internet_permission_error_message">WebView 登入需要「網際網路」授權</string>
+    <string name="com_facebook_tooltip_default">新消息！您已成功登入，請選擇要與應用程式分享的資訊。</string>
+    <string name="com_facebook_image_download_unknown_error">下載圖像時發生非預期的錯誤。</string>
+    <string name="com_facebook_share_button_text">分享</string>
+    <string name="com_facebook_send_button_text">傳送</string>
+</resources>
diff --git a/facebook/src/com/facebook/FacebookButtonBase.java b/facebook/src/com/facebook/FacebookButtonBase.java
index 73cc044d5..4a6774b17 100644
--- a/facebook/src/com/facebook/FacebookButtonBase.java
+++ b/facebook/src/com/facebook/FacebookButtonBase.java
@@ -51,23 +51,22 @@
     private int overrideCompoundPaddingLeft;
     private int overrideCompoundPaddingRight;
     private Fragment parentFragment;
-    private int requestCode;
 
     protected FacebookButtonBase(
             final Context context,
             final AttributeSet attrs,
             int defStyleAttr,
             int defStyleRes,
-            final String analyticsButtonCreatedEventName,
-            final int requestCode) {
+            final String analyticsButtonCreatedEventName) {
         super(context, attrs, 0);
         defStyleRes = (defStyleRes == 0 ? this.getDefaultStyleResource() : defStyleRes);
         defStyleRes = (defStyleRes == 0 ? R.style.com_facebook_button : defStyleRes);
         configureButton(context, attrs, defStyleAttr, defStyleRes);
         this.analyticsButtonCreatedEventName = analyticsButtonCreatedEventName;
-        this.requestCode = requestCode;
     }
 
+    protected abstract int getDefaultRequestCode();
+
     /**
      * Sets the fragment that contains this control. This allows the button to be embedded inside a
      * Fragment, and will allow the fragment to receive the
@@ -93,35 +92,21 @@ public void setOnClickListener(final OnClickListener l) {
         this.externalOnClickListener = l;
     }
 
-    /**
-     * Set the request code for the startActivityForResult call. The requestCode should be
-     * outside of the range of those reserved for the Facebook SDK
-     * {@link com.facebook.FacebookSdk#isFacebookRequestCode(int)}. This method should also be
-     * called prior to registering any callbacks.
-     *
-     * @param requestCode the request code to use.
-     */
-    protected void setRequestCode(final int requestCode) {
-        if (FacebookSdk.isFacebookRequestCode(requestCode)) {
-            throw new IllegalArgumentException("Request code " + requestCode +
-                    " cannot be within the range reserved by the Facebook SDK.");
-        }
-        this.requestCode = requestCode;
-    }
-
     /**
      * Returns the request code used for this Button.
      *
      * @return the request code.
      */
     public int getRequestCode() {
-        return requestCode;
+        return getDefaultRequestCode();
     }
 
     @Override
     protected void onAttachedToWindow() {
         super.onAttachedToWindow();
-        logButtonCreated(getContext());
+        if (!isInEditMode()) {
+            logButtonCreated(getContext());
+        }
     }
 
     @Override
@@ -167,14 +152,13 @@ public int getCompoundPaddingRight() {
     }
 
     protected Activity getActivity() {
-        final Context context = getContext();
+        Context context = getContext();
+        while (!(context instanceof Activity) && context instanceof ContextWrapper) {
+            context = ((ContextWrapper) context).getBaseContext();
+        }
+
         if (context instanceof Activity) {
             return (Activity) context;
-        } else if (context instanceof ContextWrapper) {
-            Context baseContext = ((ContextWrapper) context).getBaseContext();
-            if (baseContext instanceof Activity) {
-                return (Activity) baseContext;
-            }
         }
         throw new FacebookException("Unable to get Activity.");
     }
@@ -219,6 +203,11 @@ private void parseBackgroundAttributes(
             final AttributeSet attrs,
             final int defStyleAttr,
             final int defStyleRes) {
+        // TODO, figure out why com_facebook_button_like_background.xml doesn't work in designers
+        if (isInEditMode()) {
+            return;
+        }
+
         final int attrsResources[] = {
                 android.R.attr.background,
         };
diff --git a/facebook/src/com/facebook/FacebookSdk.java b/facebook/src/com/facebook/FacebookSdk.java
index 12928d4f2..b6d597013 100644
--- a/facebook/src/com/facebook/FacebookSdk.java
+++ b/facebook/src/com/facebook/FacebookSdk.java
@@ -20,15 +20,12 @@
 
 package com.facebook;
 
-import android.content.ContentResolver;
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.content.pm.ApplicationInfo;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
 import android.content.pm.Signature;
-import android.database.Cursor;
-import android.net.Uri;
 import android.os.AsyncTask;
 import android.util.Base64;
 import android.util.Log;
@@ -67,6 +64,7 @@
     private static volatile String applicationId;
     private static volatile String applicationName;
     private static volatile String appClientToken;
+    private static volatile int webDialogTheme;
     private static final String FACEBOOK_COM = "facebook.com";
     private static volatile String facebookDomain = FACEBOOK_COM;
     private static AtomicLong onProgressThreshold = new AtomicLong(65536);
@@ -118,6 +116,11 @@ public Thread newThread(Runnable runnable) {
      */
     public static final String CLIENT_TOKEN_PROPERTY = "com.facebook.sdk.ClientToken";
 
+    /**
+     * The key for the web dialog theme in the Android manifest.
+     */
+    public static final String WEB_DIALOG_THEME = "com.facebook.sdk.WebDialogTheme";
+
     private static Boolean sdkInitialized = false;
 
     /**
@@ -132,6 +135,24 @@ public Thread newThread(Runnable runnable) {
     public static synchronized void sdkInitialize(
             Context applicationContext,
             int callbackRequestCodeOffset) {
+        sdkInitialize(applicationContext, callbackRequestCodeOffset, null);
+    }
+
+    /**
+     * This function initializes the Facebook SDK, the behavior of Facebook SDK functions are
+     * undetermined if this function is not called. It should be called as early as possible.
+     * @param applicationContext The application context
+     * @param callbackRequestCodeOffset The request code offset that Facebook activities will be
+     *                                  called with. Please do not use the range between the
+     *                                  value you set and another 100 entries after it in your
+     *                                  other requests.
+     * @param callback A callback called when initialize finishes. This will be called even if the
+     *                 sdk is already initialized.
+     */
+    public static synchronized void sdkInitialize(
+            Context applicationContext,
+            int callbackRequestCodeOffset,
+            final InitializeCallback callback) {
         if (sdkInitialized && callbackRequestCodeOffset != FacebookSdk.callbackRequestCodeOffset) {
             throw new FacebookException(CALLBACK_OFFSET_CHANGED_AFTER_INIT);
         }
@@ -142,15 +163,30 @@ public static synchronized void sdkInitialize(
         sdkInitialize(applicationContext);
     }
 
-
     /**
      * This function initializes the Facebook SDK, the behavior of Facebook SDK functions are
      * undetermined if this function is not called. It should be called as early as possible.
      * @param applicationContext The application context
      */
     public static synchronized void sdkInitialize(Context applicationContext) {
-        if (sdkInitialized == true) {
-          return;
+        FacebookSdk.sdkInitialize(applicationContext, null);
+    }
+
+    /**
+     * This function initializes the Facebook SDK, the behavior of Facebook SDK functions are
+     * undetermined if this function is not called. It should be called as early as possible.
+     * @param applicationContext The application context
+     * @param callback A callback called when initialize finishes. This will be called even if the
+     *                 sdk is already initialized.
+     */
+    public static synchronized void sdkInitialize(
+            Context applicationContext,
+            final InitializeCallback callback) {
+        if (sdkInitialized) {
+            if (callback != null) {
+                callback.onInitialized();
+            }
+            return;
         }
 
         Validate.notNull(applicationContext, "applicationContext");
@@ -185,6 +221,10 @@ public Void call() throws Exception {
                             // issue, retry
                             Profile.fetchProfileForCurrentAccessToken();
                         }
+
+                        if (callback != null) {
+                            callback.onInitialized();
+                        }
                         return null;
                     }
                 });
@@ -505,7 +545,6 @@ static GraphResponse publishInstallAndWaitForResponse(
      * @return the current version of the SDK
      */
     public static String getSdkVersion() {
-        Validate.sdkInitialized();
         return FacebookSdkVersion.BUILD;
     }
 
@@ -592,6 +631,10 @@ static void loadDefaultsFromMetadata(Context context) {
         if (appClientToken == null) {
             appClientToken = ai.metaData.getString(CLIENT_TOKEN_PROPERTY);
         }
+
+        if (webDialogTheme == 0) {
+            setWebDialogTheme(ai.metaData.getInt(WEB_DIALOG_THEME));
+        }
     }
 
     /**
@@ -689,6 +732,23 @@ public static void setClientToken(String clientToken) {
         appClientToken = clientToken;
     }
 
+    /**
+     * Gets the theme used by {@link com.facebook.internal.WebDialog}
+     * @return the theme
+     */
+    public static int getWebDialogTheme() {
+        Validate.sdkInitialized();
+        return webDialogTheme;
+    }
+
+    /**
+     * Sets the theme used by {@link com.facebook.internal.WebDialog}
+     * @param theme A theme to use
+     */
+    public static void setWebDialogTheme(int theme) {
+        webDialogTheme = theme;
+    }
+
     /**
      * Gets the cache directory to use for caching responses, etc. The default will be the value
      * returned by Context.getCacheDir() when the SDK was initialized, but it can be overridden.
@@ -732,4 +792,14 @@ public static boolean isFacebookRequestCode(int requestCode) {
         return requestCode >= callbackRequestCodeOffset
                 && requestCode < callbackRequestCodeOffset + MAX_REQUEST_CODE_RANGE;
     }
+
+    /**
+     * Callback passed to the sdkInitialize function.
+     */
+    public interface InitializeCallback {
+        /**
+         * Called when the sdk has been initialized.
+         */
+        void onInitialized();
+    }
 }
diff --git a/facebook/src/com/facebook/FacebookSdkVersion.java b/facebook/src/com/facebook/FacebookSdkVersion.java
index 27a041e62..877152dac 100644
--- a/facebook/src/com/facebook/FacebookSdkVersion.java
+++ b/facebook/src/com/facebook/FacebookSdkVersion.java
@@ -21,5 +21,5 @@
 package com.facebook;
 
 final class FacebookSdkVersion {
-    public static final String BUILD = "4.1.2";
+    public static final String BUILD = "4.4.0";
 }
diff --git a/facebook/src/com/facebook/GraphRequest.java b/facebook/src/com/facebook/GraphRequest.java
index 302018b3c..12401e30e 100644
--- a/facebook/src/com/facebook/GraphRequest.java
+++ b/facebook/src/com/facebook/GraphRequest.java
@@ -82,6 +82,7 @@
     private static final String VIDEOS_SUFFIX = "/videos";
     private static final String ME = "me";
     private static final String MY_FRIENDS = "me/friends";
+    private static final String MY_PHOTOS = "me/photos";
     private static final String SEARCH = "search";
     private static final String USER_AGENT_BASE = "FBAndroidSDK";
     private static final String USER_AGENT_HEADER = "User-Agent";
@@ -115,6 +116,8 @@
     private static final String DEBUG_MESSAGE_KEY = "message";
     private static final String DEBUG_MESSAGE_TYPE_KEY = "type";
     private static final String DEBUG_MESSAGE_LINK_KEY = "link";
+    private static final String PICTURE_PARAM = "picture";
+    private static final String CAPTION_PARAM = "caption";
 
     private static final String MIME_BOUNDARY = "3i2ndDfv2rTHiSisAbouNdArYfORhtTPEefj3q2f";
 
@@ -184,7 +187,7 @@ public GraphRequest(
     /**
      * Constructs a request with a specific access token, graph path, parameters, and HTTP method.
      * An access token need not be provided, in which case the request is sent without an access
-     * token and thus is not executed in the context of any particular user. Only certain graph\
+     * token and thus is not executed in the context of any particular user. Only certain graph
      * requests can be expected to succeed in this case.
      * <p/>
      * Depending on the httpMethod parameter, the object at the graph path may be retrieved,
@@ -423,6 +426,120 @@ public void onCompleted(GraphResponse response) {
     }
 
 
+    /**
+     * Creates a new Request configured to upload a photo to the specified graph path.
+     *
+     * @param accessToken the access token to use, or null
+     * @param graphPath   the graph path to use, defaults to me/photos
+     * @param image       the bitmap image to upload
+     * @param caption     the user generated caption for the photo, can be null
+     * @param params      the parameters, can be null
+     * @param callback    a callback that will be called when the request is completed to handle
+     *                    success or error conditions, can be null
+     * @return a Request that is ready to execute
+     */
+    public static GraphRequest newUploadPhotoRequest(
+            AccessToken accessToken,
+            String graphPath,
+            Bitmap image,
+            String caption,
+            Bundle params,
+            Callback callback) {
+        graphPath = getDefaultPhotoPathIfNull(graphPath);
+        Bundle parameters = new Bundle();
+        if (params != null) {
+            parameters.putAll(params);
+        }
+        parameters.putParcelable(PICTURE_PARAM, image);
+        if (caption != null && !caption.isEmpty()) {
+            parameters.putString(CAPTION_PARAM, caption);
+        }
+
+        return new GraphRequest(accessToken, graphPath, parameters, HttpMethod.POST, callback);
+    }
+
+    /**
+     * Creates a new Request configured to upload a photo to the specified graph path. The
+     * photo will be read from the specified file.
+     *
+     * @param accessToken the access token to use, or null
+     * @param graphPath   the graph path to use, defaults to me/photos
+     * @param file        the file containing the photo to upload
+     * @param caption     the user generated caption for the photo, can be null
+     * @param params      the parameters, can be null
+     * @param callback    a callback that will be called when the request is completed to handle
+     *                    success or error conditions, can be null
+     * @return a Request that is ready to execute
+     * @throws java.io.FileNotFoundException if the file doesn't exist
+     */
+    public static GraphRequest newUploadPhotoRequest(
+            AccessToken accessToken,
+            String graphPath,
+            File file,
+            String caption,
+            Bundle params,
+            Callback callback
+    ) throws FileNotFoundException {
+        graphPath = getDefaultPhotoPathIfNull(graphPath);
+        ParcelFileDescriptor descriptor =
+                ParcelFileDescriptor.open(file, ParcelFileDescriptor.MODE_READ_ONLY);
+        Bundle parameters = new Bundle();
+        if (params != null) {
+            parameters.putAll(params);
+        }
+        parameters.putParcelable(PICTURE_PARAM, descriptor);
+        if (caption != null && !caption.isEmpty()) {
+            parameters.putString(CAPTION_PARAM, caption);
+        }
+
+        return new GraphRequest(accessToken, graphPath, parameters, HttpMethod.POST, callback);
+    }
+
+    /**
+     * Creates a new Request configured to upload a photo to the specified graph path. The
+     * photo will be read from the specified Uri.
+     *
+     * @param accessToken the access token to use, or null
+     * @param graphPath   the graph path to use, defaults to me/photos
+     * @param photoUri    the file:// or content:// Uri to the photo on device
+     * @param caption     the user generated caption for the photo, can be null
+     * @param params      the parameters, can be null
+     * @param callback    a callback that will be called when the request is completed to handle
+     *                    success or error conditions, can be null
+     * @return a Request that is ready to execute
+     * @throws FileNotFoundException if the Uri does not exist
+     */
+    public static GraphRequest newUploadPhotoRequest(
+            AccessToken accessToken,
+            String graphPath,
+            Uri photoUri,
+            String caption,
+            Bundle params,
+            Callback callback)
+            throws FileNotFoundException {
+        graphPath = getDefaultPhotoPathIfNull(graphPath);
+        if (Utility.isFileUri(photoUri)) {
+            return newUploadPhotoRequest(
+                    accessToken,
+                    graphPath,
+                    new File(photoUri.getPath()),
+                    caption,
+                    params,
+                    callback);
+        } else if (!Utility.isContentUri(photoUri)) {
+            throw new FacebookException("The photo Uri must be either a file:// or content:// Uri");
+        }
+
+        Bundle parameters = new Bundle();
+        if (params != null) {
+            parameters.putAll(params);
+        }
+        parameters.putParcelable(PICTURE_PARAM, photoUri);
+
+        return new GraphRequest(accessToken, graphPath, parameters, HttpMethod.POST, callback);
+    }
+
+
     /**
      * Creates a new Request configured to retrieve an App User ID for the app's Facebook user.
      * Callers will send this ID back to their own servers, collect up a set to create a Facebook
@@ -1261,6 +1378,10 @@ public void run() {
         }
     }
 
+    private static String getDefaultPhotoPathIfNull(String graphPath) {
+        return graphPath == null ? MY_PHOTOS : graphPath;
+    }
+
     private static HttpURLConnection createConnection(URL url) throws IOException {
         HttpURLConnection connection;
         connection = (HttpURLConnection) url.openConnection();
@@ -1763,6 +1884,16 @@ private static String getMimeContentType() {
     private static String getUserAgent() {
         if (userAgent == null) {
             userAgent = String.format("%s.%s", USER_AGENT_BASE, FacebookSdkVersion.BUILD);
+
+            // For the unity sdk we need to append the unity user agent
+            String customUserAgent = InternalSettings.getCustomUserAgent();
+            if (!Utility.isNullOrEmpty(customUserAgent)) {
+                userAgent = String.format(
+                        Locale.ROOT,
+                        "%s/%s",
+                        userAgent,
+                        customUserAgent);
+            }
         }
 
         return userAgent;
diff --git a/facebook/src/com/facebook/appevents/AppEventsLogger.java b/facebook/src/com/facebook/appevents/AppEventsLogger.java
index 04a209fc3..2e9907c1d 100644
--- a/facebook/src/com/facebook/appevents/AppEventsLogger.java
+++ b/facebook/src/com/facebook/appevents/AppEventsLogger.java
@@ -177,7 +177,7 @@
             "_fbSourceApplicationHasBeenSet";
 
     // Instance member variables
-    private final Context context;
+    private final String contextName;
     private final AccessTokenAppIdPair accessTokenAppId;
 
     private static Map<AccessTokenAppIdPair, SessionEventsState> stateMap =
@@ -650,7 +650,7 @@ public String getApplicationId() {
      */
     private AppEventsLogger(Context context, String applicationId, AccessToken accessToken) {
         Validate.notNull(context, "context");
-        this.context = context;
+        this.contextName = Utility.getActivityName(context);
 
         if (accessToken == null) {
             accessToken = AccessToken.getCurrentAccessToken();
@@ -732,12 +732,12 @@ private void logEvent(
             Bundle parameters,
             boolean isImplicitlyLogged) {
         AppEvent event = new AppEvent(
-                this.context,
+                this.contextName,
                 eventName,
                 valueToSum,
                 parameters,
                 isImplicitlyLogged);
-        logEvent(context, event, accessTokenAppId);
+        logEvent(applicationContext, event, accessTokenAppId);
     }
 
     private static void logEvent(final Context context,
@@ -1290,7 +1290,7 @@ private void populateRequest(GraphRequest request, int numSkipped, JSONArray eve
         private String name;
 
         public AppEvent(
-                Context context,
+                String contextName,
                 String eventName,
                 Double valueToSum,
                 Bundle parameters,
@@ -1305,7 +1305,7 @@ public AppEvent(
 
                 jsonObject.put("_eventName", eventName);
                 jsonObject.put("_logTime", System.currentTimeMillis() / 1000);
-                jsonObject.put("_ui", Utility.getActivityName(context));
+                jsonObject.put("_ui", contextName);
 
                 if (valueToSum != null) {
                     jsonObject.put("_valueToSum", valueToSum.doubleValue());
diff --git a/facebook/src/com/facebook/applinks/FacebookAppLinkResolver.java b/facebook/src/com/facebook/applinks/FacebookAppLinkResolver.java
index 7db436eda..807d92f1f 100644
--- a/facebook/src/com/facebook/applinks/FacebookAppLinkResolver.java
+++ b/facebook/src/com/facebook/applinks/FacebookAppLinkResolver.java
@@ -23,6 +23,7 @@
 import android.net.Uri;
 import android.os.Bundle;
 
+import com.facebook.AccessToken;
 import com.facebook.FacebookRequestError;
 import com.facebook.GraphRequest;
 import com.facebook.GraphResponse;
@@ -124,9 +125,10 @@ public AppLink then(Task<Map<Uri, AppLink>> resolveUrisTask) throws Exception {
                         APP_LINK_KEY,
                         APP_LINK_ANDROID_TARGET_KEY,
                         APP_LINK_WEB_TARGET_KEY));
-
         GraphRequest appLinkRequest = new GraphRequest(
-                null, /* Access Token */
+                // We will use the current access token if we have one else we will use the client
+                // token
+                AccessToken.getCurrentAccessToken(), /* Access Token */
                 "", /* Graph path */
                 appLinkRequestParameters, /* Query parameters */
                 null, /* HttpMethod */
diff --git a/facebook/src/com/facebook/internal/AttributionIdentifiers.java b/facebook/src/com/facebook/internal/AttributionIdentifiers.java
index d45074f08..0360dfe9f 100644
--- a/facebook/src/com/facebook/internal/AttributionIdentifiers.java
+++ b/facebook/src/com/facebook/internal/AttributionIdentifiers.java
@@ -20,15 +20,28 @@
 
 package com.facebook.internal;
 
+import android.content.ComponentName;
 import android.content.Context;
+import android.content.Intent;
+import android.content.ServiceConnection;
+import android.content.pm.PackageManager;
 import android.database.Cursor;
 import android.net.Uri;
+import android.os.Binder;
+import android.os.IBinder;
+import android.os.IInterface;
 import android.os.Looper;
+import android.os.Parcel;
+import android.os.RemoteException;
+import android.support.annotation.Nullable;
 import android.util.Log;
 
 import com.facebook.FacebookException;
 
 import java.lang.reflect.Method;
+import java.util.concurrent.BlockingQueue;
+import java.util.concurrent.LinkedBlockingDeque;
+import java.util.concurrent.atomic.AtomicBoolean;
 
 /**
  * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
@@ -52,13 +65,24 @@
 
     private String attributionId;
     private String androidAdvertiserId;
+    private String androidInstallerPackage;
     private boolean limitTracking;
     private long fetchTime;
 
     private static AttributionIdentifiers recentlyFetchedIdentifiers;
 
     private static AttributionIdentifiers getAndroidId(Context context) {
-        AttributionIdentifiers identifiers = new AttributionIdentifiers();
+        AttributionIdentifiers identifiers = getAndroidIdViaReflection(context);
+        if (identifiers == null) {
+            identifiers = getAndroidIdViaService(context);
+            if (identifiers == null) {
+                identifiers = new AttributionIdentifiers();
+            }
+        }
+        return identifiers;
+    }
+
+    private static AttributionIdentifiers getAndroidIdViaReflection(Context context) {
         try {
             // We can't call getAdvertisingIdInfo on the main thread or the app will potentially
             // freeze, if this is the case throw:
@@ -72,14 +96,14 @@ private static AttributionIdentifiers getAndroidId(Context context) {
             );
 
             if (isGooglePlayServicesAvailable == null) {
-                return identifiers;
+                return null;
             }
 
             Object connectionResult = Utility.invokeMethodQuietly(
                     null, isGooglePlayServicesAvailable, context);
             if (!(connectionResult instanceof Integer)
                     || (Integer) connectionResult != CONNECTION_RESULT_SUCCESS) {
-                return identifiers;
+                return null;
             }
 
             Method getAdvertisingIdInfo = Utility.getMethodQuietly(
@@ -88,12 +112,12 @@ private static AttributionIdentifiers getAndroidId(Context context) {
                     Context.class
             );
             if (getAdvertisingIdInfo == null) {
-                return identifiers;
+                return null;
             }
             Object advertisingInfo = Utility.invokeMethodQuietly(
                     null, getAdvertisingIdInfo, context);
             if (advertisingInfo == null) {
-                return identifiers;
+                return null;
             }
 
             Method getId = Utility.getMethodQuietly(advertisingInfo.getClass(), "getId");
@@ -101,9 +125,10 @@ private static AttributionIdentifiers getAndroidId(Context context) {
                     advertisingInfo.getClass(),
                     "isLimitAdTrackingEnabled");
             if (getId == null || isLimitAdTrackingEnabled == null) {
-                return identifiers;
+                return null;
             }
 
+            AttributionIdentifiers identifiers = new AttributionIdentifiers();
             identifiers.androidAdvertiserId =
                     (String) Utility.invokeMethodQuietly(advertisingInfo, getId);
             identifiers.limitTracking = (Boolean) Utility.invokeMethodQuietly(
@@ -112,7 +137,27 @@ private static AttributionIdentifiers getAndroidId(Context context) {
         } catch (Exception e) {
             Utility.logd("android_id", e);
         }
-        return identifiers;
+        return null;
+    }
+
+    private static AttributionIdentifiers getAndroidIdViaService(Context context) {
+        GoogleAdServiceConnection connection = new GoogleAdServiceConnection();
+        Intent intent = new Intent("com.google.android.gms.ads.identifier.service.START");
+        intent.setPackage("com.google.android.gms");
+        if(context.bindService(intent, connection, Context.BIND_AUTO_CREATE)) {
+            try {
+                GoogleAdInfo adInfo = new GoogleAdInfo(connection.getBinder());
+                AttributionIdentifiers identifiers = new AttributionIdentifiers();
+                identifiers.androidAdvertiserId = adInfo.getAdvertiserId();
+                identifiers.limitTracking = adInfo.isTrackingLimited();
+                return identifiers;
+            } catch (Exception exception) {
+                Utility.logd("android_id", exception);
+            } finally {
+                context.unbindService(connection);
+            }
+        }
+        return null;
     }
 
     public static AttributionIdentifiers getAttributionIdentifiers(Context context) {
@@ -137,6 +182,10 @@ public static AttributionIdentifiers getAttributionIdentifiers(Context context)
                     ATTRIBUTION_ID_CONTENT_PROVIDER_WAKIZASHI, 0) != null) {
                 providerUri = Uri.parse("content://" + ATTRIBUTION_ID_CONTENT_PROVIDER_WAKIZASHI);
             }
+            String installerPackageName = getInstallerPackageName(context);
+            if (installerPackageName != null) {
+                identifiers.androidInstallerPackage = installerPackageName;
+            }
             if (providerUri == null) {
                 return identifiers;
             }
@@ -180,7 +229,95 @@ public String getAndroidAdvertiserId() {
         return androidAdvertiserId;
     }
 
+    public String getAndroidInstallerPackage() {
+        return androidInstallerPackage;
+    }
+
     public boolean isTrackingLimited() {
         return limitTracking;
     }
+
+    @Nullable
+    private static String getInstallerPackageName(Context context) {
+        PackageManager packageManager = context.getPackageManager();
+        if (packageManager != null) {
+            return packageManager.getInstallerPackageName(context.getPackageName());
+        }
+        return null;
+    }
+
+    private static final class GoogleAdServiceConnection implements ServiceConnection {
+        private AtomicBoolean consumed = new AtomicBoolean(false);
+        private final BlockingQueue<IBinder> queue = new LinkedBlockingDeque<>();
+
+        @Override
+        public void onServiceConnected(ComponentName name, IBinder service) {
+            try {
+                queue.put(service);
+            } catch (InterruptedException e) {
+            }
+        }
+
+        @Override
+        public void onServiceDisconnected(ComponentName name) {
+        }
+
+        public IBinder getBinder() throws InterruptedException {
+            if (consumed.compareAndSet(true, true)) {
+                throw new IllegalStateException("Binder already consumed");
+            }
+            return queue.take();
+        }
+    }
+
+    private static final class GoogleAdInfo implements IInterface {
+        private static final int FIRST_TRANSACTION_CODE = Binder.FIRST_CALL_TRANSACTION;
+        private static final int SECOND_TRANSACTION_CODE = FIRST_TRANSACTION_CODE + 1;
+
+        private IBinder binder;
+
+        GoogleAdInfo(IBinder binder) {
+            this.binder = binder;
+        }
+
+        @Override
+        public IBinder asBinder() {
+            return binder;
+        }
+
+        public String getAdvertiserId() throws RemoteException {
+            Parcel data = Parcel.obtain();
+            Parcel reply = Parcel.obtain();
+            String id;
+            try {
+                data.writeInterfaceToken(
+                        "com.google.android.gms.ads.identifier.internal.IAdvertisingIdService");
+                binder.transact(FIRST_TRANSACTION_CODE, data, reply, 0);
+                reply.readException();
+                id = reply.readString();
+            } finally {
+                reply.recycle();
+                data.recycle();
+            }
+            return id;
+        }
+
+        public boolean isTrackingLimited() throws RemoteException {
+            Parcel data = Parcel.obtain();
+            Parcel reply = Parcel.obtain();
+            boolean limitAdTracking;
+            try {
+                data.writeInterfaceToken(
+                        "com.google.android.gms.ads.identifier.internal.IAdvertisingIdService");
+                data.writeInt(1);
+                binder.transact(SECOND_TRANSACTION_CODE, data, reply, 0);
+                reply.readException();
+                limitAdTracking = 0 != reply.readInt();
+            } finally {
+                reply.recycle();
+                data.recycle();
+            }
+            return limitAdTracking;
+        }
+    }
 }
diff --git a/facebook/src/com/facebook/internal/InternalSettings.java b/facebook/src/com/facebook/internal/InternalSettings.java
new file mode 100644
index 000000000..16a2d2929
--- /dev/null
+++ b/facebook/src/com/facebook/internal/InternalSettings.java
@@ -0,0 +1,39 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.internal;
+
+public class InternalSettings {
+    /**
+     * This value is used by the unity sdk to set the custom version. The user agent format is
+     * sdk_version/custom_user_agent
+     * For example
+     * FBAndroidSDK.4.2.0/Unity.7.0.1
+     */
+    private static volatile String mCustomUserAgent;
+
+    public static void setCustomUserAgent(String customUserAgent) {
+        mCustomUserAgent = customUserAgent;
+    }
+
+    public static String getCustomUserAgent() {
+        return mCustomUserAgent;
+    }
+}
diff --git a/facebook/src/com/facebook/internal/NativeAppCallAttachmentStore.java b/facebook/src/com/facebook/internal/NativeAppCallAttachmentStore.java
index 1b1932c04..18814f355 100644
--- a/facebook/src/com/facebook/internal/NativeAppCallAttachmentStore.java
+++ b/facebook/src/com/facebook/internal/NativeAppCallAttachmentStore.java
@@ -113,7 +113,7 @@ public static void addAttachments(Collection<Attachment> attachments) {
 
         try {
             for (Attachment attachment : attachments) {
-                if (!attachment.isBinaryData) {
+                if (!attachment.shouldCreateFile) {
                     continue;
                 }
 
@@ -125,9 +125,9 @@ public static void addAttachments(Collection<Attachment> attachments) {
 
                 if (attachment.bitmap != null) {
                     processAttachmentBitmap(attachment.bitmap, file);
-                } else if (attachment.imageUri != null) {
+                } else if (attachment.originalUri != null) {
                     processAttachmentFile(
-                            attachment.imageUri,
+                            attachment.originalUri,
                             attachment.isContentUri,
                             file);
                 }
@@ -230,35 +230,36 @@ public static void cleanupAllAttachments() {
         private final String attachmentName;
 
         private Bitmap bitmap;
-        private Uri imageUri;
+        private Uri originalUri;
 
         private boolean isContentUri;
-        private boolean isBinaryData;
+        private boolean shouldCreateFile;
 
         private Attachment(UUID callId, Bitmap bitmap, Uri uri) {
             this.callId = callId;
             this.bitmap = bitmap;
-            this.imageUri = uri;
+            this.originalUri = uri;
 
             if (uri != null) {
                 String scheme = uri.getScheme();
                 if ("content".equalsIgnoreCase(scheme)) {
                     isContentUri = true;
-                    isBinaryData = true;
+                    shouldCreateFile = uri.getAuthority() != null &&
+                            !uri.getAuthority().startsWith("media");
                 } else if ("file".equalsIgnoreCase(uri.getScheme())) {
-                    isBinaryData = true;
+                    shouldCreateFile = true;
                 } else if (!Utility.isWebUri(uri)) {
-                    throw new FacebookException("Unsupported scheme for image Uri : " + scheme);
+                    throw new FacebookException("Unsupported scheme for media Uri : " + scheme);
                 }
             } else if (bitmap != null) {
-                isBinaryData = true;
+                shouldCreateFile = true;
             } else {
-                throw new FacebookException("Cannot share a photo without a bitmap or Uri set");
+                throw new FacebookException("Cannot share media without a bitmap or Uri set");
             }
 
-            attachmentName = !isBinaryData ? null : UUID.randomUUID().toString();
-            attachmentUrl = !isBinaryData
-                    ? this.imageUri.toString() // http(s) images can be used directly
+            attachmentName = !shouldCreateFile ? null : UUID.randomUUID().toString();
+            attachmentUrl = !shouldCreateFile
+                    ? this.originalUri.toString()
                     : FacebookContentProvider.getAttachmentUrl(
                             FacebookSdk.getApplicationId(),
                             callId,
diff --git a/facebook/src/com/facebook/internal/ServerProtocol.java b/facebook/src/com/facebook/internal/ServerProtocol.java
index ea69f6172..98b1cd71f 100644
--- a/facebook/src/com/facebook/internal/ServerProtocol.java
+++ b/facebook/src/com/facebook/internal/ServerProtocol.java
@@ -73,12 +73,13 @@
     // URL components
     private static final String GRAPH_VIDEO_URL_FORMAT = "https://graph-video.%s";
     private static final String GRAPH_URL_FORMAT = "https://graph.%s";
-    public static final String GRAPH_API_VERSION = "v2.3";
+    public static final String GRAPH_API_VERSION = "v2.4";
 
     public static final Collection<String> errorsProxyAuthDisabled =
             Utility.unmodifiableCollection("service_disabled", "AndroidAuthKillSwitchException");
     public static final Collection<String> errorsUserCanceled =
             Utility.unmodifiableCollection("access_denied", "OAuthAccessDeniedException");
+    public static final String errorConnectionFailure = "CONNECTION_FAILURE";
 
     public static final String getDialogAuthority() {
         return String.format(DIALOG_AUTHORITY_FORMAT, FacebookSdk.getFacebookDomain());
diff --git a/facebook/src/com/facebook/internal/Utility.java b/facebook/src/com/facebook/internal/Utility.java
index 57e2467ef..0bcab822a 100644
--- a/facebook/src/com/facebook/internal/Utility.java
+++ b/facebook/src/com/facebook/internal/Utility.java
@@ -26,11 +26,18 @@
 import android.content.pm.PackageManager;
 import android.database.Cursor;
 import android.net.Uri;
+import android.os.Build;
 import android.os.Bundle;
+import android.os.Environment;
 import android.os.Parcel;
+import android.os.StatFs;
 import android.provider.OpenableColumns;
+import android.telephony.TelephonyManager;
 import android.text.TextUtils;
+import android.util.DisplayMetrics;
 import android.util.Log;
+import android.view.Display;
+import android.view.WindowManager;
 import android.webkit.CookieManager;
 import android.webkit.CookieSyncManager;
 
@@ -58,6 +65,7 @@
 import java.util.*;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.atomic.AtomicBoolean;
+import java.util.regex.Pattern;
 
 /**
  * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
@@ -80,7 +88,7 @@
     private static final String APP_SETTING_DIALOG_CONFIGS = "android_dialog_configs";
     private static final String APP_SETTING_ANDROID_SDK_ERROR_CATEGORIES =
             "android_sdk_error_categories";
-    private static final String EXTRA_APP_EVENTS_INFO_FORMAT_VERSION = "a1";
+    private static final String EXTRA_APP_EVENTS_INFO_FORMAT_VERSION = "a2";
     private static final String DIALOG_CONFIG_DIALOG_NAME_FEATURE_NAME_SEPARATOR = "\\|";
     private static final String DIALOG_CONFIG_NAME_KEY = "name";
     private static final String DIALOG_CONFIG_VERSIONS_KEY = "versions";
@@ -101,11 +109,26 @@
     // specify.
     public static final int DEFAULT_STREAM_BUFFER_SIZE = 8192;
 
+    // Refresh extended device info every 30 minutes
+    private static final int REFRESH_TIME_FOR_EXTENDED_DEVICE_INFO_MILLIS = 30 * 60 * 1000;
+
+    private static final String noCarrierConstant = "NoCarrier";
+
+    private static final int GINGERBREAD_MR1 = 10;
+
     private static Map<String, FetchedAppSettings> fetchedAppSettings =
             new ConcurrentHashMap<String, FetchedAppSettings>();
 
     private static AtomicBoolean loadingSettings = new AtomicBoolean(false);
 
+    private static int numCPUCores = 0;
+
+    private static long timestampOfLastCheck = -1;
+    private static long totalExternalStorageGB = -1;
+    private static long availableExternalStorageGB = -1;
+    private static String deviceTimezone = "";
+    private static String carrierName = noCarrierConstant;
+
     public static class FetchedAppSettings {
         private boolean supportsImplicitLogging;
         private String nuxContent;
@@ -944,6 +967,15 @@ public static void deleteDirectory(File directoryOrFile) {
         return result;
     }
 
+    public static Set<String> jsonArrayToSet(JSONArray jsonArray) throws JSONException {
+        Set<String> result = new HashSet<>();
+        for (int i = 0; i < jsonArray.length(); i++) {
+            result.add(jsonArray.getString(i));
+        }
+
+        return result;
+    }
+
     public static void setAppEventAttributionParameters(
             JSONObject params,
             AttributionIdentifiers attributionIdentifiers,
@@ -959,6 +991,11 @@ public static void setAppEventAttributionParameters(
             params.put("advertiser_tracking_enabled", !attributionIdentifiers.isTrackingLimited());
         }
 
+        if (attributionIdentifiers != null &&
+                attributionIdentifiers.getAndroidInstallerPackage() != null) {
+            params.put("installer_package", attributionIdentifiers.getAndroidInstallerPackage());
+        }
+
         params.put("anon_id", anonymousAppDeviceGUID);
         params.put("application_tracking_enabled", !limitEventUsage);
     }
@@ -970,6 +1007,8 @@ public static void setAppEventExtendedDeviceInfoParameters(
         JSONArray extraInfoArray = new JSONArray();
         extraInfoArray.put(EXTRA_APP_EVENTS_INFO_FORMAT_VERSION);
 
+        Utility.refreshPeriodicExtendedDeviceInfo(appContext);
+
         // Application Manifest info:
         String pkgName = appContext.getPackageName();
         int versionCode = -1;
@@ -988,6 +1027,53 @@ public static void setAppEventExtendedDeviceInfoParameters(
         extraInfoArray.put(versionCode);
         extraInfoArray.put(versionName);
 
+        // OS/Device info
+        extraInfoArray.put(Build.VERSION.RELEASE);
+        extraInfoArray.put(Build.MODEL);
+
+        // Locale
+        Locale locale = null;
+        try {
+            locale = appContext.getResources().getConfiguration().locale;
+        } catch (Exception e) {
+            locale = Locale.getDefault();
+        }
+        extraInfoArray.put(locale.getLanguage() + "_" + locale.getCountry());
+
+        // Time zone
+        extraInfoArray.put(deviceTimezone);
+
+        // Carrier
+        extraInfoArray.put(carrierName);
+
+        // Screen dimensions
+        int width = 0;
+        int height = 0;
+        double density = 0;
+        try {
+            WindowManager wm = (WindowManager) appContext.getSystemService(Context.WINDOW_SERVICE);
+            if (wm != null) {
+                Display display = wm.getDefaultDisplay();
+                DisplayMetrics displayMetrics = new DisplayMetrics();
+                display.getMetrics(displayMetrics);
+                width = displayMetrics.widthPixels;
+                height = displayMetrics.heightPixels;
+                density = displayMetrics.density;
+            }
+        } catch (Exception e) {
+            // Swallow
+        }
+        extraInfoArray.put(width);
+        extraInfoArray.put(height);
+        extraInfoArray.put(String.format("%.2f", density));
+
+        // CPU Cores
+        extraInfoArray.put(refreshBestGuessNumberOfCPUCores());
+
+        // External Storage
+        extraInfoArray.put(totalExternalStorageGB);
+        extraInfoArray.put(availableExternalStorageGB);
+
         params.put("extinfo", extraInfoArray.toString());
     }
 
@@ -1227,5 +1313,122 @@ private static GraphRequest getGraphMeRequestWithCache(
                 null);
         return graphRequest;
     }
-}
 
+    /**
+     * Return our best guess at the available number of cores. Will always return at least 1.
+     * @return The minimum number of CPU cores
+     */
+    private static int refreshBestGuessNumberOfCPUCores() {
+        // If we have calculated this before, return that value
+        if (numCPUCores > 0) {
+            return numCPUCores;
+        }
+
+        // Gingerbread doesn't support giving a single application access to both cores,
+        // so for our purposes GB devices are effectively single core.
+        if (Build.VERSION.SDK_INT <= Utility.GINGERBREAD_MR1) {
+            numCPUCores = 1;
+            return numCPUCores;
+        }
+
+        // Enumerate all available CPU files and try to count the number of CPU cores.
+        try {
+            int res = 0;
+            File cpuDir = new File("/sys/devices/system/cpu/");
+            File[] cpuFiles = cpuDir.listFiles(new FilenameFilter() {
+                @Override
+                public boolean accept(File dir, String fileName) {
+                    return Pattern.matches("cpu[0-9]+", fileName);
+                }
+            });
+
+            numCPUCores = cpuFiles.length;
+        } catch (Exception e) {
+        }
+
+        // If enumerating and counting the CPU cores fails, use the runtime. Fallback to 1 if
+        // that returns bogus values.
+        if (numCPUCores <= 0) {
+            numCPUCores = Math.max(Runtime.getRuntime().availableProcessors(), 1);
+        }
+        return numCPUCores;
+    }
+
+    private static void refreshPeriodicExtendedDeviceInfo(Context appContext) {
+        if (timestampOfLastCheck == -1 ||
+                (System.currentTimeMillis() - timestampOfLastCheck) >=
+                        Utility.REFRESH_TIME_FOR_EXTENDED_DEVICE_INFO_MILLIS) {
+            timestampOfLastCheck = System.currentTimeMillis();
+            Utility.refreshTimezone();
+            Utility.refreshCarrierName(appContext);
+            Utility.refreshTotalExternalStorage();
+            Utility.refreshAvailableExternalStorage();
+        }
+    }
+
+    private static void refreshTimezone() {
+        try {
+            TimeZone tz = TimeZone.getDefault();
+            deviceTimezone = tz.getDisplayName(tz.inDaylightTime(new Date()), TimeZone.SHORT);
+        } catch (Exception e) {
+        }
+    }
+
+    /**
+     * Get and cache the carrier name since this won't change during the lifetime of the app.
+     * @return The carrier name
+     */
+    private static void refreshCarrierName(Context appContext) {
+        if (carrierName.equals(noCarrierConstant)) {
+            try {
+                TelephonyManager telephonyManager =
+                        ((TelephonyManager) appContext.getSystemService(Context.TELEPHONY_SERVICE));
+                carrierName = telephonyManager.getNetworkOperatorName();
+            } catch (Exception e) {
+            }
+        }
+    }
+
+    /**
+     * @return whether there is external storage:
+     */
+    private static boolean externalStorageExists() {
+        return Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState());
+    }
+
+    // getAvailableBlocks/getBlockSize deprecated but required pre-API v18
+    @SuppressWarnings("deprecation")
+    private static void refreshAvailableExternalStorage() {
+        try {
+            if (externalStorageExists()) {
+                File path = Environment.getExternalStorageDirectory();
+                StatFs stat = new StatFs(path.getPath());
+                availableExternalStorageGB =
+                        (long)stat.getAvailableBlocks() * (long)stat.getBlockSize();
+            }
+            availableExternalStorageGB =
+                    Utility.convertBytesToGB(availableExternalStorageGB);
+        } catch (Exception e) {
+            // Swallow
+        }
+    }
+
+    // getAvailableBlocks/getBlockSize deprecated but required pre-API v18
+    @SuppressWarnings("deprecation")
+    private static void refreshTotalExternalStorage() {
+        try {
+            if (externalStorageExists()) {
+                File path = Environment.getExternalStorageDirectory();
+                StatFs stat = new StatFs(path.getPath());
+                totalExternalStorageGB = (long)stat.getBlockCount() * (long)stat.getBlockSize();
+            }
+            totalExternalStorageGB = Utility.convertBytesToGB(totalExternalStorageGB);
+        } catch (Exception e) {
+            // Swallow
+        }
+    }
+
+    private static long convertBytesToGB(double bytes) {
+        return Math.round(bytes / (1024.0 * 1024.0 * 1024.0));
+    }
+}
diff --git a/facebook/src/com/facebook/internal/WebDialog.java b/facebook/src/com/facebook/internal/WebDialog.java
index 28d7279ab..e582b5ae6 100644
--- a/facebook/src/com/facebook/internal/WebDialog.java
+++ b/facebook/src/com/facebook/internal/WebDialog.java
@@ -122,7 +122,7 @@ public WebDialog(Context context, String url) {
      * @param theme   identifier of a theme to pass to the Dialog class
      */
     public WebDialog(Context context, String url, int theme) {
-        super(context, theme);
+        super(context, theme == 0 ? DEFAULT_THEME : theme);
         this.url = url;
     }
 
@@ -136,7 +136,7 @@ public WebDialog(Context context, String url, int theme) {
      * @param listener the listener to notify, or null if no notification is desired
      */
     public WebDialog(Context context, String action, Bundle parameters, int theme, OnCompleteListener listener) {
-        super(context, theme);
+        super(context, theme == 0 ? DEFAULT_THEME : theme);
 
         if (parameters == null) {
             parameters = new Bundle();
diff --git a/facebook/src/com/facebook/login/GetTokenLoginMethodHandler.java b/facebook/src/com/facebook/login/GetTokenLoginMethodHandler.java
index 311fa06f5..a6136718e 100644
--- a/facebook/src/com/facebook/login/GetTokenLoginMethodHandler.java
+++ b/facebook/src/com/facebook/login/GetTokenLoginMethodHandler.java
@@ -54,6 +54,7 @@ String getNameForLogging() {
     void cancel() {
         if (getTokenClient != null) {
             getTokenClient.cancel();
+            getTokenClient.setCompletedListener(null);
             getTokenClient = null;
         }
     }
@@ -79,6 +80,9 @@ public void completed(Bundle result) {
     }
 
     void getTokenCompleted(LoginClient.Request request, Bundle result) {
+        if (getTokenClient != null) {
+            getTokenClient.setCompletedListener(null);
+        }
         getTokenClient = null;
 
         loginClient.notifyBackgroundProcessingStop();
diff --git a/facebook/src/com/facebook/login/KatanaProxyLoginMethodHandler.java b/facebook/src/com/facebook/login/KatanaProxyLoginMethodHandler.java
index 31d185ca0..2385e9f40 100644
--- a/facebook/src/com/facebook/login/KatanaProxyLoginMethodHandler.java
+++ b/facebook/src/com/facebook/login/KatanaProxyLoginMethodHandler.java
@@ -74,7 +74,7 @@ boolean onActivityResult(int requestCode, int resultCode, Intent data) {
             // This happens if the user presses 'Back'.
             outcome = LoginClient.Result.createCancelResult(request, "Operation canceled");
         } else if (resultCode == Activity.RESULT_CANCELED) {
-            outcome = LoginClient.Result.createCancelResult(request, data.getStringExtra("error"));
+            outcome = handleResultCancel(request, data);
         } else if (resultCode != Activity.RESULT_OK) {
             outcome = LoginClient.Result.createErrorResult(request,
                     "Unexpected resultCode from authorization.", null);
@@ -92,15 +92,9 @@ boolean onActivityResult(int requestCode, int resultCode, Intent data) {
 
     private LoginClient.Result handleResultOk(LoginClient.Request request, Intent data) {
         Bundle extras = data.getExtras();
-        String error = extras.getString("error");
-        if (error == null) {
-            error = extras.getString("error_type");
-        }
+        String error = getError(extras);
         String errorCode = extras.getString("error_code");
-        String errorMessage = extras.getString("error_message");
-        if (errorMessage == null) {
-            errorMessage = extras.getString("error_description");
-        }
+        String errorMessage = getErrorMessage(extras);
 
         String e2e = extras.getString(NativeProtocol.FACEBOOK_PROXY_AUTH_E2E_KEY);
         if (!Utility.isNullOrEmpty(e2e)) {
@@ -125,6 +119,39 @@ boolean onActivityResult(int requestCode, int resultCode, Intent data) {
         }
     }
 
+    private LoginClient.Result handleResultCancel(LoginClient.Request request, Intent data) {
+        Bundle extras = data.getExtras();
+        String error = getError(extras);
+        String errorCode = extras.getString("error_code");
+
+        // If the device has lost network, the result will be a cancel with a connection failure
+        // error. We want our consumers to be notified of this as an error so they can tell their
+        // users to "reconnect and try again".
+        if (ServerProtocol.errorConnectionFailure.equals(errorCode)) {
+            String errorMessage = getErrorMessage(extras);
+
+            return LoginClient.Result.createErrorResult(request, error, errorMessage, errorCode);
+        }
+
+        return LoginClient.Result.createCancelResult(request, error);
+    }
+
+    private String getError(Bundle extras) {
+        String error = extras.getString("error");
+        if (error == null) {
+            error = extras.getString("error_type");
+        }
+        return error;
+    }
+
+    private String getErrorMessage(Bundle extras) {
+        String errorMessage = extras.getString("error_message");
+        if (errorMessage == null) {
+            errorMessage = extras.getString("error_description");
+        }
+        return errorMessage;
+    }
+
     protected boolean tryIntent(Intent intent, int requestCode) {
         if (intent == null) {
             return false;
diff --git a/facebook/src/com/facebook/login/LoginBehavior.java b/facebook/src/com/facebook/login/LoginBehavior.java
index e2d4fd6fb..aa42c4ec0 100644
--- a/facebook/src/com/facebook/login/LoginBehavior.java
+++ b/facebook/src/com/facebook/login/LoginBehavior.java
@@ -25,21 +25,21 @@
  */
 public enum LoginBehavior {
     /**
-     * Specifies that login should attempt Single Sign On (SSO), and if that
-     * does not work fall back to dialog auth. This is the default behavior.
+     * Specifies that login should attempt login in using the Facebook App, and if that
+     * does not work fall back to web dialog auth. This is the default behavior.
      */
-    SSO_WITH_FALLBACK(true, true),
+    NATIVE_WITH_FALLBACK(true, true),
 
     /**
-     * Specifies that login should only attempt SSO. If SSO fails, then the
-     * login fails.
+     * Specifies that login should only attempt to login using the Facebook App.
+     * If the Facebook App cannot be used then the login fails.
      */
-    SSO_ONLY(true, false),
+    NATIVE_ONLY(true, false),
 
     /**
-     * Specifies that SSO should not be attempted, and to only use dialog auth.
+     * Specifies that only the web dialog auth should be used.
      */
-    SUPPRESS_SSO(false, true);
+    WEB_ONLY(false, true);
 
     private final boolean allowsKatanaAuth;
     private final boolean allowsWebViewAuth;
diff --git a/facebook/src/com/facebook/login/LoginManager.java b/facebook/src/com/facebook/login/LoginManager.java
index fb1eb2266..42b265e45 100644
--- a/facebook/src/com/facebook/login/LoginManager.java
+++ b/facebook/src/com/facebook/login/LoginManager.java
@@ -59,11 +59,10 @@
 
     private static volatile LoginManager instance;
 
-    private LoginBehavior loginBehavior = LoginBehavior.SSO_WITH_FALLBACK;
+    private LoginBehavior loginBehavior = LoginBehavior.NATIVE_WITH_FALLBACK;
     private DefaultAudience defaultAudience = DefaultAudience.FRIENDS;
     private LoginClient.Request pendingLoginRequest;
     private HashMap<String, String> pendingLoggingExtras;
-    private Context context;
     private LoginLogger loginLogger;
 
     LoginManager() {
@@ -355,7 +354,7 @@ private void startLogin(
 
         this.pendingLoginRequest = request;
         this.pendingLoggingExtras = new HashMap<>();
-        this.context = startActivityDelegate.getActivityContext();
+        this.loginLogger = getLoggerForContext(startActivityDelegate.getActivityContext());
 
         logStartLogin();
 
@@ -388,31 +387,38 @@ public boolean onActivityResult(int resultCode, Intent data) {
         }
     }
 
-    private LoginLogger getLogger() {
-        if (loginLogger == null ||
-                !loginLogger.getApplicationId().equals(
-                        pendingLoginRequest.getApplicationId())) {
-            loginLogger = new LoginLogger(
-                    context,
-                    pendingLoginRequest.getApplicationId());
+    private LoginLogger getLoggerForContext(Context context) {
+        if (context == null || pendingLoginRequest == null) {
+            return null;
         }
-        return loginLogger;
+
+        LoginLogger logger = this.loginLogger;
+        if (logger == null ||
+                !logger.getApplicationId().equals(pendingLoginRequest.getApplicationId())) {
+            logger = new LoginLogger(context, pendingLoginRequest.getApplicationId());
+        }
+        return logger;
     }
 
     private void logStartLogin() {
-        getLogger().logStartLogin(pendingLoginRequest);
+        if (loginLogger != null && pendingLoginRequest != null) {
+            loginLogger.logStartLogin(pendingLoginRequest);
+        }
     }
 
     private void logCompleteLogin(LoginClient.Result.Code result, Map<String, String> resultExtras,
                                   Exception exception) {
+        if (loginLogger == null) {
+            return;
+        }
         if (pendingLoginRequest == null) {
             // We don't expect this to happen, but if it does, log an event for diagnostic purposes.
-            getLogger().logUnexpectedError(
-                LoginLogger.EVENT_NAME_LOGIN_COMPLETE,
-                "Unexpected call to logCompleteLogin with null pendingAuthorizationRequest."
+            loginLogger.logUnexpectedError(
+                    LoginLogger.EVENT_NAME_LOGIN_COMPLETE,
+                    "Unexpected call to logCompleteLogin with null pendingAuthorizationRequest."
             );
         } else {
-            getLogger().logCompleteLogin(
+            loginLogger.logCompleteLogin(
                     pendingLoginRequest.getAuthId(),
                     pendingLoggingExtras,
                     result,
@@ -501,14 +507,15 @@ private void finishLogin(
                     || (loginResult != null
                            && loginResult.getRecentlyGrantedPermissions().size() == 0)) {
                 callback.onCancel();
-                return;
-            }
-            if (exception != null) {
+            } else if (exception != null) {
                 callback.onError(exception);
             } else if (newToken != null) {
                 callback.onSuccess(loginResult);
             }
         }
+
+        this.pendingLoginRequest = null;
+        this.loginLogger = null;
     }
 
     private static class ActivityStartActivityDelegate implements StartActivityDelegate {
diff --git a/facebook/src/com/facebook/login/WebViewLoginMethodHandler.java b/facebook/src/com/facebook/login/WebViewLoginMethodHandler.java
index bb323602f..4c13570ef 100644
--- a/facebook/src/com/facebook/login/WebViewLoginMethodHandler.java
+++ b/facebook/src/com/facebook/login/WebViewLoginMethodHandler.java
@@ -31,6 +31,7 @@
 
 import com.facebook.AccessToken;
 import com.facebook.AccessTokenSource;
+import com.facebook.FacebookSdk;
 import com.facebook.appevents.AppEventsConstants;
 import com.facebook.internal.FacebookDialogFragment;
 import com.facebook.FacebookException;
@@ -123,7 +124,8 @@ public void onComplete(Bundle values, FacebookException error) {
                 parameters)
                 .setE2E(e2e)
                 .setIsRerequest(request.isRerequest())
-                .setOnCompleteListener(listener);
+                .setOnCompleteListener(listener)
+                .setTheme(FacebookSdk.getWebDialogTheme());
         loginDialog = builder.build();
 
         FacebookDialogFragment dialogFragment = new FacebookDialogFragment();
diff --git a/facebook/src/com/facebook/login/widget/LoginButton.java b/facebook/src/com/facebook/login/widget/LoginButton.java
index d3b230551..21e878729 100644
--- a/facebook/src/com/facebook/login/widget/LoginButton.java
+++ b/facebook/src/com/facebook/login/widget/LoginButton.java
@@ -31,7 +31,6 @@
 import android.util.AttributeSet;
 import android.view.View;
 import com.facebook.*;
-import com.facebook.R;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.CallbackManagerImpl;
@@ -53,8 +52,6 @@
  * This control requires the app ID to be specified in the AndroidManifest.xml.
  */
 public class LoginButton extends FacebookButtonBase {
-    private static final int DEFAULT_REQUEST_CODE =
-            CallbackManagerImpl.RequestCodeOffset.Login.toRequestCode();
 
     // ***
     // Keep all the enum values in sync with attrs.xml
@@ -63,7 +60,7 @@
     /**
      * The display modes for the login button tool tip.
      */
-    public static enum ToolTipMode {
+    public enum ToolTipMode {
         /**
          * Default display mode. A server query will determine if the tool tip should be displayed
          * and, if so, what the string shown to the user should be.
@@ -94,7 +91,7 @@ public static ToolTipMode fromInt(int enumValue) {
 
         private String stringValue;
         private int intValue;
-        private ToolTipMode(String stringValue, int value) {
+        ToolTipMode(String stringValue, int value) {
             this.stringValue = stringValue;
             this.intValue = value;
         }
@@ -127,7 +124,7 @@ public int getValue() {
         private DefaultAudience defaultAudience = DefaultAudience.FRIENDS;
         private List<String> permissions = Collections.<String>emptyList();
         private LoginAuthorizationType authorizationType = null;
-        private LoginBehavior loginBehavior = LoginBehavior.SSO_WITH_FALLBACK;
+        private LoginBehavior loginBehavior = LoginBehavior.NATIVE_WITH_FALLBACK;
 
         public void setDefaultAudience(DefaultAudience defaultAudience) {
             this.defaultAudience = defaultAudience;
@@ -190,8 +187,7 @@ public LoginButton(Context context) {
                 null,
                 0,
                 0,
-                AnalyticsEvents.EVENT_LOGIN_BUTTON_CREATE,
-                DEFAULT_REQUEST_CODE);
+                AnalyticsEvents.EVENT_LOGIN_BUTTON_CREATE);
     }
 
     /**
@@ -205,8 +201,7 @@ public LoginButton(Context context, AttributeSet attrs) {
                 attrs,
                 0,
                 0,
-                AnalyticsEvents.EVENT_LOGIN_BUTTON_CREATE,
-                DEFAULT_REQUEST_CODE);
+                AnalyticsEvents.EVENT_LOGIN_BUTTON_CREATE);
     }
 
     /**
@@ -220,8 +215,7 @@ public LoginButton(Context context, AttributeSet attrs, int defStyle) {
                 attrs,
                 defStyle,
                 0,
-                AnalyticsEvents.EVENT_LOGIN_BUTTON_CREATE,
-                DEFAULT_REQUEST_CODE);
+                AnalyticsEvents.EVENT_LOGIN_BUTTON_CREATE);
     }
 
     /**
@@ -351,7 +345,7 @@ public void clearPermissions() {
 
     /**
      * Sets the login behavior during authorization. If null is specified, the default
-     * ({@link com.facebook.login.LoginBehavior LoginBehavior.SSO_WITH_FALLBACK}
+     * ({@link com.facebook.login.LoginBehavior LoginBehavior.NATIVE_WITH_FALLBACK}
      * will be used.
      *
      * @param loginBehavior The {@link com.facebook.login.LoginBehavior LoginBehavior} that
@@ -364,7 +358,7 @@ public void setLoginBehavior(LoginBehavior loginBehavior) {
 
     /**
      * Gets the login behavior during authorization. If null is returned, the default
-     * ({@link com.facebook.login.LoginBehavior LoginBehavior.SSO_WITH_FALLBACK}
+     * ({@link com.facebook.login.LoginBehavior LoginBehavior.NATIVE_WITH_FALLBACK}
      * will be used.
      *
      * @return loginBehavior The {@link com.facebook.login.LoginBehavior LoginBehavior} that
@@ -448,23 +442,6 @@ public void registerCallback(
         getLoginManager().registerCallback(callbackManager, callback);
     }
 
-    /**
-     * Registers a login callback to the given callback manager.
-     *
-     * @param callbackManager The callback manager that will encapsulate the callback.
-     * @param callback        The login callback that will be called on login completion.
-     * @param requestCode     The request code to use, this should be outside of the range of those
-     *                        reserved for the Facebook SDK
-     *                        {@link com.facebook.FacebookSdk#isFacebookRequestCode(int)}.
-     */
-    public void registerCallback(
-            final CallbackManager callbackManager,
-            final FacebookCallback<LoginResult> callback,
-            final int requestCode) {
-        setRequestCode(requestCode);
-        registerCallback(callbackManager, callback);
-    }
-
     @Override
     protected void onAttachedToWindow() {
         super.onAttachedToWindow();
@@ -661,7 +638,7 @@ private int measureButtonWidth(final String text) {
 
     private void setButtonText() {
         final Resources resources = getResources();
-        if (AccessToken.getCurrentAccessToken() != null) {
+        if (!isInEditMode() && AccessToken.getCurrentAccessToken() != null) {
             setText((logoutText != null) ?
                     logoutText :
                     resources.getString(R.string.com_facebook_loginview_log_out_button));
@@ -686,10 +663,17 @@ private void setButtonText() {
         }
     }
 
+    @Override
+    protected int getDefaultRequestCode() {
+        return CallbackManagerImpl.RequestCodeOffset.Login.toRequestCode();
+    }
+
     private class LoginClickListener implements OnClickListener {
 
         @Override
         public void onClick(View v) {
+            callExternalOnClickListener(v);
+
             Context context = getContext();
 
             AccessToken accessToken = AccessToken.getCurrentAccessToken();
@@ -760,8 +744,6 @@ public void onClick(DialogInterface dialog, int which) {
             parameters.putInt("logging_in", (accessToken != null) ? 0 : 1);
 
             logger.logSdkEvent(loginLogoutEventName, null, parameters);
-
-            callExternalOnClickListener(v);
         }
     }
 
diff --git a/facebook/src/com/facebook/share/ShareApi.java b/facebook/src/com/facebook/share/ShareApi.java
index b9a2fb2be..695c328e8 100644
--- a/facebook/src/com/facebook/share/ShareApi.java
+++ b/facebook/src/com/facebook/share/ShareApi.java
@@ -57,8 +57,13 @@
  */
 public final class ShareApi {
     private static final String TAG = "ShareApi";
+    private static final String DEFAULT_GRAPH_NODE = "me";
+    private static final String PHOTOS_EDGE = "photos";
+    private static final String GRAPH_PATH_FORMAT = "%s/%s";
+    private static final String DEFAULT_CHARSET = "UTF-8";
 
     private String message;
+    private String graphNode;
     private final ShareContent shareContent;
 
     /**
@@ -81,6 +86,7 @@ public static void share(
      */
     public ShareApi(final ShareContent shareContent) {
         this.shareContent = shareContent;
+        this.graphNode = DEFAULT_GRAPH_NODE;
     }
 
     /**
@@ -101,6 +107,23 @@ public void setMessage(final String message) {
         this.message = message;
     }
 
+    /**
+     * Returns the graph node to share to.
+     * @return the graph node.
+     */
+    public String getGraphNode() {
+        return this.graphNode;
+    }
+
+    /**
+     * Sets the graph node to share to (this can be a user id, event id, page id, group id, album
+     * id, etc).
+     * @param graphNode the graph node to share to.
+     */
+    public void setGraphNode(final String graphNode) {
+        this.graphNode = graphNode;
+    }
+
     /**
      * Returns the content to be shared.
      *
@@ -164,7 +187,18 @@ public void share(FacebookCallback<Sharer.Result> callback) {
         } else if (shareContent instanceof ShareOpenGraphContent) {
             this.shareOpenGraphContent((ShareOpenGraphContent) shareContent, callback);
         }
+    }
 
+    // Get the graph path, pathAfterGraphNode must be properly URL encoded
+    private String getGraphPath(final String pathAfterGraphNode) {
+        try {
+            return String.format(
+                    Locale.ROOT, GRAPH_PATH_FORMAT,
+                    URLEncoder.encode(getGraphNode(), DEFAULT_CHARSET),
+                    pathAfterGraphNode);
+        } catch (UnsupportedEncodingException e) {
+            return null;
+        }
     }
 
     private void addCommonParameters(final Bundle bundle, ShareContent shareContent) {
@@ -213,7 +247,8 @@ public void onComplete() {
 
                     new GraphRequest(
                             AccessToken.getCurrentAccessToken(),
-                            "/me/" + URLEncoder.encode(action.getActionType(), "UTF-8"),
+                            getGraphPath(
+                                    URLEncoder.encode(action.getActionType(), DEFAULT_CHARSET)),
                             parameters,
                             HttpMethod.POST,
                             requestCallback).executeAsync();
@@ -322,16 +357,20 @@ public void onCompleted(GraphResponse response) {
                     caption = this.getMessage();
                 }
                 if (bitmap != null) {
-                    requests.add(ShareInternalUtility.newUploadPhotoRequest(
+                    requests.add(GraphRequest.newUploadPhotoRequest(
                             accessToken,
+                            getGraphPath(PHOTOS_EDGE),
                             bitmap,
                             caption,
+                            photo.getParameters(),
                             requestCallback));
                 } else if (photoUri != null) {
-                    requests.add(ShareInternalUtility.newUploadPhotoRequest(
+                    requests.add(GraphRequest.newUploadPhotoRequest(
                             accessToken,
+                            getGraphPath(PHOTOS_EDGE),
                             photoUri,
                             caption,
+                            photo.getParameters(),
                             requestCallback));
                 }
             }
@@ -364,7 +403,7 @@ public void onCompleted(GraphResponse response) {
         parameters.putString("ref", linkContent.getRef());
         new GraphRequest(
                 AccessToken.getCurrentAccessToken(),
-                "/me/feed",
+                getGraphPath("feed"),
                 parameters,
                 HttpMethod.POST,
                 requestCallback).executeAsync();
@@ -373,13 +412,13 @@ public void onCompleted(GraphResponse response) {
     private void shareVideoContent(final ShareVideoContent videoContent,
                                    final FacebookCallback<Sharer.Result> callback) {
         try {
-            VideoUploader.uploadAsync(videoContent, callback);
+            VideoUploader.uploadAsync(videoContent, getGraphNode(), callback);
         } catch (final FileNotFoundException ex) {
             ShareInternalUtility.invokeCallbackWithException(callback, ex);
         }
     }
 
-    private static void stageArrayList(final ArrayList arrayList,
+    private void stageArrayList(final ArrayList arrayList,
                                        final CollectionMapper.OnMapValueCompleteListener
                                                onArrayListStagedListener) {
         final JSONArray stagedObject = new JSONArray();
@@ -441,7 +480,7 @@ public void onError(FacebookException exception) {
         stageCollectionValues(collection, onStagedArrayMapperCompleteListener);
     }
 
-    private static <T> void stageCollectionValues(final CollectionMapper.Collection<T> collection,
+    private <T> void stageCollectionValues(final CollectionMapper.Collection<T> collection,
                                                   final CollectionMapper.OnMapperCompleteListener
                                                           onCollectionValuesStagedListener) {
         final CollectionMapper.ValueMapper valueMapper = new CollectionMapper.ValueMapper() {
@@ -465,7 +504,7 @@ public void mapValue(Object value,
         CollectionMapper.iterate(collection, valueMapper, onCollectionValuesStagedListener);
     }
 
-    private static void stageOpenGraphAction(final Bundle parameters,
+    private void stageOpenGraphAction(final Bundle parameters,
                                              final CollectionMapper.OnMapperCompleteListener
                                                      onOpenGraphActionStagedListener) {
         final CollectionMapper.Collection<String> collection = new CollectionMapper
@@ -493,7 +532,7 @@ public void set(String key,
         stageCollectionValues(collection, onOpenGraphActionStagedListener);
     }
 
-    private static void stageOpenGraphObject(final ShareOpenGraphObject object,
+    private void stageOpenGraphObject(final ShareOpenGraphObject object,
                                              final CollectionMapper.OnMapValueCompleteListener
                                                      onOpenGraphObjectStagedListener) {
         String type = object.getString("type");
@@ -575,7 +614,9 @@ public void onComplete() {
                         try {
                             new GraphRequest(
                                     AccessToken.getCurrentAccessToken(),
-                                    "/me/objects/" + URLEncoder.encode(ogType, "UTF-8"),
+                                    getGraphPath(
+                                            "objects/" +
+                                                    URLEncoder.encode(ogType, DEFAULT_CHARSET)),
                                     parameters,
                                     HttpMethod.POST,
                                     requestCallback).executeAsync();
@@ -596,7 +637,7 @@ public void onError(FacebookException exception) {
         stageCollectionValues(collection, onMapperCompleteListener);
     }
 
-    private static void stagePhoto(final SharePhoto photo,
+    private void stagePhoto(final SharePhoto photo,
                                    final CollectionMapper.OnMapValueCompleteListener
                                            onPhotoStagedListener) {
         final Bitmap bitmap = photo.getBitmap();
diff --git a/facebook/src/com/facebook/share/internal/LegacyNativeDialogParameters.java b/facebook/src/com/facebook/share/internal/LegacyNativeDialogParameters.java
index 67ebe55b8..a00f9e5fc 100644
--- a/facebook/src/com/facebook/share/internal/LegacyNativeDialogParameters.java
+++ b/facebook/src/com/facebook/share/internal/LegacyNativeDialogParameters.java
@@ -70,10 +70,9 @@ public static Bundle create(
             nativeParams = create(videoContent, shouldFailOnDataError);
         } else if (shareContent instanceof ShareOpenGraphContent) {
             final ShareOpenGraphContent openGraphContent = (ShareOpenGraphContent) shareContent;
-            final ShareOpenGraphAction action = openGraphContent.getAction();
             try {
                 JSONObject openGraphActionJSON = ShareInternalUtility.toJSONObjectForCall(
-                        callId, action);
+                        callId, openGraphContent);
 
                 nativeParams = create(openGraphContent, openGraphActionJSON, shouldFailOnDataError);
             } catch (final JSONException e) {
diff --git a/facebook/src/com/facebook/share/internal/LikeButton.java b/facebook/src/com/facebook/share/internal/LikeButton.java
index 82e4b3fac..6abf9e1a6 100644
--- a/facebook/src/com/facebook/share/internal/LikeButton.java
+++ b/facebook/src/com/facebook/share/internal/LikeButton.java
@@ -33,7 +33,7 @@
  */
 public class LikeButton extends FacebookButtonBase {
     public LikeButton(Context context, boolean isLiked) {
-        super(context, null, 0, 0, AnalyticsEvents.EVENT_LIKE_BUTTON_CREATE, 0);
+        super(context, null, 0, 0, AnalyticsEvents.EVENT_LIKE_BUTTON_CREATE);
         this.setSelected(isLiked);
     }
 
@@ -53,6 +53,11 @@ protected void configureButton(
         updateForLikeStatus();
     }
 
+    @Override
+    protected int getDefaultRequestCode() {
+        return 0;
+    }
+
     @Override
     protected int getDefaultStyleResource() {
         return R.style.com_facebook_button_like;
diff --git a/facebook/src/com/facebook/share/internal/NativeDialogParameters.java b/facebook/src/com/facebook/share/internal/NativeDialogParameters.java
index 16eb1ecc1..40443c923 100644
--- a/facebook/src/com/facebook/share/internal/NativeDialogParameters.java
+++ b/facebook/src/com/facebook/share/internal/NativeDialogParameters.java
@@ -68,13 +68,14 @@ public static Bundle create(
             nativeParams = create(photoContent, photoUrls, shouldFailOnDataError);
         } else if (shareContent instanceof ShareVideoContent) {
             final ShareVideoContent videoContent = (ShareVideoContent) shareContent;
-            nativeParams = create(videoContent, shouldFailOnDataError);
+            String videoUrl = ShareInternalUtility.getVideoUrl(videoContent, callId);
+
+            nativeParams = create(videoContent, videoUrl, shouldFailOnDataError);
         } else if (shareContent instanceof ShareOpenGraphContent) {
             final ShareOpenGraphContent openGraphContent = (ShareOpenGraphContent) shareContent;
-            final ShareOpenGraphAction action = openGraphContent.getAction();
             try {
                 JSONObject openGraphActionJSON = ShareInternalUtility.toJSONObjectForCall(
-                        callId, action);
+                        callId, openGraphContent);
                 openGraphActionJSON = ShareInternalUtility.removeNamespacesFromOGJsonObject(
                         openGraphActionJSON, false);
                 nativeParams = create(openGraphContent, openGraphActionJSON, shouldFailOnDataError);
@@ -110,14 +111,16 @@ private static Bundle create(
         return params;
     }
 
-    private static Bundle create(ShareVideoContent videoContent, boolean dataErrorsFatal) {
-        ShareVideo video = videoContent.getVideo();
+    private static Bundle create(
+            ShareVideoContent videoContent,
+            String videoUrl,
+            boolean dataErrorsFatal) {
         Bundle params = createBaseParameters(videoContent, dataErrorsFatal);
 
         Utility.putNonEmptyString(params, ShareConstants.TITLE, videoContent.getContentTitle());
         Utility.putNonEmptyString(
                 params, ShareConstants.DESCRIPTION, videoContent.getContentDescription());
-        Utility.putUri(params, ShareConstants.VIDEO_URL, video.getLocalUrl());
+        Utility.putNonEmptyString(params, ShareConstants.VIDEO_URL, videoUrl);
 
         return params;
     }
diff --git a/facebook/src/com/facebook/share/internal/ShareConstants.java b/facebook/src/com/facebook/share/internal/ShareConstants.java
index 1d23422a0..97bec8007 100644
--- a/facebook/src/com/facebook/share/internal/ShareConstants.java
+++ b/facebook/src/com/facebook/share/internal/ShareConstants.java
@@ -117,4 +117,13 @@
 
     public static final int MAXIMUM_PHOTO_COUNT = 6;
     static final String MY_VIDEOS = "me/videos";
+
+    // Feed Dialog
+    public static final String FEED_TO_PARAM = "to";
+    public static final String FEED_LINK_PARAM = "link";
+    public static final String FEED_PICTURE_PARAM = "picture";
+    public static final String FEED_SOURCE_PARAM = "source";
+    public static final String FEED_NAME_PARAM = "name";
+    public static final String FEED_CAPTION_PARAM = "caption";
+    public static final String FEED_DESCRIPTION_PARAM = "description";
 }
diff --git a/facebook/src/com/facebook/share/internal/ShareContentValidation.java b/facebook/src/com/facebook/share/internal/ShareContentValidation.java
index 446c012c0..c3b0aebb1 100644
--- a/facebook/src/com/facebook/share/internal/ShareContentValidation.java
+++ b/facebook/src/com/facebook/share/internal/ShareContentValidation.java
@@ -192,9 +192,14 @@ private static void validateVideo(ShareVideo video, Validator validator) {
             throw new FacebookException("Cannot share a null ShareVideo");
         }
 
-        if (video.getLocalUrl() == null) {
+        Uri localUri = video.getLocalUrl();
+        if (localUri == null) {
             throw new FacebookException("ShareVideo does not have a LocalUrl specified");
         }
+
+        if (!Utility.isContentUri(localUri) && !Utility.isFileUri(localUri)) {
+            throw new FacebookException("ShareVideo must reference a video that is on the device");
+        }
     }
 
     private static void validateOpenGraphContent(
diff --git a/facebook/src/com/facebook/share/internal/ShareFeedContent.java b/facebook/src/com/facebook/share/internal/ShareFeedContent.java
new file mode 100644
index 000000000..2ae7bf88f
--- /dev/null
+++ b/facebook/src/com/facebook/share/internal/ShareFeedContent.java
@@ -0,0 +1,198 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.share.internal;
+
+import android.os.Parcel;
+import android.os.Parcelable;
+
+import com.facebook.share.model.ShareContent;
+
+import java.util.HashMap;
+import java.util.Map;
+
+// This class is used specifically for backwards support in unity for various feed parameters
+// Currently this content is only supported if you set the mode to Feed when sharing.
+public class ShareFeedContent
+        extends ShareContent<ShareFeedContent, ShareFeedContent.Builder> {
+    private final String toId;
+    private final String link;
+    private final String linkName;
+    private final String linkCaption;
+    private final String linkDescription;
+    private final String picture;
+    private final String mediaSource;
+
+    private ShareFeedContent(final Builder builder) {
+        super(builder);
+        this.toId = builder.toId;
+        this.link = builder.link;
+        this.linkName = builder.linkName;
+        this.linkCaption = builder.linkCaption;
+        this.linkDescription = builder.linkDescription;
+        this.picture = builder.picture;
+        this.mediaSource = builder.mediaSource;
+    }
+
+    ShareFeedContent(final Parcel in) {
+        super(in);
+        this.toId = in.readString();
+        this.link = in.readString();
+        this.linkName = in.readString();
+        this.linkCaption = in.readString();
+        this.linkDescription = in.readString();
+        this.picture = in.readString();
+        this.mediaSource = in.readString();
+    }
+
+    public String getToId() {
+        return toId;
+    }
+
+    public String getLink() {
+        return link;
+    }
+
+    public String getLinkName() {
+        return linkName;
+    }
+
+    public String getLinkCaption() {
+        return linkCaption;
+    }
+
+    public String getLinkDescription() {
+        return linkDescription;
+    }
+
+    public String getPicture() {
+        return picture;
+    }
+
+    public String getMediaSource() {
+        return mediaSource;
+    }
+
+    public int describeContents() {
+        return 0;
+    }
+
+    public void writeToParcel(final Parcel out, final int flags) {
+        super.writeToParcel(out, flags);
+        out.writeString(this.toId);
+        out.writeString(this.link);
+        out.writeString(this.linkName);
+        out.writeString(this.linkCaption);
+        out.writeString(this.linkDescription);
+        out.writeString(this.picture);
+        out.writeString(this.mediaSource);
+    }
+
+    @SuppressWarnings("unused")
+    public static final Parcelable.Creator<ShareFeedContent> CREATOR =
+            new Parcelable.Creator<ShareFeedContent>() {
+                public ShareFeedContent createFromParcel(final Parcel in) {
+                    return new ShareFeedContent(in);
+                }
+
+                public ShareFeedContent[] newArray(final int size) {
+                    return new ShareFeedContent[size];
+                }
+            };
+
+    /**
+     * Builder for the {@link ShareFeedContent} interface.
+     */
+    public static final class Builder
+            extends ShareContent.Builder<ShareFeedContent, Builder> {
+        private String toId;
+        private String link;
+        private String linkName;
+        private String linkCaption;
+        private String linkDescription;
+        private String picture;
+        private String mediaSource;
+
+        public ShareFeedContent.Builder setToId(String toId) {
+            this.toId = toId;
+            return this;
+        }
+
+        public ShareFeedContent.Builder setLink(String link) {
+            this.link = link;
+            return this;
+        }
+
+        public ShareFeedContent.Builder setLinkName(String linkName) {
+            this.linkName = linkName;
+            return this;
+        }
+
+        public ShareFeedContent.Builder setLinkCaption(String linkCaption) {
+            this.linkCaption = linkCaption;
+            return this;
+        }
+
+        public ShareFeedContent.Builder setLinkDescription(String linkDescription) {
+            this.linkDescription = linkDescription;
+            return this;
+        }
+
+        public ShareFeedContent.Builder setPicture(String picture) {
+            this.picture = picture;
+            return this;
+        }
+
+        public ShareFeedContent.Builder setMediaSource(String mediaSource) {
+            this.mediaSource = mediaSource;
+            return this;
+        }
+
+        @Override
+        public ShareFeedContent build() {
+            return new ShareFeedContent(this);
+        }
+
+        @Override
+        public Builder readFrom(final ShareFeedContent model) {
+            if (model == null) {
+                return this;
+            }
+            return super
+                    .readFrom(model)
+                    .setToId(model.getToId())
+                    .setLink(model.getLink())
+                    .setLinkName(model.getLinkName())
+                    .setLinkCaption(model.getLinkCaption())
+                    .setLinkDescription(model.getLinkDescription())
+                    .setPicture(model.getPicture())
+                    .setMediaSource(model.getMediaSource())
+                    ;
+        }
+
+        @Override
+        public Builder readFrom(final Parcel parcel) {
+            return this.readFrom(
+                    (ShareFeedContent) parcel.readParcelable(
+                            ShareFeedContent.class.getClassLoader()));
+        }
+
+    }
+}
diff --git a/facebook/src/com/facebook/share/internal/ShareInternalUtility.java b/facebook/src/com/facebook/share/internal/ShareInternalUtility.java
index 9152d24bb..e80748629 100644
--- a/facebook/src/com/facebook/share/internal/ShareInternalUtility.java
+++ b/facebook/src/com/facebook/share/internal/ShareInternalUtility.java
@@ -27,7 +27,6 @@
 import android.os.Bundle;
 import android.os.ParcelFileDescriptor;
 import android.support.annotation.Nullable;
-import android.text.TextUtils;
 import android.util.Pair;
 
 import com.facebook.AccessToken;
@@ -41,7 +40,6 @@
 import com.facebook.GraphRequest;
 import com.facebook.GraphRequest.Callback;
 import com.facebook.GraphResponse;
-import com.facebook.internal.GraphUtil;
 import com.facebook.HttpMethod;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.internal.AnalyticsEvents;
@@ -55,6 +53,7 @@
 import com.facebook.share.model.ShareOpenGraphContent;
 import com.facebook.share.model.SharePhoto;
 import com.facebook.share.model.SharePhotoContent;
+import com.facebook.share.model.ShareVideoContent;
 import com.facebook.share.widget.LikeView;
 
 import org.json.JSONArray;
@@ -64,7 +63,9 @@
 import java.io.File;
 import java.io.FileNotFoundException;
 import java.util.ArrayList;
+import java.util.HashSet;
 import java.util.List;
+import java.util.Set;
 import java.util.UUID;
 
 /**
@@ -73,16 +74,10 @@
  * unsupported, and they may be modified or removed without warning at any time.
  */
 public final class ShareInternalUtility {
-    private static final String OBJECT_PARAM = "object";
-    private static final String MY_PHOTOS = "me/photos";
-    private static final String MY_FEED = "me/feed";
+    public static final String MY_PHOTOS = "me/photos";
     private static final String MY_STAGING_RESOURCES = "me/staging_resources";
-    private static final String MY_OBJECTS_FORMAT = "me/objects/%s";
-    private static final String MY_ACTION_FORMAT = "me/%s";
 
     // Parameter names/values
-    private static final String PICTURE_PARAM = "picture";
-    private static final String CAPTION_PARAM = "caption";
     private static final String STAGING_PARAM = "file";
 
     public static void invokeCallbackWithException(
@@ -119,19 +114,6 @@ public static void invokeCallbackWithResults(
         }
     }
 
-    /**
-     * Determines whether the native dialog completed normally (without error or exception).
-     *
-     * @param result the bundle passed back to onActivityResult
-     * @return true if the native dialog completed normally
-     */
-    public static boolean getNativeDialogDidComplete(Bundle result) {
-        if (result.containsKey(NativeProtocol.RESULT_ARGS_DIALOG_COMPLETE_KEY)) {
-            return result.getBoolean(NativeProtocol.RESULT_ARGS_DIALOG_COMPLETE_KEY);
-        }
-        return result.getBoolean(NativeProtocol.EXTRA_DIALOG_COMPLETE_KEY, false);
-    }
-
     /**
      * Returns the gesture with which the user completed the native dialog. This is only returned
      * if the user has previously authorized the calling app with basic permissions.
@@ -310,11 +292,28 @@ public String apply(NativeAppCallAttachmentStore.Attachment item) {
         return attachmentUrls;
     }
 
+    public static String getVideoUrl(final ShareVideoContent videoContent, final UUID appCallId) {
+        if (videoContent == null || videoContent.getVideo() == null) {
+            return null;
+        }
+
+        NativeAppCallAttachmentStore.Attachment attachment =
+                NativeAppCallAttachmentStore.createAttachment(
+                        appCallId,
+                        videoContent.getVideo().getLocalUrl());
+
+        ArrayList<NativeAppCallAttachmentStore.Attachment> attachments = new ArrayList<>(1);
+        attachments.add(attachment);
+        NativeAppCallAttachmentStore.addAttachments(attachments);
+
+        return attachment.getAttachmentUrl();
+    }
+
     public static JSONObject toJSONObjectForCall(
             final UUID callId,
-            final ShareOpenGraphAction action)
+            final ShareOpenGraphContent content)
             throws JSONException {
-
+        final ShareOpenGraphAction action = content.getAction();
         final ArrayList<NativeAppCallAttachmentStore.Attachment> attachments = new ArrayList<>();
         JSONObject actionJSON = OpenGraphJSONUtility.toJSONObject(
                 action,
@@ -346,6 +345,28 @@ public JSONObject toJSONObject(SharePhoto photo) {
                 });
 
         NativeAppCallAttachmentStore.addAttachments(attachments);
+        // People and place tags must be moved from the share content to the open graph action
+        if (content.getPlaceId() != null) {
+            String placeTag = actionJSON.optString("place");
+
+            // Only if the place tag is already empty or null replace with the id from the
+            // share content
+            if (Utility.isNullOrEmpty(placeTag)) {
+                actionJSON.put("place", content.getPlaceId());
+            }
+        }
+
+        if (content.getPeopleIds() != null) {
+            JSONArray peopleTags = actionJSON.optJSONArray("tags");
+            Set<String> peopleIdSet = peopleTags == null
+                    ? new HashSet<String>()
+                    : Utility.jsonArrayToSet(peopleTags);
+
+            for (String peopleId : content.getPeopleIds()) {
+                peopleIdSet.add(peopleId);
+            }
+            actionJSON.put("tags", new ArrayList<>(peopleIdSet));
+        }
 
         return actionJSON;
     }
@@ -454,11 +475,6 @@ public static JSONObject removeNamespacesFromOGJsonObject(
         return new Pair<>(namespace, fieldName);
     }
 
-    ;
-
-    private ShareInternalUtility() {
-    }
-
     private static NativeAppCallAttachmentStore.Attachment getAttachment(
             UUID callId,
             SharePhoto photo) {
@@ -538,315 +554,6 @@ private static void logShareResult(String shareOutcome, String errorMessage) {
         logger.logSdkEvent(AnalyticsEvents.EVENT_SHARE_RESULT, null, parameters);
     }
 
-    /**
-     * Creates a new Request configured to create a user owned Open Graph object.
-     *
-     * @param accessToken     the accessToken to use, or null
-     * @param openGraphObject the Open Graph object to create; must not be null, and must have a
-     *                        non-empty type and title
-     * @param callback        a callback that will be called when the request is completed to handle
-     *                        success or error conditions
-     * @return a Request that is ready to execute
-     */
-    public static GraphRequest newPostOpenGraphObjectRequest(
-            AccessToken accessToken,
-            JSONObject openGraphObject,
-            Callback callback) {
-        if (openGraphObject == null) {
-            throw new FacebookException("openGraphObject cannot be null");
-        }
-        if (Utility.isNullOrEmpty(openGraphObject.optString("type"))) {
-            throw new FacebookException("openGraphObject must have non-null 'type' property");
-        }
-        if (Utility.isNullOrEmpty(openGraphObject.optString("title"))) {
-            throw new FacebookException("openGraphObject must have non-null 'title' property");
-        }
-
-        String path = String.format(MY_OBJECTS_FORMAT, openGraphObject.optString("type"));
-        Bundle bundle = new Bundle();
-        bundle.putString(OBJECT_PARAM, openGraphObject.toString());
-        return new GraphRequest(accessToken, path, bundle, HttpMethod.POST, callback);
-    }
-
-    /**
-     * Creates a new Request configured to create a user owned Open Graph object.
-     *
-     * @param accessToken      the access token to use, or null
-     * @param type             the fully-specified Open Graph object type (e.g.,
-     *                         my_app_namespace:my_object_name); must not be null
-     * @param title            the title of the Open Graph object; must not be null
-     * @param imageUrl         the link to an image to be associated with the Open Graph object; may
-     *                         be null
-     * @param url              the url to be associated with the Open Graph object; may be null
-     * @param description      the description to be associated with the object; may be null
-     * @param objectProperties any additional type-specific properties for the Open Graph object;
-     *                         may be null
-     * @param callback         a callback that will be called when the request is completed to
-     *                         handle success or error conditions; may be null
-     * @return a Request that is ready to execute
-     */
-    public static GraphRequest newPostOpenGraphObjectRequest(
-            AccessToken accessToken,
-            String type,
-            String title,
-            String imageUrl,
-            String url,
-            String description,
-            JSONObject objectProperties,
-            Callback callback) {
-        JSONObject openGraphObject = GraphUtil.createOpenGraphObjectForPost(
-                type, title, imageUrl, url, description, objectProperties, null);
-        return newPostOpenGraphObjectRequest(accessToken, openGraphObject, callback);
-    }
-
-    /**
-     * Creates a new Request configured to publish an Open Graph action.
-     *
-     * @param accessToken     the access token to use, or null
-     * @param openGraphAction the Open Graph action to create; must not be null, and must have a
-     *                        non-empty 'type'
-     * @param callback        a callback that will be called when the request is completed to handle
-     *                        success or error conditions
-     * @return a Request that is ready to execute
-     */
-    public static GraphRequest newPostOpenGraphActionRequest(
-            AccessToken accessToken,
-            JSONObject openGraphAction,
-            Callback callback) {
-        if (openGraphAction == null) {
-            throw new FacebookException("openGraphAction cannot be null");
-        }
-        String type = openGraphAction.optString("type");
-        if (Utility.isNullOrEmpty(type)) {
-            throw new FacebookException("openGraphAction must have non-null 'type' property");
-        }
-
-        String path = String.format(MY_ACTION_FORMAT, type);
-        return GraphRequest.newPostRequest(accessToken, path, openGraphAction, callback);
-    }
-
-    /**
-     * Creates a new Request configured to update a user owned Open Graph object.
-     *
-     * @param accessToken     the access token to use, or null
-     * @param openGraphObject the Open Graph object to update, which must have a valid 'id'
-     *                        property
-     * @param callback        a callback that will be called when the request is completed to handle
-     *                        success or error conditions
-     * @return a Request that is ready to execute
-     */
-    public static GraphRequest newUpdateOpenGraphObjectRequest(
-            AccessToken accessToken,
-            JSONObject openGraphObject,
-            Callback callback) {
-        if (openGraphObject == null) {
-            throw new FacebookException("openGraphObject cannot be null");
-        }
-
-        String path = openGraphObject.optString("id");
-        if (path == null) {
-            throw new FacebookException("openGraphObject must have an id");
-        }
-
-        Bundle bundle = new Bundle();
-        bundle.putString(OBJECT_PARAM, openGraphObject.toString());
-        return new GraphRequest(accessToken, path, bundle, HttpMethod.POST, callback);
-    }
-
-    /**
-     * Creates a new Request configured to update a user owned Open Graph object.
-     *
-     * @param accessToken      the access token to use, or null
-     * @param id               the id of the Open Graph object
-     * @param title            the title of the Open Graph object
-     * @param imageUrl         the link to an image to be associated with the Open Graph object
-     * @param url              the url to be associated with the Open Graph object
-     * @param description      the description to be associated with the object
-     * @param objectProperties any additional type-specific properties for the Open Graph object
-     * @param callback         a callback that will be called when the request is completed to
-     *                         handle success or error conditions
-     * @return a Request that is ready to execute
-     */
-    public static GraphRequest newUpdateOpenGraphObjectRequest(
-            AccessToken accessToken,
-            String id,
-            String title,
-            String imageUrl,
-            String url,
-            String description,
-            JSONObject objectProperties,
-            Callback callback) {
-        JSONObject openGraphObject = GraphUtil.createOpenGraphObjectForPost(
-                null, title, imageUrl, url, description, objectProperties, id);
-        return newUpdateOpenGraphObjectRequest(accessToken, openGraphObject, callback);
-    }
-
-    /**
-     * Creates a new Request configured to upload a photo to the user's default photo album.
-     *
-     * @param accessToken the access token to use, or null
-     * @param image       the image to upload
-     * @param caption     the user generated caption for the photo.
-     * @param callback    a callback that will be called when the request is completed to handle
-     *                    success or error conditions
-     * @return a Request that is ready to execute
-     */
-    public static GraphRequest newUploadPhotoRequest(
-            AccessToken accessToken,
-            Bitmap image,
-            String caption,
-            Callback callback) {
-        Bundle parameters = new Bundle(1);
-        parameters.putParcelable(PICTURE_PARAM, image);
-        if (caption != null && !caption.isEmpty()) {
-            parameters.putString(CAPTION_PARAM, caption);
-        }
-
-        return new GraphRequest(accessToken, MY_PHOTOS, parameters, HttpMethod.POST, callback);
-    }
-
-    /**
-     * Creates a new Request configured to upload a photo to the user's default photo album. The
-     * photo will be read from the specified file.
-     *
-     * @param accessToken the access token to use, or null
-     * @param file        the file containing the photo to upload
-     * @param caption     the user generated caption for the photo.
-     * @param callback    a callback that will be called when the request is completed to handle
-     *                    success or error conditions
-     * @return a Request that is ready to execute
-     * @throws java.io.FileNotFoundException
-     */
-    public static GraphRequest newUploadPhotoRequest(
-            AccessToken accessToken,
-            File file,
-            String caption,
-            Callback callback
-    ) throws FileNotFoundException {
-        ParcelFileDescriptor descriptor =
-                ParcelFileDescriptor.open(file, ParcelFileDescriptor.MODE_READ_ONLY);
-        Bundle parameters = new Bundle(1);
-        parameters.putParcelable(PICTURE_PARAM, descriptor);
-        if (caption != null && !caption.isEmpty()) {
-            parameters.putString(CAPTION_PARAM, caption);
-        }
-
-        return new GraphRequest(accessToken, MY_PHOTOS, parameters, HttpMethod.POST, callback);
-    }
-
-    /**
-     * Creates a new Request configured to upload a photo to the user's default photo album. The
-     * photo will be read from the specified Uri.
-     *
-     * @param accessToken the access token to use, or null
-     * @param photoUri    the file:// or content:// Uri to the photo on device.
-     * @param caption     the user generated caption for the photo.
-     * @param callback    a callback that will be called when the request is completed to handle
-     *                    success or error conditions
-     * @return a Request that is ready to execute
-     * @throws FileNotFoundException
-     */
-    public static GraphRequest newUploadPhotoRequest(
-            AccessToken accessToken,
-            Uri photoUri,
-            String caption,
-            Callback callback)
-            throws FileNotFoundException {
-        if (Utility.isFileUri(photoUri)) {
-            return newUploadPhotoRequest(
-                    accessToken,
-                    new File(photoUri.getPath()),
-                    caption,
-                    callback);
-        } else if (!Utility.isContentUri(photoUri)) {
-            throw new FacebookException("The photo Uri must be either a file:// or content:// Uri");
-        }
-
-        Bundle parameters = new Bundle(1);
-        parameters.putParcelable(PICTURE_PARAM, photoUri);
-
-        return new GraphRequest(accessToken, MY_PHOTOS, parameters, HttpMethod.POST, callback);
-    }
-
-    /**
-     * Creates a new Request configured to post a status update to a user's feed.
-     *
-     * @param accessToken the access token to use, or null
-     * @param message     the text of the status update
-     * @param callback    a callback that will be called when the request is completed to handle
-     *                    success or error conditions
-     * @return a Request that is ready to execute
-     */
-    public static GraphRequest newStatusUpdateRequest(
-            AccessToken accessToken,
-            String message,
-            Callback callback) {
-        return newStatusUpdateRequest(accessToken, message, (String) null, null, callback);
-    }
-
-    /**
-     * Creates a new Request configured to post a status update to a user's feed.
-     *
-     * @param accessToken the access token to use, or null
-     * @param message     the text of the status update
-     * @param placeId     an optional place id to associate with the post
-     * @param tagIds      an optional list of user ids to tag in the post
-     * @param callback    a callback that will be called when the request is completed to handle
-     *                    success or error conditions
-     * @return a Request that is ready to execute
-     */
-    private static GraphRequest newStatusUpdateRequest(
-            AccessToken accessToken,
-            String message,
-            String placeId,
-            List<String> tagIds,
-            Callback callback) {
-
-        Bundle parameters = new Bundle();
-        parameters.putString("message", message);
-
-        if (placeId != null) {
-            parameters.putString("place", placeId);
-        }
-
-        if (tagIds != null && tagIds.size() > 0) {
-            String tags = TextUtils.join(",", tagIds);
-            parameters.putString("tags", tags);
-        }
-
-        return new GraphRequest(accessToken, MY_FEED, parameters, HttpMethod.POST, callback);
-    }
-
-    /**
-     * Creates a new Request configured to post a status update to a user's feed.
-     *
-     * @param accessToken the access token to use, or null
-     * @param message     the text of the status update
-     * @param place       an optional place to associate with the post
-     * @param tags        an optional list of users to tag in the post
-     * @param callback    a callback that will be called when the request is completed to handle
-     *                    success or error conditions
-     * @return a Request that is ready to execute
-     */
-    public static GraphRequest newStatusUpdateRequest(
-            AccessToken accessToken,
-            String message,
-            JSONObject place,
-            List<JSONObject> tags,
-            Callback callback) {
-
-        List<String> tagIds = null;
-        if (tags != null) {
-            tagIds = new ArrayList<String>(tags.size());
-            for (JSONObject tag : tags) {
-                tagIds.add(tag.optString("id"));
-            }
-        }
-        String placeId = place == null ? null : place.optString("id");
-        return newStatusUpdateRequest(accessToken, message, placeId, tagIds, callback);
-    }
-
-
     /**
      * Creates a new Request configured to upload an image to create a staging resource. Staging
      * resources allow you to post binary data such as images, in preparation for a post of an Open
diff --git a/facebook/src/com/facebook/share/internal/VideoUploader.java b/facebook/src/com/facebook/share/internal/VideoUploader.java
index 9b9207970..fc7c0bae7 100644
--- a/facebook/src/com/facebook/share/internal/VideoUploader.java
+++ b/facebook/src/com/facebook/share/internal/VideoUploader.java
@@ -106,7 +106,7 @@ public static synchronized void uploadAsync(
 
     public static synchronized void uploadAsync(
             ShareVideoContent videoContent,
-            String targetId,
+            String graphNode,
             FacebookCallback<Sharer.Result> callback)
             throws FileNotFoundException {
         if (!initialized) {
@@ -115,13 +115,13 @@ public static synchronized void uploadAsync(
         }
 
         Validate.notNull(videoContent, "videoContent");
-        Validate.notNull(targetId, "targetId");
+        Validate.notNull(graphNode, "graphNode");
         ShareVideo video = videoContent.getVideo();
         Validate.notNull(video, "videoContent.video");
         Uri videoUri = video.getLocalUrl();
         Validate.notNull(videoUri, "videoContent.video.localUrl");
 
-        UploadContext uploadContext = new UploadContext(videoContent, targetId, callback);
+        UploadContext uploadContext = new UploadContext(videoContent, graphNode, callback);
         uploadContext.initialize();
 
         pendingUploads.add(uploadContext);
@@ -287,7 +287,7 @@ private static void logError(
         public final String title;
         public final String description;
         public final String ref;
-        public final String targetId;
+        public final String graphNode;
 
         public final AccessToken accessToken;
 
@@ -300,10 +300,11 @@ private static void logError(
         public String chunkStart = "0";
         public boolean isCanceled;
         public WorkQueue.WorkItem workItem;
+        public Bundle params;
 
         private UploadContext(
                 ShareVideoContent videoContent,
-                String targetId,
+                String graphNode,
                 FacebookCallback<Sharer.Result> callback) {
             // Store off the access token right away so that under no circumstances will we
             // end up with different tokens between phases. We will rely on the access token tracker
@@ -313,8 +314,9 @@ private UploadContext(
             this.title = videoContent.getContentTitle();
             this.description = videoContent.getContentDescription();
             this.ref = videoContent.getRef();
-            this.targetId = targetId;
+            this.graphNode = graphNode;
             this.callback = callback;
+            this.params = videoContent.getVideo().getParameters();
         }
 
         private void initialize()
@@ -482,6 +484,9 @@ public FinishUploadWorkItem(UploadContext uploadContext, int completedRetries) {
         @Override
         public Bundle getParameters() {
             Bundle parameters = new Bundle();
+            if (uploadContext.params != null) {
+                parameters.putAll(uploadContext.params);
+            }
             parameters.putString(PARAM_UPLOAD_PHASE, PARAM_VALUE_UPLOAD_FINISH_PHASE);
             parameters.putString(PARAM_SESSION_ID, uploadContext.sessionId);
             Utility.putNonEmptyString(parameters, PARAM_TITLE, uploadContext.title);
@@ -548,7 +553,7 @@ public void run() {
         protected void executeGraphRequestSynchronously(Bundle parameters) {
             GraphRequest request = new GraphRequest(
                     uploadContext.accessToken,
-                    String.format(Locale.ROOT, "%s/videos", uploadContext.targetId),
+                    String.format(Locale.ROOT, "%s/videos", uploadContext.graphNode),
                     parameters,
                     HttpMethod.POST,
                     null);
diff --git a/facebook/src/com/facebook/share/internal/WebDialogParameters.java b/facebook/src/com/facebook/share/internal/WebDialogParameters.java
index 6ae172b29..757e7cd5b 100644
--- a/facebook/src/com/facebook/share/internal/WebDialogParameters.java
+++ b/facebook/src/com/facebook/share/internal/WebDialogParameters.java
@@ -21,18 +21,25 @@
 package com.facebook.share.internal;
 
 import android.os.Bundle;
+import android.support.annotation.NonNull;
 
 import com.facebook.FacebookException;
 import com.facebook.internal.Utility;
+import com.facebook.internal.WebDialog;
 import com.facebook.share.model.AppGroupCreationContent;
 import com.facebook.share.model.GameRequestContent;
 import com.facebook.share.model.ShareLinkContent;
 import com.facebook.share.model.ShareOpenGraphContent;
 
+import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
+import java.util.Collection;
+import java.util.HashMap;
 import java.util.Locale;
+import java.util.Map;
+import java.util.Set;
 
 /**
  * com.facebook.share.internal is solely for the use of other packages within the
@@ -164,4 +171,45 @@ public static Bundle createForFeed(ShareLinkContent shareLinkContent) {
 
         return webParams;
     }
+
+    public static Bundle createForFeed(ShareFeedContent shareFeedContent) {
+        Bundle webParams = new Bundle();
+
+        Utility.putNonEmptyString(
+                webParams,
+                ShareConstants.FEED_TO_PARAM,
+                shareFeedContent.getToId());
+
+        Utility.putNonEmptyString(
+                webParams,
+                ShareConstants.FEED_LINK_PARAM,
+                shareFeedContent.getLink());
+
+        Utility.putNonEmptyString(
+                webParams,
+                ShareConstants.FEED_PICTURE_PARAM,
+                shareFeedContent.getPicture());
+
+        Utility.putNonEmptyString(
+                webParams,
+                ShareConstants.FEED_SOURCE_PARAM,
+                shareFeedContent.getMediaSource());
+
+        Utility.putNonEmptyString(
+                webParams,
+                ShareConstants.FEED_NAME_PARAM,
+                shareFeedContent.getLinkName());
+
+        Utility.putNonEmptyString(
+                webParams,
+                ShareConstants.FEED_CAPTION_PARAM,
+                shareFeedContent.getLinkCaption());
+
+        Utility.putNonEmptyString(
+                webParams,
+                ShareConstants.FEED_DESCRIPTION_PARAM,
+                shareFeedContent.getLinkDescription());
+
+        return webParams;
+    }
 }
diff --git a/facebook/src/com/facebook/share/model/ShareContent.java b/facebook/src/com/facebook/share/model/ShareContent.java
index 3d661e167..20ce2f803 100644
--- a/facebook/src/com/facebook/share/model/ShareContent.java
+++ b/facebook/src/com/facebook/share/model/ShareContent.java
@@ -47,7 +47,7 @@ protected ShareContent(final Builder builder) {
         this.ref = builder.ref;
     }
 
-    ShareContent(final Parcel in) {
+    protected ShareContent(final Parcel in) {
         this.contentUrl = in.readParcelable(Uri.class.getClassLoader());
         this.peopleIds = readUnmodifiableStringList(in);
         this.placeId = in.readString();
diff --git a/facebook/src/com/facebook/share/model/ShareMedia.java b/facebook/src/com/facebook/share/model/ShareMedia.java
new file mode 100644
index 000000000..fe7c59ba7
--- /dev/null
+++ b/facebook/src/com/facebook/share/model/ShareMedia.java
@@ -0,0 +1,92 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.share.model;
+
+import android.os.Bundle;
+import android.os.Parcel;
+
+/**
+ * Base class for shared media (photos, videos, etc).
+ */
+public abstract class ShareMedia implements ShareModel {
+
+    private final Bundle params;
+
+    protected ShareMedia(final Builder builder) {
+        this.params = new Bundle(builder.params);
+    }
+
+    ShareMedia(final Parcel in) {
+        this.params = in.readBundle();
+    }
+
+    /**
+     * @deprecated This method is deprecated. Use GraphRequest directly to set parameters.
+     */
+    @Deprecated
+    public Bundle getParameters() {
+        return new Bundle(params);
+    }
+
+    @Override
+    public int describeContents() {
+        return 0;
+    }
+
+    @Override
+    public void writeToParcel(Parcel dest, int flags) {
+        dest.writeBundle(params);
+    }
+
+    /**
+     * Builder for the {@link com.facebook.share.model.ShareMedia} class.
+     */
+    public static abstract class Builder<M extends ShareMedia, B extends Builder>
+            implements ShareModelBuilder<M, B> {
+        private Bundle params = new Bundle();
+
+        /**
+         * @deprecated This method is deprecated. Use GraphRequest directly to set parameters.
+         */
+        @Deprecated
+        public B setParameter(final String key, final String value) {
+            params.putString(key, value);
+            return (B) this;
+        }
+
+        /**
+         * @deprecated This method is deprecated. Use GraphRequest directly to set parameters.
+         */
+        @Deprecated
+        public B setParameters(final Bundle parameters) {
+            params.putAll(parameters);
+            return (B) this;
+        }
+
+        @Override
+        public B readFrom(final M model) {
+            if (model == null) {
+                return (B) this;
+            }
+            return this.setParameters(model.getParameters());
+        }
+    }
+}
diff --git a/facebook/src/com/facebook/share/model/SharePhoto.java b/facebook/src/com/facebook/share/model/SharePhoto.java
index fcc111915..dcf8a50f5 100644
--- a/facebook/src/com/facebook/share/model/SharePhoto.java
+++ b/facebook/src/com/facebook/share/model/SharePhoto.java
@@ -33,13 +33,14 @@
  *
  * Use {@link SharePhoto.Builder} to build instances
  */
-public final class SharePhoto implements ShareModel {
+public final class SharePhoto extends ShareMedia {
     private final Bitmap bitmap;
     private final Uri imageUrl;
     private final boolean userGenerated;
     private final String caption;
 
     private SharePhoto(final Builder builder) {
+        super(builder);
         this.bitmap = builder.bitmap;
         this.imageUrl = builder.imageUrl;
         this.userGenerated = builder.userGenerated;
@@ -47,6 +48,7 @@ private SharePhoto(final Builder builder) {
     }
 
     SharePhoto(final Parcel in) {
+        super(in);
         this.bitmap = in.readParcelable(Bitmap.class.getClassLoader());
         this.imageUrl = in.readParcelable(Uri.class.getClassLoader());
         this.userGenerated = (in.readByte() != 0);
@@ -95,6 +97,7 @@ public int describeContents() {
     }
 
     public void writeToParcel(final Parcel out, final int flags) {
+        super.writeToParcel(out, flags);
         out.writeParcelable(this.bitmap, 0);
         out.writeParcelable(this.imageUrl, 0);
         out.writeByte((byte)(this.userGenerated ? 1 : 0));
@@ -113,9 +116,9 @@ public SharePhoto createFromParcel(final Parcel in) {
     };
 
     /**
-     * Builder for the {@link com.facebook.share.model.SharePhoto} interface.
+     * Builder for the {@link com.facebook.share.model.SharePhoto} class.
      */
-    public static final class Builder implements ShareModelBuilder<SharePhoto, Builder> {
+    public static final class Builder extends ShareMedia.Builder<SharePhoto, Builder> {
         private Bitmap bitmap;
         private Uri imageUrl;
         private boolean userGenerated;
@@ -185,7 +188,7 @@ public Builder readFrom(final SharePhoto model) {
             if (model == null) {
                 return this;
             }
-            return this
+            return super.readFrom(model)
                     .setBitmap(model.getBitmap())
                     .setImageUrl(model.getImageUrl())
                     .setUserGenerated(model.getUserGenerated())
diff --git a/facebook/src/com/facebook/share/model/ShareVideo.java b/facebook/src/com/facebook/share/model/ShareVideo.java
index 6cd792788..49fc8caa7 100644
--- a/facebook/src/com/facebook/share/model/ShareVideo.java
+++ b/facebook/src/com/facebook/share/model/ShareVideo.java
@@ -29,14 +29,16 @@
  *
  * Use {@link ShareVideo.Builder} to create instances
  */
-public final class ShareVideo implements ShareModel {
+public final class ShareVideo extends ShareMedia {
     private final Uri localUrl;
 
     private ShareVideo(final Builder builder) {
+        super(builder);
         this.localUrl = builder.localUrl;
     }
 
     ShareVideo(final Parcel in) {
+        super(in);
         this.localUrl = in.readParcelable(Uri.class.getClassLoader());
     }
 
@@ -54,6 +56,7 @@ public int describeContents() {
     }
 
     public void writeToParcel(final Parcel out, final int flags) {
+        super.writeToParcel(out, flags);
         out.writeParcelable(this.localUrl, 0);
     }
 
@@ -69,9 +72,9 @@ public ShareVideo createFromParcel(final Parcel in) {
     };
 
     /**
-     * Builder for the {@link com.facebook.share.model.ShareVideo} interface.
+     * Builder for the {@link com.facebook.share.model.ShareVideo} class.
      */
-    public static final class Builder implements ShareModelBuilder<ShareVideo, Builder> {
+    public static final class Builder extends ShareMedia.Builder<ShareVideo, Builder> {
         private Uri localUrl;
 
         /**
@@ -94,7 +97,8 @@ public Builder readFrom(final ShareVideo model) {
             if (model == null) {
                 return this;
             }
-            return this.setLocalUrl(model.getLocalUrl());
+            return super.readFrom(model)
+                    .setLocalUrl(model.getLocalUrl());
         }
 
         @Override
diff --git a/facebook/src/com/facebook/share/widget/LikeView.java b/facebook/src/com/facebook/share/widget/LikeView.java
index adc2a4154..1e8d12f9b 100644
--- a/facebook/src/com/facebook/share/widget/LikeView.java
+++ b/facebook/src/com/facebook/share/widget/LikeView.java
@@ -554,15 +554,7 @@ private void toggleLike() {
         if (likeActionController != null) {
             Activity activity = null;
             if (parentFragment == null) {
-                Context context = getContext();
-                if (context instanceof Activity) {
-                    activity = (Activity) context;
-                } else if (context instanceof ContextWrapper) {
-                    Context baseContext = ((ContextWrapper) context).getBaseContext();
-                    if (baseContext instanceof Activity) {
-                        activity = (Activity) baseContext;
-                    }
-                }
+                activity = getActivity();
             }
 
             likeActionController.toggleLike(
@@ -572,6 +564,18 @@ private void toggleLike() {
         }
     }
 
+    private Activity getActivity() {
+        Context context = getContext();
+        while (!(context instanceof Activity) && context instanceof ContextWrapper) {
+            context = ((ContextWrapper) context).getBaseContext();
+        }
+
+        if (context instanceof Activity) {
+            return (Activity) context;
+        }
+        throw new FacebookException("Unable to get Activity.");
+    }
+
     private Bundle getAnalyticsParameters() {
         Bundle params = new Bundle();
         params.putString(AnalyticsEvents.PARAMETER_LIKE_VIEW_STYLE, likeViewStyle.toString());
@@ -602,10 +606,12 @@ private void setObjectIdAndTypeForced(String newObjectId, ObjectType newObjectTy
         }
 
         creationCallback = new LikeActionControllerCreationCallback();
-        LikeActionController.getControllerForObjectId(
-                newObjectId,
-                newObjectType,
-                creationCallback);
+        if (!isInEditMode()) {
+            LikeActionController.getControllerForObjectId(
+                    newObjectId,
+                    newObjectType,
+                    creationCallback);
+        }
     }
 
     private void associateWithLikeActionController(LikeActionController likeActionController) {
diff --git a/facebook/src/com/facebook/share/widget/SendButton.java b/facebook/src/com/facebook/share/widget/SendButton.java
index fb4d51e7b..73deff7f5 100644
--- a/facebook/src/com/facebook/share/widget/SendButton.java
+++ b/facebook/src/com/facebook/share/widget/SendButton.java
@@ -33,15 +33,12 @@
  * Tapping the receiver will invoke the {@link com.facebook.share.widget.MessageDialog} with the attached shareContent.
  */
 public final class SendButton extends ShareButtonBase {
-    private static final int DEFAULT_REQUEST_CODE =
-            CallbackManagerImpl.RequestCodeOffset.Message.toRequestCode();
-
     public SendButton(final Context context) {
-        super(context, null, 0, AnalyticsEvents.EVENT_SEND_BUTTON_CREATE, DEFAULT_REQUEST_CODE);
+        super(context, null, 0, AnalyticsEvents.EVENT_SEND_BUTTON_CREATE);
     }
 
     public SendButton(final Context context, final AttributeSet attrs) {
-        super(context, attrs, 0, AnalyticsEvents.EVENT_SEND_BUTTON_CREATE, DEFAULT_REQUEST_CODE);
+        super(context, attrs, 0, AnalyticsEvents.EVENT_SEND_BUTTON_CREATE);
     }
 
     public SendButton(final Context context, final AttributeSet attrs, final int defStyleAttr) {
@@ -49,8 +46,7 @@ public SendButton(final Context context, final AttributeSet attrs, final int def
                 context,
                 attrs,
                 defStyleAttr,
-                AnalyticsEvents.EVENT_SEND_BUTTON_CREATE,
-                DEFAULT_REQUEST_CODE);
+                AnalyticsEvents.EVENT_SEND_BUTTON_CREATE);
     }
 
     @Override
@@ -63,6 +59,7 @@ protected OnClickListener getShareOnClickListener()  {
         return new OnClickListener() {
             @Override
             public void onClick(View v) {
+                callExternalOnClickListener(v);
                 final MessageDialog dialog;
                 if (SendButton.this.getFragment() != null) {
                     dialog = new MessageDialog(SendButton.this.getFragment() , getRequestCode());
@@ -70,8 +67,12 @@ public void onClick(View v) {
                     dialog = new MessageDialog(getActivity(), getRequestCode());
                 }
                 dialog.show(SendButton.this.getShareContent());
-                callExternalOnClickListener(v);
             }
         };
     }
+
+    @Override
+    protected int getDefaultRequestCode() {
+        return CallbackManagerImpl.RequestCodeOffset.Message.toRequestCode();
+    }
 }
diff --git a/facebook/src/com/facebook/share/widget/ShareButton.java b/facebook/src/com/facebook/share/widget/ShareButton.java
index 393ec7582..8bb48bbb2 100644
--- a/facebook/src/com/facebook/share/widget/ShareButton.java
+++ b/facebook/src/com/facebook/share/widget/ShareButton.java
@@ -33,15 +33,13 @@
  * Tapping the receiver will invoke the {@link com.facebook.share.widget.ShareDialog} with the attached shareContent.
  */
 public final class ShareButton extends ShareButtonBase {
-    private static final int DEFAULT_REQUEST_CODE =
-            CallbackManagerImpl.RequestCodeOffset.Share.toRequestCode();
 
     public ShareButton(final Context context) {
-        super(context, null, 0, AnalyticsEvents.EVENT_SHARE_BUTTON_CREATE, DEFAULT_REQUEST_CODE);
+        super(context, null, 0, AnalyticsEvents.EVENT_SHARE_BUTTON_CREATE);
     }
 
     public ShareButton(final Context context, final AttributeSet attrs) {
-        super(context, attrs, 0, AnalyticsEvents.EVENT_SHARE_BUTTON_CREATE, DEFAULT_REQUEST_CODE);
+        super(context, attrs, 0, AnalyticsEvents.EVENT_SHARE_BUTTON_CREATE);
     }
 
     public ShareButton(final Context context, final AttributeSet attrs, final int defStyleAttr) {
@@ -49,8 +47,7 @@ public ShareButton(final Context context, final AttributeSet attrs, final int de
                 context,
                 attrs,
                 defStyleAttr,
-                AnalyticsEvents.EVENT_SHARE_BUTTON_CREATE,
-                DEFAULT_REQUEST_CODE);
+                AnalyticsEvents.EVENT_SHARE_BUTTON_CREATE);
     }
 
     @Override
@@ -63,6 +60,7 @@ protected OnClickListener getShareOnClickListener()  {
         return new OnClickListener() {
             @Override
             public void onClick(View v) {
+                callExternalOnClickListener(v);
                 final ShareDialog dialog;
                 if (ShareButton.this.getFragment() != null) {
                     dialog = new ShareDialog(ShareButton.this.getFragment() , getRequestCode());
@@ -70,8 +68,12 @@ public void onClick(View v) {
                     dialog = new ShareDialog(getActivity(), getRequestCode());
                 }
                 dialog.show(ShareButton.this.getShareContent());
-                callExternalOnClickListener(v);
             }
         };
     }
+
+    @Override
+    protected int getDefaultRequestCode() {
+        return CallbackManagerImpl.RequestCodeOffset.Share.toRequestCode();
+    }
 }
diff --git a/facebook/src/com/facebook/share/widget/ShareButtonBase.java b/facebook/src/com/facebook/share/widget/ShareButtonBase.java
index 8e27530f3..9ba1569ea 100644
--- a/facebook/src/com/facebook/share/widget/ShareButtonBase.java
+++ b/facebook/src/com/facebook/share/widget/ShareButtonBase.java
@@ -26,6 +26,7 @@
 import com.facebook.CallbackManager;
 import com.facebook.FacebookButtonBase;
 import com.facebook.FacebookCallback;
+import com.facebook.FacebookSdk;
 import com.facebook.share.Sharer;
 import com.facebook.share.internal.ShareInternalUtility;
 import com.facebook.share.model.ShareContent;
@@ -35,20 +36,20 @@
  */
 public abstract class ShareButtonBase extends FacebookButtonBase {
     private ShareContent shareContent;
+    private int requestCode = 0;
 
     protected ShareButtonBase(
             final Context context,
             final AttributeSet attrs,
             final int defStyleAttr,
-            final String analyticsButtonCreatedEventName,
-            final int requestCode) {
+            final String analyticsButtonCreatedEventName) {
         super(
                 context,
                 attrs,
                 defStyleAttr,
                 0,
-                analyticsButtonCreatedEventName,
-                requestCode);
+                analyticsButtonCreatedEventName);
+        requestCode = isInEditMode() ? 0 : getDefaultRequestCode();
     }
 
     /**
@@ -67,6 +68,32 @@ public void setShareContent(final ShareContent shareContent) {
         this.shareContent = shareContent;
     }
 
+    /**
+     * Returns the request code used for this Button.
+     *
+     * @return the request code.
+     */
+    @Override
+    public int getRequestCode() {
+        return requestCode;
+    }
+
+    /**
+     * Set the request code for the startActivityForResult call. The requestCode should be
+     * outside of the range of those reserved for the Facebook SDK
+     * {@link com.facebook.FacebookSdk#isFacebookRequestCode(int)}. This method should also be
+     * called prior to registering any callbacks.
+     *
+     * @param requestCode the request code to use.
+     */
+    protected void setRequestCode(final int requestCode) {
+        if (FacebookSdk.isFacebookRequestCode(requestCode)) {
+            throw new IllegalArgumentException("Request code " + requestCode +
+                    " cannot be within the range reserved by the Facebook SDK.");
+        }
+        this.requestCode = requestCode;
+    }
+
     /**
      * Allows registration of a callback for when the share completes. This should be called
      * in the {@link android.app.Activity#onCreate(android.os.Bundle)} or
diff --git a/facebook/src/com/facebook/share/widget/ShareDialog.java b/facebook/src/com/facebook/share/widget/ShareDialog.java
index 733a14d67..db78b220c 100644
--- a/facebook/src/com/facebook/share/widget/ShareDialog.java
+++ b/facebook/src/com/facebook/share/widget/ShareDialog.java
@@ -22,12 +22,10 @@
 
 import android.app.Activity;
 import android.content.Context;
-import android.net.Uri;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 
 import com.facebook.FacebookCallback;
-import com.facebook.FacebookException;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.AppCall;
@@ -35,7 +33,7 @@
 import com.facebook.internal.DialogFeature;
 import com.facebook.internal.DialogPresenter;
 import com.facebook.internal.FacebookDialogBase;
-import com.facebook.internal.Utility;
+import com.facebook.share.internal.ShareFeedContent;
 import com.facebook.share.Sharer;
 import com.facebook.share.internal.LegacyNativeDialogParameters;
 import com.facebook.share.internal.NativeDialogParameters;
@@ -328,22 +326,28 @@ public Object getMode() {
 
         @Override
         public boolean canShow(final ShareContent content) {
-            return (content instanceof ShareLinkContent);
+            return (content instanceof ShareLinkContent)
+                    || (content instanceof ShareFeedContent);
         }
 
         @Override
         public AppCall createAppCall(final ShareContent content) {
             logDialogShare(getActivityContext(), content, Mode.FEED);
-
-            final ShareLinkContent linkContent = (ShareLinkContent)content;
-            final AppCall appCall = createBaseAppCall();
-
-            ShareContentValidation.validateForWebShare(linkContent);
+            AppCall appCall = createBaseAppCall();
+            Bundle params;
+            if (content instanceof ShareLinkContent) {
+                ShareLinkContent linkContent = (ShareLinkContent)content;
+                ShareContentValidation.validateForWebShare(linkContent);
+                params = WebDialogParameters.createForFeed(linkContent);
+            } else {
+                ShareFeedContent feedContent = (ShareFeedContent)content;
+                params = WebDialogParameters.createForFeed(feedContent);
+            }
 
             DialogPresenter.setupAppCallForWebDialog(
                     appCall,
                     FEED_DIALOG,
-                    WebDialogParameters.createForFeed(linkContent));
+                    params);
 
             return appCall;
         }
diff --git a/facebook/tests/src/com/facebook/AsyncRequestTests.java b/facebook/tests/src/com/facebook/AsyncRequestTests.java
index dc535c559..da6bc7eaa 100644
--- a/facebook/tests/src/com/facebook/AsyncRequestTests.java
+++ b/facebook/tests/src/com/facebook/AsyncRequestTests.java
@@ -21,10 +21,12 @@
 package com.facebook;
 
 import android.graphics.Bitmap;
+import android.os.Bundle;
 import android.test.suitebuilder.annotation.LargeTest;
 import android.test.suitebuilder.annotation.MediumTest;
 import android.test.suitebuilder.annotation.SmallTest;
 
+import com.facebook.internal.BundleJSONConverter;
 import com.facebook.share.internal.ShareInternalUtility;
 
 import org.json.JSONArray;
@@ -102,15 +104,23 @@ public void testExecuteBatchWithNullRequestThrows() throws Exception {
     @LargeTest
     public void testExecuteSingleGet() {
         final AccessToken accessToken = getAccessTokenForSharedUser();
-        GraphRequest request = new GraphRequest(accessToken, "TourEiffel", null, null,
+        Bundle parameters = new Bundle();
+        parameters.putString("fields", "location");
+        GraphRequest request = new GraphRequest(
+                accessToken,
+                "TourEiffel",
+                parameters,
+                null,
                 new ExpectSuccessCallback() {
-            @Override
-            protected void performAsserts(GraphResponse response) {
-                assertNotNull(response);
-                JSONObject graphPlace = response.getJSONObject();
-                assertEquals("Paris", graphPlace.optJSONObject("location").optString("city"));
-            }
-        });
+                    @Override
+                    protected void performAsserts(GraphResponse response) {
+                        assertNotNull(response);
+                        JSONObject graphPlace = response.getJSONObject();
+                        assertEquals(
+                                "Paris",
+                                graphPlace.optJSONObject("location").optString("city"));
+                    }
+                });
 
         TestGraphRequestAsyncTask task = new TestGraphRequestAsyncTask(request);
 
@@ -124,18 +134,28 @@ protected void performAsserts(GraphResponse response) {
     @LargeTest
     public void testExecuteSingleGetUsingHttpURLConnection() {
         final AccessToken accessToken = getAccessTokenForSharedUser();
-        GraphRequest request = new GraphRequest(accessToken, "TourEiffel", null, null,
+        Bundle parameters = new Bundle();
+        parameters.putString("fields", "location");
+        GraphRequest request = new GraphRequest(
+                accessToken,
+                "TourEiffel",
+                parameters,
+                null,
                 new ExpectSuccessCallback() {
-            @Override
-            protected void performAsserts(GraphResponse response) {
-                assertNotNull(response);
-                JSONObject graphPlace = response.getJSONObject();
-                assertEquals("Paris", graphPlace.optJSONObject("location").optString("city"));
-            }
-        });
+                    @Override
+                    protected void performAsserts(GraphResponse response) {
+                        assertNotNull(response);
+                        JSONObject graphPlace = response.getJSONObject();
+                        assertEquals(
+                                "Paris",
+                                graphPlace.optJSONObject("location").optString("city"));
+                    }
+                });
         HttpURLConnection connection = GraphRequest.toHttpConnection(request);
 
-        TestGraphRequestAsyncTask task = new TestGraphRequestAsyncTask(connection, Arrays.asList(new GraphRequest[] { request }));
+        TestGraphRequestAsyncTask task = new TestGraphRequestAsyncTask(
+                connection,
+                Arrays.asList(new GraphRequest[] { request }));
 
         task.executeOnBlockerThread();
 
@@ -256,22 +276,29 @@ public void testBatchUploadPhoto() {
         Bitmap bitmap1 = createTestBitmap(image1Size);
         Bitmap bitmap2 = createTestBitmap(image2Size);
 
-        GraphRequest uploadRequest1 = ShareInternalUtility.newUploadPhotoRequest(
+        Bundle parameters = new Bundle();
+        parameters.putString("fields", "width");
+
+        GraphRequest uploadRequest1 = GraphRequest.newUploadPhotoRequest(
                 accessToken,
+                ShareInternalUtility.MY_PHOTOS,
                 bitmap1,
                 null,
+                null,
                 null);
         uploadRequest1.setBatchEntryName("uploadRequest1");
-        GraphRequest uploadRequest2 = ShareInternalUtility.newUploadPhotoRequest(
+        GraphRequest uploadRequest2 = GraphRequest.newUploadPhotoRequest(
                 accessToken,
+                ShareInternalUtility.MY_PHOTOS,
                 bitmap2,
                 null,
+                null,
                 null);
         uploadRequest2.setBatchEntryName("uploadRequest2");
         GraphRequest getRequest1 = new GraphRequest(
                 accessToken,
                 "{result=uploadRequest1:$.id}",
-                null,
+                parameters,
                 null,
                 new ExpectSuccessCallback() {
                     @Override
@@ -285,7 +312,7 @@ protected void performAsserts(GraphResponse response) {
         GraphRequest getRequest2 = new GraphRequest(
                 accessToken,
                 "{result=uploadRequest2:$.id}",
-                null,
+                parameters,
                 null,
                 new ExpectSuccessCallback() {
                     @Override
diff --git a/facebook/tests/src/com/facebook/BatchRequestTests.java b/facebook/tests/src/com/facebook/BatchRequestTests.java
index 8c3d656ef..362199031 100644
--- a/facebook/tests/src/com/facebook/BatchRequestTests.java
+++ b/facebook/tests/src/com/facebook/BatchRequestTests.java
@@ -21,6 +21,7 @@
 package com.facebook;
 
 import android.graphics.Bitmap;
+import android.os.Bundle;
 import android.test.suitebuilder.annotation.LargeTest;
 
 import com.facebook.share.internal.ShareInternalUtility;
@@ -70,10 +71,21 @@ public void testExecuteBatchRequestsPathEncoding() throws IOException {
 
         final AccessToken accessToken = getAccessTokenForSharedUser();
 
-        GraphRequest request1 = new GraphRequest(accessToken, "TourEiffel");
+        Bundle parameters = new Bundle();
+        parameters.putString("fields", "location");
+
+        GraphRequest request1 = new GraphRequest(
+                accessToken,
+                "TourEiffel",
+                parameters,
+                null);
         request1.setBatchEntryName("eiffel");
         request1.setBatchEntryOmitResultOnSuccess(false);
-        GraphRequest request2 = new GraphRequest(accessToken, "{result=eiffel:$.id}");
+        GraphRequest request2 = new GraphRequest(
+                accessToken,
+                "{result=eiffel:$.id}",
+                parameters,
+                null);
 
         List<GraphResponse> responses = GraphRequest.executeBatchAndWait(request1, request2);
         assertEquals(2, responses.size());
@@ -93,8 +105,19 @@ public void testExecuteBatchRequestsPathEncoding() throws IOException {
     public void testExecuteBatchedGets() throws IOException {
         final AccessToken accessToken = getAccessTokenForSharedUser();
 
-        GraphRequest request1 = new GraphRequest(accessToken, "TourEiffel");
-        GraphRequest request2 = new GraphRequest(accessToken, "SpaceNeedle");
+        Bundle parameters = new Bundle();
+        parameters.putString("fields", "location");
+
+        GraphRequest request1 = new GraphRequest(
+                accessToken,
+                "TourEiffel",
+                parameters,
+                null);
+        GraphRequest request2 = new GraphRequest(
+                accessToken,
+                "SpaceNeedle",
+                parameters,
+                null);
 
         List<GraphResponse> responses = GraphRequest.executeBatchAndWait(request1, request2);
         assertEquals(2, responses.size());
@@ -132,17 +155,36 @@ public void testFacebookErrorResponsesCreateErrors() {
     public void testBatchPostStatusUpdate() {
         final AccessToken accessToken = getAccessTokenForSharedUser();
 
+        Bundle parameters = new Bundle();
+        parameters.putString("fields", "message");
+
         JSONObject statusUpdate1 = createStatusUpdate("1");
         JSONObject statusUpdate2 = createStatusUpdate("2");
 
-        GraphRequest postRequest1 = GraphRequest.newPostRequest(accessToken, "me/feed", statusUpdate1, null);
+        GraphRequest postRequest1 = GraphRequest.newPostRequest(
+                accessToken,
+                "me/feed",
+                statusUpdate1,
+                null);
         postRequest1.setBatchEntryName("postRequest1");
         postRequest1.setBatchEntryOmitResultOnSuccess(false);
-        GraphRequest postRequest2 = GraphRequest.newPostRequest(accessToken, "me/feed", statusUpdate2, null);
+        GraphRequest postRequest2 = GraphRequest.newPostRequest(
+                accessToken,
+                "me/feed",
+                statusUpdate2,
+                null);
         postRequest2.setBatchEntryName("postRequest2");
         postRequest2.setBatchEntryOmitResultOnSuccess(false);
-        GraphRequest getRequest1 = new GraphRequest(accessToken, "{result=postRequest1:$.id}");
-        GraphRequest getRequest2 = new GraphRequest(accessToken, "{result=postRequest2:$.id}");
+        GraphRequest getRequest1 = new GraphRequest(
+                accessToken,
+                "{result=postRequest1:$.id}",
+                parameters,
+                null);
+        GraphRequest getRequest2 = new GraphRequest(
+                accessToken,
+                "{result=postRequest2:$.id}",
+                parameters,
+                null);
 
         List<GraphResponse> responses = GraphRequest.executeBatchAndWait(postRequest1, postRequest2, getRequest1, getRequest2);
         assertNotNull(responses);
@@ -262,20 +304,35 @@ public void testBatchUploadPhoto() {
         Bitmap bitmap1 = createTestBitmap(image1Size);
         Bitmap bitmap2 = createTestBitmap(image2Size);
 
-        GraphRequest uploadRequest1 = ShareInternalUtility.newUploadPhotoRequest(
+        Bundle parameters = new Bundle();
+        parameters.putString("fields", "width");
+
+        GraphRequest uploadRequest1 = GraphRequest.newUploadPhotoRequest(
                 accessToken,
+                ShareInternalUtility.MY_PHOTOS,
                 bitmap1,
                 null,
+                null,
                 null);
         uploadRequest1.setBatchEntryName("uploadRequest1");
-        GraphRequest uploadRequest2 = ShareInternalUtility.newUploadPhotoRequest(
+        GraphRequest uploadRequest2 = GraphRequest.newUploadPhotoRequest(
                 accessToken,
+                ShareInternalUtility.MY_PHOTOS,
                 bitmap2,
                 null,
+                null,
                 null);
         uploadRequest2.setBatchEntryName("uploadRequest2");
-        GraphRequest getRequest1 = new GraphRequest(accessToken, "{result=uploadRequest1:$.id}");
-        GraphRequest getRequest2 = new GraphRequest(accessToken, "{result=uploadRequest2:$.id}");
+        GraphRequest getRequest1 = new GraphRequest(
+                accessToken,
+                "{result=uploadRequest1:$.id}",
+                parameters,
+                null);
+        GraphRequest getRequest2 = new GraphRequest(
+                accessToken,
+                "{result=uploadRequest2:$.id}",
+                parameters,
+                null);
 
         List<GraphResponse> responses = GraphRequest.executeBatchAndWait(
                 uploadRequest1,
diff --git a/facebook/tests/src/com/facebook/FacebookActivityTestCase.java b/facebook/tests/src/com/facebook/FacebookActivityTestCase.java
index 17cc7ad83..bd0d83e61 100644
--- a/facebook/tests/src/com/facebook/FacebookActivityTestCase.java
+++ b/facebook/tests/src/com/facebook/FacebookActivityTestCase.java
@@ -211,7 +211,8 @@ protected void setUp() throws Exception {
         FacebookSdk.addLoggingBehavior(LoggingBehavior.INCLUDE_ACCESS_TOKENS);
 
         // We want the UI thread to be in StrictMode to catch any violations.
-        turnOnStrictModeForUiThread();
+        // TODO: reenable this
+        // turnOnStrictModeForUiThread();
 
         // Needed to bypass a dexmaker bug for mockito
         System.setProperty("dexmaker.dexcache",
@@ -247,7 +248,10 @@ protected Bundle getNativeLinkingExtras(String token, String userId) {
     }
 
     protected JSONObject getAndAssert(AccessToken accessToken, String id) {
-        GraphRequest request = new GraphRequest(accessToken, id);
+        Bundle parameters = new Bundle();
+        parameters.putString("fields", "message");
+
+        GraphRequest request = new GraphRequest(accessToken, id, parameters, null);
         GraphResponse response = request.executeAndWait();
         assertNotNull(response);
 
diff --git a/facebook/tests/src/com/facebook/RequestTests.java b/facebook/tests/src/com/facebook/RequestTests.java
index 6e8e80291..32a15f0c8 100644
--- a/facebook/tests/src/com/facebook/RequestTests.java
+++ b/facebook/tests/src/com/facebook/RequestTests.java
@@ -22,10 +22,21 @@
 
 import android.graphics.Bitmap;
 import android.location.Location;
+import android.net.Uri;
 import android.os.Bundle;
 import android.test.suitebuilder.annotation.LargeTest;
 
+import com.facebook.internal.GraphUtil;
+import com.facebook.share.ShareApi;
+import com.facebook.share.Sharer;
 import com.facebook.share.internal.ShareInternalUtility;
+import com.facebook.share.model.ShareOpenGraphAction;
+import com.facebook.share.model.ShareOpenGraphContent;
+import com.facebook.share.model.ShareOpenGraphObject;
+import com.facebook.share.model.SharePhoto;
+import com.facebook.share.model.SharePhotoContent;
+import com.facebook.share.model.ShareVideo;
+import com.facebook.share.model.ShareVideoContent;
 
 import org.json.JSONArray;
 import org.json.JSONException;
@@ -39,19 +50,46 @@
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
+import java.util.concurrent.atomic.AtomicBoolean;
+import java.util.concurrent.atomic.AtomicReference;
 
 public class RequestTests extends FacebookTestCase {
-    private final static String TEST_OG_TYPE = "facebooksdktests:test";
+    private static final String TEST_OG_OBJECT_TYPE = "facebooksdktests:test";
+    private static final String TEST_OG_ACTION_TYPE = "facebooksdktests:run";
+    private static final long REQUEST_TIMEOUT_MILLIS = 10000;
 
     protected String[] getDefaultPermissions()
     {
-        return new String[] { "email", "publish_actions", "read_stream" };
+        return new String[] {
+                "email",
+                "publish_actions",
+                "read_stream",
+                "user_photos",
+                "user_videos" };
     };
 
+    @Override
+    public void setUp() throws Exception {
+        super.setUp();
+        AccessToken.setCurrentAccessToken(getAccessTokenForSharedUser());
+    }
+
+    @Override
+    public void tearDown() throws Exception {
+        AccessToken.setCurrentAccessToken(null);
+        super.tearDown();
+    }
+
     @LargeTest
     public void testExecuteSingleGet() {
-        final AccessToken accessToken = getAccessTokenForSharedUser();
-        GraphRequest request = new GraphRequest(accessToken, "TourEiffel");
+        Bundle parameters = new Bundle();
+        parameters.putString("fields", "location");
+
+        GraphRequest request = new GraphRequest(
+                AccessToken.getCurrentAccessToken(),
+                "TourEiffel",
+                parameters,
+                null);
         GraphResponse response = request.executeAndWait();
 
         assertTrue(response != null);
@@ -65,13 +103,14 @@ public void testExecuteSingleGet() {
 
     @LargeTest
     public void testBuildsUploadPhotoHttpURLConnection() throws Exception {
-        final AccessToken accessToken = getAccessTokenForSharedUser();
         Bitmap image = createTestBitmap(128);
 
-        GraphRequest request = ShareInternalUtility.newUploadPhotoRequest(
-                accessToken,
+        GraphRequest request = GraphRequest.newUploadPhotoRequest(
+                AccessToken.getCurrentAccessToken(),
+                ShareInternalUtility.MY_PHOTOS,
                 image,
                 "Test photo messsage",
+                null,
                 null);
         HttpURLConnection connection = GraphRequest.toHttpConnection(request);
 
@@ -82,14 +121,24 @@ public void testBuildsUploadPhotoHttpURLConnection() throws Exception {
 
     @LargeTest
     public void testExecuteSingleGetUsingHttpURLConnection() throws IOException {
-        final AccessToken accessToken = getAccessTokenForSharedUser(); 
-        GraphRequest request = new GraphRequest(accessToken, "TourEiffel");
+        Bundle parameters = new Bundle();
+        parameters.putString("fields", "location");
+
+        GraphRequest request = new GraphRequest(
+                AccessToken.getCurrentAccessToken(),
+                "TourEiffel",
+                parameters,
+                null);
         HttpURLConnection connection = GraphRequest.toHttpConnection(request);
 
         assertEquals("gzip", connection.getRequestProperty("Content-Encoding"));
-        assertEquals("application/x-www-form-urlencoded", connection.getRequestProperty("Content-Type"));
+        assertEquals(
+                "application/x-www-form-urlencoded",
+                connection.getRequestProperty("Content-Type"));
 
-        List<GraphResponse> responses = GraphRequest.executeConnectionAndWait(connection, Arrays.asList(new GraphRequest[]{request}));
+        List<GraphResponse> responses = GraphRequest.executeConnectionAndWait(
+                connection,
+                Arrays.asList(new GraphRequest[]{request}));
         assertNotNull(responses);
         assertEquals(1, responses.size());
 
@@ -138,11 +187,10 @@ public void testRequestWithNoTokenFails() {
 
     @LargeTest
     public void testExecuteRequestMe() {
-        final AccessToken accessToken = getAccessTokenForSharedUser(); 
-        GraphRequest request = GraphRequest.newMeRequest(accessToken, null);
+        GraphRequest request = GraphRequest.newMeRequest(AccessToken.getCurrentAccessToken(), null);
         GraphResponse response = request.executeAndWait();
 
-        validateMeResponse(accessToken, response);
+        validateMeResponse(AccessToken.getCurrentAccessToken(), response);
     }
 
     static void validateMeResponse(AccessToken accessToken, GraphResponse response) {
@@ -156,9 +204,8 @@ static void validateMeResponse(AccessToken accessToken, GraphResponse response)
 
     @LargeTest
     public void testExecuteMyFriendsRequest() {
-        final AccessToken accessToken = getAccessTokenForSharedUser(); 
-
-        GraphRequest request = GraphRequest.newMyFriendsRequest(accessToken, null);
+        GraphRequest request =
+                GraphRequest.newMyFriendsRequest(AccessToken.getCurrentAccessToken(), null);
         GraphResponse response = request.executeAndWait();
 
         validateMyFriendsResponse(response);
@@ -180,13 +227,17 @@ static void validateMyFriendsResponse(GraphResponse response) {
 
     @LargeTest
     public void testExecutePlaceRequestWithLocation() {
-        final AccessToken accessToken = getAccessTokenForSharedUser(); 
-
         Location location = new Location("");
         location.setLatitude(47.6204);
         location.setLongitude(-122.3491);
 
-        GraphRequest request = GraphRequest.newPlacesSearchRequest(accessToken, location, 5, 5, null, null);
+        GraphRequest request = GraphRequest.newPlacesSearchRequest(
+                AccessToken.getCurrentAccessToken(),
+                location,
+                5,
+                5,
+                null,
+                null);
         GraphResponse response = request.executeAndWait();
         assertNotNull(response);
 
@@ -203,10 +254,14 @@ public void testExecutePlaceRequestWithLocation() {
 
     @LargeTest
     public void testExecutePlaceRequestWithSearchText() {
-        final AccessToken accessToken = getAccessTokenForSharedUser(); 
-
         // Pass a distance without a location to ensure it is correctly ignored.
-        GraphRequest request = GraphRequest.newPlacesSearchRequest(accessToken, null, 1000, 5, "Starbucks", null);
+        GraphRequest request = GraphRequest.newPlacesSearchRequest(
+                AccessToken.getCurrentAccessToken(),
+                null,
+                1000,
+                5,
+                "Starbucks",
+                null);
         GraphResponse response = request.executeAndWait();
         assertNotNull(response);
 
@@ -223,13 +278,17 @@ public void testExecutePlaceRequestWithSearchText() {
 
     @LargeTest
     public void testExecutePlaceRequestWithLocationAndSearchText() {
-        final AccessToken accessToken = getAccessTokenForSharedUser(); 
-
         Location location = new Location("");
         location.setLatitude(47.6204);
         location.setLongitude(-122.3491);
 
-        GraphRequest request = GraphRequest.newPlacesSearchRequest(accessToken, location, 1000, 5, "Starbucks", null);
+        GraphRequest request = GraphRequest.newPlacesSearchRequest(
+                AccessToken.getCurrentAccessToken(),
+                location,
+                1000,
+                5,
+                "Starbucks",
+                null);
         GraphResponse response = request.executeAndWait();
         assertNotNull(response);
 
@@ -244,9 +303,122 @@ public void testExecutePlaceRequestWithLocationAndSearchText() {
         assertNotNull(response.getRawResponse());
     }
 
-    private String executePostOpenGraphRequest() {
-        final AccessToken accessToken = getAccessTokenForSharedUser(); 
+    @LargeTest
+    public void testShareOpenGraphContent() throws Exception {
+        ShareOpenGraphObject ogObject = new ShareOpenGraphObject.Builder()
+                .putString("og:title", "a title")
+                .putString("og:type", TEST_OG_OBJECT_TYPE)
+                .putString("og:description", "a description")
+                .build();
+
+        ShareOpenGraphAction ogAction = new ShareOpenGraphAction.Builder()
+                .setActionType(TEST_OG_ACTION_TYPE)
+                .putObject("test", ogObject)
+                .build();
+
+        ShareOpenGraphContent content = new ShareOpenGraphContent.Builder()
+                .setAction(ogAction)
+                .setPreviewPropertyName("test")
+                .build();
+
+        final ShareApi shareApi = new ShareApi(content);
+        final AtomicReference<String> actionId = new AtomicReference<>(null);
+
+        getActivity().runOnUiThread(new Runnable() {
+            @Override
+            public void run() {
+                shareApi.share(new FacebookCallback<Sharer.Result>() {
+                    @Override
+                    public void onSuccess(Sharer.Result result) {
+                        actionId.set(result.getPostId());
+                        notifyShareFinished();
+                    }
+
+                    @Override
+                    public void onCancel() {
+                        notifyShareFinished();
+                    }
+
+                    @Override
+                    public void onError(FacebookException error) {
+                        notifyShareFinished();
+                    }
+
+                    private void notifyShareFinished() {
+                        synchronized (shareApi) {
+                            shareApi.notifyAll();
+                        }
+                    }
+                });
+            }
+        });
+
+        synchronized (shareApi) {
+            shareApi.wait(REQUEST_TIMEOUT_MILLIS);
+        }
+        assertNotNull(actionId.get());
+    }
+
+    @LargeTest
+    public void testShareOpenGraphContentWithBadType() throws Exception {
+        ShareOpenGraphObject ogObject = new ShareOpenGraphObject.Builder()
+                .putString("og:title", "a title")
+                .putString("og:type", TEST_OG_OBJECT_TYPE)
+                .putString("og:description", "a description")
+                .build();
+
+        ShareOpenGraphAction ogAction = new ShareOpenGraphAction.Builder()
+                .setActionType(TEST_OG_ACTION_TYPE+"bad")
+                .putObject("test", ogObject)
+                .build();
+
+        ShareOpenGraphContent content = new ShareOpenGraphContent.Builder()
+                .setAction(ogAction)
+                .setPreviewPropertyName("test")
+                .build();
+
+        final ShareApi shareApi = new ShareApi(content);
+        final AtomicReference<String> actionId = new AtomicReference<>(null);
+        final AtomicBoolean errorOccurred = new AtomicBoolean(false);
+
+        getActivity().runOnUiThread(new Runnable() {
+            @Override
+            public void run() {
+                shareApi.share(new FacebookCallback<Sharer.Result>() {
+                    @Override
+                    public void onSuccess(Sharer.Result result) {
+                        actionId.set(result.getPostId());
+                        notifyShareFinished();
+                    }
+
+                    @Override
+                    public void onCancel() {
+                        notifyShareFinished();
+                    }
+
+                    @Override
+                    public void onError(FacebookException error) {
+                        errorOccurred.set(true);
+                        notifyShareFinished();
+                    }
+
+                    private void notifyShareFinished() {
+                        synchronized (shareApi) {
+                            shareApi.notifyAll();
+                        }
+                    }
+                });
+            }
+        });
 
+        synchronized (shareApi) {
+            shareApi.wait(REQUEST_TIMEOUT_MILLIS);
+        }
+        assertNull(actionId.get());
+        assertTrue(errorOccurred.get());
+    }
+
+    private String executePostOpenGraphRequest() {
         JSONObject data = new JSONObject();
         try {
             data.put("a_property", "hello");
@@ -254,15 +426,24 @@ private String executePostOpenGraphRequest() {
             throw new RuntimeException(e);
         }
 
-        GraphRequest request = ShareInternalUtility.newPostOpenGraphObjectRequest(
-                accessToken,
-                TEST_OG_TYPE,
+        JSONObject ogObject = GraphUtil.createOpenGraphObjectForPost(
+                TEST_OG_OBJECT_TYPE,
                 "a title",
                 "http://www.facebook.com",
                 "http://www.facebook.com/zzzzzzzzzzzzzzzzzzz",
                 "a description",
                 data,
                 null);
+
+        Bundle bundle = new Bundle();
+        bundle.putString("object", ogObject.toString());
+        GraphRequest request = new GraphRequest(
+                AccessToken.getCurrentAccessToken(),
+                "/me/objects/" + TEST_OG_OBJECT_TYPE,
+                bundle,
+                HttpMethod.POST,
+                null);
+
         GraphResponse response = request.executeAndWait();
         assertNotNull(response);
 
@@ -274,7 +455,7 @@ private String executePostOpenGraphRequest() {
 
         assertNotNull(response.getRawResponse());
 
-        return (String) graphResult.optString("id");
+        return graphResult.optString("id");
     }
 
     @LargeTest
@@ -286,8 +467,10 @@ public void testExecutePostOpenGraphRequest() {
     public void testDeleteObjectRequest() {
         String id = executePostOpenGraphRequest();
 
-        final AccessToken accessToken = getAccessTokenForSharedUser(); 
-        GraphRequest request = GraphRequest.newDeleteObjectRequest(accessToken, id, null);
+        GraphRequest request = GraphRequest.newDeleteObjectRequest(
+                AccessToken.getCurrentAccessToken(),
+                id,
+                null);
         GraphResponse response = request.executeAndWait();
         assertNotNull(response);
 
@@ -307,10 +490,22 @@ public void testUpdateOpenGraphObjectRequest() throws JSONException {
         JSONObject data = new JSONObject();
         data.put("a_property", "goodbye");
 
-        final AccessToken accessToken = getAccessTokenForSharedUser(); 
-        GraphRequest request = ShareInternalUtility.newUpdateOpenGraphObjectRequest(accessToken, id,
-                "another title", null, "http://www.facebook.com/aaaaaaaaaaaaaaaaa",
-                "another description", data, null);
+        JSONObject ogObject = GraphUtil.createOpenGraphObjectForPost(
+                TEST_OG_OBJECT_TYPE,
+                "another title",
+                null,
+                "http://www.facebook.com/aaaaaaaaaaaaaaaaa",
+                "another description",
+                data,
+                null);
+        Bundle bundle = new Bundle();
+        bundle.putString("object", ogObject.toString());
+        GraphRequest request = new GraphRequest(
+                AccessToken.getCurrentAccessToken(),
+                id,
+                bundle,
+                HttpMethod.POST,
+                null);
         GraphResponse response = request.executeAndWait();
         assertNotNull(response);
 
@@ -318,18 +513,20 @@ public void testUpdateOpenGraphObjectRequest() throws JSONException {
 
         JSONObject result = response.getJSONObject();
         assertNotNull(result);
+        assertEquals("another title", result.optString("title"));
         assertNotNull(response.getRawResponse());
     }
 
     @LargeTest
     public void testExecuteUploadPhoto() {
-        final AccessToken accessToken = getAccessTokenForSharedUser(); 
         Bitmap image = createTestBitmap(128);
 
-        GraphRequest request = ShareInternalUtility.newUploadPhotoRequest(
-                accessToken,
+        GraphRequest request = GraphRequest.newUploadPhotoRequest(
+                AccessToken.getCurrentAccessToken(),
+                ShareInternalUtility.MY_PHOTOS,
                 image,
                 "Test photo message",
+                null,
                 null);
         GraphResponse response = request.executeAndWait();
         assertNotNull(response);
@@ -347,7 +544,6 @@ public void testExecuteUploadPhotoViaFile() throws IOException {
         FileOutputStream outStream = null;
 
         try {
-            final AccessToken accessToken = getAccessTokenForSharedUser(); 
             Bitmap image = createTestBitmap(128);
 
             File outputDir = getActivity().getCacheDir(); // context being the Activity pointer
@@ -358,10 +554,12 @@ public void testExecuteUploadPhotoViaFile() throws IOException {
             outStream.close();
             outStream = null;
 
-            GraphRequest request = ShareInternalUtility.newUploadPhotoRequest(
-                    accessToken,
+            GraphRequest request = GraphRequest.newUploadPhotoRequest(
+                    AccessToken.getCurrentAccessToken(),
+                    ShareInternalUtility.MY_PHOTOS,
                     outputFile,
                     "Test photo message",
+                    null,
                     null);
             GraphResponse response = request.executeAndWait();
             assertNotNull(response);
@@ -381,41 +579,211 @@ public void testExecuteUploadPhotoViaFile() throws IOException {
         }
     }
 
-//    RE-ENABLE WITH ShareApi ONCE VIDEOS TEAM FIXES ENDPOINT
-//
-//    @LargeTest
-//    public void testUploadVideoFile() throws IOException, URISyntaxException {
-//        File tempFile = null;
-//        try {
-//            final AccessToken accessToken = getAccessTokenForSharedUser();
-//            tempFile = createTempFileFromAsset("DarkScreen.mov");
-//
-//            GraphRequest request = ShareInternalUtility.newUploadVideoRequest(accessToken, tempFile,
-//                    null);
-//            GraphResponse response = request.executeAndWait();
-//            assertNotNull(response);
-//
-//            assertNull(response.getError());
-//
-//            JSONObject result = response.getJSONObject();
-//            assertNotNull(result);
-//            assertNotNull(response.getRawResponse());
-//        } catch (Exception ex) {
-//            return;
-//        } finally {
-//            if (tempFile != null) {
-//                tempFile.delete();
-//            }
-//        }
-//    }
+    @LargeTest
+    public void testExecuteUploadPhotoToAlbum() throws InterruptedException, JSONException {
+        // first create an album
+        Bundle params = new Bundle();
+        params.putString("name", "Foo");
+        GraphRequest request =
+                new GraphRequest(
+                        AccessToken.getCurrentAccessToken(),
+                        "me/albums",
+                        params,
+                        HttpMethod.POST);
+
+        GraphResponse response = request.executeAndWait();
+        JSONObject jsonResponse = response.getJSONObject();
+        assertNotNull(jsonResponse);
+        String albumId = jsonResponse.optString("id");
+        assertNotNull(albumId);
+
+        // upload an image to the album
+        Bitmap image = createTestBitmap(128);
+        SharePhoto photo = new SharePhoto.Builder()
+                .setBitmap(image)
+                .setUserGenerated(true)
+                .build();
+        SharePhotoContent content = new SharePhotoContent.Builder().addPhoto(photo).build();
+        final ShareApi shareApi = new ShareApi(content);
+        shareApi.setGraphNode(albumId);
+        final AtomicReference<String> imageId = new AtomicReference<>(null);
+        getActivity().runOnUiThread(new Runnable() {
+            @Override
+            public void run() {
+                shareApi.share(new FacebookCallback<Sharer.Result>() {
+                    @Override
+                    public void onSuccess(Sharer.Result result) {
+                        imageId.set(result.getPostId());
+                        notifyShareFinished();
+                    }
+
+                    @Override
+                    public void onCancel() {
+                        notifyShareFinished();
+                    }
+
+                    @Override
+                    public void onError(FacebookException error) {
+                        notifyShareFinished();
+                    }
+
+                    private void notifyShareFinished() {
+                        synchronized (shareApi) {
+                            shareApi.notifyAll();
+                        }
+                    }
+                });
+            }
+        });
+
+        synchronized (shareApi) {
+            shareApi.wait(REQUEST_TIMEOUT_MILLIS);
+        }
+        assertNotNull(imageId.get());
+
+        // now check to see if the image is in the album
+        GraphRequest listRequest =
+                new GraphRequest(AccessToken.getCurrentAccessToken(), albumId + "/photos");
+
+        GraphResponse listResponse = listRequest.executeAndWait();
+        JSONObject listObject = listResponse.getJSONObject();
+        assertNotNull(listObject);
+        JSONArray jsonList = listObject.optJSONArray("data");
+        assertNotNull(jsonList);
+
+        boolean found = false;
+        for (int i = 0; i < jsonList.length(); i++) {
+            JSONObject imageObject = jsonList.getJSONObject(i);
+            if (imageId.get().equals(imageObject.optString("id"))) {
+                found = true;
+            }
+        }
+        assertTrue(found);
+    }
 
     @LargeTest
-    public void testPostStatusUpdate() {
-        final AccessToken accessToken = getAccessTokenForSharedUser(); 
+    public void testUploadVideoFile() throws IOException, URISyntaxException {
+        File tempFile = null;
+        try {
+            tempFile = createTempFileFromAsset("DarkScreen.mov");
+            ShareVideo video = new ShareVideo.Builder()
+                    .setLocalUrl(Uri.fromFile(tempFile))
+                    .build();
+            ShareVideoContent content = new ShareVideoContent.Builder().setVideo(video).build();
+            final ShareApi shareApi = new ShareApi(content);
+            final AtomicReference<String> videoId = new AtomicReference<>(null);
+            getActivity().runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+                    shareApi.share(new FacebookCallback<Sharer.Result>() {
+                        @Override
+                        public void onSuccess(Sharer.Result result) {
+                            videoId.set(result.getPostId());
+                            notifyShareFinished();
+                        }
+
+                        @Override
+                        public void onCancel() {
+                            notifyShareFinished();
+                        }
+
+                        @Override
+                        public void onError(FacebookException error) {
+                            notifyShareFinished();
+                        }
+
+                        private void notifyShareFinished() {
+                            synchronized (shareApi) {
+                                shareApi.notifyAll();
+                            }
+                        }
+                    });
+                }
+            });
+
+            synchronized (shareApi) {
+                shareApi.wait(REQUEST_TIMEOUT_MILLIS);
+            }
+            assertNotNull(videoId.get());
+        } catch (Exception ex) {
+            fail();
+        } finally {
+            if (tempFile != null) {
+                tempFile.delete();
+            }
+        }
+    }
 
+    @LargeTest
+    public void testUploadVideoFileToUserId() throws IOException, URISyntaxException {
+        File tempFile = null;
+        try {
+            GraphRequest meRequest =
+                    GraphRequest.newMeRequest(AccessToken.getCurrentAccessToken(), null);
+            GraphResponse meResponse = meRequest.executeAndWait();
+            JSONObject meJson = meResponse.getJSONObject();
+            assertNotNull(meJson);
+
+            String userId = meJson.optString("id");
+            assertNotNull(userId);
+
+            tempFile = createTempFileFromAsset("DarkScreen.mov");
+            ShareVideo video = new ShareVideo.Builder()
+                    .setLocalUrl(Uri.fromFile(tempFile))
+                    .build();
+            ShareVideoContent content = new ShareVideoContent.Builder().setVideo(video).build();
+            final ShareApi shareApi = new ShareApi(content);
+            shareApi.setGraphNode(userId);
+            final AtomicReference<String> videoId = new AtomicReference<>(null);
+            getActivity().runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+                    shareApi.share(new FacebookCallback<Sharer.Result>() {
+                        @Override
+                        public void onSuccess(Sharer.Result result) {
+                            videoId.set(result.getPostId());
+                            notifyShareFinished();
+                        }
+
+                        @Override
+                        public void onCancel() {
+                            notifyShareFinished();
+                        }
+
+                        @Override
+                        public void onError(FacebookException error) {
+                            notifyShareFinished();
+                        }
+
+                        private void notifyShareFinished() {
+                            synchronized (shareApi) {
+                                shareApi.notifyAll();
+                            }
+                        }
+                    });
+                }
+            });
+
+            synchronized (shareApi) {
+                shareApi.wait(REQUEST_TIMEOUT_MILLIS);
+            }
+            assertNotNull(videoId.get());
+        } catch (Exception ex) {
+            fail();
+        } finally {
+            if (tempFile != null) {
+                tempFile.delete();
+            }
+        }
+    }
+
+    @LargeTest
+    public void testPostStatusUpdate() {
         JSONObject statusUpdate = createStatusUpdate("");
 
-        JSONObject retrievedStatusUpdate = postGetAndAssert(accessToken, "me/feed",
+        JSONObject retrievedStatusUpdate = postGetAndAssert(
+                AccessToken.getCurrentAccessToken(),
+                "me/feed",
                 statusUpdate);
 
         assertEquals(statusUpdate.optString("message"), retrievedStatusUpdate.optString("message"));
@@ -442,10 +810,12 @@ public void onCompleted(GraphResponse response) {
     public void testOnProgressCallbackIsCalled() {
         Bitmap image = Bitmap.createBitmap(128, 128, Bitmap.Config.ALPHA_8);
 
-        GraphRequest request = ShareInternalUtility.newUploadPhotoRequest(
+        GraphRequest request = GraphRequest.newUploadPhotoRequest(
                 null,
+                ShareInternalUtility.MY_PHOTOS,
                 image,
                 null,
+                null,
                 null);
         assertTrue(request != null);
 
@@ -470,10 +840,12 @@ public void onProgress(long current, long max) {
     public void testLastOnProgressCallbackIsCalledOnce() {
         Bitmap image = Bitmap.createBitmap(128, 128, Bitmap.Config.ALPHA_8);
 
-        GraphRequest request = ShareInternalUtility.newUploadPhotoRequest(
+        GraphRequest request = GraphRequest.newUploadPhotoRequest(
                 null,
+                ShareInternalUtility.MY_PHOTOS,
                 image,
                 null,
+                null,
                 null);
         assertTrue(request != null);
 
@@ -500,7 +872,7 @@ public void testBatchTimeoutIsApplied() {
         GraphRequest request = new GraphRequest(null, "me");
         GraphRequestBatch batch = new GraphRequestBatch(request);
 
-        // We assume 1 ms is short enough to fail
+        // We assume 5 ms is short enough to fail
         batch.setTimeout(1);
 
         List<GraphResponse> responses = GraphRequest.executeBatchAndWait(batch);
@@ -523,12 +895,14 @@ public void testBatchTimeoutCantBeNegative() {
 
     @LargeTest
     public void testCantUseComplexParameterInGetRequest() {
-        final AccessToken accessToken = getAccessTokenForSharedUser(); 
-
         Bundle parameters = new Bundle();
         parameters.putShortArray("foo", new short[1]);
 
-        GraphRequest request = new GraphRequest(accessToken, "me", parameters, HttpMethod.GET,
+        GraphRequest request = new GraphRequest(
+                AccessToken.getCurrentAccessToken(),
+                "me",
+                parameters,
+                HttpMethod.GET,
                 new ExpectFailureCallback());
         GraphResponse response = request.executeAndWait();
 
@@ -548,10 +922,14 @@ public void testCantUseComplexParameterInGetRequest() {
 
     @LargeTest
     public void testPaging() {
-        final AccessToken accessToken = getAccessTokenForSharedUser(); 
         final List<JSONObject> returnedPlaces = new ArrayList<JSONObject>();
         GraphRequest request = GraphRequest
-                .newPlacesSearchRequest(accessToken, SEATTLE_LOCATION, 1000, 3, null,
+                .newPlacesSearchRequest(
+                        AccessToken.getCurrentAccessToken(),
+                        SEATTLE_LOCATION,
+                        1000,
+                        3,
+                        null,
                         new GraphRequest.GraphJSONArrayCallback() {
                             @Override
                             public void onCompleted(JSONArray places, GraphResponse response) {
diff --git a/facebook/tests/src/com/facebook/appevents/AppEventsLoggerTests.java b/facebook/tests/src/com/facebook/appevents/AppEventsLoggerTests.java
index 2b427bdfe..e3bf4d6c7 100644
--- a/facebook/tests/src/com/facebook/appevents/AppEventsLoggerTests.java
+++ b/facebook/tests/src/com/facebook/appevents/AppEventsLoggerTests.java
@@ -82,62 +82,4 @@ public void run() {
             broadcastManager.unregisterReceiver(waitForBroadcastReceiver);
         }
     }
-
-    public void testPersistedEvents() throws IOException, ClassNotFoundException {
-        AppEventsLogger.setFlushBehavior(AppEventsLogger.FlushBehavior.EXPLICIT_ONLY);
-
-        final WaitForBroadcastReceiver waitForBroadcastReceiver = new WaitForBroadcastReceiver();
-        final LocalBroadcastManager broadcastManager =
-                LocalBroadcastManager.getInstance(getActivity());
-
-        try {
-            broadcastManager.registerReceiver(waitForBroadcastReceiver,
-                    new IntentFilter(AppEventsLogger.ACTION_APP_EVENTS_FLUSHED));
-
-            getActivity().getFileStreamPath(
-                    AppEventsLogger.PersistedEvents.PERSISTED_EVENTS_FILENAME).delete();
-
-            AccessToken accessToken = getAccessTokenForSharedUser();
-            AppEventsLogger logger1 = AppEventsLogger.newLogger(getActivity(), accessToken);
-
-            logger1.logEvent("an_event");
-
-            AppEventsLogger.onContextStop();
-
-            FileInputStream fis = getActivity().openFileInput(
-                    AppEventsLogger.PersistedEvents.PERSISTED_EVENTS_FILENAME);
-            assertNotNull(fis);
-
-            ObjectInputStream ois = new ObjectInputStream(fis);
-            Object obj = ois.readObject();
-            ois.close();
-
-            assertTrue(obj instanceof HashMap);
-
-            logger1.logEvent("another_event");
-
-            waitForBroadcastReceiver.incrementExpectCount();
-
-            // Events are added async if we flush right away the event might not have made it to the
-            // queue to be flushed. As a workaround give the other thread time to add it.
-            try {
-                Thread.sleep(100l);
-            } catch (Exception ex) {
-                // Ignore
-            }
-            logger1.flush();
-
-            waitForBroadcastReceiver.waitForExpectedCalls();
-            List<Intent> receivedIntents = waitForBroadcastReceiver.getReceivedIntents();
-            assertEquals(1, receivedIntents.size());
-
-            Intent intent = receivedIntents.get(0);
-            assertNotNull(intent);
-
-            assertEquals(2, intent.getIntExtra(
-                    AppEventsLogger.APP_EVENTS_EXTRA_NUM_EVENTS_FLUSHED, 0));
-        } finally {
-            broadcastManager.unregisterReceiver(waitForBroadcastReceiver);
-        }
-    }
 }
diff --git a/facebook/tests/src/com/facebook/login/LoginClientTests.java b/facebook/tests/src/com/facebook/login/LoginClientTests.java
index 1b873f7d6..2dba1ba93 100644
--- a/facebook/tests/src/com/facebook/login/LoginClientTests.java
+++ b/facebook/tests/src/com/facebook/login/LoginClientTests.java
@@ -22,23 +22,11 @@
 
 import android.support.v4.app.Fragment;
 import android.test.suitebuilder.annotation.LargeTest;
-import android.test.suitebuilder.annotation.MediumTest;
 
 import com.facebook.AccessToken;
 import com.facebook.FacebookTestCase;
-import com.facebook.GraphRequest;
-import com.facebook.GraphRequestBatch;
-import com.facebook.GraphRequestBatchBridge;
-import com.facebook.GraphResponse;
-import com.facebook.GraphResponseBridge;
 import com.facebook.TestBlocker;
-import com.facebook.TestUtils;
 
-import org.json.JSONArray;
-import org.json.JSONException;
-import org.json.JSONObject;
-
-import java.io.*;
 import java.util.*;
 
 public class LoginClientTests extends FacebookTestCase {
@@ -74,7 +62,7 @@ void tryNextHandler() {
 
     LoginClient.Request createRequest() {
         return new LoginClient.Request(
-                LoginBehavior.SSO_WITH_FALLBACK,
+                LoginBehavior.NATIVE_WITH_FALLBACK,
                 PERMISSIONS,
                 DefaultAudience.FRIENDS,
                 "1234",
@@ -115,7 +103,7 @@ void complete(Result result) {
 
     LoginClient.Request createNewPermissionRequest() {
         return new LoginClient.Request(
-                LoginBehavior.SSO_WITH_FALLBACK,
+                LoginBehavior.NATIVE_WITH_FALLBACK,
                 PERMISSIONS,
                 DefaultAudience.FRIENDS,
                 "1234",
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 667288ad6..b5166dad4 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 5fc9ea490..0fba3fd6a 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Tue Dec 30 15:37:06 PST 2014
+#Mon May 18 10:48:51 PDT 2015
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.2.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.4-all.zip
diff --git a/libs/BUCK b/libs/BUCK
index 1a2a7548a..9d476d1d5 100644
--- a/libs/BUCK
+++ b/libs/BUCK
@@ -8,7 +8,7 @@ prebuilt_jar(
 
 prebuilt_jar(
   name = 'bolts',
-  binary_jar = 'bolts.jar',
+  binary_jar = 'bolts-android-1.1.2.jar',
   visibility = [
     'PUBLIC',
   ],
diff --git a/samples/HelloFacebookSample/AndroidManifest.xml b/samples/HelloFacebookSample/AndroidManifest.xml
index 053b3593e..6fcb77c70 100644
--- a/samples/HelloFacebookSample/AndroidManifest.xml
+++ b/samples/HelloFacebookSample/AndroidManifest.xml
@@ -20,7 +20,7 @@
 -->
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.facebook.samples.hellofacebook"
+          package="com.example.hellofacebook"
           android:versionCode="1"
           android:versionName="1.0">
     <uses-sdk android:minSdkVersion="9"/>
@@ -48,7 +48,7 @@
         <provider android:authorities="com.facebook.app.FacebookContentProvider355198514515820"
                   android:name="com.facebook.FacebookContentProvider"
                   android:exported="true"/>
-        <receiver android:name="com.facebook.samples.hellofacebook.HelloFacebookBroadcastReceiver">
+        <receiver android:name="com.example.hellofacebook.HelloFacebookBroadcastReceiver">
             <intent-filter>
                 <action android:name="com.facebook.platform.AppCallResultBroadcast" />
             </intent-filter>
diff --git a/samples/HelloFacebookSample/BUCK b/samples/HelloFacebookSample/BUCK
index 27198e91c..9796c61d9 100644
--- a/samples/HelloFacebookSample/BUCK
+++ b/samples/HelloFacebookSample/BUCK
@@ -1,7 +1,7 @@
 android_resource(
   name = 'res',
   res = 'res',
-  package = 'com.facebook',
+  package = 'com.example.hellofacebook',
   deps = [
     '//facebook:android-sdk',
   ],
@@ -20,7 +20,6 @@ android_library(
 android_binary(
   name = 'app',
   manifest = 'AndroidManifest.xml',
-  target = 'android-16',
   keystore = '//keystores:debug',
   package_type = 'debug',
   deps = [
@@ -29,3 +28,8 @@ android_binary(
     '//libs:android-support-v4',
   ],
 )
+
+project_config(
+  src_target = ':app',
+  src_roots = ['src'],
+)
diff --git a/samples/HelloFacebookSample/src/com/facebook/samples/hellofacebook/HelloFacebookBroadcastReceiver.java b/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookBroadcastReceiver.java
similarity index 97%
rename from samples/HelloFacebookSample/src/com/facebook/samples/hellofacebook/HelloFacebookBroadcastReceiver.java
rename to samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookBroadcastReceiver.java
index d3f926d9d..a8278bc92 100644
--- a/samples/HelloFacebookSample/src/com/facebook/samples/hellofacebook/HelloFacebookBroadcastReceiver.java
+++ b/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookBroadcastReceiver.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.hellofacebook;
+package com.example.hellofacebook;
 
 import android.os.Bundle;
 import android.util.Log;
diff --git a/samples/HelloFacebookSample/src/com/facebook/samples/hellofacebook/HelloFacebookSampleActivity.java b/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java
similarity index 93%
rename from samples/HelloFacebookSample/src/com/facebook/samples/hellofacebook/HelloFacebookSampleActivity.java
rename to samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java
index ac9c97e1b..749c6d59a 100644
--- a/samples/HelloFacebookSample/src/com/facebook/samples/hellofacebook/HelloFacebookSampleActivity.java
+++ b/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.hellofacebook;
+package com.example.hellofacebook;
 
 import android.app.AlertDialog;
 import android.content.Intent;
@@ -40,17 +40,13 @@
 import com.facebook.login.widget.ProfilePictureView;
 import com.facebook.share.ShareApi;
 import com.facebook.share.Sharer;
-import com.facebook.share.internal.ShareInternalUtility;
 import com.facebook.share.model.SharePhoto;
 import com.facebook.share.model.SharePhotoContent;
 import com.facebook.share.model.ShareLinkContent;
 import com.facebook.share.widget.ShareDialog;
 
-import org.json.JSONObject;
-
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.Date;
 
 public class HelloFacebookSampleActivity extends FragmentActivity {
 
@@ -63,7 +59,7 @@
     };
 
     private final String PENDING_ACTION_BUNDLE_KEY =
-            "com.facebook.samples.hellofacebook:PendingAction";
+            "com.example.hellofacebook:PendingAction";
 
     private Button postStatusUpdateButton;
     private Button postPhotoButton;
@@ -320,6 +316,10 @@ private void postPhoto() {
             ShareApi.share(sharePhotoContent, shareCallback);
         } else {
             pendingAction = PendingAction.POST_PHOTO;
+            // We need to get new permissions, then complete the action when we get called back.
+            LoginManager.getInstance().logInWithPublishPermissions(
+                    this,
+                    Arrays.asList(PERMISSION));
         }
     }
 
@@ -330,22 +330,7 @@ private boolean hasPublishPermission() {
 
     private void performPublish(PendingAction action, boolean allowNoToken) {
         AccessToken accessToken = AccessToken.getCurrentAccessToken();
-        if (accessToken != null) {
-            pendingAction = action;
-            if (hasPublishPermission()) {
-                // We can do the action right away.
-                handlePendingAction();
-                return;
-            } else {
-                // We need to get new permissions, then complete the action when we get called back.
-                LoginManager.getInstance().logInWithPublishPermissions(
-                        this,
-                        Arrays.asList(PERMISSION));
-                return;
-            }
-        }
-
-        if (allowNoToken) {
+        if (accessToken != null || allowNoToken) {
             pendingAction = action;
             handlePendingAction();
         }
diff --git a/samples/Iconicus/AndroidManifest.xml b/samples/Iconicus/AndroidManifest.xml
new file mode 100644
index 000000000..7a6f18198
--- /dev/null
+++ b/samples/Iconicus/AndroidManifest.xml
@@ -0,0 +1,70 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.example.iconicus" >
+
+    <uses-permission android:name="android.permission.INTERNET"/>
+
+    <application
+        android:allowBackup="true"
+        android:icon="@drawable/ic_launcher"
+        android:label="@string/app_name"
+        android:theme="@style/AppBaseTheme" >
+        <activity
+            android:name=".MainActivity"
+            android:screenOrientation="portrait"
+            android:label="@string/app_name" >
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+            <intent-filter>
+                <data
+                    android:scheme="https"
+                    android:host="fb.me"
+                    android:path="/1570399853210604" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <category android:name="android.intent.category.BROWSABLE" />
+                <action android:name="android.intent.action.VIEW" />
+            </intent-filter>
+            <intent-filter>
+                <data android:scheme="iconicus" android:host="game" />
+                <category android:name="android.intent.category.DEFAULT" />
+                <category android:name="android.intent.category.BROWSABLE" />
+                <action android:name="android.intent.action.VIEW" />
+            </intent-filter>
+        </activity>
+
+        <activity android:name="com.facebook.FacebookActivity"
+            android:configChanges=
+                "keyboard|keyboardHidden|screenLayout|screenSize|orientation"
+            android:theme="@android:style/Theme.Translucent.NoTitleBar"
+            android:label="@string/app_name" />
+
+        <meta-data
+            android:name="com.facebook.sdk.ApplicationId"
+            android:value="@string/facebook_app_id"/>
+
+    </application>
+
+</manifest>
diff --git a/samples/Iconicus/BUCK b/samples/Iconicus/BUCK
new file mode 100644
index 000000000..7d7dfd9fb
--- /dev/null
+++ b/samples/Iconicus/BUCK
@@ -0,0 +1,35 @@
+android_resource(
+  name = 'res',
+  res = 'res',
+  package = 'com.example.iconicus',
+  deps = [
+    '//facebook:android-sdk',
+  ],
+)
+
+android_library(
+  name = 'lib',
+  srcs = glob(['src/**/*.java']),
+  deps = [
+    ':res',
+    '//facebook:android-sdk',
+    '//libs:android-support-v4',
+  ],
+)
+
+android_binary(
+  name = 'app',
+  manifest = 'AndroidManifest.xml',
+  keystore = '//keystores:debug',
+  package_type = 'debug',
+  deps = [
+    ':lib',
+    '//facebook:android-sdk',
+    '//libs:android-support-v4',
+  ],
+)
+
+project_config(
+  src_target = ':app',
+  src_roots = ['src'],
+)
diff --git a/samples/Iconicus/build.gradle b/samples/Iconicus/build.gradle
new file mode 100644
index 000000000..8d3727919
--- /dev/null
+++ b/samples/Iconicus/build.gradle
@@ -0,0 +1,42 @@
+apply plugin: 'com.android.application'
+
+repositories {
+    mavenCentral()
+}
+
+dependencies {
+    compile project(':facebook')
+    // In order to test a specific version published on maven, comment out the project compile
+    // directive and and comment this line and update to the specific version.
+    // compile 'com.facebook.android:facebook-android-sdk:4.0.1'
+}
+
+android {
+    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
+    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
+
+    defaultConfig {
+        applicationId "com.example.iconicus"
+        minSdkVersion 11
+        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
+    }
+
+    buildTypes {
+        debug {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
+        }
+        release {
+            minifyEnabled true
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
+        }
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+    }
+}
diff --git a/samples/Iconicus/proguard-project.txt b/samples/Iconicus/proguard-project.txt
new file mode 100644
index 000000000..f2fe1559a
--- /dev/null
+++ b/samples/Iconicus/proguard-project.txt
@@ -0,0 +1,20 @@
+# To enable ProGuard in your project, edit project.properties
+# to define the proguard.config property as described in that file.
+#
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in ${sdk.dir}/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the ProGuard
+# include property in project.properties.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/samples/Iconicus/res/drawable-hdpi/ic_launcher.png b/samples/Iconicus/res/drawable-hdpi/ic_launcher.png
new file mode 100644
index 000000000..6cb2639fc
Binary files /dev/null and b/samples/Iconicus/res/drawable-hdpi/ic_launcher.png differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile1.png b/samples/Iconicus/res/drawable-hdpi/tile1.png
new file mode 100644
index 000000000..1cdf68bc1
Binary files /dev/null and b/samples/Iconicus/res/drawable-hdpi/tile1.png differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile2.png b/samples/Iconicus/res/drawable-hdpi/tile2.png
new file mode 100644
index 000000000..4c6c24e78
Binary files /dev/null and b/samples/Iconicus/res/drawable-hdpi/tile2.png differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile3.png b/samples/Iconicus/res/drawable-hdpi/tile3.png
new file mode 100644
index 000000000..883ea2883
Binary files /dev/null and b/samples/Iconicus/res/drawable-hdpi/tile3.png differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile4.png b/samples/Iconicus/res/drawable-hdpi/tile4.png
new file mode 100644
index 000000000..a94449150
Binary files /dev/null and b/samples/Iconicus/res/drawable-hdpi/tile4.png differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile5.png b/samples/Iconicus/res/drawable-hdpi/tile5.png
new file mode 100644
index 000000000..d3e742968
Binary files /dev/null and b/samples/Iconicus/res/drawable-hdpi/tile5.png differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile6.png b/samples/Iconicus/res/drawable-hdpi/tile6.png
new file mode 100644
index 000000000..972db9bb8
Binary files /dev/null and b/samples/Iconicus/res/drawable-hdpi/tile6.png differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile7.png b/samples/Iconicus/res/drawable-hdpi/tile7.png
new file mode 100644
index 000000000..d551400a9
Binary files /dev/null and b/samples/Iconicus/res/drawable-hdpi/tile7.png differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile8.png b/samples/Iconicus/res/drawable-hdpi/tile8.png
new file mode 100644
index 000000000..957e8d95e
Binary files /dev/null and b/samples/Iconicus/res/drawable-hdpi/tile8.png differ
diff --git a/samples/Iconicus/res/drawable-hdpi/tile9.png b/samples/Iconicus/res/drawable-hdpi/tile9.png
new file mode 100644
index 000000000..4e34adbc1
Binary files /dev/null and b/samples/Iconicus/res/drawable-hdpi/tile9.png differ
diff --git a/samples/Iconicus/res/drawable-mdpi/ic_launcher.png b/samples/Iconicus/res/drawable-mdpi/ic_launcher.png
new file mode 100644
index 000000000..c1b5f3679
Binary files /dev/null and b/samples/Iconicus/res/drawable-mdpi/ic_launcher.png differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile1.png b/samples/Iconicus/res/drawable-mdpi/tile1.png
new file mode 100644
index 000000000..80328c034
Binary files /dev/null and b/samples/Iconicus/res/drawable-mdpi/tile1.png differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile2.png b/samples/Iconicus/res/drawable-mdpi/tile2.png
new file mode 100644
index 000000000..23573f2ec
Binary files /dev/null and b/samples/Iconicus/res/drawable-mdpi/tile2.png differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile3.png b/samples/Iconicus/res/drawable-mdpi/tile3.png
new file mode 100644
index 000000000..5c5581c7b
Binary files /dev/null and b/samples/Iconicus/res/drawable-mdpi/tile3.png differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile4.png b/samples/Iconicus/res/drawable-mdpi/tile4.png
new file mode 100644
index 000000000..081d4b3f2
Binary files /dev/null and b/samples/Iconicus/res/drawable-mdpi/tile4.png differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile5.png b/samples/Iconicus/res/drawable-mdpi/tile5.png
new file mode 100644
index 000000000..c007b1a2b
Binary files /dev/null and b/samples/Iconicus/res/drawable-mdpi/tile5.png differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile6.png b/samples/Iconicus/res/drawable-mdpi/tile6.png
new file mode 100644
index 000000000..288703f75
Binary files /dev/null and b/samples/Iconicus/res/drawable-mdpi/tile6.png differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile7.png b/samples/Iconicus/res/drawable-mdpi/tile7.png
new file mode 100644
index 000000000..d54767ebf
Binary files /dev/null and b/samples/Iconicus/res/drawable-mdpi/tile7.png differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile8.png b/samples/Iconicus/res/drawable-mdpi/tile8.png
new file mode 100644
index 000000000..72186a8fb
Binary files /dev/null and b/samples/Iconicus/res/drawable-mdpi/tile8.png differ
diff --git a/samples/Iconicus/res/drawable-mdpi/tile9.png b/samples/Iconicus/res/drawable-mdpi/tile9.png
new file mode 100644
index 000000000..1adba18ee
Binary files /dev/null and b/samples/Iconicus/res/drawable-mdpi/tile9.png differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/ic_launcher.png b/samples/Iconicus/res/drawable-xhdpi/ic_launcher.png
new file mode 100644
index 000000000..70919b956
Binary files /dev/null and b/samples/Iconicus/res/drawable-xhdpi/ic_launcher.png differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile1.png b/samples/Iconicus/res/drawable-xhdpi/tile1.png
new file mode 100644
index 000000000..4cff27b08
Binary files /dev/null and b/samples/Iconicus/res/drawable-xhdpi/tile1.png differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile2.png b/samples/Iconicus/res/drawable-xhdpi/tile2.png
new file mode 100644
index 000000000..67e490127
Binary files /dev/null and b/samples/Iconicus/res/drawable-xhdpi/tile2.png differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile3.png b/samples/Iconicus/res/drawable-xhdpi/tile3.png
new file mode 100644
index 000000000..b152f59e6
Binary files /dev/null and b/samples/Iconicus/res/drawable-xhdpi/tile3.png differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile4.png b/samples/Iconicus/res/drawable-xhdpi/tile4.png
new file mode 100644
index 000000000..c10dc0c93
Binary files /dev/null and b/samples/Iconicus/res/drawable-xhdpi/tile4.png differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile5.png b/samples/Iconicus/res/drawable-xhdpi/tile5.png
new file mode 100644
index 000000000..65bf3751d
Binary files /dev/null and b/samples/Iconicus/res/drawable-xhdpi/tile5.png differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile6.png b/samples/Iconicus/res/drawable-xhdpi/tile6.png
new file mode 100644
index 000000000..7fb246d3c
Binary files /dev/null and b/samples/Iconicus/res/drawable-xhdpi/tile6.png differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile7.png b/samples/Iconicus/res/drawable-xhdpi/tile7.png
new file mode 100644
index 000000000..a09fdd566
Binary files /dev/null and b/samples/Iconicus/res/drawable-xhdpi/tile7.png differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile8.png b/samples/Iconicus/res/drawable-xhdpi/tile8.png
new file mode 100644
index 000000000..59598f819
Binary files /dev/null and b/samples/Iconicus/res/drawable-xhdpi/tile8.png differ
diff --git a/samples/Iconicus/res/drawable-xhdpi/tile9.png b/samples/Iconicus/res/drawable-xhdpi/tile9.png
new file mode 100644
index 000000000..f8d6a8dc8
Binary files /dev/null and b/samples/Iconicus/res/drawable-xhdpi/tile9.png differ
diff --git a/samples/Iconicus/res/drawable/board_background.xml b/samples/Iconicus/res/drawable/board_background.xml
new file mode 100644
index 000000000..88f424608
--- /dev/null
+++ b/samples/Iconicus/res/drawable/board_background.xml
@@ -0,0 +1,102 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android" >
+    <item>
+        <shape>
+            <solid android:color="@color/iconicus_divider" />
+            <size
+                android:height="@dimen/board_size"
+                android:width="@dimen/board_size" />
+        </shape>
+    </item>
+    <item android:right="194dp" android:bottom="194dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_board_background" />
+        </shape>
+    </item>
+    <item android:right="98dp" android:left="98dp" android:bottom="194dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_board_background" />
+        </shape>
+    </item>
+    <item android:left="194dp" android:bottom="194dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_board_background" />
+        </shape>
+    </item>
+
+    <item android:right="194dp" android:top="98dp" android:bottom="98dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_board_background" />
+        </shape>
+    </item>
+    <item android:right="98dp" android:left="98dp" android:top="98dp" android:bottom="98dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_board_background" />
+        </shape>
+    </item>
+    <item android:left="194dp"  android:top="98dp" android:bottom="98dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_board_background" />
+        </shape>
+    </item>
+
+    <item android:right="194dp" android:top="194dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_board_background" />
+        </shape>
+    </item>
+    <item android:right="98dp" android:left="98dp" android:top="194dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_board_background" />
+        </shape>
+    </item>
+    <item android:left="194dp"  android:top="194dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_board_background" />
+        </shape>
+    </item>
+
+    <item android:bottom="280dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_board_background" />
+        </shape>
+    </item>
+    <item android:top="280dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_board_background" />
+        </shape>
+    </item>
+    <item android:left="280dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_board_background" />
+        </shape>
+    </item>
+    <item android:right="280dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_board_background" />
+        </shape>
+    </item>
+
+
+
+
+</layer-list>
diff --git a/samples/Iconicus/res/drawable/button_background.xml b/samples/Iconicus/res/drawable/button_background.xml
new file mode 100644
index 000000000..52c37c3e0
--- /dev/null
+++ b/samples/Iconicus/res/drawable/button_background.xml
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_enabled="false">
+        <shape android:shape="rectangle">
+            <corners android:radius="@dimen/button_radius" />
+            <solid android:color="@color/iconicus_button_background_disabled" />
+            <stroke android:color="@color/iconicus_button_border" android:width="1dp" />
+        </shape>
+    </item>
+    <item android:state_pressed="true">
+        <shape android:shape="rectangle">
+            <corners android:radius="@dimen/button_radius" />
+            <solid android:color="@color/iconicus_button_background_pressed" />
+            <stroke android:color="@color/iconicus_button_border" android:width="1dp" />
+        </shape>
+    </item>
+    <item>
+        <shape android:shape="rectangle">
+            <corners android:radius="@dimen/button_radius" />
+            <solid android:color="@color/iconicus_button_background" />
+            <stroke android:color="@color/iconicus_button_border" android:width="1dp" />
+        </shape>
+    </item>
+</selector>
diff --git a/samples/Iconicus/res/drawable/choice_icon_background.xml b/samples/Iconicus/res/drawable/choice_icon_background.xml
new file mode 100644
index 000000000..f0d2e4349
--- /dev/null
+++ b/samples/Iconicus/res/drawable/choice_icon_background.xml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<shape
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+
+    <corners android:radius="@dimen/background_radius" />
+    <solid android:color="@color/iconicus_choice_icon_background" />
+    <stroke android:width="1dp" android:color="@color/iconicus_icon_default_border" />
+</shape>
diff --git a/samples/Iconicus/res/drawable/default_icon_background.xml b/samples/Iconicus/res/drawable/default_icon_background.xml
new file mode 100644
index 000000000..2c82fab54
--- /dev/null
+++ b/samples/Iconicus/res/drawable/default_icon_background.xml
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item>
+        <shape>
+            <gradient
+                android:type="linear"
+                android:angle="315"
+                android:endColor="@color/iconicus_icon_background"
+                android:startColor="@color/iconicus_icon_shadow" />
+            <size android:width="@dimen/grid_cell_width" android:height="@dimen/grid_cell_height"/>
+            <corners android:radius="@dimen/background_radius" />
+        </shape>
+    </item>
+    <item android:top="2dp" android:left="2dp">
+        <shape>
+            <corners android:radius="@dimen/background_radius" />
+            <solid android:color="@color/iconicus_icon_background" />
+        </shape>
+    </item>
+</layer-list>
+
diff --git a/samples/Iconicus/res/drawable/invalid_icon_background.xml b/samples/Iconicus/res/drawable/invalid_icon_background.xml
new file mode 100644
index 000000000..656ab8326
--- /dev/null
+++ b/samples/Iconicus/res/drawable/invalid_icon_background.xml
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android" >
+    <item>
+        <shape>
+            <solid android:color="@color/iconicus_icon_outside" />
+            <corners android:radius="@dimen/icon_radius" />
+        </shape>
+    </item>
+    <item android:top="2dp" android:bottom="2dp" android:right="2dp" android:left="2dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_icon_invalid_border" />
+            <corners android:radius="@dimen/icon_radius" />
+        </shape>
+    </item>
+    <item android:top="4dp" android:bottom="4dp" android:right="4dp" android:left="4dp">
+        <shape>
+            <solid android:color="@color/iconicus_icon_inside" />
+            <corners android:radius="@dimen/icon_radius" />
+        </shape>
+    </item>
+</layer-list>
diff --git a/samples/Iconicus/res/drawable/locked_icon_background.xml b/samples/Iconicus/res/drawable/locked_icon_background.xml
new file mode 100644
index 000000000..601aa2c71
--- /dev/null
+++ b/samples/Iconicus/res/drawable/locked_icon_background.xml
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android" >
+    <item>
+        <shape>
+            <solid android:color="@color/iconicus_icon_outside" />
+            <corners android:radius="@dimen/icon_radius" />
+        </shape>
+    </item>
+    <item android:top="2dp" android:bottom="2dp" android:right="2dp" android:left="2dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_icon_locked_border" />
+            <corners android:radius="@dimen/icon_radius" />
+        </shape>
+    </item>
+    <item android:top="4dp" android:bottom="4dp" android:right="4dp" android:left="4dp">
+        <shape>
+            <solid android:color="@color/iconicus_icon_inside" />
+            <corners android:radius="@dimen/icon_radius" />
+        </shape>
+    </item>
+</layer-list>
diff --git a/samples/Iconicus/res/drawable/selected_icon_background.xml b/samples/Iconicus/res/drawable/selected_icon_background.xml
new file mode 100644
index 000000000..08f985cf0
--- /dev/null
+++ b/samples/Iconicus/res/drawable/selected_icon_background.xml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<shape
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+
+    <corners android:radius="@dimen/background_radius" />
+    <solid android:color="@color/iconicus_choice_icon_background" />
+    <stroke android:width="2dp" android:color="@color/iconicus_icon_selected_border" />
+</shape>
diff --git a/samples/Iconicus/res/drawable/valid_icon_background.xml b/samples/Iconicus/res/drawable/valid_icon_background.xml
new file mode 100644
index 000000000..a2fc0d85f
--- /dev/null
+++ b/samples/Iconicus/res/drawable/valid_icon_background.xml
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android" >
+    <item>
+        <shape>
+            <solid android:color="@color/iconicus_icon_outside" />
+            <corners android:radius="@dimen/icon_radius" />
+        </shape>
+    </item>
+    <item android:top="2dp" android:bottom="2dp" android:right="2dp" android:left="2dp">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/iconicus_icon_valid_border" />
+            <corners android:radius="@dimen/icon_radius" />
+        </shape>
+    </item>
+    <item android:top="4dp" android:bottom="4dp" android:right="4dp" android:left="4dp">
+        <shape>
+            <solid android:color="@color/iconicus_icon_inside" />
+            <corners android:radius="@dimen/icon_radius" />
+        </shape>
+    </item>
+</layer-list>
diff --git a/samples/Iconicus/res/layout/activity_main.xml b/samples/Iconicus/res/layout/activity_main.xml
new file mode 100644
index 000000000..04565eed2
--- /dev/null
+++ b/samples/Iconicus/res/layout/activity_main.xml
@@ -0,0 +1,134 @@
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical">
+    <LinearLayout
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:background="@color/iconicus_board_background"
+        android:padding="10dp">
+        <LinearLayout
+            android:layout_weight="1"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content">
+        </LinearLayout>
+        <GridView
+            android:id="@+id/board"
+            android:background="@drawable/board_background"
+            android:numColumns="9"
+            android:layout_gravity="center_horizontal"
+            android:columnWidth="@dimen/grid_cell_width"
+            android:stretchMode="none"
+            android:horizontalSpacing="2dp"
+            android:verticalSpacing="2dp"
+            android:padding="2dp"
+            android:listSelector="@null"
+            android:layout_width="@dimen/board_size"
+            android:layout_height="wrap_content" >
+        </GridView>
+        <LinearLayout
+            android:layout_weight="1"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content">
+        </LinearLayout>
+    </LinearLayout>
+
+    <TextView
+        android:layout_width="fill_parent"
+        android:text="@string/instructions"
+        android:layout_height="wrap_content"
+        android:layout_margin="5dp">
+    </TextView>
+
+    <GridView
+        android:id="@+id/valid_numbers"
+        android:numColumns="10"
+        android:layout_gravity="center_horizontal"
+        android:columnWidth="@dimen/grid_cell_width"
+        android:stretchMode="spacingWidthUniform"
+        android:padding="10dp"
+        android:background="#dddddd"
+        android:listSelector="@null"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content" >
+    </GridView>
+
+    <LinearLayout
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:layout_margin="5dp"
+        android:layout_gravity="center_horizontal">
+
+        <Button
+            android:id="@+id/new_board"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            style="@style/iconicus_button"
+            android:layout_marginRight="2dp"
+            android:text="@string/button_new_game"/>
+
+        <Button
+            android:id="@+id/clear_board"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            style="@style/iconicus_button"
+            android:layout_marginLeft="2dp"
+            android:text="@string/button_clear_board" />
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:layout_marginLeft="5dp"
+        android:layout_marginRight="5dp"
+        android:layout_gravity="center_horizontal">
+
+        <com.facebook.share.widget.ShareButton
+            android:id="@+id/share_button"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1" />
+
+        <com.facebook.share.widget.SendButton
+            android:id="@+id/send_button"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="4dp"
+            android:layout_marginRight="4dp"
+            android:layout_weight="1" />
+
+        <Button
+            android:id="@+id/copy_button"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:layout_weight="1"
+            style="@style/iconicus_button"
+            android:text="@string/copy_url" />
+    </LinearLayout>
+</LinearLayout>
diff --git a/samples/Iconicus/res/layout/choice_cell.xml b/samples/Iconicus/res/layout/choice_cell.xml
new file mode 100644
index 000000000..67cf5a5e6
--- /dev/null
+++ b/samples/Iconicus/res/layout/choice_cell.xml
@@ -0,0 +1,30 @@
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<ImageView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/selection_cell"
+    android:layout_width="@dimen/grid_cell_width"
+    android:layout_height="@dimen/grid_cell_height"
+    android:background="@drawable/choice_icon_background"
+    android:minHeight="@dimen/grid_cell_height"
+    android:maxHeight="@dimen/grid_cell_height"
+    android:padding="4dp"
+    android:scaleType="fitCenter"
+    android:adjustViewBounds="true"
+    android:gravity="center"/>
diff --git a/samples/Iconicus/res/layout/grid_cell.xml b/samples/Iconicus/res/layout/grid_cell.xml
new file mode 100644
index 000000000..88e57cf67
--- /dev/null
+++ b/samples/Iconicus/res/layout/grid_cell.xml
@@ -0,0 +1,30 @@
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<ImageView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/selection_cell"
+    android:layout_width="@dimen/grid_cell_width"
+    android:layout_height="@dimen/grid_cell_height"
+    android:background="@drawable/default_icon_background"
+    android:minHeight="@dimen/grid_cell_height"
+    android:maxHeight="@dimen/grid_cell_height"
+    android:padding="4dp"
+    android:scaleType="fitCenter"
+    android:adjustViewBounds="true"
+    android:gravity="center"/>
diff --git a/samples/Iconicus/res/values-w820dp/dimens.xml b/samples/Iconicus/res/values-w820dp/dimens.xml
new file mode 100644
index 000000000..72bb51545
--- /dev/null
+++ b/samples/Iconicus/res/values-w820dp/dimens.xml
@@ -0,0 +1,26 @@
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
diff --git a/samples/Iconicus/res/values/dimens.xml b/samples/Iconicus/res/values/dimens.xml
new file mode 100644
index 000000000..8ab017967
--- /dev/null
+++ b/samples/Iconicus/res/values/dimens.xml
@@ -0,0 +1,31 @@
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+    <dimen name="grid_cell_width">30dp</dimen>
+    <dimen name="grid_cell_height">30dp</dimen>
+    <dimen name="background_radius">3dp</dimen>
+    <dimen name="icon_radius">3dp</dimen>
+    <dimen name="button_radius">2dp</dimen>
+    <dimen name="board_size">290dp</dimen>
+</resources>
diff --git a/samples/Iconicus/res/values/strings.xml b/samples/Iconicus/res/values/strings.xml
new file mode 100644
index 000000000..e54c9c78d
--- /dev/null
+++ b/samples/Iconicus/res/values/strings.xml
@@ -0,0 +1,33 @@
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <string name="app_name">Iconicus</string>
+    <string name="instructions">Select an icon from below and put it into the board above. Make sure that no two of the same icons occur in the same row, column, or 3x3 grid. Need help? Share with your friends and see if they can give you any hints.</string>
+    <string name="button_new_game">New Game</string>
+    <string name="button_clear_board">Clear Board</string>
+    <string name="copy_url">Copy URL</string>
+    <string name="facebook_app_id">1567030756880847</string>
+    <string name="share_title">Play this game!</string>
+    <string name="share_description">Check out this game of Iconicus that I was playing. Can you finish it?</string>
+    <string name="link_copied">The link has been copied to the clipboard.</string>
+    <string name="position_locked">Current position is locked, please select a different location.</string>
+    <string name="nothing_selected">Nothing was selected, please select something first.</string>
+</resources>
diff --git a/samples/Iconicus/res/values/styles.xml b/samples/Iconicus/res/values/styles.xml
new file mode 100644
index 000000000..af918bb24
--- /dev/null
+++ b/samples/Iconicus/res/values/styles.xml
@@ -0,0 +1,55 @@
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+
+    <style name="AppBaseTheme" parent="android:Theme.Light">
+    </style>
+
+    <color name="iconicus_button_background">#dddddd</color>
+    <color name="iconicus_button_background_disabled">#ffffff</color>
+    <color name="iconicus_button_background_pressed">#aaaaaa</color>
+    <color name="iconicus_button_border">#999999</color>
+    <color name="iconicus_icon_background">#c4b075</color>
+    <color name="iconicus_icon_shadow">#706644</color>
+    <color name="iconicus_icon_valid_border">#00ff00</color>
+    <color name="iconicus_icon_selected_border">#aa000000</color>
+    <color name="iconicus_icon_locked_border">#aaffffff</color>
+    <color name="iconicus_icon_invalid_border">#aaff0000</color>
+    <color name="iconicus_icon_default_border">#00bfff</color>
+    <color name="iconicus_choice_icon_background">#e4d08e</color>
+    <color name="iconicus_icon_outside">#c4b075</color>
+    <color name="iconicus_icon_inside">#e4d08e</color>
+    <color name="iconicus_board_background">#e5cf8e</color>
+    <color name="iconicus_divider">#a19056</color>
+
+    <style name="iconicus_button" parent="@android:style/Widget.Button">
+        <item name="android:background">@drawable/button_background</item>
+        <item name="android:drawablePadding">6dp</item>
+        <item name="android:gravity">center</item>
+        <item name="android:paddingBottom">5dp</item>
+        <item name="android:paddingLeft">8dp</item>
+        <item name="android:paddingRight">8dp</item>
+        <item name="android:paddingTop">5dp</item>
+        <item name="android:textColor">#000000</item>
+        <item name="android:textSize">14sp</item>
+    </style>
+
+</resources>
diff --git a/samples/Iconicus/src/com/example/iconicus/GameBoard.java b/samples/Iconicus/src/com/example/iconicus/GameBoard.java
new file mode 100644
index 000000000..6624bf4dd
--- /dev/null
+++ b/samples/Iconicus/src/com/example/iconicus/GameBoard.java
@@ -0,0 +1,446 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.iconicus;
+
+import android.net.Uri;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import java.util.Random;
+
+/**
+ * Abstraction for a game board
+ */
+public class GameBoard {
+    public static final int BOARD_ROWS = 9; // 9x9 board
+    public static final int GROUP_ROWS = 3;
+    public static final int BOARD_SIZE = BOARD_ROWS * BOARD_ROWS; // 9x9 board
+    public static final int EMPTY_PIECE = 0;
+    public static final int MIN_VALUE = 1;
+    public static final int MAX_VALUE = 9;
+
+    private static final Uri SHARE_URI = Uri.parse("https://fb.me/1570399853210604");
+    private static final String DATA_KEY = "data";
+    private static final String LOCKED_KEY = "locked";
+
+    private static final int [] SEED_GRID = {
+            1,2,3,4,5,6,7,8,9,
+            4,5,6,7,8,9,1,2,3,
+            7,8,9,1,2,3,4,5,6,
+            2,3,4,5,6,7,8,9,1,
+            5,6,7,8,9,1,2,3,4,
+            8,9,1,2,3,4,5,6,7,
+            3,4,5,6,7,8,9,1,2,
+            6,7,8,9,1,2,3,4,5,
+            9,1,2,3,4,5,6,7,8
+    };
+
+    private int[] board = new int[BOARD_SIZE];
+    private boolean[] lockedPositions = new boolean[BOARD_SIZE];
+
+    private GameBoard(int[] board, boolean[] lockedPositions) {
+        if (board.length != this.board.length
+                || lockedPositions.length != this.lockedPositions.length) {
+            throw new IllegalArgumentException("boards are not the same size");
+        }
+        System.arraycopy(board, 0, this.board, 0, board.length);
+        System.arraycopy(lockedPositions, 0, this.lockedPositions, 0, lockedPositions.length);
+    }
+
+    private GameBoard(int[] board) {
+        if (board.length != this.board.length) {
+            throw new IllegalArgumentException("boards are not the same size");
+        }
+        for (int i = 0; i < BOARD_SIZE; i++) {
+            this.board[i] = board[i];
+            this.lockedPositions[i] = (this.board[i] != EMPTY_PIECE);
+        }
+    }
+
+    /**
+     * Generates a new valid board.
+     * @param openPositions the number of open positions to leave on the board.
+     * @return a new valid board.
+     */
+    public static GameBoard generateBoard(final int openPositions) {
+        Random random = new Random(System.currentTimeMillis());
+        int [] board = new int[BOARD_SIZE];
+        System.arraycopy(SEED_GRID, 0, board, 0, BOARD_SIZE);
+
+        for (int i = 0; i < 9; i++) {
+            shuffleGrid(random, board);
+        }
+
+        List<Integer> remainingPositions = new ArrayList<>(BOARD_SIZE);
+        for (int i = 0; i < BOARD_SIZE; i++) {
+            remainingPositions.add(i);
+        }
+
+        for (int i = 0; i < openPositions; i++) {
+            removeOpenPosition(random, board, remainingPositions);
+        }
+
+        return new GameBoard(board);
+    }
+
+    /**
+     * Returns a GameBoard from a Uri.
+     * @param uri the uri that was shared.
+     * @return a board from the Uri.
+     */
+    public static GameBoard fromUri(final Uri uri) {
+        String data = uri.getQueryParameter(DATA_KEY);
+        if (data != null) {
+            int [] newBoard = decodeBoard(data);
+            String locked = uri.getQueryParameter(LOCKED_KEY);
+            boolean [] lockedArr;
+
+            if (locked != null) {
+                lockedArr = decodeLockedPositions(locked);
+            } else {
+                // if there's no explicit locked param, then treat every position
+                // passed in as being locked.
+                lockedArr = new boolean[BOARD_SIZE];
+                for (int i = 0; i < lockedArr.length; i++) {
+                    if (newBoard[i] != EMPTY_PIECE) {
+                        lockedArr[i] = true;
+                    }
+                }
+            }
+            return new GameBoard(newBoard, lockedArr);
+        }
+        return null;
+    }
+
+    /**
+     * Clears the existing board of all pieces that weren't locked in place.
+     */
+    public void clearBoard() {
+        for (int i = 0; i < board.length; i++) {
+            if (!lockedPositions[i]) {
+                board[i] = EMPTY_PIECE;
+            }
+        }
+    }
+
+    /**
+     * Determines whether the current position is locked or not.
+     * @param position the position of the piece on the board.
+     * @return whether it's locked or not.
+     */
+    public boolean isLocked(final int position) {
+        return lockedPositions[position];
+    }
+
+    /**
+     * Sets the value for the position on the board. Returns true if the value is successfully set,
+     * false otherwise (e.g. the current position is locked and can't be modified).
+     * @param value the value to set.
+     * @param position the position of the piece on the board.
+     * @return true if value is successfully set.
+     */
+    public boolean setValue(final int value, final int position) {
+        if (!isLocked(position)
+                && ((value >= MIN_VALUE && value <= MAX_VALUE) || value == EMPTY_PIECE)) {
+            board[position] = value;
+            return true;
+        }
+        return false;
+    }
+
+    /**
+     * Gets the integer value of the piece on the board.
+     * @param position the position of the piece on the board.
+     * @return the integer value (0-9) or -1 if there's no current value.
+     */
+    public int getValue(final int position) {
+        if (position < 0 || position >= BOARD_SIZE) {
+            return EMPTY_PIECE;
+        }
+        return board[position];
+    }
+
+    /**
+     * Gets the string value of the piece on the board.
+     * @param position the position of the piece on the board.
+     * @return the String value ("0"-"9") or the empty string "" if there's no current value.
+     */
+    public String getValueAsString(final int position) {
+        int value = getValue(position);
+        if (value < MIN_VALUE || value > MAX_VALUE) {
+            return "";
+        }
+        return "" + value;
+    }
+
+    /**
+     * Determines whether the current position is empty or not.
+     * @param position the position of the piece.
+     * @return true if the current position is empty.
+     */
+    public boolean isEmpty(final int position) {
+        return board[position] == EMPTY_PIECE;
+    }
+
+    /**
+     * Determines whether the value in the current position is valid or not.
+     * @param position the position of the piece.
+     * @return true if the current position is valid (empty pieces are by default valid).
+     */
+    public boolean isValid(final int position) {
+        if (isEmpty(position)) {
+            return true;
+        }
+        return validateRow(position) && validateColumn(position) && validateGroup(position);
+    }
+
+    /**
+     * Converts the current board into a Uri.
+     * @return a Uri that represents the current board.
+     */
+    public Uri toUri() {
+        Uri.Builder shareUri = SHARE_URI.buildUpon();
+        shareUri.appendQueryParameter(DATA_KEY, encodeBoard());
+        shareUri.appendQueryParameter(LOCKED_KEY, encodeLockedPositions());
+        return shareUri.build();
+    }
+
+    private String encodeBoard() {
+        StringBuilder builder = new StringBuilder();
+        for (int i = 0; i < board.length; i++) {
+            builder.append(board[i]);
+        }
+        return builder.toString();
+    }
+
+    private static int[] decodeBoard(String input) {
+        int [] newBoard = new int[BOARD_SIZE];
+        Arrays.fill(newBoard, EMPTY_PIECE);
+        if (input.length() == BOARD_SIZE) {
+            for (int i = 0; i < input.length(); i++) {
+                newBoard[i] = Integer.parseInt(input.substring(i, i + 1));
+            }
+        }
+        return newBoard;
+    }
+
+    private String encodeLockedPositions() {
+        StringBuilder builder = new StringBuilder();
+        for (int i = 0; i < lockedPositions.length; i++) {
+            builder.append(lockedPositions[i] ? 1 : 0);;;
+        }
+        return builder.toString();
+    }
+
+    private static boolean[] decodeLockedPositions(String input) {
+        boolean [] locked = new boolean[BOARD_SIZE];
+        Arrays.fill(locked, false);
+        if (input.length() == BOARD_SIZE) {
+            for (int i = 0; i < input.length(); i++) {
+                locked[i] = (input.charAt(i) == '1');
+            }
+        }
+        return locked;
+    }
+
+    private boolean validateRow(final int position) {
+        int startPos = (position / BOARD_ROWS) * BOARD_ROWS;
+        for (int i = 0; i < BOARD_ROWS; i++) {
+            if (!checkIsValid(position, startPos + i)) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    private boolean validateColumn(final int position) {
+        int startPos = position % BOARD_ROWS;
+        for (int i = 0; i < BOARD_ROWS; i++) {
+            if (!checkIsValid(position, startPos + (i * BOARD_ROWS))) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    private boolean validateGroup(final int position) {
+        int row = position / BOARD_ROWS;
+        int column = position % BOARD_ROWS;
+
+        int group = (row / GROUP_ROWS) * GROUP_ROWS + (column / GROUP_ROWS);
+        int startRow = (group / GROUP_ROWS) * GROUP_ROWS;
+        int startColumn = (group % GROUP_ROWS) * GROUP_ROWS;
+
+        for (int i = 0; i < GROUP_ROWS; i++) {
+            for (int j = 0; j < GROUP_ROWS; j++) {
+                if (!checkIsValid(position, (startRow + i) * 9 + startColumn + j)) {
+                    return false;
+                }
+            }
+        }
+        return true;
+    }
+
+    private boolean checkIsValid(final int position1, final int position2) {
+        return (position1 == position2) || (board[position1] != board[position2]);
+    }
+
+    private static void shuffleGrid(final Random random, final int[] board) {
+        switch (random.nextInt(5)) {
+            case 0:
+                shuffleRow(random, board);
+                break;
+            case 1:
+                shuffleRowGroup(random, board);
+                break;
+            case 2:
+                shuffleColumn(random, board);
+                break;
+            case 3:
+                shuffleColumnGroup(random, board);
+                break;
+            case 4:
+                transpose(board);
+                break;
+            default:
+                break;
+        }
+    }
+
+    private static void shuffleRow(final Random random, final int[] board) {
+        // Swap two random rows. Note that it's only safe to shuffle rows within each group of 3
+        // i.e. row 1 can only be shuffled with either row 2 or 3.
+        int group = random.nextInt(GROUP_ROWS);
+        int row1 = random.nextInt(GROUP_ROWS);
+        int row2 = randomOther(random, row1, GROUP_ROWS);
+
+        int realRow1 = group * GROUP_ROWS + row1;
+        int realRow2 = group * GROUP_ROWS + row2;
+
+        Range range1 = new Range(realRow1 * BOARD_ROWS, BOARD_ROWS);
+        Range range2 = new Range(realRow2 * BOARD_ROWS, BOARD_ROWS);
+        swap(board, range1, range2);
+    }
+
+    private static void shuffleRowGroup(final Random random, final int[] board) {
+        // Swap two groups of rows. i.e. swap rows 123 with rows 789
+        int group1 = random.nextInt(GROUP_ROWS);
+        int group2 = randomOther(random, group1, GROUP_ROWS);
+
+        Range range1 = new Range(group1 * GROUP_ROWS * BOARD_ROWS, GROUP_ROWS * BOARD_ROWS);
+        Range range2 = new Range(group2 * GROUP_ROWS * BOARD_ROWS, GROUP_ROWS * BOARD_ROWS);
+        swap(board, range1, range2);
+    }
+
+    private static void shuffleColumn(final Random random, final int[] board) {
+        // Swap two random columns. Note that just like with rows, it's only safe to shuffle columns
+        // within each group of 3
+        int group = random.nextInt(GROUP_ROWS);
+        int col1 = random.nextInt(GROUP_ROWS);
+        int col2 = randomOther(random, col1, GROUP_ROWS);
+
+        int realCol1 = group * GROUP_ROWS + col1;
+        int realCol2 = group * GROUP_ROWS + col2;
+
+        swapColumn(board, realCol1, realCol2);
+    }
+
+    private static void shuffleColumnGroup(final Random random, final int[] board) {
+        // Swap two groups of columns. i.e. swap columns 123 with columns 789
+        int group1 = random.nextInt(GROUP_ROWS);
+        int group2 = randomOther(random, group1, GROUP_ROWS);
+
+        for (int i = 0; i < GROUP_ROWS; i++) {
+            int realCol1 = group1 * GROUP_ROWS + i;
+            int realCol2 = group2 * GROUP_ROWS + i;
+            swapColumn(board, realCol1, realCol2);
+        }
+    }
+
+    private static void transpose(final int[] board) {
+        for (int row = 0; row < BOARD_ROWS; ++row) {
+            for (int col = row + 1; col < BOARD_ROWS; ++col) {
+                int index1 = (row * BOARD_ROWS) + col;
+                int index2 = (col * BOARD_ROWS) + row;
+                swapPosition(board, index1, index2);
+            }
+        }
+    }
+
+    private static int randomOther(final Random random, final int currentValue, final int space) {
+        return ((currentValue % space) + (random.nextInt(space - 1) + 1)) % space;
+    }
+
+    private static void swap(final int[] board, final Range range1, final Range range2) {
+        if (range1.getSize() != range2.getSize()) {
+            return;
+        }
+        int[] range2Copy = Arrays.copyOfRange(board, range2.getStart(), range2.getEnd());
+        System.arraycopy(board, range1.getStart(), board, range2.getStart(), range1.getSize());
+        System.arraycopy(range2Copy, 0, board, range1.getStart(), range1.getSize());
+    }
+
+    private static void swapColumn(final int[] board, final int col1, final int col2) {
+        for (int i = 0; i < BOARD_ROWS; i++) {
+            swapPosition(board, (i * BOARD_ROWS) + col1, (i * BOARD_ROWS) + col2);
+        }
+    }
+
+    private static void swapPosition(final int[] board, final int pos1, final int pos2) {
+        int val2 = board[pos2];
+        board[pos2] = board[pos1];
+        board[pos1] = val2;
+    }
+
+    private static void removeOpenPosition(
+            final Random random,
+            final int[] board,
+            final List<Integer> remainingPositions) {
+        int index = random.nextInt(remainingPositions.size());
+        int position = remainingPositions.remove(index);
+        board[position] = EMPTY_PIECE;
+    }
+
+    private static class Range {
+        private int start;
+        private int size;
+        private int end;
+
+        public Range(final int start, final int size) {
+            this.start = start;
+            this.size = size;
+            this.end = start + size;
+        }
+
+        public int getStart() {
+            return start;
+        }
+
+        public int getSize() {
+            return size;
+        }
+
+        public int getEnd() {
+            return end;
+        }
+    }
+}
diff --git a/samples/Iconicus/src/com/example/iconicus/GameController.java b/samples/Iconicus/src/com/example/iconicus/GameController.java
new file mode 100644
index 000000000..033d9ad26
--- /dev/null
+++ b/samples/Iconicus/src/com/example/iconicus/GameController.java
@@ -0,0 +1,241 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.iconicus;
+
+import android.content.Context;
+import android.content.Intent;
+import android.graphics.drawable.Drawable;
+import android.net.Uri;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.BaseAdapter;
+import android.widget.GridView;
+import android.widget.ImageView;
+import android.widget.Toast;
+
+import bolts.AppLinks;
+
+public class GameController {
+
+    private static final int NUM_OPEN_POSITIONS = 50;
+
+    private static boolean iconsInitialized = false;
+    private static Drawable[] validIcons = new Drawable[GameBoard.BOARD_ROWS + 1];
+
+    private Context context;
+    private GameBoard board;
+    private GridView boardView;
+    private GridView selectionView;
+    private BoardAdapter boardAdapter;
+    private SelectionAdapter selectionAdapter;
+    private int selectedNum;
+    private View selectedView;
+
+
+    public GameController(final Context context, final Intent intent) {
+        this.context = context;
+        initializeIcons();
+        board = handleDeepLink(context, intent);
+        if (board == null) {
+            board = GameBoard.generateBoard(NUM_OPEN_POSITIONS);
+        }
+        resetSelection();
+    }
+
+    public void setBoardView(final GridView boardView) {
+        this.boardView = boardView;
+        boardAdapter = new BoardAdapter();
+        this.boardView.setAdapter(boardAdapter);
+        this.boardView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            public void onItemClick(AdapterView<?> parent, View v,
+                                    int position, long id) {
+                if (selectedNum >= 0) {
+                    if (board.isLocked(position)) {
+                        Toast.makeText(context.getApplicationContext(),
+                                R.string.position_locked,
+                                Toast.LENGTH_SHORT).show();
+                    } else {
+                        board.setValue(selectedNum, position);
+                        dataSetChanged();
+                    }
+                } else {
+                    Toast.makeText(context.getApplicationContext(),
+                            R.string.nothing_selected,
+                            Toast.LENGTH_SHORT).show();
+                }
+            }
+        });
+
+    }
+
+    public void setSelectionView(final GridView selectionView) {
+        this.selectionView = selectionView;
+        selectionAdapter = new SelectionAdapter();
+        this.selectionView.setAdapter(selectionAdapter);
+        this.selectionView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            public void onItemClick(AdapterView<?> parent, View v,
+                                    int position, long id) {
+                if (selectedNum != position) {
+                    resetSelection();
+                    selectedNum = position;
+                    v.setBackgroundResource(R.drawable.selected_icon_background);
+                    selectedView = v;
+                } else {
+                    resetSelection();
+                }
+            }
+        });
+    }
+
+    public void newGame() {
+        board = GameBoard.generateBoard(NUM_OPEN_POSITIONS);
+        dataSetChanged();
+    }
+
+    public void clearBoard() {
+        board.clearBoard();
+        dataSetChanged();
+    }
+
+    public Uri getShareUri() {
+        return board.toUri();
+    }
+
+    private synchronized void initializeIcons() {
+        if (iconsInitialized) {
+            return;
+        }
+        validIcons[0] = null;
+        validIcons[1] = context.getResources().getDrawable(R.drawable.tile1);
+        validIcons[2] = context.getResources().getDrawable(R.drawable.tile2);
+        validIcons[3] = context.getResources().getDrawable(R.drawable.tile3);
+        validIcons[4] = context.getResources().getDrawable(R.drawable.tile4);
+        validIcons[5] = context.getResources().getDrawable(R.drawable.tile5);
+        validIcons[6] = context.getResources().getDrawable(R.drawable.tile6);
+        validIcons[7] = context.getResources().getDrawable(R.drawable.tile7);
+        validIcons[8] = context.getResources().getDrawable(R.drawable.tile8);
+        validIcons[9] = context.getResources().getDrawable(R.drawable.tile9);
+        iconsInitialized = true;
+    }
+
+    private GameBoard handleDeepLink(final Context context, final Intent intent) {
+        Uri targetUri = AppLinks.getTargetUrlFromInboundIntent(context, intent);
+        if (targetUri == null) {
+            targetUri = intent.getData();
+        }
+
+        if (targetUri == null) {
+            return null;
+        }
+
+        return GameBoard.fromUri(targetUri);
+    }
+
+    private void dataSetChanged() {
+        if (boardAdapter != null) {
+            boardAdapter.notifyDataSetChanged();
+        }
+    }
+
+    private void resetSelection() {
+        if (selectedView != null) {
+            selectedView.setBackgroundResource(R.drawable.choice_icon_background);
+        }
+        selectedNum = GameBoard.EMPTY_PIECE;
+        selectedView = null;
+    }
+
+    private void updateCell(final ImageView imageView, final int position) {
+        imageView.setImageDrawable(validIcons[board.getValue(position)]);
+
+        if (board.isLocked(position)) {
+            imageView.setBackgroundResource(R.drawable.locked_icon_background);
+        } else if (board.isEmpty(position)) {
+            imageView.setBackgroundResource(R.drawable.default_icon_background);
+        } else if (board.isValid(position)) {
+            imageView.setBackgroundResource(R.drawable.valid_icon_background);
+        } else {
+            imageView.setBackgroundResource(R.drawable.invalid_icon_background);
+        }
+    }
+
+    private class SelectionAdapter extends BaseAdapter {
+
+        @Override
+        public int getCount() {
+            return GameBoard.BOARD_ROWS + 1;
+        }
+
+        @Override
+        public Object getItem(int position) {
+            return validIcons[position];
+        }
+
+        @Override
+        public long getItemId(int position) {
+            return position;
+        }
+
+        @Override
+        public View getView(int position, View convertView, ViewGroup parent) {
+            if (convertView != null) {
+                return convertView;
+            }
+
+            ImageView view = (ImageView) View.inflate(context, R.layout.choice_cell, null);
+            view.setImageDrawable(validIcons[position]);
+            return view;
+        }
+    }
+
+    private class BoardAdapter extends BaseAdapter {
+
+        @Override
+        public int getCount() {
+            return GameBoard.BOARD_SIZE;
+        }
+
+        @Override
+        public Object getItem(final int position) {
+            return board.getValue(position);
+        }
+
+        @Override
+        public long getItemId(final int position) {
+            return position;
+        }
+
+        @Override
+        public View getView(final int position, final View convertView, final ViewGroup parent) {
+            if (convertView != null) {
+                updateCell((ImageView) convertView, position);
+                return convertView;
+            }
+
+            ImageView view = (ImageView) View.inflate(context, R.layout.grid_cell, null);
+
+            updateCell(view, position);
+
+            return view;
+        }
+    }
+}
diff --git a/samples/Iconicus/src/com/example/iconicus/MainActivity.java b/samples/Iconicus/src/com/example/iconicus/MainActivity.java
new file mode 100644
index 000000000..1a2e6e681
--- /dev/null
+++ b/samples/Iconicus/src/com/example/iconicus/MainActivity.java
@@ -0,0 +1,112 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.iconicus;
+
+import android.app.Activity;
+import android.content.ClipData;
+import android.content.ClipboardManager;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Button;
+import android.widget.GridView;
+import android.widget.Toast;
+
+import com.facebook.FacebookSdk;
+import com.facebook.share.model.ShareLinkContent;
+import com.facebook.share.widget.SendButton;
+import com.facebook.share.widget.ShareButton;
+
+public class MainActivity extends Activity {
+
+    private GridView board;
+    private GridView validNumbers;
+
+    private GameController gameController;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        FacebookSdk.sdkInitialize(this);
+        setContentView(R.layout.activity_main);
+
+        gameController = new GameController(this, getIntent());
+
+        board = (GridView) findViewById(R.id.board);
+
+        validNumbers = (GridView) findViewById(R.id.valid_numbers);
+
+        gameController.setBoardView(board);
+        gameController.setSelectionView(validNumbers);
+
+        Button newGame = (Button) findViewById(R.id.new_board);
+        newGame.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                gameController.newGame();
+            }
+        });
+
+        Button clearBoard = (Button) findViewById(R.id.clear_board);
+        clearBoard.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                gameController.clearBoard();
+            }
+        });
+
+        final ShareButton share = (ShareButton) findViewById(R.id.share_button);
+        share.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                share.setShareContent(getLinkContent());
+            }
+        });
+
+        final SendButton send = (SendButton) findViewById(R.id.send_button);
+        send.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                send.setShareContent(getLinkContent());
+            }
+        });
+
+        Button copy = (Button) findViewById(R.id.copy_button);
+        copy.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                ClipboardManager clipboard = (ClipboardManager) getSystemService(CLIPBOARD_SERVICE);
+                ClipData clip = ClipData.newUri(
+                        getContentResolver(), "Iconicus", gameController.getShareUri());
+                clipboard.setPrimaryClip(clip);
+                Toast.makeText(MainActivity.this, R.string.link_copied, Toast.LENGTH_SHORT).show();
+            }
+        });
+    }
+
+    private ShareLinkContent getLinkContent() {
+        return new ShareLinkContent.Builder()
+                .setContentUrl(gameController.getShareUri())
+                .setContentTitle(getString(R.string.share_title))
+                .setContentDescription(getString(R.string.share_description))
+                .build();
+    }
+
+}
diff --git a/samples/RPSSample/AndroidManifest.xml b/samples/RPSSample/AndroidManifest.xml
index 1abdc0eee..81aaddb3d 100644
--- a/samples/RPSSample/AndroidManifest.xml
+++ b/samples/RPSSample/AndroidManifest.xml
@@ -20,7 +20,7 @@
 -->
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.facebook.samples.rps"
+          package="com.example.rps"
           android:versionCode="1"
           android:versionName="1.0">
     <uses-sdk android:minSdkVersion="9"/>
@@ -30,7 +30,7 @@
                  android:icon="@drawable/icon"
                  android:theme="@android:style/Theme.NoTitleBar"
             >
-        <activity android:name="MainActivity"
+        <activity android:name="com.example.rps.MainActivity"
                   android:label="@string/app_name"
                   android:screenOrientation="portrait"
                   android:windowSoftInputMode="adjustResize">
diff --git a/samples/RPSSample/BUCK b/samples/RPSSample/BUCK
new file mode 100644
index 000000000..f2e6f55ec
--- /dev/null
+++ b/samples/RPSSample/BUCK
@@ -0,0 +1,35 @@
+android_resource(
+  name = 'res',
+  res = 'res',
+  package = 'com.example.rps',
+  deps = [
+    '//facebook:android-sdk',
+  ],
+)
+
+android_library(
+  name = 'lib',
+  srcs = glob(['src/**/*.java']),
+  deps = [
+    ':res',
+    '//facebook:android-sdk',
+    '//libs:android-support-v4',
+  ],
+)
+
+android_binary(
+  name = 'app',
+  manifest = 'AndroidManifest.xml',
+  keystore = '//keystores:debug',
+  package_type = 'debug',
+  deps = [
+    ':lib',
+    '//facebook:android-sdk',
+    '//libs:android-support-v4',
+  ],
+)
+
+project_config(
+  src_target = ':app',
+  src_roots = ['src'],
+)
diff --git a/samples/RPSSample/post_app_objects.sh b/samples/RPSSample/post_app_objects.sh
index ba4533438..37b56b9ea 100755
--- a/samples/RPSSample/post_app_objects.sh
+++ b/samples/RPSSample/post_app_objects.sh
@@ -72,7 +72,7 @@ curl https://graph.facebook.com/app/app_link_hosts -F access_token="$APPID|$APPS
   ]' \
 -F android=' [
     {
-      "package" : "com.facebook.samples.rps",
+      "package" : "com.example.rps",
       "app_name" : "RPS Sample",
     },
   ]' \
@@ -120,7 +120,7 @@ echo "  scissors=$SCISSORS_OBJID"
 # step 6 - write .java file for common objects
 #
 
-MFILE=src/com/facebook/samples/rps/CommonObjects.java
+MFILE=src/com/example/rps/CommonObjects.java
 
 cat > $MFILE << EOF
 /*
@@ -139,7 +139,7 @@ cat > $MFILE << EOF
  * limitations under the License.
  */
 
-package com.facebook.samples.rps;
+package com.example.rps;
 
 public class CommonObjects {
     public static final String BUILT_IN_OPEN_GRAPH_OBJECTS[] = {
diff --git a/samples/RPSSample/res/layout/main.xml b/samples/RPSSample/res/layout/main.xml
index 980d6217a..f982323d4 100644
--- a/samples/RPSSample/res/layout/main.xml
+++ b/samples/RPSSample/res/layout/main.xml
@@ -25,15 +25,15 @@
         android:layout_width="match_parent"
         android:layout_height="match_parent">
 
-    <fragment android:name="com.facebook.samples.rps.RpsFragment"
+    <fragment android:name="com.example.rps.RpsFragment"
               android:id="@+id/rps_fragment"
               android:layout_width="match_parent"
               android:layout_height="match_parent" />
-    <fragment android:name="com.facebook.samples.rps.usersettings.UserSettingsFragment"
+    <fragment android:name="com.example.rps.usersettings.UserSettingsFragment"
               android:id="@+id/settings_fragment"
               android:layout_width="match_parent"
               android:layout_height="match_parent" />
-    <fragment android:name="com.facebook.samples.rps.ContentFragment"
+    <fragment android:name="com.example.rps.ContentFragment"
               android:id="@+id/content_fragment"
               android:layout_width="match_parent"
               android:layout_height="match_parent" />
diff --git a/samples/RPSSample/src/com/facebook/samples/rps/CommonObjects.java b/samples/RPSSample/src/com/example/rps/CommonObjects.java
similarity index 97%
rename from samples/RPSSample/src/com/facebook/samples/rps/CommonObjects.java
rename to samples/RPSSample/src/com/example/rps/CommonObjects.java
index d1f1fe965..d78770cd8 100644
--- a/samples/RPSSample/src/com/facebook/samples/rps/CommonObjects.java
+++ b/samples/RPSSample/src/com/example/rps/CommonObjects.java
@@ -19,7 +19,7 @@
  */
 
 
-package com.facebook.samples.rps;
+package com.example.rps;
 
 public class CommonObjects {
     public static final String BUILT_IN_OPEN_GRAPH_OBJECTS[] = {
diff --git a/samples/RPSSample/src/com/facebook/samples/rps/ContentFragment.java b/samples/RPSSample/src/com/example/rps/ContentFragment.java
similarity index 98%
rename from samples/RPSSample/src/com/facebook/samples/rps/ContentFragment.java
rename to samples/RPSSample/src/com/example/rps/ContentFragment.java
index d923efe82..9dac9d898 100644
--- a/samples/RPSSample/src/com/facebook/samples/rps/ContentFragment.java
+++ b/samples/RPSSample/src/com/example/rps/ContentFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.rps;
+package com.example.rps;
 
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
diff --git a/samples/RPSSample/src/com/facebook/samples/rps/MainActivity.java b/samples/RPSSample/src/com/example/rps/MainActivity.java
similarity index 99%
rename from samples/RPSSample/src/com/facebook/samples/rps/MainActivity.java
rename to samples/RPSSample/src/com/example/rps/MainActivity.java
index 50a08fef8..0c63b0e2f 100644
--- a/samples/RPSSample/src/com/facebook/samples/rps/MainActivity.java
+++ b/samples/RPSSample/src/com/example/rps/MainActivity.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.rps;
+package com.example.rps;
 
 import android.content.Intent;
 import android.net.Uri;
@@ -37,7 +37,7 @@
 import com.facebook.share.model.GameRequestContent;
 import com.facebook.share.widget.GameRequestDialog;
 
-import static com.facebook.samples.rps.RpsGameUtils.INVALID_CHOICE;
+import static com.example.rps.RpsGameUtils.INVALID_CHOICE;
 
 public class MainActivity extends FragmentActivity {
     private static final String TAG = "MainActivity";
diff --git a/samples/RPSSample/src/com/facebook/samples/rps/OpenGraphConsts.java b/samples/RPSSample/src/com/example/rps/OpenGraphConsts.java
similarity index 97%
rename from samples/RPSSample/src/com/facebook/samples/rps/OpenGraphConsts.java
rename to samples/RPSSample/src/com/example/rps/OpenGraphConsts.java
index ac8914151..ba30e5ce3 100644
--- a/samples/RPSSample/src/com/facebook/samples/rps/OpenGraphConsts.java
+++ b/samples/RPSSample/src/com/example/rps/OpenGraphConsts.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.rps;
+package com.example.rps;
 
 public class OpenGraphConsts {
     public static final String THROW_ACTION_TYPE = "fb_sample_rps:throw";
diff --git a/samples/RPSSample/src/com/facebook/samples/rps/RpsFragment.java b/samples/RPSSample/src/com/example/rps/RpsFragment.java
similarity index 99%
rename from samples/RPSSample/src/com/facebook/samples/rps/RpsFragment.java
rename to samples/RPSSample/src/com/example/rps/RpsFragment.java
index ad903d6e8..7fe141832 100644
--- a/samples/RPSSample/src/com/facebook/samples/rps/RpsFragment.java
+++ b/samples/RPSSample/src/com/example/rps/RpsFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.rps;
+package com.example.rps;
 
 import android.app.AlertDialog;
 import android.content.DialogInterface;
@@ -58,7 +58,7 @@
 import java.util.Arrays;
 import java.util.Random;
 
-import static com.facebook.samples.rps.RpsGameUtils.*;
+import static com.example.rps.RpsGameUtils.*;
 
 public class RpsFragment extends Fragment {
 
diff --git a/samples/RPSSample/src/com/facebook/samples/rps/RpsGameUtils.java b/samples/RPSSample/src/com/example/rps/RpsGameUtils.java
similarity index 98%
rename from samples/RPSSample/src/com/facebook/samples/rps/RpsGameUtils.java
rename to samples/RPSSample/src/com/example/rps/RpsGameUtils.java
index b7f07f6c8..db87462a1 100644
--- a/samples/RPSSample/src/com/facebook/samples/rps/RpsGameUtils.java
+++ b/samples/RPSSample/src/com/example/rps/RpsGameUtils.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.rps;
+package com.example.rps;
 
 public class RpsGameUtils {
     public enum RpsState {
diff --git a/samples/RPSSample/src/com/facebook/samples/rps/usersettings/UserSettingsFragment.java b/samples/RPSSample/src/com/example/rps/usersettings/UserSettingsFragment.java
similarity index 99%
rename from samples/RPSSample/src/com/facebook/samples/rps/usersettings/UserSettingsFragment.java
rename to samples/RPSSample/src/com/example/rps/usersettings/UserSettingsFragment.java
index a15c6181b..4b1bab031 100644
--- a/samples/RPSSample/src/com/facebook/samples/rps/usersettings/UserSettingsFragment.java
+++ b/samples/RPSSample/src/com/example/rps/usersettings/UserSettingsFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.rps.usersettings;
+package com.example.rps.usersettings;
 
 import android.content.Intent;
 import android.graphics.Bitmap;
@@ -41,7 +41,7 @@
 import com.facebook.internal.ImageDownloader;
 import com.facebook.internal.ImageRequest;
 import com.facebook.internal.ImageResponse;
-import com.facebook.samples.rps.R;
+import com.example.rps.R;
 import com.facebook.login.widget.LoginButton;
 
 import org.json.JSONObject;
diff --git a/samples/Scrumptious/AndroidManifest.xml b/samples/Scrumptious/AndroidManifest.xml
index 9d014f8e2..aff593587 100644
--- a/samples/Scrumptious/AndroidManifest.xml
+++ b/samples/Scrumptious/AndroidManifest.xml
@@ -20,38 +20,54 @@
 -->
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.facebook.scrumptious"
-          android:versionCode="1"
-          android:versionName="1.0">
-    <uses-sdk android:minSdkVersion="9"/>
-    <uses-permission android:name="android.permission.INTERNET"/>
-    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
-    <uses-permission android:name="android.permission.CAMERA"/>
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
-    <uses-feature android:name="android.hardware.camera"/>
-    <uses-feature android:name="android.hardware.camera.autofocus"/>
-    <application android:label="@string/app_name"
-                 android:icon="@drawable/add_food"
-                 android:name=".ScrumptiousApplication">
-        <activity android:name="MainActivity"
-                  android:label="@string/app_name"
-                  android:theme="@style/Theme.Scrumptious"
-                  android:windowSoftInputMode="adjustResize">
+    package="com.example.scrumptious"
+    android:versionCode="1"
+    android:versionName="1.0">
+
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
+    <uses-permission android:name="android.permission.CAMERA" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+
+    <uses-feature android:name="android.hardware.camera" />
+    <uses-feature android:name="android.hardware.camera.autofocus" />
+
+    <application
+        android:name="com.example.scrumptious.ScrumptiousApplication"
+        android:icon="@drawable/add_food"
+        android:label="@string/app_name">
+        <activity
+            android:name="com.example.scrumptious.MainActivity"
+            android:label="@string/app_name"
+            android:theme="@style/Theme.Scrumptious"
+            android:windowSoftInputMode="adjustResize">
             <intent-filter>
-                <action android:name="android.intent.action.MAIN"/>
-                <category android:name="android.intent.category.LAUNCHER"/>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
-        <activity android:name="PickerActivity"
-                  android:label="@string/app_name" />
-        <activity android:name="com.facebook.FacebookActivity"
-                  android:theme="@android:style/Theme.Translucent.NoTitleBar"
-                  android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation"
-                  android:label="@string/app_name" />
-        <meta-data android:name="com.facebook.sdk.ApplicationId" android:value="@string/app_id"/>
-        <meta-data android:name="com.facebook.sdk.ApplicationName" android:value="@string/app_name" />
-        <provider android:authorities="com.facebook.app.FacebookContentProvider233936543368280"
-                  android:name="com.facebook.FacebookContentProvider"
-                  android:exported="true" />
+        <activity
+            android:name="com.example.scrumptious.PickerActivity"
+            android:label="@string/app_name" />
+        <activity
+            android:name="com.facebook.FacebookActivity"
+            android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation"
+            android:label="@string/app_name"
+            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
+
+        <meta-data
+            android:name="com.facebook.sdk.ApplicationId"
+            android:value="@string/app_id" />
+        <meta-data
+            android:name="com.facebook.sdk.ApplicationName"
+            android:value="@string/app_name" />
+        <meta-data
+            android:name="com.facebook.sdk.WebDialogTheme"
+            android:resource="@android:style/Theme.Translucent.NoTitleBar" />
+
+        <provider
+            android:name="com.facebook.FacebookContentProvider"
+            android:authorities="com.facebook.app.FacebookContentProvider233936543368280"
+            android:exported="true" />
     </application>
 </manifest> 
diff --git a/samples/Scrumptious/BUCK b/samples/Scrumptious/BUCK
new file mode 100644
index 000000000..61f0ab4c0
--- /dev/null
+++ b/samples/Scrumptious/BUCK
@@ -0,0 +1,35 @@
+android_resource(
+  name = 'res',
+  res = 'res',
+  package = 'com.example.scrumptious',
+  deps = [
+    '//facebook:android-sdk',
+  ],
+)
+
+android_library(
+  name = 'lib',
+  srcs = glob(['src/**/*.java']),
+  deps = [
+    ':res',
+    '//facebook:android-sdk',
+    '//libs:android-support-v4',
+  ],
+)
+
+android_binary(
+  name = 'app',
+  manifest = 'AndroidManifest.xml',
+  keystore = '//keystores:debug',
+  package_type = 'debug',
+  deps = [
+    ':lib',
+    '//facebook:android-sdk',
+    '//libs:android-support-v4',
+  ],
+)
+
+project_config(
+  src_target = ':app',
+  src_roots = ['src'],
+)
diff --git a/samples/Scrumptious/res/layout-land/selection.xml b/samples/Scrumptious/res/layout-land/selection.xml
index 447bc9b6f..7309b4130 100644
--- a/samples/Scrumptious/res/layout-land/selection.xml
+++ b/samples/Scrumptious/res/layout-land/selection.xml
@@ -36,7 +36,7 @@
             android:layout_height="wrap_content"
             android:orientation="horizontal">
 
-            <com.facebook.scrumptious.FullListView
+            <com.example.scrumptious.FullListView
                 android:id="@+id/selection_list"
                 android:layout_width="fill_parent"
                 android:layout_height="wrap_content"
diff --git a/samples/Scrumptious/res/layout/main.xml b/samples/Scrumptious/res/layout/main.xml
index 511aacf58..61fbe89dd 100644
--- a/samples/Scrumptious/res/layout/main.xml
+++ b/samples/Scrumptious/res/layout/main.xml
@@ -25,15 +25,15 @@
         android:layout_width="fill_parent"
         android:layout_height="fill_parent">
 
-    <fragment android:name="com.facebook.scrumptious.SelectionFragment"
+    <fragment android:name="com.example.scrumptious.SelectionFragment"
               android:id="@+id/selectionFragment"
               android:layout_width="match_parent"
               android:layout_height="match_parent" />
-    <fragment android:name="com.facebook.scrumptious.SplashFragment"
+    <fragment android:name="com.example.scrumptious.SplashFragment"
               android:id="@+id/splashFragment"
               android:layout_width="match_parent"
               android:layout_height="match_parent" />
-    <fragment android:name="com.facebook.scrumptious.usersettings.UserSettingsFragment"
+    <fragment android:name="com.example.scrumptious.usersettings.UserSettingsFragment"
               android:id="@+id/userSettingsFragment"
               android:layout_width="match_parent"
               android:layout_height="match_parent" />
diff --git a/samples/Scrumptious/res/layout/selection.xml b/samples/Scrumptious/res/layout/selection.xml
index 57333d479..ed5b2606b 100644
--- a/samples/Scrumptious/res/layout/selection.xml
+++ b/samples/Scrumptious/res/layout/selection.xml
@@ -36,7 +36,7 @@
             android:layout_height="wrap_content"
             android:orientation="vertical">
 
-            <com.facebook.scrumptious.FullListView
+            <com.example.scrumptious.FullListView
                 android:id="@+id/selection_list"
                 android:layout_width="fill_parent"
                 android:layout_height="wrap_content"
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/BaseListElement.java b/samples/Scrumptious/src/com/example/scrumptious/BaseListElement.java
similarity index 98%
rename from samples/Scrumptious/src/com/facebook/scrumptious/BaseListElement.java
rename to samples/Scrumptious/src/com/example/scrumptious/BaseListElement.java
index bc7b60612..5cd8cff35 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/BaseListElement.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/BaseListElement.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious;
+package com.example.scrumptious;
 
 import android.content.Intent;
 import android.graphics.drawable.Drawable;
@@ -28,8 +28,6 @@
 
 import com.facebook.share.model.ShareOpenGraphAction;
 
-import org.json.JSONObject;
-
 /**
  * Base class for a list element in the Scrumptious main display, consisting of an
  * icon to the left, and a two line display to the right.
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/FullListView.java b/samples/Scrumptious/src/com/example/scrumptious/FullListView.java
similarity index 96%
rename from samples/Scrumptious/src/com/facebook/scrumptious/FullListView.java
rename to samples/Scrumptious/src/com/example/scrumptious/FullListView.java
index 354309716..0d6f84c80 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/FullListView.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/FullListView.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious;
+package com.example.scrumptious;
 
 import android.content.Context;
 import android.util.AttributeSet;
@@ -50,7 +50,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         int width = getMeasuredWidth();
         int height = 0;
         ListAdapter adapter = getAdapter();
-        int count = adapter.getCount();
+        int count = adapter != null ? adapter.getCount() : 0;
         for (int i = 0; i < count; i++) {
             View childView = adapter.getView(i, null, this);
             childView.measure(MeasureSpec.makeMeasureSpec(0, MeasureSpec.UNSPECIFIED),
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/MainActivity.java b/samples/Scrumptious/src/com/example/scrumptious/MainActivity.java
similarity index 99%
rename from samples/Scrumptious/src/com/facebook/scrumptious/MainActivity.java
rename to samples/Scrumptious/src/com/example/scrumptious/MainActivity.java
index 973b0a65e..c12fe0342 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/MainActivity.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/MainActivity.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious;
+package com.example.scrumptious;
 
 import android.content.Intent;
 import android.os.Bundle;
@@ -29,7 +29,6 @@
 
 import com.facebook.AccessToken;
 import com.facebook.AccessTokenTracker;
-import com.facebook.FacebookSdk;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.CallbackManager;
 
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/PickerActivity.java b/samples/Scrumptious/src/com/example/scrumptious/PickerActivity.java
similarity index 97%
rename from samples/Scrumptious/src/com/facebook/scrumptious/PickerActivity.java
rename to samples/Scrumptious/src/com/example/scrumptious/PickerActivity.java
index b03592757..f4bfb1fec 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/PickerActivity.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/PickerActivity.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious;
+package com.example.scrumptious;
 
 import android.app.AlertDialog;
 import android.content.Context;
@@ -28,7 +28,6 @@
 import android.location.LocationListener;
 import android.location.LocationManager;
 import android.net.Uri;
-import android.os.Build;
 import android.os.Bundle;
 import android.os.Looper;
 import android.support.v4.app.Fragment;
@@ -36,9 +35,9 @@
 import android.support.v4.app.FragmentManager;
 import android.widget.Toast;
 import com.facebook.FacebookException;
-import com.facebook.scrumptious.picker.FriendPickerFragment;
-import com.facebook.scrumptious.picker.PickerFragment;
-import com.facebook.scrumptious.picker.PlacePickerFragment;
+import com.example.scrumptious.picker.FriendPickerFragment;
+import com.example.scrumptious.picker.PickerFragment;
+import com.example.scrumptious.picker.PlacePickerFragment;
 
 /**
  * The PickerActivity enhances the Friend or Place Picker by adding a title
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/ScrumptiousApplication.java b/samples/Scrumptious/src/com/example/scrumptious/ScrumptiousApplication.java
similarity index 98%
rename from samples/Scrumptious/src/com/facebook/scrumptious/ScrumptiousApplication.java
rename to samples/Scrumptious/src/com/example/scrumptious/ScrumptiousApplication.java
index 18d0bfcab..7027b4834 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/ScrumptiousApplication.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/ScrumptiousApplication.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious;
+package com.example.scrumptious;
 
 import android.app.Application;
 
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/SelectionFragment.java b/samples/Scrumptious/src/com/example/scrumptious/SelectionFragment.java
similarity index 99%
rename from samples/Scrumptious/src/com/facebook/scrumptious/SelectionFragment.java
rename to samples/Scrumptious/src/com/example/scrumptious/SelectionFragment.java
index a264fcbdf..93d167c7a 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/SelectionFragment.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/SelectionFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious;
+package com.example.scrumptious;
 
 import android.app.Activity;
 import android.app.AlertDialog;
@@ -711,12 +711,11 @@ protected void onActivityResult(Intent data) {
         @Override
         protected void populateOpenGraphAction(ShareOpenGraphAction.Builder actionBuilder) {
             if (selectedUsers != null && !selectedUsers.isEmpty()) {
-                String tags = "";
+                ArrayList<String> tags = new ArrayList<>();
                 for (JSONObject user : selectedUsers) {
-                    tags += "," + user.optString("id");
+                    tags.add(user.optString("id"));
                 }
-                tags = tags.substring(1);
-                actionBuilder.putString("tags", tags);
+                actionBuilder.putStringArrayList("tags", tags);
             }
         }
 
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/SplashFragment.java b/samples/Scrumptious/src/com/example/scrumptious/SplashFragment.java
similarity index 99%
rename from samples/Scrumptious/src/com/facebook/scrumptious/SplashFragment.java
rename to samples/Scrumptious/src/com/example/scrumptious/SplashFragment.java
index 839bcaa89..0663905c7 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/SplashFragment.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/SplashFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious;
+package com.example.scrumptious;
 
 import android.content.Intent;
 import android.os.Bundle;
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/picker/FriendPickerFragment.java b/samples/Scrumptious/src/com/example/scrumptious/picker/FriendPickerFragment.java
similarity index 96%
rename from samples/Scrumptious/src/com/facebook/scrumptious/picker/FriendPickerFragment.java
rename to samples/Scrumptious/src/com/example/scrumptious/picker/FriendPickerFragment.java
index 4bba11572..bc47b6e3a 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/picker/FriendPickerFragment.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/picker/FriendPickerFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious.picker;
+package com.example.scrumptious.picker;
 
 import android.app.Activity;
 import android.content.res.TypedArray;
@@ -30,7 +30,7 @@
 import com.facebook.GraphRequest;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.FacebookException;
-import com.facebook.scrumptious.R;
+import com.example.scrumptious.R;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.Validate;
 
@@ -47,17 +47,17 @@
      * The key for a String parameter in the fragment's Intent bundle to indicate what user's
      * friends should be shown. The default is to display the currently authenticated user's friends.
      */
-    public static final String USER_ID_BUNDLE_KEY = "com.facebook.scrumptious.widget.FriendPickerFragment.UserId";
+    public static final String USER_ID_BUNDLE_KEY = "com.example.scrumptious.widget.FriendPickerFragment.UserId";
     /**
      * The key for a boolean parameter in the fragment's Intent bundle to indicate whether the
      * picker should allow more than one friend to be selected or not.
      */
-    public static final String MULTI_SELECT_BUNDLE_KEY = "com.facebook.scrumptious.widget.FriendPickerFragment.MultiSelect";
+    public static final String MULTI_SELECT_BUNDLE_KEY = "com.example.scrumptious.widget.FriendPickerFragment.MultiSelect";
     /**
      * The key for a String parameter in the fragment's Intent bundle to indicate the type of friend picker to use.
      * This value is case sensitive, and must match the enum @{link FriendPickerType}
      */
-    public static final String FRIEND_PICKER_TYPE_KEY = "com.facebook.scrumptious.widget.FriendPickerFragment.FriendPickerType";
+    public static final String FRIEND_PICKER_TYPE_KEY = "com.example.scrumptious.widget.FriendPickerFragment.FriendPickerType";
 
     public enum FriendPickerType {
         FRIENDS("/friends"),
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectAdapter.java b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectAdapter.java
similarity index 99%
rename from samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectAdapter.java
rename to samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectAdapter.java
index d79ce65e9..235b4b6b6 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectAdapter.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectAdapter.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious.picker;
+package com.example.scrumptious.picker;
 
 import android.content.Context;
 import android.graphics.Bitmap;
@@ -29,7 +29,7 @@
 import android.view.ViewStub;
 import android.widget.*;
 import com.facebook.FacebookException;
-import com.facebook.scrumptious.R;
+import com.example.scrumptious.R;
 import com.facebook.internal.ImageDownloader;
 import com.facebook.internal.ImageRequest;
 import com.facebook.internal.ImageResponse;
@@ -37,8 +37,6 @@
 
 import org.json.JSONObject;
 
-import java.net.URI;
-import java.net.URISyntaxException;
 import java.text.Collator;
 import java.util.*;
 
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectCursor.java b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectCursor.java
similarity index 98%
rename from samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectCursor.java
rename to samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectCursor.java
index 2ec4a73d1..4a8ee404d 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectCursor.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectCursor.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious.picker;
+package com.example.scrumptious.picker;
 
 import android.database.CursorIndexOutOfBoundsException;
 import org.json.JSONArray;
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectPagingLoader.java b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectPagingLoader.java
similarity index 99%
rename from samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectPagingLoader.java
rename to samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectPagingLoader.java
index 10640a257..ce12bba19 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectPagingLoader.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectPagingLoader.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious.picker;
+package com.example.scrumptious.picker;
 
 import android.content.Context;
 import android.support.v4.content.Loader;
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/picker/PickerFragment.java b/samples/Scrumptious/src/com/example/scrumptious/picker/PickerFragment.java
similarity index 98%
rename from samples/Scrumptious/src/com/facebook/scrumptious/picker/PickerFragment.java
rename to samples/Scrumptious/src/com/example/scrumptious/picker/PickerFragment.java
index 5214b5e92..7f1f3e7ae 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/picker/PickerFragment.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/picker/PickerFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious.picker;
+package com.example.scrumptious.picker;
 
 import android.app.Activity;
 import android.content.Context;
@@ -41,7 +41,7 @@
 import com.facebook.AccessTokenTracker;
 import com.facebook.FacebookException;
 import com.facebook.GraphRequest;
-import com.facebook.scrumptious.R;
+import com.example.scrumptious.R;
 
 import org.json.JSONObject;
 
@@ -62,27 +62,27 @@
      * The key for a boolean parameter in the fragment's Intent bundle to indicate whether the
      * picker should show pictures (if available) for the graph objects.
      */
-    public static final String SHOW_PICTURES_BUNDLE_KEY = "com.facebook.scrumptious.widget.PickerFragment.ShowPictures";
+    public static final String SHOW_PICTURES_BUNDLE_KEY = "com.example.scrumptious.widget.PickerFragment.ShowPictures";
     /**
      * The key for a String parameter in the fragment's Intent bundle to indicate which extra fields
      * beyond the default fields should be retrieved for any graph objects in the results.
      */
-    public static final String EXTRA_FIELDS_BUNDLE_KEY = "com.facebook.scrumptious.widget.PickerFragment.ExtraFields";
+    public static final String EXTRA_FIELDS_BUNDLE_KEY = "com.example.scrumptious.widget.PickerFragment.ExtraFields";
     /**
      * The key for a boolean parameter in the fragment's Intent bundle to indicate whether the
      * picker should display a title bar with a Done button.
      */
-    public static final String SHOW_TITLE_BAR_BUNDLE_KEY = "com.facebook.scrumptious.widget.PickerFragment.ShowTitleBar";
+    public static final String SHOW_TITLE_BAR_BUNDLE_KEY = "com.example.scrumptious.widget.PickerFragment.ShowTitleBar";
     /**
      * The key for a String parameter in the fragment's Intent bundle to indicate the text to
      * display in the title bar.
      */
-    public static final String TITLE_TEXT_BUNDLE_KEY = "com.facebook.scrumptious.widget.PickerFragment.TitleText";
+    public static final String TITLE_TEXT_BUNDLE_KEY = "com.example.scrumptious.widget.PickerFragment.TitleText";
     /**
      * The key for a String parameter in the fragment's Intent bundle to indicate the text to
      * display in the Done button.
      */
-    public static final String DONE_BUTTON_TEXT_BUNDLE_KEY = "com.facebook.scrumptious.widget.PickerFragment.DoneButtonText";
+    public static final String DONE_BUTTON_TEXT_BUNDLE_KEY = "com.example.scrumptious.widget.PickerFragment.DoneButtonText";
 
     private static final String SELECTION_BUNDLE_KEY = "com.facebook.android.PickerFragment.Selection";
     private static final String ACTIVITY_CIRCLE_SHOW_KEY = "com.facebook.android.PickerFragment.ActivityCircleShown";
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/picker/PlacePickerFragment.java b/samples/Scrumptious/src/com/example/scrumptious/picker/PlacePickerFragment.java
similarity index 97%
rename from samples/Scrumptious/src/com/facebook/scrumptious/picker/PlacePickerFragment.java
rename to samples/Scrumptious/src/com/example/scrumptious/picker/PlacePickerFragment.java
index 5e196f8a1..ce9188d49 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/picker/PlacePickerFragment.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/picker/PlacePickerFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious.picker;
+package com.example.scrumptious.picker;
 
 import android.app.Activity;
 import android.content.Context;
@@ -38,7 +38,7 @@
 import android.widget.ListView;
 import com.facebook.*;
 import com.facebook.appevents.AppEventsLogger;
-import com.facebook.scrumptious.R;
+import com.example.scrumptious.R;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.Logger;
 import com.facebook.internal.Utility;
@@ -52,27 +52,27 @@
      * The key for an int parameter in the fragment's Intent bundle to indicate the radius in meters around
      * the center point to search. The default is 1000 meters.
      */
-    public static final String RADIUS_IN_METERS_BUNDLE_KEY = "com.facebook.scrumptious.widget.PlacePickerFragment.RadiusInMeters";
+    public static final String RADIUS_IN_METERS_BUNDLE_KEY = "com.example.scrumptious.widget.PlacePickerFragment.RadiusInMeters";
     /**
      * The key for an int parameter in the fragment's Intent bundle to indicate what how many results to
      * return at a time. The default is 100 results.
      */
-    public static final String RESULTS_LIMIT_BUNDLE_KEY = "com.facebook.scrumptious.widget.PlacePickerFragment.ResultsLimit";
+    public static final String RESULTS_LIMIT_BUNDLE_KEY = "com.example.scrumptious.widget.PlacePickerFragment.ResultsLimit";
     /**
      * The key for a String parameter in the fragment's Intent bundle to indicate what search text should
      * be sent to the service. The default is to have no search text.
      */
-    public static final String SEARCH_TEXT_BUNDLE_KEY = "com.facebook.scrumptious.widget.PlacePickerFragment.SearchText";
+    public static final String SEARCH_TEXT_BUNDLE_KEY = "com.example.scrumptious.widget.PlacePickerFragment.SearchText";
     /**
      * The key for a Location parameter in the fragment's Intent bundle to indicate what geographical
      * location should be the center of the search.
      */
-    public static final String LOCATION_BUNDLE_KEY = "com.facebook.scrumptious.widget.PlacePickerFragment.Location";
+    public static final String LOCATION_BUNDLE_KEY = "com.example.scrumptious.widget.PlacePickerFragment.Location";
     /**
      * The key for a boolean parameter in the fragment's Intent bundle to indicate that the fragment
      * should display a search box and automatically update the search text as it changes.
      */
-    public static final String SHOW_SEARCH_BOX_BUNDLE_KEY = "com.facebook.scrumptious.widget.PlacePickerFragment.ShowSearchBox";
+    public static final String SHOW_SEARCH_BOX_BUNDLE_KEY = "com.example.scrumptious.widget.PlacePickerFragment.ShowSearchBox";
 
     /**
      * The default radius around the center point to search.
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/usersettings/UserSettingsFragment.java b/samples/Scrumptious/src/com/example/scrumptious/usersettings/UserSettingsFragment.java
similarity index 99%
rename from samples/Scrumptious/src/com/facebook/scrumptious/usersettings/UserSettingsFragment.java
rename to samples/Scrumptious/src/com/example/scrumptious/usersettings/UserSettingsFragment.java
index 097fbd010..e8d7924e0 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/usersettings/UserSettingsFragment.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/usersettings/UserSettingsFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious.usersettings;
+package com.example.scrumptious.usersettings;
 
 import android.content.Intent;
 import android.graphics.Bitmap;
@@ -41,7 +41,7 @@
 import com.facebook.internal.ImageDownloader;
 import com.facebook.internal.ImageRequest;
 import com.facebook.internal.ImageResponse;
-import com.facebook.scrumptious.R;
+import com.example.scrumptious.R;
 import com.facebook.login.widget.LoginButton;
 
 import org.json.JSONObject;
diff --git a/samples/SwitchUserSample/AndroidManifest.xml b/samples/SwitchUserSample/AndroidManifest.xml
index 4ee5fb18e..7cfc69164 100644
--- a/samples/SwitchUserSample/AndroidManifest.xml
+++ b/samples/SwitchUserSample/AndroidManifest.xml
@@ -19,7 +19,7 @@
     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 -->
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.facebook.samples.switchuser"
+    package="com.example.switchuser"
     android:versionCode="1"
     android:versionName="1.0">
 
@@ -29,7 +29,7 @@
         android:icon="@drawable/icon"
         android:label="@string/app_name">
         <activity
-            android:name=".MainActivity"
+            android:name="com.example.switchuser.MainActivity"
             android:label="@string/app_name"
             android:theme="@style/Theme.AppCompat"
             android:windowSoftInputMode="adjustResize">
diff --git a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/MainActivity.java b/samples/SwitchUserSample/src/com/example/switchuser/MainActivity.java
similarity index 96%
rename from samples/SwitchUserSample/src/com/facebook/samples/switchuser/MainActivity.java
rename to samples/SwitchUserSample/src/com/example/switchuser/MainActivity.java
index f0a5c9134..d7c705266 100644
--- a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/MainActivity.java
+++ b/samples/SwitchUserSample/src/com/example/switchuser/MainActivity.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.switchuser;
+package com.example.switchuser;
 
 import android.os.Bundle;
 import android.support.v4.app.FragmentManager;
@@ -155,12 +155,11 @@ private void showProfile() {
     }
 
     private boolean handleOptionsItemSelected(MenuItem item) {
-        switch (item.getItemId()) {
-            case R.id.menu_item_switch:
-                showSettings();
-                return true;
-            default:
-                return false;
+        if (item.getItemId() == R.id.menu_item_switch) {
+            showSettings();
+            return true;
+        } else {
+            return false;
         }
     }
 }
diff --git a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/ProfileFragment.java b/samples/SwitchUserSample/src/com/example/switchuser/ProfileFragment.java
similarity index 99%
rename from samples/SwitchUserSample/src/com/facebook/samples/switchuser/ProfileFragment.java
rename to samples/SwitchUserSample/src/com/example/switchuser/ProfileFragment.java
index a3b55ba39..cca057952 100644
--- a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/ProfileFragment.java
+++ b/samples/SwitchUserSample/src/com/example/switchuser/ProfileFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.switchuser;
+package com.example.switchuser;
 
 import android.content.Intent;
 import android.os.Bundle;
diff --git a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/SettingsFragment.java b/samples/SwitchUserSample/src/com/example/switchuser/SettingsFragment.java
similarity index 93%
rename from samples/SwitchUserSample/src/com/facebook/samples/switchuser/SettingsFragment.java
rename to samples/SwitchUserSample/src/com/example/switchuser/SettingsFragment.java
index 51299ac9b..84ebb9292 100644
--- a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/SettingsFragment.java
+++ b/samples/SwitchUserSample/src/com/example/switchuser/SettingsFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.switchuser;
+package com.example.switchuser;
 
 import android.content.Context;
 import android.content.Intent;
@@ -138,20 +138,19 @@ public void onListItemClick(ListView l, View view, int position, long id) {
     public boolean onOptionsItemSelected(MenuItem item) {
         Slot slot = slotManager.getSelectedSlot();
 
-        switch (item.getItemId()) {
-            case R.id.menu_item_clear_slot:
-                if (slot.getUserId() != null) {
-                    // Clear out data that this app stored in the cache
-                    // Not calling Session.closeAndClearTokenInformation() because we have
-                    // additional data stored in the cache.
-                    slot.clear();
-                    if (slot == slotManager.getSelectedSlot()) {
-                        slotManager.setCurrentUserSlot(SlotManager.NO_SLOT);
-                    }
-
-                    currentUserChanged();
+        if (item.getItemId() == R.id.menu_item_clear_slot) {
+            if (slot.getUserId() != null) {
+                // Clear out data that this app stored in the cache
+                // Not calling Session.closeAndClearTokenInformation() because we have
+                // additional data stored in the cache.
+                slot.clear();
+                if (slot == slotManager.getSelectedSlot()) {
+                    slotManager.setCurrentUserSlot(SlotManager.NO_SLOT);
                 }
-                return true;
+
+                currentUserChanged();
+            }
+            return true;
         }
 
         return super.onContextItemSelected(item);
@@ -228,8 +227,8 @@ public void restore(Context context, int oldSelectedSlot) {
             slots = new Slot[MAX_SLOTS];
             for (int i = 0; i < MAX_SLOTS; i++) {
                 LoginBehavior loginBehavior = (i == 0) ?
-                        LoginBehavior.SSO_WITH_FALLBACK :
-                        LoginBehavior.SUPPRESS_SSO;
+                        LoginBehavior.NATIVE_WITH_FALLBACK :
+                        LoginBehavior.WEB_ONLY;
                 slots[i] = new Slot(i, loginBehavior);
             }
 
@@ -300,7 +299,7 @@ public View getView(final int position, View convertView, ViewGroup parent) {
             }
 
             Slot slot = getItem(position);
-            if (slot.getLoginBehavior() != LoginBehavior.SUPPRESS_SSO) {
+            if (slot.getLoginBehavior() != LoginBehavior.WEB_ONLY) {
                 convertView.setBackgroundColor(Color.argb(50, 255, 255, 255));
             }
 
diff --git a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/Slot.java b/samples/SwitchUserSample/src/com/example/switchuser/Slot.java
similarity index 98%
rename from samples/SwitchUserSample/src/com/facebook/samples/switchuser/Slot.java
rename to samples/SwitchUserSample/src/com/example/switchuser/Slot.java
index fcf68b68d..2b1d549db 100644
--- a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/Slot.java
+++ b/samples/SwitchUserSample/src/com/example/switchuser/Slot.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.switchuser;
+package com.example.switchuser;
 
 import com.facebook.AccessToken;
 import com.facebook.login.LoginBehavior;
diff --git a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/UserInfo.java b/samples/SwitchUserSample/src/com/example/switchuser/UserInfo.java
similarity index 98%
rename from samples/SwitchUserSample/src/com/facebook/samples/switchuser/UserInfo.java
rename to samples/SwitchUserSample/src/com/example/switchuser/UserInfo.java
index 9f0e74cce..f81aa9949 100644
--- a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/UserInfo.java
+++ b/samples/SwitchUserSample/src/com/example/switchuser/UserInfo.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.switchuser;
+package com.example.switchuser;
 
 import android.os.Parcel;
 import android.os.Parcelable;
diff --git a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/UserInfoCache.java b/samples/SwitchUserSample/src/com/example/switchuser/UserInfoCache.java
similarity index 98%
rename from samples/SwitchUserSample/src/com/facebook/samples/switchuser/UserInfoCache.java
rename to samples/SwitchUserSample/src/com/example/switchuser/UserInfoCache.java
index 7ff45ce19..c65e9fedd 100644
--- a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/UserInfoCache.java
+++ b/samples/SwitchUserSample/src/com/example/switchuser/UserInfoCache.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.switchuser;
+package com.example.switchuser;
 
 import android.content.Context;
 import android.content.SharedPreferences;
diff --git a/scripts/configure_unit_tests.sh b/scripts/configure_unit_tests.sh
index 237cf91b2..1827e028d 100755
--- a/scripts/configure_unit_tests.sh
+++ b/scripts/configure_unit_tests.sh
@@ -1,20 +1,23 @@
 #!/bin/sh
 #
-# Copyright 2010-present Facebook.
+# Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
 #
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-# 
-#    http://www.apache.org/licenses/LICENSE-2.0
-# 
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
+# You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+# copy, modify, and distribute this software in source code or binary form for use
+# in connection with the web services and APIs provided by Facebook.
+#
+# As with any software that integrates with the Facebook platform, your use of
+# this software is subject to the Facebook Developer Principles and Policies
+# [http://developers.facebook.com/policy/]. This copyright notice shall be
+# included in all copies or substantial portions of the software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 #
-
 # this script configures your Android simulator for unit tests
 # Note: On Mac OS X, an easy way to generate a MACHINE_UNIQUE_USER_TAG is with the following:
 #   system_profiler SPHardwareDataType | grep -i "Serial Number (system):" | awk '{print $4}'
diff --git a/settings.gradle b/settings.gradle
index 893c9c88b..35258cd6c 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -10,6 +10,7 @@ project(':junitTests').projectDir = new File('facebook/junitTests')
 
 // Samples
 include ':samples:HelloFacebookSample'
+include ':samples:Iconicus'
 include ':samples:RPSSample'
 include ':samples:MessengerSendSample'
 include ':samples:Scrumptious'
