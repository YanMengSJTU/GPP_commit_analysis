diff --git a/.gitignore b/.gitignore
index b8848d160..b43ca86b3 100644
--- a/.gitignore
+++ b/.gitignore
@@ -48,15 +48,10 @@ keystores/
 # vim temp files
 *.swp
 
-# Arc generated
-.phutil_module_cache
-.arcconfig
-
 *~
 *.DS_Store
 *java#
 *.settings
-.arc/
 out/
 facebook/doc/
 facebook/tests/lint.xml
diff --git a/README.mdown b/README.mdown
index 2c0d09c85..d13f6a4bc 100644
--- a/README.mdown
+++ b/README.mdown
@@ -19,7 +19,7 @@ FEATURES
 * Sharing - https://developers.facebook.com/docs/sharing
 * App Links - https://developers.facebook.com/docs/applinks
 * Graph API - https://developers.facebook.com/docs/android/graph
-* Analytics for Apps - https://developers.facebook.com/docs/analytics
+* Analytics - https://developers.facebook.com/docs/analytics
 
 GIVE FEEDBACK
 -------------
diff --git a/build.gradle b/build.gradle
index 4791c255b..ba6fab1ea 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,15 +1,22 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 buildscript {
     repositories {
+        jcenter()
         mavenCentral()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.1.3'
+        classpath 'com.android.tools.build:gradle:2.3.2'
     }
 }
 
 allprojects {
     repositories {
         mavenCentral()
+        jcenter()
+        maven {
+            url "https://maven.google.com"
+        }
     }
-}
\ No newline at end of file
+
+    project.apply from: "${rootDir}/constants.gradle"
+}
diff --git a/constants.gradle b/constants.gradle
new file mode 100644
index 000000000..2b95ec8a1
--- /dev/null
+++ b/constants.gradle
@@ -0,0 +1,7 @@
+project.ext {
+    buildTools = "25.0.3"
+    supportLibraryVersion = "25.3.1"
+    compileSdk = 25
+    minSdk = 15
+    targetSdk = 25
+}
\ No newline at end of file
diff --git a/facebook/BUCK b/facebook/BUCK
index f4e8be603..ae9167a51 100644
--- a/facebook/BUCK
+++ b/facebook/BUCK
@@ -1,31 +1,144 @@
+prebuilt_jar(
+  name = 'support-annotations-25.0.0',
+  binary_jar = 'libs/support-annotations-25.0.0.jar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+prebuilt_jar(
+  name = 'bolts-applinks-1.4.0',
+  binary_jar = 'libs/bolts-applinks-1.4.0.jar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+prebuilt_jar(
+  name = 'bolts-tasks-1.4.0',
+  binary_jar = 'libs/bolts-tasks-1.4.0.jar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'support-v4-25.0.0',
+  aar = 'libs/support-v4-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'support-compat-25.0.0',
+  aar = 'libs/support-compat-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'support-core-ui-25.0.0',
+  aar = 'libs/support-core-ui-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'support-core-utils-25.0.0',
+  aar = 'libs/support-core-utils-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'support-fragment-25.0.0',
+  aar = 'libs/support-fragment-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'cardview-v7-25.0.0',
+  aar = 'libs/cardview-v7-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'customtabs-25.0.0',
+  aar = 'libs/customtabs-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'appcompat-v7-25.0.0',
+  aar = 'libs/appcompat-v7-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'support-vector-drawable-25.0.0',
+  aar = 'libs/support-vector-drawable-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
 android_build_config(
-  name = 'build_config',
-  package = 'com.facebook',
+  name = "build_config",
+  package = "com.facebook",
+  values = [
+    "String VERSION_NAME = \"4.21.1\"",
+  ],
+  visibility = [
+    "PUBLIC",
+  ],
 )
 
 android_resource(
   name = 'res',
-  res = 'res',
+  res = 'src/main/res',
   package = 'com.facebook',
   deps = [
   ],
+  visibility = [
+    'PUBLIC',
+  ],
 )
 
 android_library(
-  name = 'android-sdk',
-  srcs = glob(['src/**/*.java']),
+  name = 'lib',
+  srcs = glob(['src/main/**/*.java']),
+  manifest = 'src/main/AndroidManifest.xml',
+  provided_deps = [
+  ],
   deps = [
+    ':appcompat-v7-25.0.0',
+    ':bolts-applinks-1.4.0',
+    ':bolts-tasks-1.4.0',
     ':build_config',
+    ':cardview-v7-25.0.0',
+    ':customtabs-25.0.0',
     ':res',
-    '//libs:android-support-v4',
-    '//libs:bolts',
+    ':support-annotations-25.0.0',
+    ':support-compat-25.0.0',
+    ':support-core-ui-25.0.0',
+    ':support-core-utils-25.0.0',
+    ':support-fragment-25.0.0',
+    ':support-v4-25.0.0',
+    ':support-vector-drawable-25.0.0',
   ],
   visibility = [
     'PUBLIC',
   ],
 )
-
-project_config(
-  src_target = ':android-sdk',
-  src_roots = ['src'],
-)
\ No newline at end of file
diff --git a/facebook/build.gradle b/facebook/build.gradle
index 5c9de2f29..57e709a8d 100644
--- a/facebook/build.gradle
+++ b/facebook/build.gradle
@@ -8,22 +8,21 @@ project.group = 'com.facebook.android'
 
 dependencies {
     // Facebook Dependencies
-    compile 'com.android.support:support-v4:25.0.0'
-    compile 'com.android.support:appcompat-v7:25.0.0'
-    compile 'com.android.support:cardview-v7:25.0.0'
-    compile 'com.android.support:customtabs:25.0.0'
+    compile 'com.android.support:support-v4:25.3.1'
+    compile 'com.android.support:appcompat-v7:25.3.1'
+    compile 'com.android.support:cardview-v7:25.3.1'
+    compile 'com.android.support:customtabs:25.3.1'
     compile 'com.parse.bolts:bolts-android:1.4.0'
 
     // Unit Tests
     testCompile 'junit:junit:4.12'
-    testCompile 'org.robolectric:robolectric:3.0'
-    testCompile 'org.robolectric:shadows-support-v4:3.0'
+    testCompile 'org.robolectric:robolectric:3.3'
 
     def powerMockVersion = '1.6.1'
+    testCompile "org.powermock:powermock-api-mockito:$powerMockVersion"
     testCompile "org.powermock:powermock-module-junit4:$powerMockVersion"
     testCompile "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
     testCompile "org.powermock:powermock-classloading-xstream:$powerMockVersion"
-    testCompile "org.powermock:powermock-api-mockito:$powerMockVersion"
 
     // Connected Tests
     androidTestCompile 'org.mockito:mockito-core:1.10.19'
diff --git a/facebook/src/androidTest/java/com/facebook/AsyncRequestTests.java b/facebook/src/androidTest/java/com/facebook/AsyncRequestTests.java
index 27fbc6012..399d62be5 100644
--- a/facebook/src/androidTest/java/com/facebook/AsyncRequestTests.java
+++ b/facebook/src/androidTest/java/com/facebook/AsyncRequestTests.java
@@ -101,69 +101,6 @@ public void testExecuteBatchWithNullRequestThrows() throws Exception {
 
     }
 
-    @MediumTest
-    @LargeTest
-    public void testExecuteSingleGet() {
-        final AccessToken accessToken = getAccessTokenForSharedUser();
-        Bundle parameters = new Bundle();
-        parameters.putString("fields", "location");
-        GraphRequest request = new GraphRequest(
-                accessToken,
-                RequestTests.TEST_PAGE_ID,
-                parameters,
-                null,
-                new ExpectSuccessCallback() {
-                    @Override
-                    protected void performAsserts(GraphResponse response) {
-                        assertNotNull(response);
-                        JSONObject graphPlace = response.getJSONObject();
-                        assertEquals(
-                                "Seattle",
-                                graphPlace.optJSONObject("location").optString("city"));
-                    }
-                });
-
-        TestGraphRequestAsyncTask task = new TestGraphRequestAsyncTask(request);
-
-        task.executeOnBlockerThread();
-
-        // Wait on 2 signals: request and task will both signal.
-        waitAndAssertSuccess(2);
-    }
-
-    @MediumTest
-    @LargeTest
-    public void testExecuteSingleGetUsingHttpURLConnection() {
-        final AccessToken accessToken = getAccessTokenForSharedUser();
-        Bundle parameters = new Bundle();
-        parameters.putString("fields", "location");
-        GraphRequest request = new GraphRequest(
-                accessToken,
-                RequestTests.TEST_PAGE_ID,
-                parameters,
-                null,
-                new ExpectSuccessCallback() {
-                    @Override
-                    protected void performAsserts(GraphResponse response) {
-                        assertNotNull(response);
-                        JSONObject graphPlace = response.getJSONObject();
-                        assertEquals(
-                                "Seattle",
-                                graphPlace.optJSONObject("location").optString("city"));
-                    }
-                });
-        HttpURLConnection connection = GraphRequest.toHttpConnection(request);
-
-        TestGraphRequestAsyncTask task = new TestGraphRequestAsyncTask(
-                connection,
-                Arrays.asList(new GraphRequest[] { request }));
-
-        task.executeOnBlockerThread();
-
-        // Wait on 2 signals: request and task will both signal.
-        waitAndAssertSuccess(2);
-    }
-
     @MediumTest
     @LargeTest
     public void testExecuteSingleGetFailureCase() {
diff --git a/facebook/src/androidTest/java/com/facebook/BatchRequestTests.java b/facebook/src/androidTest/java/com/facebook/BatchRequestTests.java
index 9e0347775..7f371cdeb 100644
--- a/facebook/src/androidTest/java/com/facebook/BatchRequestTests.java
+++ b/facebook/src/androidTest/java/com/facebook/BatchRequestTests.java
@@ -65,75 +65,6 @@ public void testBatchWithoutAppIDIsError() {
         GraphRequest.executeBatchAndWait(request1, request2);
     }
 
-    @LargeTest
-    public void testExecuteBatchRequestsPathEncoding() throws IOException {
-        // ensures that paths passed to batch requests are encoded properly before
-        // we send it up to the server
-
-        final AccessToken accessToken = getAccessTokenForSharedUser();
-
-        Bundle parameters = new Bundle();
-        parameters.putString("fields", "location");
-
-        GraphRequest request1 = new GraphRequest(
-                accessToken,
-                RequestTests.TEST_PAGE_ID,
-                parameters,
-                null);
-        request1.setBatchEntryName("seattle");
-        request1.setBatchEntryOmitResultOnSuccess(false);
-        GraphRequest request2 = new GraphRequest(
-                accessToken,
-                "{result=seattle:$.id}",
-                parameters,
-                null);
-
-        List<GraphResponse> responses = GraphRequest.executeBatchAndWait(request1, request2);
-        assertEquals(2, responses.size());
-        assertTrue(responses.get(0).getError() == null);
-        assertTrue(responses.get(1).getError() == null);
-
-        JSONObject seattle1 = responses.get(0).getJSONObject();
-        JSONObject seattle2 = responses.get(1).getJSONObject();
-        assertTrue(seattle1 != null);
-        assertTrue(seattle2 != null);
-
-        assertEquals("Seattle", seattle1.optJSONObject("location").optString("city"));
-        assertEquals("Seattle", seattle2.optJSONObject("location").optString("city"));
-    }
-
-    @LargeTest
-    public void testExecuteBatchedGets() throws IOException {
-        final AccessToken accessToken = getAccessTokenForSharedUser();
-
-        Bundle parameters = new Bundle();
-        parameters.putString("fields", "location");
-
-        GraphRequest request1 = new GraphRequest(
-                accessToken,
-                RequestTests.TEST_PAGE_ID,
-                parameters,
-                null);
-        GraphRequest request2 = new GraphRequest(
-                accessToken,
-                RequestTests.TEST_PAGE_ID_2,
-                parameters,
-                null);
-
-        List<GraphResponse> responses = GraphRequest.executeBatchAndWait(request1, request2);
-        assertEquals(2, responses.size());
-        assertTrue(responses.get(0).getError() == null);
-        assertTrue(responses.get(1).getError() == null);
-
-        JSONObject seattle = responses.get(0).getJSONObject();
-        JSONObject paris = responses.get(1).getJSONObject();
-        assertTrue(seattle != null);
-        assertTrue(paris != null);
-
-        assertEquals("Seattle", seattle.optJSONObject("location").optString("city"));
-        assertEquals("Paris", paris.optJSONObject("location").optString("city"));
-    }
-
     @LargeTest
     public void testFacebookErrorResponsesCreateErrors() {
         setBatchApplicationIdForTestApp();
diff --git a/facebook/src/androidTest/java/com/facebook/FacebookAppLinkResolverTests.java b/facebook/src/androidTest/java/com/facebook/FacebookAppLinkResolverTests.java
index 06a01f5ad..fb11d0776 100644
--- a/facebook/src/androidTest/java/com/facebook/FacebookAppLinkResolverTests.java
+++ b/facebook/src/androidTest/java/com/facebook/FacebookAppLinkResolverTests.java
@@ -36,45 +36,6 @@
 public class FacebookAppLinkResolverTests extends FacebookTestCase {
     private Task resolveTask;
 
-    public void testSingleUrl() {
-        String testUrlString = "https://fb.me/732873156764191";
-        Uri testUrl = Uri.parse(testUrlString);
-        Uri testWebUri = Uri.parse("http://www.facebook.com/");
-        ArrayList<AppLink.Target> testTargets = new ArrayList<AppLink.Target>();
-        testTargets.add(new AppLink.Target(
-                "com.myapp",
-                null,
-                Uri.parse("myapp://3"),
-                "my app"));
-        testTargets.add(new AppLink.Target(
-                "com.myapp-test",
-                null,
-                Uri.parse("myapp-test://4"),
-                "my test app"));
-        try {
-            executeResolverOnBlockerThread(new FacebookAppLinkResolver(), testUrl);
-
-            getTestBlocker().waitForSignals(1);
-
-            assertNotNull(resolveTask);
-
-            Task<AppLink> singleUrlResolveTask = (Task<AppLink>)resolveTask;
-
-            assertTrue(singleUrlResolveTask.isCompleted() &&
-                    !singleUrlResolveTask.isCancelled() &&
-                    !singleUrlResolveTask.isFaulted());
-
-            AppLink appLink = singleUrlResolveTask.getResult();
-
-            assertEquals(appLink.getSourceUrl(), testUrl);
-            assertEquals(appLink.getWebUrl(), testWebUri);
-            assertTrue(targetListsAreEqual(appLink.getTargets(), testTargets));
-        } catch (Exception e) {
-            // Forcing the test to fail with details
-            assertNull(e);
-        }
-    }
-
     public void testUrlWithNoAppLinkData() {
         String testNoAppLinkUrlString = "https://fb.me/732873156764191_no_app_link";
         Uri testNoAppLinkUrl = Uri.parse(testNoAppLinkUrlString);
@@ -99,49 +60,6 @@ public void testUrlWithNoAppLinkData() {
         }
     }
 
-    @FlakyTest
-    public void testCachedAppLinkData() {
-        String testUrlString = "https://fb.me/732873156764191";
-        Uri testUrl = Uri.parse(testUrlString);
-        Uri testWebUri = Uri.parse("http://www.facebook.com/");
-        ArrayList<AppLink.Target> testTargets = new ArrayList<AppLink.Target>();
-        testTargets.add(new AppLink.Target(
-                "com.myapp",
-                null,
-                Uri.parse("myapp://3"),
-                "my app"));
-        testTargets.add(new AppLink.Target(
-                "com.myapp-test",
-                null,
-                Uri.parse("myapp-test://4"),
-                "my test app"));
-
-        try {
-            FacebookAppLinkResolver resolver = new FacebookAppLinkResolver();
-
-            // This will prefetch the app link
-            executeResolverOnBlockerThread(resolver, testUrl);
-            getTestBlocker().waitForSignals(1);
-            assertNotNull(resolveTask);
-
-            // Now let's fetch it again. This should complete the task synchronously.
-            Task<AppLink> cachedUrlResolveTask = resolver.getAppLinkFromUrlInBackground(testUrl);
-
-            assertTrue(cachedUrlResolveTask.isCompleted() &&
-                    !cachedUrlResolveTask.isCancelled() &&
-                    !cachedUrlResolveTask.isFaulted());
-
-            AppLink appLink = cachedUrlResolveTask.getResult();
-
-            assertEquals(appLink.getSourceUrl(), testUrl);
-            assertEquals(appLink.getWebUrl(), testWebUri);
-            assertTrue(targetListsAreEqual(appLink.getTargets(), testTargets));
-        } catch (Exception e) {
-            // Forcing the test to fail with details
-            assertNull(e);
-        }
-    }
-
     public void executeResolverOnBlockerThread(final FacebookAppLinkResolver resolver, final Uri testUrl) {
         final TestBlocker blocker = getTestBlocker();
         Runnable runnable = new Runnable() {
diff --git a/facebook/src/androidTest/java/com/facebook/RequestTests.java b/facebook/src/androidTest/java/com/facebook/RequestTests.java
index f69ec3d10..59c3491af 100644
--- a/facebook/src/androidTest/java/com/facebook/RequestTests.java
+++ b/facebook/src/androidTest/java/com/facebook/RequestTests.java
@@ -84,27 +84,6 @@ public void tearDown() throws Exception {
         super.tearDown();
     }
 
-    @LargeTest
-    public void testExecuteSingleGet() {
-        Bundle parameters = new Bundle();
-        parameters.putString("fields", "location");
-
-        GraphRequest request = new GraphRequest(
-                AccessToken.getCurrentAccessToken(),
-                TEST_PAGE_ID,
-                parameters,
-                null);
-        GraphResponse response = request.executeAndWait();
-
-        assertTrue(response != null);
-        assertTrue(response.getError() == null);
-        assertNotNull(response.getJSONObject());
-        assertNotNull(response.getRawResponse());
-
-        JSONObject graphPlace = response.getJSONObject();
-        assertEquals("Seattle", graphPlace.optJSONObject("location").optString("city"));
-    }
-
     @LargeTest
     public void testBuildsUploadPhotoHttpURLConnection() throws Exception {
         Bitmap image = createTestBitmap(128);
@@ -123,46 +102,6 @@ public void testBuildsUploadPhotoHttpURLConnection() throws Exception {
         assertNotSame("application/x-www-form-urlencoded", connection.getRequestProperty("Content-Type"));
     }
 
-    @LargeTest
-    public void testExecuteSingleGetUsingHttpURLConnection() throws IOException {
-        Bundle parameters = new Bundle();
-        parameters.putString("fields", "location");
-
-        GraphRequest request = new GraphRequest(
-                AccessToken.getCurrentAccessToken(),
-                TEST_PAGE_ID,
-                parameters,
-                null);
-        HttpURLConnection connection = GraphRequest.toHttpConnection(request);
-
-        assertEquals("gzip", connection.getRequestProperty("Content-Encoding"));
-        assertEquals(
-                "application/x-www-form-urlencoded",
-                connection.getRequestProperty("Content-Type"));
-
-        List<GraphResponse> responses = GraphRequest.executeConnectionAndWait(
-                connection,
-                Arrays.asList(new GraphRequest[]{request}));
-        assertNotNull(responses);
-        assertEquals(1, responses.size());
-
-        GraphResponse response = responses.get(0);
-
-        assertTrue(response != null);
-        assertTrue(response.getError() == null);
-        assertNotNull(response.getJSONObject());
-        assertNotNull(response.getRawResponse());
-
-        JSONObject graphPlace = response.getJSONObject();
-        assertEquals("Seattle", graphPlace.optJSONObject("location").optString("city"));
-
-        // Make sure calling code can still access HTTP headers and call disconnect themselves.
-        int code = connection.getResponseCode();
-        assertEquals(200, code);
-        assertTrue(connection.getHeaderFields().keySet().contains("Content-Type"));
-        connection.disconnect();
-    }
-
     @LargeTest
     public void testFacebookErrorResponseCreatesError() {
         GraphRequest request = new GraphRequest(null, "somestringthatshouldneverbeavalidfobjectid");
@@ -984,55 +923,4 @@ public void testCantUseComplexParameterInGetRequest() {
             setLongitude(-122.3331);
         }
     };
-
-    @LargeTest
-    public void testPaging() {
-        final List<JSONObject> returnedPlaces = new ArrayList<JSONObject>();
-        GraphRequest request = GraphRequest
-                .newPlacesSearchRequest(
-                        AccessToken.getCurrentAccessToken(),
-                        SEATTLE_LOCATION,
-                        100000,
-                        3,
-                        null,
-                        new GraphRequest.GraphJSONArrayCallback() {
-                            @Override
-                            public void onCompleted(JSONArray places, GraphResponse response) {
-                                if (places == null) {
-                                    assertNotNull(places);
-                                }
-                                for (int i = 0; i < places.length(); ++i) {
-                                    returnedPlaces.add(places.optJSONObject(i));
-                                }
-                            }
-                        });
-        GraphResponse response = request.executeAndWait();
-
-        assertNull(response.getError());
-        assertNotNull(response.getJSONObject());
-        assertNotSame(0, returnedPlaces.size());
-
-        returnedPlaces.clear();
-
-        GraphRequest nextRequest = response.getRequestForPagedResults(GraphResponse.PagingDirection.NEXT);
-        assertNotNull(nextRequest);
-
-        nextRequest.setCallback(request.getCallback());
-        response = nextRequest.executeAndWait();
-
-        assertNull(response.getError());
-        assertNotNull(response.getJSONObject());
-
-        returnedPlaces.clear();
-
-        GraphRequest previousRequest = response.getRequestForPagedResults(GraphResponse.PagingDirection.PREVIOUS);
-        assertNotNull(previousRequest);
-
-        previousRequest.setCallback(request.getCallback());
-        response = previousRequest.executeAndWait();
-
-        assertNull(response.getError());
-        assertNotNull(response.getJSONObject());
-        assertNotSame(0, returnedPlaces.size());
-    }
 }
diff --git a/facebook/src/androidTest/java/com/facebook/internal/ImageResponseCacheTest.java b/facebook/src/androidTest/java/com/facebook/internal/ImageResponseCacheTest.java
index f90fcb1d6..dfc53405b 100644
--- a/facebook/src/androidTest/java/com/facebook/internal/ImageResponseCacheTest.java
+++ b/facebook/src/androidTest/java/com/facebook/internal/ImageResponseCacheTest.java
@@ -39,20 +39,6 @@
 import java.util.Arrays;
 
 public final class ImageResponseCacheTest extends AndroidTestCase {
-
-    @LargeTest
-    public void testImageCaching() throws Exception {
-        FacebookSdk.sdkInitialize(safeGetContext());
-        // In unit test, since we need verify first access the image is not in cache
-        // we need clear the cache first
-        TestUtils.clearFileLruCache(ImageResponseCache.getCache(safeGetContext()));
-        String imgUrl = "https://scontent-sea1-1.xx.fbcdn.net/t31.0-8/13217422_1162740970424304_7489168346277340037_o.jpg";
-
-        Bitmap bmp1 = readImage(imgUrl, false);
-        Bitmap bmp2 = readImage(imgUrl, true);
-        compareImages(bmp1, bmp2);
-    }
-
     @LargeTest
     public void testImageNotCaching() throws IOException {
 
diff --git a/facebook/src/main/java/com/facebook/FacebookSdk.java b/facebook/src/main/java/com/facebook/FacebookSdk.java
index d443635fb..977afcd52 100644
--- a/facebook/src/main/java/com/facebook/FacebookSdk.java
+++ b/facebook/src/main/java/com/facebook/FacebookSdk.java
@@ -66,7 +66,7 @@
             new HashSet<LoggingBehavior>(Arrays.asList(LoggingBehavior.DEVELOPER_ERRORS));
     private static final int DEFAULT_CALLBACK_REQUEST_CODE_OFFSET = 0xface;
 
-    private static volatile Executor executor;
+    private static Executor executor;
     private static volatile String applicationId;
     private static volatile String applicationName;
     private static volatile String appClientToken;
diff --git a/facebook/src/main/java/com/facebook/FacebookSdkVersion.java b/facebook/src/main/java/com/facebook/FacebookSdkVersion.java
index 62790a1c8..a99f50802 100644
--- a/facebook/src/main/java/com/facebook/FacebookSdkVersion.java
+++ b/facebook/src/main/java/com/facebook/FacebookSdkVersion.java
@@ -21,5 +21,5 @@
 package com.facebook;
 
 final class FacebookSdkVersion {
-    public static final String BUILD = "4.20.0";
+    public static final String BUILD = "4.24.0";
 }
diff --git a/facebook/src/main/java/com/facebook/LoginStatusCallback.java b/facebook/src/main/java/com/facebook/LoginStatusCallback.java
new file mode 100644
index 000000000..beab053ee
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/LoginStatusCallback.java
@@ -0,0 +1,44 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook;
+
+/**
+ * A callback class for getting the Login Status of a user.
+ */
+public interface LoginStatusCallback {
+
+    /**
+     * Called when an access token is able to be retrieved successfully.
+     * @param accessToken The access token retrieved for the user
+     */
+    void onCompleted(final AccessToken accessToken);
+
+    /**
+     * Called when an access token could not be retrieved.
+     */
+    void onFailure();
+
+    /**
+     * Called when there was an error getting the login status of a user.
+     * @param exception The error that occurred
+     */
+    void onError(final Exception exception);
+}
diff --git a/facebook/src/main/java/com/facebook/appevents/AppEvent.java b/facebook/src/main/java/com/facebook/appevents/AppEvent.java
index af8ffd51b..1b1d70486 100644
--- a/facebook/src/main/java/com/facebook/appevents/AppEvent.java
+++ b/facebook/src/main/java/com/facebook/appevents/AppEvent.java
@@ -160,6 +160,7 @@ private static JSONObject getJSONObjectForAppEvent(
         JSONObject eventObject = new JSONObject();
 
         eventObject.put(Constants.EVENT_NAME_EVENT_KEY, eventName);
+        eventObject.put(Constants.EVENT_NAME_MD5_EVENT_KEY, md5Checksum(eventName));
         eventObject.put(Constants.LOG_TIME_APP_EVENT_KEY, System.currentTimeMillis() / 1000);
         eventObject.put("_ui", contextName);
         if (currentSessionId != null) {
diff --git a/facebook/src/main/java/com/facebook/appevents/AppEventsConstants.java b/facebook/src/main/java/com/facebook/appevents/AppEventsConstants.java
index 26a5fe3e5..ecc16ce91 100644
--- a/facebook/src/main/java/com/facebook/appevents/AppEventsConstants.java
+++ b/facebook/src/main/java/com/facebook/appevents/AppEventsConstants.java
@@ -57,7 +57,7 @@
     /** Log this event when the user has completed a tutorial in the app. */
     public static final String EVENT_NAME_COMPLETED_TUTORIAL = "fb_mobile_tutorial_completion";
 
-    /** Log this event when the app obtained a push registration token from GCM. */
+    /** Log this event when the app obtained a push registration token from FCM. */
     public static final String EVENT_NAME_PUSH_TOKEN_OBTAINED = "fb_mobile_obtain_push_token";
 
     // Ecommerce related
diff --git a/facebook/src/main/java/com/facebook/appevents/AppEventsLogger.java b/facebook/src/main/java/com/facebook/appevents/AppEventsLogger.java
index a9276779f..b6687ef8b 100644
--- a/facebook/src/main/java/com/facebook/appevents/AppEventsLogger.java
+++ b/facebook/src/main/java/com/facebook/appevents/AppEventsLogger.java
@@ -690,7 +690,7 @@ public boolean isValidForAccessToken(AccessToken accessToken) {
 
     /**
      * Sets and sends registration id to register the current app for push notifications.
-     * @param registrationId RegistrationId received from GCM.
+     * @param registrationId RegistrationId received from FCM.
      */
     public static void setPushNotificationsRegistrationId(String registrationId) {
         synchronized (staticLock) {
diff --git a/facebook/src/main/java/com/facebook/appevents/internal/Constants.java b/facebook/src/main/java/com/facebook/appevents/internal/Constants.java
index 7df30fb0c..ca120fb4b 100644
--- a/facebook/src/main/java/com/facebook/appevents/internal/Constants.java
+++ b/facebook/src/main/java/com/facebook/appevents/internal/Constants.java
@@ -23,6 +23,7 @@
 public class Constants {
     public static final String LOG_TIME_APP_EVENT_KEY = "_logTime";
     public static final String EVENT_NAME_EVENT_KEY = "_eventName";
+    public static final String EVENT_NAME_MD5_EVENT_KEY = "_eventName_md5";
 
     // The following are for Automatic Analytics events and parameters
     public static final String AA_TIME_SPENT_EVENT_NAME = "fb_aa_time_spent_on_view";
diff --git a/facebook/src/main/java/com/facebook/internal/AttributionIdentifiers.java b/facebook/src/main/java/com/facebook/internal/AttributionIdentifiers.java
index 8a314e367..16a0ee55f 100644
--- a/facebook/src/main/java/com/facebook/internal/AttributionIdentifiers.java
+++ b/facebook/src/main/java/com/facebook/internal/AttributionIdentifiers.java
@@ -265,7 +265,9 @@ private static String getInstallerPackageName(Context context) {
         @Override
         public void onServiceConnected(ComponentName name, IBinder service) {
             try {
-                queue.put(service);
+                if (service != null) {
+                    queue.put(service);
+                }
             } catch (InterruptedException e) {
             }
         }
diff --git a/facebook/src/main/java/com/facebook/internal/CallbackManagerImpl.java b/facebook/src/main/java/com/facebook/internal/CallbackManagerImpl.java
index d7fdbd5e6..d6d48272e 100644
--- a/facebook/src/main/java/com/facebook/internal/CallbackManagerImpl.java
+++ b/facebook/src/main/java/com/facebook/internal/CallbackManagerImpl.java
@@ -75,6 +75,10 @@ public void registerCallback(int requestCode, Callback callback) {
         callbacks.put(requestCode, callback);
     }
 
+    public void unregisterCallback(int requestCode) {
+        callbacks.remove(requestCode);
+    }
+
     @Override
     public boolean onActivityResult(int requestCode, int resultCode, Intent data) {
         Callback callback = callbacks.get(requestCode);
diff --git a/facebook/src/main/java/com/facebook/internal/FacebookSignatureValidator.java b/facebook/src/main/java/com/facebook/internal/FacebookSignatureValidator.java
new file mode 100644
index 000000000..ee52d7955
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/internal/FacebookSignatureValidator.java
@@ -0,0 +1,85 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.internal;
+
+import java.util.HashSet;
+
+import android.content.Context;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.Signature;
+import android.os.Build;
+
+/**
+ * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
+ * Android. Use of any of the classes in this package is unsupported, and they may be modified or
+ * removed without warning at any time.
+ */
+public class FacebookSignatureValidator {
+
+  private static final String FBI_HASH = "a4b7452e2ed8f5f191058ca7bbfd26b0d3214bfc";
+  private static final String FBL_HASH = "5e8f16062ea3cd2c4a0d547876baa6f38cabf625";
+  private static final String FBR_HASH = "8a3c4b262d721acd49a4bf97d5213199c86fa2b9";
+
+  private static final HashSet<String> validAppSignatureHashes = buildAppSignatureHashes();
+
+  private static HashSet<String> buildAppSignatureHashes() {
+    HashSet<String> set = new HashSet<String>();
+    set.add(FBR_HASH);
+    set.add(FBI_HASH);
+    set.add(FBL_HASH);
+    return set;
+  }
+
+  public static boolean validateSignature(Context context, String packageName) {
+    String brand = Build.BRAND;
+    int applicationFlags = context.getApplicationInfo().flags;
+    if (brand.startsWith("generic") &&
+        (applicationFlags & ApplicationInfo.FLAG_DEBUGGABLE) != 0) {
+      // We are debugging on an emulator, don't validate package signature.
+      return true;
+    }
+
+    PackageInfo packageInfo;
+    try {
+      packageInfo = context.getPackageManager().getPackageInfo(
+          packageName,
+          PackageManager.GET_SIGNATURES);
+    } catch (PackageManager.NameNotFoundException e) {
+      return false;
+    }
+
+    // just in case
+    if (packageInfo.signatures == null || packageInfo.signatures.length <= 0) {
+      return false;
+    }
+
+    for (Signature signature : packageInfo.signatures) {
+      String hashedSignature = Utility.sha1hash(signature.toByteArray());
+      if (!validAppSignatureHashes.contains(hashedSignature)) {
+        return false;
+      }
+    }
+
+    return true;
+  }
+}
diff --git a/facebook/src/main/java/com/facebook/internal/ImageResponseCache.java b/facebook/src/main/java/com/facebook/internal/ImageResponseCache.java
index 0a4b47583..5850a0530 100644
--- a/facebook/src/main/java/com/facebook/internal/ImageResponseCache.java
+++ b/facebook/src/main/java/com/facebook/internal/ImageResponseCache.java
@@ -38,7 +38,7 @@
 class ImageResponseCache {
     static final String TAG = ImageResponseCache.class.getSimpleName();
 
-    private volatile static FileLruCache imageCache;
+    private static FileLruCache imageCache;
 
     synchronized static FileLruCache getCache(Context context) throws IOException{
         if (imageCache == null) {
diff --git a/facebook/src/main/java/com/facebook/internal/NativeProtocol.java b/facebook/src/main/java/com/facebook/internal/NativeProtocol.java
index c490ff8e1..f1c01511c 100644
--- a/facebook/src/main/java/com/facebook/internal/NativeProtocol.java
+++ b/facebook/src/main/java/com/facebook/internal/NativeProtocol.java
@@ -93,6 +93,7 @@
     public static final int PROTOCOL_VERSION_20141107 = 20141107; // Bucketed Result Intents
     public static final int PROTOCOL_VERSION_20141218 = 20141218;
     public static final int PROTOCOL_VERSION_20160327 = 20160327;
+    public static final int PROTOCOL_VERSION_20170411 = 20170411; // express login
 
     public static final String EXTRA_PROTOCOL_VERSION =
             "com.facebook.platform.protocol.PROTOCOL_VERSION";
@@ -133,6 +134,10 @@
     public static final int MESSAGE_GET_INSTALL_DATA_REPLY      = 0x10005;
     public static final int MESSAGE_GET_LIKE_STATUS_REQUEST     = 0x10006;
     public static final int MESSAGE_GET_LIKE_STATUS_REPLY       = 0x10007;
+    public static final int MESSAGE_GET_AK_SEAMLESS_TOKEN_REQUEST = 0x10008;
+    public static final int MESSAGE_GET_AK_SEAMLESS_TOKEN_REPLY   = 0x10009;
+    public static final int MESSAGE_GET_LOGIN_STATUS_REQUEST   = 0x1000A;
+    public static final int MESSAGE_GET_LOGIN_STATUS_REPLY   = 0x1000B;
 
     // MESSAGE_ERROR_REPLY data keys:
     // See STATUS_*
@@ -181,6 +186,11 @@
     public static final String EXTRA_APPLICATION_NAME =
             "com.facebook.platform.extra.APPLICATION_NAME";
     public static final String EXTRA_USER_ID = "com.facebook.platform.extra.USER_ID";
+    public static final String EXTRA_LOGGER_REF = "com.facebook.platform.extra.LOGGER_REF";
+    public static final String EXTRA_TOAST_DURATION_MS =
+            "com.facebook.platform.extra.EXTRA_TOAST_DURATION_MS";
+    public static final String EXTRA_GRAPH_API_VERSION =
+            "com.facebook.platform.extra.GRAPH_API_VERSION";
 
     // Extras returned by setResult() for ACTION_LOGIN_DIALOG
     public static final String EXTRA_ACCESS_TOKEN = "com.facebook.platform.extra.ACCESS_TOKEN";
@@ -189,9 +199,22 @@
     // EXTRA_PERMISSIONS
 
     public static final String RESULT_ARGS_ACCESS_TOKEN = "access_token";
+    public static final String RESULT_ARGS_SIGNED_REQUEST = "signed request";
     public static final String RESULT_ARGS_EXPIRES_SECONDS_SINCE_EPOCH =
             "expires_seconds_since_epoch";
     public static final String RESULT_ARGS_PERMISSIONS = "permissions";
+    public static final String EXTRA_ARGS_PROFILE = "com.facebook.platform.extra.PROFILE";
+    public static final String EXTRA_ARGS_PROFILE_NAME = "com.facebook.platform.extra.PROFILE_NAME";
+    public static final String EXTRA_ARGS_PROFILE_LAST_NAME =
+            "com.facebook.platform.extra.PROFILE_LAST_NAME";
+    public static final String EXTRA_ARGS_PROFILE_FIRST_NAME =
+            "com.facebook.platform.extra.PROFILE_FIRST_NAME";
+    public static final String EXTRA_ARGS_PROFILE_MIDDLE_NAME =
+            "com.facebook.platform.extra.PROFILE_MIDDLE_NAME";
+    public static final String EXTRA_ARGS_PROFILE_LINK =
+            "com.facebook.platform.extra.PROFILE_LINK";
+    public static final String EXTRA_ARGS_PROFILE_USER_ID =
+            "com.facebook.platform.extra.PROFILE_USER_ID";
 
     // OG objects will have this key to set to true if they should be created as part of OG Action
     // publish
@@ -245,54 +268,8 @@
         abstract protected String getPackage();
         abstract protected String getLoginActivity();
 
-        private static final String FBI_HASH = "a4b7452e2ed8f5f191058ca7bbfd26b0d3214bfc";
-        private static final String FBL_HASH = "5e8f16062ea3cd2c4a0d547876baa6f38cabf625";
-        private static final String FBR_HASH = "8a3c4b262d721acd49a4bf97d5213199c86fa2b9";
-
-        private static final HashSet<String> validAppSignatureHashes = buildAppSignatureHashes();
-
         private TreeSet<Integer> availableVersions;
 
-        private static HashSet<String> buildAppSignatureHashes() {
-            HashSet<String> set = new HashSet<String>();
-            set.add(FBR_HASH);
-            set.add(FBI_HASH);
-            set.add(FBL_HASH);
-            return set;
-        }
-
-        public boolean validateSignature(Context context, String packageName) {
-            String brand = Build.BRAND;
-            int applicationFlags = context.getApplicationInfo().flags;
-            if (brand.startsWith("generic") &&
-                    (applicationFlags & ApplicationInfo.FLAG_DEBUGGABLE) != 0) {
-                // We are debugging on an emulator, don't validate package signature.
-                return true;
-            }
-
-            PackageInfo packageInfo;
-            try {
-                packageInfo = context.getPackageManager().getPackageInfo(packageName,
-                        PackageManager.GET_SIGNATURES);
-            } catch (PackageManager.NameNotFoundException e) {
-                return false;
-            }
-
-            // just in case
-            if (packageInfo.signatures == null || packageInfo.signatures.length <= 0) {
-                return false;
-            }
-
-            for (Signature signature : packageInfo.signatures) {
-                String hashedSignature = Utility.sha1hash(signature.toByteArray());
-                if (!validAppSignatureHashes.contains(hashedSignature)) {
-                    return false;
-                }
-            }
-
-            return true;
-        }
-
         public TreeSet<Integer> getAvailableVersions() {
             if (availableVersions == null) {
                 fetchAvailableVersions(false);
@@ -407,7 +384,9 @@ static Intent validateActivityIntent(Context context, Intent intent, NativeAppIn
             return null;
         }
 
-        if (!appInfo.validateSignature(context, resolveInfo.activityInfo.packageName)) {
+        if (!FacebookSignatureValidator.validateSignature(
+            context,
+            resolveInfo.activityInfo.packageName)) {
             return null;
         }
 
@@ -424,7 +403,9 @@ static Intent validateServiceIntent(Context context, Intent intent, NativeAppInf
             return null;
         }
 
-        if (!appInfo.validateSignature(context, resolveInfo.serviceInfo.packageName)) {
+        if (!FacebookSignatureValidator.validateSignature(
+            context,
+            resolveInfo.serviceInfo.packageName)) {
             return null;
         }
 
@@ -570,8 +551,7 @@ public static final int getLatestKnownVersion() {
                     PROTOCOL_VERSION_20131107,
                     PROTOCOL_VERSION_20130618,
                     PROTOCOL_VERSION_20130502,
-                    PROTOCOL_VERSION_20121101
-            );
+                    PROTOCOL_VERSION_20121101);
 
     public static boolean isVersionCompatibleWithBucketedIntent(int version) {
         return KNOWN_PROTOCOL_VERSIONS.contains(version) && version >= PROTOCOL_VERSION_20140701;
diff --git a/facebook/src/main/java/com/facebook/internal/ServerProtocol.java b/facebook/src/main/java/com/facebook/internal/ServerProtocol.java
index 3aa09b051..4688de649 100644
--- a/facebook/src/main/java/com/facebook/internal/ServerProtocol.java
+++ b/facebook/src/main/java/com/facebook/internal/ServerProtocol.java
@@ -76,7 +76,7 @@
     // URL components
     private static final String GRAPH_VIDEO_URL_FORMAT = "https://graph-video.%s";
     private static final String GRAPH_URL_FORMAT = "https://graph.%s";
-    private static final String GRAPH_API_VERSION = "v2.8";
+    private static final String GRAPH_API_VERSION = "v2.9";
 
     public static final Collection<String> errorsProxyAuthDisabled =
             Utility.unmodifiableCollection("service_disabled", "AndroidAuthKillSwitchException");
diff --git a/facebook/src/main/java/com/facebook/internal/UrlRedirectCache.java b/facebook/src/main/java/com/facebook/internal/UrlRedirectCache.java
index bf4c5b269..382d31f8e 100644
--- a/facebook/src/main/java/com/facebook/internal/UrlRedirectCache.java
+++ b/facebook/src/main/java/com/facebook/internal/UrlRedirectCache.java
@@ -38,7 +38,7 @@
     static final String TAG = UrlRedirectCache.class.getSimpleName();
     private static final String REDIRECT_CONTENT_TAG = TAG + "_Redirect";
 
-    private volatile static FileLruCache urlRedirectCache;
+    private static FileLruCache urlRedirectCache;
 
     synchronized static FileLruCache getCache() throws IOException{
         if (urlRedirectCache == null) {
diff --git a/facebook/src/main/java/com/facebook/internal/Validate.java b/facebook/src/main/java/com/facebook/internal/Validate.java
index 72f87abcf..4befe2d2d 100644
--- a/facebook/src/main/java/com/facebook/internal/Validate.java
+++ b/facebook/src/main/java/com/facebook/internal/Validate.java
@@ -180,6 +180,29 @@ public static void hasInternetPermissions(Context context, boolean shouldThrow)
         }
     }
 
+    public static boolean hasWiFiPermission(Context context) {
+        return hasPermission(context, Manifest.permission.ACCESS_WIFI_STATE);
+    }
+
+    public static boolean hasChangeWifiStatePermission(Context context) {
+        return hasPermission(context, Manifest.permission.CHANGE_WIFI_STATE);
+    }
+
+    public static boolean hasLocationPermission(Context context) {
+        return hasPermission(context, Manifest.permission.ACCESS_COARSE_LOCATION)
+                || hasPermission(context, Manifest.permission.ACCESS_FINE_LOCATION);
+    }
+
+    public static boolean hasBluetoothPermission(Context context) {
+        return hasPermission(context, Manifest.permission.BLUETOOTH)
+                && hasPermission(context, Manifest.permission.BLUETOOTH_ADMIN);
+    }
+
+    public static boolean hasPermission(Context context, String permission) {
+        return context.checkCallingOrSelfPermission(permission) ==
+          PackageManager.PERMISSION_GRANTED;
+    }
+
     public static void hasFacebookActivity(Context context) {
         Validate.hasFacebookActivity(context, true);
     }
@@ -195,6 +218,7 @@ public static void hasFacebookActivity(Context context, boolean shouldThrow) {
             try {
                 activityInfo = pm.getActivityInfo(componentName, PackageManager.GET_ACTIVITIES);
             } catch (PackageManager.NameNotFoundException e) {
+                // ignore
             }
         }
         if (activityInfo == null) {
diff --git a/facebook/src/main/java/com/facebook/login/LoginLogger.java b/facebook/src/main/java/com/facebook/login/LoginLogger.java
index d8ca97151..7b31b014f 100644
--- a/facebook/src/main/java/com/facebook/login/LoginLogger.java
+++ b/facebook/src/main/java/com/facebook/login/LoginLogger.java
@@ -41,6 +41,8 @@
     static final String EVENT_PARAM_METHOD_RESULT_SKIPPED = "skipped";
     static final String EVENT_NAME_LOGIN_START = "fb_mobile_login_start";
     static final String EVENT_NAME_LOGIN_COMPLETE = "fb_mobile_login_complete";
+    static final String EVENT_NAME_LOGIN_STATUS_START = "fb_mobile_login_status_start";
+    static final String EVENT_NAME_LOGIN_STATUS_COMPLETE = "fb_mobile_login_status_complete";
     // Note: to ensure stability of column mappings across the four different event types, we
     // prepend a column index to each name, and we log all columns with all events, even if they are
     // empty.
@@ -62,6 +64,7 @@
     static final String EVENT_EXTRAS_DEFAULT_AUDIENCE = "default_audience";
     static final String EVENT_EXTRAS_IS_REAUTHORIZE = "isReauthorize";
     static final String EVENT_EXTRAS_FACEBOOK_VERSION = "facebookVersion";
+    static final String EVENT_EXTRAS_FAILURE = "failure";
 
     static final String FACEBOOK_PACKAGE_NAME = "com.facebook.katana";
 
@@ -201,6 +204,34 @@ public void logAuthorizationMethodNotTried(String authId, String method) {
         appEventsLogger.logSdkEvent(EVENT_NAME_LOGIN_METHOD_NOT_TRIED, null, bundle);
     }
 
+    public void logLoginStatusStart(final String loggerRef) {
+        Bundle bundle = LoginLogger.newAuthorizationLoggingBundle(loggerRef);
+        appEventsLogger.logSdkEvent(EVENT_NAME_LOGIN_STATUS_START, null, bundle);
+    }
+
+    public void logLoginStatusSuccess(final String loggerRef) {
+        Bundle bundle = LoginLogger.newAuthorizationLoggingBundle(loggerRef);
+        bundle.putString(
+            EVENT_PARAM_LOGIN_RESULT,
+            LoginClient.Result.Code.SUCCESS.getLoggingValue());
+        appEventsLogger.logSdkEvent(EVENT_NAME_LOGIN_STATUS_COMPLETE, null, bundle);
+    }
+
+    public void logLoginStatusFailure(final String loggerRef) {
+        Bundle bundle = LoginLogger.newAuthorizationLoggingBundle(loggerRef);
+        bundle.putString(EVENT_PARAM_LOGIN_RESULT, EVENT_EXTRAS_FAILURE);
+        appEventsLogger.logSdkEvent(EVENT_NAME_LOGIN_STATUS_COMPLETE, null, bundle);
+    }
+
+    public void logLoginStatusError(final String loggerRef, final Exception exception) {
+        Bundle bundle = LoginLogger.newAuthorizationLoggingBundle(loggerRef);
+        bundle.putString(
+            EVENT_PARAM_LOGIN_RESULT,
+            LoginClient.Result.Code.ERROR.getLoggingValue());
+        bundle.putString(EVENT_PARAM_ERROR_MESSAGE, exception.toString());
+        appEventsLogger.logSdkEvent(EVENT_NAME_LOGIN_STATUS_COMPLETE, null, bundle);
+    }
+
     public void logUnexpectedError(String eventName, String errorMessage) {
         logUnexpectedError(eventName, errorMessage, "");
     }
diff --git a/facebook/src/main/java/com/facebook/login/LoginManager.java b/facebook/src/main/java/com/facebook/login/LoginManager.java
index a43df449a..db00b44ec 100644
--- a/facebook/src/main/java/com/facebook/login/LoginManager.java
+++ b/facebook/src/main/java/com/facebook/login/LoginManager.java
@@ -24,8 +24,10 @@
 import android.content.ActivityNotFoundException;
 import android.content.Intent;
 import android.content.pm.ResolveInfo;
+import android.net.Uri;
 import android.os.Bundle;
 import android.content.Context;
+import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
 
 import com.facebook.AccessToken;
@@ -36,14 +38,19 @@
 import com.facebook.FacebookException;
 import com.facebook.FacebookSdk;
 import com.facebook.GraphResponse;
+import com.facebook.LoginStatusCallback;
 import com.facebook.Profile;
 import com.facebook.internal.CallbackManagerImpl;
 import com.facebook.internal.FragmentWrapper;
+import com.facebook.internal.NativeProtocol;
+import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
 import com.facebook.appevents.AppEventsConstants;
 
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;
+import java.util.Date;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Map;
@@ -165,6 +172,20 @@ public boolean onActivityResult(int resultCode, Intent data) {
         );
     }
 
+    /**
+     * Unregisters a login callback to the given callback manager.
+     * @param callbackManager The callback manager that will encapsulate the callback.
+     */
+    public void unregisterCallback(
+            final CallbackManager callbackManager) {
+        if (!(callbackManager instanceof CallbackManagerImpl)) {
+            throw new FacebookException("Unexpected CallbackManager, " +
+                    "please use the provided Factory.");
+        }
+        ((CallbackManagerImpl) callbackManager).unregisterCallback(
+                CallbackManagerImpl.RequestCodeOffset.Login.toRequestCode());
+    }
+
     boolean onActivityResult(int resultCode, Intent data) {
         return onActivityResult(resultCode, data, null);
     }
@@ -262,6 +283,38 @@ public void logOut() {
         Profile.setCurrentProfile(null);
     }
 
+    /**
+     * Retrieves the login status for the user. This will return an access token for the app if
+     * a user is logged into the Facebook for Android app on the same device and that user had
+     * previously logged into the app.
+     * If an access token was retrieved then a toast will be shown telling the user that they have
+     * been logged in.
+     * @param context An Android context
+     * @param responseCallback The callback to be called when the request completes
+     */
+    public void retrieveLoginStatus(
+            final Context context,
+            final LoginStatusCallback responseCallback) {
+        retrieveLoginStatus(context, LoginStatusClient.DEFAULT_TOAST_DURATION_MS, responseCallback);
+    }
+
+    /**
+     * Retrieves the login status for the user. This will return an access token for the app if
+     * a user is logged into the Facebook for Android app on the same device and that user had
+     * previously logged into the app.
+     * If an access token was retrieved then a toast will be shown telling the user that they have
+     * been logged in.
+     * @param context An Android context
+     * @param responseCallback The callback to be called when the request completes
+     * @param toastDurationMs The duration to show the success toast in milliseconds
+     */
+    public void retrieveLoginStatus(
+            final Context context,
+            final long toastDurationMs,
+            final LoginStatusCallback responseCallback) {
+        retrieveLoginStatusImpl(context, responseCallback, toastDurationMs);
+    }
+
     /**
      * Logs the user in with the requested read permissions.
      * @param fragment    The android.support.v4.app.Fragment which is starting the login process.
@@ -579,6 +632,136 @@ private void finishLogin(
         }
     }
 
+    private void retrieveLoginStatusImpl(
+            final Context context,
+            final LoginStatusCallback responseCallback,
+            final long toastDurationMs) {
+            final String applicationId = FacebookSdk.getApplicationId();
+            final String loggerRef = UUID.randomUUID().toString();
+        final LoginStatusClient client
+                = new LoginStatusClient(
+                        context,
+                        applicationId,
+                        loggerRef,
+                        FacebookSdk.getGraphApiVersion(),
+                        toastDurationMs);
+
+        final LoginLogger logger = new LoginLogger(context, applicationId);
+
+        final LoginStatusClient.CompletedListener callback =
+            new LoginStatusClient.CompletedListener() {
+                @Override
+                public void completed(Bundle result) {
+                    if (result != null) {
+
+                        final String errorType = result.getString(NativeProtocol.STATUS_ERROR_TYPE);
+                        final String errorDescription =
+                                result.getString(NativeProtocol.STATUS_ERROR_DESCRIPTION);
+                        if (errorType != null) {
+                            handleLoginStatusError(
+                                    errorType,
+                                    errorDescription,
+                                    loggerRef,
+                                    logger,
+                                    responseCallback);
+                        } else {
+                            final String token =
+                                    result.getString(NativeProtocol.EXTRA_ACCESS_TOKEN);
+                            final long expires =
+                                    result.getLong(
+                                            NativeProtocol.EXTRA_EXPIRES_SECONDS_SINCE_EPOCH);
+                            final ArrayList<String> permissions =
+                                    result.getStringArrayList(NativeProtocol.EXTRA_PERMISSIONS);
+                            final String signedRequest =
+                                    result.getString(NativeProtocol.RESULT_ARGS_SIGNED_REQUEST);
+                            String userId = null;
+                            if (!Utility.isNullOrEmpty(signedRequest)) {
+                                userId =
+                                    LoginMethodHandler.getUserIDFromSignedRequest(signedRequest);
+                            }
+
+                            if (!Utility.isNullOrEmpty(token) &&
+                                    permissions != null &&
+                                    !permissions.isEmpty() &&
+                                    !Utility.isNullOrEmpty(userId)) {
+                                final AccessToken accessToken = new AccessToken(
+                                        token,
+                                        applicationId,
+                                        userId,
+                                        permissions,
+                                        null,
+                                        null,
+                                        new Date(expires),
+                                        null);
+                                AccessToken.setCurrentAccessToken(accessToken);
+
+                                final Profile profile = getProfileFromBundle(result);
+                                if (profile != null) {
+                                    Profile.setCurrentProfile(profile);
+                                } else {
+                                    Profile.fetchProfileForCurrentAccessToken();
+                                }
+
+                                logger.logLoginStatusSuccess(loggerRef);
+                                responseCallback.onCompleted(accessToken);
+                            } else {
+                                logger.logLoginStatusFailure(loggerRef);
+                                responseCallback.onFailure();
+                            }
+                        }
+                    } else {
+                        logger.logLoginStatusFailure(loggerRef);
+                        responseCallback.onFailure();
+                    }
+                }
+            };
+
+        client.setCompletedListener(callback);
+        logger.logLoginStatusStart(loggerRef);
+        if (!client.start()) {
+            logger.logLoginStatusFailure(loggerRef);
+            responseCallback.onFailure();
+        };
+    }
+
+    @Nullable
+    private static Profile getProfileFromBundle(Bundle result) {
+        final String name = result.getString(NativeProtocol.EXTRA_ARGS_PROFILE_NAME);
+        final String firstName = result.getString(NativeProtocol.EXTRA_ARGS_PROFILE_FIRST_NAME);
+        final String middleName = result.getString(NativeProtocol.EXTRA_ARGS_PROFILE_MIDDLE_NAME);
+        final String lastName = result.getString(NativeProtocol.EXTRA_ARGS_PROFILE_LAST_NAME);
+        final String link = result.getString(NativeProtocol.EXTRA_ARGS_PROFILE_LINK);
+        final String appScopedUserId = result.getString(NativeProtocol.EXTRA_ARGS_PROFILE_USER_ID);
+
+        if (name != null &&
+            firstName != null &&
+            middleName != null &&
+            lastName != null &&
+            link != null &&
+            appScopedUserId != null) {
+
+            return new Profile(
+                    appScopedUserId,
+                    firstName,
+                    middleName,
+                    lastName,
+                    name,
+                    Uri.parse(link));
+        }
+        return null;
+    }
+
+    private static void handleLoginStatusError(
+            final String errorType,
+            final String errorDescription,
+            final String loggerRef,
+            final LoginLogger logger,
+            final LoginStatusCallback responseCallback) {
+        final Exception exception = new FacebookException(errorType + ": " + errorDescription);
+        logger.logLoginStatusError(loggerRef, exception);
+        responseCallback.onError(exception);
+    }
+
     private static class ActivityStartActivityDelegate implements StartActivityDelegate {
         private final Activity activity;
 
@@ -618,7 +801,7 @@ public Activity getActivityContext() {
     }
 
     private static class LoginLoggerHolder {
-        private static volatile LoginLogger logger;
+        private static LoginLogger logger;
 
         private static synchronized LoginLogger getLogger(Context context) {
             context = context != null ? context : FacebookSdk.getApplicationContext();
diff --git a/facebook/src/main/java/com/facebook/login/LoginMethodHandler.java b/facebook/src/main/java/com/facebook/login/LoginMethodHandler.java
index 607dab2ab..57ddc6f49 100644
--- a/facebook/src/main/java/com/facebook/login/LoginMethodHandler.java
+++ b/facebook/src/main/java/com/facebook/login/LoginMethodHandler.java
@@ -184,7 +184,7 @@ public static AccessToken createAccessTokenFromWebBundle(
                 new Date());
     }
 
-    private static String getUserIDFromSignedRequest(
+    static String getUserIDFromSignedRequest(
             String signedRequest) throws FacebookException {
         if (signedRequest == null || signedRequest.isEmpty()) {
             throw new FacebookException(
diff --git a/facebook/src/main/java/com/facebook/login/LoginStatusClient.java b/facebook/src/main/java/com/facebook/login/LoginStatusClient.java
new file mode 100644
index 000000000..3d23b0ffa
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/login/LoginStatusClient.java
@@ -0,0 +1,58 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.login;
+
+import android.content.Context;
+import android.os.Bundle;
+
+import com.facebook.internal.NativeProtocol;
+import com.facebook.internal.PlatformServiceClient;
+
+final class LoginStatusClient extends PlatformServiceClient {
+
+    static final long DEFAULT_TOAST_DURATION_MS = 5000L;
+    private final String loggerRef;
+    private final String graphApiVersion;
+    private final long toastDurationMs;
+
+    LoginStatusClient(final Context context,
+                      final String applicationId,
+                      final String loggerRef,
+                      final String graphApiVersion,
+                      final long toastDurationMs) {
+        super(
+                context,
+                NativeProtocol.MESSAGE_GET_LOGIN_STATUS_REQUEST,
+                NativeProtocol.MESSAGE_GET_LOGIN_STATUS_REPLY,
+                NativeProtocol.PROTOCOL_VERSION_20170411,
+                applicationId);
+        this.loggerRef = loggerRef;
+        this.graphApiVersion = graphApiVersion;
+        this.toastDurationMs = toastDurationMs;
+    }
+
+    @Override
+    protected void populateRequestBundle(Bundle data) {
+        data.putString(NativeProtocol.EXTRA_LOGGER_REF, loggerRef);
+        data.putString(NativeProtocol.EXTRA_GRAPH_API_VERSION, graphApiVersion);
+        data.putLong(NativeProtocol.EXTRA_TOAST_DURATION_MS, toastDurationMs);
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/login/widget/LoginButton.java b/facebook/src/main/java/com/facebook/login/widget/LoginButton.java
index bba109f0a..bacfa4b60 100644
--- a/facebook/src/main/java/com/facebook/login/widget/LoginButton.java
+++ b/facebook/src/main/java/com/facebook/login/widget/LoginButton.java
@@ -456,6 +456,15 @@ public void registerCallback(
         getLoginManager().registerCallback(callbackManager, callback);
     }
 
+    /**
+     * Unregisters a login callback to the given callback manager.
+     *
+     * @param callbackManager The callback manager that will encapsulate the callback.
+     */
+    public void unregisterCallback(final CallbackManager callbackManager) {
+        getLoginManager().unregisterCallback(callbackManager);
+    }
+
     @Override
     protected void onAttachedToWindow() {
         super.onAttachedToWindow();
diff --git a/facebook/src/main/java/com/facebook/login/widget/ProfilePictureView.java b/facebook/src/main/java/com/facebook/login/widget/ProfilePictureView.java
index b92c39107..d2ca537d8 100644
--- a/facebook/src/main/java/com/facebook/login/widget/ProfilePictureView.java
+++ b/facebook/src/main/java/com/facebook/login/widget/ProfilePictureView.java
@@ -322,7 +322,6 @@ protected Parcelable onSaveInstanceState() {
         instanceState.putString(PROFILE_ID_KEY, profileId);
         instanceState.putInt(PRESET_SIZE_KEY, presetSizeType);
         instanceState.putBoolean(IS_CROPPED_KEY, isCropped);
-        instanceState.putParcelable(BITMAP_KEY, imageContents);
         instanceState.putInt(BITMAP_WIDTH_KEY, queryWidth);
         instanceState.putInt(BITMAP_HEIGHT_KEY, queryHeight);
         instanceState.putBoolean(PENDING_REFRESH_KEY, lastRequest != null);
@@ -348,11 +347,7 @@ protected void onRestoreInstanceState(Parcelable state) {
             queryWidth = instanceState.getInt(BITMAP_WIDTH_KEY);
             queryHeight = instanceState.getInt(BITMAP_HEIGHT_KEY);
 
-            setImageBitmap((Bitmap)instanceState.getParcelable(BITMAP_KEY));
-
-            if (instanceState.getBoolean(PENDING_REFRESH_KEY)) {
-                refreshImage(true);
-            }
+            refreshImage(true);
         }
     }
 
diff --git a/facebook/src/main/java/com/facebook/messenger/MessengerUtils.java b/facebook/src/main/java/com/facebook/messenger/MessengerUtils.java
index af847c14d..a5b63ee24 100644
--- a/facebook/src/main/java/com/facebook/messenger/MessengerUtils.java
+++ b/facebook/src/main/java/com/facebook/messenger/MessengerUtils.java
@@ -31,6 +31,7 @@
 import android.os.Bundle;
 
 import com.facebook.FacebookSdk;
+import com.facebook.internal.FacebookSignatureValidator;
 
 import java.util.ArrayList;
 import java.util.Collections;
@@ -237,12 +238,7 @@ public static void finishShareToMessenger(
    * @return whether any version of messenger is installed
    */
   public static boolean hasMessengerInstalled(Context context) {
-    try {
-      context.getPackageManager().getPackageInfo(PACKAGE_NAME, 0);
-      return true;
-    } catch (PackageManager.NameNotFoundException e) {
-      return false;
-    }
+    return FacebookSignatureValidator.validateSignature(context, PACKAGE_NAME);
   }
 
   /**
diff --git a/facebook/src/main/java/com/facebook/places/PlaceManager.java b/facebook/src/main/java/com/facebook/places/PlaceManager.java
new file mode 100644
index 000000000..311140acb
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/PlaceManager.java
@@ -0,0 +1,510 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places;
+
+import android.location.Location;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.text.TextUtils;
+
+import com.facebook.AccessToken;
+import com.facebook.FacebookException;
+import com.facebook.GraphRequest;
+import com.facebook.HttpMethod;
+import com.facebook.internal.Utility;
+import com.facebook.places.internal.LocationPackageManager;
+import com.facebook.places.internal.LocationPackageRequestParams;
+import com.facebook.places.internal.ScannerException;
+import com.facebook.places.internal.BluetoothScanResult;
+import com.facebook.places.model.CurrentPlaceFeedbackRequestParams;
+import com.facebook.places.internal.LocationPackage;
+import com.facebook.places.model.PlaceInfoRequestParams;
+import com.facebook.places.model.PlaceSearchRequestParams;
+import com.facebook.places.model.CurrentPlaceRequestParams;
+import com.facebook.places.model.CurrentPlaceRequestParams.ConfidenceLevel;
+import com.facebook.places.internal.WifiScanResult;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.List;
+import java.util.Locale;
+import java.util.Set;
+
+/**
+ * Provides an interface to search and query the Places Graph.
+ * Supports querying the end user's' current place, searching nearby places, and fetching
+ * place information details.
+ */
+public class PlaceManager {
+
+    private static final String SEARCH = "search";
+    private static final String CURRENT_PLACE_RESULTS = "current_place/results";
+    private static final String CURRENT_PLACE_FEEDBACK = "current_place/feedback";
+
+    private static final String PARAM_ACCESS_POINTS = "access_points";
+    private static final String PARAM_ACCURACY = "accuracy";
+    private static final String PARAM_ALTITUDE = "altitude";
+    private static final String PARAM_BLUETOOTH = "bluetooth";
+    private static final String PARAM_CATEGORIES = "categories";
+    private static final String PARAM_CENTER = "center";
+    private static final String PARAM_COORDINATES = "coordinates";
+    private static final String PARAM_CURRENT_CONNECTION = "current_connection";
+    private static final String PARAM_DISTANCE = "distance";
+    private static final String PARAM_ENABLED = "enabled";
+    private static final String PARAM_FIELDS = "fields";
+    private static final String PARAM_FREQUENCY = "frequency";
+    private static final String PARAM_HEADING = "heading";
+    private static final String PARAM_LATITUDE = "latitude";
+    private static final String PARAM_LIMIT = "limit";
+    private static final String PARAM_LONGITUDE = "longitude";
+    private static final String PARAM_MAC_ADDRESS = "mac_address";
+    private static final String PARAM_MIN_CONFIDENCE_LEVEL = "min_confidence_level";
+    private static final String PARAM_PAYLOAD = "payload";
+    private static final String PARAM_PLACE_ID = "place_id";
+    private static final String PARAM_Q = "q";
+    private static final String PARAM_RSSI = "rssi";
+    private static final String PARAM_SCANS = "scans";
+    private static final String PARAM_SIGNAL_STRENGTH = "signal_strength";
+    private static final String PARAM_SPEED = "speed";
+    private static final String PARAM_SSID = "ssid";
+    private static final String PARAM_SUMMARY = "summary";
+    private static final String PARAM_TRACKING = "tracking";
+    private static final String PARAM_TYPE = "type";
+    private static final String PARAM_WAS_HERE = "was_here";
+    private static final String PARAM_WIFI = "wifi";
+
+    /**
+     * Describes an error that occurred while retrieving the current location.
+     */
+    public enum LocationError {
+        /**
+         * The location permissions are denied. The SDK requires permissions
+         * {@code "android.permission.ACCESS_FINE_LOCATION"} or
+         * {@code "android.permission.ACCESS_COARSE_LOCATION"} to retrieve the current location.
+         */
+        LOCATION_PERMISSION_DENIED,
+        /**
+         * The location could not be retrieved because location services are not enabled.
+         */
+        LOCATION_SERVICES_DISABLED,
+        /**
+         * The location could be retrieved within the allotted amount of time.
+         */
+        LOCATION_TIMEOUT,
+        /**
+         * An unknown error occurred.
+         */
+        UNKNOWN_ERROR,
+    }
+
+    /**
+     * Callback invoked when a request has been constructed and is ready to be executed.
+     * To be used with {@link PlaceManager#newCurrentPlaceRequest(CurrentPlaceRequestParams,
+     * OnRequestReadyCallback)} and {@link PlaceManager#newPlaceSearchRequest(
+     * PlaceSearchRequestParams, OnRequestReadyCallback)}.
+     */
+    public interface OnRequestReadyCallback {
+
+        /**
+         * Method invoked when the request can't be generated due to an error retrieving the current
+         * device location.
+         * @param error the error description
+         */
+        void onLocationError(LocationError error);
+
+        /**
+         * Method invoked when the provided {@code GraphRequest} is ready to be executed.
+         * Set a callback on it to handle the response using {@code setCallback}, and then
+         * execute the request.
+         *
+         * @param graphRequest the request that's ready to be executed.
+         */
+        void onRequestReady(GraphRequest graphRequest);
+    }
+
+    private PlaceManager() {
+        // No public constructor required as all methods are static
+    }
+
+    /**
+     * Creates a new place search request centered around the current device location.
+     * The SDK will retrieve the current device location using
+     * {@link android.location.LocationManager}
+     * <p>
+     * With the Places Graph, you can search for millions of places worldwide and retrieve
+     * information like number of checkins, ratings, and addresses all with one request.
+     * <p>
+     * The specified {@link OnRequestReadyCallback} will be invoked once the request has been
+     * generated and is ready to be executed.
+     *
+     * @param requestParams the request parameters. See {@link PlaceSearchRequestParams}
+     * @param callback the {@link OnRequestReadyCallback} invoked when the {@link GraphRequest}
+     *                 has been generated and is ready to be executed
+     */
+    public static void newPlaceSearchRequest(
+            final PlaceSearchRequestParams requestParams,
+            final OnRequestReadyCallback callback) {
+
+        LocationPackageRequestParams.Builder builder = new LocationPackageRequestParams.Builder();
+        builder.setWifiScanEnabled(false);
+        builder.setBluetoothScanEnabled(false);
+
+        LocationPackageManager.requestLocationPackage(
+                builder.build(),
+                new LocationPackageManager.Listener() {
+            @Override
+            public void onLocationPackage(LocationPackage locationPackage) {
+                if (locationPackage.locationError == null) {
+                    GraphRequest graphRequest = newPlaceSearchRequestForLocation(
+                            requestParams,
+                            locationPackage.location);
+                    callback.onRequestReady(graphRequest);
+                } else {
+                    callback.onLocationError(getLocationError(locationPackage.locationError));
+                }
+            }
+        });
+    }
+
+    /**
+     * Creates a new place search request centered around the specified location.
+     * If the location provided is null, the search will be completed globally.
+     * At least a location or a search text must be provided.
+     * <p>
+     * With the Places Graph, you can search for millions of places worldwide and retrieve
+     * information like number of checkins, ratings, and addresses all with one request.
+     * <p>
+     * Returns a new GraphRequest that is configured to perform a place search.
+     *
+     * @param requestParams the request parameters. See {@link PlaceSearchRequestParams}
+     * @param location the {@link Location} around which to search
+     * @return a {@link GraphRequest} that is ready to be executed
+     * @throws FacebookException thrown if neither {@code location} nor {@code searchText}
+     * is specified
+     */
+    public static GraphRequest newPlaceSearchRequestForLocation(
+            PlaceSearchRequestParams requestParams,
+            Location location) {
+
+        String searchText = requestParams.getSearchText();
+        if (location == null && searchText == null) {
+            throw new FacebookException("Either location or searchText must be specified.");
+        }
+        int limit = requestParams.getLimit();
+        Set<String> fields = requestParams.getFields();
+        Set<String> categories = requestParams.getCategories();
+
+        Bundle parameters = new Bundle(7);
+        parameters.putString(PARAM_TYPE, "place");
+
+        if (location != null) {
+            parameters.putString(
+                    PARAM_CENTER,
+                    String.format(
+                            Locale.US,
+                            "%f,%f",
+                            location.getLatitude(),
+                            location.getLongitude()));
+
+            int distance = requestParams.getDistance();
+            if (distance > 0) {
+                parameters.putInt(PARAM_DISTANCE, distance);
+            }
+        }
+        if (limit > 0) {
+            parameters.putInt(PARAM_LIMIT, limit);
+        }
+        if (!Utility.isNullOrEmpty(searchText)) {
+            parameters.putString(PARAM_Q, searchText);
+        }
+        if (categories != null && !categories.isEmpty()) {
+            JSONArray array = new JSONArray();
+            for (String category : categories) {
+                array.put(category);
+            }
+            parameters.putString(PARAM_CATEGORIES, array.toString());
+        }
+        if (fields != null && !fields.isEmpty()) {
+            parameters.putString(PARAM_FIELDS, TextUtils.join(",", fields));
+        }
+
+        return new GraphRequest(
+                AccessToken.getCurrentAccessToken(),
+                SEARCH,
+                parameters,
+                HttpMethod.GET);
+    }
+
+    /**
+     * Creates a new place info request.
+     * <p>
+     * The Places Graph exposes a rich set of information about places.
+     * If the request is authenticated with a user access token,
+     * you can also obtain social information such as the number of friends who have liked and
+     * checked into the PlaceFields. The specific friends are also available if they have
+     * authenticated the app with the user_tagged_places and user_likes permissions.
+     * <p>
+     * Returns a new {@link GraphRequest} that is configured to perform a place info request.
+     *
+     * @param requestParams the request parameters, a {@link PlaceInfoRequestParams#getPlaceId()}
+     *                      must be specified.
+     * @return a {@link GraphRequest} that is ready to be executed
+     * @throws FacebookException thrown if a {@link PlaceInfoRequestParams#getPlaceId()} is not
+     * specified.
+     */
+    public static GraphRequest newPlaceInfoRequest(
+            PlaceInfoRequestParams requestParams) {
+
+        String placeId = requestParams.getPlaceId();
+        if (placeId == null) {
+            throw new FacebookException("placeId must be specified.");
+        }
+
+        Bundle parameters = new Bundle(1);
+
+        Set<String> fields = requestParams.getFields();
+        if (fields != null && !fields.isEmpty()) {
+            parameters.putString(PARAM_FIELDS, TextUtils.join(",", fields));
+        }
+
+        return new GraphRequest(
+                AccessToken.getCurrentAccessToken(),
+                placeId,
+                parameters,
+                HttpMethod.GET);
+    }
+
+    /**
+     * Creates a new current place request.
+     * <p>
+     * The current place request estimates the place where the user is currently located.
+     * The response contains a list of places and their associated confidence levels.
+     * <p>
+     * If a location is not specified in {@link CurrentPlaceRequestParams}, then the SDK
+     * retrieves the current location using {@link android.location.LocationManager}.
+     *
+     * @param requestParams the request parameters. See {@link CurrentPlaceRequestParams}
+     * @param callback a {@link OnRequestReadyCallback} that is invoked when the
+     * {@link GraphRequest} has been created and is ready to be executed.
+     */
+    public static void newCurrentPlaceRequest(
+            final CurrentPlaceRequestParams requestParams,
+            final OnRequestReadyCallback callback) {
+
+        Location location = requestParams.getLocation();
+        CurrentPlaceRequestParams.ScanMode scanMode = requestParams.getScanMode();
+
+        LocationPackageRequestParams.Builder builder =
+                new LocationPackageRequestParams.Builder();
+
+        // Don't scan for a location if one is provided.
+        builder.setLocationScanEnabled(location == null);
+
+        if (scanMode != null && scanMode == CurrentPlaceRequestParams.ScanMode.LOW_LATENCY) {
+            // In low-latency mode, avoid active Wi-Fi scanning which can takes
+            // several seconds.
+            builder.setWifiActiveScanAllowed(false);
+        }
+
+        LocationPackageManager.requestLocationPackage(
+                builder.build(),
+                new LocationPackageManager.Listener() {
+                    @Override
+                    public void onLocationPackage(LocationPackage locationPackage) {
+                        if (locationPackage.locationError != null) {
+                            callback.onLocationError(
+                                    getLocationError(locationPackage.locationError));
+                        } else {
+                            Bundle parameters = getCurrentPlaceParameters(
+                                    requestParams,
+                                    locationPackage);
+
+                            GraphRequest graphRequest = new GraphRequest(
+                                    AccessToken.getCurrentAccessToken(),
+                                    CURRENT_PLACE_RESULTS,
+                                    parameters,
+                                    HttpMethod.GET);
+                            callback.onRequestReady(graphRequest);
+                        }
+                    }
+                });
+    }
+
+    /**
+     * Creates a new current place feedback request.
+     * <p>
+     * This request allows users to provide feedback on the accuracy of the current place
+     * estimate. This information is used to improve the accuracy of our results.
+     * <p>
+     * Returns a new GraphRequest that is configured to perform a current place feedback request.
+     *
+     * @param requestParams the request parameters. See {@link CurrentPlaceFeedbackRequestParams}
+     * @return a {@link GraphRequest} that is ready to be executed
+     * @throws FacebookException thrown if parameters
+     * {@link CurrentPlaceFeedbackRequestParams#getPlaceId()},
+     * {@link CurrentPlaceFeedbackRequestParams#getTracking()}, or
+     * {@link CurrentPlaceFeedbackRequestParams#wasHere()} are missing
+     */
+    public static GraphRequest newCurrentPlaceFeedbackRequest(
+            CurrentPlaceFeedbackRequestParams requestParams) {
+
+        String placeId = requestParams.getPlaceId();
+        String tracking = requestParams.getTracking();
+        Boolean wasHere = requestParams.wasHere();
+
+        if (tracking == null || placeId == null || wasHere == null) {
+            throw new FacebookException("tracking, placeId and wasHere must be specified.");
+        }
+
+        Bundle parameters = new Bundle(3);
+        parameters.putString(PARAM_TRACKING, tracking);
+        parameters.putString(PARAM_PLACE_ID, placeId);
+        parameters.putBoolean(PARAM_WAS_HERE, wasHere);
+
+        return new GraphRequest(
+          AccessToken.getCurrentAccessToken(),
+          CURRENT_PLACE_FEEDBACK,
+          parameters,
+          HttpMethod.POST);
+    }
+
+    private static Bundle getCurrentPlaceParameters(
+            CurrentPlaceRequestParams request,
+            LocationPackage locationPackage) throws FacebookException {
+
+        if (request == null) {
+            throw new FacebookException("Request and location must be specified.");
+        }
+        if (locationPackage == null) {
+            locationPackage = new LocationPackage();
+        }
+        if (locationPackage.location == null) {
+            locationPackage.location = request.getLocation();
+        }
+        if (locationPackage.location == null) {
+            throw new FacebookException("A location must be specified");
+        }
+
+        try {
+            Bundle parameters = new Bundle(6);
+            parameters.putString(PARAM_SUMMARY, PARAM_TRACKING);
+            int limit = request.getLimit();
+            if (limit > 0) {
+                parameters.putInt(PARAM_LIMIT, limit);
+            }
+            Set<String> fields = request.getFields();
+            if (fields != null && !fields.isEmpty()) {
+                parameters.putString(PARAM_FIELDS, TextUtils.join(",", fields));
+            }
+
+            // Coordinates.
+            Location location = locationPackage.location;
+            JSONObject coordinates = new JSONObject();
+            coordinates.put(PARAM_LATITUDE, location.getLatitude());
+            coordinates.put(PARAM_LONGITUDE, location.getLongitude());
+            if (location.hasAccuracy()) {
+                coordinates.put(PARAM_ACCURACY, location.getAccuracy());
+            }
+            if (location.hasAltitude()) {
+                coordinates.put(PARAM_ALTITUDE, location.getAltitude());
+            }
+            if (location.hasBearing()) {
+                coordinates.put(PARAM_HEADING, location.getBearing());
+            }
+            if (location.hasSpeed()) {
+                coordinates.put(PARAM_SPEED, location.getSpeed());
+            }
+            parameters.putString(PARAM_COORDINATES, coordinates.toString());
+
+            // min confidence level
+            ConfidenceLevel minConfidenceLevel = request.getMinConfidenceLevel();
+            if (minConfidenceLevel == ConfidenceLevel.LOW
+                    || minConfidenceLevel == ConfidenceLevel.MEDIUM
+                    || minConfidenceLevel == ConfidenceLevel.HIGH) {
+                String minConfidenceLevelString =
+                        minConfidenceLevel.toString().toLowerCase(Locale.US);
+                parameters.putString(PARAM_MIN_CONFIDENCE_LEVEL, minConfidenceLevelString);
+            }
+
+            if (locationPackage != null) {
+                // wifi
+                JSONObject wifi = new JSONObject();
+                wifi.put(PARAM_ENABLED, locationPackage.isWifiScanningEnabled);
+                WifiScanResult connectedWifi = locationPackage.connectedWifi;
+                if (connectedWifi != null) {
+                    wifi.put(PARAM_CURRENT_CONNECTION, getWifiScanJson(connectedWifi));
+                }
+                List<WifiScanResult> ambientWifi = locationPackage.ambientWifi;
+                if (ambientWifi != null) {
+                    JSONArray array = new JSONArray();
+                    for (WifiScanResult wifiScanResult : ambientWifi) {
+                        array.put(getWifiScanJson(wifiScanResult));
+                    }
+                    wifi.put(PARAM_ACCESS_POINTS, array);
+                }
+                parameters.putString(PARAM_WIFI, wifi.toString());
+
+                // bluetooth
+                JSONObject bluetooth = new JSONObject();
+                bluetooth.put(PARAM_ENABLED, locationPackage.isBluetoothScanningEnabled);
+                List<BluetoothScanResult> bluetoothScanResults =
+                        locationPackage.ambientBluetoothLe;
+                if (bluetoothScanResults != null) {
+                    JSONArray array = new JSONArray();
+                    for (BluetoothScanResult bluetoothScanResult : bluetoothScanResults) {
+                        JSONObject bluetoothData = new JSONObject();
+                        bluetoothData.put(PARAM_PAYLOAD, bluetoothScanResult.payload);
+                        bluetoothData.put(PARAM_RSSI, bluetoothScanResult.rssi);
+                        array.put(bluetoothData);
+                    }
+                    bluetooth.put(PARAM_SCANS, array);
+                }
+                parameters.putString(PARAM_BLUETOOTH, bluetooth.toString());
+            }
+
+            return parameters;
+        } catch (JSONException ex) {
+            throw new FacebookException(ex);
+        }
+    }
+
+    private static JSONObject getWifiScanJson(WifiScanResult wifiScanResult) throws JSONException {
+        JSONObject wifiData = new JSONObject();
+        wifiData.put(PARAM_MAC_ADDRESS, wifiScanResult.bssid);
+        wifiData.put(PARAM_SSID, wifiScanResult.ssid);
+        wifiData.put(PARAM_SIGNAL_STRENGTH, wifiScanResult.rssi);
+        wifiData.put(PARAM_FREQUENCY, wifiScanResult.frequency);
+        return wifiData;
+    }
+
+    private static LocationError getLocationError(ScannerException.Type type) {
+        if (type == ScannerException.Type.PERMISSION_DENIED) {
+            return LocationError.LOCATION_PERMISSION_DENIED;
+        } else if (type == ScannerException.Type.DISABLED) {
+            return LocationError.LOCATION_SERVICES_DISABLED;
+        } else if (type == ScannerException.Type.TIMEOUT) {
+            return LocationError.LOCATION_TIMEOUT;
+        }
+        return LocationError.UNKNOWN_ERROR;
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/places/internal/BleScanner.java b/facebook/src/main/java/com/facebook/places/internal/BleScanner.java
new file mode 100644
index 000000000..35ccf597e
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/internal/BleScanner.java
@@ -0,0 +1,41 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import java.util.List;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public interface BleScanner {
+
+    void initAndCheckEligibility() throws ScannerException;
+
+    void startScanning() throws ScannerException;
+
+    void stopScanning() throws ScannerException;
+
+    int getErrorCode();
+
+    List<BluetoothScanResult> getScanResults();
+}
diff --git a/facebook/src/main/java/com/facebook/places/internal/BleScannerImpl.java b/facebook/src/main/java/com/facebook/places/internal/BleScannerImpl.java
new file mode 100644
index 000000000..6029d43c4
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/internal/BleScannerImpl.java
@@ -0,0 +1,272 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import android.annotation.TargetApi;
+import android.bluetooth.BluetoothAdapter;
+import android.bluetooth.le.BluetoothLeScanner;
+import android.bluetooth.le.ScanCallback;
+import android.bluetooth.le.ScanRecord;
+import android.bluetooth.le.ScanResult;
+import android.bluetooth.le.ScanSettings;
+import android.content.Context;
+import android.os.Build;
+import android.os.Handler;
+import android.os.Looper;
+import android.util.Log;
+
+import com.facebook.FacebookSdk;
+import com.facebook.internal.Validate;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.List;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+@TargetApi(21)
+@SuppressWarnings("MissingPermission")
+public class BleScannerImpl implements BleScanner {
+
+    private static final String TAG = "BleScannerImpl";
+
+    private BluetoothAdapter bluetoothAdapter;
+    private BluetoothLeScanner bluetoothLeScanner;
+    private LocationPackageRequestParams params;
+    private int errorCode;
+    private final List<BluetoothScanResult> scanResults = new ArrayList<>();
+    private boolean isScanInProgress;
+    private ScanCallBackImpl scanCallBack;
+    private Context context;
+
+    BleScannerImpl(Context context, LocationPackageRequestParams params) {
+        this.context = context;
+        this.params = params;
+    }
+
+    @Override
+    public synchronized void initAndCheckEligibility() throws ScannerException {
+        if (Build.VERSION.SDK_INT < ScannerFactory.OS_VERSION_LOLLIPOP) {
+            throw new ScannerException(ScannerException.Type.NOT_SUPPORTED);
+        }
+        if (!Validate.hasBluetoothPermission(context)) {
+            throw new ScannerException(ScannerException.Type.PERMISSION_DENIED);
+        }
+        if (!Validate.hasLocationPermission(context)) {
+            throw new ScannerException(ScannerException.Type.PERMISSION_DENIED);
+        }
+        bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
+        if (bluetoothAdapter == null || !bluetoothAdapter.isEnabled()) {
+            throw new ScannerException(ScannerException.Type.DISABLED);
+        }
+        bluetoothLeScanner = bluetoothAdapter.getBluetoothLeScanner();
+        if (bluetoothLeScanner == null) {
+            throw new ScannerException(ScannerException.Type.UNKNOWN_ERROR);
+        }
+    }
+
+    @Override
+    public synchronized void startScanning() throws ScannerException {
+        if (isScanInProgress) {
+            throw new ScannerException(ScannerException.Type.SCAN_ALREADY_IN_PROGRESS);
+        }
+        scanCallBack = new ScanCallBackImpl();
+        isScanInProgress = true;
+        errorCode = 0;
+
+        synchronized (scanResults) {
+            scanResults.clear();
+        }
+
+        if (bluetoothLeScanner == null) {
+            throw new ScannerException(ScannerException.Type.UNKNOWN_ERROR);
+        }
+
+        try {
+            ScanSettings.Builder builder = new ScanSettings.Builder();
+            builder.setScanMode(ScanSettings.SCAN_MODE_LOW_LATENCY);
+            builder.setReportDelay(0);
+            bluetoothLeScanner.startScan(null, builder.build(), scanCallBack);
+            isScanInProgress = true;
+        } catch (Exception e) {
+            throw new ScannerException(ScannerException.Type.UNKNOWN_ERROR);
+        }
+    }
+
+    @Override
+    public synchronized void stopScanning() {
+        bluetoothLeScanner.flushPendingScanResults(scanCallBack);
+        bluetoothLeScanner.stopScan(scanCallBack);
+        waitForMainLooper(params.getBluetoothFlushResultsTimeoutMs());
+        isScanInProgress = false;
+    }
+
+    private void waitForMainLooper(long maxWaitTimeoutMs) {
+        try {
+            // wait until all callbacks queued in the MainLooper have been processed.
+            final Object lock = new Object();
+            synchronized (lock) {
+
+                Handler handler = new Handler(Looper.getMainLooper());
+                handler.post(new Runnable() {
+                    @Override
+                    public void run() {
+                        try {
+                            synchronized (lock) {
+                                lock.notify();
+                            }
+                        } catch (Exception e) {
+                            logException("Exception waiting for main looper", e);
+                        }
+                    }
+                });
+
+                lock.wait(maxWaitTimeoutMs);
+            }
+        } catch (Exception e) {
+            logException("Exception waiting for main looper", e);
+        }
+    }
+
+    @Override
+    public synchronized int getErrorCode() {
+        return errorCode;
+    }
+
+    @Override
+    public synchronized List<BluetoothScanResult> getScanResults() {
+        List<BluetoothScanResult> output;
+        synchronized (scanResults) {
+            int maxSanResults = params.getBluetoothMaxScanResults();
+            if (scanResults.size() > maxSanResults) {
+                // Keep the scan results with strongest rssi
+                output = new ArrayList<>(maxSanResults);
+                Comparator<BluetoothScanResult> comparator = new Comparator<BluetoothScanResult>() {
+                    @Override
+                    public int compare(BluetoothScanResult lhs, BluetoothScanResult rhs) {
+                        return rhs.rssi - lhs.rssi;
+                    }
+                };
+                Collections.sort(scanResults, comparator);
+                output.addAll(scanResults.subList(0, maxSanResults));
+            } else {
+                output = new ArrayList<>(scanResults.size());
+                output.addAll(scanResults);
+            }
+        }
+        return output;
+    }
+
+    private class ScanCallBackImpl extends ScanCallback {
+
+        @Override
+        public void onScanFailed(int errorCode) {
+            super.onScanFailed(errorCode);
+            BleScannerImpl.this.errorCode = errorCode;
+        }
+
+        @Override
+        public void onBatchScanResults(List<ScanResult> results) {
+            super.onBatchScanResults(results);
+            try {
+                synchronized (scanResults) {
+                    for (ScanResult result : results) {
+                        BluetoothScanResult bluetoothScanResult = newBluetoothScanResult(result);
+                        if (bluetoothScanResult != null) {
+                            scanResults.add(bluetoothScanResult);
+                        }
+                    }
+                }
+            } catch (Exception e) {
+                logException("Exception in ble scan callback", e);
+            }
+        }
+
+        @Override
+        public void onScanResult(int callbackType, ScanResult result) {
+            super.onScanResult(callbackType, result);
+            try {
+                synchronized (scanResults) {
+                    BluetoothScanResult bluetoothScanResult = newBluetoothScanResult(result);
+                    if (bluetoothScanResult != null) {
+                        scanResults.add(bluetoothScanResult);
+                    }
+                }
+            } catch (Exception e) {
+                logException("Exception in ble scan callback", e);
+            }
+        }
+    }
+
+    private static BluetoothScanResult newBluetoothScanResult(ScanResult scanResult) {
+        ScanRecord scanRecord = scanResult.getScanRecord();
+        String payload = formatPayload(scanRecord.getBytes());
+        int rssi = scanResult.getRssi();
+        BluetoothScanResult bluetoothScanResult = new BluetoothScanResult(payload, rssi);
+        return bluetoothScanResult;
+    }
+
+    private static String formatPayload(byte[] payload) {
+        if (payload == null || payload.length == 0) {
+            return null;
+        }
+        int payloadLength = getPayloadLength(payload);
+        return toHexString(payload, payloadLength);
+    }
+
+    private static int getPayloadLength(byte[] payload) {
+        int offset = 0;
+        while (offset < payload.length) {
+            byte length = payload[offset];
+            if (length == 0) {
+                // the end of the content has been reached
+                return offset;
+            } else if (length < 0) {
+                // unexpected, take the full payload
+                return payload.length;
+            }
+            offset += 1 + length;
+        }
+        return payload.length;
+    }
+
+    private static String toHexString(byte[] bytes, int length) {
+        StringBuffer sb = new StringBuffer();
+        if (length < 0 || length > bytes.length) {
+            length = bytes.length;
+        }
+        for (int i = 0; i < length; i++) {
+            byte b = bytes[i];
+            sb.append(String.format("%02x", b));
+        }
+        return sb.toString();
+    }
+
+    private static void logException(String message, Exception e) {
+        if (FacebookSdk.isDebugEnabled()) {
+            Log.e(TAG, message, e);
+        }
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/places/internal/BleScannerLegacy.java b/facebook/src/main/java/com/facebook/places/internal/BleScannerLegacy.java
new file mode 100644
index 000000000..40d104b1b
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/internal/BleScannerLegacy.java
@@ -0,0 +1,60 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import java.util.List;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public class BleScannerLegacy implements BleScanner {
+
+    BleScannerLegacy() {
+
+    }
+
+    @Override
+    public void initAndCheckEligibility() throws ScannerException {
+        throw new ScannerException(ScannerException.Type.NOT_SUPPORTED);
+    }
+
+    @Override
+    public void startScanning() throws ScannerException {
+        throw new ScannerException(ScannerException.Type.NOT_SUPPORTED);
+    }
+
+    @Override
+    public void stopScanning() throws ScannerException {
+        throw new ScannerException(ScannerException.Type.NOT_SUPPORTED);
+    }
+
+    @Override
+    public int getErrorCode() {
+        return -1;
+    }
+
+    @Override
+    public List<BluetoothScanResult> getScanResults() {
+        return null;
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/places/internal/BluetoothScanResult.java b/facebook/src/main/java/com/facebook/places/internal/BluetoothScanResult.java
new file mode 100644
index 000000000..9c1f3e5c1
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/internal/BluetoothScanResult.java
@@ -0,0 +1,56 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+/**
+ * Describes the result of a bluetooth Low Energy scan.
+ */
+public class BluetoothScanResult {
+
+    /**
+     * The payload received from the bluetooth Low Energy device.
+     * This must be the raw bluetooth Low Energy advertisement payload,
+     * as returned by {@code scanRecord.getBytes()} {@link android.bluetooth.le.ScanRecord}
+     * E.g., for an iBeacon: 0201041aff4c00021566622e6d652f40ca9e6f6f71666163653e3a5f06c5
+     */
+    public String payload;
+
+    /**
+     * The received signal strength in dBm. {@link android.bluetooth.le.ScanResult}
+     * E.g., -92
+     */
+    public int rssi;
+
+    /**
+     * Construct a new Bluetooth Low Energy scan result.
+     *
+     * @param payload The payload received from the bluetooth Low Energy device.
+     * This must be the raw bluetooth Low Energy advertisement payload,
+     * as returned by {@code scanRecord.getBytes()} {@link android.bluetooth.le.ScanRecord}
+     * E.g., for an iBeacon: 0201041aff4c00021566622e6d652f40ca9e6f6f71666163653e3a5f06c5
+     * @param rssi The received signal strength in dBm. {@link android.bluetooth.le.ScanResult}
+     * E.g., -92
+     */
+    public BluetoothScanResult(String payload, int rssi) {
+        this.payload = payload;
+        this.rssi = rssi;
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/places/internal/LocationPackage.java b/facebook/src/main/java/com/facebook/places/internal/LocationPackage.java
new file mode 100644
index 000000000..2606a5bed
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/internal/LocationPackage.java
@@ -0,0 +1,69 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import android.location.Location;
+
+import java.util.List;
+
+/**
+ * Describes the nearby location sensors.
+ * Use LocationPackageManager to generate an instance. {@link LocationPackageManager}
+ */
+public class LocationPackage {
+
+    /**
+     * The location (latitude/longitude).
+     */
+    public Location location;
+
+    /**
+     * Indicates the error type that occured when fetching the location, or null if there was
+     * no error.
+     */
+    public ScannerException.Type locationError;
+
+    /**
+     * Indicates whether wifi scanning was enabled/possible at the moment of the sensor collection.
+     */
+    public boolean isWifiScanningEnabled;
+
+    /**
+     * Describes the wifi network connected at the moment of the sensor collection.
+     */
+    public WifiScanResult connectedWifi;
+
+    /**
+     * Describes the list of nearby wifi networks at the moment of the sensor collection.
+     */
+    public List<WifiScanResult> ambientWifi;
+
+    /**
+     * Indicates whether bluetooth scanning was enabled at the moment of the sensor collection.
+     */
+    public boolean isBluetoothScanningEnabled;
+
+    /**
+     * Describes the list of nearby bluetooth Low Energy beacons at the moment of the sensor
+     * collection.
+     */
+    public List<BluetoothScanResult> ambientBluetoothLe;
+}
diff --git a/facebook/src/main/java/com/facebook/places/internal/LocationPackageManager.java b/facebook/src/main/java/com/facebook/places/internal/LocationPackageManager.java
new file mode 100644
index 000000000..16dcbfefa
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/internal/LocationPackageManager.java
@@ -0,0 +1,235 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import android.content.Context;
+import android.util.Log;
+
+import com.facebook.FacebookSdk;
+import com.facebook.places.PlaceManager;
+
+import java.util.concurrent.Callable;
+import java.util.concurrent.FutureTask;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public class LocationPackageManager {
+
+    private static final String TAG = "LocationPackageManager";
+
+    /**
+     * Specifies the interface to be implemented to receive the location sensor data.
+     */
+    public interface Listener {
+        /**
+         * Invoked when the location sensor data has been collected. The location sensor data can
+         * then be used to increase the accuracy when placing a current place request.
+         * {@link PlaceManager}
+         *
+         * @param locationPackage the nearby wifi and bluetooth beacons that have been collected.
+         */
+        void onLocationPackage(LocationPackage locationPackage);
+    }
+
+    public static void requestLocationPackage(
+            final LocationPackageRequestParams requestParams,
+            final Listener listener) {
+        FacebookSdk.getExecutor().execute(new Runnable() {
+            @Override
+            public void run() {
+                LocationPackage locationPackage = new LocationPackage();
+                try {
+                    // Start scanning tasks
+                    FutureTask<LocationPackage> locationScanTask = null;
+                    FutureTask<LocationPackage> wifiScanTask = null;
+                    FutureTask<LocationPackage> bleScanTask = null;
+
+                    if (requestParams.isLocationScanEnabled()) {
+
+                        LocationScanner locationScanner = ScannerFactory.newLocationScanner(
+                                FacebookSdk.getApplicationContext(),
+                                requestParams);
+
+                        // Check that location services are enabled, and if not, then abort
+                        // sensor scan.
+                        locationScanner.initAndCheckEligibility();
+
+                        locationScanTask = newLocationScanFuture(locationScanner, requestParams);
+                        FacebookSdk.getExecutor().execute(locationScanTask);
+                    }
+
+                    if (requestParams.isWifiScanEnabled()) {
+                        wifiScanTask = newWifiScanFuture(requestParams);
+                        FacebookSdk.getExecutor().execute(wifiScanTask);
+                    }
+                    if (requestParams.isBluetoothScanEnabled()) {
+                        bleScanTask = newBluetoothScanFuture(requestParams);
+                        FacebookSdk.getExecutor().execute(bleScanTask);
+                    }
+
+                    // Handle bluetooth results.
+                    if (bleScanTask != null) {
+                        try {
+                            LocationPackage bleSensorData = bleScanTask.get();
+                            locationPackage.ambientBluetoothLe = bleSensorData.ambientBluetoothLe;
+                            locationPackage.isBluetoothScanningEnabled =
+                                    bleSensorData.isBluetoothScanningEnabled;
+                        } catch (Exception e) {
+                            logException("Exception scanning for bluetooth beacons", e);
+                        }
+                    }
+
+                    // Handle wifi results
+                    if (wifiScanTask != null) {
+                        try {
+                            LocationPackage wifiSensorData = wifiScanTask.get();
+                            locationPackage.isWifiScanningEnabled =
+                                    wifiSensorData.isWifiScanningEnabled;
+                            locationPackage.connectedWifi = wifiSensorData.connectedWifi;
+                            locationPackage.ambientWifi = wifiSensorData.ambientWifi;
+                        } catch (Exception e) {
+                            logException("Exception scanning for wifi access points", e);
+                        }
+                    }
+
+                    // Handle location results
+                    if (locationScanTask != null) {
+                        try {
+                            LocationPackage locationSensorData = locationScanTask.get();
+                            locationPackage.locationError = locationSensorData.locationError;
+                            locationPackage.location = locationSensorData.location;
+                        } catch (Exception e) {
+                            logException("Exception getting location", e);
+                        }
+                    }
+                } catch (ScannerException e) {
+                    logException("Exception scanning for locations", e);
+                    locationPackage.locationError = e.type;
+                } catch (Exception e) {
+                    logException("Exception requesting a location package", e);
+                }
+                listener.onLocationPackage(locationPackage);
+            }
+        });
+    }
+
+    private static FutureTask<LocationPackage> newLocationScanFuture(
+            final LocationScanner locationScanner,
+            final LocationPackageRequestParams requestParams) {
+        return new FutureTask<>(new Callable<LocationPackage>() {
+            @Override
+            public LocationPackage call() throws Exception {
+                LocationPackage locationPackage = new LocationPackage();
+                try {
+                    locationPackage.location = locationScanner.getLocation();
+                } catch (ScannerException e) {
+                    locationPackage.locationError = e.type;
+                    logException("Exception while getting location", e);
+                } catch (Exception e) {
+                    locationPackage.locationError = ScannerException.Type.UNKNOWN_ERROR;
+                }
+                return locationPackage;
+            }
+        });
+    }
+
+    private static FutureTask<LocationPackage> newBluetoothScanFuture(
+            final LocationPackageRequestParams requestParams) {
+        return new FutureTask<>(new Callable<LocationPackage>() {
+            @Override
+            public LocationPackage call() throws Exception {
+                LocationPackage locationPackage = new LocationPackage();
+                try {
+                    Context context = FacebookSdk.getApplicationContext();
+                    BleScanner bleScanner = ScannerFactory.newBleScanner(context, requestParams);
+
+                    bleScanner.initAndCheckEligibility();
+
+                    try {
+                        bleScanner.startScanning();
+                        try {
+                            Thread.sleep(requestParams.getBluetoothScanDurationMs());
+                        } catch (Exception ex) {
+                            // ignore
+                        }
+                    } finally {
+                        bleScanner.stopScanning();
+                    }
+
+                    int errorCode = bleScanner.getErrorCode();
+                    if (errorCode == 0) {
+                        locationPackage.ambientBluetoothLe = bleScanner.getScanResults();
+                        locationPackage.isBluetoothScanningEnabled = true;
+                    } else {
+                        if (FacebookSdk.isDebugEnabled()) {
+                            Log.d(
+                                TAG,
+                                String.format(
+                                    "Bluetooth LE scan failed with error: %d",
+                                    errorCode));
+                        }
+                        locationPackage.isBluetoothScanningEnabled = false;
+                    }
+                } catch (Exception e) {
+                    logException("Exception scanning for bluetooth beacons", e);
+                    locationPackage.isBluetoothScanningEnabled = false;
+                }
+                return locationPackage;
+            }
+        });
+    }
+
+    private static FutureTask<LocationPackage> newWifiScanFuture(
+            final LocationPackageRequestParams requestParams) {
+        return new FutureTask<>(new Callable<LocationPackage>() {
+            @Override
+            public LocationPackage call() throws Exception {
+                LocationPackage locationPackage = new LocationPackage();
+                try {
+                    Context context = FacebookSdk.getApplicationContext();
+                    WifiScanner wifiScanner = ScannerFactory.newWifiScanner(context, requestParams);
+                    wifiScanner.initAndCheckEligibility();
+
+                    locationPackage.connectedWifi = wifiScanner.getConnectedWifi();
+                    locationPackage.isWifiScanningEnabled = wifiScanner.isWifiScanningEnabled();
+
+                    if (locationPackage.isWifiScanningEnabled) {
+                        locationPackage.ambientWifi =
+                                wifiScanner.getWifiScans();
+                    }
+                } catch (Exception e) {
+                    logException("Exception scanning for wifi access points", e);
+                    locationPackage.isWifiScanningEnabled = false;
+                }
+                return locationPackage;
+            }
+        });
+    }
+
+    private static void logException(String message, Throwable throwable) {
+        if (FacebookSdk.isDebugEnabled()) {
+            Log.e(TAG, message, throwable);
+        }
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/places/internal/LocationPackageRequestParams.java b/facebook/src/main/java/com/facebook/places/internal/LocationPackageRequestParams.java
new file mode 100644
index 000000000..4ec6f9874
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/internal/LocationPackageRequestParams.java
@@ -0,0 +1,246 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import android.location.LocationManager;
+
+/**
+ * Describes the nearby location sensors.
+ * Use {@link LocationPackageManager} to instantiate an instance.
+ */
+public class LocationPackageRequestParams {
+
+    private static final boolean DEFAULT_LOCATION_ENABLED = true;
+    private static final String[] DEFAULT_LOCATION_PROVIDERS =
+            new String[]{LocationManager.NETWORK_PROVIDER, LocationManager.GPS_PROVIDER};
+    private static final float DEFAULT_LOCATION_MAX_ACCURACY_METERS = 100f;
+    private static final long DEFAULT_LOCATION_REQUEST_TIMEOUT_MS = 30 * 1000;
+    private static final long DEFAULT_LAST_LOCATION_MAX_AGE_MS = 60 * 1000;
+
+    private static final boolean DEFAULT_WIFI_ENABLED = true;
+    private static final long DEFAULT_WIFI_SCAN_MAX_AGE_MS = 30 * 1000;
+    private static final long DEFAULT_WIFI_SCAN_TIMEOUT_MS = 6 * 1000;
+    private static final int DEFAULT_WIFI_MAX_SCAN_RESULTS = 25;
+    private static final boolean DEFAULT_WIFI_ACTIVE_SCAN_ALLOWED = true;
+    private static final boolean DEFAULT_WIFI_ACTIVE_SCAN_FORCED = false;
+
+    private static final boolean DEFAULT_BLUETOOTH_ENABLED = true;
+    private static final long DEFAULT_BLUETOOTH_SCAN_DURATION_MS = 500;
+    private static final int DEFAULT_BLUETOOTH_MAX_SCAN_RESULTS = 25;
+    private static final long DEFAULT_BLUETOOTH_FLUSH_RESULTS_TIMEOUT_MS = 300;
+
+    private boolean isLocationScanEnabled;
+    private final String[] locationProviders;
+    private float locationMaxAccuracyMeters;
+    private long locationRequestTimeoutMs;
+    private long lastLocationMaxAgeMs;
+
+    private boolean isWifiScanEnabled;
+    private long wifiScanMaxAgeMs;
+    private int wifiMaxScanResults;
+    private long wifiScanTimeoutMs;
+    private boolean isWifiActiveScanAllowed;
+    private boolean isWifiActiveScanForced;
+
+    private boolean isBluetoothScanEnabled;
+    private long bluetoothScanDurationMs;
+    private int bluetoothMaxScanResults;
+    private long bluetoothFlushResultsTimeoutMs;
+
+    private LocationPackageRequestParams(Builder b) {
+        isLocationScanEnabled = b.isLocationScanEnabled;
+        locationProviders = b.locationProviders;
+        locationMaxAccuracyMeters = b.locationMaxAccuracyMeters;
+        locationRequestTimeoutMs = b.locationRequestTimeoutMs;
+        lastLocationMaxAgeMs = b.lastLocationMaxAgeMs;
+
+        isWifiScanEnabled = b.isWifiScanEnabled;
+        wifiScanMaxAgeMs = b.wifiScanMaxAgeMs;
+        wifiMaxScanResults = b.wifiMaxScanResults;
+        wifiScanTimeoutMs = b.wifiScanTimeoutMs;
+        isWifiActiveScanAllowed = b.isWifiActiveScanAllowed;
+        isWifiActiveScanForced = b.isWifiActiveScanForced;
+
+        isBluetoothScanEnabled = b.isBluetoothScanEnabled;
+        bluetoothScanDurationMs = b.bluetoothScanDurationMs;
+        bluetoothMaxScanResults = b.bluetoothMaxScanResults;
+        bluetoothFlushResultsTimeoutMs = b.bluetoothFlushResultsTimeoutMs;
+    }
+
+    public boolean isLocationScanEnabled() {
+        return isLocationScanEnabled;
+    }
+
+    public String[] getLocationProviders() {
+        return locationProviders;
+    }
+
+    public float getLocationMaxAccuracyMeters() {
+        return locationMaxAccuracyMeters;
+    }
+
+    public long getLocationRequestTimeoutMs() {
+        return locationRequestTimeoutMs;
+    }
+
+    public long getLastLocationMaxAgeMs() {
+        return lastLocationMaxAgeMs;
+    }
+
+    public boolean isWifiScanEnabled() {
+        return isWifiScanEnabled;
+    }
+
+    public long getWifiScanMaxAgeMs() {
+        return wifiScanMaxAgeMs;
+    }
+
+    public int getWifiMaxScanResults() {
+        return wifiMaxScanResults;
+    }
+
+    public long getWifiScanTimeoutMs() {
+        return wifiScanTimeoutMs;
+    }
+
+    public boolean isWifiActiveScanAllowed() {
+        return isWifiActiveScanAllowed;
+    }
+
+    public boolean isWifiActiveScanForced() {
+        return isWifiActiveScanForced;
+    }
+
+    public boolean isBluetoothScanEnabled() {
+        return isBluetoothScanEnabled;
+    }
+
+    public long getBluetoothScanDurationMs() {
+        return bluetoothScanDurationMs;
+    }
+
+    public long getBluetoothFlushResultsTimeoutMs() {
+        return bluetoothFlushResultsTimeoutMs;
+    }
+
+    public int getBluetoothMaxScanResults() {
+        return bluetoothMaxScanResults;
+    }
+
+    public static class Builder {
+        private boolean isLocationScanEnabled = DEFAULT_LOCATION_ENABLED;
+        private String[] locationProviders = DEFAULT_LOCATION_PROVIDERS;
+        private float locationMaxAccuracyMeters = DEFAULT_LOCATION_MAX_ACCURACY_METERS;
+        private long locationRequestTimeoutMs = DEFAULT_LOCATION_REQUEST_TIMEOUT_MS;
+        private long lastLocationMaxAgeMs = DEFAULT_LAST_LOCATION_MAX_AGE_MS;
+
+        private boolean isWifiScanEnabled = DEFAULT_WIFI_ENABLED;
+        private long wifiScanMaxAgeMs = DEFAULT_WIFI_SCAN_MAX_AGE_MS;
+        private int wifiMaxScanResults = DEFAULT_WIFI_MAX_SCAN_RESULTS;
+        private long wifiScanTimeoutMs = DEFAULT_WIFI_SCAN_TIMEOUT_MS;
+        private boolean isWifiActiveScanAllowed = DEFAULT_WIFI_ACTIVE_SCAN_ALLOWED;
+        private boolean isWifiActiveScanForced = DEFAULT_WIFI_ACTIVE_SCAN_FORCED;
+
+        private boolean isBluetoothScanEnabled = DEFAULT_BLUETOOTH_ENABLED;
+        private long bluetoothScanDurationMs = DEFAULT_BLUETOOTH_SCAN_DURATION_MS;
+        private int bluetoothMaxScanResults = DEFAULT_BLUETOOTH_MAX_SCAN_RESULTS;
+        private long bluetoothFlushResultsTimeoutMs = DEFAULT_BLUETOOTH_FLUSH_RESULTS_TIMEOUT_MS;
+
+        public LocationPackageRequestParams build() {
+            return new LocationPackageRequestParams(this);
+        }
+
+        public Builder setLocationScanEnabled(boolean locationScanEnabled) {
+            isLocationScanEnabled = locationScanEnabled;
+            return this;
+        }
+
+        public Builder setLastLocationMaxAgeMs(long lastLocationMaxAgeMs) {
+            this.lastLocationMaxAgeMs = lastLocationMaxAgeMs;
+            return this;
+        }
+
+        public Builder setLocationProviders(String[] locationProviders) {
+            this.locationProviders = locationProviders;
+            return this;
+        }
+
+        public Builder setLocationMaxAccuracyMeters(float locationMaxAccuracyMeters) {
+            this.locationMaxAccuracyMeters = locationMaxAccuracyMeters;
+            return this;
+        }
+
+        public Builder setLocationRequestTimeoutMs(long locationRequestTimeoutMs) {
+            this.locationRequestTimeoutMs = locationRequestTimeoutMs;
+            return this;
+        }
+
+        public Builder setWifiScanEnabled(boolean wifiScanEnabled) {
+            isWifiScanEnabled = wifiScanEnabled;
+            return this;
+        }
+
+        public Builder setWifiScanMaxAgeMs(long wifiScanMaxAgeMs) {
+            this.wifiScanMaxAgeMs = wifiScanMaxAgeMs;
+            return this;
+        }
+
+        public Builder setWifiMaxScanResults(int wifiMaxScanResults) {
+            this.wifiMaxScanResults = wifiMaxScanResults;
+            return this;
+        }
+
+        public Builder setWifiScanTimeoutMs(long wifiScanTimeoutMs) {
+            this.wifiScanTimeoutMs = wifiScanTimeoutMs;
+            return this;
+        }
+
+        public Builder setWifiActiveScanAllowed(boolean wifiActiveScanAllowed) {
+            isWifiActiveScanAllowed = wifiActiveScanAllowed;
+            return this;
+        }
+
+        public Builder setWifiActiveScanForced(boolean wifiActiveScanForced) {
+            isWifiActiveScanForced = wifiActiveScanForced;
+            return this;
+        }
+
+        public Builder setBluetoothScanEnabled(boolean bluetoothScanEnabled) {
+            isBluetoothScanEnabled = bluetoothScanEnabled;
+            return this;
+        }
+
+        public Builder setBluetoothScanDurationMs(long bluetoothScanDurationMs) {
+            this.bluetoothScanDurationMs = bluetoothScanDurationMs;
+            return this;
+        }
+
+        public Builder setBluetoothMaxScanResults(int bluetoothMaxScanResults) {
+            this.bluetoothMaxScanResults = bluetoothMaxScanResults;
+            return this;
+        }
+
+        public Builder setBluetoothFlushResultsTimeoutMs(long bluetoothFlushResultsTimeoutMs) {
+            this.bluetoothFlushResultsTimeoutMs = bluetoothFlushResultsTimeoutMs;
+            return this;
+        }
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/places/internal/LocationScanner.java b/facebook/src/main/java/com/facebook/places/internal/LocationScanner.java
new file mode 100644
index 000000000..398b1cf10
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/internal/LocationScanner.java
@@ -0,0 +1,35 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import android.location.Location;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public interface LocationScanner {
+
+    void initAndCheckEligibility() throws ScannerException;
+
+    Location getLocation() throws ScannerException;
+}
diff --git a/facebook/src/main/java/com/facebook/places/internal/LocationScannerImpl.java b/facebook/src/main/java/com/facebook/places/internal/LocationScannerImpl.java
new file mode 100644
index 000000000..54ab607f6
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/internal/LocationScannerImpl.java
@@ -0,0 +1,160 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import android.content.Context;
+import android.location.Location;
+import android.location.LocationListener;
+import android.location.LocationManager;
+import android.os.Bundle;
+import android.os.HandlerThread;
+
+import com.facebook.internal.Validate;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+@SuppressWarnings("MissingPermission")
+public class LocationScannerImpl implements LocationScanner, LocationListener {
+
+    private static final long MIN_TIME_BETWEEN_UPDATES = 100L;
+    private static final float MIN_DISTANCE_BETWEEN_UPDATES = 0f;
+
+    private Context context;
+    private LocationManager locationManager;
+    private LocationPackageRequestParams params;
+    private Location freshLocation;
+    private final Object scanLock = new Object();
+    private List<String> enabledProviders;
+
+    public LocationScannerImpl(
+            Context context,
+            LocationPackageRequestParams params) {
+        this.context = context;
+        this.params = params;
+        locationManager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);
+    }
+
+    @Override
+    public void initAndCheckEligibility() throws ScannerException {
+
+        if (!Validate.hasLocationPermission(context)) {
+            throw new ScannerException(ScannerException.Type.PERMISSION_DENIED);
+        }
+
+        enabledProviders = new ArrayList<>(params.getLocationProviders().length);
+        for (String provider : params.getLocationProviders()) {
+            if (locationManager.isProviderEnabled(provider)) {
+                enabledProviders.add(provider);
+            }
+        }
+
+        if (enabledProviders.isEmpty()) {
+            throw new ScannerException(ScannerException.Type.DISABLED);
+        }
+    }
+
+    private Location getLastLocation(String provider) {
+        Location lastLocation = locationManager.getLastKnownLocation(provider);
+        if (lastLocation != null) {
+            long lastLocationTs = lastLocation.getTime();
+            long locationAgeMs = System.currentTimeMillis() - lastLocationTs;
+            if (locationAgeMs < params.getLastLocationMaxAgeMs()) {
+                return lastLocation;
+            }
+        }
+        return null;
+    }
+
+    @Override
+    public Location getLocation() throws ScannerException {
+        for (String provider : enabledProviders) {
+            Location lastLocation = getLastLocation(provider);
+            if (lastLocation != null) {
+                return lastLocation;
+            }
+        }
+        return getFreshLocation();
+    }
+
+    private Location getFreshLocation() throws ScannerException {
+        freshLocation = null;
+        HandlerThread handlerThread = new HandlerThread("LocationScanner");
+        try {
+            handlerThread.start();
+            for (String provider : enabledProviders) {
+                locationManager.requestLocationUpdates(
+                        provider,
+                        MIN_TIME_BETWEEN_UPDATES,
+                        MIN_DISTANCE_BETWEEN_UPDATES,
+                        this,
+                        handlerThread.getLooper());
+            }
+            try {
+                synchronized (scanLock) {
+                    scanLock.wait(params.getLocationRequestTimeoutMs());
+                }
+            } catch (Exception e) {
+                // ignore
+            }
+        } finally {
+            locationManager.removeUpdates(this);
+            handlerThread.quit();
+        }
+
+        if (freshLocation == null) {
+            throw new ScannerException(ScannerException.Type.TIMEOUT);
+        }
+        return freshLocation;
+    }
+
+    @Override
+    public void onLocationChanged(Location location) {
+        if (freshLocation == null) {
+            if (location.getAccuracy() < params.getLocationMaxAccuracyMeters()) {
+                synchronized (scanLock) {
+                    freshLocation = location;
+                     scanLock.notify();
+                }
+            }
+        }
+    }
+
+    @Override
+    public void onStatusChanged(String provider, int status, Bundle extras) {
+        // ignore
+    }
+
+    @Override
+    public void onProviderEnabled(String provider) {
+        // ignore
+    }
+
+    @Override
+    public void onProviderDisabled(String provider) {
+        // ignore
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/places/internal/ScannerException.java b/facebook/src/main/java/com/facebook/places/internal/ScannerException.java
new file mode 100644
index 000000000..402f80243
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/internal/ScannerException.java
@@ -0,0 +1,55 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public class ScannerException extends Exception {
+
+    public enum Type {
+        NOT_SUPPORTED,
+        PERMISSION_DENIED,
+        DISABLED,
+        SCAN_ALREADY_IN_PROGRESS,
+        UNKNOWN_ERROR,
+        TIMEOUT,
+    }
+
+    public Type type;
+
+    public ScannerException(Type type) {
+        super("Type: " + type.name());
+        this.type = type;
+    }
+
+    public ScannerException(Type type, String message) {
+        super(message);
+        this.type = type;
+    }
+
+    public ScannerException(Type type, Exception ex) {
+        super("Type: " + type.name(), ex);
+        this.type = type;
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/places/internal/ScannerFactory.java b/facebook/src/main/java/com/facebook/places/internal/ScannerFactory.java
new file mode 100644
index 000000000..960812652
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/internal/ScannerFactory.java
@@ -0,0 +1,53 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import android.content.Context;
+import android.os.Build;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public class ScannerFactory {
+
+    public static final int OS_VERSION_LOLLIPOP = 21;
+    public static final int OS_VERSION_JELLY_BEAN_MR2 = 18;
+    public static final int OS_VERSION_JELLY_BEAN_MR1 = 17;
+
+    public static BleScanner newBleScanner(Context context, LocationPackageRequestParams params) {
+        if (Build.VERSION.SDK_INT >= OS_VERSION_LOLLIPOP) {
+            return new BleScannerImpl(context, params);
+        }
+        return new BleScannerLegacy();
+    }
+
+    public static WifiScanner newWifiScanner(Context context, LocationPackageRequestParams params) {
+        return new WifiScannerImpl(context, params);
+    }
+
+    public static LocationScanner newLocationScanner(
+            Context context,
+            LocationPackageRequestParams params) {
+        return new LocationScannerImpl(context, params);
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/places/internal/WifiScanResult.java b/facebook/src/main/java/com/facebook/places/internal/WifiScanResult.java
new file mode 100644
index 000000000..cbdaa8033
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/internal/WifiScanResult.java
@@ -0,0 +1,71 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+/**
+ * Describes a wifi access point scan result.
+ */
+public class WifiScanResult {
+
+    /**
+     * The name of the wifi access point.
+     */
+    public String ssid;
+
+    /**
+     * The hardware/mac-address of the access point.
+     */
+    public String bssid;
+
+    /**
+     * The detected signal strength in dBm.
+     */
+    public int rssi;
+
+    /**
+     * The frequency in MHz of the channel used by the access point.
+     * {@link android.net.wifi.ScanResult}
+     */
+    public int frequency;
+
+    /**
+     * Constructs a new {@code WifiScanResult}
+     */
+    public WifiScanResult() {
+
+    }
+
+    /**
+     * Constructs a new {@code WifiScanResult}
+     *
+     * @param ssid The name of the wifi access point.
+     * @param bssid The hardware/mac-address of the access point.
+     * @param rssi The detected signal strength in dBm.
+     * @param frequency The frequency in MHz of the channel used by the access point.
+     * {@link android.net.wifi.ScanResult}
+     */
+    public WifiScanResult(String ssid, String bssid, int rssi, int frequency) {
+        this.ssid = ssid;
+        this.bssid = bssid;
+        this.rssi = rssi;
+        this.frequency = frequency;
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/places/internal/WifiScanner.java b/facebook/src/main/java/com/facebook/places/internal/WifiScanner.java
new file mode 100644
index 000000000..a6da816f3
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/internal/WifiScanner.java
@@ -0,0 +1,39 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import java.util.List;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public interface WifiScanner {
+
+    void initAndCheckEligibility() throws ScannerException;
+
+    WifiScanResult getConnectedWifi() throws ScannerException;
+
+    boolean isWifiScanningEnabled();
+
+    List<WifiScanResult> getWifiScans() throws ScannerException;
+}
diff --git a/facebook/src/main/java/com/facebook/places/internal/WifiScannerImpl.java b/facebook/src/main/java/com/facebook/places/internal/WifiScannerImpl.java
new file mode 100644
index 000000000..3f879c963
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/internal/WifiScannerImpl.java
@@ -0,0 +1,261 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.content.pm.PackageManager;
+import android.net.wifi.ScanResult;
+import android.net.wifi.SupplicantState;
+import android.net.wifi.WifiInfo;
+import android.net.wifi.WifiManager;
+import android.os.Build;
+import android.os.Bundle;
+import android.os.SystemClock;
+import android.text.TextUtils;
+
+import com.facebook.internal.Validate;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.List;
+import java.util.Set;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+@SuppressWarnings("MissingPermission")
+public class WifiScannerImpl implements WifiScanner {
+
+    private Context context;
+    private WifiManager wifiManager;
+    private ScanResultBroadcastReceiver broadcastReceiver;
+    private final Object scanLock = new Object();
+    private final LocationPackageRequestParams params;
+
+    WifiScannerImpl(Context context, LocationPackageRequestParams params) {
+        this.context = context;
+        this.params = params;
+    }
+
+    @Override
+    public void initAndCheckEligibility() throws ScannerException {
+
+        if (!context.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WIFI)) {
+            throw new ScannerException(ScannerException.Type.NOT_SUPPORTED);
+        }
+
+        if (!Validate.hasWiFiPermission(context)) {
+            throw new ScannerException(ScannerException.Type.PERMISSION_DENIED);
+        }
+
+        if (wifiManager == null) {
+            wifiManager = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);
+        }
+
+        boolean isWifiScanningAlwaysOn = isWifiScanningAlwaysOn();
+
+        if (!isWifiScanningAlwaysOn && !wifiManager.isWifiEnabled()) {
+            throw new ScannerException(ScannerException.Type.DISABLED);
+        }
+    }
+
+    @Override
+    public WifiScanResult getConnectedWifi() throws ScannerException {
+        try {
+            WifiInfo wifiInfo = wifiManager.getConnectionInfo();
+            if (wifiInfo == null
+                    || TextUtils.isEmpty(wifiInfo.getBSSID())
+                    || wifiInfo.getSupplicantState() != SupplicantState.COMPLETED) {
+                return null;
+            }
+            WifiScanResult wifiScanResult = new WifiScanResult();
+            wifiScanResult.bssid = wifiInfo.getBSSID();
+            wifiScanResult.ssid = wifiInfo.getSSID();
+            wifiScanResult.rssi = wifiInfo.getRssi();
+            if (Build.VERSION.SDK_INT >= ScannerFactory.OS_VERSION_LOLLIPOP) {
+                wifiScanResult.frequency = wifiInfo.getFrequency();
+            }
+            return wifiScanResult;
+        } catch (Exception e) {
+            throw new ScannerException(ScannerException.Type.UNKNOWN_ERROR, e);
+        }
+    }
+
+    @Override
+    public boolean isWifiScanningEnabled() {
+        try {
+            initAndCheckEligibility();
+            if (Validate.hasLocationPermission(context)) {
+                return true;
+            }
+        } catch (ScannerException e) {
+            // ignore
+        }
+        return false;
+    }
+
+    private boolean isWifiScanningAlwaysOn() {
+        if (Build.VERSION.SDK_INT >= ScannerFactory.OS_VERSION_JELLY_BEAN_MR2) {
+            return wifiManager.isScanAlwaysAvailable();
+        }
+        return false;
+    }
+
+    private List<WifiScanResult> getCachedScanResults()
+            throws ScannerException {
+        try {
+            List<ScanResult> scanResults = wifiManager.getScanResults();
+            scanResults = filterWifiScanResultsByMaxAge(scanResults, params.getWifiScanMaxAgeMs());
+            filterResults(scanResults, params.getWifiMaxScanResults());
+            List<WifiScanResult> wifiScanResults = new ArrayList<>(scanResults.size());
+            for (ScanResult scanResult : scanResults) {
+                WifiScanResult wifiScanResult = new WifiScanResult();
+                wifiScanResult.bssid = scanResult.BSSID;
+                wifiScanResult.ssid = scanResult.SSID;
+                wifiScanResult.rssi = scanResult.level;
+                wifiScanResult.frequency = scanResult.frequency;
+                wifiScanResults.add(wifiScanResult);
+            }
+            return wifiScanResults;
+        } catch (Exception e) {
+            throw new ScannerException(ScannerException.Type.UNKNOWN_ERROR, e);
+        }
+    }
+
+    private static void filterResults(List<ScanResult> scanResults, int maxResults) {
+        if (scanResults.size() > maxResults) {
+            Comparator<ScanResult> comparator = new Comparator<ScanResult>() {
+                @Override
+                public int compare(ScanResult lhs, ScanResult rhs) {
+                    return rhs.level - lhs.level;
+                }
+            };
+            Collections.sort(scanResults, comparator);
+            scanResults.subList(maxResults, scanResults.size()).clear();
+        }
+    }
+
+    private static List<ScanResult> filterWifiScanResultsByMaxAge(
+            List<ScanResult> scanResults,
+            long maxAgeMs) {
+        List<ScanResult> filtered = new ArrayList<>();
+        if (scanResults != null) {
+            if (Build.VERSION.SDK_INT < ScannerFactory.OS_VERSION_JELLY_BEAN_MR1) {
+                filtered.addAll(scanResults);
+            } else {
+                long nowSinceBootMs = SystemClock.elapsedRealtime();
+                for (ScanResult result : scanResults) {
+                    long ageMs = nowSinceBootMs - (result.timestamp / 1000);
+                    if (ageMs < 0) {
+                        // Some platform use unix timestmap
+                        ageMs = System.currentTimeMillis() - result.timestamp;
+                    }
+                    if (ageMs < maxAgeMs) {
+                        filtered.add(result);
+                    }
+                }
+            }
+        }
+        return filtered;
+    }
+
+    @Override
+    public synchronized List<WifiScanResult> getWifiScans()
+            throws ScannerException{
+        List<WifiScanResult> wifiScanResults = null;
+        if (!params.isWifiActiveScanForced()) {
+              wifiScanResults = getCachedScanResults();
+        }
+        boolean isListEmpty = wifiScanResults == null || wifiScanResults.isEmpty();
+        if (params.isWifiActiveScanForced() || (params.isWifiActiveScanAllowed() && isListEmpty)) {
+            wifiScanResults = getActiveScanResults();
+        }
+        return wifiScanResults;
+    }
+
+    private List<WifiScanResult> getActiveScanResults()
+            throws ScannerException{
+        List<WifiScanResult> wifiScanResults = null;
+        try {
+            if (Validate.hasChangeWifiStatePermission(context)) {
+                registerBroadcastReceiver();
+                boolean isScanStarted = wifiManager.startScan();
+                if (isScanStarted) {
+                    try {
+                        synchronized (scanLock) {
+                            scanLock.wait(params.getWifiScanTimeoutMs());
+                        }
+                    } catch (InterruptedException e) {
+                        // ignore
+                    }
+                    wifiScanResults = getCachedScanResults();
+                }
+            }
+        } catch (Exception e) {
+            // ignore
+        } finally {
+            unregisterBroadcastReceiver();
+        }
+        return wifiScanResults;
+    }
+
+    private void registerBroadcastReceiver() {
+        if (broadcastReceiver != null) {
+            unregisterBroadcastReceiver();
+        }
+        broadcastReceiver = new ScanResultBroadcastReceiver();
+        IntentFilter intentFilter = new IntentFilter();
+        intentFilter.addAction(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION);
+        context.registerReceiver(broadcastReceiver, intentFilter);
+    }
+
+    private void unregisterBroadcastReceiver() {
+        if (broadcastReceiver != null) {
+            try {
+                context.unregisterReceiver(broadcastReceiver);
+            } catch (Exception e) {
+                // ignore
+            }
+            broadcastReceiver = null;
+        }
+    }
+
+    private class ScanResultBroadcastReceiver extends BroadcastReceiver {
+
+        @Override
+        public void onReceive(Context context, Intent intent) {
+            if (intent != null) {
+                if (WifiManager.SCAN_RESULTS_AVAILABLE_ACTION.equals(intent.getAction())) {
+                    synchronized (scanLock) {
+                       scanLock.notify();
+                    }
+                    unregisterBroadcastReceiver();
+                }
+            }
+        }
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/places/model/CurrentPlaceFeedbackRequestParams.java b/facebook/src/main/java/com/facebook/places/model/CurrentPlaceFeedbackRequestParams.java
new file mode 100644
index 000000000..0a4c1f721
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/model/CurrentPlaceFeedbackRequestParams.java
@@ -0,0 +1,122 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+/**
+ * Describes the parameters used to create a current place feedback request
+ * with {@link com.facebook.places.PlaceManager}
+ */
+public class CurrentPlaceFeedbackRequestParams {
+
+    private final String tracking;
+    private final String placeId;
+    private final Boolean wasHere;
+
+    private CurrentPlaceFeedbackRequestParams(Builder b) {
+        tracking = b.tracking;
+        placeId = b.placeId;
+        wasHere = b.wasHere;
+    }
+
+    /**
+     * Gets the tracking ID. The tracking value is returned in the response
+     * of the current place request {@link com.facebook.places.PlaceManager}
+     *
+     * @return The tracking ID returned by the current place request.
+     */
+    public String getTracking() {
+        return tracking;
+    }
+
+    /**
+     * Gets the place ID associated with the feedback request.
+     * @return The place ID associated with the feedback.
+     */
+    public String getPlaceId() {
+        return placeId;
+    }
+
+    /**
+     * Indicates whether the user was actually located at the place specified by
+     * {@code getPlaceId()}.
+     * Could return null if {@code wasHere} was not set on the {@link Builder}.
+     *
+     * @return {@code true} if the user was at the place specified by getPlaceId(),
+     * {@false} if not,
+     * {@null} if wasHere was not specified on {@link Builder}
+     */
+    public Boolean wasHere() {
+        return wasHere;
+    }
+
+    /**
+     * Describes the builder to create a {@link CurrentPlaceFeedbackRequestParams}
+     */
+    public static class Builder {
+
+        private String tracking;
+        private String placeId;
+        private Boolean wasHere;
+
+        /**
+         * Indicates whether the user was actually located at the place specified by
+         * {@code setPlaceId()}.
+         * @param wasHere {@code true} if the user was at the place specified by
+         * {@code setPlaceId()}
+         * @return the builder
+         */
+        public Builder setWasHere(boolean wasHere) {
+            this.wasHere = wasHere;
+            return this;
+        }
+
+        /**
+         * Sets the place ID for the feedback request.
+         * @param placeId the place ID associated with the feedback.
+         * @return the builder
+         */
+        public Builder setPlaceId(String placeId) {
+            this.placeId = placeId;
+            return this;
+        }
+
+        /**
+         * Sets the tracking ID. The tracking ID value is returned in the response
+         * of the current place request. See {@link com.facebook.places.PlaceManager}
+         * for information on how to place a current place request.
+         *
+         * @param tracking The tracking ID returned by the current place request.
+         * @return The builder
+         */
+        public Builder setTracking(String tracking) {
+            this.tracking = tracking;
+            return this;
+        }
+
+        /**
+         * Returns the {@link CurrentPlaceFeedbackRequestParams}
+         * @return the {@link CurrentPlaceFeedbackRequestParams}
+         */
+        public CurrentPlaceFeedbackRequestParams build() {
+            return new CurrentPlaceFeedbackRequestParams(this);
+        }
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/places/model/CurrentPlaceRequestParams.java b/facebook/src/main/java/com/facebook/places/model/CurrentPlaceRequestParams.java
new file mode 100644
index 000000000..fc3aebe1d
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/model/CurrentPlaceRequestParams.java
@@ -0,0 +1,203 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+import android.location.Location;
+
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * Describes the parameters of the current place request.
+ * Use {@link com.facebook.places.PlaceManager} to create a new current place request.
+ */
+public class CurrentPlaceRequestParams {
+
+    /**
+     * Describes the confidence level of the current place response.
+     *
+     * A place with field {@code CONFIDENCE_LEVEL} set to {@code HIGH} indicates that there is a
+     * high likelihood that the user is currently located at that place.
+     */
+    public enum ConfidenceLevel {
+        LOW,
+        MEDIUM,
+        HIGH,
+    };
+
+    /**
+     * Describes the location scanning behavior when creating a new current place request.
+     */
+    public enum ScanMode {
+
+        /**
+         * In high accuracy mode, {@link com.facebook.places.PlaceManager}, scans for
+         * nearby Wi-Fi and Bluetooth Low Energy beacons to maximize the accuracy of the current
+         * place request. High accuracy mode is the default value.
+         */
+        HIGH_ACCURACY,
+
+        /**
+         * In low latency mode, {@link com.facebook.places.PlaceManager}, reduces
+         * nearby Wi-Fi and Bluetooth beacon scanning to a minimum to prioritize
+         * low latency rather than accuracy. Using low latency mode reduces the maximum time
+         * taken to generate the current place request. To minimize latency mode, a
+         * location must be specified on the {@link Builder}.
+         */
+        LOW_LATENCY,
+    }
+
+    private final Location location;
+    private final ScanMode scanMode;
+    private final ConfidenceLevel minConfidenceLevel;
+    private final int limit;
+    private final Set<String> fields = new HashSet<>();
+
+    private CurrentPlaceRequestParams(Builder b) {
+        location = b.location;
+        scanMode = b.scanMode;
+        minConfidenceLevel = b.minConfidenceLevel;
+        limit = b.limit;
+        fields.addAll(b.fields);
+    }
+
+    /**
+     * The current location of the user. If null, the SDK automatically retrieves the current
+     * device location using {@link android.location.LocationManager}
+     *
+     * @return The current device location.
+     */
+    public Location getLocation() {
+        return location;
+    }
+
+    /**
+     * The scan mode used when generating the current place request.
+     * @return The scan mode used when generating the current place request.
+     */
+    public ScanMode getScanMode() {
+        return scanMode;
+    }
+
+    /**
+     * Get the minimum confidence level of places to return.
+     * @return The minimum {@link ConfidenceLevel} of places to return.
+     */
+    public ConfidenceLevel getMinConfidenceLevel() {
+        return minConfidenceLevel;
+    }
+
+    /**
+     * The maximum number of places to be returned.
+     * @return The maximum number of places to be returned.
+     */
+    public int getLimit() {
+        return limit;
+    }
+
+    /**
+     * The fields to be returned in the response.
+     * @return The fields to be returned in the response.
+     */
+    public Set<String> getFields() {
+        return fields;
+    }
+
+    /**
+     * Describes the builder to create a {@link CurrentPlaceRequestParams}
+     */
+    public static class Builder {
+
+        private Location location;
+        private ScanMode scanMode = ScanMode.HIGH_ACCURACY;
+        private ConfidenceLevel minConfidenceLevel;
+        private int limit;
+        private final Set<String> fields = new HashSet<>();
+
+        /**
+         * Sets the current user location. This parameter is optional.
+         * If a location is not provided, the SDK automatically retrieves the current device
+         * location using {@link android.location.LocationManager}.
+         *
+         * @param location The location at which the user is currently located.
+         * @return this builder
+         */
+        public Builder setLocation(Location location) {
+            this.location = location;
+            return this;
+        }
+
+        /**
+         * Sets the scan mode to be used. When creating a current place request, the SDK
+         * scans for nearby Wi-Fi access points and Bluetooth Low Energy beacons. This parameter
+         * determines the behavior of that scan. High accuracy is the default value.
+         * In order to use low latency, you must specify a location on this builder.
+         *
+         * @param scanMode The scan mode used when generating the current place request.
+         * @return this builder
+         */
+        public Builder setScanMode(ScanMode scanMode) {
+            this.scanMode = scanMode;
+            return this;
+        }
+
+        /**
+         * The minimum confidence level of suggestions to return. See {@link ConfidenceLevel}.
+         * @param minConfidenceLevel the minimum confidence level of suggestions to return.
+         * @return this builder
+         */
+        public Builder setMinConfidenceLevel(ConfidenceLevel minConfidenceLevel) {
+            this.minConfidenceLevel = minConfidenceLevel;
+            return this;
+        }
+
+        /**
+         * Sets the maximum number of results to be returned.
+         *
+         * @param limit the maximum number of results to be returned.
+         * @return this builder
+         */
+        public Builder setLimit(int limit) {
+            this.limit = limit;
+            return this;
+        }
+
+        /**
+         * Specifies a field to be added to the response. Refer to {@link PlaceFields} for a list
+         * of known place fields. Refer to the online Places Graph documentation for an up to date
+         * list of fields.
+         * @param field The field to be returned in the response {@link PlaceFields}.
+         * @return this builder
+         */
+        public Builder addField(String field) {
+            fields.add(field);
+            return this;
+        }
+
+        /**
+         * Returns the {@link CurrentPlaceRequestParams}
+         * @return the {@link CurrentPlaceRequestParams}
+         */
+        public CurrentPlaceRequestParams build() {
+            return new CurrentPlaceRequestParams(this);
+        }
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/places/model/PlaceFields.java b/facebook/src/main/java/com/facebook/places/model/PlaceFields.java
new file mode 100644
index 000000000..b435b2709
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/model/PlaceFields.java
@@ -0,0 +1,210 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+/**
+ * Describes the fields available when searching for a place, or when querying a
+ * place's' information with {@link com.facebook.places.PlaceManager}. Refer to
+ * the online Places Graph documentation to get the complete list of supported
+ * place fields.
+ */
+public interface PlaceFields {
+
+    /**
+     * Information about the Place.
+     */
+    String ABOUT = "about";
+
+    /**
+     * AppLinks to the Place on various devices.
+     */
+    String APP_LINKS = "app_links";
+
+    /**
+     * The Place's categories.
+     */
+    String CATEGORY_LIST = "category_list";
+
+    /**
+     * The number of checkins at this Place.
+     */
+    String CHECKINS = "checkins";
+
+    /**
+     * To be used on the current_place request. Indicates the confidence level of the
+     * current place result.
+     */
+    String CONFIDENCE_LEVEL = "confidence_level";
+
+    /**
+     * OpenGraphContext. The social context for this Place, including friends who were at
+     * this place, or who liked to its page. This field requires authentication with a user
+     * token. An error will be thrown if this field is requested using a client token.
+     */
+    String CONTEXT = "context";
+
+    /**
+     * CoverPhoto. Information about the cover image.
+     */
+    String COVER = "cover";
+
+    /**
+     * The description of the Place.
+     */
+    String DESCRIPTION = "description";
+
+    /**
+     * Engagement. The social sentence and like count information for this place.
+     * This is the same information used for the Like button.
+     */
+    String ENGAGEMENT = "engagement";
+
+    /**
+     * Specifies a single range of open hours per day.
+     * Each day can have two different hours ranges.
+     * The keys in the map are in the form of {day}_{number}_{status}.
+     * {day} should be the first 3 characters of the day of the week,
+     * {number} should be either 1 or 2 to allow for the two different hours ranges per day.
+     * {status} should be either open or close, to delineate the start or end of a time range.
+     * An example would be mon_1_open with value 17:00 and mon_1_close with value 21:15
+     * which would represent a single opening range of 5 PM to 9:15 PM on Mondays.
+     */
+    String HOURS = "hours";
+
+    /**
+     * The unique node ID of the place on the graph api.
+     */
+    String ID = "id";
+
+    /**
+     * Indicates whether this place is always open.
+     */
+    String IS_ALWAYS_OPEN = "is_always_open";
+
+    /**
+     * Indicates whether this place is permanently closed.
+     */
+    String IS_PERMANENTLY_CLOSED = "is_permanently_closed";
+
+    /**
+     * Pages with a large number of followers can be manually verified by Facebook as having
+     * an authentic identity. This field indicates whether the page is verified by this process.
+     */
+    String IS_VERIFIED = "is_verified";
+
+    /**
+     * The place's web URL.
+     */
+    String LINK = "link";
+
+    /**
+     * Location information about the Place. E.g., latitude and longitude, and street address.
+     */
+    String LOCATION = "location";
+
+    /**
+     * The categories that this place matched.
+     * To be used on the search request if the categories parameter is specified.
+     */
+    String MATCHED_CATEGORIES = "matched_categories";
+
+    /**
+     * The name of the place.
+     */
+    String NAME = "name";
+
+    /**
+     * Overall page rating based on a rating survey from users, on a scale of 1-5.
+     * This value is normalized, and is not guaranteed to be a strict average of user ratings.
+     */
+    String OVERALL_STAR_RATING = "overall_star_rating";
+
+    /**
+     * PageParking. Parking information about the Place.
+     */
+    String PARKING = "parking";
+
+    /**
+     * The available payment options.
+     */
+    String PAYMENT_OPTIONS = "payment_options";
+
+    /**
+     * The place's phone number.
+     */
+    String PHONE = "phone";
+
+    /**
+     * Profile photos posted by the place's Page.
+     */
+    String PHOTOS_PROFILE = "photos";
+
+    /**
+     * Photos on the place's Page tagged by other Pages.
+     */
+    String PHOTOS_TAGGED = "photos.type(tagged)";
+
+    /**
+     * Photos uploaded by the place's Page.
+     */
+    String PHOTOS_UPLOADED = "photos.type(uploaded)";
+
+    /**
+     * The current profile picture of the place's Page.
+     */
+    String PICTURE = "picture";
+
+    /**
+     * Price range of the business. Applicable to Restaurants or Nightlife.
+     * Can be one of $ (0-10), $$ (10-30), $$$ (30-50), $$$$ (50+), or Unspecified.
+     */
+    String PRICE_RANGE = "price_range";
+
+    /**
+     * Number of ratings for the place.
+     */
+    String RATING_COUNT = "rating_count";
+
+    /**
+     * Restaurant services. Example: delivery, takeout.
+     */
+    String RESTAURANT_SERVICES = "restaurant_services";
+
+    /**
+     * PageRestaurantSpecialties. The restaurant's specialties. Applicable to Restaurants.
+     */
+    String RESTAURANT_SPECIALTIES = "restaurant_specialties";
+
+    /**
+     * The address, in a single line of text.
+     */
+    String SINGLE_LINE_ADDRESS = "single_line_address";
+
+    /**
+     * The URL of the place's website.
+     */
+    String WEBSITE = "website";
+
+    /**
+     * Workflows.
+     */
+    String WORKFLOWS = "workflows";
+}
diff --git a/facebook/src/main/java/com/facebook/places/model/PlaceInfoRequestParams.java b/facebook/src/main/java/com/facebook/places/model/PlaceInfoRequestParams.java
new file mode 100644
index 000000000..bc2816342
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/model/PlaceInfoRequestParams.java
@@ -0,0 +1,108 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * Describes the parameters used to create a place info request
+ * with {@link com.facebook.places.PlaceManager}.
+ */
+public final class PlaceInfoRequestParams {
+
+    private final String placeId;
+    private final Set<String> fields = new HashSet<>();
+
+    private PlaceInfoRequestParams(Builder b) {
+        placeId = b.placeId;
+        fields.addAll(b.fields);
+    }
+
+    /**
+     * Gets the ID of the place to be queried.
+     * @return the ID of the place to be queried.
+     */
+    public String getPlaceId() {
+        return placeId;
+    }
+
+    /**
+     * Gets the list of fields to be returned in the response.
+     * @return the list of fields to be returned in the response.
+     */
+    public Set<String> getFields() {
+        return fields;
+    }
+
+    /**
+     * Describes the builder to create a {@link PlaceInfoRequestParams}.
+     */
+    public static class Builder {
+
+        private String placeId;
+        private final Set<String> fields = new HashSet<>();
+
+        /**
+         * Sets the ID of the place to be queried.
+         * @param placeId the ID of the place to be queried.
+         * @return the builder.
+         */
+        public Builder setPlaceId(String placeId) {
+            this.placeId = placeId;
+            return this;
+        }
+
+        /**
+         * Add a field to be returned in the response data. See {@link PlaceFields} for a list of
+         * known fields. Refer to the online Places Graph documentation for an up to date list of
+         * fields.
+         * @param field The field to be added to the list of fields to be returned.
+         * @return The builder.
+         */
+        public Builder addField(String field) {
+            fields.add(field);
+            return this;
+        }
+
+        /**
+         * Add a list of fields to be returned in the response data. See {@link PlaceFields}
+         * for a list of known fields. Refer to the online Places Graph documentation for an
+         * up to date list of fields.
+         * @param fields The list of fields to be returned in the response data.
+         * @return The builder.
+         */
+        public Builder addFields(String[] fields) {
+            for (String field : fields) {
+                this.fields.add(field);
+            }
+            return this;
+        }
+
+        /**
+         * Returns the {@link PlaceInfoRequestParams}.
+         * @return the {@link PlaceInfoRequestParams}.
+         */
+        public PlaceInfoRequestParams build() {
+            return new PlaceInfoRequestParams(this);
+        }
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/places/model/PlaceSearchRequestParams.java b/facebook/src/main/java/com/facebook/places/model/PlaceSearchRequestParams.java
new file mode 100644
index 000000000..e5c388097
--- /dev/null
+++ b/facebook/src/main/java/com/facebook/places/model/PlaceSearchRequestParams.java
@@ -0,0 +1,171 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * Describes the parameters to create a place search request
+ * with {@link com.facebook.places.PlaceManager}.
+ */
+public final class PlaceSearchRequestParams {
+
+    private final int distance;
+    private final int limit;
+    private final String searchText;
+    private final Set<String> categories = new HashSet<>();
+    private final Set<String> fields = new HashSet<>();
+
+    private PlaceSearchRequestParams(Builder b) {
+        distance = b.distance;
+        limit = b.limit;
+        searchText = b.searchText;
+        categories.addAll(b.categories);
+        fields.addAll(b.fields);
+    }
+
+    /**
+     * Gets the maximum distance (in meters) from the location specified.
+     * This can be used only in conjunction with a location.
+     *
+     * @return The maximum distance in meters from the location specified.
+     */
+    public int getDistance() {
+        return distance;
+    }
+
+    /**
+     * Sets the maximum number of results to be returned.
+     *
+     * @return The maximum number of results to return.
+     */
+    public int getLimit() {
+        return limit;
+    }
+
+    /**
+     * Gets the name of the place to search for.
+     *
+     * @@return The name of the place to search for.
+     */
+    public String getSearchText() {
+        return searchText;
+    }
+
+    /**
+     * Gets the categories used to filter the place search results.
+     * @return The categories used to filter the place search results.
+     */
+    public Set<String> getCategories() {
+        return categories;
+    }
+
+    /**
+     * Gets the list of fields to be returned in the response.
+     * @return The list of fields to be returned in the response.
+     */
+    public Set<String> getFields() {
+        return fields;
+    }
+
+    /**
+     * Describes the builder to create a {@link PlaceSearchRequestParams}
+     */
+    public static class Builder {
+
+        private int distance;
+        private int limit;
+        private String searchText;
+        private final Set<String> categories = new HashSet<>();
+        private final Set<String> fields = new HashSet<>();
+
+        /**
+         * Sets the maximum search radius in meters. If {@code PlaceManager.newPlaceSearchRequest()}
+         * is used, then this parameter defines the maximum search radius around the current device
+         * location. If {@code PlaceManager.newPlaceSearchRequestForLocation()} is used, then this
+         * parameter defines the maximum search radius around the specified location.
+         *
+         * @param distance The maximum distance in meters.
+         * @return The builder.
+         */
+        public Builder setDistance(int distance) {
+            this.distance = distance;
+            return this;
+        }
+
+        /**
+         * Sets the maximum number of places to be returned.
+         *
+         * @param limit The maximum number of places to return.
+         * @return The builder.
+         */
+        public Builder setLimit(int limit) {
+            this.limit = limit;
+            return this;
+        }
+
+        /**
+         * Sets the name of the place to search for.
+         * If this parameter is not specified, then you must supply a location,
+         * and the response will contain places that are near the given location.
+         *
+         * @param searchText The name of the place to search for.
+         * @return The builder.
+         */
+        public Builder setSearchText(String searchText) {
+            this.searchText = searchText;
+            return this;
+        }
+
+        /**
+         * Add a place category to restrict the search results. Refer to the online Places Graph
+         * documentation to see the list of supported categories.
+         * @param category The name of the place category to add as a filter.
+         * @return The builder.
+         */
+        public Builder addCategory(String category) {
+            categories.add(category);
+            return this;
+        }
+
+        /**
+         * Add a place information field to the list of fields to be returned.
+         * Refer to {@link PlaceFields} for a list of fields. Refer to the online Places Graph
+         * documentation for the current list of supported fields.
+         *
+         * @param field The field to be returned in the place search response.
+         * @return The builder.
+         */
+        public Builder addField(String field) {
+            fields.add(field);
+            return this;
+        }
+
+        /**
+         * Returns the {@link PlaceSearchRequestParams}.
+         * @return the {@link PlaceSearchRequestParams}.
+         */
+        public PlaceSearchRequestParams build() {
+            return new PlaceSearchRequestParams(this);
+        }
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareLinkContent.java b/facebook/src/main/java/com/facebook/share/model/ShareLinkContent.java
index f95134a75..d074078d6 100644
--- a/facebook/src/main/java/com/facebook/share/model/ShareLinkContent.java
+++ b/facebook/src/main/java/com/facebook/share/model/ShareLinkContent.java
@@ -23,6 +23,7 @@
 import android.net.Uri;
 import android.os.Parcel;
 import android.support.annotation.Nullable;
+import android.util.Log;
 
 /**
  * Describes link content to be shared.
@@ -33,9 +34,9 @@
  */
 public final class ShareLinkContent
         extends ShareContent<ShareLinkContent, ShareLinkContent.Builder> {
-    private final String contentDescription;
-    private final String contentTitle;
-    private final Uri imageUrl;
+    @Deprecated private final String contentDescription;
+    @Deprecated private final String contentTitle;
+    @Deprecated private final Uri imageUrl;
     private final String quote;
 
     private ShareLinkContent(final Builder builder) {
@@ -55,27 +56,36 @@ private ShareLinkContent(final Builder builder) {
     }
 
     /**
+     * @deprecated As of Graph API 2.9 this field is deprecated and may not function as expected.
+     * For more information, see https://developers.facebook.com/docs/apps/changelog#v2_9_deprecations.
      * The description of the link.  If not specified, this field is automatically populated by
      * information scraped from the link, typically the title of the page.
      * @return The description of the link.
      */
+    @Deprecated
     public String getContentDescription() {
         return this.contentDescription;
     }
 
     /**
+     * @deprecated As of Graph API 2.9 this field is deprecated and may not function as expected.
+     * For more information, see https://developers.facebook.com/docs/apps/changelog#v2_9_deprecations.
      * The title to display for this link.
      * @return The link title.
      */
+    @Deprecated
     @Nullable
     public String getContentTitle() {
         return this.contentTitle;
     }
 
     /**
+     * @deprecated As of Graph API 2.9 this field is deprecated and may not function as expected.
+     * For more information, see https://developers.facebook.com/docs/apps/changelog#v2_9_deprecations.
      * The URL of a picture to attach to this content.
      * @return The network URL of an image.
      */
+    @Deprecated
     @Nullable
     public Uri getImageUrl() {
         return this.imageUrl;
@@ -119,39 +129,50 @@ public ShareLinkContent createFromParcel(final Parcel in) {
      */
     public static final class Builder
             extends ShareContent.Builder<ShareLinkContent, Builder> {
-        private String contentDescription;
-        private String contentTitle;
-        private Uri imageUrl;
+        static final String TAG = Builder.class.getSimpleName();
+        @Deprecated private String contentDescription;
+        @Deprecated private String contentTitle;
+        @Deprecated private Uri imageUrl;
+
         private String quote;
 
         /**
+         * @deprecated As of Graph API 2.9 this field is deprecated and may not function as expected.
          * Set the contentDescription of the link.
+         * For more information, see https://developers.facebook.com/docs/apps/changelog#v2_9_deprecations.
          * @param contentDescription The contentDescription of the link.
          * @return The builder.
          */
+        @Deprecated
         public Builder setContentDescription(
                 @Nullable final String contentDescription) {
-            this.contentDescription = contentDescription;
+            Log.w(TAG, "This method does nothing. ContentDescription is deprecated in Graph API 2.9.");
             return this;
         }
 
         /**
+         * @deprecated As of Graph API 2.9 this field is deprecated and may not function as expected.
+         * For more information, see https://developers.facebook.com/docs/apps/changelog#v2_9_deprecations.
          * Set the contentTitle to display for this link.
          * @param contentTitle The link contentTitle.
          * @return The builder.
          */
+        @Deprecated
         public Builder setContentTitle(@Nullable final String contentTitle) {
-            this.contentTitle = contentTitle;
+            Log.w(TAG, "This method does nothing. ContentTitle is deprecated in Graph API 2.9.");
             return this;
         }
 
         /**
+         * @deprecated As of Graph API 2.9 this field is deprecated and may not function as expected.
+         * For more information, see https://developers.facebook.com/docs/apps/changelog#v2_9_deprecations.
          * Set the URL of a picture to attach to this content.
          * @param imageUrl The network URL of an image.
          * @return The builder.
          */
+        @Deprecated
         public Builder setImageUrl(@Nullable final Uri imageUrl) {
-            this.imageUrl = imageUrl;
+            Log.w(TAG, "This method does nothing. ImageUrl is deprecated in Graph API 2.9.");
             return this;
         }
 
diff --git a/facebook/src/main/res/drawable-hdpi/com_facebook_close.png b/facebook/src/main/res/drawable-hdpi/com_facebook_close.png
index d81f040d7..b60be9c27 100644
Binary files a/facebook/src/main/res/drawable-hdpi/com_facebook_close.png and b/facebook/src/main/res/drawable-hdpi/com_facebook_close.png differ
diff --git a/facebook/src/main/res/drawable-xhdpi/com_facebook_close.png b/facebook/src/main/res/drawable-xhdpi/com_facebook_close.png
index b603ef892..2597da9fd 100755
Binary files a/facebook/src/main/res/drawable-xhdpi/com_facebook_close.png and b/facebook/src/main/res/drawable-xhdpi/com_facebook_close.png differ
diff --git a/facebook/src/main/res/values-af/strings.xml b/facebook/src/main/res/values-af/strings.xml
index 04439a288..32cc26472 100644
--- a/facebook/src/main/res/values-af/strings.xml
+++ b/facebook/src/main/res/values-af/strings.xml
@@ -1,46 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: af_ZA -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Hou van</string>
-    <string name="com_facebook_like_button_liked">Hou van</string>
-    <string name="com_facebook_loginview_log_out_button">Meld af</string>
-    <string name="com_facebook_loginview_log_in_button">Meld aan</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Gaan voort met Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Meld met Facebook aan</string>
-    <string name="com_facebook_loginview_logged_in_as">Aangemeld as: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Met Facebook aangemeld</string>
-    <string name="com_facebook_loginview_log_out_action">Meld af</string>
-    <string name="com_facebook_loginview_cancel_action">Kanselleer</string>
-    <string name="com_facebook_loading">Laai tans&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest-fout</string>
-    <string name="com_facebook_internet_permission_error_message">Webaansig-aanmelding benodig INTERNET-toestemming</string>
-    <string name="com_facebook_tooltip_default">Jy is in beheer – kies watter inligting jy met toepassings wil deel.</string>
-    <string name="com_facebook_image_download_unknown_error">Onverwagse fout met aflaai van \'n
-        prent.</string>
-    <string name="com_facebook_share_button_text">Deel</string>
-    <string name="com_facebook_send_button_text">Stuur</string>
-    <string name="com_facebook_device_auth_instructions">Besoek &lt;b&gt;facebook.com/device&lt;/b&gt; en voer die kode in wat hierbo vertoon word.</string>
-    <string name="com_facebook_smart_device_instructions">Om jou rekening te verbind, maak die Facebook-toepassing op jou mobiele toestel oop en kontroleer vir kennisgewings.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Nie jy nie?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Bevestig aantekening</string>
-    <string name="com_facebook_smart_device_instructions_or">- OF -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Hou van</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Hou van</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Teken uit</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Teken aan</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Meld aan met Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Gaan voort met Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Aangemeld as: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Aangemeld met Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Teken uit</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Kanselleer</string>
+    <string name="com_facebook_loading" gender="unknown">Laai tans …</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest-fout</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-aanmelding vereis INTERNET-toestemming</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Jy is in beheer – kies watter inligting jy met toepassings wil deel.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Onvoorsiene fout terwyl die prent afgelaai is.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Deel</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Stuur</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Besoek &lt;b&gt;facebook.com/device&lt;/b&gt; en voer die kode wat hierbo gewys word, in.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Maak die Facebook-toepassing op jou mobiele toestel oop en soek kennisgewings om jou rekening te koppel.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- OF -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Bevestig aanmelding</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Gaan voort as %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Nie jy nie?</string>
 </resources>
diff --git a/facebook/src/main/res/values-ar/strings.xml b/facebook/src/main/res/values-ar/strings.xml
index a25221e1a..3389c2cb7 100644
--- a/facebook/src/main/res/values-ar/strings.xml
+++ b/facebook/src/main/res/values-ar/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ar_AR -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">إعجاب</string>
-    <string name="com_facebook_like_button_liked">أعجبني</string>
-    <string name="com_facebook_loginview_log_out_button">تسجيل الخروج</string>
-    <string name="com_facebook_loginview_log_in_button">تسجيل الدخول</string>
-    <string name="com_facebook_loginview_log_in_button_continue">متابعة بحساب فيسبوك</string>
-    <string name="com_facebook_loginview_log_in_button_long">تسجيل الدخول بحساب فيسبوك</string>
-    <string name="com_facebook_loginview_logged_in_as">تم تسجيل الدخول باسم: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">تم تسجيل الدخول بحساب فيسبوك</string>
-    <string name="com_facebook_loginview_log_out_action">تسجيل الخروج</string>
-    <string name="com_facebook_loginview_cancel_action">إلغاء</string>
-    <string name="com_facebook_loading">جارٍ التحميل&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">خطأ AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">يتطلب تسجيل الدخول إلى WebView إذن الاتصال بالإنترنت</string>
-    <string name="com_facebook_tooltip_default">أنت المتحكم - اختر المعلومات التي تريد مشاركتها مع التطبيقات.</string>
-    <string name="com_facebook_image_download_unknown_error">حدث خطأ غير متوقع أثناء تنزيل صورة.</string>
-    <string name="com_facebook_share_button_text">مشاركة</string>
-    <string name="com_facebook_send_button_text">إرسال</string>
-    <string name="com_facebook_device_auth_instructions">تفضل بزيارة &lt;b&gt;facebook.com/device&lt;/b&gt; وإدخال الرمز الموضح أدناه.</string>
-    <string name="com_facebook_smart_device_instructions">لربط حسابك، افتح تطبيق فيسبوك على جهازك المحمول ثم تفقد الإشعارات.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">لست أنت؟</string>
-    <string name="com_facebook_smart_login_confirmation_title">تأكيد تسجيل الدخول</string>
-    <string name="com_facebook_smart_device_instructions_or">- أو -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">أعجبني</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">أعجبك</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">تسجيل الخروج</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">تسجيل الدخول</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">تسجيل الدخول بحساب فيسبوك</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">متابعة بحساب فيسبوك</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">تم تسجيل الدخول باسم: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">تم تسجيل الدخول باستخدام حساب فيسبوك</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">تسجيل الخروج</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">إلغاء</string>
+    <string name="com_facebook_loading" gender="unknown">جارٍ التحميل…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">خطأ AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">يتطلب تسجيل دخول WebView الحصول إلى إذن INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">أنت المتحكم في الأمر - يمكنك اختيار المعلومات التي تود مشاركتها مع التطبيقات.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">حدث خطأ غير متوقع أثناء تنزيل صورة.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">مشاركة</string>
+    <string name="com_facebook_send_button_text" gender="unknown">إرسال</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">تفضل بزيارة &lt;b&gt;facebook.com/device&lt;/b&gt; وإدخال الرمز الموضح أعلاه.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">لربط حسابك، افتح تطبيق فيسبوك على جهازك المحمول وراجع الإشعارات.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- أو -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">تأكيد تسجيل الدخول</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">متابعة باسم %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">لست أنت؟</string>
 </resources>
diff --git a/facebook/src/main/res/values-bn/strings.xml b/facebook/src/main/res/values-bn/strings.xml
index 5f33ae95f..b6537c710 100644
--- a/facebook/src/main/res/values-bn/strings.xml
+++ b/facebook/src/main/res/values-bn/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: bn_IN -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">পছন্দ করুন</string>
-    <string name="com_facebook_like_button_liked">পছন্দ করা হয়েছে</string>
-    <string name="com_facebook_loginview_log_out_button">লগ আউট করুন</string>
-    <string name="com_facebook_loginview_log_in_button">লগ ইন করুন</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Facebook এর সাথে চালিয়ে যান</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook -এর সাথে লগ ইন করুন</string>
-    <string name="com_facebook_loginview_logged_in_as">এই হিসাবে লগ ইন করা হয়েছে: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ব্যবহার করে লগ ইন করা হয়েছে</string>
-    <string name="com_facebook_loginview_log_out_action">লগ আউট করুন</string>
-    <string name="com_facebook_loginview_cancel_action">বাতিল করুন</string>
-    <string name="com_facebook_loading">লোড হচ্ছে&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest ত্রুটি</string>
-    <string name="com_facebook_internet_permission_error_message">WebView লগ ইন করার জন্য INTERNET-এর অনুমতির প্রয়োজন আছে</string>
-    <string name="com_facebook_tooltip_default">আপনি নিয়ন্ত্রণে আছেন - অ্যাপ্সের সাথে আপনি যে তথ্য শেয়ার করতে চান তা বাছুন৷</string>
-    <string name="com_facebook_image_download_unknown_error">একটি চিত্র ডাউনলোড করার সময়ে অপ্রত্যাশিত ত্রুটি দেখা দিচ্ছে৷</string>
-    <string name="com_facebook_share_button_text">ভাগ করুন</string>
-    <string name="com_facebook_send_button_text">পাঠান</string>
-    <string name="com_facebook_device_auth_instructions">&lt;b&gt;facebook.com/device&lt;/b&gt; -এ যান এবং উপরে যে কোডটি দেখানো হয়েছে সেটি লিখুন।</string>
-    <string name="com_facebook_smart_device_instructions">আপনার অ্যাকাউন্টে সংযোগ করতে, আপনার মোবাইল ডিভাইসে Facebook অ্যাপটি খুলুন এবং বিজ্ঞপ্তি চেক করুন।</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">আপনি নন?</string>
-    <string name="com_facebook_smart_login_confirmation_title">লগ ইন নিশ্চিত করুন</string>
-    <string name="com_facebook_smart_device_instructions_or">- অথবা -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">লাইক</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">পছন্দ করেছে</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">লগ আউট করুন</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">লগ ইন করুন</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook দিয়ে লগইন করুন</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook এর সাথে চালিয়ে যান</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s হিসাবে লগ ইন করা হয়েছে।</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ব্যবহার করার মাধ্যমে লগ ইন করা হয়েছে</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">লগ আউট করুন</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">বাতিল করুন</string>
+    <string name="com_facebook_loading" gender="unknown">লোড হচ্ছে…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest ত্রুটি</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView লগ ইনের ইন্টারনেটের অনুমতি প্রয়োজন</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">আপনার নিয়ন্ত্রণ রয়েছে - আপনি অ্যাপগুলির সাথে কোন তথ্য শেয়ার করতে চান সেটি বেছে নিন।</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">একটি ছবি ডাউনলোড করার সময় অপ্রত্যাশিত ত্রুটি ঘটেছে৷</string>
+    <string name="com_facebook_share_button_text" gender="unknown">শেয়ার করুন</string>
+    <string name="com_facebook_send_button_text" gender="unknown">পাঠান</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; দেখুন এবং উপরে দেখানো কোডটিকে প্রবেশ করান৷</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">আপনার অ্যাকাউন্ট সংযুক্ত করতে, আপনার মোবাইল ডিভাইসে Facebook অ্যাপ খুলুন এবং বিজ্ঞপ্তিগুলির জন্য পরীক্ষা করুন।</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- বা -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">লগ ইন নিশ্চিত করুন</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s হিসাবে চালিয়ে যান</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">আপনি নন?</string>
 </resources>
diff --git a/facebook/src/main/res/values-cs/strings.xml b/facebook/src/main/res/values-cs/strings.xml
index 3712ca781..b07e05acc 100644
--- a/facebook/src/main/res/values-cs/strings.xml
+++ b/facebook/src/main/res/values-cs/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: cs_CZ -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">To se mi líbí</string>
-    <string name="com_facebook_like_button_liked">Už se mi to líbí</string>
-    <string name="com_facebook_loginview_log_out_button">Odhlásit</string>
-    <string name="com_facebook_loginview_log_in_button">Přihlásit</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Pokračovat přes Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Přihlásit se přes Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Přihlášen(a) jako: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Přihlášen(a) přes Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Odhlásit</string>
-    <string name="com_facebook_loginview_cancel_action">Zrušit</string>
-    <string name="com_facebook_loading">Načítání&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">Chyba AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Webové přihlášení vyžaduje oprávnění použít INTERNET</string>
-    <string name="com_facebook_tooltip_default">Je jen na vás, které informace chcete s aplikacemi sdílet.</string>
-    <string name="com_facebook_image_download_unknown_error">Při stahování obrázku došlo k nečekané chybě.</string>
-    <string name="com_facebook_share_button_text">Sdílet</string>
-    <string name="com_facebook_send_button_text">Odeslat</string>
-    <string name="com_facebook_device_auth_instructions">Navštivte &lt;b&gt;facebook.com/device&lt;/b&gt; a zadejte nahoře uvedený kód.</string>
-    <string name="com_facebook_smart_device_instructions">Účet si můžete připojit tak, že si na mobilním zařízení spustíte aplikaci Facebook a podíváte se do upozornění.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Nejste to vy?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Potvrdit přihlášení</string>
-    <string name="com_facebook_smart_device_instructions_or">- NEBO -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">To se mi líbí</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">To se mi už líbí</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Odhlásit se</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Přihlášení</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Přihlásit se přes Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Pokračovat přes Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Přihlášen(a) jako: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Přihlášení přes Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Odhlásit se</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Zrušit</string>
+    <string name="com_facebook_loading" gender="unknown">Načítání...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Chyba AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView vyžaduje oprávnění pro INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Je to jen na vás – nastavte si, které informace chcete s aplikacemi sdílet.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Neočekávaná chyba při stahování obrázku.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Sdílet</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Odeslat</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Přejděte na &lt;b&gt;facebook.com/device&lt;/b&gt; a zadejte nahoře uvedený kód.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Pokud chcete připojit svůj účet, spusťte aplikaci Facebook ve svém mobilním zařízení a zkontrolujte upozornění.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- NEBO -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Potvrďte přihlášení</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Pokračovat jako %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Nejste to vy?</string>
 </resources>
diff --git a/facebook/src/main/res/values-da/strings.xml b/facebook/src/main/res/values-da/strings.xml
index f19e795e0..8f987fe02 100644
--- a/facebook/src/main/res/values-da/strings.xml
+++ b/facebook/src/main/res/values-da/strings.xml
@@ -1,45 +1,29 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: da_DK -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Synes godt om</string>
-    <string name="com_facebook_like_button_liked">Synes godt om</string>
-    <string name="com_facebook_loginview_log_out_button">Log af</string>
-    <string name="com_facebook_loginview_log_in_button">Log på</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Fortsæt med Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Log på med Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Logget på som: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Logget på med Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Log af</string>
-    <string name="com_facebook_loginview_cancel_action">Annuller</string>
-    <string name="com_facebook_loading">Indlæser &#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">Fejl i forbindelse med AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">WebView-login kræver tilladelse til INTERNET</string>
-    <string name="com_facebook_tooltip_default">Du har styringen – vælg de oplysninger, som du vil dele med apps.</string>
-    <string name="com_facebook_image_download_unknown_error">Der opstod en uventet fejl under download af et billede.</string>
-    <string name="com_facebook_share_button_text">Del</string>
-    <string name="com_facebook_send_button_text">Send</string>
-    <string name="com_facebook_device_auth_instructions">Gå til &lt;b&gt;facebook.com/device&lt;/b&gt;, og indtast den kode, der er angivet ovenfor.</string>
-    <string name="com_facebook_smart_device_instructions">Du kan tilknytte din konto ved at åbne Facebook-appen på din mobilenhed og tjekke notifikationerne.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Ikke dig?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Bekræft login</string>
-    <string name="com_facebook_smart_device_instructions_or">- ELLER -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Synes godt om</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Synes godt om</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Log af</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Log på</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Log på med Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Fortsæt med Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Logget på som %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Logget på med Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Log af</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Annuller</string>
+    <string name="com_facebook_loading" gender="unknown">Indlæser …</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Fejl i AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-login kræver INTERNET-tilladelse</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Du har kontrollen – Vælg, hvilke informationer du vil dele med apps.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Uventet fejl under download af billede.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Del</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Gå til &lt;b&gt;facebook.com/device&lt;/b&gt; og indtast koden, som er vist ovenfor.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">For at tilslutte din konto skal du åbne Facebook-appen på din mobilenhed og se efter, om der er notifikationer.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ELLER -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Bekræft login</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Fortsæt som %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Ikke dig?</string>
 </resources>
diff --git a/facebook/src/main/res/values-de/strings.xml b/facebook/src/main/res/values-de/strings.xml
index 768ed94df..222c68ff9 100644
--- a/facebook/src/main/res/values-de/strings.xml
+++ b/facebook/src/main/res/values-de/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: de_DE -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Gefällt mir</string>
-    <string name="com_facebook_like_button_liked">Gefällt dir</string>
-    <string name="com_facebook_loginview_log_out_button">Abmelden</string>
-    <string name="com_facebook_loginview_log_in_button">Anmelden</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Mit Facebook fortfahren</string>
-    <string name="com_facebook_loginview_log_in_button_long">Über Facebook anmelden</string>
-    <string name="com_facebook_loginview_logged_in_as">Angemeldet als: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Über Facebook angemeldet</string>
-    <string name="com_facebook_loginview_log_out_action">Abmelden</string>
-    <string name="com_facebook_loginview_cancel_action">Abbrechen</string>
-    <string name="com_facebook_loading">Wird geladen &#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest-Fehler</string>
-    <string name="com_facebook_internet_permission_error_message">Die WebView-Anmeldung erfordert die INTERNET-Berechtigung</string>
-    <string name="com_facebook_tooltip_default">Es liegt ganz an dir – du kannst dir aussuchen, was du mit Apps teilen möchtest.</string>
-    <string name="com_facebook_image_download_unknown_error">Unerwarteter Fehler beim Herunterladen eines Bildes.</string>
-    <string name="com_facebook_share_button_text">Teilen</string>
-    <string name="com_facebook_send_button_text">Senden</string>
-    <string name="com_facebook_device_auth_instructions">Besuche &lt;b&gt;facebook.com/device&lt;/b&gt; und gib den oben angezeigten Code ein.</string>
-    <string name="com_facebook_smart_device_instructions">Um dein Konto zu verbinden, öffne die Facebook-App auf deinem Mobilgerät und prüfe, ob du Benachrichtigungen erhalten hast.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Nicht du?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Login bestätigen</string>
-    <string name="com_facebook_smart_device_instructions_or">– ODER –</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Gefällt mir</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Gefällt dir</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Abmelden</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Melde dich an</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Mit Facebook anmelden</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Weiter mit Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Angemeldet als: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Mit Facebook angemeldet</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Abmelden</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Abbrechen</string>
+    <string name="com_facebook_loading" gender="unknown">Wird geladen ...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidOffensichtlicher Fehler</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-Anmeldung erfordert INTERNET-Berechtigung</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Du bestimmst, welche Informationen du mit Apps teilen möchtest.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Unerwarteter Fehler beim Herunterladen eines Bildes.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Teilen</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Senden</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Gehe zu &lt;b&gt;facebook.com/device&lt;/b&gt; und gib den oben angezeigten Code ein.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Öffne die Facebook-App auf deinem Mobilgerät, um dich mit deinem Konto zu verbinden und nach Benachrichtigungen zu suchen.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ODER -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Anmeldung bestätigen</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Weiter als %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Das bist du nicht?</string>
 </resources>
diff --git a/facebook/src/main/res/values-el/strings.xml b/facebook/src/main/res/values-el/strings.xml
index d2341c57f..b68cf0ab3 100644
--- a/facebook/src/main/res/values-el/strings.xml
+++ b/facebook/src/main/res/values-el/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: el_GR -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Μου αρέσει!</string>
-    <string name="com_facebook_like_button_liked">Σας αρέσει</string>
-    <string name="com_facebook_loginview_log_out_button">Αποσύνδεση</string>
-    <string name="com_facebook_loginview_log_in_button">Σύνδεση</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Συνεχίστε με το Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Σύνδεση μέσω Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Έχει γίνει σύνδεση ως: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Έχει γίνει σύνδεση μέσω Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Αποσύνδεση</string>
-    <string name="com_facebook_loginview_cancel_action">Άκυρο</string>
-    <string name="com_facebook_loading">Φόρτωση&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">Σφάλμα AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Για τη σύνδεση στο WebView απαιτείται σύνδεση INTERNET</string>
-    <string name="com_facebook_tooltip_default">Έχετε τον έλεγχο - επιλέξτε ποιες πληροφορίες θέλετε να κοινοποιούνται στις εφαρμογές.</string>
-    <string name="com_facebook_image_download_unknown_error">Προέκυψε μη αναμενόμενο σφάλμα κατά τη λήψη μιας εικόνας.</string>
-    <string name="com_facebook_share_button_text">Κοινοποίηση</string>
-    <string name="com_facebook_send_button_text">Αποστολή</string>
-    <string name="com_facebook_device_auth_instructions">Επισκεφτείτε τη διεύθυνση &lt;b&gt;facebook.com/device&lt;/b&gt; και συμπληρώστε τον παραπάνω κωδικό.</string>
-    <string name="com_facebook_smart_device_instructions">Για να συνδεθείτε στο λογαριασμό σας, ανοίξτε την εφαρμογή Facebook στη φορητή συσκευή σας και ελέγξτε τις ειδοποιήσεις.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Δεν είστε εσείς;</string>
-    <string name="com_facebook_smart_login_confirmation_title">Επιβεβαίωση σύνδεσης</string>
-    <string name="com_facebook_smart_device_instructions_or">- Ή -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Μου αρέσει!</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Σας αρέσει</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Αποσύνδεση</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Σύνδεση</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Συνδεθείτε μέσω Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Συνέχεια με το Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Έχετε συνδεθεί ως: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Έγινε σύνδεση μέσω Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Αποσύνδεση</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Ακύρωση</string>
+    <string name="com_facebook_loading" gender="unknown">Φόρτωση...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Σφάλμα AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Για σύνδεση στην εφαρμογή WebView απαιτείται άδεια INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Εσείς έχετε τον έλεγχο - επιλέξτε ποιες πληροφορίες θέλετε να κοινοποιείτε στις εφαρμογές.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Παρουσιάστηκε μη αναμενόμενο σφάλμα κατά τη λήψη μιας εικόνας.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Κοινοποιήστε</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Αποστολή</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Πηγαίνετε στη διεύθυνση &lt;b&gt;facebook.com/device&lt;/b&gt; και εισαγάγετε τον παραπάνω κωδικό.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Για να συνδέσετε το λογαριασμό σας, ανοίξτε την εφαρμογή Facebook στη φορητή συσκευή σας και ελέγξτε για ειδοποιήσεις.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- Ή -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Επιβεβαίωση σύνδεσης</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Συνέχεια ως %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Δεν είστε εσείς;</string>
 </resources>
diff --git a/facebook/src/main/res/values-en-rGB/strings.xml b/facebook/src/main/res/values-en-rGB/strings.xml
new file mode 100644
index 000000000..22bbe4865
--- /dev/null
+++ b/facebook/src/main/res/values-en-rGB/strings.xml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: en_GB -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_loading" gender="unknown">Loading…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest error</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView login requires Internet permission</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">You\'re in control – choose what information you want to share with apps.</string>
+</resources>
diff --git a/facebook/src/main/res/values-es-rES/strings.xml b/facebook/src/main/res/values-es-rES/strings.xml
index 7cd6534f8..d9faad9f0 100644
--- a/facebook/src/main/res/values-es-rES/strings.xml
+++ b/facebook/src/main/res/values-es-rES/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: es_ES -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Me gusta</string>
-    <string name="com_facebook_like_button_liked">Te gusta</string>
-    <string name="com_facebook_loginview_log_out_button">Salir</string>
-    <string name="com_facebook_loginview_log_in_button">Inicio de sesión</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Continuar con Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Iniciar sesión con Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Sesión iniciada como: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Sesión iniciada con Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Salir</string>
-    <string name="com_facebook_loginview_cancel_action">Cancelar</string>
-    <string name="com_facebook_loading">Cargando&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">Error de AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">El inicio de sesión de WebView requiere permiso para INTERNET</string>
-    <string name="com_facebook_tooltip_default">Tú tienes el control: elige la información que quieres compartir con las aplicaciones.</string>
-    <string name="com_facebook_image_download_unknown_error">Error inesperado al descargar una imagen.</string>
-    <string name="com_facebook_share_button_text">Compartir</string>
-    <string name="com_facebook_send_button_text">Enviar</string>
-    <string name="com_facebook_device_auth_instructions">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; e introduce el código que se muestra arriba.</string>
-    <string name="com_facebook_smart_device_instructions">Para conectar tu cuenta, abre la aplicación de Facebook en tu dispositivo móvil y comprueba las notificaciones.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">¿No eres tú?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Confirmar inicio de sesión</string>
-    <string name="com_facebook_smart_device_instructions_or">- O -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Me gusta</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Te gusta</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Salir</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Entrar</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Inicia sesión con Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continuar con Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Sesión iniciada como: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Has iniciado sesión con Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Salir</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Cancelar</string>
+    <string name="com_facebook_loading" gender="unknown">Cargando…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Error de AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">El inicio de sesión en WebView requiere permisos de INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Tú decides qué información quieres compartir con las aplicaciones.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Se ha producido un error inesperado al descargar una imagen.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Compartir</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Enviar</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; e introduce el código que se muestra más arriba.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Para conectar tu cuenta, abre la aplicación de Facebook en tu dispositivo móvil y comprueba las notificaciones.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- O -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Confirmar inicio de sesión</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continuar como %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">¿No eres tú?</string>
 </resources>
diff --git a/facebook/src/main/res/values-es/strings.xml b/facebook/src/main/res/values-es/strings.xml
index 9d93f4d98..e8e001985 100644
--- a/facebook/src/main/res/values-es/strings.xml
+++ b/facebook/src/main/res/values-es/strings.xml
@@ -1,46 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: es_LA -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Me gusta</string>
-    <string name="com_facebook_like_button_liked">Te gusta</string>
-    <string name="com_facebook_loginview_log_out_button">Salir</string>
-    <string name="com_facebook_loginview_log_in_button">Inicio de sesión</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Continuar con Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Iniciar sesión con Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Sesión iniciada como: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Sesión iniciada con Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Salir</string>
-    <string name="com_facebook_loginview_cancel_action">Cancelar</string>
-    <string name="com_facebook_loading">Cargando&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">Error AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">El inicio de sesión a la web requiere permiso de conexión a internet</string>
-    <string name="com_facebook_tooltip_default">Tú decides: elige qué información quieres compartir con las aplicaciones.</string>
-    <string name="com_facebook_image_download_unknown_error">Se produjo un error inesperado al descargar una imagen.</string>
-    <string name="com_facebook_share_button_text">Compartir</string>
-    <string name="com_facebook_send_button_text">Enviar</string>
-    <string name="com_facebook_device_auth_instructions">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; e ingresa el código que se muestra arriba.</string>
-    <string name="com_facebook_smart_device_instructions">Para conectar tu cuenta, abre la aplicación de Facebook en tu dispositivo móvil y comprueba las notificaciones.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">¿No eres tú?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Confirmar inicio de sesión</string>
-    <string name="com_facebook_smart_login_confirmation_continue_as">Continuar como %1$s</string>
-    <string name="com_facebook_smart_device_instructions_or">- O -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Me gusta</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Te gusta</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Salir</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Entrar</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Iniciar sesión con Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continuar con Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Sesión iniciada como: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Iniciaste sesión con Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Salir</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Cancelar</string>
+    <string name="com_facebook_loading" gender="unknown">Cargando...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Error de AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">El inicio de sesión de WebView requiere permisos de INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Tú decides qué información quieres compartir con las aplicaciones.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Se produjo un error inesperado al descargar una imagen.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Compartir</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Enviar</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Ve a &lt;b&gt;facebook.com/device&lt;/b&gt; e ingresa el código que se muestra arriba.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Para conectar tu cuenta, abre la aplicación de Facebook en tu dispositivo móvil y comprueba las notificaciones.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">o</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Confirmar inicio de sesión</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continuar como %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">¿No eres tú?</string>
 </resources>
diff --git a/facebook/src/main/res/values-fi/strings.xml b/facebook/src/main/res/values-fi/strings.xml
index ba271a25f..f2bffab23 100644
--- a/facebook/src/main/res/values-fi/strings.xml
+++ b/facebook/src/main/res/values-fi/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: fi_FI -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Tykkää</string>
-    <string name="com_facebook_like_button_liked">Tykätty</string>
-    <string name="com_facebook_loginview_log_out_button">Kirjaudu ulos</string>
-    <string name="com_facebook_loginview_log_in_button">Kirjaudu sisään</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Jatka Facebook-tunnuksilla</string>
-    <string name="com_facebook_loginview_log_in_button_long">Kirjaudu sisään Facebookin avulla</string>
-    <string name="com_facebook_loginview_logged_in_as">Sisäänkirjautunut nimellä: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Sisäänkirjautunut Facebookin avulla</string>
-    <string name="com_facebook_loginview_log_out_action">Kirjaudu ulos</string>
-    <string name="com_facebook_loginview_cancel_action">Peruuta</string>
-    <string name="com_facebook_loading">Ladataan&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest-virhe</string>
-    <string name="com_facebook_internet_permission_error_message">WebView-kirjautuminen edellyttää INTERNET-käyttöoikeutta</string>
-    <string name="com_facebook_tooltip_default">Sinä voit valita, mitä tietoja jaat sovelluksille.</string>
-    <string name="com_facebook_image_download_unknown_error">Odottamaton virhe kuvan palvelimesta lataamisen aikana.</string>
-    <string name="com_facebook_share_button_text">Jaa</string>
-    <string name="com_facebook_send_button_text">Lähetä</string>
-    <string name="com_facebook_device_auth_instructions">Siirry osoitteeseen &lt;b&gt;facebook.com/device&lt;/b&gt; ja kirjoita oheinen koodi sivulle.</string>
-    <string name="com_facebook_smart_device_instructions">Pääset liittämään käyttäjätilisi avaamalla Facebook-sovelluksen mobiililaitteellasi ja tarkistamalla ilmoitukset.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Etkö tämä ole sinä?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Vahvista sisäänkirjautuminen</string>
-    <string name="com_facebook_smart_device_instructions_or">- TAI -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Tykkää</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Tykätty</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Kirjaudu ulos</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Kirjaudu sisään</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Kirjaudu Facebook-tunnuksilla</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Jatka Facebookissa</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Kirjautunut sisään nimellä %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Kirjauduttu sisään Facebook-tunnuksilla</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Kirjaudu ulos</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Peruuta</string>
+    <string name="com_facebook_loading" gender="unknown">Ladataan...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest-virhe</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-sisäänkirjautuminen edellyttää Internet-lupaa</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Sinä päätät - valitse mitkä tiedot haluat jakaa sovelluksille</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Kuvaa ladattaessa tapahtui yllättävä virhe.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Jaa</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Lähetä</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Siirry osoitteeseen &lt;b&gt;facebook.com/device&lt;/b&gt; ja anna oheinen koodi.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Liitä tilisi avaamalla Facebook-sovellus matkapuhelimellasi ja tarkistamalla ilmoitukset.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- TAI -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Vahvista sisäänkirjautuminen</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Jatka nimellä %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Etkö ole tämä henkilö?</string>
 </resources>
diff --git a/facebook/src/main/res/values-fr/strings.xml b/facebook/src/main/res/values-fr/strings.xml
index 3083cdeec..0ff84c220 100644
--- a/facebook/src/main/res/values-fr/strings.xml
+++ b/facebook/src/main/res/values-fr/strings.xml
@@ -1,45 +1,32 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: fr_FR -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">J’aime</string>
-    <string name="com_facebook_like_button_liked">J’aime déjà</string>
-    <string name="com_facebook_loginview_log_out_button">Déconnexion</string>
-    <string name="com_facebook_loginview_log_in_button">Connexion</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Continuer avec Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Connexion avec Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Connexion en tant que : %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Connecté(e) à l’aide de Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Déconnexion</string>
-    <string name="com_facebook_loginview_cancel_action">Annuler</string>
-    <string name="com_facebook_loading">Chargement&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">Erreur AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">La connexion au web nécessite une autorisation d’accéder à INTERNET</string>
-    <string name="com_facebook_tooltip_default">Vous gardez le contrôle. Choisissez les informations que vous souhaitez partager avec les applications.</string>
-    <string name="com_facebook_image_download_unknown_error">Une erreur inattendue s’est produite au moment de télécharger une image.</string>
-    <string name="com_facebook_share_button_text">Partager</string>
-    <string name="com_facebook_send_button_text">Envoyer</string>
-    <string name="com_facebook_device_auth_instructions">Consultez la page &lt;b&gt;facebook.com/device&lt;/b&gt; et saisissez le code indiqué ci-dessus.</string>
-    <string name="com_facebook_smart_device_instructions">Pour connecter votre compte, lancez l’application Facebook sur votre appareil mobile et consultez les notifications.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Ce n’est pas vous ?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Confirmer la connexion</string>
-    <string name="com_facebook_smart_device_instructions_or">- OU -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">J’aime</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">J’aime déjà</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Déconnexion</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Connectez-vous</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Se connecter avec Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continuer avec Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Connecté(e) en tant que : %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Connecté(e) avec Facebook</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook_f1gender" gender="female">Connectée avec Facebook</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook_m2gender" gender="male">Connecté avec Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Déconnexion</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Annuler</string>
+    <string name="com_facebook_loading" gender="unknown">Chargement...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Erreur AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">La connexion à WebView nécessite une autorisation INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Vous avez le contrôle - choisissez les informations que vous voulez partager avec les apps.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Une erreur inattendue s’est produite lors du téléchargement d’une image.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Publier</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Envoyer</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Consultez &lt;b&gt;facebook.com/device&lt;/b&gt; et entrez le code affiché ci-dessus.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Pour associer votre compte, ouvrez l’app Facebook sur votre appareil mobile et vérifiez les notifications.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- OU -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Confirmer la connexion</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continuer en tant que %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Ce n’est pas vous ?</string>
 </resources>
diff --git a/facebook/src/main/res/values-gu/strings.xml b/facebook/src/main/res/values-gu/strings.xml
index efb49f12e..c91af5459 100644
--- a/facebook/src/main/res/values-gu/strings.xml
+++ b/facebook/src/main/res/values-gu/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: gu_IN -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">પસંદ કરો</string>
-    <string name="com_facebook_like_button_liked">પસંદ કર્યું</string>
-    <string name="com_facebook_loginview_log_out_button">લૉગ આઉટ કરો</string>
-    <string name="com_facebook_loginview_log_in_button">લૉગ ઇન કરો</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Facebook સાથે ચાલુ રાખો</string>
-    <string name="com_facebook_loginview_log_in_button_long">ફેસબુક સાથે લૉગ ઇન કરો</string>
-    <string name="com_facebook_loginview_logged_in_as">આ તરીકે લૉગ ઇન થયાં: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">ફેસબુકનો ઉપયોગ કરીને લૉગ ઇન કરો</string>
-    <string name="com_facebook_loginview_log_out_action">લૉગ આઉટ કરો</string>
-    <string name="com_facebook_loginview_cancel_action">રદ કરો</string>
-    <string name="com_facebook_loading">લોડ કરી રહ્યાં છે&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest ભૂલ</string>
-    <string name="com_facebook_internet_permission_error_message">WebView લૉગિન માટે ઇન્ટરનેટ પરવાગની આવશ્યક છે</string>
-    <string name="com_facebook_tooltip_default">તમે નિયંત્રણ કરો છો - તમે એપ્લિકેશન્સ સાથે કઈ માહિતી શેર કરવા માંગો છો તે પસંદ કરો.</string>
-    <string name="com_facebook_image_download_unknown_error">છબી ડાઉનલોડ કરતી વખતે અનપેક્ષિત ભૂલ આવી.</string>
-    <string name="com_facebook_share_button_text">શેર કરો</string>
-    <string name="com_facebook_send_button_text">મોકલો</string>
-    <string name="com_facebook_device_auth_instructions">&lt;b&gt;facebook.com/device&lt;/b&gt; ની મુલાકાત લો અને ઉપર બતાવ્યા પ્રમાણે કોડ દાખલ કરો.</string>
-    <string name="com_facebook_smart_device_instructions">તમારા એકાઉન્ટ સાથે જોડાવા માટે, તમારા મોબાઇલ ઉપકરણ પર Facebook એપ્લિકેશન ખોલો અને સૂચનો માટે તપાસો.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">તમે નહિ?</string>
-    <string name="com_facebook_smart_login_confirmation_title">લૉગિનની પુષ્ટિ કરો</string>
-    <string name="com_facebook_smart_device_instructions_or">- અથવા -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">પસંદ કરો</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ગમ્યું</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">લૉગ આઉટ કરો</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">લૉગ ઇન કરો</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook થી લૉગિન કરો</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook સાથે ચાલુ રાખો</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s: તરીકે લૉગ ઇન છે</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">તમે Facebook નો ઉપયોગ કરીને લોગ ઇન કર્યું છે</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">લૉગ આઉટ કરો</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">રદ કરો</string>
+    <string name="com_facebook_loading" gender="unknown">લોડ થઈ રહ્યું છે…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest ભૂલ</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView લૉગિનને ઇન્ટરનેટ પરવાનગીની જરૂર છે</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">તમે નિયંત્રણમાં છો - તમે એપ્લિકેશન્સ સાથે શું માહિતી શેર કરવા માંગો પસંદ કરો.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">છબી ડાઉનલોડ કરતી વખતે એક અનપેક્ષિત ભૂલ આવી.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">શેર કરો</string>
+    <string name="com_facebook_send_button_text" gender="unknown">મોકલો</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&amp;gt ની મુલકાત લો; અને ઉપર આપેલો કોડ દાખલ કરો.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">તમારા એકાઉન્ટ સાથે કનેક્ટ કરવા માટે, તમારા મોબાઇલ ઉપકરણ પર Facebook એપ્લિકેશન ખોલો અને સૂચનાઓ માટે તપાસો.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- અથવા -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">લૉગિનની પુષ્ટિ કરો</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s તરીકે ચાલુ રાખો</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">તમે નથી?</string>
 </resources>
diff --git a/facebook/src/main/res/values-hi/strings.xml b/facebook/src/main/res/values-hi/strings.xml
index 89b0f170b..65b19888c 100644
--- a/facebook/src/main/res/values-hi/strings.xml
+++ b/facebook/src/main/res/values-hi/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: hi_IN -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">पसंद करें</string>
-    <string name="com_facebook_like_button_liked">पसंद किया</string>
-    <string name="com_facebook_loginview_log_out_button">लॉग आउट</string>
-    <string name="com_facebook_loginview_log_in_button">लॉग इन करें</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Facebook के साथ जारी रखें</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook से लॉग इन करें</string>
-    <string name="com_facebook_loginview_logged_in_as">इस रूप में लॉग इन किया: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook का उपयोग करके लॉग इन किया हुआ है</string>
-    <string name="com_facebook_loginview_log_out_action">लॉग आउट</string>
-    <string name="com_facebook_loginview_cancel_action">रद्द करें</string>
-    <string name="com_facebook_loading">लोड हो रहा है&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest गलती</string>
-    <string name="com_facebook_internet_permission_error_message">WebView लॉग इन के लिए INTERNET अनुमति की आवश्यकता है</string>
-    <string name="com_facebook_tooltip_default">आप नियंत्रण में हैं - चुनें कि आप एप्लिकेशन से कौन-सी जानकारी साझा करना चाहते हैं.</string>
-    <string name="com_facebook_image_download_unknown_error">एक चित्र डाउनलोड करते समय अनपेक्षित गलती हुई.</string>
-    <string name="com_facebook_share_button_text">साझा करें</string>
-    <string name="com_facebook_send_button_text">भेजें</string>
-    <string name="com_facebook_device_auth_instructions">&lt;b&gt;facebook.com/device&lt;/b&gt; पर जाएँ और ऊपर दिया गया कोड दर्ज करें.</string>
-    <string name="com_facebook_smart_device_instructions">अपने खाते को कनेक्ट करने के लिए, अपने मोबाइल एप्लिकेशन में Facebook एप्लिकेशन खोलें और सूचनाओं के लिए जाँच करें.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">आप नहीं हैं?</string>
-    <string name="com_facebook_smart_login_confirmation_title">लॉग इन कन्फ़र्म करें</string>
-    <string name="com_facebook_smart_device_instructions_or">- या -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">पसंद करें</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">पसंद किया</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">लॉग आउट करें</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">लॉग इन</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook से लॉग इन करें</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook के साथ जारी रखें</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">इस रूप में लॉग इन हैं: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook का उपयोग करके लॉग इन किया है</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">लॉग आउट करें</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">रद्द करें</string>
+    <string name="com_facebook_loading" gender="unknown">लोड हो रहा है...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest गलती</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView लॉग इन के लिए इंटरनेट अनुमति आवश्यक है</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">नियंत्रण आपके पास है - चुनें कि आप एप्लिकेशन के साथ कौन सी जानकारी साझा करना चाहते हैं.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">चित्र डाउनलोड करते समय अनपेक्षित त्रुटि हुई.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">साझा करें</string>
+    <string name="com_facebook_send_button_text" gender="unknown">भेजें</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; पर विज़िट करें और ऊपर दिखाया गया कोड डालें.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">अपने खाते से कनेक्ट करने के लिए, अपने मोबाइल डिवाइस पर Facebook एप्लिकेशन खोलें और सूचनाएँ जाँचें.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- या -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">लॉग इन कन्फ़र्म करें</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s के रूप में जारी रखें</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">आप नहीं हैं?</string>
 </resources>
diff --git a/facebook/src/main/res/values-hr/strings.xml b/facebook/src/main/res/values-hr/strings.xml
index d5f6b98fc..016cdf947 100644
--- a/facebook/src/main/res/values-hr/strings.xml
+++ b/facebook/src/main/res/values-hr/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: hr_HR -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Sviđa mi se</string>
-    <string name="com_facebook_like_button_liked">Označeno sa "sviđa mi se"</string>
-    <string name="com_facebook_loginview_log_out_button">Odjavi se</string>
-    <string name="com_facebook_loginview_log_in_button">Prijavi se</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Nastavite s korištenjem Facebooka</string>
-    <string name="com_facebook_loginview_log_in_button_long">Prijava putem Facebooka</string>
-    <string name="com_facebook_loginview_logged_in_as">Prijavljen kao: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Prijavljen putem Facebooka</string>
-    <string name="com_facebook_loginview_log_out_action">Odjavi se</string>
-    <string name="com_facebook_loginview_cancel_action">Odustani</string>
-    <string name="com_facebook_loading">Učitavanje u tijeku&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">Pogreška datoteke AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Za prijavu u aplikaciju WebView potrebna je dozvola INTERNET</string>
-    <string name="com_facebook_tooltip_default">Vi odlučujete – odaberite koje podatke želite dijeliti u aplikacijama.</string>
-    <string name="com_facebook_image_download_unknown_error">Prilikom preuzimanja slike došlo je do neočekivane pogreške.</string>
-    <string name="com_facebook_share_button_text">Dijeli</string>
-    <string name="com_facebook_send_button_text">Pošalji</string>
-    <string name="com_facebook_device_auth_instructions">Posjetite adresu &lt;b&gt;facebook.com/device&lt;/b&gt; i unesite gore prikazan kod.</string>
-    <string name="com_facebook_smart_device_instructions">Da biste povezali račun, otvorite aplikaciju Facebook na mobilnom uređaju i potražite obavijesti.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">To niste vi?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Potvrda prijave</string>
-    <string name="com_facebook_smart_device_instructions_or">- ILI -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Sviđa mi se</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Označeno sa \"sviđa mi se\"</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Odjava</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Prijava</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Prijavi se putem Facebooka</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Nastavak uz Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Prijavljeni ste kao: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Prijavljeni ste putem Facebooka</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Odjava</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Odustani</string>
+    <string name="com_facebook_loading" gender="unknown">Učitavanje...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Pogreška AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Prijava WebView zahtijeva dopuštenje za INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Vi odlučujete – odaberite koje informacije želite podijeliti s aplikacijama.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Neočekivana pogreška prilikom preuzimanja slike.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Podijeli</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Pošalji</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Posjetitw &lt;b&gt;facebook.com/device&lt;/b&gt; i unesite gore prikazani kôd.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Za povezivanje svog računa otvorite aplikaciju Facebook na mobilnom uređaju i pročitajte obavijesti.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ILI -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Potvrdi prijavu</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Nastavite kao %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Ovo niste vi?</string>
 </resources>
diff --git a/facebook/src/main/res/values-hu/strings.xml b/facebook/src/main/res/values-hu/strings.xml
index 7da466e3a..6dc9c20f2 100644
--- a/facebook/src/main/res/values-hu/strings.xml
+++ b/facebook/src/main/res/values-hu/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: hu_HU -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Tetszik</string>
-    <string name="com_facebook_like_button_liked">Kedveled</string>
-    <string name="com_facebook_loginview_log_out_button">Kijelentkezés</string>
-    <string name="com_facebook_loginview_log_in_button">Bejelentkezés</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Folytatás a Facebookkal</string>
-    <string name="com_facebook_loginview_log_in_button_long">Bejelentkezés a Facebook használatával</string>
-    <string name="com_facebook_loginview_logged_in_as">Bejelentkezve %1$s néven</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Bejelentkezve a Facebook használatával</string>
-    <string name="com_facebook_loginview_log_out_action">Kijelentkezés</string>
-    <string name="com_facebook_loginview_cancel_action">Törlés</string>
-    <string name="com_facebook_loading">Betöltés&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest-hiba</string>
-    <string name="com_facebook_internet_permission_error_message">A webes bejelentkezéshez szükséges a jogosultság az internet használatára.</string>
-    <string name="com_facebook_tooltip_default">A döntés a kezedben van: kiválaszthatod, hogy milyen adatokat osztasz meg az alkalmazásokkal.</string>
-    <string name="com_facebook_image_download_unknown_error">Váratlan hiba történt egy kép betöltése közben.</string>
-    <string name="com_facebook_share_button_text">Megosztás</string>
-    <string name="com_facebook_send_button_text">Küldés</string>
-    <string name="com_facebook_device_auth_instructions">Keresd fel a &lt;b&gt;facebook.com/device&lt;/b&gt; címet, és írd be a fent megjelenített kódot.</string>
-    <string name="com_facebook_smart_device_instructions">A fiók hozzákapcsolásához nyisd meg a Facebook alkalmazást a mobilkészülékeden, és nézd meg az értesítéseket.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Nem te vagy az?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Bejelentkezés megerősítése</string>
-    <string name="com_facebook_smart_device_instructions_or">- VAGY -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Tetszik</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Kedvelt</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Kijelentkezés</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Belépés</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Bejelentkezés Facebookkal</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Folytatás a Facebookkal</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Bejelentkezve %1$s néven</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Bejelentkezve a Facebook használatával</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Kijelentkezés</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Mégsem</string>
+    <string name="com_facebook_loading" gender="unknown">Betöltés…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest hiba</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">A WebView-bejelentkezéshez „INTERNET” jogosultság szükséges.</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Te irányítasz – válaszd ki, milyen adatokat szeretnél megosztani az alkalmazásokkal.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Váratlan hiba történt a kép letöltésekor.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Megosztás</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Küldés</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Keresd fel a &lt;b&gt;facebook.com/device&lt;/b&gt; címet, és írd be a fent megjelenített kódot.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">A fiók hozzákapcsolásához nyisd meg a mobilkészülékeden a Facebook alkalmazást, és nézd meg az értesítéseket.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- VAGY -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Bejelentkezés megerősítése</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Folytatás mint %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Nem te vagy az?</string>
 </resources>
diff --git a/facebook/src/main/res/values-in/strings.xml b/facebook/src/main/res/values-in/strings.xml
new file mode 100644
index 000000000..04ea86a53
--- /dev/null
+++ b/facebook/src/main/res/values-in/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: id_ID -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Suka</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Suka</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Keluar</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Masuk</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Masuk dengan Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Lanjutkan dengan Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Masuk sebagai: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Masuk menggunakan Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Keluar</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Batalkan</string>
+    <string name="com_facebook_loading" gender="unknown">Memuat…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Terjadi Kesalahan AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Masuk Tampilan Web memerlukan izin INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Anda memegang kendali - pilih info apa yang ingin Anda bagikan dengan aplikasi.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Kesalahan tak terduga ketika mengunduh gambar.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Bagikan</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Kirim</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Kunjungi &lt;b&gt;facebook.com/device&lt;/b&gt; dan masukkan kode yang ditampilkan di bawah ini.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Untuk menghubungkan akun Anda, buka aplikasi Facebook di perangkat seluler Anda dan lihat pemberitahuan.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ATAU -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Konfirmasikan Masuk</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Lanjutkan sebagai %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Bukan Anda?</string>
+</resources>
diff --git a/facebook/src/main/res/values-it/strings.xml b/facebook/src/main/res/values-it/strings.xml
index 17bc6de96..06e864c95 100644
--- a/facebook/src/main/res/values-it/strings.xml
+++ b/facebook/src/main/res/values-it/strings.xml
@@ -1,47 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: it_IT -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Mi piace</string>
-    <string name="com_facebook_like_button_liked">Ti piace</string>
-    <string name="com_facebook_loginview_log_out_button">Esci</string>
-    <string name="com_facebook_loginview_log_in_button">Accedi</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Continua con Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Accedi con Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Accesso effettuato come: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Accesso effettuato con Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Esci</string>
-    <string name="com_facebook_loginview_cancel_action">Annulla</string>
-    <string name="com_facebook_loading">Caricamento&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest Error</string>
-    <string name="com_facebook_internet_permission_error_message">L\'accesso tramite Web richiede
-        l\'autorizzazione INTERNET</string>
-    <string name="com_facebook_tooltip_default">Il controllo è nelle tue mani: scegli quali informazioni condividere con le app.</string>
-    <string name="com_facebook_image_download_unknown_error">Errore imprevisto durante il
-        caricamento di un\'immagine.</string>
-    <string name="com_facebook_share_button_text">Condividi</string>
-    <string name="com_facebook_send_button_text">Invia</string>
-    <string name="com_facebook_device_auth_instructions">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; e inserisci il codice mostrato sopra.</string>
-    <string name="com_facebook_smart_device_instructions">Per collegare il tuo account, apri l\'app Facebook sul tuo dispositivo mobile e controlla se hai notifiche.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Non sei tu?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Conferma l\'accesso</string>
-    <string name="com_facebook_smart_device_instructions_or">- OPPURE -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Mi piace</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Ti piace</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Esci</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Accedi</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Accedi con Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continua con Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Accesso effettuato come %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Accesso effettuato tramite Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Esci</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Annulla</string>
+    <string name="com_facebook_loading" gender="unknown">Caricamento in corso...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Errore AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">L\'accesso alla visualizzazione Web richiede le autorizzazioni Internet</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Il controllo è nelle tue mani: scegli quali informazioni condividere con le app.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Errore imprevisto durante il download dell\'immagine.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Condividi</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Invia</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; e inserisci il codice mostrato qui sotto.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Per connettere il tuo account, apri l\'app Facebook dal tuo dispositivo mobile e controlla le notifiche.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- oppure -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Conferma accesso</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continua come %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Non sei tu?</string>
 </resources>
diff --git a/facebook/src/main/res/values-iw/strings.xml b/facebook/src/main/res/values-iw/strings.xml
new file mode 100644
index 000000000..d1079b628
--- /dev/null
+++ b/facebook/src/main/res/values-iw/strings.xml
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: he_IL -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">אהבתי</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">אהבתי</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">התנתק/י</string>
+    <string name="com_facebook_loginview_log_out_button_f1gender" gender="female">התנתקי</string>
+    <string name="com_facebook_loginview_log_out_button_m2gender" gender="male">התנתק</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">התחבר</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">התחברות באמצעות פייסבוק</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">המשך/המשיכי עם פייסבוק</string>
+    <string name="com_facebook_loginview_log_in_button_continue_f1gender" gender="female">המשיכי עם פייסבוק</string>
+    <string name="com_facebook_loginview_log_in_button_continue_m2gender" gender="male">המשך עם פייסבוק</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">מחובר/ת בתור: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_as_f1gender" gender="female">מחוברת בתור: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_as_m2gender" gender="male">מחובר בתור: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">מחובר/ת כמשתמש בפייסבוק</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook_f1gender" gender="female">מחוברת כמשתמש בפייסבוק</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook_m2gender" gender="male">מחובר כמשתמש בפייסבוק</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">התנתק/י</string>
+    <string name="com_facebook_loginview_log_out_action_f1gender" gender="female">התנתקי</string>
+    <string name="com_facebook_loginview_log_out_action_m2gender" gender="male">התנתק</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">בטל</string>
+    <string name="com_facebook_loading" gender="unknown">טוען...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">שגיאת AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">התחברות WebView דורשת הרשאת אינטרנט</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">את/ה בשליטה - בחר/י אילו פרטים ברצונך לשתף עם אפליקציות.</string>
+    <string name="com_facebook_tooltip_default_f1gender" gender="female">את בשליטה - בחרי אילו פרטים ברצונך לשתף עם אפליקציות.</string>
+    <string name="com_facebook_tooltip_default_m2gender" gender="male">אתה בשליטה - בחר אילו פרטים ברצונך לשתף עם אפליקציות.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">שגיאה לא צפויה במהלך הורדת תמונה.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">שתף/שתפי</string>
+    <string name="com_facebook_share_button_text_f1gender" gender="female">שתפי</string>
+    <string name="com_facebook_share_button_text_m2gender" gender="male">שתף</string>
+    <string name="com_facebook_send_button_text" gender="unknown">שלח/י</string>
+    <string name="com_facebook_send_button_text_f1gender" gender="female">שלחי</string>
+    <string name="com_facebook_send_button_text_m2gender" gender="male">שלח</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">יש לבקר בכתובת facebook.com/device&lt;/b&amp;gt ולהזין את הקוד המוצג למעלה</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">כדי לחבר את חשבונך, יש לפתוח את אפליקציית פייסבוק במכשיר הנייד ולבדוק אם יש התראות.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- או -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">אשר/י את ההתחברות</string>
+    <string name="com_facebook_smart_login_confirmation_title_f1gender" gender="female">אשרי את ההתחברות</string>
+    <string name="com_facebook_smart_login_confirmation_title_m2gender" gender="male">אשר את ההתחברות</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">המשך/המשיכי בתור %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as_f1gender" gender="female">המשיכי בתור %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as_m2gender" gender="male">המשך בתור %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">לא את/ה?</string>
+    <string name="com_facebook_smart_login_confirmation_cancel_f1gender" gender="female">לא את?</string>
+    <string name="com_facebook_smart_login_confirmation_cancel_m2gender" gender="male">לא אתה?</string>
+</resources>
diff --git a/facebook/src/main/res/values-ja/strings.xml b/facebook/src/main/res/values-ja/strings.xml
index 92a3aab4a..c4ff47cc5 100644
--- a/facebook/src/main/res/values-ja/strings.xml
+++ b/facebook/src/main/res/values-ja/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ja_JP -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">いいね！</string>
-    <string name="com_facebook_like_button_liked">いいね！済み</string>
-    <string name="com_facebook_loginview_log_out_button">ログアウト</string>
-    <string name="com_facebook_loginview_log_in_button">ログイン</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Facebookで続ける</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebookでログイン</string>
-    <string name="com_facebook_loginview_logged_in_as">次のユーザーとしてログイン中: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebookを使用してログイン中</string>
-    <string name="com_facebook_loginview_log_out_action">ログアウト</string>
-    <string name="com_facebook_loginview_cancel_action">キャンセル</string>
-    <string name="com_facebook_loading">読み込み中&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifestエラー</string>
-    <string name="com_facebook_internet_permission_error_message">WebViewログインにはINTERNET権限が必要です</string>
-    <string name="com_facebook_tooltip_default">アプリと共有する情報をコントロールできます。</string>
-    <string name="com_facebook_image_download_unknown_error">画像のダウンロード中に予期しないエラーが発生しました。</string>
-    <string name="com_facebook_share_button_text">シェア</string>
-    <string name="com_facebook_send_button_text">送信</string>
-    <string name="com_facebook_device_auth_instructions">&lt;b&gt;facebook.com/device&lt;/b&gt;にアクセスし、上に表示されているコードを入力してください。</string>
-    <string name="com_facebook_smart_device_instructions">アカウントを接続するには、お使いのモバイル機器でFacebookアプリを開き、通知をご確認ください。</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">別のユーザーとしてログイン</string>
-    <string name="com_facebook_smart_login_confirmation_title">ログインの確認</string>
-    <string name="com_facebook_smart_device_instructions_or">- または -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">いいね！</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">「いいね！」しました</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">ログアウト</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">ログイン</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebookでログイン</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebookでログイン</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$sとしてログイン中</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebookでログイン中</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">ログアウト</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">キャンセル</string>
+    <string name="com_facebook_loading" gender="unknown">読み込み中です…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifestエラー</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebViewにログインするには、インターネットへのアクセスが必要です</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">アプリと共有する情報をコントロールすることができます。</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">画像のダウンロードで何らかのエラーが発生しました。</string>
+    <string name="com_facebook_share_button_text" gender="unknown">シェアする</string>
+    <string name="com_facebook_send_button_text" gender="unknown">送信</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt;にアクセスして、上のコードを入力してください。</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">アカウントをリンクするには、モバイル機器でFacebookアプリを開いて、お知らせをご確認ください。</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- または -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">ログインを実行</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$sとしてログイン</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">別のアカウントでログイン</string>
 </resources>
diff --git a/facebook/src/main/res/values-kn/strings.xml b/facebook/src/main/res/values-kn/strings.xml
index be80408f9..d6ac550b0 100644
--- a/facebook/src/main/res/values-kn/strings.xml
+++ b/facebook/src/main/res/values-kn/strings.xml
@@ -1,41 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: kn_IN -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">ಇಷ್ಟವಾಗಿದೆ</string>
-    <string name="com_facebook_like_button_liked">ಇಷ್ಟಪಟ್ಟಿದ್ದಾರೆ</string>
-    <string name="com_facebook_loginview_log_out_button">ಲಾಗ್‌ ಔಟ್‌</string>
-    <string name="com_facebook_loginview_log_in_button">ಲಾಗ್‌ ಇನ್‌</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Facebook ಅನ್ನು ಮುಂದುವರಿಸಿ</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook ಮೂಲಕ ಲಾಗ್‌ ಇನ್‌ ಮಾಡಿ</string>
-    <string name="com_facebook_loginview_logged_in_as">ಇದರಂತೆ ಲಾಗಿನ್‌ ಮಾಡಲಾಗಿದೆ: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ಬಳಸಿಕೊಂಡು ಲಾಗಿನ್‌ ಮಾಡಲಾಗಿದೆ</string>
-    <string name="com_facebook_loginview_log_out_action">ಲಾಗ್‌ ಔಟ್‌</string>
-    <string name="com_facebook_loginview_cancel_action">ರದ್ದುಮಾಡು</string>
-    <string name="com_facebook_loading">ಲೋಡ್‌ ಆಗುತ್ತಿದೆ&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest ದೋಷ</string>
-    <string name="com_facebook_internet_permission_error_message">WebView ಲಾಗಿನ್‌ಗೆ ಇಂಟರ್ನೆಟ್ ಅನುಮತಿಯ ಅಗತ್ಯವಿದೆ</string>
-    <string name="com_facebook_tooltip_default">ನೀವು ನಿಯಂತ್ರಣದಲ್ಲಿರುವಿರಿ - ನೀವು ಅಪ್ಲಿಕೇಶನ್‌ಗಳನ್ನು ಬಳಸಿಕೊಂಡು ಹಂಚಿಕೊಳ್ಳಲು ಬಯಸುವ ವಿಷಯವನ್ನು ಆರಿಸಿ.</string>
-    <string name="com_facebook_image_download_unknown_error">ಚಿತ್ರವನ್ನು ಡೌನ್‌ಲೋಡ್‌ ಮಾಡುವಾಗ ಅನಿರೀಕ್ಷಿತ ದೋಷ ಕಂಡುಬಂದಿದೆ.</string>
-    <string name="com_facebook_share_button_text">ಹಂಚಿಕೊಳ್ಳಿ</string>
-    <string name="com_facebook_send_button_text">ಕಳುಹಿಸಿ</string>
-    <string name="com_facebook_device_auth_instructions">ನಿಮ್ಮ ಸ್ಮಾರ್ಟ್‌ ಫೋನ್‌ ಅಥವಾ ಕಂಪ್ಯೂಟರ್‌ನಲ್ಲಿ &lt;b&gt;facebook.com/device&lt;/b&gt; ಗೆ ಭೇಟಿ ನೀಡಿ ಮತ್ತು ಈ ಕೋಡ್‌ ಅನ್ನು ನಮೂದಿಸಿ:</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">ಇಷ್ಟ</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ಇಷ್ಟಪಟ್ಟಿದ್ದಾರೆ</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">ಲಾಗ್ ಔಟ್</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">ಲಾಗ್ ಇನ್</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook ನೊಂದಿಗೆ ಲಾಗ್ ಇನ್ ಮಾಡಿ</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook ನೊಂದಿಗೆ ಮುಂದುವರಿಸಿ</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s ಎಂದು ಲಾಗಿನ್ ಮಾಡಲಾಗಿದೆ</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ಬಳಸಿ ಲಾಗಿನ್ ಮಾಡಲಾಗಿದೆ</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">ಲಾಗ್ ಔಟ್</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">ರದ್ದುಮಾಡು</string>
+    <string name="com_facebook_loading" gender="unknown">ಲೋಡ್ ಆಗುತ್ತಿದೆ...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Android ಮ್ಯಾನಿಫೆಸ್ಟ್ ದೋಷ</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">ವೆಬ್ ವೀಕ್ಷಣೆ ಲಾಗಿನ್‌ಗೆ ಇಂಟರ್ನೆಟ್ ಅನುಮತಿಯ ಅಗತ್ಯವಿದೆ</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">ನೀವು ನಿಯಂತ್ರಣದಲ್ಲಿದ್ದಿರಿ- ಅಪ್ಲಿಕೇಶನ್‌ಗಳೊಂದಿಗೆ ನೀವು ಯಾವ ಮಾಹಿತಿಯನ್ನು ಹಂಚಿಕೊಳ್ಳಬೇಕೆಂದು ಆಯ್ಕೆಮಾಡಿ.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">ಚಿತ್ರವನ್ನು ಡೌನ್‌ಲೋಡ್ ಮಾಡುವಾಗ ಅನಿರೀಕ್ಷಿತ ದೋಷ.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">ಹಂಚಿರಿ</string>
+    <string name="com_facebook_send_button_text" gender="unknown">ಕಳುಹಿಸಿ</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; ಗೆ ಭೇಟಿ ನೀಡಿ ಮತ್ತು ಮೇಲೆ ತೋರಿಸಿದ ಕೋಡ್ ಅನ್ನು ನಮೂದಿಸಿ.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">ನಿಮ್ಮ ಖಾತೆಯನ್ನು ಸಂಪರ್ಕಿಸಲು, ನಿಮ್ಮ ಮೊಬೈಲ್ ಸಾಧನದಲ್ಲಿ Facebook ಅಪ್ಲಿಕೇಶನ್ ತೆರೆಯಿರಿ ಮತ್ತು ಅಧಿಸೂಚನೆಗಳಿಗಾಗಿ ಪರಿಶೀಲಿಸಿ.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ಅಥವಾ -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">ಲಾಗಿನ್ ಖಚಿತಪಡಿಸಿ</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s ಎಂದು ಮುಂದುವರಿಸಿ</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">ನೀವಲ್ಲವೇ?</string>
 </resources>
diff --git a/facebook/src/main/res/values-ko/strings.xml b/facebook/src/main/res/values-ko/strings.xml
index 23434f956..1e2b9b85b 100644
--- a/facebook/src/main/res/values-ko/strings.xml
+++ b/facebook/src/main/res/values-ko/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ko_KR -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">좋아요</string>
-    <string name="com_facebook_like_button_liked">좋아요</string>
-    <string name="com_facebook_loginview_log_out_button">로그아웃</string>
-    <string name="com_facebook_loginview_log_in_button">로그인</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Facebook으로 계속</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook으로 로그인</string>
-    <string name="com_facebook_loginview_logged_in_as">로그인할 이름: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook 계정으로 로그인함</string>
-    <string name="com_facebook_loginview_log_out_action">로그아웃</string>
-    <string name="com_facebook_loginview_cancel_action">취소</string>
-    <string name="com_facebook_loading">읽어들이는 중&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest 오류</string>
-    <string name="com_facebook_internet_permission_error_message">WebView에 로그인하려면 인터넷 권한이 필요합니다</string>
-    <string name="com_facebook_tooltip_default">원하는 정보를 선택하여 앱에 공유할 수 있습니다.</string>
-    <string name="com_facebook_image_download_unknown_error">이미지를 다운로드하는 중 예기치 않은 오류가 발생했습니다.</string>
-    <string name="com_facebook_share_button_text">공유하기</string>
-    <string name="com_facebook_send_button_text">보내기</string>
-    <string name="com_facebook_device_auth_instructions">&lt;b&gt;facebook.com/device&lt;/b&gt;를 방문하여 위에 표시된 코드를 입력하세요.</string>
-    <string name="com_facebook_smart_device_instructions">계정을 연결하려면 모바일 기기에서 Facebook 앱을 열고 알림을 확인하세요.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">회원님이 아닌가요?</string>
-    <string name="com_facebook_smart_login_confirmation_title">로그인 확인</string>
-    <string name="com_facebook_smart_device_instructions_or">- 또는 -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">좋아요</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">좋아요</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">로그아웃</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">로그인</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook으로 로그인</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook으로 계속하기</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">로그인 사용자: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook을 사용하여 로그인함</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">로그아웃</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">취소</string>
+    <string name="com_facebook_loading" gender="unknown">읽어들이는 중...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest 오류</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView 로그인에 인터넷 권한이 필요합니다</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">앱과 공유할 정보를 자유롭게 선택할 수 있습니다.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">이미지를 다운로드하는 중 예기치 않은 오류가 발생했습니다.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">공유하기</string>
+    <string name="com_facebook_send_button_text" gender="unknown">보내기</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt;에 방문하여 위 코드를 입력하세요.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">계정에 연결하려면 모바일 기기에서 Facebook 앱을 열고 알림을 확인하세요.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- 또는 -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">로그인 확인</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s님으로 계속</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">회원님이 아닌가요?</string>
 </resources>
diff --git a/facebook/src/main/res/values-ml/strings.xml b/facebook/src/main/res/values-ml/strings.xml
index 1de247282..17c55e1ea 100644
--- a/facebook/src/main/res/values-ml/strings.xml
+++ b/facebook/src/main/res/values-ml/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ml_IN -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">ലൈക്കുചെയ്യുക</string>
-    <string name="com_facebook_like_button_liked">ലൈക്കുചെയ്‌‌തു</string>
-    <string name="com_facebook_loginview_log_out_button">ലോഗ്ഔട്ട് ചെയ്യുക</string>
-    <string name="com_facebook_loginview_log_in_button">ലോഗിൻ ചെയ്യുക</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Facebook ഉപയോഗിച്ച് തുടരുക</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook ഉപയോഗിച്ച് ലോഗിൻ ചെയ്യുക</string>
-    <string name="com_facebook_loginview_logged_in_as">ഇതുപ്രകാരം ലോഗിൻ ചെയ്യുക: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ഉപയോഗിച്ച് ലോഗിൻ ചെയ്‌തു</string>
-    <string name="com_facebook_loginview_log_out_action">ലോഗ്ഔട്ട് ചെയ്യുക</string>
-    <string name="com_facebook_loginview_cancel_action">റദ്ദാക്കുക</string>
-    <string name="com_facebook_loading">ലോഡുചെയ്യുന്നു&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest പിശക്</string>
-    <string name="com_facebook_internet_permission_error_message">WebView ലോഗിന് ഇന്റർനെറ്റ് അനുമതി ആവശ്യമാണ്</string>
-    <string name="com_facebook_tooltip_default">നിങ്ങളുടെ നിയന്ത്രണത്തിലാണ് - നിങ്ങൾക്ക് ആപ്‌സുമായി ഏതെല്ലാം വിവരങ്ങൾ പങ്കിടണമെന്ന് തിരഞ്ഞെടുക്കുക.</string>
-    <string name="com_facebook_image_download_unknown_error">ചിത്രം ഡൗൺലോഡുചെയ്യുന്നതിൽ അപ്രതീക്ഷിത പിശക് സംഭവിച്ചു.</string>
-    <string name="com_facebook_share_button_text">പങ്കിടുക</string>
-    <string name="com_facebook_send_button_text">അയയ്‌ക്കുക</string>
-    <string name="com_facebook_device_auth_instructions">&lt;b&gt;facebook.com/device&lt;/b&gt; സന്ദർശിച്ച്‌ മുകളിൽ കാണിച്ച‌ കോഡ്‌ നൽകുക.</string>
-    <string name="com_facebook_smart_device_instructions">നിങ്ങളുടെ അക്കൗണ്ട്‌ കണക്‌റ്റുചെയ്യാൻ, നിങ്ങളുടെ മൊബൈൽ ഉപകരണത്തിലെ Facebook ആപ്പ്‌ തുറന്ന്‌ അറിയിപ്പുകൾ പരിശോധിക്കുക.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">നിങ്ങൾ അല്ലേ?</string>
-    <string name="com_facebook_smart_login_confirmation_title">ലോഗിൻ സ്ഥിരീകരിക്കുക</string>
-    <string name="com_facebook_smart_device_instructions_or">- അല്ലെങ്കിൽ -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">ലൈക്കുചെയ്യുക</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ലൈക്കുചെയ്തു</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">ലോഗൗട്ട് ചെയ്യുക</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">ലോഗിന് ചെയ്യുക</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook ഉപയോഗിച്ച് ലോഗിൻ ചെയ്യുക</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook ഉപയോഗിച്ച് തുടരുക</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">എന്നയാളായി ലോഗ് ഇൻ ചെയ്‌തു: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ഉപയോഗിച്ച് ലോഗിൻ ചെയ്‌തു</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">ലോഗൗട്ട് ചെയ്യുക</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">റദ്ദാക്കുക</string>
+    <string name="com_facebook_loading" gender="unknown">ലോഡ് ചെയ്യുന്നു…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest പിശക്</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView ലോഗിൻ ചെയ്യാൻ ഇന്റർനെറ്റ് അനുമതി ആവശ്യമാണ്</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">നിങ്ങൾ നിയന്ത്രണത്തിലാണ് - ആപ്പുകൾ ഉപയോഗിച്ച് നിങ്ങൾക്ക് എന്ത് വിവരമാണ് പങ്കിടേണ്ടതെന്ന് തിരഞ്ഞെടുക്കുക.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">ഒരു ചിത്രം ഡൗൺലോഡുചെയ്യുമ്പോൾ അജ്ഞാതമായ പിശക് സംഭവിച്ചു.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">പങ്കിടുക</string>
+    <string name="com_facebook_send_button_text" gender="unknown">അയയ്ക്കുക</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; സന്ദർശിച്ച് മുകളിൽ കാണിച്ചിരിക്കുന്ന കോഡ് നൽകുക.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">നിങ്ങളുടെ അക്കൗണ്ട് കണക്‌റ്റ്ചെയ്യാൻ, നിങ്ങളുടെ മൊബൈൽ ഉപകരണത്തിലെ Facebook ആപ്പ് തുറന്ന് അറിയിപ്പുകൾ പരിശോധിക്കുക.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- അല്ലെങ്കിൽ -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">ലോഗിൻ സ്ഥിരീകരിക്കുക</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s എന്നയാളായി തുടരുക</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">നിങ്ങള്‍ അല്ലേ?</string>
 </resources>
diff --git a/facebook/src/main/res/values-mr/strings.xml b/facebook/src/main/res/values-mr/strings.xml
index d9f0510f9..d01142746 100644
--- a/facebook/src/main/res/values-mr/strings.xml
+++ b/facebook/src/main/res/values-mr/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: mr_IN -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">आवडले</string>
-    <string name="com_facebook_like_button_liked">आवडलेले</string>
-    <string name="com_facebook_loginview_log_out_button">लॉग आउट करा</string>
-    <string name="com_facebook_loginview_log_in_button">लॉग इन करा</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Facebook सह चालू ठेवा</string>
-    <string name="com_facebook_loginview_log_in_button_long">फेसबुकसह लॉग इन करा</string>
-    <string name="com_facebook_loginview_logged_in_as">म्हणून लॉग इन केले: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">फेसबुक वापरून लॉग इन केले</string>
-    <string name="com_facebook_loginview_log_out_action">लॉग आउट करा</string>
-    <string name="com_facebook_loginview_cancel_action">रद्द करा</string>
-    <string name="com_facebook_loading">लोड होत आहे&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest त्रुटी</string>
-    <string name="com_facebook_internet_permission_error_message">वेबदृश्य लॉग इन आवश्यकता इंटरनेट परवानगी</string>
-    <string name="com_facebook_tooltip_default">तुम्ही नियंत्रणात आहात - तुम्ही कोणती माहिती अॅपसह सामायिक करू इच्छिता ते निवडा.</string>
-    <string name="com_facebook_image_download_unknown_error">प्रतिमा डाउनलोड करताना अनपेक्षित त्रुटी.</string>
-    <string name="com_facebook_share_button_text">सामायिक करा</string>
-    <string name="com_facebook_send_button_text">पाठवा</string>
-    <string name="com_facebook_device_auth_instructions">&lt;b&gt;facebook.com/device&lt;/b&gt; वर भेट द्या आणि वर दर्शवलेला कोड प्रविष्ट करा.</string>
-    <string name="com_facebook_smart_device_instructions">तुमचे खाते कनेक्ट करण्यासाठी, तुमच्या मोबाईल उपकरणावर Facebook अॅप उघडा आणि सूचना तपासा.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">तुम्ही नाही?</string>
-    <string name="com_facebook_smart_login_confirmation_title">लॉग इन पुष्टी करा</string>
-    <string name="com_facebook_smart_device_instructions_or">- किंवा -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">आवडले</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">पसंत केले</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">लॉग आउट करा</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">लॉग इन करा</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook सह लॉग इन करा</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook सह चालू ठेवा</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s म्हणून लॉग इन केले</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook वापरून लॉग इन केले</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">लॉग आउट करा</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">रद्द करा</string>
+    <string name="com_facebook_loading" gender="unknown">लोड करत आहे…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest त्रुटी</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView लॉग इन ला इंटरनेट परवानगीची आवश्यकता आहे</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">तुम्ही नियंत्रणात आहात - तुम्ही अॅपसह कोणती माहिती सामायिक करू इच्छिता ते निवडा.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">प्रतिमा डाउनलोड करत असताना अनपेक्षित त्रुटी आली.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">शेअर करा</string>
+    <string name="com_facebook_send_button_text" gender="unknown">पाठवा</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; भेट द्या आणि वरील कोड प्रविष्ट करा.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">तुमचे खाते कनेक्ट करण्यासाठी, तुमच्या मोबाईल उपकरणावर Facebook अॅप उघडा आणि सूचना तपासा.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- किंवा -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">लॉग इन पुष्टी करा</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s म्हणून चालू ठेवा</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">आपण नाही?</string>
 </resources>
diff --git a/facebook/src/main/res/values-ms/strings.xml b/facebook/src/main/res/values-ms/strings.xml
index c74a213e5..203791a31 100644
--- a/facebook/src/main/res/values-ms/strings.xml
+++ b/facebook/src/main/res/values-ms/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ms_MY -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Suka</string>
-    <string name="com_facebook_like_button_liked">Disukai</string>
-    <string name="com_facebook_loginview_log_out_button">Log keluar</string>
-    <string name="com_facebook_loginview_log_in_button">Log masuk</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Teruskan dengan Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Log masuk dengan Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Dilog masuk sebagai: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Dilog masuk menggunakan Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Log keluar</string>
-    <string name="com_facebook_loginview_cancel_action">Batal</string>
-    <string name="com_facebook_loading">Memuatkan&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">Ralat AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Log masuk WebView memerlukan kebenaran INTERNET</string>
-    <string name="com_facebook_tooltip_default">Anda yang mengawal - pilih maklumat yang anda ingin kongsi dengan apl.</string>
-    <string name="com_facebook_image_download_unknown_error">Ralat tidak dijangka ketika memuat turun imej.</string>
-    <string name="com_facebook_share_button_text">Kongsi</string>
-    <string name="com_facebook_send_button_text">Hantar</string>
-    <string name="com_facebook_device_auth_instructions">Lawati &lt;b&gt;facebook.com/device&lt;/b&gt; dan masukkan kod yang ditunjukkan di atas.</string>
-    <string name="com_facebook_smart_device_instructions">Untuk menghubungkan akaun anda, buka apl Facebook di peranti mudah alih anda dan semak pemberitahuan.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Bukan anda?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Sahkan Log Masuk</string>
-    <string name="com_facebook_smart_device_instructions_or">- ATAU -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Suka</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Disukai</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Log keluar</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Log masuk</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Log masuk dengan Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Teruskan dengan Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Dilog masuk sebagai %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Log masuk menggunakan Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Log keluar</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Batal</string>
+    <string name="com_facebook_loading" gender="unknown">Memuatkan...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Ralat AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Log masuk WebView memerlukan kebenaran INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Anda berada dalam kawalan - pilih maklumat yang anda mahu berkongsi dengan aplikasi.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Ralat tidak dijangka semasa memuat turun imej.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Kongsi</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Hantar</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Lawati &lt;b&gt;facebook.com/device&lt;/b&gt; dan masukkan kod yang ditunjukkan di atas.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Untuk menyambungkan akaun anda, buka aplikasi Facebook pada peranti mudah alih anda, dan semak untuk pemberitahuan.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ATAU -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Sahkan Log Masuk</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Teruskan sebagai %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Bukan anda?</string>
 </resources>
diff --git a/facebook/src/main/res/values-nb/strings.xml b/facebook/src/main/res/values-nb/strings.xml
index 4537d17e0..014e5d823 100644
--- a/facebook/src/main/res/values-nb/strings.xml
+++ b/facebook/src/main/res/values-nb/strings.xml
@@ -1,45 +1,29 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: nb_NO -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Liker</string>
-    <string name="com_facebook_like_button_liked">Likt</string>
-    <string name="com_facebook_loginview_log_out_button">Logg ut</string>
-    <string name="com_facebook_loginview_log_in_button">Logg inn</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Fortsett med Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Logg inn med Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Logget inn som: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Logget inn med Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Logg ut</string>
-    <string name="com_facebook_loginview_cancel_action">Avbryt</string>
-    <string name="com_facebook_loading">Laster inn &#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest-feil</string>
-    <string name="com_facebook_internet_permission_error_message">Webvisning-innlogging krever INTERNETT-tillatelse</string>
-    <string name="com_facebook_tooltip_default">Du bestemmer – velg hvilke opplysninger du vil dele med appene.</string>
-    <string name="com_facebook_image_download_unknown_error">Det oppstod en uventet feil ved nedlasting av et bilde.</string>
-    <string name="com_facebook_share_button_text">Del</string>
-    <string name="com_facebook_send_button_text">Send</string>
-    <string name="com_facebook_device_auth_instructions">Gå til &lt;b&gt;facebook.com/device&lt;/b&gt;, og oppgi koden som vises ovenfor.</string>
-    <string name="com_facebook_smart_device_instructions">Koble til kontoen din ved å åpne Facebook-appen på mobilenheten din og se etter varsler.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Ikke deg?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Bekreft innlogging</string>
-    <string name="com_facebook_smart_device_instructions_or">- ELLER -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Liker</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Likt</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Logg av</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Logg inn</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Logg inn med Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Fortsett med Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Logget inn som %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Innlogget med Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Logg av</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Avbryt</string>
+    <string name="com_facebook_loading" gender="unknown">Laster inn ...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest-feil</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-innlogging krever INTERNETT-tillatelse</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Du bestemmer – velg hvilke opplysninger du vil dele med apper.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Det oppstod en uvented feil under nedlasting av et bilde.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Del</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Gå til &lt;b&gt;facebook.com/device&lt;/b&gt; og skriv inn koden som vises over.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Koble til kontoen din ved å åpne Facebook-appen på mobilenheten din og se etter varsler.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">– ELLER –</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Bekreft innlogging</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Fortsett som %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Ikke deg?</string>
 </resources>
diff --git a/facebook/src/main/res/values-nl/strings.xml b/facebook/src/main/res/values-nl/strings.xml
index 42707e404..32ebcc148 100644
--- a/facebook/src/main/res/values-nl/strings.xml
+++ b/facebook/src/main/res/values-nl/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: nl_NL -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Vind ik leuk</string>
-    <string name="com_facebook_like_button_liked">Vind ik leuk</string>
-    <string name="com_facebook_loginview_log_out_button">Afmelden</string>
-    <string name="com_facebook_loginview_log_in_button">Aanmelden</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Doorgaan met Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Aanmelden met Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Aangemeld als: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Aangemeld via Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Afmelden</string>
-    <string name="com_facebook_loginview_cancel_action">Annuleren</string>
-    <string name="com_facebook_loading">Laden&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest Error</string>
-    <string name="com_facebook_internet_permission_error_message">Voor aanmelding via webweergave is de toestemming INTERNET vereist</string>
-    <string name="com_facebook_tooltip_default">Jij hebt de controle. Kies welke informatie je met apps wilt delen.</string>
-    <string name="com_facebook_image_download_unknown_error">Onverwachte fout tijdens het downloaden van een afbeelding.</string>
-    <string name="com_facebook_share_button_text">Delen</string>
-    <string name="com_facebook_send_button_text">Verzenden</string>
-    <string name="com_facebook_device_auth_instructions">Ga naar &lt;b&gt;facebook.com/device&lt;/b&gt; en voer de bovenstaande code in.</string>
-    <string name="com_facebook_smart_device_instructions">Om je account te verbinden, open je de Facebook-app op je mobiele apparaat en controleer of je meldingen ziet.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Ben jij dit niet?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Aanmelden bevestigen</string>
-    <string name="com_facebook_smart_device_instructions_or">- OF -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Vind ik leuk</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Vind ik leuk</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Afmelden</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Aanmelden</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Aanmelden met Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Doorgaan met Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Aangemeld als: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Aangemeld via Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Afmelden</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Annuleren</string>
+    <string name="com_facebook_loading" gender="unknown">Laden...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest-fout</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Voor WebView-aanmelding is INTERNET-toestemming vereist</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Jij hebt de controle: bepaal welke informatie je met apps wilt delen.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Onverwachte fout bij downloaden van afbeelding.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Delen</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Verzenden</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Ga naar &lt;b&gt;facebook.com/device&lt;/b&gt; en voer de bovenstaande code in.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Als je je account wilt koppelen, open je de Facebook-app op je mobiele apparaat en controleer je je meldingen.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- OF -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Aanmelding bevestigen</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Doorgaan als %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Ben jij dit niet?</string>
 </resources>
diff --git a/facebook/src/main/res/values-pa/strings.xml b/facebook/src/main/res/values-pa/strings.xml
index 6a2cea358..1c52a62c5 100644
--- a/facebook/src/main/res/values-pa/strings.xml
+++ b/facebook/src/main/res/values-pa/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: pa_IN -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">ਪਸੰਦ ਕਰੋ</string>
-    <string name="com_facebook_like_button_liked">ਪਸੰਦ ਕੀਤਾ ਗਿਆ</string>
-    <string name="com_facebook_loginview_log_out_button">ਲੌਗ ਆਉਟ ਕਰੋ</string>
-    <string name="com_facebook_loginview_log_in_button">ਲੌਗ ਇਨ ਕਰੋ</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Facebook ਦੇ ਨਾਲ ਜਾਰੀ ਰੱਖੋ</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook ਦੇ ਨਾਲ ਲੌਗ ਇਨ ਕਰੋ</string>
-    <string name="com_facebook_loginview_logged_in_as">ਇਸ ਵੱਜੋਂ ਲੌਗ ਇਨ ਕੀਤਾ ਗਿਆ: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ਦਾ ਉਪਯੋਗ ਕਰਕੇ ਲੌਗ ਇਨ ਕੀਤਾ ਗਿਆ</string>
-    <string name="com_facebook_loginview_log_out_action">ਲੌਗ ਆਉਟ ਕਰੋ</string>
-    <string name="com_facebook_loginview_cancel_action">ਰੱਦ ਕਰੋ</string>
-    <string name="com_facebook_loading">ਲੋਡ ਕਰ ਰਿਹਾ ਹੈ&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest ਤਰੁੱਟੀ</string>
-    <string name="com_facebook_internet_permission_error_message">WebView ਲੌਗ ਨੂੰ ਇੰਟਰਨੈੱਟ ਅਨੁਮਤੀ ਦੀ ਲੋੜ ਹੁੰਦੀ ਹੈ</string>
-    <string name="com_facebook_tooltip_default">ਤੁ\ਸੀਂ ਨਿਯੰਤਰਣ ਵਿੱਚ ਹੋ - ਉਹ ਜਾਣਕਾਰੀ ਚੁਣੋ ਜੋ ਤੁਸੀਂ ਐਪਸ ਦੇ ਨਾਲ ਸਾਂਝੀ ਕਰਨੀ ਚਾਹੁੰਦੇ ਹੋ।</string>
-    <string name="com_facebook_image_download_unknown_error">ਕਿਸੇ ਤਸਵੀਰ ਨੂੰ ਡਾਉਨਲੋਡ ਕਰਨ ਵੇਲੇ ਅਗਿਆਤ ਤਰੁੱਟੀ ਹੋ ਗਈ।</string>
-    <string name="com_facebook_share_button_text">ਸਾਂਝਾ ਕਰੋ</string>
-    <string name="com_facebook_send_button_text">ਭੇਜੋ</string>
-    <string name="com_facebook_device_auth_instructions">&lt;b&gt;facebook.com/device&lt;/b&gt; ਵਿੱਚ ਜਾਓ ਅਤੇ ਉੱਤੇ ਦਿਖਾਏ ਗਏ ਕੋਡ ਨੂੰ ਦਾਖ਼ਲ ਕਰੋ।</string>
-    <string name="com_facebook_smart_device_instructions">ਆਪਣੇ ਖਾਤੇ ਨਾਲ ਕਨੈਕਟ ਕਰਨ ਲਈ, ਆਪਣੀ ਮੋਬਾਈਲ ਡਿਵਾਈਸ \'ਤੇ Facebook ਐਪ ਨੂੰ ਖੋਲ੍ਹੋ ਅਤੇ ਸੂਚਨਾਵਾਂ ਨੂੰ ਦੇਖੋ।</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">ਕੀ ਤੁਸੀਂ ਨਹੀਂ ਹੋ?</string>
-    <string name="com_facebook_smart_login_confirmation_title">ਲੌਗਇਨ ਦੀ ਪੁਸ਼ਟੀ ਕਰੋ</string>
-    <string name="com_facebook_smart_device_instructions_or">- ਜਾਂ -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">ਪਸੰਦ ਕਰੋ</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ਪਸੰਦ ਕੀਤਾ</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">ਲੌਗ ਆਉਟ ਕਰੋ</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">ਲਾਗ ਇਨ</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook ਦੇ ਨਾਲ ਲੌਗ ਇਨ ਕਰੋ</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook ਨਾਲ ਜਾਰੀ ਰੱਖੋ</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">ਇਸ ਵੱਜੋਂ ਲੌਗ ਇਨ ਕੀਤਾ ਗਿਆ: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ਦੀ ਵਰਤੋਂ ਕਰਦੇ ਹੋਏ ਲੌਗ ਇਨ ਕਰੋ</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">ਲੌਗ ਆਉਟ ਕਰੋ</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">ਰੱਦ ਕਰੋ</string>
+    <string name="com_facebook_loading" gender="unknown">ਲੋਡ ਹੋ ਰਿਹਾ ਹੈ...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest ਤਰੁੱਟੀ</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView ਵਿੱਚ ਲੌਗ ਇਨ ਕਰਨ ਲਈ ਇੰਟਰਨੈੱਟ ਦੀ ਇਜਾਜ਼ਤ ਦੀ ਲੋੜ ਹੈ</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">ਤੁਸੀਂ ਨਿਯੰਤਰਣ ਵਿੱਚ ਹੋ - ਇਹ ਚੁਣੋ ਕਿ ਐਪਾਂ ਨਾਲ ਤੁਸੀਂ ਕਿਹੜੀ ਜਾਣਕਾਰੀ ਨੂੰ ਸਾਂਝਾ ਕਰਨਾ ਚਾਹੁੰਦੇ ਹੋ।</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">ਇੱਕ ਚਿੱਤਰ ਡਾਉਨਲੋਡ ਕਰਨ ਦੌਰਾਨ ਅਕਲਪਿਤ ਤਰੁੱਟੀ।</string>
+    <string name="com_facebook_share_button_text" gender="unknown">ਸਾਂਝਾ ਕਰੋ</string>
+    <string name="com_facebook_send_button_text" gender="unknown">ਭੇਜੋ</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; \'ਤੇ ਵਿਜਿਟ ਕਰੋ ਅਤੇ ਉੱਪਰ ਦਿੱਤੇ ਕੋਡ ਨੂੰ ਦਾਖ਼ਲ ਕਰੋ।</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">ਆਪਣੇ ਖਾਤੇ ਨੂੰ ਕਨੈਕਟ ਕਰਨ ਲਈ, ਮੋਬਾਈਲ ਡਿਵਾਈਸ \'ਤੇ Facebook ਐਪ ਖੋਲ੍ਹੋ ਅਤੇ ਸੂਚਨਾਵਾਂ ਦੀ ਜਾਂਚ ਕਰੋ।</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ਜਾਂ -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">ਲੌਗ ਇਨ ਦੀ ਪੁਸ਼ਟੀ ਕਰੋ</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s ਵਜੋਂ ਜਾਰੀ ਰੱਖੋ</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">ਇਹ ਤੁਸੀਂ ਨਹੀਂ ਹੋ?</string>
 </resources>
diff --git a/facebook/src/main/res/values-pl/strings.xml b/facebook/src/main/res/values-pl/strings.xml
index 9f1e5b916..7f09f3e1b 100644
--- a/facebook/src/main/res/values-pl/strings.xml
+++ b/facebook/src/main/res/values-pl/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: pl_PL -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Lubię to!</string>
-    <string name="com_facebook_like_button_liked">Polubione</string>
-    <string name="com_facebook_loginview_log_out_button">Wyloguj się</string>
-    <string name="com_facebook_loginview_log_in_button">Zaloguj się</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Kontynuuj za pośrednictwem Facebooka</string>
-    <string name="com_facebook_loginview_log_in_button_long">Zaloguj się przez Facebooka</string>
-    <string name="com_facebook_loginview_logged_in_as">Zalogowano jako: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Zalogowano przez Facebooka</string>
-    <string name="com_facebook_loginview_log_out_action">Wyloguj się</string>
-    <string name="com_facebook_loginview_cancel_action">Anuluj</string>
-    <string name="com_facebook_loading">Ładowanie&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest Error</string>
-    <string name="com_facebook_internet_permission_error_message">Logowanie się do sieci wymaga zezwolenia na dostęp do INTERNETU</string>
-    <string name="com_facebook_tooltip_default">Masz pełną kontrolę – określ, jakie informacje chcesz udostępniać aplikacjom.</string>
-    <string name="com_facebook_image_download_unknown_error">Nieoczekiwany błąd podczas pobierania obrazu.</string>
-    <string name="com_facebook_share_button_text">Udostępnij</string>
-    <string name="com_facebook_send_button_text">Wyślij</string>
-    <string name="com_facebook_device_auth_instructions">Wejdź na stronę &lt;b&gt;facebook.com/device&lt;/b&gt; i wprowadź podany powyżej kod.</string>
-    <string name="com_facebook_smart_device_instructions">Aby połączyć konto, otwórz aplikację Facebook na urządzeniu mobilnym i sprawdź powiadomienia.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">To nie Ty?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Potwierdź logowanie</string>
-    <string name="com_facebook_smart_device_instructions_or">- LUB -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Lubię to!</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Lubisz to</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Wyloguj się</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Logowanie się</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Zaloguj się przez Facebooka</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Kontynuuj za pośrednictwem Facebooka</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Zalogowano jako: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Zalogowano przy użyciu Facebooka</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Wyloguj się</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Anuluj</string>
+    <string name="com_facebook_loading" gender="unknown">Ładowanie…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Błąd AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Logowanie WebView wymaga uprawnienia INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Zachowujesz kontrolę — wybierz informacje, które chcesz udostępniać w aplikacjach.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Nieoczekiwany błąd podczas pobierania obrazu.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Udostępnij</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Wyślij</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Odwiedź stronę &lt;b&gt;facebook.com/device&lt;/b&gt; i wprowadź powyższy kod.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Aby połączyć konto, otwórz aplikację Facebook na urządzeniu mobilnym i sprawdź powiadomienia.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- LUB -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Potwierdź logowanie</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Kontynuuj jako %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">To nie Ty?</string>
 </resources>
diff --git a/facebook/src/main/res/values-pt-rPT/strings.xml b/facebook/src/main/res/values-pt-rPT/strings.xml
index 281b16e4f..c4c84ff99 100644
--- a/facebook/src/main/res/values-pt-rPT/strings.xml
+++ b/facebook/src/main/res/values-pt-rPT/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: pt_PT -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Gosto</string>
-    <string name="com_facebook_like_button_liked">Gostei</string>
-    <string name="com_facebook_loginview_log_out_button">Terminar sessão</string>
-    <string name="com_facebook_loginview_log_in_button">Iniciar sessão</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Continuar com o Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Iniciar sessão com o Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Com sessão iniciada como: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Com sessão iniciada através do Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Terminar sessão</string>
-    <string name="com_facebook_loginview_cancel_action">Cancelar</string>
-    <string name="com_facebook_loading">A carregar&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">Erro AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">O início de sessão WebView necessita de permissão para aceder à INTERNET</string>
-    <string name="com_facebook_tooltip_default">Tens o controlo: escolhe a informação que pretendes partilhar com as apps.</string>
-    <string name="com_facebook_image_download_unknown_error">Ocorreu um erro inesperado ao descarregar uma imagem.</string>
-    <string name="com_facebook_share_button_text">Partilhar</string>
-    <string name="com_facebook_send_button_text">Enviar</string>
-    <string name="com_facebook_device_auth_instructions">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; e introduz o código mostrado acima.</string>
-    <string name="com_facebook_smart_device_instructions">Para ligares a tua conta, abre a app Facebook no teu dispositivo móvel e verifica se tens notificações.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Não és tu?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Confirmar Início de Sessão</string>
-    <string name="com_facebook_smart_device_instructions_or">– OU –</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Gosto</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Gostaste</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Terminar a sessão</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Iniciar sessão</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Iniciar sessão com o Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continuar com o Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Com sessão iniciada como %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Com sessão iniciada com o Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Terminar a sessão</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Cancelar</string>
+    <string name="com_facebook_loading" gender="unknown">A carregar...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Erro AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">O início de sessão WebView requer a permissão INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Tens o controlo. Escolhe as informações que queres partilhar com as apps.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Ocorreu um erro inesperado ao descarregar uma imagem.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Partilhar</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Enviar</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; e insere o código apresentado abaixo.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Para associares a tua conta, abre a app Facebook no teu dispositivo móvel e consulta as notificações.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- OU -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Confirmar início de sessão</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continuar como %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Não és tu?</string>
 </resources>
diff --git a/facebook/src/main/res/values-pt/strings.xml b/facebook/src/main/res/values-pt/strings.xml
index 6d53c956b..129a4baa7 100644
--- a/facebook/src/main/res/values-pt/strings.xml
+++ b/facebook/src/main/res/values-pt/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: pt_BR -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Curtir</string>
-    <string name="com_facebook_like_button_liked">Curtiu</string>
-    <string name="com_facebook_loginview_log_out_button">Sair</string>
-    <string name="com_facebook_loginview_log_in_button">Entrar</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Continuar com o Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Entrar com o Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Conectado como: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Você entrou usando o Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Sair</string>
-    <string name="com_facebook_loginview_cancel_action">Cancelar</string>
-    <string name="com_facebook_loading">Carregando&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">Erro no AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">A permissão de INTERNET é necessária para fazer o login WebView</string>
-    <string name="com_facebook_tooltip_default">Você é quem controla — escolha quais informações você quer compartilhar com os aplicativos.</string>
-    <string name="com_facebook_image_download_unknown_error">Erro inesperado ao baixar uma imagem.</string>
-    <string name="com_facebook_share_button_text">Compartilhar</string>
-    <string name="com_facebook_send_button_text">Envio</string>
-    <string name="com_facebook_device_auth_instructions">Acesse &lt;b&gt;facebook.com/device&lt;/b&gt; e introduza o código mostrado acima.</string>
-    <string name="com_facebook_smart_device_instructions">Para conectar sua conta, abra o aplicativo Facebook em seu dispositivo móvel e verifique se tem notificações.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Não é você?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Confirme o login</string>
-    <string name="com_facebook_smart_device_instructions_or">– OU –</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Curtir</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Curtiu</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Sair</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Entrar</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Entrar com o Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continuar com o Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Conectado como: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Conectado usando o Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Sair</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Cancelar</string>
+    <string name="com_facebook_loading" gender="unknown">Carregando...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Erro AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">O login do WebView exige permissão da INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Você está no controle — escolha quais informações você quer compartilhar com os aplicativos.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Erro inesperado ao baixar uma imagem.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Compartilhar</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Enviar</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Acesse &lt;b&gt;facebook.com/device&lt;/b&gt; e insira o código mostrado acima.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Para conectar sua conta, abra o aplicativo do Facebook no seu dispositivo móvel e verifique se há notificações.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- OU -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Confirmar login</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continuar como %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Não é você?</string>
 </resources>
diff --git a/facebook/src/main/res/values-ru/strings.xml b/facebook/src/main/res/values-ru/strings.xml
index c94a4c7c8..a3a7568a6 100644
--- a/facebook/src/main/res/values-ru/strings.xml
+++ b/facebook/src/main/res/values-ru/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ru_RU -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Нравится</string>
-    <string name="com_facebook_like_button_liked">Понравилось</string>
-    <string name="com_facebook_loginview_log_out_button">Выход</string>
-    <string name="com_facebook_loginview_log_in_button">Вход</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Продолжить с Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Вход через Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Вы вошли как: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Выполнен вход с помощью Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Выход</string>
-    <string name="com_facebook_loginview_cancel_action">Отменить</string>
-    <string name="com_facebook_loading">Загрузка&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">Ошибка AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Для входа в WebView необходимо разрешение INTERNET</string>
-    <string name="com_facebook_tooltip_default">Вы сами выбираете, какой информацией поделиться с приложениями.</string>
-    <string name="com_facebook_image_download_unknown_error">При загрузке изображения возникла неожиданная ошибка.</string>
-    <string name="com_facebook_share_button_text">Поделиться</string>
-    <string name="com_facebook_send_button_text">Отправить</string>
-    <string name="com_facebook_device_auth_instructions">Откройте страницу &lt;b&gt;facebook.com/device&lt;/b&gt; и введите представленный выше код.</string>
-    <string name="com_facebook_smart_device_instructions">Чтобы подключить аккаунт, откройте приложение Facebook на мобильном устройстве и проверьте уведомления.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Это не вы?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Подтвердить вход</string>
-    <string name="com_facebook_smart_device_instructions_or">- ИЛИ -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Нравится</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Нравится</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Выйти</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Войти</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Вход через Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Продолжить с Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Вы вошли как %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Выполнен вход через Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Выйти</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Отмена</string>
+    <string name="com_facebook_loading" gender="unknown">Загрузка...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Ошибка AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Для входа через WebView необходимо разрешение INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Контроль над данными — выберите, какой информацией вы хотите делиться с приложениями.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Неожиданная ошибка при скачивании изображения.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Поделиться</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Отправить</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Откройте &lt;b&gt;facebook.com/device&lt;/b&gt; и введите код, показанный выше.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Чтобы привязать ваш аккаунт, откройте приложение Facebook на своем мобильном устройстве и проверьте уведомления.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ИЛИ -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Подтвердите вход</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Продолжить как %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Не Вы?</string>
 </resources>
diff --git a/facebook/src/main/res/values-sk/strings.xml b/facebook/src/main/res/values-sk/strings.xml
index 05696950c..3c03ba982 100644
--- a/facebook/src/main/res/values-sk/strings.xml
+++ b/facebook/src/main/res/values-sk/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: sk_SK -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Páči sa mi to</string>
-    <string name="com_facebook_like_button_liked">Páči sa mi to</string>
-    <string name="com_facebook_loginview_log_out_button">Odhlásiť sa</string>
-    <string name="com_facebook_loginview_log_in_button">Prihlásiť sa</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Pokračovať s Facebookom</string>
-    <string name="com_facebook_loginview_log_in_button_long">Prihlásiť sa cez Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Prihlásený ako: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Prihlásený cez Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Odhlásiť sa</string>
-    <string name="com_facebook_loginview_cancel_action">Zrušiť</string>
-    <string name="com_facebook_loading">Načítava sa&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">Chyba súboru AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Na prihlásenie sa v rozhraní WebView sa vyžaduje povolenie pre INTERNET</string>
-    <string name="com_facebook_tooltip_default">Máte to pod kontrolou: vyberte, ktoré informácie chcete zdieľať s aplikáciami.</string>
-    <string name="com_facebook_image_download_unknown_error">Pri sťahovaní obrázka sa vyskytla neočakávaná chyba.</string>
-    <string name="com_facebook_share_button_text">Zdieľať</string>
-    <string name="com_facebook_send_button_text">Odoslať</string>
-    <string name="com_facebook_device_auth_instructions">Navštívte stránku &lt;b&gt;facebook.com/device&lt;/b&gt; a zadajte kód zobrazený vyššie.</string>
-    <string name="com_facebook_smart_device_instructions">Na pripojenie svojho účtu otvorte vo svojom mobilnom zariadení aplikáciu Facebook a skontrolujte upozornenia.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Nie ste to vy?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Potvrdiť prihlásenie</string>
-    <string name="com_facebook_smart_device_instructions_or">- ALEBO -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Páči sa mi to</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Páčilo sa mi to</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Odhlásiť sa</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Prihlásiť sa</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Prihlásiť sa cez Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Pokračovať s Facebookom</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Prihlásený/-á ako: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Prihlásený/-á cez Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Odhlásiť sa</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Zrušiť</string>
+    <string name="com_facebook_loading" gender="unknown">Načítava sa…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Chyba AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Na prihlásenie cez WebView sa vyžaduje povolenie internetu</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Máte to pod kontrolou: vy určujete, ktoré informácie chcete zdieľať s aplikáciami.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Pri sťahovaní obrázka sa vyskytla neočakávaná chyba.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Zdieľať</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Poslať</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Navštívte stránku &lt;b&gt;facebook.com/device&lt;/b&gt; a zadajte kód zobrazený vyššie.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Ak si chcete pripojiť účet, vo svojom mobilnom zariadení otvorte aplikáciu Facebook a pozrite si upozornenia.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ALEBO -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Potvrdiť prihlásenie</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Pokračovať ako %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Nie ste to vy?</string>
 </resources>
diff --git a/facebook/src/main/res/values-sv/strings.xml b/facebook/src/main/res/values-sv/strings.xml
index 6b52f5f72..cf95c35ad 100644
--- a/facebook/src/main/res/values-sv/strings.xml
+++ b/facebook/src/main/res/values-sv/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: sv_SE -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Gilla</string>
-    <string name="com_facebook_like_button_liked">Gillade</string>
-    <string name="com_facebook_loginview_log_out_button">Logga ut</string>
-    <string name="com_facebook_loginview_log_in_button">Logga in</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Fortsätt med Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Logga in med Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Inloggad som: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Inloggad med Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Logga ut</string>
-    <string name="com_facebook_loginview_cancel_action">Avbryt</string>
-    <string name="com_facebook_loading">Laddar &#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest-fel</string>
-    <string name="com_facebook_internet_permission_error_message">Webbinloggning kräver internetbehörighet</string>
-    <string name="com_facebook_tooltip_default">Du bestämmer – välj vilken info du vill dela med appar.</string>
-    <string name="com_facebook_image_download_unknown_error">Oväntat fel vid hämtning av en bild.</string>
-    <string name="com_facebook_share_button_text">Dela</string>
-    <string name="com_facebook_send_button_text">Skicka</string>
-    <string name="com_facebook_device_auth_instructions">Besök &lt;b&gt;facebook.com/device&lt;/b&gt; och ange koden som visas ovan.</string>
-    <string name="com_facebook_smart_device_instructions">Koppla ditt konto genom att öppna Facebook-appen på din mobila enhet och söka efter aviseringar.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Inte du?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Bekräfta inloggning</string>
-    <string name="com_facebook_smart_device_instructions_or">- ELLER -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Gilla</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Gillat</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Logga ut</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Logga in</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Logga in med Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Fortsätt med Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Inloggad som: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Inloggad med Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Logga ut</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Avbryt</string>
+    <string name="com_facebook_loading" gender="unknown">Laddar ...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest-fel</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-inloggning kräver INTERNET-åtkomst</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Du bestämmer – välj vilken information du vill dela med appar.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Ett oväntat fel inträffade när en bild skulle laddas ned.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Dela</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Skicka</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Gå till &lt;b&gt;facebook.com/device&lt;/b&gt; och skriv in koden som visas ovan.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Koppla ditt konto genom att öppna Facebook-appen på din mobila enhet och leta efter aviseringar.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ELLER -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Bekräfta inloggning</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Fortsätt som %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Inte du?</string>
 </resources>
diff --git a/facebook/src/main/res/values-ta/strings.xml b/facebook/src/main/res/values-ta/strings.xml
index 4a20061f7..7508b4d25 100644
--- a/facebook/src/main/res/values-ta/strings.xml
+++ b/facebook/src/main/res/values-ta/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ta_IN -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">விருப்பம்</string>
-    <string name="com_facebook_like_button_liked">விரும்பப்பட்டது</string>
-    <string name="com_facebook_loginview_log_out_button">வெளியேறு</string>
-    <string name="com_facebook_loginview_log_in_button">உள்நுழைவு</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Facebook இல் தொடரவும்</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook மூலம் உள்நுழையவும்</string>
-    <string name="com_facebook_loginview_logged_in_as">உள்நுழைந்துள்ள கணக்கு: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook மூலம் உள்நுழையப்பட்டுள்ளது</string>
-    <string name="com_facebook_loginview_log_out_action">வெளியேறு</string>
-    <string name="com_facebook_loginview_cancel_action">ரத்துசெய்</string>
-    <string name="com_facebook_loading">ஏற்றுகிறது&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest பிழை</string>
-    <string name="com_facebook_internet_permission_error_message">WebView இல் உள்நுழைய இணைய அனுமதி தேவை</string>
-    <string name="com_facebook_tooltip_default">பயன்பாடுகளில் எந்தத் தகவலைப் பகிர விரும்புகிறீர்கள் என்பதை நீங்கள் கட்டுப்படுத்தலாம்.</string>
-    <string name="com_facebook_image_download_unknown_error">படத்தைப் பதிவிறக்கும் போது பிழை ஏற்பட்டது.</string>
-    <string name="com_facebook_share_button_text">பகிர்</string>
-    <string name="com_facebook_send_button_text">அனுப்பு</string>
-    <string name="com_facebook_device_auth_instructions">&lt;b&gt;facebook.com/device&lt;/b&gt; என்பதற்குச் சென்று மேலே தெரியும் குறியீட்டை உள்ளிடவும்.</string>
-    <string name="com_facebook_smart_device_instructions">உங்கள் கணக்குடன் இணைக்க, உங்கள் மொபைல் சாதனத்தில் Facebook பயன்பாட்டைத் திறந்து அறிவிப்புகளைப் பார்க்கவும்.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">நீங்கள் இல்லையா?</string>
-    <string name="com_facebook_smart_login_confirmation_title">உள்நுழைவை உறுதிப்படுத்தவும்</string>
-    <string name="com_facebook_smart_device_instructions_or">- அல்லது -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">பிடித்திருக்கிறது</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">விரும்பியவை</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">வெளியேறு</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">உள்நுழையவும்</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook மூலம் உள்நுழையவும்</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook மூலம் தொடரவும்</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s ஆக உள்நுழைந்துள்ளீர்கள்</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ஐப் பயன்படுத்தி உள்நுழைந்துள்ளீர்கள்</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">வெளியேறு</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">ரத்துசெய்</string>
+    <string name="com_facebook_loading" gender="unknown">ஏற்றுகிறது…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest பிழை</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView உள்நுழைவுக்கு இணைய அனுமதித் தேவை</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">கட்டுப்பாடு உங்களிடம் உள்ளது. பயன்பாடுகளுடன் நீங்கள் பகிர விரும்பும் தகவல்களைத் தேர்வுசெய்யவும்.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">படத்தைப் பதிவிறக்கும்போது எதிர்பாராத பிழை ஏற்பட்டது.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">பகிர்</string>
+    <string name="com_facebook_send_button_text" gender="unknown">அனுப்பு</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; ஐப் பார்வையிட்டு, மேலே காட்டப்பட்ட குறியீட்டை உள்ளிடவும்.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">உங்கள் கணக்கை இணைக்க, உங்கள் மொபைல் சாதனத்தில் Facebook பயன்பாட்டைத் திறந்து, அறிவிப்புகளைப் பார்க்கவும்.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- அல்லது -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">உள்நுழைதலை உறுதிப்படுத்தவும்</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s ஆகத் தொடர்</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">நீங்கள் அல்ல?</string>
 </resources>
diff --git a/facebook/src/main/res/values-te/strings.xml b/facebook/src/main/res/values-te/strings.xml
index 0a1119e78..d8546f72c 100644
--- a/facebook/src/main/res/values-te/strings.xml
+++ b/facebook/src/main/res/values-te/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: te_IN -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">ఇష్టంగా గుర్తు పెట్టు</string>
-    <string name="com_facebook_like_button_liked">ఇష్టంగా గుర్తు పెట్టబడింది</string>
-    <string name="com_facebook_loginview_log_out_button">లాగ్ అవుట్ చేయి</string>
-    <string name="com_facebook_loginview_log_in_button">లాగిన్ చేయి</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Facebookతో కొనసాగించండి</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebookతో లాగిన్ చేయి</string>
-    <string name="com_facebook_loginview_logged_in_as">ఇలా లాగిన్ చేసారు: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ఉపయోగించి లాగిన్ చేసారు</string>
-    <string name="com_facebook_loginview_log_out_action">లాగ్ అవుట్ చేయి</string>
-    <string name="com_facebook_loginview_cancel_action">రద్దు చేయి</string>
-    <string name="com_facebook_loading">లోడ్ చేస్తోంది&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest లోపం</string>
-    <string name="com_facebook_internet_permission_error_message">వెబ్ వీక్షణ లాగిన్‌కు ఇంటర్నెట్ అనుమతి అవసరం</string>
-    <string name="com_facebook_tooltip_default">మీకు నియంత్రణ ఉంది - మీరు అనువర్తనాలతో భాగస్వామ్యం చేయాలనుకునే సమాచారాన్ని ఎంచుకోండి.</string>
-    <string name="com_facebook_image_download_unknown_error">చిత్రాన్ని డౌన్‌లోడ్ చేస్తున్నప్పుడు ఊహించని లోపం ఏర్పడింది.</string>
-    <string name="com_facebook_share_button_text">భాగస్వామ్యం చేయండి</string>
-    <string name="com_facebook_send_button_text">పంపు</string>
-    <string name="com_facebook_device_auth_instructions">&lt;b&gt;facebook.com/device&lt;/b&gt; లింక్‌ను సందర్శించి, ఎగువ చూపిన కోడ్‌ను నమోదు చేయండి.</string>
-    <string name="com_facebook_smart_device_instructions">మీ ఖాతాను అనుసంధానించడానికి, మీ మొబైల్ పరికరంలో Facebook అనువర్తనాన్ని తెరిచి, నోటిఫికేషన్‌లను తనిఖీ చేయండి.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">మీరు కాదా?</string>
-    <string name="com_facebook_smart_login_confirmation_title">లాగిన్‌ను నిర్ధారించండి</string>
-    <string name="com_facebook_smart_device_instructions_or">- లేదా -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">ఇష్టం</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ఇష్టపడ్డారు</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">లాగ్ అవుట్ చేయండి</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">లాగిన్</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebookతో లాగిన్ చేయండి</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebookతో కొనసాగించు</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">వీరి వలె లాగిన్ చేసారు: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebookని ఉపయోగించి లాగిన్ చేసారు</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">లాగ్ అవుట్ చేయండి</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">రద్దు చేయి</string>
+    <string name="com_facebook_loading" gender="unknown">లోడ్ చేస్తోంది…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest లోపం</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView లాగిన్ కోసం ఇంటర్నెట్ అనుమతి అవసరమవుతుంది</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">మీరు నియంత్రణలో ఉన్నారు - మీరు ఏ సమాచారాన్ని అనువర్తనాలతో పంచుకోవాలనుకుంటున్నారో ఎంచుకోండి.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">ఒక చిత్రాన్ని డౌన్‌లోడ్ చేయడంలో అనుకోని లోపం సంభవించింది.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">భాగస్వామ్యం చేయి</string>
+    <string name="com_facebook_send_button_text" gender="unknown">పంపండి</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt;ని సందర్శించి ఎగువన చూపిన కోడ్‌ను నమోదు చేయండి.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">మీ ఖాతాను అనుసంధానించేందుకు, మీ మొబైల్ పరికరంలో Facebook అనువర్తనాన్ని తెరిచి నోటిఫికేషన్‌లను తనిఖీ చేయండి.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- లేదా -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">లాగిన్‌ను నిర్ధారించండి</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$sగా కొనసాగండి</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">మీరు కాదా?</string>
 </resources>
diff --git a/facebook/src/main/res/values-th/strings.xml b/facebook/src/main/res/values-th/strings.xml
index 1a54f933e..d39dedcab 100644
--- a/facebook/src/main/res/values-th/strings.xml
+++ b/facebook/src/main/res/values-th/strings.xml
@@ -1,46 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">ถูกใจ</string>
-    <string name="com_facebook_like_button_liked">ถูกใจแล้ว</string>
-    <string name="com_facebook_loginview_log_out_button">ออกจากระบบ</string>
-    <string name="com_facebook_loginview_log_in_button">เข้าสู่ระบบ</string>
-    <string name="com_facebook_loginview_log_in_button_continue">ดำเนินการต่อด้วย Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">เข้าสู่ระบบด้วย Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">เข้าสู่ระบบในชื่อ: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">เข้าสู่ระบบโดยใช้ Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">ออกจากระบบ</string>
-    <string name="com_facebook_loginview_cancel_action">ยกเลิก</string>
-    <string name="com_facebook_loading">กำลังโหลด&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">ข้อผิดพลาดของ AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">การเข้าสู่ระบบ WebView จำเป็นต้องได้รับอนุญาตจากอินเทอร์เน็ต</string>
-    <string name="com_facebook_tooltip_default">คุณเป็นฝ่ายควบคุม โปรดเลือกข้อมูลที่คุณต้องการแชร์ด้วยแอพ</string>
-    <string name="com_facebook_image_download_unknown_error">เกิดข้อผิดพลาดที่ไม่คาดคิดขณะดาวน์โหลดรูปภาพ</string>
-    <string name="com_facebook_share_button_text">แชร์</string>
-    <string name="com_facebook_send_button_text">ส่ง</string>
-    <string name="com_facebook_device_auth_instructions">ไปที่ &lt;b&gt;facebook.com/device&lt;/b&gt; และใส่โค้ดที่แสดงด้านบน</string>
-    <string name="com_facebook_smart_device_instructions">หากต้องการเชื่อมต่อบัญชีผู้ใช้ของคุณ ให้เปิดแอพ Facebook บนอุปกรณ์มือถือของคุณและตรวจสอบการแจ้งเตือน</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">หากไม่ใช่คุณ</string>
-    <string name="com_facebook_smart_login_confirmation_title">ยืนยันการเข้าสู่ระบบ</string>
-    <string name="com_facebook_smart_device_instructions_or">- หรือ -</string>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: th_TH -->
 
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">ถูกใจ</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ถูกใจแล้ว</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">ออกจากระบบ</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">เข้าสู่ระบบ</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">เข้าสู่ระบบด้วย Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">ดำเนินการต่อด้วย Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">เข้าสู่ระบบแล้วในชื่อ %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">เข้าสู่ระบบแล้วโดยใช้ Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">ออกจากระบบ</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">ยกเลิก</string>
+    <string name="com_facebook_loading" gender="unknown">กำลังโหลด...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">ข้อผิดพลาด AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">การเข้าสู่ระบบ WebView ต้องได้รับสิทธิ์การอนุญาตอินเทอร์เน็ต</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">คุณควบคุมได้ เลือกว่าคุณต้องการแชร์ข้อมูลใดกับแอพ</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">เกิดข้อผิดพลาดที่ไม่คาดคิดขณะดาวน์โหลดภาพ</string>
+    <string name="com_facebook_share_button_text" gender="unknown">แชร์</string>
+    <string name="com_facebook_send_button_text" gender="unknown">ส่ง</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">ไปที่ &lt;b&gt;facebook.com/device&lt;/b&gt; แล้วป้อนรหัสที่ปรากฏด้านล่าง</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">หากต้องการเชื่อมต่อกับบัญชีผู้ใช้ของคุณ ให้เปิดแอพ Facebook บนอุปกรณ์มือถือของคุณแล้วตรวจสอบการแจ้งเตือน</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- หรือ -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">ยืนยันการเข้าสู่ระบบ</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">ดำเนินการต่อในชื่อ %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">ไม่ใช่คุณใช่ไหม</string>
 </resources>
diff --git a/facebook/src/main/res/values-tl/strings.xml b/facebook/src/main/res/values-tl/strings.xml
index 7fa7d9cc3..a276ac020 100644
--- a/facebook/src/main/res/values-tl/strings.xml
+++ b/facebook/src/main/res/values-tl/strings.xml
@@ -1,45 +1,29 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: tl_PH -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Gustuhin</string>
-    <string name="com_facebook_like_button_liked">Nagustuhan</string>
-    <string name="com_facebook_loginview_log_out_button">Mag-log out</string>
-    <string name="com_facebook_loginview_log_in_button">Mag-log in</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Magatuloy sa Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Mag-log in sa pamamagitan ng Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Naka-log in bilang si: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Naka-log in gamit ang Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Mag-log out</string>
-    <string name="com_facebook_loginview_cancel_action">Kanselahin</string>
-    <string name="com_facebook_loading">Naglo-load&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">Error na AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Ang pag-log in sa Web ay nangangailangan ng pahintulot sa INTERNET</string>
-    <string name="com_facebook_tooltip_default">Ikaw ang may kontrol - piliin kung anong impormasyon ang gusto mong ibahagi sa mga app.</string>
-    <string name="com_facebook_image_download_unknown_error">Hindi inaasahang error habang dina-download ang imahe.</string>
-    <string name="com_facebook_share_button_text">Ibahagi</string>
-    <string name="com_facebook_send_button_text">Ipadala</string>
-    <string name="com_facebook_device_auth_instructions">Pumunta sa &lt;b&gt;facebook.com/device&lt;/b&gt; at ilagay ang code na ipinapakita sa itaas.</string>
-    <string name="com_facebook_smart_device_instructions">Para ikonekta ang iyong account, buksan ang Facebook app sa iyong cellphone at tumingin ng mga notification.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Hindi ikaw?</string>
-    <string name="com_facebook_smart_login_confirmation_title">I-confirm ang Pag-log in</string>
-    <string name="com_facebook_smart_device_instructions_or">- O KAYA -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Gusto ko ito</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Nagustuhan</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Mag-log out</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Mag-log in</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Mag-log in sa Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Magpatuloy gamit ang Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Mag-log-in bilang: %1$s.</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Naka-log in gamit ang Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Mag-log out</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Kanselahin</string>
+    <string name="com_facebook_loading" gender="unknown">Naglo-load...</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Ang pag-log in sa WebView ay nangangailangan ng pahintulot sa INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Ikaw ang may kontrol - piliin anong impormasyon ang gusto mong i-share sa mga app.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Hindi inaasahang error habang dina-download ang larawan.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">I-share</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Ipadala</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Puntahan ang &lt;b&gt;facebook.com/device&lt;/b&gt; at ilagay ang code na ipinapakita sa itaas.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Para ikonekta ang iyong account, buksan ang Facebook app sa iyong cellphone at tumingin ng mga notification.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- O -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">I-confirm ang Pag-log in</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Magpatuloy bilang %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Hindi ikaw?</string>
 </resources>
diff --git a/facebook/src/main/res/values-tr/strings.xml b/facebook/src/main/res/values-tr/strings.xml
index 36690a7bb..c77ce01e4 100644
--- a/facebook/src/main/res/values-tr/strings.xml
+++ b/facebook/src/main/res/values-tr/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: tr_TR -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Beğen</string>
-    <string name="com_facebook_like_button_liked">Beğendin</string>
-    <string name="com_facebook_loginview_log_out_button">Çıkış yap</string>
-    <string name="com_facebook_loginview_log_in_button">Giriş yap</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Facebook ile Devam Et</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook ile giriş yap</string>
-    <string name="com_facebook_loginview_logged_in_as">Giriş yapan: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ile giriş yapıldı</string>
-    <string name="com_facebook_loginview_log_out_action">Çıkış yap</string>
-    <string name="com_facebook_loginview_cancel_action">İptal</string>
-    <string name="com_facebook_loading">Yükleniyor&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest Hatası</string>
-    <string name="com_facebook_internet_permission_error_message">WebView girişi için İNTERNET izni gerekir</string>
-    <string name="com_facebook_tooltip_default">Kontrol sende. Uygulamalarla paylaşmak istediğin bilgileri seç.</string>
-    <string name="com_facebook_image_download_unknown_error">Görsel indirilirken beklenmeyen hata.</string>
-    <string name="com_facebook_share_button_text">Paylaş</string>
-    <string name="com_facebook_send_button_text">Gönder</string>
-    <string name="com_facebook_device_auth_instructions">&lt;b&gt;facebook.com/device&lt;/b&gt; adresini ziyaret edin ve yukarıda görülen kodu girin.</string>
-    <string name="com_facebook_smart_device_instructions">Hesabınızı bağlamak için, mobil cihazınızda Facebook uygulamasını açın ve bildirimlerinizi kontrol edin.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Sen değil misin?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Girişi Onayla</string>
-    <string name="com_facebook_smart_device_instructions_or">- YA DA -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Beğen</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Beğendin</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Çıkış Yap</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Giriş yap</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook ile Giriş Yap</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook ile Devam Et</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s olarak giriş yapıldı</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ile giriş yapıldı</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Çıkış Yap</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">İptal</string>
+    <string name="com_facebook_loading" gender="unknown">Yükleniyor...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest Hatası</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView girişi için İNTERNET izni gerekiyor</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Kontrol sende - uygulamalarla paylaşmak istediğin bilgileri seç.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Görüntü indirilirken beklenmedik bir hata oluştu.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Paylaş</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Gönder</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; adresine git ve yukarıda gösterilen kodu gir.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Hesabını bağlamak için, mobil cihazında Facebook uygulamasını aç ve bildirimleri kontrol et.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- VEYA -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Girişi Onayla</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s olarak devam et</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Siz değil misiniz?</string>
 </resources>
diff --git a/facebook/src/main/res/values-vi/strings.xml b/facebook/src/main/res/values-vi/strings.xml
index f2314eae6..90901c711 100644
--- a/facebook/src/main/res/values-vi/strings.xml
+++ b/facebook/src/main/res/values-vi/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: vi_VN -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Thích</string>
-    <string name="com_facebook_like_button_liked">Đã thích</string>
-    <string name="com_facebook_loginview_log_out_button">Đăng xuất</string>
-    <string name="com_facebook_loginview_log_in_button">Đăng nhập</string>
-    <string name="com_facebook_loginview_log_in_button_continue">Tiếp tục với Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">Đăng nhập bằng Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Đã đăng nhập với tư cách là: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Đã đăng nhập bằng Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Đăng xuất</string>
-    <string name="com_facebook_loginview_cancel_action">Hủy</string>
-    <string name="com_facebook_loading">Đang tải&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">Lỗi AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Đăng nhập WebView yêu cầu INTERNET cho phép</string>
-    <string name="com_facebook_tooltip_default">Bạn đang có quyền kiểm soát - hãy chọn thông tin bạn muốn chia sẻ với ứng dụng.</string>
-    <string name="com_facebook_image_download_unknown_error">Lỗi bất ngờ khi tải ảnh xuống.</string>
-    <string name="com_facebook_share_button_text">Chia sẻ</string>
-    <string name="com_facebook_send_button_text">Gửi</string>
-    <string name="com_facebook_device_auth_instructions">Truy cập &lt;b&gt;facebook.com/device&lt;/b&gt; và nhập mã hiển thị ở trên.</string>
-    <string name="com_facebook_smart_device_instructions">Để kết nối tài khoản của bạn, hãy mở ứng dụng Facebook trên thiết bị di động và kiểm tra thông báo.</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">Không phải bạn?</string>
-    <string name="com_facebook_smart_login_confirmation_title">Xác nhận đăng nhập</string>
-    <string name="com_facebook_smart_device_instructions_or">- HOẶC -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Thích</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Đã thích</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Đăng xuất</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Đăng nhập</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Đăng nhập bằng Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Tiếp tục với Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Đã đăng nhập với tên: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Đã đăng nhập bằng Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Đăng xuất</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Hủy</string>
+    <string name="com_facebook_loading" gender="unknown">Đang tải…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Lỗi AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Đăng nhập chế độ xem web yêu cầu quyền INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Bạn nắm quyền kiểm soát - chọn thông tin bạn muốn chia sẻ với ứng dụng.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Lỗi không mong muốn khi tải hình ảnh xuống.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Chia sẻ</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Gửi</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Truy cập &lt;b&gt;facebook.com/device&lt;/b&gt; và nhập mã được hiển thị bên trên.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Để kết nối tài khoản của bạn, hãy mở ứng dụng Facebook trên thiết bị di động và kiểm tra thông báo.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- HOẶC -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Xác nhận đăng nhập</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Tiếp tục với tư cách %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Không phải bạn?</string>
 </resources>
diff --git a/facebook/src/main/res/values-zh-rCN/strings.xml b/facebook/src/main/res/values-zh-rCN/strings.xml
index b31ade12d..125758e72 100644
--- a/facebook/src/main/res/values-zh-rCN/strings.xml
+++ b/facebook/src/main/res/values-zh-rCN/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: zh_CN -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">赞</string>
-    <string name="com_facebook_like_button_liked">赞了</string>
-    <string name="com_facebook_loginview_log_out_button">退出</string>
-    <string name="com_facebook_loginview_log_in_button">登录</string>
-    <string name="com_facebook_loginview_log_in_button_continue">继续使用 Facebook 登录</string>
-    <string name="com_facebook_loginview_log_in_button_long">使用 Facebook 登录</string>
-    <string name="com_facebook_loginview_logged_in_as">已以%1$s 身份登录</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">已使用 Facebook 登录</string>
-    <string name="com_facebook_loginview_log_out_action">退出</string>
-    <string name="com_facebook_loginview_cancel_action">取消</string>
-    <string name="com_facebook_loading">正在加载&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest 错误</string>
-    <string name="com_facebook_internet_permission_error_message">Web 登录需要互联网许可</string>
-    <string name="com_facebook_tooltip_default">一切任您掌控 — 选择您想通过应用分享的信息。</string>
-    <string name="com_facebook_image_download_unknown_error">下载图片时出现意外错误。</string>
-    <string name="com_facebook_share_button_text">分享</string>
-    <string name="com_facebook_send_button_text">发送</string>
-    <string name="com_facebook_device_auth_instructions">请访问 &lt;b&gt;facebook.com/device&lt;/b&gt; 并输入上方显示的验证码。</string>
-    <string name="com_facebook_smart_device_instructions">要关联你的帐户，请在移动设备上打开 Facebook 应用，并查看通知。</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">不是你？</string>
-    <string name="com_facebook_smart_login_confirmation_title">确认登录</string>
-    <string name="com_facebook_smart_device_instructions_or">- 或者 -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">赞</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">赞了</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">注销</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">登录</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">使用 Facebook 登录</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">前往 Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">登录身份：%1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">已通过 Facebook 登录</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">注销</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">取消</string>
+    <string name="com_facebook_loading" gender="unknown">正在加载...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest 错误</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView 登录需要访问网络</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">应用分享内容由你掌控。</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">下载图片时出现意外错误。</string>
+    <string name="com_facebook_share_button_text" gender="unknown">分享</string>
+    <string name="com_facebook_send_button_text" gender="unknown">发送</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">请访问&lt;b&gt;facebook.com/device&lt;/b&gt;并输入以上验证码。</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">要关联帐户，请在移动设备上打开 Facebook 应用并查看通知。</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- 或 -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">确认登录</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">以%1$s的身份继续</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">不是你？</string>
 </resources>
diff --git a/facebook/src/main/res/values-zh-rHK/strings.xml b/facebook/src/main/res/values-zh-rHK/strings.xml
index 993f98ccf..13d2ecfcf 100644
--- a/facebook/src/main/res/values-zh-rHK/strings.xml
+++ b/facebook/src/main/res/values-zh-rHK/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: zh_HK -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">讚好</string>
-    <string name="com_facebook_like_button_liked">已讚好</string>
-    <string name="com_facebook_loginview_log_out_button">登出</string>
-    <string name="com_facebook_loginview_log_in_button">登入</string>
-    <string name="com_facebook_loginview_log_in_button_continue">繼續使用 Facebook</string>
-    <string name="com_facebook_loginview_log_in_button_long">使用 Facebook 登入</string>
-    <string name="com_facebook_loginview_logged_in_as">以以下身分登入：%1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">使用 Facebook 登入</string>
-    <string name="com_facebook_loginview_log_out_action">登出</string>
-    <string name="com_facebook_loginview_cancel_action">取消</string>
-    <string name="com_facebook_loading">載入中⋯</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest 錯誤</string>
-    <string name="com_facebook_internet_permission_error_message">WebView 登入需有 INTERNET 權限</string>
-    <string name="com_facebook_tooltip_default">控制權在您 - 選擇您要與應用程式分享的資訊。</string>
-    <string name="com_facebook_image_download_unknown_error">下載圖像時發生預期外的錯誤。</string>
-    <string name="com_facebook_share_button_text">分享</string>
-    <string name="com_facebook_send_button_text">傳送</string>
-    <string name="com_facebook_device_auth_instructions">前往 &lt;b&gt;facebook.com/device&lt;/b&gt; 並輸入上方的程式碼。</string>
-    <string name="com_facebook_smart_device_instructions">若要連結您的帳戶，請在您的流動裝置上開啟 Facebook 應用程式並查看通知。</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">這不是您？</string>
-    <string name="com_facebook_smart_login_confirmation_title">確認登入</string>
-    <string name="com_facebook_smart_device_instructions_or">- 或 -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">讚好</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">已讚好</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">登出</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">登入</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">使用 Facebook 登入</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">繼續使用 Facebook 帳戶</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">以%1$s身分登入</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">已使用 Facebook 登入</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">登出</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">取消</string>
+    <string name="com_facebook_loading" gender="unknown">載入中......</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest 錯誤</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView 登入需要網絡使用權限</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">一切由你掌握：自行選擇要分享給應用程式的資訊種類。</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">下載圖像時發生沒有預期的錯誤。</string>
+    <string name="com_facebook_share_button_text" gender="unknown">分享</string>
+    <string name="com_facebook_send_button_text" gender="unknown">送出</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">前往&lt;b&gt;facebook.com/device&lt;/b&amp;gt，並輸入上方顯示的代碼。</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">若要連結帳戶，請在流動裝置上開啟 Facebook 應用程式，然後查看通知。</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- 或 -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">確認登入</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">以%1$s的身分繼續</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">不是你嗎？</string>
 </resources>
diff --git a/facebook/src/main/res/values-zh-rTW/strings.xml b/facebook/src/main/res/values-zh-rTW/strings.xml
index 0b0c30efb..8f08dc11e 100644
--- a/facebook/src/main/res/values-zh-rTW/strings.xml
+++ b/facebook/src/main/res/values-zh-rTW/strings.xml
@@ -1,45 +1,30 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: zh_TW -->
 
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">讚</string>
-    <string name="com_facebook_like_button_liked">說讚</string>
-    <string name="com_facebook_loginview_log_out_button">登出</string>
-    <string name="com_facebook_loginview_log_in_button">登入</string>
-    <string name="com_facebook_loginview_log_in_button_continue">繼續使用 Facebook 帳號</string>
-    <string name="com_facebook_loginview_log_in_button_long">使用 Facebook 登入</string>
-    <string name="com_facebook_loginview_logged_in_as">使用下列身分登入：%1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">已使用 Facebook 登入</string>
-    <string name="com_facebook_loginview_log_out_action">登出</string>
-    <string name="com_facebook_loginview_cancel_action">取消</string>
-    <string name="com_facebook_loading">正在載入&#8230;</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest 錯誤</string>
-    <string name="com_facebook_internet_permission_error_message">WebView 登入需要「網際網路」授權</string>
-    <string name="com_facebook_tooltip_default">您可以全盤掌控！選擇您想和應用程式分享的資訊內容。</string>
-    <string name="com_facebook_image_download_unknown_error">下載圖像時發生非預期的錯誤。</string>
-    <string name="com_facebook_share_button_text">分享</string>
-    <string name="com_facebook_send_button_text">傳送</string>
-    <string name="com_facebook_device_auth_instructions">請前往 &lt;b&gt;facebook.com/device&lt;/b&gt; 並輸入上方顯示的代碼。</string>
-    <string name="com_facebook_smart_device_instructions">若要連結帳號，請從行動裝置開啟 Facebook 應用程式，並查看通知。</string>
-    <string name="com_facebook_smart_login_confirmation_cancel">這不是您？</string>
-    <string name="com_facebook_smart_login_confirmation_title">確認登入</string>
-    <string name="com_facebook_smart_device_instructions_or">- 或 -</string>
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">讚</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">已說讚</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">登出</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">登入</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">使用 Facebook 帳號登入</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">繼續使用 Facebook 帳號</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">以%1$s身分登入</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">已使用 Facebook 登入</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">登出</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">取消</string>
+    <string name="com_facebook_loading" gender="unknown">載入中......</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest 錯誤</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView 登入需要網路使用權限</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">一切操之在你：自行選擇要分享給應用程式的資訊種類。</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">下載圖像時無預警發生錯誤。</string>
+    <string name="com_facebook_share_button_text" gender="unknown">分享</string>
+    <string name="com_facebook_send_button_text" gender="unknown">送出</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">前往&lt;b&gt;facebook.com/device&lt;/b&amp;gt，並輸入上方顯示的代碼。</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">若要連結帳號，請在行動裝置上開啟 Facebook 應用程式，然後查看通知。</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- 或 -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">確認登入</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">以%1$s的身分繼續</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">不是你？</string>
 </resources>
diff --git a/facebook/src/main/res/values/strings.xml b/facebook/src/main/res/values/strings.xml
index 95212cc28..af7262eaa 100644
--- a/facebook/src/main/res/values/strings.xml
+++ b/facebook/src/main/res/values/strings.xml
@@ -18,15 +18,14 @@
     IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 -->
-
-<resources>
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
     <string name="com_facebook_like_button_not_liked">Like</string>
     <string name="com_facebook_like_button_liked">Liked</string>
     <string name="com_facebook_loginview_log_out_button">Log out</string>
     <string name="com_facebook_loginview_log_in_button">Log in</string>
     <string name="com_facebook_loginview_log_in_button_long">Log in with Facebook</string>
     <string name="com_facebook_loginview_log_in_button_continue">Continue with Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Logged in as: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_as">Logged in as: <xliff:g id="user name">%1$s</xliff:g></string>
     <string name="com_facebook_loginview_logged_in_using_facebook">Logged in using Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Log out</string>
     <string name="com_facebook_loginview_cancel_action">Cancel</string>
@@ -41,6 +40,6 @@
     <string name="com_facebook_smart_device_instructions">To connect your account, open the Facebook app on your mobile device and check for notifications.</string>
     <string name="com_facebook_smart_device_instructions_or">- OR -</string>
     <string name="com_facebook_smart_login_confirmation_title">Confirm Login</string>
-    <string name="com_facebook_smart_login_confirmation_continue_as">Continue as %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as">Continue as <xliff:g id="user name">%1$s</xliff:g></string>
     <string name="com_facebook_smart_login_confirmation_cancel">Not you?</string>
 </resources>
diff --git a/facebook/src/test/java/com/facebook/AccessTokenTest.java b/facebook/src/test/java/com/facebook/AccessTokenTest.java
index cf218918d..48e700916 100644
--- a/facebook/src/test/java/com/facebook/AccessTokenTest.java
+++ b/facebook/src/test/java/com/facebook/AccessTokenTest.java
@@ -188,8 +188,8 @@ public void testFromCacheWithMissingApplicationId() {
         LegacyTokenHelper.putToken(bundle, token);
         // no app id
 
-        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         FacebookSdk.setApplicationId(applicationId);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
 
         AccessToken accessToken = AccessToken.createFromLegacyCache(bundle);
 
diff --git a/facebook/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java b/facebook/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java
index 7877efacd..69cdc47bc 100644
--- a/facebook/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java
+++ b/facebook/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java
@@ -171,6 +171,7 @@
 
     @Before
     public void before() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
diff --git a/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java b/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
index 74a9c163b..ac0fce564 100644
--- a/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
+++ b/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
@@ -118,6 +118,8 @@ public void testFacebookDomain() {
 
     @Test
     public void testLoadDefaults() throws Exception {
+        // Set to null since the value might have been set by another test
+        FacebookSdk.setApplicationId(null);
         stub(method(FacebookSdk.class, "isInitialized")).toReturn(true);
         FacebookSdk.loadDefaultsFromMetadata(mockContextWithAppIdAndClientToken());
 
@@ -160,6 +162,7 @@ public void testLoadDefaultsDoesNotOverwrite() throws Exception {
 
     @Test
     public void testRequestCodeOffsetAfterInit() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
 
         try {
@@ -172,6 +175,7 @@ public void testRequestCodeOffsetAfterInit() throws Exception {
 
     @Test
     public void testRequestCodeOffsetNegative() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         try {
             // last bit set, so negative
             FacebookSdk.sdkInitialize(RuntimeEnvironment.application, 0xFACEB00C);
@@ -183,12 +187,14 @@ public void testRequestCodeOffsetNegative() throws Exception {
 
     @Test
     public void testRequestCodeOffset() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application, 1000);
         assertEquals(1000, FacebookSdk.getCallbackRequestCodeOffset());
     }
 
     @Test
     public void testRequestCodeRange() {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application, 1000);
         assertTrue(FacebookSdk.isFacebookRequestCode(1000));
         assertTrue(FacebookSdk.isFacebookRequestCode(1099));
diff --git a/facebook/src/test/java/com/facebook/LegacyTokenCacheTest.java b/facebook/src/test/java/com/facebook/LegacyTokenCacheTest.java
index c7a80713b..85140317b 100644
--- a/facebook/src/test/java/com/facebook/LegacyTokenCacheTest.java
+++ b/facebook/src/test/java/com/facebook/LegacyTokenCacheTest.java
@@ -71,7 +71,7 @@
     @Override
     public void setUp() {
         super.setUp();
-
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
diff --git a/facebook/src/test/java/com/facebook/ProfileCacheTest.java b/facebook/src/test/java/com/facebook/ProfileCacheTest.java
index e77179d7e..6743c1436 100644
--- a/facebook/src/test/java/com/facebook/ProfileCacheTest.java
+++ b/facebook/src/test/java/com/facebook/ProfileCacheTest.java
@@ -32,6 +32,7 @@
 public final class ProfileCacheTest extends FacebookTestCase {
     @Before
     public void before() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         RuntimeEnvironment.application.getSharedPreferences(
                 ProfileCache.SHARED_PREFERENCES_NAME,
diff --git a/facebook/src/test/java/com/facebook/ProfileManagerTest.java b/facebook/src/test/java/com/facebook/ProfileManagerTest.java
index 1747f5af4..6fad03570 100644
--- a/facebook/src/test/java/com/facebook/ProfileManagerTest.java
+++ b/facebook/src/test/java/com/facebook/ProfileManagerTest.java
@@ -45,6 +45,7 @@
 
     @Before
     public void before() {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
diff --git a/facebook/src/test/java/com/facebook/ProfileTest.java b/facebook/src/test/java/com/facebook/ProfileTest.java
index 980986d80..3b1eed2a1 100644
--- a/facebook/src/test/java/com/facebook/ProfileTest.java
+++ b/facebook/src/test/java/com/facebook/ProfileTest.java
@@ -135,6 +135,7 @@ public void testParcelSerialization() {
 
     @Test
     public void testGetSetCurrentProfile() {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         Profile profile1 = createDefaultProfile();
         Profile.setCurrentProfile(profile1);
diff --git a/facebook/src/test/java/com/facebook/ProfileTrackerTest.java b/facebook/src/test/java/com/facebook/ProfileTrackerTest.java
index 0c8a60890..2d36d2fa0 100644
--- a/facebook/src/test/java/com/facebook/ProfileTrackerTest.java
+++ b/facebook/src/test/java/com/facebook/ProfileTrackerTest.java
@@ -32,6 +32,7 @@
 public class ProfileTrackerTest extends FacebookPowerMockTestCase {
     @Test
     public void testStartStopTrackingAndBroadcast() {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         LocalBroadcastManager localBroadcastManager =
                 LocalBroadcastManager.getInstance(RuntimeEnvironment.application);
diff --git a/facebook/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java b/facebook/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java
index 7296683fe..103e7f87b 100644
--- a/facebook/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java
+++ b/facebook/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java
@@ -34,6 +34,7 @@
 
     @Before
     public void before() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         stream = new ProgressNoopOutputStream(null);
     }
diff --git a/facebook/src/test/java/com/facebook/ProgressOutputStreamTest.java b/facebook/src/test/java/com/facebook/ProgressOutputStreamTest.java
index dfc408638..e4011b3ef 100644
--- a/facebook/src/test/java/com/facebook/ProgressOutputStreamTest.java
+++ b/facebook/src/test/java/com/facebook/ProgressOutputStreamTest.java
@@ -42,6 +42,7 @@
 
     @Before
     public void before() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         r1 = new GraphRequest(null, "4");
         r2 = new GraphRequest(null, "4");
diff --git a/facebook/src/test/java/com/facebook/appevents/AnalyticsUserIDTest.java b/facebook/src/test/java/com/facebook/appevents/AnalyticsUserIDTest.java
index f7485fd75..f56aad65c 100644
--- a/facebook/src/test/java/com/facebook/appevents/AnalyticsUserIDTest.java
+++ b/facebook/src/test/java/com/facebook/appevents/AnalyticsUserIDTest.java
@@ -32,6 +32,7 @@
 public class AnalyticsUserIDTest extends FacebookPowerMockTestCase {
     @Before
     public void init() {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         AnalyticsUserIDStore.initStore();
     }
diff --git a/facebook/src/test/java/com/facebook/appevents/AppEventTest.java b/facebook/src/test/java/com/facebook/appevents/AppEventTest.java
index a1ee11601..37fa2d501 100644
--- a/facebook/src/test/java/com/facebook/appevents/AppEventTest.java
+++ b/facebook/src/test/java/com/facebook/appevents/AppEventTest.java
@@ -22,6 +22,7 @@
 
 import com.facebook.FacebookSdk;
 import com.facebook.FacebookTestCase;
+import com.facebook.appevents.internal.Constants;
 
 import org.junit.Assert;
 import org.junit.Before;
@@ -36,9 +37,17 @@
 public class AppEventTest extends FacebookTestCase {
     @Before
     public void init() {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
+    @Test
+    public void testChecksumOfAppEventName() throws Exception {
+        AppEvent appEvent = AppEventTestUtilities.getTestAppEvent();
+        String eventNameMd5 = appEvent.getJSONObject().getString(Constants.EVENT_NAME_MD5_EVENT_KEY);
+        Assert.assertEquals("e0cf6877da9df873a85a2137fb5d2e26", eventNameMd5);
+    }
+
     @Test
     public void testChecksumOfAppEvent() throws Exception {
         AppEvent appEvent = AppEventTestUtilities.getTestAppEvent();
diff --git a/facebook/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java b/facebook/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java
index 27dcb3125..37c044b2e 100644
--- a/facebook/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java
+++ b/facebook/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java
@@ -43,6 +43,7 @@
 
     @Before
     public void before() {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         // Reset the static state every time so tests don't interfere with each other.
         Whitebox.setInternalState(
diff --git a/facebook/src/test/java/com/facebook/internal/FacebookSignatureValidatorTest.java b/facebook/src/test/java/com/facebook/internal/FacebookSignatureValidatorTest.java
new file mode 100644
index 000000000..ecedfa87c
--- /dev/null
+++ b/facebook/src/test/java/com/facebook/internal/FacebookSignatureValidatorTest.java
@@ -0,0 +1,99 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.internal;
+
+import android.app.Activity;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.Signature;
+
+import com.facebook.FacebookPowerMockTestCase;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.powermock.core.classloader.annotations.PrepareForTest;
+
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
+import static org.powermock.api.mockito.PowerMockito.mock;
+import static org.powermock.api.mockito.PowerMockito.mockStatic;
+import static org.powermock.api.mockito.PowerMockito.when;
+
+/**
+ * Tests for {@link com.facebook.internal.FacebookSignatureValidator}.
+ */
+@PrepareForTest({Utility.class})
+public class FacebookSignatureValidatorTest extends FacebookPowerMockTestCase {
+
+  private static final String PACKAGE_NAME = "com.facebook.orca";
+  private static final String APP_HASH = "8a3c4b262d721acd49a4bf97d5213199c86fa2b9";
+
+  private Activity mMockActivity;
+  private PackageManager mMockPackageManager;
+
+  @Before
+  public void setup() {
+    mockStatic(Utility.class);
+    mMockActivity = mock(Activity.class);
+    mMockPackageManager = mock(PackageManager.class);
+    when(mMockActivity.getPackageManager()).thenReturn(mMockPackageManager);
+  }
+
+  @Test
+  public void testInvalidWhenAppNotInstalled() throws Exception {
+    setupPackageManagerForApp(false, false);
+    assertFalse(FacebookSignatureValidator.validateSignature(mMockActivity, PACKAGE_NAME));
+  }
+
+  @Test
+  public void testInvalidWhenInstalledWithIncorrectSignature() throws Exception {
+    setupPackageManagerForApp(true, false);
+    assertFalse(FacebookSignatureValidator.validateSignature(mMockActivity, PACKAGE_NAME));
+  }
+
+  @Test
+  public void testValidWhenInstalledWithCorrectSignature() throws Exception {
+    setupPackageManagerForApp(true, true);
+    assertTrue(FacebookSignatureValidator.validateSignature(mMockActivity, PACKAGE_NAME));
+  }
+
+  /**
+   * Sets up the PackageManager to return what we expect depending on whether app is installed.
+   * @param isInstalled true to simulate that app is installed
+   */
+  private void setupPackageManagerForApp(boolean isInstalled, boolean hasValidSignature)
+      throws Exception {
+    if (isInstalled) {
+      PackageInfo packageInfo = new PackageInfo();
+      when(mMockPackageManager.getPackageInfo(PACKAGE_NAME, PackageManager.GET_SIGNATURES))
+              .thenReturn(packageInfo);
+      Signature signature = mock(Signature.class);
+      packageInfo.signatures = new Signature[]{signature};
+
+      if (hasValidSignature) {
+        when(Utility.sha1hash(signature.toByteArray())).thenReturn(APP_HASH);
+      }
+    } else {
+      when(mMockPackageManager.getPackageInfo(PACKAGE_NAME, PackageManager.GET_SIGNATURES))
+          .thenThrow(new PackageManager.NameNotFoundException());
+    }
+  }
+}
diff --git a/facebook/src/test/java/com/facebook/internal/FileLruCacheTest.java b/facebook/src/test/java/com/facebook/internal/FileLruCacheTest.java
index e4a6e00e2..56fc69a7b 100644
--- a/facebook/src/test/java/com/facebook/internal/FileLruCacheTest.java
+++ b/facebook/src/test/java/com/facebook/internal/FileLruCacheTest.java
@@ -43,6 +43,7 @@
 
     @Before
     public void before() {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
diff --git a/facebook/src/test/java/com/facebook/login/FacebookLiteLoginMethodHandlerTest.java b/facebook/src/test/java/com/facebook/login/FacebookLiteLoginMethodHandlerTest.java
index d8ee20708..0d25ed978 100644
--- a/facebook/src/test/java/com/facebook/login/FacebookLiteLoginMethodHandlerTest.java
+++ b/facebook/src/test/java/com/facebook/login/FacebookLiteLoginMethodHandlerTest.java
@@ -56,6 +56,7 @@
     @Override
     public void before() throws Exception {
         super.before();
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
diff --git a/facebook/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java b/facebook/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java
index 5f8249d15..7281ffcec 100644
--- a/facebook/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java
+++ b/facebook/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java
@@ -55,6 +55,7 @@
     @Override
     public void before() throws Exception {
         super.before();
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
diff --git a/facebook/src/test/java/com/facebook/login/LoginClientTest.java b/facebook/src/test/java/com/facebook/login/LoginClientTest.java
index 61076cbb8..e64b937b8 100644
--- a/facebook/src/test/java/com/facebook/login/LoginClientTest.java
+++ b/facebook/src/test/java/com/facebook/login/LoginClientTest.java
@@ -68,6 +68,7 @@ public void before() throws Exception {
 
     @Test
     public void testReauthorizationWithSameFbidSucceeds() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         LoginClient.Request request = createRequest(ACCESS_TOKEN);
 
diff --git a/facebook/src/test/java/com/facebook/messenger/MessengerUtilsTest.java b/facebook/src/test/java/com/facebook/messenger/MessengerUtilsTest.java
index f102ec1a5..70062b2d1 100644
--- a/facebook/src/test/java/com/facebook/messenger/MessengerUtilsTest.java
+++ b/facebook/src/test/java/com/facebook/messenger/MessengerUtilsTest.java
@@ -23,49 +23,55 @@
 import android.app.Activity;
 import android.content.ContentResolver;
 import android.content.Intent;
-import android.content.pm.PackageInfo;
-import android.content.pm.PackageManager;
 import android.database.MatrixCursor;
 import android.net.Uri;
 import android.os.Bundle;
 
+import com.facebook.FacebookPowerMockTestCase;
 import com.facebook.FacebookSdk;
+import com.facebook.internal.FacebookSignatureValidator;
 
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.ArgumentCaptor;
-import org.robolectric.Robolectric;
+import org.powermock.api.mockito.PowerMockito;
+import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
 import java.util.Arrays;
 
-import static org.junit.Assert.*;
 import static org.junit.Assert.assertEquals;
-import static org.mockito.Mockito.*;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertNull;
+import static org.junit.Assert.assertTrue;
+import static org.mockito.Mockito.eq;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
 
 /**
  * Tests for {@link com.facebook.messenger.MessengerUtils}
  */
 @RunWith(RobolectricTestRunner.class)
 @Config(sdk = 18, manifest = Config.NONE)
-public class MessengerUtilsTest {
+@PrepareForTest({FacebookSignatureValidator.class})
+public class MessengerUtilsTest extends FacebookPowerMockTestCase {
 
   private Activity mMockActivity;
-  private PackageManager mMockPackageManager;
   private ContentResolver mMockContentResolver;
 
   @Before
   public void setup() {
     mMockActivity = mock(Activity.class);
-    mMockPackageManager = mock(PackageManager.class);
     mMockContentResolver = mock(ContentResolver.class);
-    when(mMockActivity.getPackageManager()).thenReturn(mMockPackageManager);
     when(mMockActivity.getContentResolver()).thenReturn(mMockContentResolver);
-    FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     FacebookSdk.setApplicationId("200");
+    FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
+    PowerMockito.mockStatic(FacebookSignatureValidator.class);
   }
 
   @Test
@@ -226,14 +232,9 @@ public void testFinishShareToMessengerWithUnexpectedIntent() throws Exception {
    *
    * @param isInstalled true to simulate that messenger is installed
    */
-  private void setupPackageManagerForMessenger(boolean isInstalled) throws Exception {
-    if (isInstalled) {
-      when(mMockPackageManager.getPackageInfo("com.facebook.orca", 0))
-          .thenReturn(new PackageInfo());
-    } else {
-      when(mMockPackageManager.getPackageInfo("com.facebook.orca", 0))
-          .thenThrow(new PackageManager.NameNotFoundException());
-    }
+  private void setupPackageManagerForMessenger(boolean isInstalled) {
+    when(FacebookSignatureValidator.validateSignature(mMockActivity, "com.facebook.orca"))
+            .thenReturn(isInstalled);
   }
 
   /**
diff --git a/facebook/src/test/java/com/facebook/places/PlaceManagerTest.java b/facebook/src/test/java/com/facebook/places/PlaceManagerTest.java
new file mode 100644
index 000000000..20ea002f6
--- /dev/null
+++ b/facebook/src/test/java/com/facebook/places/PlaceManagerTest.java
@@ -0,0 +1,123 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places;
+
+import android.location.Location;
+import android.os.Bundle;
+
+import com.facebook.AccessToken;
+import com.facebook.FacebookPowerMockTestCase;
+import com.facebook.GraphRequest;
+import com.facebook.HttpMethod;
+import com.facebook.places.model.CurrentPlaceFeedbackRequestParams;
+import com.facebook.places.model.PlaceInfoRequestParams;
+import com.facebook.places.model.PlaceSearchRequestParams;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.powermock.api.mockito.PowerMockito;
+
+import static org.junit.Assert.assertEquals;
+
+import org.powermock.core.classloader.annotations.PrepareForTest;
+
+import static org.powermock.api.mockito.PowerMockito.mockStatic;
+
+@PrepareForTest({
+        AccessToken.class})
+public class PlaceManagerTest extends FacebookPowerMockTestCase {
+
+    @Before
+    public void setup() {
+        mockStatic(AccessToken.class);
+        PowerMockito.when(AccessToken.getCurrentAccessToken()).thenReturn(null);
+    }
+
+    @Test
+    public void testSearchPlaceForLocationRequest() {
+        PlaceSearchRequestParams.Builder builder = new PlaceSearchRequestParams.Builder();
+        builder.setSearchText("search text");
+        builder.setLimit(5);
+        builder.addCategory("category1");
+        builder.addCategory("category2");
+        builder.addField("field1");
+        builder.addField("field2");
+        builder.setDistance(500);
+
+        PlaceSearchRequestParams params = builder.build();
+        Location location = new Location("dummy");
+        location.setLatitude(1);
+        location.setLongitude(2);
+
+        GraphRequest request =
+                PlaceManager.newPlaceSearchRequestForLocation(params, location);
+
+        assertEquals("search", request.getGraphPath());
+        assertEquals(HttpMethod.GET, request.getHttpMethod());
+
+        Bundle requestParams = request.getParameters();
+
+        assertEquals("search text", requestParams.get("q"));
+        assertEquals(500, requestParams.get("distance"));
+        assertEquals(5, requestParams.get("limit"));
+        assertEquals("1.000000,2.000000", requestParams.get("center"));
+        assertEquals("field1,field2", requestParams.get("fields"));
+        assertEquals("place", requestParams.get("type"));
+        assertEquals("[\"category2\",\"category1\"]", requestParams.get("categories"));
+    }
+
+    @Test
+    public void testPlaceInfoRequest() {
+        PlaceInfoRequestParams.Builder builder = new PlaceInfoRequestParams.Builder();
+        builder.setPlaceId("12345");
+        builder.addField("field1");
+        builder.addFields(new String[]{"field2", "field3"});
+        PlaceInfoRequestParams params = builder.build();
+
+        GraphRequest request = PlaceManager.newPlaceInfoRequest(params);
+
+        assertEquals("12345", request.getGraphPath());
+        assertEquals(HttpMethod.GET, request.getHttpMethod());
+
+        Bundle requestParams = request.getParameters();
+        assertEquals("field1,field3,field2", requestParams.get("fields"));
+    }
+
+    @Test
+    public void testCurrentPlaceFeedbackRequest() {
+        CurrentPlaceFeedbackRequestParams.Builder builder =
+                new CurrentPlaceFeedbackRequestParams.Builder();
+        builder.setPlaceId("12345");
+        builder.setTracking("trackingid");
+        builder.setWasHere(true);
+        CurrentPlaceFeedbackRequestParams params = builder.build();
+
+        GraphRequest request = PlaceManager.newCurrentPlaceFeedbackRequest(params);
+
+        assertEquals("current_place/feedback", request.getGraphPath());
+        assertEquals(HttpMethod.POST, request.getHttpMethod());
+
+        Bundle requestParams = request.getParameters();
+        assertEquals("12345", requestParams.get("place_id"));
+        assertEquals("trackingid", requestParams.get("tracking"));
+        assertEquals(true, requestParams.get("was_here"));
+    }
+}
diff --git a/facebook/src/test/java/com/facebook/places/model/CurrentPlaceFeedbackRequestParamsTest.java b/facebook/src/test/java/com/facebook/places/model/CurrentPlaceFeedbackRequestParamsTest.java
new file mode 100644
index 000000000..c0c4a2711
--- /dev/null
+++ b/facebook/src/test/java/com/facebook/places/model/CurrentPlaceFeedbackRequestParamsTest.java
@@ -0,0 +1,43 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+import com.facebook.FacebookTestCase;
+
+import org.junit.Test;
+
+import static org.junit.Assert.assertEquals;
+
+public class CurrentPlaceFeedbackRequestParamsTest extends FacebookTestCase {
+    @Test
+    public void testBuilder() {
+        CurrentPlaceFeedbackRequestParams.Builder builder =
+                new CurrentPlaceFeedbackRequestParams.Builder();
+        builder.setPlaceId("place id");
+        builder.setTracking("tracking id");
+        builder.setWasHere(true);
+        CurrentPlaceFeedbackRequestParams params = builder.build();
+
+        assertEquals("place id", params.getPlaceId());
+        assertEquals("tracking id", params.getTracking());
+        assertEquals(true, params.wasHere());
+    }
+}
diff --git a/facebook/src/test/java/com/facebook/places/model/CurrentPlaceRequestParamsTest.java b/facebook/src/test/java/com/facebook/places/model/CurrentPlaceRequestParamsTest.java
new file mode 100644
index 000000000..57d8add12
--- /dev/null
+++ b/facebook/src/test/java/com/facebook/places/model/CurrentPlaceRequestParamsTest.java
@@ -0,0 +1,64 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+import android.location.Location;
+
+import com.facebook.FacebookTestCase;
+
+import org.junit.Test;
+
+import java.util.Set;
+
+import static org.junit.Assert.assertEquals;
+
+public class CurrentPlaceRequestParamsTest extends FacebookTestCase {
+    @Test
+    public void testBuilder() {
+        Location location = new Location("dummy");
+        location.setLatitude(1.0);
+        location.setLongitude(2.0);
+
+        CurrentPlaceRequestParams.Builder builder = new CurrentPlaceRequestParams.Builder();
+        builder.setMinConfidenceLevel(CurrentPlaceRequestParams.ConfidenceLevel.MEDIUM);
+        builder.setLimit(22);
+        builder.setScanMode(CurrentPlaceRequestParams.ScanMode.LOW_LATENCY);
+        builder.setLocation(location);
+        builder.addField("field1");
+        builder.addField("field2");
+        CurrentPlaceRequestParams params = builder.build();
+
+        assertEquals(22, params.getLimit());
+        assertEquals(location, params.getLocation());
+        assertEquals(
+                CurrentPlaceRequestParams.ConfidenceLevel.MEDIUM,
+                params.getMinConfidenceLevel());
+        assertEquals(CurrentPlaceRequestParams.ScanMode.LOW_LATENCY, params.getScanMode());
+        assertSetEqual(new String[]{"field1", "field2"}, params.getFields());
+    }
+
+    private void assertSetEqual(String[] expectedValues, Set<String> actualValues) {
+        assertEquals(expectedValues.length, actualValues.size());
+        for (String expectedValue : expectedValues) {
+            assertEquals(true, actualValues.contains(expectedValue));
+        }
+    }
+}
diff --git a/facebook/src/test/java/com/facebook/places/model/PlaceInfoRequestParamsTest.java b/facebook/src/test/java/com/facebook/places/model/PlaceInfoRequestParamsTest.java
new file mode 100644
index 000000000..456da8a8a
--- /dev/null
+++ b/facebook/src/test/java/com/facebook/places/model/PlaceInfoRequestParamsTest.java
@@ -0,0 +1,47 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+import com.facebook.FacebookTestCase;
+
+import org.junit.Test;
+
+import java.util.Set;
+
+import static org.junit.Assert.assertEquals;
+
+public class PlaceInfoRequestParamsTest extends FacebookTestCase {
+    @Test
+    public void testBuilder() {
+        PlaceInfoRequestParams.Builder builder = new PlaceInfoRequestParams.Builder();
+        builder.setPlaceId("place id");
+        builder.addFields(new String[]{"field1", "field2"});
+        builder.addField("field3");
+        PlaceInfoRequestParams params = builder.build();
+
+        assertEquals("place id", params.getPlaceId());
+        Set<String> fields  = params.getFields();
+        assertEquals(3, fields.size());
+        assertEquals(true, fields.contains("field1"));
+        assertEquals(true, fields.contains("field2"));
+        assertEquals(true, fields.contains("field3"));
+    }
+}
diff --git a/facebook/src/test/java/com/facebook/places/model/PlaceSearchRequestParamsTest.java b/facebook/src/test/java/com/facebook/places/model/PlaceSearchRequestParamsTest.java
new file mode 100644
index 000000000..2ceae576c
--- /dev/null
+++ b/facebook/src/test/java/com/facebook/places/model/PlaceSearchRequestParamsTest.java
@@ -0,0 +1,57 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+import com.facebook.FacebookTestCase;
+
+import org.junit.Test;
+
+import java.util.Set;
+
+import static org.junit.Assert.assertEquals;
+
+public class PlaceSearchRequestParamsTest extends FacebookTestCase {
+    @Test
+    public void testBuilder() {
+        PlaceSearchRequestParams.Builder builder = new PlaceSearchRequestParams.Builder();
+        builder.setDistance(123);
+        builder.setLimit(22);
+        builder.setSearchText("search query");
+        builder.addCategory("category1");
+        builder.addCategory("category2");
+        builder.addField("field1");
+        builder.addField("field2");
+        PlaceSearchRequestParams params = builder.build();
+
+        assertEquals(123, params.getDistance());
+        assertEquals(22, params.getLimit());
+        assertEquals("search query", params.getSearchText());
+        assertSetEqual(new String[]{"category1", "category2"}, params.getCategories());
+        assertSetEqual(new String[]{"field1", "field2"}, params.getFields());
+    }
+
+    private void assertSetEqual(String[] expectedValues, Set<String> actualValues) {
+        assertEquals(expectedValues.length, actualValues.size());
+        for (String expectedValue : expectedValues) {
+            assertEquals(true, actualValues.contains(expectedValue));
+        }
+    }
+}
diff --git a/gradle.properties b/gradle.properties
index 475b38ce6..48ed711a5 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,4 +1,5 @@
 ANDROID_BUILD_MIN_SDK_VERSION=15
-ANDROID_BUILD_TARGET_SDK_VERSION=23
-ANDROID_BUILD_TOOLS_VERSION=23.0.1
-ANDROID_BUILD_SDK_VERSION=23
+ANDROID_BUILD_TARGET_SDK_VERSION=25
+ANDROID_BUILD_TOOLS_VERSION=25.0.3
+ANDROID_BUILD_SDK_VERSION=25
+org.gradle.jvmargs=-Xmx1536M
\ No newline at end of file
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 9c0bad963..8733a5efc 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.14.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-3.5-all.zip
diff --git a/plugin/FacebookSDKPlugin/resources/META-INF/plugin.xml b/plugin/FacebookSDKPlugin/resources/META-INF/plugin.xml
new file mode 100644
index 000000000..5ac08bc60
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/resources/META-INF/plugin.xml
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<idea-plugin version="2">
+  <id>com.facebook.plugin</id>
+  <name>Facebook SDK Plugin</name>
+  <version>0.1</version>
+  <vendor email="support@facebook.com"
+          url="https://developers.facebook.com/">
+    Facebook SDK
+  </vendor>
+
+  <description>
+    Description of Facebook SDK etc etc.
+  </description>
+
+  <change-notes>
+    Initial experiment version
+  </change-notes>
+
+  <idea-version since-build="141.0"/>
+
+  <depends>com.intellij.modules.lang</depends>
+  <depends>com.intellij.modules.platform</depends>
+  <depends>org.jetbrains.android</depends>
+  <depends>org.jetbrains.plugins.gradle</depends>
+
+  <extensions defaultExtensionNs="com.intellij">
+  </extensions>
+
+  <actions>
+    <group id="FacebookSDK.ToolMenu"
+           class="com.intellij.openapi.actionSystem.DefaultActionGroup"
+           text="Facebook SDK"
+           description="Facebook SDK Actions"
+           popup="true"
+           icon="/icons/facebook-ldpi.png">
+      <add-to-group group-id="ToolsMenu" anchor="last" />
+    </group>
+    <action id="FacebookSDK.InstallAccountKit"
+            class="com.facebook.plugin.actions.AccountKitInstallerAction"
+            text="Install Account Kit"
+            description="Install Account Kit"
+            icon="/icons/accountkit-ldpi.png">
+      <add-to-group group-id="FacebookSDK.ToolMenu" anchor="first" />
+    </action>
+  </actions>
+</idea-plugin>
diff --git a/plugin/FacebookSDKPlugin/resources/icons/accountkit-ldpi.png b/plugin/FacebookSDKPlugin/resources/icons/accountkit-ldpi.png
new file mode 100644
index 000000000..f4d788adf
Binary files /dev/null and b/plugin/FacebookSDKPlugin/resources/icons/accountkit-ldpi.png differ
diff --git a/plugin/FacebookSDKPlugin/resources/icons/facebook-ldpi.png b/plugin/FacebookSDKPlugin/resources/icons/facebook-ldpi.png
new file mode 100644
index 000000000..d1178eff1
Binary files /dev/null and b/plugin/FacebookSDKPlugin/resources/icons/facebook-ldpi.png differ
diff --git a/plugin/FacebookSDKPlugin/resources/values/code.properties b/plugin/FacebookSDKPlugin/resources/values/code.properties
new file mode 100644
index 000000000..99e36bf89
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/resources/values/code.properties
@@ -0,0 +1,82 @@
+importsList = \
+  android.os.Bundle,\
+  android.content.Intent,\
+  com.facebook.accountkit.AccessToken,\
+  com.facebook.accountkit.AccountKit,\
+  com.facebook.accountkit.AccountKitLoginResult,\
+  com.facebook.accountkit.ui.AccountKitActivity,\
+  com.facebook.accountkit.ui.AccountKitConfiguration,\
+  com.facebook.accountkit.ui.LoginType
+
+codeBlockFrameworkRequestField = \
+  private static final int AK_FRAMEWORK_REQUEST_CODE = 42;
+
+codeBlockOnCreateMethod = \
+  @Override protected void onCreate(Bundle savedInstanceState) {\
+    super.onCreate(savedInstanceState);\
+  }
+
+codeBlockOnCreate = \
+  if (AccountKit.getCurrentAccessToken() != null) {\
+    onSuccessfulLogin(AccountKit.getCurrentAccessToken());\
+  }
+
+codeBlockOnActivityResultMethod = \
+  @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) {\
+    super.onActivityResult(requestCode, resultCode, data);\
+  }
+
+codeBlockOnActivityResult = \
+  if (requestCode == AK_FRAMEWORK_REQUEST_CODE) {\
+    final AccountKitLoginResult loginResult = AccountKit.loginResultWithIntent(data);\
+    if (loginResult != null && loginResult.getAccessToken() != null) {\
+      onSuccessfulLogin(loginResult.getAccessToken());\
+    } else {\
+      onUnsuccessfulLogin(loginResult);\
+    }\
+  }
+
+codeBlockOnSuccessfulLogin = \
+  /**\n\
+    * This method is called back when login was successful.\n\
+    * @param accessToken AccountKit AccessToken to use\n\
+    */\n\
+  protected void onSuccessfulLogin(final AccessToken accessToken) {\
+\n    // Do your login logic here!\n\
+  }
+
+codeBlockOnUnsuccessfulLogin = \
+  /**\n\
+    * This method is called back when login failed.\n\
+    * @param loginResult Information about the result of login attempt\n\
+    */\n\
+  protected void onUnsuccessfulLogin(final AccountKitLoginResult loginResult) {\
+\n    // Do your error handing here! For ex:\n\
+    if (loginResult == null || loginResult.wasCancelled()) {\
+\n      // Login was cancelled by user\n\
+    } else if (loginResult.getError() != null) {\
+\n      // There was a login error. Check loginResult.getError()\n\
+    } else {\
+\n      // An unknown error has occurred!\n\
+    }\
+  }
+
+codeBlockDoLogin = \
+  /**\n\
+    * Call this method to initiate a login attempt and pop up AccountKit dialog\n\
+    * @param loginType either LoginType.PHONE for phone login or LoginType.EMAIL for email\n\
+    */\n\
+  protected void doLogin(final LoginType loginType) {\
+    if (AccountKit.getCurrentAccessToken() != null) {\
+      onSuccessfulLogin(AccountKit.getCurrentAccessToken());\
+    }\
+    final AccountKitConfiguration.AccountKitConfigurationBuilder configurationBuilder =\n\
+      new AccountKitConfiguration.AccountKitConfigurationBuilder(\
+        loginType,\
+        AccountKitActivity.ResponseType.TOKEN);\
+    final Intent intent = new Intent(this, AccountKitActivity.class);\
+    intent.putExtra(\
+      AccountKitActivity.ACCOUNT_KIT_ACTIVITY_CONFIGURATION,\
+      configurationBuilder.build());\
+    startActivityForResult(intent, AK_FRAMEWORK_REQUEST_CODE);\
+  }
diff --git a/plugin/FacebookSDKPlugin/resources/values/strings.properties b/plugin/FacebookSDKPlugin/resources/values/strings.properties
new file mode 100644
index 000000000..6cb626345
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/resources/values/strings.properties
@@ -0,0 +1,58 @@
+prereqsText = \
+  <html>\
+  <h2>Prerequisites</h2>\
+  Before you begin integrating Account Kit into your app, make sure you have completed the following prerequisites\
+  <p/>\
+  If you already have a Facebook App configured, you can skip to the next page.\
+  <p/>\
+  <h3>A. Create a Developer Account</h3>\
+  If you don't have a Facebook developer account, create one by going to<br/>\
+  <a href="https://www.facebook.com/login">https://www.facebook.com/login</a>.\
+  <p/>\
+  Your Facebook developer account gives you access to developer tools and allows you to create Facebook apps.\
+  <p/>\
+  <h3>B. Get a Facebook App ID</h3>\
+  Account Kit for Android requires a Facebook app ID. Follow the steps in the Getting Started, or to use Quick Start by going to<br/>\
+  <a href="https://developers.facebook.com/quickstarts">https://developers.facebook.com/quickstarts</a>.\
+  <p/>\
+  <h3>C. Choose Your App Settings</h3>\
+  Choose whether to allow email and SMS login, and choose security settings for your app by going to<br/>\
+  <a href="https://developers.facebook.com/apps">https://developers.facebook.com/apps</a>.\
+  </html>
+
+completedText = \
+  <html>\
+  <h2>All Done</h2>\
+  You're all done! AccountKit has been installed and configured for your project.\
+  <p/>\
+  For more information, tips and tricks, please visit the official documentation at<br/>\
+  <a href="https://developers.facebook.com/docs/accountkit/android">https://developers.facebook.com/docs/accountkit/android</a>\
+  <p/>\
+  You may close the installation wizard now. Or go back and install AccountKit on more modules or activities.\
+  </html>
+
+configureSDKText = \
+  <html>\
+  <h2>Configure the SDK</h2>\
+  Select the module that you would like to install Account Kit SDK on; \
+  this should be the module that contains your login buttons and logic.\
+  </html>
+
+configureParamsText = \
+  <html>\
+  Facebook app ID and name are shown at the top of your application dashboard;<br/>\
+  The client token is found in the Account Kit tab in the App Dashboard.\
+  </html>
+
+configureActivityText = \
+  <html>\
+  <h2>Configure Login Activity</h2>\
+  Select an Activity from your application that will have the AccountKit login buttons.<br/>\
+  This activity will be configured to receive the intent callbacks and have the logic for retrieving the \
+  AccountKit login tokens inside.\
+  </html>
+
+configureActivityDesc = \
+  <html>\
+  Click next to copy the setup and retrieval code to this activity.\
+  </html>
\ No newline at end of file
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/actions/AccountKitInstallerAction.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/actions/AccountKitInstallerAction.java
new file mode 100644
index 000000000..54baebdb2
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/actions/AccountKitInstallerAction.java
@@ -0,0 +1,38 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.actions;
+
+import com.facebook.plugin.ui.AccountKitInstallerWizard;
+import com.intellij.openapi.actionSystem.AnAction;
+import com.intellij.openapi.actionSystem.AnActionEvent;
+import com.intellij.openapi.actionSystem.PlatformDataKeys;
+import com.intellij.openapi.project.Project;
+
+public class AccountKitInstallerAction extends AnAction {
+
+    @Override
+    public void actionPerformed(final AnActionEvent event) {
+        Project project = event.getData(PlatformDataKeys.PROJECT);
+
+        AccountKitInstallerWizard dialog = new AccountKitInstallerWizard(project);
+        dialog.show();
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitActivityConfigurator.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitActivityConfigurator.java
new file mode 100644
index 000000000..df898db04
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitActivityConfigurator.java
@@ -0,0 +1,252 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.intellij.codeInsight.CodeInsightUtilCore;
+import com.intellij.ide.actions.OpenFileAction;
+import com.intellij.openapi.application.Result;
+import com.intellij.openapi.command.WriteCommandAction;
+import com.intellij.openapi.module.Module;
+import com.intellij.openapi.module.ModuleManager;
+import com.intellij.openapi.project.Project;
+import com.intellij.psi.PsiClass;
+import com.intellij.psi.PsiElement;
+import com.intellij.psi.PsiElementFactory;
+import com.intellij.psi.PsiField;
+import com.intellij.psi.PsiFile;
+import com.intellij.psi.PsiImportList;
+import com.intellij.psi.PsiImportStatement;
+import com.intellij.psi.PsiJavaFile;
+import com.intellij.psi.PsiMethod;
+import com.intellij.psi.PsiStatement;
+import com.intellij.psi.codeStyle.CodeStyleManager;
+import org.jetbrains.android.dom.manifest.Activity;
+import org.jetbrains.android.facet.AndroidFacet;
+import org.jetbrains.annotations.NotNull;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Properties;
+
+public class AccountKitActivityConfigurator {
+    private static final String codePropertiesFile = "values/code.properties";
+
+    private final Properties codeProperties;
+    private final String requestCode;
+
+    private PsiElementFactory elementFactory;
+
+    public AccountKitActivityConfigurator(final String requestCode)
+            throws IOException {
+        this.requestCode = requestCode;
+        codeProperties = new Properties();
+
+        InputStream inputStream = getClass().getClassLoader()
+                .getResourceAsStream(codePropertiesFile);
+        if (inputStream != null) {
+            codeProperties.load(inputStream);
+        }
+    }
+
+    public boolean isConfigured(final PsiClass psiClass) {
+        // TODO: add later
+        return false;
+    }
+
+    public void doConfigure(final PsiClass psiClass) {
+        new WriteCommandAction(psiClass.getProject()) {
+            @Override
+            protected void run(@NotNull Result result) {
+                configureClass(psiClass);
+
+                CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(psiClass);
+            }
+        }.execute();
+
+        OpenFileAction.openFile(
+                psiClass.getContainingFile().getVirtualFile().getPath(),
+                psiClass.getProject());
+    }
+
+    private void configureClass(final PsiClass psiClass) {
+        elementFactory = PsiElementFactory.SERVICE.getInstance(psiClass.getProject());
+
+        PsiFile psiFile = psiClass.getContainingFile();
+        if (!(psiFile instanceof PsiJavaFile)) {
+            return;
+        }
+
+        final PsiImportList importList = ((PsiJavaFile) psiFile).getImportList();
+        for (String packageName : codeProperties.getProperty("importsList").split(",")) {
+            packageName = packageName.trim();
+            if (!importList.getText().contains(packageName)) {
+                PsiImportStatement importStatement =
+                        elementFactory.createImportStatementOnDemand(packageName);
+                for (PsiElement element : importStatement.getChildren()) {
+                    // Sometimes, IntelliJ tries to be "helpful" and imports className.* for us
+                    // We actually don't want this to happen
+                    if (element.getText().equals("*")) {
+                        element.getPrevSibling().delete();
+                        element.delete();
+                    }
+                }
+                importList.add(importStatement);
+            }
+        }
+
+        PsiField frameworkRequestCode = findOrCreateField(
+                psiClass,
+                "AK_FRAMEWORK_REQUEST_CODE",
+                "codeBlockFrameworkRequestField");
+        frameworkRequestCode.setInitializer(
+                elementFactory.createExpressionFromText(requestCode, psiClass));
+
+        PsiMethod onCreateMethod = findOrCreateMethod(
+                psiClass,
+                "onCreate",
+                "codeBlockOnCreateMethod");
+        addStatement(onCreateMethod, "codeBlockOnCreate");
+
+        PsiMethod onActivityResult = findOrCreateMethod(
+                psiClass,
+                "onActivityResult",
+                "codeBlockOnActivityResultMethod");
+        addStatement(onActivityResult, "codeBlockOnActivityResult");
+
+        findOrCreateMethod(psiClass, "onSuccessfulLogin", "codeBlockOnSuccessfulLogin");
+        findOrCreateMethod(psiClass, "onUnsuccessfulLogin", "codeBlockOnUnsuccessfulLogin");
+        findOrCreateMethod(psiClass, "doLogin", "codeBlockDoLogin");
+    }
+
+    private PsiMethod findOrCreateMethod(
+            final PsiClass psiClass,
+            final String methodName,
+            final String methodBodyPropKey) {
+        PsiMethod[] methods = psiClass.findMethodsByName(methodName, false);
+        if (methods.length > 0) {
+            return methods[0];
+        }
+
+        PsiMethod method = elementFactory.createMethodFromText(
+                codeProperties.getProperty(methodBodyPropKey),
+                psiClass);
+
+        PsiMethod[] allMethods = psiClass.getMethods();
+        if (allMethods.length > 0) {
+            psiClass.addAfter(method, allMethods[allMethods.length - 1]);
+        } else {
+            psiClass.addAfter(method, psiClass.getLastChild());
+        }
+
+        CodeStyleManager.getInstance(psiClass.getProject()).reformat(method);
+
+        methods = psiClass.findMethodsByName(methodName, false);
+        if (methods.length > 0) {
+            return methods[0];
+        } else {
+            return method;
+        }
+    }
+
+    private PsiField findOrCreateField(
+            final PsiClass psiClass,
+            final String fieldName,
+            final String fieldBodyPropKey) {
+        PsiField field = psiClass.findFieldByName(fieldName, false);
+        if (field != null) {
+            return field;
+        }
+
+        field = elementFactory.createFieldFromText(
+                codeProperties.getProperty(fieldBodyPropKey),
+                psiClass);
+
+        PsiField[] allFields = psiClass.getAllFields();
+        if (allFields.length > 0) {
+            psiClass.addAfter(field, allFields[allFields.length - 1]);
+        } else {
+            psiClass.addAfter(field, psiClass.getFirstChild());
+        }
+
+        CodeStyleManager.getInstance(psiClass.getProject()).reformat(field);
+        return field;
+    }
+
+    private void addStatement(final PsiMethod method, final String statementPropKey) {
+        PsiStatement statement = elementFactory.createStatementFromText(
+                codeProperties.getProperty(statementPropKey),
+                method);
+        method.getBody().add(statement);
+    }
+
+    public static final class AvailableActivity {
+        private final Module module;
+        private final PsiClass psiClass;
+
+        AvailableActivity(final Module module, final PsiClass psiClass) {
+            this.module = module;
+            this.psiClass = psiClass;
+        }
+
+        public Module getModule() {
+            return module;
+        }
+
+        public PsiClass getPsiClass() {
+            return psiClass;
+        }
+
+        @Override
+        public String toString() {
+            return psiClass.getQualifiedName() + " (" + module.getName() + ")";
+        }
+    }
+
+    public static AvailableActivity[] getActivityClasses(final Project project) {
+        Module[] allModules = ModuleManager.getInstance(project).getModules();
+        List<AvailableActivity> res = new ArrayList<>();
+
+        for (Module module : allModules) {
+            List<Activity> activities;
+            try {
+                activities = AndroidFacet.getInstance(module)
+                        .getManifest()
+                        .getApplication()
+                        .getActivities();
+            } catch (Exception e) {
+                // Module doesn't have a valid Android facet. Skip it
+                continue;
+            }
+
+            for (Activity activity : activities) {
+                if ((activity != null) &&
+                        (activity.getActivityClass() != null) &&
+                        (activity.getActivityClass().getValue() != null)) {
+                    res.add(new AvailableActivity(module, activity.getActivityClass().getValue()));
+                }
+            }
+        }
+
+        return res.toArray(new AvailableActivity[res.size()]);
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitModuleConfigurator.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitModuleConfigurator.java
new file mode 100644
index 000000000..89d8cc46d
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitModuleConfigurator.java
@@ -0,0 +1,151 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.facebook.plugin.utils.PsiHelper;
+import com.intellij.openapi.module.Module;
+import com.intellij.openapi.module.ModuleManager;
+import com.intellij.openapi.project.Project;
+import org.jetbrains.plugins.gradle.util.GradleConstants;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class AccountKitModuleConfigurator implements Configurator {
+    private final Configurator[] configurators;
+
+    public AccountKitModuleConfigurator(final String appName,
+                                        final String appId,
+                                        final String clientToken) {
+        this.configurators = createConfigurators(appName, appId, clientToken);
+    }
+
+    @Override
+    public boolean isConfigured(final Module module) {
+        for (Configurator configurator : configurators) {
+            if (!configurator.isConfigured(module)) {
+                return false;
+            }
+        }
+
+        return true;
+    }
+
+    @Override
+    public void doConfigure(final Module module) {
+        for (Configurator configurator : configurators) {
+            configurator.doConfigure(module);
+        }
+    }
+
+    private static Configurator[] createConfigurators(
+            final String appName,
+            final String appId,
+            final String clientToken) {
+
+        return new Configurator[]{
+                new GradleBuildConfigurator(
+                        "jcenter",
+                        "com.facebook.android:account-kit-sdk",
+                        "4.+"),
+                new AndroidManifestConfigurator(
+                        "com.facebook.accountkit.ui.AccountKitActivity")
+                        .addMetadata(
+                                "com.facebook.accountkit.ApplicationName",
+                                "@string/fb_app_name")
+                        .addMetadata(
+                                "com.facebook.sdk.ApplicationId",
+                                "@string/fb_app_id")
+                        .addMetadata(
+                                "com.facebook.accountkit.ClientToken",
+                                "@string/ak_client_token")
+                        .addPermission("android.permission.INTERNET")
+                        .addPermission("android.permission.READ_PHONE_STATE")
+                        .addPermission("android.permission.RECEIVE_SMS")
+                        .addPermission("android.permission.GET_ACCOUNTS"),
+                new AndroidResourcesConfigurator()
+                        .addResourceString("fb_app_id", appId)
+                        .addResourceString("fb_app_name", appName)
+                        .addResourceString("ak_client_token", clientToken)
+        };
+    }
+
+    public enum InstallationType {
+        CannotInstall,
+        AlreadyInstalled,
+        Available
+    }
+
+    public static final class AvailableModule {
+        private final Module module;
+        private final InstallationType installationType;
+
+        AvailableModule(final Module module, final InstallationType installationType) {
+            this.module = module;
+            this.installationType = installationType;
+        }
+
+        public Module getModule() {
+            return module;
+        }
+
+        public InstallationType getInstallationType() {
+            return installationType;
+        }
+
+        @Override
+        public String toString() {
+            String title = module.getName();
+            if (installationType == InstallationType.CannotInstall) {
+                title += " (unavailable)";
+            } else if (installationType == InstallationType.AlreadyInstalled) {
+                title += " (already installed)";
+            }
+
+            return title;
+        }
+    }
+
+    public static AvailableModule[] getModuleAvailabilities(final Project project) {
+        Configurator[] checkConfigurators = createConfigurators("", "", "");
+        Module[] allModules = ModuleManager.getInstance(project).getModules();
+        List<AvailableModule> res = new ArrayList<>();
+
+        for (Module module : allModules) {
+            InstallationType moduleType = InstallationType.CannotInstall;
+
+            if (PsiHelper.findAllFiles(module, GradleConstants.DEFAULT_SCRIPT_NAME).size() > 0) {
+                moduleType = InstallationType.AlreadyInstalled;
+
+                for (Configurator configurator : checkConfigurators) {
+                    if (!configurator.isConfigured(module)) {
+                        moduleType = InstallationType.Available;
+                        break;
+                    }
+                }
+            }
+
+            res.add(new AvailableModule(module, moduleType));
+        }
+
+        return res.toArray(new AvailableModule[res.size()]);
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidManifestConfigurator.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidManifestConfigurator.java
new file mode 100644
index 000000000..0d6eb9984
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidManifestConfigurator.java
@@ -0,0 +1,164 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.intellij.codeInsight.CodeInsightUtilCore;
+import com.intellij.ide.actions.OpenFileAction;
+import com.intellij.openapi.application.Result;
+import com.intellij.openapi.command.WriteCommandAction;
+import com.intellij.openapi.module.Module;
+import com.intellij.openapi.ui.Messages;
+import com.intellij.openapi.vfs.WritingAccessProvider;
+import com.intellij.psi.PsiFile;
+import com.intellij.psi.XmlElementFactory;
+import com.intellij.psi.xml.XmlElement;
+import com.intellij.psi.xml.XmlTag;
+import org.jetbrains.android.dom.manifest.Activity;
+import org.jetbrains.android.dom.manifest.Application;
+import org.jetbrains.android.dom.manifest.Manifest;
+import org.jetbrains.android.facet.AndroidFacet;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.ArrayList;
+import java.util.LinkedHashMap;
+import java.util.List;
+import java.util.Map;
+
+public class AndroidManifestConfigurator implements Configurator {
+
+    private static final String METADATA_TAG = "<meta-data/>";
+    private static final String PERMISSION_TAG = "<uses-permission/>";
+    private static final String NAME_ATTR = "android:name";
+    private static final String VALUE_ATTR = "android:value";
+
+    private final Map<String, String> metadata;
+    private final List<String> permissions;
+    private final String activityName;
+
+    AndroidManifestConfigurator(final String activityName) {
+        this.activityName = activityName;
+        this.metadata = new LinkedHashMap<>();
+        this.permissions = new ArrayList<>();
+    }
+
+    AndroidManifestConfigurator addMetadata(final String name, final String value) {
+        metadata.put(name, value);
+        return this;
+    }
+
+    AndroidManifestConfigurator addPermission(final String permission) {
+        permissions.add(permission);
+        return this;
+    }
+
+    @Override
+    public boolean isConfigured(final Module module) {
+        final Manifest androidManifest = getAndroidManifest(module);
+        if (androidManifest == null) {
+            return false;
+        }
+
+        if (!androidManifest.getXmlElement().getText().contains(activityName)) {
+            return false;
+        }
+
+        for (String metadataName : metadata.keySet()) {
+            if (!androidManifest.getXmlElement().getText().contains(metadataName)) {
+                return false;
+            }
+        }
+
+        for (String permission : permissions) {
+            if (!androidManifest.getXmlElement().getText().contains(permission)) {
+                return false;
+            }
+        }
+
+        return true;
+    }
+
+    @Override
+    public void doConfigure(final Module module) {
+        final Manifest androidManifest = getAndroidManifest(module);
+        if ((androidManifest == null) ||
+                (androidManifest.getApplication() == null) ||
+                !WritingAccessProvider.isPotentiallyWritable(
+                        androidManifest.getXmlElement().getContainingFile().getVirtualFile(),
+                        null)) {
+            Messages.showErrorDialog(
+                module.getProject(),
+                "Cannot find or modify Android manifest file for module " + module.getName(),
+                "Facebook SDK Plugin");
+            return;
+        }
+
+        final PsiFile manifestFile = androidManifest.getXmlElement().getContainingFile();
+        final Application application = androidManifest.getApplication();
+        final XmlElement applicationTag = application.getXmlElement();
+        final XmlElementFactory elementFactory = XmlElementFactory.getInstance(module.getProject());
+
+        new WriteCommandAction(manifestFile.getProject()) {
+            @Override
+            protected void run(@NotNull Result result) {
+
+                for (String permission : permissions) {
+                    if (!androidManifest.getXmlElement().getText().contains(permission)) {
+                        XmlTag permTag = elementFactory.createTagFromText(PERMISSION_TAG);
+                        permTag.setAttribute(NAME_ATTR, permission);
+                        androidManifest.getXmlElement().addBefore(permTag, applicationTag);
+                    }
+                }
+
+                for (Map.Entry<String, String> metadata : metadata.entrySet()) {
+                    if (!applicationTag.getText().contains(metadata.getKey())) {
+                        XmlTag mdTag = elementFactory.createTagFromText(METADATA_TAG);
+                        mdTag.setAttribute(NAME_ATTR, metadata.getKey());
+                        mdTag.setAttribute(VALUE_ATTR, metadata.getValue());
+                        application.getXmlElement().add(mdTag);
+                    }
+                }
+
+                if (!applicationTag.getText().contains(activityName)) {
+                    final Activity newActivity = application.addActivity();
+                    newActivity.getActivityClass().setStringValue(activityName);
+                }
+
+                CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(manifestFile);
+            }
+        }.execute();
+
+        OpenFileAction.openFile(manifestFile.getVirtualFile().getPath(), module.getProject());
+    }
+
+    private static Manifest getAndroidManifest(final Module module) {
+        final AndroidFacet facet = AndroidFacet.getInstance(module);
+        if (facet == null) {
+            return null;
+        }
+
+        final Manifest manifest = facet.getManifest();
+        if (manifest == null) {
+            return null;
+        }
+
+        return manifest;
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidResourcesConfigurator.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidResourcesConfigurator.java
new file mode 100644
index 000000000..4fd8efd6d
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidResourcesConfigurator.java
@@ -0,0 +1,125 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.android.ide.common.res2.ResourceItem;
+import com.android.resources.ResourceType;
+import com.android.tools.idea.res.LocalResourceRepository;
+import com.android.tools.idea.res.ModuleResourceRepository;
+import com.google.common.collect.ListMultimap;
+import com.intellij.codeInsight.CodeInsightUtilCore;
+import com.intellij.ide.actions.OpenFileAction;
+import com.intellij.openapi.application.Result;
+import com.intellij.openapi.command.WriteCommandAction;
+import com.intellij.openapi.module.Module;
+import com.intellij.psi.PsiFile;
+import com.intellij.psi.XmlElementFactory;
+import com.intellij.psi.xml.XmlTag;
+import org.apache.commons.lang.StringUtils;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.LinkedHashMap;
+import java.util.List;
+import java.util.Map;
+
+public class AndroidResourcesConfigurator implements Configurator {
+
+    private static final String STRING_TAG = "<string/>";
+    private static final String NAME_ATTR = "name";
+
+    private final Map<String, String> resourceStrings = new LinkedHashMap<>();
+
+    AndroidResourcesConfigurator addResourceString(final String name, final String value) {
+        if (!StringUtils.isBlank(name) && !StringUtils.isBlank(value)) {
+            resourceStrings.put(name, value);
+        }
+        return this;
+    }
+
+    @Override
+    public boolean isConfigured(final Module module) {
+        LocalResourceRepository resourceRepository =
+                ModuleResourceRepository.getModuleResources(module, false);
+        if (resourceRepository == null) {
+            return false;
+        }
+
+        for (String resourceName : resourceStrings.keySet()) {
+            List<ResourceItem> resourceItems =
+                    resourceRepository.getResourceItem(ResourceType.STRING, resourceName);
+            if (resourceItems.size() == 0) {
+                return false;
+            }
+        }
+
+        return true;
+    }
+
+    @Override
+    public void doConfigure(final Module module) {
+        LocalResourceRepository resourceRepository =
+                ModuleResourceRepository.getModuleResources(module, true);
+        if (resourceRepository == null) {
+            return;
+        }
+
+        ListMultimap<String, ResourceItem> stringResources =
+                resourceRepository.getItems().get(ResourceType.STRING);
+        if (stringResources.size() == 0) {
+            return;
+        }
+
+        ResourceItem firstStringResource = stringResources.values().iterator().next();
+        XmlTag resourceTag = ModuleResourceRepository.getItemTag(
+                module.getProject(),
+                firstStringResource);
+        PsiFile resourceFile = ModuleResourceRepository.getItemPsiFile(
+                module.getProject(),
+                firstStringResource);
+        final XmlElementFactory elementFactory =
+                XmlElementFactory.getInstance(module.getProject());
+
+        new WriteCommandAction(resourceFile.getProject()) {
+            @Override
+            protected void run(@NotNull Result result) {
+
+                for (String resourceName : resourceStrings.keySet()) {
+                    List<ResourceItem> resourceItems =
+                            resourceRepository.getResourceItem(ResourceType.STRING, resourceName);
+                    if (resourceItems.size() == 0) {
+                        XmlTag newResourceTag = elementFactory.createTagFromText(STRING_TAG);
+                        newResourceTag.setAttribute(NAME_ATTR, resourceName);
+                        newResourceTag.add(elementFactory.createDisplayText(
+                                resourceStrings.get(resourceName)));
+
+                        resourceFile.addAfter(newResourceTag, resourceTag);
+                    }
+                }
+
+                CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(resourceFile);
+                resourceRepository.invalidateResourceDirs();
+                resourceRepository.sync();
+            }
+        }.execute();
+
+        OpenFileAction.openFile(resourceFile.getVirtualFile().getPath(), module.getProject());
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/Configurator.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/Configurator.java
new file mode 100644
index 000000000..384939767
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/Configurator.java
@@ -0,0 +1,30 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.intellij.openapi.module.Module;
+
+public interface Configurator {
+
+    boolean isConfigured(final Module module);
+
+    void doConfigure(final Module module);
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/GradleBuildConfigurator.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/GradleBuildConfigurator.java
new file mode 100644
index 000000000..2b84fa332
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/GradleBuildConfigurator.java
@@ -0,0 +1,195 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.intellij.codeInsight.CodeInsightUtilCore;
+import com.intellij.ide.actions.OpenFileAction;
+import com.intellij.openapi.application.Result;
+import com.intellij.openapi.command.WriteCommandAction;
+import com.intellij.openapi.module.Module;
+import com.intellij.openapi.project.Project;
+import com.intellij.openapi.ui.Messages;
+import com.intellij.openapi.vfs.VfsUtil;
+import com.intellij.openapi.vfs.VirtualFile;
+import com.intellij.openapi.vfs.WritingAccessProvider;
+import com.intellij.psi.PsiElement;
+import com.intellij.psi.PsiFile;
+import com.intellij.psi.PsiManager;
+import com.intellij.psi.codeStyle.CodeStyleManager;
+import com.intellij.psi.util.PsiTreeUtil;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.plugins.gradle.util.GradleConstants;
+import org.jetbrains.plugins.groovy.lang.psi.GroovyFile;
+import org.jetbrains.plugins.groovy.lang.psi.GroovyPsiElementFactory;
+import org.jetbrains.plugins.groovy.lang.psi.api.statements.GrStatement;
+import org.jetbrains.plugins.groovy.lang.psi.api.statements.blocks.GrClosableBlock;
+import org.jetbrains.plugins.groovy.lang.psi.api.statements.expressions.GrExpression;
+import org.jetbrains.plugins.groovy.lang.psi.api.statements.expressions.path.GrMethodCallExpression;
+import org.jetbrains.plugins.groovy.lang.psi.api.util.GrStatementOwner;
+
+import java.io.File;
+
+public class GradleBuildConfigurator implements Configurator {
+
+    private static final String BLOCK_REPOSITORIES = "repositories";
+    private static final String BLOCK_DEPENDENCIES = "dependencies";
+    private static final String GRADLE_SCRIPT_NAME = GradleConstants.DEFAULT_SCRIPT_NAME;
+    private static final String FORMAT_REPOSITORY = "{repository}()";
+    private static final String FORMAT_DEPENDENCY = "compile '{library}:{version}'";
+
+    private final String repository;
+    private final String library;
+    private final String version;
+
+    GradleBuildConfigurator(final String repository,
+                                   final String library,
+                                   final String version) {
+        this.repository = repository;
+        this.library = library;
+        this.version = version;
+    }
+
+    @Override
+    public boolean isConfigured(final Module module) {
+        // First, check if the module has the dependency present
+        GroovyFile moduleGradleFile = getBuildGradleFile(module.getProject(), module);
+        if ((moduleGradleFile != null) &&
+                moduleGradleFile.getText().contains(library)) {
+            return true;
+        }
+
+        // If not, it might still be configured at a project level, so check that too
+        GroovyFile projectGradleFile = getBuildGradleFile(module.getProject(), null);
+        return ((projectGradleFile != null) &&
+                projectGradleFile.getText().contains(library));
+    }
+
+    @Override
+    public void doConfigure(final Module module) {
+        final GroovyFile gradleFile = getBuildGradleFile(module.getProject(), module);
+        if ((gradleFile != null) &&
+                WritingAccessProvider.isPotentiallyWritable(gradleFile.getVirtualFile(), null)) {
+
+            new WriteCommandAction(gradleFile.getProject()) {
+                @Override
+                protected void run(@NotNull Result result) {
+
+                    final GrClosableBlock repositoriesBlock =
+                            findOrCreateBlock(gradleFile, BLOCK_REPOSITORIES);
+                    if (!repositoriesBlock.getText().contains(repository)) {
+                        addChildExpression(
+                            repositoriesBlock,
+                            FORMAT_REPOSITORY.replace("{repository}", repository));
+                    }
+
+                    final GrClosableBlock dependenciesBlock =
+                            findOrCreateBlock(gradleFile, BLOCK_DEPENDENCIES);
+                    if (!repositoriesBlock.getText().contains(library)) {
+                        addChildExpression(
+                            dependenciesBlock,
+                            FORMAT_DEPENDENCY.replace("{library}", library)
+                                        .replace("{version}", version));
+                    }
+
+                    CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(gradleFile);
+                }
+            }.execute();
+
+            OpenFileAction.openFile(gradleFile.getVirtualFile().getPath(), module.getProject());
+        } else {
+            Messages.showErrorDialog(
+                module.getProject(),
+                "Cannot find or modify build.gradle file for module " + module.getName(),
+                "Facebook SDK Plugin");
+        }
+    }
+
+    private static GroovyFile getBuildGradleFile(final Project project, final Module module) {
+        final String basePath = (module == null)
+                ? project.getBasePath()
+                : new File(module.getModuleFilePath()).getParent();
+
+        final VirtualFile file = VfsUtil.findFileByIoFile(
+                new File(basePath + File.separator + GRADLE_SCRIPT_NAME),
+                true);
+        if (file == null) {
+            return null;
+        }
+
+        final PsiFile psiFile = PsiManager.getInstance(project).findFile(file);
+        if (psiFile instanceof GroovyFile) {
+            return (GroovyFile) psiFile;
+        } else {
+            return null;
+        }
+    }
+
+    private static GrClosableBlock getBlockByName(final PsiElement parent, final String name) {
+        final GrMethodCallExpression[] allExpressions =
+                PsiTreeUtil.getChildrenOfType(parent, GrMethodCallExpression.class);
+        if (allExpressions == null) {
+            return null;
+        }
+
+        for (GrMethodCallExpression expression : allExpressions) {
+            final GrExpression invokedExpression = expression.getInvokedExpression();
+
+            if ((expression.getClosureArguments().length > 0) &&
+                    (invokedExpression.getText().equalsIgnoreCase(name))) {
+                return expression.getClosureArguments()[0];
+            }
+        }
+
+        return null;
+    }
+
+    private static GrClosableBlock findOrCreateBlock(
+            final GrStatementOwner parent,
+            final String name) {
+        final GrClosableBlock block = getBlockByName(parent, name);
+        if (block != null) {
+            return block;
+        }
+
+        addChildExpression(parent, name + "{\n}\n");
+
+        return getBlockByName(parent, name);
+    }
+
+    private static GrExpression addChildExpression(
+            final GrStatementOwner parent,
+            final String exprText) {
+        final GroovyPsiElementFactory factory =
+                GroovyPsiElementFactory.getInstance(parent.getProject());
+        final GrExpression child = factory.createExpressionFromText(exprText);
+
+        CodeStyleManager.getInstance(parent.getProject()).reformat(child);
+
+        final GrStatement[] statements = parent.getStatements();
+        if (statements.length > 0) {
+            parent.addAfter(child, statements[statements.length - 1]);
+        } else {
+            parent.addAfter(child, parent.getFirstChild());
+        }
+
+        return child;
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompleted.form b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompleted.form
new file mode 100644
index 000000000..615760e18
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompleted.form
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.AccountKitCompletedForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="2" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="1069" height="369"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="34af8" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalTextPosition value="10"/>
+          <text resource-bundle="values/strings" key="completedText"/>
+          <verticalAlignment value="1"/>
+          <verticalTextPosition value="1"/>
+        </properties>
+      </component>
+      <vspacer id="66a18">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
+        </constraints>
+      </vspacer>
+    </children>
+  </grid>
+</form>
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompletedForm.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompletedForm.java
new file mode 100644
index 000000000..a9d223e1a
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompletedForm.java
@@ -0,0 +1,44 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import javax.swing.JComponent;
+import javax.swing.JPanel;
+
+public class AccountKitCompletedForm implements WizardStep {
+    private JPanel mainPanel;
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+
+    @Override
+    public void fillForm() {
+        // Nothing to fill
+    }
+
+    @Override
+    public boolean commitForm() {
+        // Nothing to commit
+        return true;
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivity.form b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivity.form
new file mode 100644
index 000000000..4d6951a66
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivity.form
@@ -0,0 +1,74 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.AccountKitInstallActivityForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="5" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="1154" height="263"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="8c970" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="2" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalTextPosition value="10"/>
+          <text resource-bundle="values/strings" key="configureActivityText"/>
+          <verticalAlignment value="1"/>
+          <verticalTextPosition value="1"/>
+        </properties>
+      </component>
+      <vspacer id="b1924">
+        <constraints>
+          <grid row="4" column="0" row-span="1" col-span="2" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
+        </constraints>
+      </vspacer>
+      <component id="ad7eb" class="javax.swing.JComboBox" binding="activitySelector">
+        <constraints>
+          <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="2" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+      </component>
+      <component id="d2f86" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <labelFor value="ad7eb"/>
+          <text value="Activity:"/>
+        </properties>
+      </component>
+      <component id="e5a56" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="2" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="Framework Request Code:"/>
+        </properties>
+      </component>
+      <component id="fea2c" class="javax.swing.JTextField" binding="requestCodeField">
+        <constraints>
+          <grid row="2" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="2" anchor="8" fill="0" indent="0" use-parent-layout="false">
+            <preferred-size width="300" height="-1"/>
+          </grid>
+        </constraints>
+        <properties>
+          <columns value="0"/>
+          <text value="42"/>
+        </properties>
+      </component>
+      <component id="ade2c" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="3" column="0" row-span="1" col-span="2" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalTextPosition value="10"/>
+          <text resource-bundle="values/strings" key="configureActivityDesc"/>
+          <verticalAlignment value="1"/>
+          <verticalTextPosition value="1"/>
+        </properties>
+      </component>
+    </children>
+  </grid>
+</form>
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivityForm.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivityForm.java
new file mode 100644
index 000000000..16d36550d
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivityForm.java
@@ -0,0 +1,95 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.facebook.plugin.config.AccountKitActivityConfigurator;
+import com.intellij.openapi.project.Project;
+import com.intellij.openapi.ui.Messages;
+import org.apache.commons.lang.StringUtils;
+
+import javax.swing.DefaultComboBoxModel;
+import javax.swing.JComboBox;
+import javax.swing.JComponent;
+import javax.swing.JPanel;
+import javax.swing.JTextField;
+
+public class AccountKitInstallActivityForm implements WizardStep {
+    private final Project project;
+
+    private JPanel mainPanel;
+    private JComboBox activitySelector;
+    private JTextField requestCodeField;
+
+    AccountKitInstallActivityForm(final Project project) {
+        this.project = project;
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+
+    @Override
+    public void fillForm() {
+        activitySelector.setModel(new DefaultComboBoxModel<>(
+                AccountKitActivityConfigurator.getActivityClasses(project)));
+    }
+
+    @Override
+    public boolean commitForm() {
+        AccountKitActivityConfigurator.AvailableActivity activity =
+                (AccountKitActivityConfigurator.AvailableActivity
+                        ) activitySelector.getSelectedItem();
+
+        if ((activity == null) || (activity.getPsiClass() == null)) {
+            Messages.showErrorDialog(
+                project,
+                "Please select a valid activity to continue.",
+                "Install Failed");
+            return false;
+        }
+
+        if (StringUtils.isBlank(requestCodeField.getText())) {
+            Messages.showErrorDialog(
+                project,
+                "Request Code cannot be blank.",
+                "Install Failed");
+            return false;
+        }
+
+        AccountKitActivityConfigurator activityConfigurator;
+        try {
+            activityConfigurator = new AccountKitActivityConfigurator(requestCodeField.getText());
+        } catch (Exception e) {
+            Messages.showErrorDialog(
+                project,
+                "Failed to load the activity configurator code.",
+                "Install Failed");
+            return false;
+        }
+
+        if (!activityConfigurator.isConfigured(activity.getPsiClass())) {
+            activityConfigurator.doConfigure(activity.getPsiClass());
+        }
+
+        return true;
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependencies.form b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependencies.form
new file mode 100644
index 000000000..f2d3f0571
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependencies.form
@@ -0,0 +1,109 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.AccountKitInstallDependenciesForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="7" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="1154" height="263"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="8c970" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="2" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalTextPosition value="10"/>
+          <text resource-bundle="values/strings" key="configureSDKText"/>
+          <verticalAlignment value="1"/>
+          <verticalTextPosition value="1"/>
+        </properties>
+      </component>
+      <vspacer id="b1924">
+        <constraints>
+          <grid row="6" column="0" row-span="1" col-span="2" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
+        </constraints>
+      </vspacer>
+      <component id="ad7eb" class="javax.swing.JComboBox" binding="moduleSelector">
+        <constraints>
+          <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="2" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+      </component>
+      <component id="d2f86" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <labelFor value="ad7eb"/>
+          <text value="Module:"/>
+        </properties>
+      </component>
+      <component id="e5a56" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="2" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="App Name:"/>
+        </properties>
+      </component>
+      <component id="fea2c" class="javax.swing.JTextField" binding="appNameField">
+        <constraints>
+          <grid row="2" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="2" anchor="8" fill="0" indent="0" use-parent-layout="false">
+            <preferred-size width="300" height="-1"/>
+          </grid>
+        </constraints>
+        <properties>
+          <columns value="0"/>
+        </properties>
+      </component>
+      <component id="4ee59" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="3" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="App Id:"/>
+        </properties>
+      </component>
+      <component id="6b35e" class="javax.swing.JTextField" binding="appIdField">
+        <constraints>
+          <grid row="3" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="2" anchor="8" fill="0" indent="0" use-parent-layout="false">
+            <preferred-size width="300" height="-1"/>
+          </grid>
+        </constraints>
+        <properties>
+          <columns value="0"/>
+        </properties>
+      </component>
+      <component id="a33e6" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="4" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="Client Token:"/>
+        </properties>
+      </component>
+      <component id="f22ed" class="javax.swing.JTextField" binding="clientTokenField">
+        <constraints>
+          <grid row="4" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="2" anchor="8" fill="0" indent="0" use-parent-layout="false">
+            <preferred-size width="300" height="-1"/>
+          </grid>
+        </constraints>
+        <properties>
+          <columns value="0"/>
+        </properties>
+      </component>
+      <component id="ade2c" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="5" column="0" row-span="1" col-span="2" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalTextPosition value="10"/>
+          <text resource-bundle="values/strings" key="configureParamsText"/>
+          <verticalAlignment value="1"/>
+          <verticalTextPosition value="1"/>
+        </properties>
+      </component>
+    </children>
+  </grid>
+</form>
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependenciesForm.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependenciesForm.java
new file mode 100644
index 000000000..2a312a350
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependenciesForm.java
@@ -0,0 +1,134 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.facebook.plugin.config.AccountKitModuleConfigurator;
+import com.intellij.openapi.project.Project;
+import com.intellij.openapi.ui.Messages;
+import org.apache.commons.lang.StringUtils;
+
+import javax.swing.DefaultComboBoxModel;
+import javax.swing.JComboBox;
+import javax.swing.JComponent;
+import javax.swing.JPanel;
+import javax.swing.JTextField;
+
+public class AccountKitInstallDependenciesForm implements WizardStep {
+    private final Project project;
+
+    private JPanel mainPanel;
+    private JComboBox moduleSelector;
+    private JTextField appNameField;
+    private JTextField appIdField;
+    private JTextField clientTokenField;
+
+    AccountKitInstallDependenciesForm(final Project project) {
+        this.project = project;
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+
+    @Override
+    public void fillForm() {
+        moduleSelector.setModel(new DefaultComboBoxModel<>(
+                AccountKitModuleConfigurator.getModuleAvailabilities(project)));
+    }
+
+    @Override
+    public boolean commitForm() {
+        AccountKitModuleConfigurator.AvailableModule selectedModule =
+                (AccountKitModuleConfigurator.AvailableModule) moduleSelector.getSelectedItem();
+
+        if (selectedModule == null) {
+            Messages.showErrorDialog(
+                project,
+                "Please select a module to continue.",
+                "Install Failed");
+            return false;
+        }
+
+        if (selectedModule.getInstallationType() ==
+                AccountKitModuleConfigurator.InstallationType.CannotInstall) {
+            Messages.showErrorDialog(
+                project,
+                "Cannot install AccountKit on module " +
+                  selectedModule.getModule().getName() +
+                  " because it either is not an Android module " +
+                  "or is not built using Gradle.",
+                "Install Failed");
+            return false;
+        }
+
+        if (selectedModule.getInstallationType() ==
+                AccountKitModuleConfigurator.InstallationType.AlreadyInstalled) {
+            return true;
+        }
+
+        if (StringUtils.isBlank(appNameField.getText())) {
+            Messages.showErrorDialog(
+                project,
+                "App Name cannot be blank.",
+                "Install Failed");
+            return false;
+        }
+
+        if (StringUtils.isBlank(appIdField.getText()) ||
+                !StringUtils.isNumeric(appIdField.getText())) {
+            Messages.showErrorDialog(
+                project,
+                "App Id must be a valid number.",
+                "Install Failed");
+            return false;
+        }
+
+        if (StringUtils.isBlank(clientTokenField.getText())) {
+            Messages.showErrorDialog(
+                project,
+                "Client Token cannot be blank.",
+                "Install Failed");
+            return false;
+        }
+
+        AccountKitModuleConfigurator accountKitModuleConfigurator =
+                new AccountKitModuleConfigurator(
+                        appNameField.getText(),
+                        appIdField.getText(),
+                        clientTokenField.getText());
+
+        if (!accountKitModuleConfigurator.isConfigured(selectedModule.getModule())) {
+            try {
+                accountKitModuleConfigurator.doConfigure(selectedModule.getModule());
+            } catch (Exception e) {
+                Messages.showErrorDialog(
+                    project,
+                    "Something went wrong while installing module " +
+                      selectedModule.getModule().getName() +
+                      ": \n" + e.getMessage(),
+                    "Install Failed");
+            }
+        }
+
+        return true;
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallerWizard.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallerWizard.java
new file mode 100644
index 000000000..22a5538ef
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallerWizard.java
@@ -0,0 +1,133 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.intellij.openapi.project.Project;
+import com.intellij.openapi.ui.DialogWrapper;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+import javax.swing.Action;
+import javax.swing.JComponent;
+import javax.swing.JPanel;
+import java.awt.Dimension;
+import java.awt.GridLayout;
+import java.awt.event.ActionEvent;
+
+public class AccountKitInstallerWizard extends DialogWrapper {
+
+    private static final Dimension defaultMinSize = new Dimension(800, 400);
+    private static final Dimension defaultMaxSize = new Dimension(800, 600);
+
+    private JPanel mainPanel;
+
+    private WizardStep[] wizardSteps;
+    private WizardAction previousAction;
+    private WizardAction nextAction;
+    private int currentStep = 0;
+
+    public AccountKitInstallerWizard(final Project project) {
+        super(project);
+
+        wizardSteps = new WizardStep[]{
+                new AccountKitPrerequisitesForm(),
+                new AccountKitInstallDependenciesForm(project),
+                new AccountKitInstallActivityForm(project),
+                new AccountKitCompletedForm()
+        };
+
+        setTitle("Install AccountKit SDK");
+        init();
+        setStep(0, false);
+    }
+
+    @NotNull
+    @Override
+    protected Action[] createLeftSideActions() {
+        return new Action[]{
+                new DialogWrapperExitAction("Close", CLOSE_EXIT_CODE)
+        };
+    }
+
+    @NotNull
+    @Override
+    protected Action[] createActions() {
+        previousAction = new WizardAction("< Previous", -1);
+        nextAction = new WizardAction("Next >", 1);
+        return new Action[]{
+                previousAction,
+                nextAction
+        };
+    }
+
+    @Nullable
+    @Override
+    protected JComponent createCenterPanel() {
+        mainPanel = new JPanel(true);
+        mainPanel.setMinimumSize(defaultMinSize);
+        mainPanel.setMaximumSize(defaultMaxSize);
+        mainPanel.setLayout(new GridLayout(0, 1));
+        return mainPanel;
+    }
+
+    private void setStep(final int newStep, final boolean shouldCommit) {
+        if ((newStep < 0) || (newStep >= wizardSteps.length) || (mainPanel == null)) {
+            return;
+        }
+
+        if (shouldCommit) {
+            if (!wizardSteps[currentStep].commitForm()) {
+                return;
+            }
+        }
+
+        currentStep = newStep;
+        wizardSteps[newStep].fillForm();
+
+        JComponent centerPanel = wizardSteps[newStep].getComponent();
+        centerPanel.setMinimumSize(defaultMinSize);
+        centerPanel.setMaximumSize(defaultMaxSize);
+        centerPanel.invalidate();
+        centerPanel.updateUI();
+
+        mainPanel.removeAll();
+        mainPanel.add(centerPanel);
+        mainPanel.invalidate();
+        mainPanel.updateUI();
+
+        previousAction.setEnabled(currentStep > 0);
+        nextAction.setEnabled(currentStep < wizardSteps.length - 1);
+    }
+
+    protected final class WizardAction extends DialogWrapperAction {
+        final int delta;
+
+        private WizardAction(@NotNull final String name, final int delta) {
+            super(name);
+            this.delta = delta;
+        }
+
+        @Override
+        protected void doAction(ActionEvent actionEvent) {
+            setStep(currentStep + delta, delta > 0);
+        }
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisites.form b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisites.form
new file mode 100644
index 000000000..93e0bc31a
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisites.form
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.AccountKitPrerequisitesForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="2" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="1069" height="369"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="34af8" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalTextPosition value="10"/>
+          <text resource-bundle="values/strings" key="prereqsText"/>
+          <verticalAlignment value="1"/>
+          <verticalTextPosition value="1"/>
+        </properties>
+      </component>
+      <vspacer id="66a18">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
+        </constraints>
+      </vspacer>
+    </children>
+  </grid>
+</form>
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisitesForm.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisitesForm.java
new file mode 100644
index 000000000..b7e9f4e29
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisitesForm.java
@@ -0,0 +1,44 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import javax.swing.JComponent;
+import javax.swing.JPanel;
+
+public class AccountKitPrerequisitesForm implements WizardStep {
+    private JPanel mainPanel;
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+
+    @Override
+    public void fillForm() {
+        // Nothing to fill
+    }
+
+    @Override
+    public boolean commitForm() {
+        // Nothing to commit
+        return true;
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/WizardStep.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/WizardStep.java
new file mode 100644
index 000000000..95cf1f482
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/WizardStep.java
@@ -0,0 +1,31 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import javax.swing.JComponent;
+
+public interface WizardStep {
+    JComponent getComponent();
+
+    void fillForm();
+
+    boolean commitForm();
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/utils/PsiHelper.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/utils/PsiHelper.java
new file mode 100644
index 000000000..e14a32037
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/utils/PsiHelper.java
@@ -0,0 +1,145 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.utils;
+
+import com.intellij.openapi.module.Module;
+import com.intellij.openapi.project.Project;
+import com.intellij.openapi.roots.ProjectFileIndex;
+import com.intellij.openapi.roots.ProjectRootManager;
+import com.intellij.openapi.ui.Messages;
+import com.intellij.openapi.vfs.VirtualFile;
+import com.intellij.psi.PsiElement;
+import com.intellij.psi.PsiFile;
+import com.intellij.psi.search.FilenameIndex;
+import com.intellij.psi.search.GlobalSearchScope;
+import org.apache.commons.lang.StringUtils;
+
+import java.io.FileOutputStream;
+import java.io.PrintStream;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+public final class PsiHelper {
+
+    public static Map<Module, PsiFile> findAllFiles(
+            final Project project,
+            final String fileName) {
+        ProjectFileIndex fileIndex = ProjectRootManager.getInstance(project).getFileIndex();
+        String projectFilePath = project.getBasePath();
+
+        PsiFile[] psiFiles = FilenameIndex.getFilesByName(
+                project,
+                fileName,
+                GlobalSearchScope.projectScope(project));
+
+        Map<Module, PsiFile> moduleFiles = new HashMap<>();
+        for (PsiFile psiFile : psiFiles) {
+            try {
+                VirtualFile virtualFile = psiFile.getVirtualFile();
+                Module module = fileIndex.getModuleForFile(virtualFile);
+                String modulePath = module.getModuleFile().getParent().getPath();
+
+                if (!modulePath.equals(projectFilePath)) {
+                    moduleFiles.put(module, psiFile);
+                }
+            } catch (Exception e) {
+                // Swallow
+            }
+        }
+
+        return moduleFiles;
+    }
+
+    public static List<PsiFile> findAllFiles(final Module module, final String fileName) {
+        ProjectFileIndex fileIndex =
+                ProjectRootManager.getInstance(module.getProject()).getFileIndex();
+
+        PsiFile[] psiFiles = FilenameIndex.getFilesByName(
+                module.getProject(),
+                fileName,
+                module.getModuleContentScope());
+
+        List<PsiFile> moduleFiles = new ArrayList<>();
+        for (PsiFile psiFile : psiFiles) {
+            try {
+                VirtualFile virtualFile = psiFile.getVirtualFile();
+                Module fileModule = fileIndex.getModuleForFile(virtualFile);
+
+                if (fileModule == module) {
+                    moduleFiles.add(psiFile);
+                }
+            } catch (Exception e) {
+                // Swallow
+            }
+        }
+
+        return moduleFiles;
+    }
+
+    /**
+     * This class should not be present in the final release.
+     * I'm just using it here for my own sanity because digging down the Psi tree inside
+     * the debugger is really unpleasant
+     */
+    public static class Printer {
+        private static PrintStream out = null;
+        private static final String fileName = "/Users/plj/printedElements";
+
+        public static void printElement(final PsiElement element) {
+            try {
+                if (out == null) {
+                    out = new PrintStream(new FileOutputStream(fileName));
+                }
+                out.println(element.getContainingFile().getName());
+                out.println("===============================================================");
+                printElement(out, "", element);
+                out.println("===============================================================\n\n");
+            } catch (Exception e) {
+                Messages.showErrorDialog(e.toString(), "Error in Printer");
+            }
+        }
+
+        private static void printElement(
+                final PrintStream out,
+                final String indent,
+                final PsiElement element)
+                throws Exception {
+            String contents = element.getText();
+            int i = contents.indexOf('\n');
+            if (i >= 0) {
+                contents = contents.substring(0, i) + "\\n...";
+            }
+
+            out.printf(StringUtils.rightPad(indent + element.getClass().getSimpleName(), 40));
+            out.print(StringUtils.rightPad(element.toString(), 40));
+            out.print("| ");
+            out.print(indent.replace("+", " "));
+            out.print(contents);
+            out.println();
+
+            for (PsiElement child : element.getChildren()) {
+                printElement(out, indent + "+ ", child);
+            }
+        }
+    }
+}
diff --git a/samples/HelloFacebookSample/res/drawable-hdpi/icon.png b/samples/HelloFacebookSample/res/drawable-hdpi/icon.png
index 0a0d7cc73..c9d6b7c29 100644
Binary files a/samples/HelloFacebookSample/res/drawable-hdpi/icon.png and b/samples/HelloFacebookSample/res/drawable-hdpi/icon.png differ
diff --git a/samples/HelloFacebookSample/res/drawable-mdpi/icon.png b/samples/HelloFacebookSample/res/drawable-mdpi/icon.png
index b4507c0e7..1b1ebfac0 100644
Binary files a/samples/HelloFacebookSample/res/drawable-mdpi/icon.png and b/samples/HelloFacebookSample/res/drawable-mdpi/icon.png differ
diff --git a/samples/HelloFacebookSample/res/drawable-xhdpi/icon.png b/samples/HelloFacebookSample/res/drawable-xhdpi/icon.png
index 6e8424602..6dfcfd003 100644
Binary files a/samples/HelloFacebookSample/res/drawable-xhdpi/icon.png and b/samples/HelloFacebookSample/res/drawable-xhdpi/icon.png differ
diff --git a/samples/HelloFacebookSample/res/drawable/icon.png b/samples/HelloFacebookSample/res/drawable/icon.png
index b4507c0e7..1b1ebfac0 100644
Binary files a/samples/HelloFacebookSample/res/drawable/icon.png and b/samples/HelloFacebookSample/res/drawable/icon.png differ
diff --git a/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java b/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java
index 1c963e729..ab8001764 100644
--- a/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java
+++ b/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java
@@ -224,6 +224,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
     protected void onDestroy() {
         super.onDestroy();
         profileTracker.stopTracking();
+        LoginManager.getInstance().unregisterCallback(callbackManager);
     }
 
     private void updateUI() {
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitLoginActivity.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitLoginActivity.java
index 2d1cff230..eb2994572 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitLoginActivity.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitLoginActivity.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.loginsample.accountkit;
+ package com.facebook.samples.loginsample.accountkit;
 
 import android.Manifest;
 import android.annotation.TargetApi;
@@ -55,9 +55,9 @@
 import com.facebook.accountkit.AccountKitLoginResult;
 import com.facebook.accountkit.ui.AccountKitActivity;
 import com.facebook.accountkit.ui.AccountKitConfiguration;
+import com.facebook.accountkit.ui.SkinManager;
 import com.facebook.accountkit.ui.ButtonType;
 import com.facebook.accountkit.ui.LoginType;
-import com.facebook.accountkit.ui.SkinManager;
 import com.facebook.accountkit.ui.TextPosition;
 import com.facebook.accountkit.ui.ThemeUIManager;
 import com.facebook.accountkit.ui.UIManager;
@@ -469,10 +469,11 @@ protected void onActivityResult(
                 = new AccountKitConfiguration.AccountKitConfigurationBuilder(
                 loginType,
                 getResponseType());
-        final Switch titleTypeSwitch = (Switch) findViewById(R.id.title_type_switch);
         final Switch stateParamSwitch = (Switch) findViewById(R.id.state_param_switch);
         final Switch facebookNotificationsSwitch =
                 (Switch) findViewById(R.id.facebook_notification_switch);
+        final Switch voiceCallSwitch =
+                (Switch) findViewById(R.id.voice_call_switch);
         final Switch useManualWhiteListBlacklist =
                 (Switch) findViewById(R.id.whitelist_blacklist_switch);
         final Switch readPhoneStateSwitch =
@@ -480,10 +481,6 @@ protected void onActivityResult(
         final Switch receiveSMS =
                 (Switch) findViewById(R.id.receive_sms_switch);
 
-        if (titleTypeSwitch != null && titleTypeSwitch.isChecked()) {
-            configurationBuilder.setTitleType(AccountKitActivity.TitleType.APP_NAME);
-        }
-
         final UIManager uiManager;
         if (advancedUISwitch != null && advancedUISwitch.isChecked()) {
             if (isReverbThemeSelected()) {
@@ -522,17 +519,16 @@ public void onReceive(final Context context, final Intent intent) {
             final @ColorInt int primaryColor = ContextCompat.getColor(this, R.color.default_color);
             if (getBackgroundImage() >= 0) {
                 uiManager = new SkinManager(
-                        loginType,
                         skin,
                         primaryColor,
                         getBackgroundImage(),
                         getSkinTintOption(),
                         getSkinBackgroundTintIntensity());
             } else {
-                uiManager = new SkinManager(loginType, skin, primaryColor);
+                uiManager = new SkinManager(skin, primaryColor);
             }
         } else {
-            uiManager = new ThemeUIManager(loginType, selectedThemeId);
+            uiManager = new ThemeUIManager(selectedThemeId);
         }
 
         configurationBuilder.setUIManager(uiManager);
@@ -545,6 +541,9 @@ public void onReceive(final Context context, final Intent intent) {
         if (facebookNotificationsSwitch != null && !facebookNotificationsSwitch.isChecked()) {
             configurationBuilder.setFacebookNotificationsEnabled(false);
         }
+        if (voiceCallSwitch != null && !voiceCallSwitch.isChecked()) {
+            configurationBuilder.setVoiceCallbackNotificationsEnabled(false);
+        }
 
         if (useManualWhiteListBlacklist != null && useManualWhiteListBlacklist.isChecked()) {
             final String[] blackList
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitSampleAdvancedUIManager.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitSampleAdvancedUIManager.java
index 54b6eba53..13f2a37f4 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitSampleAdvancedUIManager.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitSampleAdvancedUIManager.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -40,6 +40,7 @@
     private final ButtonType confirmButton;
     private final ButtonType entryButton;
     private AccountKitError error;
+    private LoginType loginType;
     private final TextPosition textPosition;
 
     @Deprecated
@@ -48,14 +49,16 @@ public AccountKitSampleAdvancedUIManager(
             final ButtonType entryButton,
             final TextPosition textPosition,
             final LoginType loginType) {
-        super(loginType, -1);
+        super(-1);
         this.confirmButton = confirmButton;
         this.entryButton = entryButton;
         this.textPosition = textPosition;
+        this.loginType = loginType;
     }
 
     private AccountKitSampleAdvancedUIManager(final Parcel source) {
         super(source);
+        this.loginType = LoginType.values()[source.readInt()];
         String s = source.readString();
         final ButtonType confirmButton = s == null ? null : ButtonType.valueOf(s);
         s = source.readString();
@@ -205,6 +208,7 @@ private PlaceholderFragment getPlaceholderFragment(
     @Override
     public void writeToParcel(final Parcel dest, final int flags) {
         super.writeToParcel(dest, flags);
+        dest.writeInt(loginType.ordinal());
         dest.writeString(confirmButton != null ? confirmButton.name() : null);
         dest.writeString(entryButton != null ? entryButton.name() : null);
         dest.writeString(textPosition != null ? textPosition.name() : null);
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbActionBarFragment.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbActionBarFragment.java
deleted file mode 100644
index 7b11d49a9..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbActionBarFragment.java
+++ /dev/null
@@ -1,125 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample.accountkit;
-
-import android.app.Fragment;
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-
-import com.facebook.accountkit.ui.LoginFlowState;
-import com.facebook.samples.loginsample.R;
-
-public class ReverbActionBarFragment extends Fragment {
-    private static final String STATE_KEY = "state";
-
-    private LoginFlowState state = LoginFlowState.NONE;
-
-    public void setState(final LoginFlowState state) {
-        if (state == null) {
-            return;
-        }
-        this.state = state;
-        updateTitleView(getView());
-    }
-
-    @Nullable
-    @Override
-    public View onCreateView(
-            final LayoutInflater inflater,
-            final ViewGroup container,
-            final Bundle savedInstanceState) {
-        if (savedInstanceState != null) {
-            final String stateString = savedInstanceState.getString(STATE_KEY);
-            state = stateString == null ? state : LoginFlowState.valueOf(stateString);
-        }
-
-        View view = super.onCreateView(inflater, container, savedInstanceState);
-        if (view == null) {
-            view = inflater.inflate(R.layout.fragment_reverb_action_bar, container, false);
-        }
-        if (view == null) {
-            return null;
-        }
-        updateTitleView(view);
-        return view;
-    }
-
-    @Override
-    public void onSaveInstanceState(final Bundle outState) {
-        super.onSaveInstanceState(outState);
-
-        outState.putString(STATE_KEY, state.name());
-    }
-
-    private void updateTitleView(@Nullable final View view) {
-        if (view == null || state == null) {
-            return;
-        }
-        final TextView titleView = (TextView) view.findViewById(R.id.title_view);
-        if (titleView != null) {
-            switch (state) {
-                case PHONE_NUMBER_INPUT:
-                    titleView.setText(R.string.reverb_title_phone_number_input);
-                    break;
-                case EMAIL_INPUT:
-                    titleView.setText(R.string.reverb_title_email_input);
-                    break;
-                case SENDING_CODE:
-                    titleView.setText(R.string.reverb_title_sending_code);
-                    break;
-                case SENT_CODE:
-                    titleView.setText(R.string.reverb_title_sent_code);
-                    break;
-                case ACCOUNT_VERIFIED:
-                    titleView.setText(R.string.reverb_title_account_verified);
-                    break;
-                case CODE_INPUT:
-                    titleView.setText(R.string.reverb_title_code_input);
-                    break;
-                case EMAIL_VERIFY:
-                    titleView.setText(R.string.reverb_title_email_verify);
-                    break;
-                case CONFIRM_ACCOUNT_VERIFIED:
-                    titleView.setText(R.string.reverb_title_account_verified);
-                    break;
-                case VERIFYING_CODE:
-                    titleView.setText(R.string.reverb_title_verifying_code);
-                    break;
-                case CONFIRM_INSTANT_VERIFICATION_LOGIN:
-                    titleView.setText(R.string.reverb_title_logging_in);
-                    break;
-                case VERIFIED:
-                    titleView.setText(R.string.reverb_title_verified);
-                    break;
-                case RESEND:
-                    titleView.setText(R.string.reverb_title_resend);
-                    break;
-                case ERROR:
-                    titleView.setText(R.string.reverb_title_error);
-                    break;
-            }
-        }
-    }
-}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbFooterFragment.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbFooterFragment.java
index e85f85f36..e6ea9402b 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbFooterFragment.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbFooterFragment.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -135,10 +135,10 @@ private void updateButtonText(@Nullable final View view) {
         }
         switch (loginType) {
             case EMAIL:
-                switchLoginTypeButton.setText(R.string.reverb_switch_login_type_email);
+                switchLoginTypeButton.setText(R.string.reverb_switch_login_type_phone);
                 break;
             case PHONE:
-                switchLoginTypeButton.setText(R.string.reverb_switch_login_type_phone);
+                switchLoginTypeButton.setText(R.string.reverb_switch_login_type_email);
                 break;
         }
         switchLoginTypeButton.setVisibility(View.VISIBLE);
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java
index 2b0500d79..6c16f42e0 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -41,6 +41,7 @@
 
     private final ButtonType confirmButton;
     private final ButtonType entryButton;
+    private final LoginType loginType;
     private final TextPosition textPosition;
 
     public ReverbUIManager(
@@ -49,14 +50,16 @@ public ReverbUIManager(
             final LoginType loginType,
             final TextPosition textPosition,
             final int themeResourceId) {
-        super(loginType, themeResourceId);
+        super(themeResourceId);
         this.confirmButton = confirmButton;
         this.entryButton = entryButton;
+        this.loginType = loginType;
         this.textPosition = textPosition;
     }
 
     private ReverbUIManager(final Parcel source) {
         super(source);
+        this.loginType = LoginType.values()[source.readInt()];
         String s = source.readString();
         final ButtonType confirmButton = s == null ? null : ButtonType.valueOf(s);
         s = source.readString();
@@ -227,6 +230,7 @@ public TextPosition getTextPosition(final LoginFlowState state) {
     @Override
     public void writeToParcel(final Parcel dest, final int flags) {
         super.writeToParcel(dest, flags);
+        dest.writeInt(loginType.ordinal());
         dest.writeString(confirmButton != null ? confirmButton.name() : null);
         dest.writeString(entryButton != null ? entryButton.name() : null);
         dest.writeString(textPosition != null ? textPosition.name() : null);
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/TokenActivity.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/TokenActivity.java
index 5b89baad1..908b8a457 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/TokenActivity.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/TokenActivity.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
diff --git a/samples/LoginSample/src/main/res/layout/accountkit_activity_main.xml b/samples/LoginSample/src/main/res/layout/accountkit_activity_main.xml
index 4c73ff90d..85d90e742 100644
--- a/samples/LoginSample/src/main/res/layout/accountkit_activity_main.xml
+++ b/samples/LoginSample/src/main/res/layout/accountkit_activity_main.xml
@@ -33,14 +33,6 @@
             android:minWidth="300dp"
             tools:ignore="UselessParent"
             >
-            <Switch
-                android:id="@+id/title_type_switch"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:lines="1"
-                android:text="@string/config_title_type_label"
-                android:textColor="@android:color/black"
-                />
             <Switch
                 android:id="@+id/advanced_ui_switch"
                 android:layout_width="match_parent"
@@ -75,6 +67,15 @@
                 android:text="@string/confirm_facebook_notification_label"
                 android:textColor="@android:color/black"
                 />
+            <Switch
+                android:id="@+id/voice_call_switch"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:lines="1"
+                android:checked="true"
+                android:text="@string/confirm_voice_call_label"
+                android:textColor="@android:color/black"
+                />
             <Switch
                 android:id="@+id/whitelist_blacklist_switch"
                 android:layout_width="match_parent"
diff --git a/samples/LoginSample/src/main/res/values/accountkit_strings.xml b/samples/LoginSample/src/main/res/values/accountkit_strings.xml
index 618c99bfb..26be9b020 100644
--- a/samples/LoginSample/src/main/res/values/accountkit_strings.xml
+++ b/samples/LoginSample/src/main/res/values/accountkit_strings.xml
@@ -28,11 +28,11 @@
     <string name="config_response_type_label">Enable Client Access Token Flow</string>
     <string name="config_text_position_label">Text Position</string>
     <string name="config_theme_label">Theme</string>
-    <string name="config_title_type_label">App Name only for title</string>
     <string name="config_background_image_label">Background image</string>
     <string name="config_tint_label">Background Image Tint</string>
     <string name="config_tint_intensity_label">Tint Intensity (%1$d%%)</string>
     <string name="confirm_facebook_notification_label">Facebook Notifications Fallback</string>
+    <string name="confirm_voice_call_label">Allow Voice Call Fallback</string>
     <string name="confirm_state_param_label">Is State Param passed?</string>
     <string name="email_label">Email</string>
     <string name="error_label">Error</string>
diff --git a/samples/PlacesGraphSample/AndroidManifest.xml b/samples/PlacesGraphSample/AndroidManifest.xml
new file mode 100644
index 000000000..2f75e5a63
--- /dev/null
+++ b/samples/PlacesGraphSample/AndroidManifest.xml
@@ -0,0 +1,92 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.example.places"
+    android:versionCode="1"
+    android:versionName="1.0">
+
+    <!-- The SDK uses the location permissions to retrieve the current device location
+     from the platform. The locations permissions are also used to scan for nearby wifi access
+     points and bluetooth beacons if the corresponding wifi and bluetooth permissions are
+      available -->
+    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
+
+    <!-- This permission is optional. If present, the SDK will get the currently connected
+     wifi access point to improve the accuracy of the current place request. -->
+    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
+    <!-- This permission is optional. If present, the SDK will scan for nearby wifi access points
+     in order to improve the accuracy of the current place request. -->
+    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
+
+    <!-- These two bluetooth permissions are optional. If present, the SDK will scan nearby
+    Bluetooth Low Energy beacons in order to improve the accuracy of the current place request. -->
+    <uses-permission android:name="android.permission.BLUETOOTH" />
+    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
+
+
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.CALL_PHONE" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+
+    <application
+        android:icon="@drawable/icon"
+        android:label="@string/app_name"
+        android:theme="@style/AppTheme">
+
+        <!-- This sample app illustrates how to display places on map. Enter your Google Maps Api
+        key below in order to enable the map. -->
+        <meta-data
+            android:name="com.google.android.geo.API_KEY"
+            android:value="@string/google_maps_key" />
+
+        <activity
+            android:name=".MainActivity"
+            android:label="@string/app_name"
+            android:screenOrientation="portrait"
+            android:windowSoftInputMode="stateHidden">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.facebook.CustomTabActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.VIEW" />
+
+                <category android:name="android.intent.category.DEFAULT" />
+                <category android:name="android.intent.category.BROWSABLE" />
+
+                <data android:scheme="@string/fb_login_protocol_scheme" />
+            </intent-filter>
+        </activity>
+
+        <meta-data
+            android:name="com.facebook.sdk.ApplicationId"
+            android:value="@string/app_id" />
+        <meta-data
+            android:name="com.facebook.sdk.ApplicationName"
+            android:value="@string/facebook_app_name" />
+
+    </application>
+</manifest>
diff --git a/samples/PlacesGraphSample/build.gradle b/samples/PlacesGraphSample/build.gradle
new file mode 100644
index 000000000..9aa9b166d
--- /dev/null
+++ b/samples/PlacesGraphSample/build.gradle
@@ -0,0 +1,42 @@
+apply plugin: 'com.android.application'
+
+dependencies {
+    compile project(':facebook')
+    compile 'com.android.support:appcompat-v7:24.2.1'
+    compile 'com.android.support:cardview-v7:24.2.1'
+    compile 'com.android.support:design:24.2.1'
+    compile 'com.android.support:recyclerview-v7:24.2.1'
+    compile 'com.google.android.gms:play-services-maps:10.2.0'
+}
+
+android {
+    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
+    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
+
+    defaultConfig {
+        applicationId 'com.example.places'
+        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
+        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
+    }
+
+    lintOptions {
+        abortOnError false
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+    }
+
+    splits {
+        abi {
+            enable true
+            reset()
+            include 'armeabi', 'armeabi-v7a', 'x86'
+            universalApk true
+        }
+    }
+}
diff --git a/samples/PlacesGraphSample/proguard-project.txt b/samples/PlacesGraphSample/proguard-project.txt
new file mode 100644
index 000000000..f2fe1559a
--- /dev/null
+++ b/samples/PlacesGraphSample/proguard-project.txt
@@ -0,0 +1,20 @@
+# To enable ProGuard in your project, edit project.properties
+# to define the proguard.config property as described in that file.
+#
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in ${sdk.dir}/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the ProGuard
+# include property in project.properties.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/samples/PlacesGraphSample/res/drawable-hdpi/icon.png b/samples/PlacesGraphSample/res/drawable-hdpi/icon.png
new file mode 100644
index 000000000..0a0d7cc73
Binary files /dev/null and b/samples/PlacesGraphSample/res/drawable-hdpi/icon.png differ
diff --git a/samples/PlacesGraphSample/res/drawable-mdpi/icon.png b/samples/PlacesGraphSample/res/drawable-mdpi/icon.png
new file mode 100644
index 000000000..b4507c0e7
Binary files /dev/null and b/samples/PlacesGraphSample/res/drawable-mdpi/icon.png differ
diff --git a/samples/PlacesGraphSample/res/drawable-xhdpi/icon.png b/samples/PlacesGraphSample/res/drawable-xhdpi/icon.png
new file mode 100644
index 000000000..6e8424602
Binary files /dev/null and b/samples/PlacesGraphSample/res/drawable-xhdpi/icon.png differ
diff --git a/samples/PlacesGraphSample/res/drawable/icon.png b/samples/PlacesGraphSample/res/drawable/icon.png
new file mode 100644
index 000000000..b4507c0e7
Binary files /dev/null and b/samples/PlacesGraphSample/res/drawable/icon.png differ
diff --git a/samples/PlacesGraphSample/res/layout/current_place_fragment.xml b/samples/PlacesGraphSample/res/layout/current_place_fragment.xml
new file mode 100644
index 000000000..70a316784
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/current_place_fragment.xml
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <LinearLayout
+        android:id="@+id/current_place_loading_container"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:padding="@dimen/cards_margin"
+        android:orientation="horizontal"
+        android:background="@color/white">
+        <ProgressBar
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content" />
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_vertical|left"
+            android:layout_margin="@dimen/cardview_padding"
+            android:text="@string/loading"
+            android:textSize="@dimen/body_text_size"/>
+    </LinearLayout>
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/current_place_recyclerview"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:background="@color/white"
+        android:visibility="invisible"/>
+
+</FrameLayout>
diff --git a/samples/PlacesGraphSample/res/layout/current_place_list_item.xml b/samples/PlacesGraphSample/res/layout/current_place_list_item.xml
new file mode 100644
index 000000000..d2c6a2861
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/current_place_list_item.xml
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/place_container"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_gravity="center"
+    android:orientation="vertical"
+    android:clickable="true"
+    android:padding="@dimen/cardview_padding"
+    android:foreground="?attr/selectableItemBackground">
+
+    <TextView
+        android:id="@+id/place_name"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:ellipsize="end"
+        android:maxLines="1"
+        android:textAppearance="@style/TextAppearance.AppCompat.Title"
+        android:textColor="@color/dark_text_color"/>
+
+    <TextView
+        android:id="@+id/place_address"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/place_name"
+        android:ellipsize="end"
+        android:maxLines="1"
+        android:textSize="@dimen/body_text_size" />
+
+</LinearLayout>
diff --git a/samples/PlacesGraphSample/res/layout/login_fragment.xml b/samples/PlacesGraphSample/res/layout/login_fragment.xml
new file mode 100644
index 000000000..0f01f8760
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/login_fragment.xml
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:facebook="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <com.facebook.login.widget.LoginButton
+        android:id="@+id/login_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        facebook:com_facebook_confirm_logout="false"
+        facebook:com_facebook_tooltip_mode="never_display"
+        />
+
+</FrameLayout>
diff --git a/samples/PlacesGraphSample/res/layout/main_activity.xml b/samples/PlacesGraphSample/res/layout/main_activity.xml
new file mode 100644
index 000000000..115c2d605
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/main_activity.xml
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <FrameLayout
+        android:id="@+id/fragment_placeholder"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"/>
+
+</RelativeLayout>
diff --git a/samples/PlacesGraphSample/res/layout/place_info_fragment.xml b/samples/PlacesGraphSample/res/layout/place_info_fragment.xml
new file mode 100644
index 000000000..fdfc5fdb1
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/place_info_fragment.xml
@@ -0,0 +1,88 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<android.support.design.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <android.support.design.widget.AppBarLayout
+        android:id="@+id/place_details_appbarlayout"
+        android:layout_width="match_parent"
+        android:layout_height="@dimen/toolbar_height"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+        android:background="@color/primary">
+
+        <android.support.design.widget.CollapsingToolbarLayout
+            android:id="@+id/place_details_toolbarlayout"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            app:layout_scrollFlags="scroll|exitUntilCollapsed"
+            app:contentScrim="@color/primary"
+            app:expandedTitleMarginStart="@dimen/toolbar_margin_start"
+            app:expandedTitleMarginEnd="@dimen/toolbar_margin_end">
+
+            <ImageView
+                android:id="@+id/place_details_cover"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:scaleType="centerCrop"
+                app:layout_collapseMode="parallax" />
+
+            <android.support.v7.widget.Toolbar
+                android:id="@+id/place_details_toolbar"
+                android:layout_height="?attr/actionBarSize"
+                android:layout_width="match_parent"
+                android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+                app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
+                app:layout_collapseMode="pin"/>
+
+        </android.support.design.widget.CollapsingToolbarLayout>
+
+    </android.support.design.widget.AppBarLayout>
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/place_details_recyclerview"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior"
+        android:background="@color/white"/>
+
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/place_details_actionbutton"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_margin="@dimen/action_button_margin"
+        android:src="@android:drawable/ic_menu_call"
+        app:borderWidth="0dp"
+        app:layout_anchor="@id/place_details_appbarlayout"
+        app:layout_anchorGravity="bottom|right|end" />
+
+    <ProgressBar
+        android:id="@+id/place_details_progress"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:indeterminate="true"
+        android:visibility="invisible"
+        />
+
+</android.support.design.widget.CoordinatorLayout>
diff --git a/samples/PlacesGraphSample/res/layout/place_info_item.xml b/samples/PlacesGraphSample/res/layout/place_info_item.xml
new file mode 100644
index 000000000..65f66058a
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/place_info_item.xml
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/place_detail_container"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:paddingLeft="@dimen/cards_margin"
+    android:paddingRight="@dimen/cards_margin"
+    android:paddingTop="@dimen/place_detail_item_margin_vertical"
+    android:paddingBottom="@dimen/place_detail_item_margin_vertical"
+    android:background="?attr/selectableItemBackground" >
+
+    <TextView
+        android:id="@+id/place_detail_title"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="left|top"
+        android:ellipsize="end"
+        android:maxLines="1"
+        android:textColor="@color/primary"/>
+
+    <TextView
+        android:id="@+id/place_detail_text"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="left|top"
+        android:textSize="@dimen/place_detail_text_size"
+        android:textColor="@color/dark_text_color"/>
+
+</LinearLayout>
diff --git a/samples/PlacesGraphSample/res/layout/place_list_item.xml b/samples/PlacesGraphSample/res/layout/place_list_item.xml
new file mode 100644
index 000000000..e8772a01c
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/place_list_item.xml
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<android.support.v7.widget.CardView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/place_container"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_gravity="center"
+    android:layout_marginBottom="@dimen/cards_margin"
+    android:layout_marginLeft="@dimen/cards_margin"
+    android:layout_marginRight="@dimen/cards_margin"
+    android:foreground="?attr/selectableItemBackground">
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="@dimen/cardview_padding">
+
+        <TextView
+            android:id="@+id/place_name"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:ellipsize="end"
+            android:maxLines="1"
+            android:textAppearance="@style/TextAppearance.AppCompat.Title"
+            android:textColor="@color/dark_text_color" />
+
+        <TextView
+            android:id="@+id/place_address"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/place_name"
+            android:ellipsize="end"
+            android:maxLines="1"
+            android:textColor="@color/dark_text_color"
+            android:textSize="@dimen/body_text_size" />
+
+    </RelativeLayout>
+</android.support.v7.widget.CardView>
diff --git a/samples/PlacesGraphSample/res/layout/place_search_fragment.xml b/samples/PlacesGraphSample/res/layout/place_search_fragment.xml
new file mode 100644
index 000000000..41c6a7908
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/place_search_fragment.xml
@@ -0,0 +1,119 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <FrameLayout
+        android:id="@+id/place_search_map_placeholder"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"/>
+
+    <android.support.v7.widget.CardView
+        android:id="@+id/place_search_cardview"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="@dimen/cards_margin">
+        <EditText
+            android:id="@+id/place_search_edittext"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:hint="@string/place_search_hint"
+            android:maxLines="1"
+            android:background="@android:color/transparent"
+            android:inputType="text"
+            android:imeOptions="actionSearch"
+            android:padding="@dimen/cardview_padding"/>
+    </android.support.v7.widget.CardView>
+
+    <android.support.v7.widget.CardView
+        android:id="@+id/current_place_cardview"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/place_search_cardview"
+        android:layout_marginLeft="@dimen/cards_margin"
+        android:layout_marginRight="@dimen/cards_margin"
+        android:clickable="true"
+        android:foreground="?attr/selectableItemBackground">
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:padding="@dimen/cardview_padding"
+            android:orientation="vertical">
+            <TextView
+                android:id="@+id/current_place_title"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/add_my_location"
+                android:textAppearance="@style/TextAppearance.AppCompat.Title"
+                android:textColor="@color/dark_text_color"/>
+            <TextView
+                android:id="@+id/current_place_name"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="@dimen/cardview_padding"
+                android:maxLines="1"
+                android:textAppearance="@style/TextAppearance.AppCompat.Title"
+                android:textColor="@color/dark_text_color"
+                android:visibility="gone"/>
+            <TextView
+                android:id="@+id/current_place_address"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:maxLines="1"
+                android:textSize="@dimen/body_text_size"
+                android:visibility="gone"/>
+        </LinearLayout>
+
+    </android.support.v7.widget.CardView>
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/place_search_recyclerview"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@id/current_place_cardview"
+        android:layout_marginTop="@dimen/place_list_margin_top"
+        android:overScrollMode="never"/>
+
+    <android.support.design.widget.FloatingActionButton
+        xmlns:app="http://schemas.android.com/apk/res-auto"
+        android:id="@+id/place_search_toggle_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_alignParentRight="true"
+        android:layout_margin="@dimen/action_button_margin"
+        android:src="@android:drawable/ic_dialog_map"
+        app:backgroundTint="@color/primary"
+        app:borderWidth="0dp"
+        app:elevation="@dimen/action_button_elevation"
+        app:fabSize="normal"/>
+
+    <ProgressBar
+        android:id="@+id/place_search_progressbar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerInParent="true"
+        android:indeterminate="true"
+        android:visibility="invisible" />
+
+</RelativeLayout>
diff --git a/samples/PlacesGraphSample/res/values/arrays.xml b/samples/PlacesGraphSample/res/values/arrays.xml
new file mode 100644
index 000000000..677a3f609
--- /dev/null
+++ b/samples/PlacesGraphSample/res/values/arrays.xml
@@ -0,0 +1,91 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<resources>
+
+    <string-array name="parking_keys">
+        <item>lot</item>
+        <item>street</item>
+        <item>valet</item>
+    </string-array>
+
+    <string-array name="parking_labels">
+        <item>Lot</item>
+        <item>Street</item>
+        <item>Valet</item>
+    </string-array>
+
+    <string-array name="restaurant_specialties_keys">
+        <item>breakfast</item>
+        <item>coffee</item>
+        <item>dinner</item>
+        <item>drinks</item>
+        <item>lunch</item>
+    </string-array>
+
+    <string-array name="restaurant_specialties_labels">
+        <item>Breakfast</item>
+        <item>Coffee</item>
+        <item>Dinner</item>
+        <item>Drinks</item>
+        <item>Lunch</item>
+    </string-array>
+
+    <string-array name="payment_options_keys">
+        <item>mastercard</item>
+        <item>visa</item>
+        <item>discover</item>
+        <item>amex</item>
+        <item>cash_only</item>
+    </string-array>
+
+    <string-array name="payment_options_labels">
+        <item>Mastercard</item>
+        <item>Visa</item>
+        <item>Discover</item>
+        <item>Amex</item>
+        <item>Cash only</item>
+    </string-array>
+
+    <string-array name="restaurant_services_keys">
+        <item>delivery</item>
+        <item>takeout</item>
+        <item>catering</item>
+        <item>reserve</item>
+        <item>groups</item>
+        <item>kids</item>
+        <item>outdoor</item>
+        <item>waiter</item>
+        <item>walkins</item>
+    </string-array>
+
+    <string-array name="restaurant_services_labels">
+        <item>Delivery</item>
+        <item>Takeout</item>
+        <item>Catering</item>
+        <item>Reservations</item>
+        <item>Groups</item>
+        <item>Kid friendly</item>
+        <item>Outdoor seating</item>
+        <item>Waiter</item>
+        <item>Walkins</item>
+    </string-array>
+
+</resources>
diff --git a/samples/PlacesGraphSample/res/values/colors.xml b/samples/PlacesGraphSample/res/values/colors.xml
new file mode 100644
index 000000000..05c4dd159
--- /dev/null
+++ b/samples/PlacesGraphSample/res/values/colors.xml
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<resources>
+    <color name="primary">#3F51B5</color>
+    <color name="primary_dark">#303F9F</color>
+    <color name="accent">#FF4081</color>
+    <color name="white">#FFFFFF</color>
+    <color name="dark_text_color">#515151</color>
+</resources>
diff --git a/samples/PlacesGraphSample/res/values/dimens.xml b/samples/PlacesGraphSample/res/values/dimens.xml
new file mode 100644
index 000000000..3b0acbaf2
--- /dev/null
+++ b/samples/PlacesGraphSample/res/values/dimens.xml
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<resources>
+    <dimen name="cards_margin">16dp</dimen>
+    <dimen name="search_resting_elevation">2dp</dimen>
+    <dimen name="search_scrolling_elevation">16dp</dimen>
+    <dimen name="cardview_padding">10dp</dimen>
+    <dimen name="action_button_margin">24dp</dimen>
+    <dimen name="toolbar_margin_start">16dp</dimen>
+    <dimen name="toolbar_margin_end">64dp</dimen>
+    <dimen name="toolbar_height">192dp</dimen>
+    <dimen name="place_list_margin_top">-16dp</dimen>
+    <dimen name="body_text_size">16sp</dimen>
+    <dimen name="current_place_confidence_text_size">12sp</dimen>
+    <dimen name="place_search_list_header_height">32dp</dimen>
+    <dimen name="place_detail_text_size">18sp</dimen>
+    <dimen name="place_detail_item_margin_vertical">5dp</dimen>
+    <dimen name="action_button_elevation">6dp</dimen>
+</resources>
diff --git a/samples/PlacesGraphSample/res/values/strings.xml b/samples/PlacesGraphSample/res/values/strings.xml
new file mode 100644
index 000000000..73deb10b3
--- /dev/null
+++ b/samples/PlacesGraphSample/res/values/strings.xml
@@ -0,0 +1,94 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+
+    <!-- Enter your Google Map Api Key here -->
+    <string name="google_maps_key"></string>
+
+    <!-- When using a client token to authenticate, also changes the app_id to your own -->
+    <string name="app_id">1839650616300326</string>
+    <string name="fb_login_protocol_scheme">fb1839650616300326</string>
+
+    <string name="app_name">PlacesGraphSample</string>
+    <string name="facebook_app_name">PlacesGraphAndroidSample</string>
+    <string name="cancelled">Cancelled</string>
+    <string name="permission_not_granted">Unable to perform selected action because permissions were not granted.</string>
+    <string name="ok">OK</string>
+    <string name="yes">Yes</string>
+    <string name="no">No</string>
+    <string name="error">Error</string>
+    <string name="exception">Exception: %1$s</string>
+    <string name="loading">Loading</string>
+    <string name="permission_prompt_location">This sample app requires location access to search for nearby places.</string>
+    <string name="permission_prompt_call_phone">This sample app requires permission to place a phone call.</string>
+    <string name="current_place">Current place</string>
+    <string name="add_my_location">Add my location</string>
+    <string name="place_search_hint">Search for nearby places…</string>
+
+    <string name="location_error_disabled">Location services are disabled. Enable location services to use this application.</string>
+    <string name="location_error_unknown">An error has occurred retrieving the current location.</string>
+
+    <string name="place_info_checkins">%1$d checkins</string>
+    <string name="place_info_is_permanently_closed">Permanently closed</string>
+    <string name="place_info_parking_lot">Parking lot</string>
+    <string name="place_info_parking_street">Street</string>
+    <string name="place_info_parking_valet">Valet</string>
+    <string name="place_info_rating">%1$s stars (%2$d ratings)</string>
+    <string name="place_info_fan_count">%1$d fans</string>
+
+    <string name="place_field_about">About</string>
+    <string name="place_field_address">Address</string>
+    <string name="place_field_app_link">App Link</string>
+    <string name="place_field_categories">Categories</string>
+    <string name="place_field_checkins">Checkins</string>
+    <string name="place_field_description">Description</string>
+    <string name="place_field_engagement">Engagement</string>
+    <string name="place_field_hours">Business hours</string>
+    <string name="place_field_link">Link</string>
+    <string name="place_field_parking">Parking</string>
+    <string name="place_field_payment_options">Payment options</string>
+    <string name="place_field_phone">Phone</string>
+    <string name="place_field_price_range">Price range</string>
+    <string name="place_field_rating">Rating</string>
+    <string name="place_field_rating_count">Rating count</string>
+    <string name="place_field_specialties">Specialties</string>
+    <string name="place_field_services">Services</string>
+    <string name="place_field_website">Website</string>
+
+    <string name="parking_lot">Lot</string>
+    <string name="parking_street">Street</string>
+    <string name="parking_valet">Valet</string>
+
+    <string name="monday">Monday</string>
+    <string name="tuesday">Tuesday</string>
+    <string name="wednesday">Wednesday</string>
+    <string name="thursday">Thursday</string>
+    <string name="friday">Friday</string>
+    <string name="saturday">Saturday</string>
+    <string name="sunday">Sunday</string>
+
+    <string name="place_always_open">This place is open 24H</string>
+    <string name="place_permanently_closed">This place is permanently closed</string>
+
+    <string name="place_app_link">Open this place in Facebook</string>
+
+</resources>
diff --git a/samples/PlacesGraphSample/res/values/styles.xml b/samples/PlacesGraphSample/res/values/styles.xml
new file mode 100644
index 000000000..5b85747b9
--- /dev/null
+++ b/samples/PlacesGraphSample/res/values/styles.xml
@@ -0,0 +1,26 @@
+<resources>
+    <!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
+        <item name="colorPrimary">@color/primary</item>
+        <item name="colorPrimaryDark">@color/primary_dark</item>
+        <item name="colorAccent">@color/accent</item>
+    </style>
+</resources>
diff --git a/samples/PlacesGraphSample/src/com/example/places/MainActivity.java b/samples/PlacesGraphSample/src/com/example/places/MainActivity.java
new file mode 100644
index 000000000..983c31d3b
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/MainActivity.java
@@ -0,0 +1,282 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places;
+
+import android.Manifest;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.os.Bundle;
+import android.support.v4.app.ActivityCompat;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v7.app.AlertDialog;
+import android.support.v7.app.AppCompatActivity;
+
+import com.example.places.fragments.PlaceInfoFragment;
+import com.example.places.fragments.PlaceSearchFragment;
+import com.example.places.fragments.LoginFragment;
+import com.example.places.model.Place;
+import com.facebook.AccessToken;
+import com.facebook.FacebookSdk;
+
+/**
+ * This sample application illustrates how to use the Places Graph SDK to:
+ * <ul>
+ *   <li>Retrieve a collection of place candidates along with confidence level estimates, that the
+ * user is at those places.</li>
+ *   <li>Allow the user to provide feedback on the accuracy of the current place estimate.</li>
+ *   <li>Search for nearby places.</li>
+ *   <li>Retrieve detailed place information.</li>
+ *   <li>Retrieve a cover photo associated with a particular place.</li>
+ *   <li>Display places on a map.</li>
+ *</ul>
+ * <p>
+ * {@link PlacesGraphSDKHelper} demonstrates how to create requests with the Places Graph SDK.
+ *
+ * {@link com.example.places.model.Place} and {@link com.example.places.model.PlaceTextUtils}
+ * demonstrates how to parse place information.
+ */
+public class MainActivity extends AppCompatActivity implements LoginFragment.Listener,
+        PlaceSearchFragment.Listener, PlaceInfoFragment.Listener {
+
+    private static final int REQUEST_LOCATION = 0;
+    private static final int REQUEST_CALL_PHONE = 1;
+
+    /**
+     * The Places Graph SDK can be accessed using either a User Access Token or a Client Token.
+     * A User Access Token will require users to login to Facebook, but a Client Token won't.
+     *
+     * This sample app demonstrates how to use both User Access Tokens and Client Tokens.
+     * To use either one, just change the value of {@code authenticationType}
+     * to USER_TOKEN or CLIENT_TOKEN.
+     */
+    private enum AuthenticationType {
+        USER_TOKEN,
+        CLIENT_TOKEN,
+    };
+
+    /**
+     * This variable specifies whether the sample app uses a User Access Token or a Client Token.
+     *
+     * Change it to AuthenticationType.CLIENT_TOKEN to use a Client Token.
+     *
+     * To use a client token, you will also need to: update "app_id" in strings.xml to
+     * the application ID of your app, and then update the CLIENT_TOKEN constant in this class to
+     * the value of your app client token. You can find the client token value on the Developer
+     * Portal page of your app, under the Advanced Settings section.
+     */
+    private final AuthenticationType authenticationType = AuthenticationType.USER_TOKEN;
+
+    /**
+     * To use client token authentication, get your app client token from the developer
+     * portal, and enter it below. The client token is available under your application page in the
+     * Developer Portal, under the Advanced Settings section. Note that you must also change
+     * the app_id to your own Application ID in the file "strings.xml".
+     */
+    private static final String CLIENT_TOKEN = "";
+
+    private Intent callPhoneIntent;
+
+    public void onCreate(Bundle bundle) {
+        super.onCreate(bundle);
+
+        setContentView(R.layout.main_activity);
+
+        /**
+         * You can use the Places Graph SDK with either a User Access Token, or a Client Token.
+         * By default, this code sample is configured to use a User Access Token.
+         */
+        if (authenticationType == AuthenticationType.USER_TOKEN) {
+            AccessToken accessToken = AccessToken.getCurrentAccessToken();
+            if (accessToken == null) {
+                /**
+                 * When a User Access Token is used, and if the token is not present,
+                 * then prompt the user to log into Facebook.
+                 */
+                displayLoginFragment();
+            } else {
+                displayPlaceListFragment();
+            }
+        } else {
+            /**
+             * When a Client Token is used, set the client token to the Facebook SDK class
+             * as illustrated below. Users do not need to log into Facebook. PlaceManager requests
+             * can be placed once the client token has been set.
+             */
+            FacebookSdk.setClientToken(CLIENT_TOKEN);
+            displayPlaceListFragment();
+        }
+    }
+
+    public void onStart() {
+        super.onStart();
+        if (!hasLocationPermission()) {
+            requestLocationPermission();
+        }
+    }
+
+    private void requestLocationPermission() {
+        /*
+         * Prompts the user to grant location permissions. This sample app uses the
+         * device's' location to get the current place from the Place Graph SDK,
+         * and to perform local place searches.
+         */
+        if (ActivityCompat.shouldShowRequestPermissionRationale(
+            this,
+            Manifest.permission.ACCESS_FINE_LOCATION)) {
+
+            AlertDialog.Builder builder = new AlertDialog.Builder(this);
+            builder.setMessage(R.string.permission_prompt_location);
+            builder.setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    ActivityCompat.requestPermissions(
+                            MainActivity.this,
+                            new String[]{Manifest.permission.ACCESS_FINE_LOCATION,
+                                    Manifest.permission.ACCESS_COARSE_LOCATION},
+                            REQUEST_LOCATION);
+                }
+            });
+            builder.create().show();
+        } else {
+            ActivityCompat.requestPermissions(
+                    this,
+                    new String[]{Manifest.permission.ACCESS_FINE_LOCATION,
+                            Manifest.permission.ACCESS_COARSE_LOCATION},
+                    REQUEST_LOCATION);
+        }
+    }
+
+    @Override
+    public void onRequestPermissionsResult(
+            int requestCode,
+            String[] permissions,
+            int[] grantResults) {
+        if (requestCode == REQUEST_CALL_PHONE) {
+            try {
+                if (callPhoneIntent != null) {
+                    startActivity(callPhoneIntent);
+                    callPhoneIntent = null;
+                }
+            } catch (SecurityException e) {
+                callPhoneIntent = null;
+                // ignore
+            }
+        } else {
+            super.onRequestPermissionsResult(requestCode, permissions, grantResults);
+        }
+    }
+
+    @Override
+    public void onLoginComplete() {
+        // Event invoked by the LoginFragment when login completes.
+        displayPlaceListFragment();
+    }
+
+    @Override
+    public void onPlaceSelected(Place place) {
+        // Event invoked by the PlaceSearchFragment when a place is selected.
+        displayPlaceInfoFragment(place);
+    }
+
+    @Override
+    public void onLocationPermissionsError() {
+        // Event invoked by the PlaceSearchFragment when the Places Graph SDK fails to retrieve
+        // the current device location due to missing location permissions.
+        requestLocationPermission();
+    }
+
+    private void displayPlaceListFragment() {
+        PlaceSearchFragment placeListFragment = PlaceSearchFragment.newInstance();
+        FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
+        transaction.replace(R.id.fragment_placeholder, placeListFragment);
+        transaction.commit();
+    }
+
+    private void displayLoginFragment() {
+        LoginFragment loginFragment = LoginFragment.newInstance();
+        FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
+        transaction.replace(R.id.fragment_placeholder, loginFragment);
+        transaction.commit();
+    }
+
+    private void displayPlaceInfoFragment(Place place) {
+        PlaceInfoFragment placeInfoFragment = PlaceInfoFragment.newInstance();
+        Bundle bundle = new Bundle();
+        bundle.putParcelable(PlaceInfoFragment.EXTRA_PLACE, place);
+        placeInfoFragment.setArguments(bundle);
+        getSupportFragmentManager()
+                .beginTransaction()
+                .add(R.id.fragment_placeholder, placeInfoFragment, "details")
+                .addToBackStack(place.get(Place.NAME))
+                .commit();
+    }
+
+    @Override
+    public void onCallPhone(final Intent intent) {
+        /*
+         * Prompts the user for permission to place a phone call, and then places the call.
+         */
+        if (hasPermission(Manifest.permission.CALL_PHONE)) {
+            startActivity(intent);
+        } else if (ActivityCompat.shouldShowRequestPermissionRationale(
+            this,
+            Manifest.permission.CALL_PHONE)) {
+
+            AlertDialog.Builder builder = new AlertDialog.Builder(this);
+            builder.setMessage(R.string.permission_prompt_call_phone);
+            builder.setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    callPhoneIntent = intent;
+                    ActivityCompat.requestPermissions(
+                            MainActivity.this,
+                            new String[]{Manifest.permission.CALL_PHONE},
+                            REQUEST_CALL_PHONE);
+                }
+            });
+            builder.create().show();
+        } else {
+            callPhoneIntent = intent;
+            ActivityCompat.requestPermissions(
+                    this,
+                    new String[]{Manifest.permission.CALL_PHONE},
+                    REQUEST_CALL_PHONE);
+        }
+    }
+
+    private boolean hasPermission(String permission) {
+        return ActivityCompat.checkSelfPermission(this, permission)
+                == PackageManager.PERMISSION_GRANTED;
+    }
+
+    @Override
+    public boolean hasLocationPermission() {
+        return hasPermission(Manifest.permission.ACCESS_FINE_LOCATION)
+                || hasPermission(Manifest.permission.ACCESS_COARSE_LOCATION);
+    }
+
+    @Override
+    public boolean onSupportNavigateUp() {
+        onBackPressed();
+        return true;
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/PlacesGraphSDKHelper.java b/samples/PlacesGraphSample/src/com/example/places/PlacesGraphSDKHelper.java
new file mode 100644
index 000000000..8c2e7bbe4
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/PlacesGraphSDKHelper.java
@@ -0,0 +1,492 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places;
+
+import android.support.annotation.Nullable;
+import android.util.Log;
+
+import com.example.places.model.CurrentPlaceResult;
+import com.example.places.model.Place;
+import com.example.places.utils.BitmapDownloadTask;
+import com.facebook.AccessToken;
+import com.facebook.FacebookRequestError;
+import com.facebook.FacebookSdk;
+import com.facebook.GraphRequest;
+import com.facebook.GraphResponse;
+import com.facebook.places.PlaceManager;
+import com.facebook.places.model.CurrentPlaceFeedbackRequestParams;
+import com.facebook.places.model.CurrentPlaceRequestParams;
+import com.facebook.places.model.PlaceFields;
+import com.facebook.places.model.PlaceInfoRequestParams;
+import com.facebook.places.model.PlaceSearchRequestParams;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.lang.ref.WeakReference;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * This class illustrates how to use the Places Graph SDK to:
+ * <ul>
+ *   <li>Get the current place.</li>
+ *   <li>Provide feedback on the current place response.</li>
+ *   <li>Search places.</li>
+ *   <li>Fetch detailed place info.</li>
+ *</ul>
+ * This class also illustrates how to parse the responses of the Places Graph SDK.
+ */
+public class PlacesGraphSDKHelper {
+
+    private static final String TAG = "PlacesGraphSDKHelper";
+    private static final String PARAM_DATA = "data";
+
+    /**
+     * These are the place fields that are fetched in the place info request.
+     */
+    private static final String[] PLACE_INFO_REQUEST_FIELDS = new String[]{
+            Place.ID,
+            Place.NAME,
+            Place.DESCRIPTION,
+            Place.CHECKINS,
+            Place.ABOUT,
+            Place.ENGAGEMENT,
+            Place.HOURS,
+            Place.COVER,
+            Place.IS_ALWAYS_OPEN,
+            Place.IS_PERMANENTLY_CLOSED,
+            Place.IS_VERIFIED,
+            Place.LINK,
+            Place.APP_LINKS,
+            Place.OVERALL_STAR_RATING,
+            Place.PARKING,
+            Place.RESTAURANT_SPECIALTIES,
+            Place.WEBSITE,
+            Place.LOCATION,
+            Place.PHONE,
+            Place.PRICE_RANGE,
+            Place.RATING_COUNT,
+            Place.CATEGORY_LIST,
+            Place.RESTAURANT_SERVICES,
+            Place.PAYMENT_OPTIONS,
+            Place.WORKFLOWS,
+            Place.SINGLE_LINE_ADDRESS,
+    };
+
+    /**
+     * Defines the listener invoked when the current place response is received.
+     */
+    public interface CurrentPlaceRequestListener {
+
+        /**
+         * Invoked when the current place response is received.
+         *
+         * @param result This object contains the list of places, and the tracking ID parsed
+         *  from the current place response; or it contains null if the request fails.
+         * @param response The Places Graph response.
+         */
+        void onCurrentPlaceResult(
+                @Nullable CurrentPlaceResult result,
+                GraphResponse response);
+
+        /**
+         * Invoked when the Places Graph SDK fails to retrieve the current location.
+         * @param error Contains a message that explains why retrieving the location failed.
+         */
+        void onLocationError(PlaceManager.LocationError error);
+    }
+
+    /**
+     * Defines the listener invoked when the place search response is received.
+     */
+    public interface PlaceSearchRequestListener {
+
+        /**
+         * Invoked when the place search response has been received.
+         *
+         * @param places The list of places parsed from the response,
+         *               or contains null if the request fails.
+         * @param response The Places Graph response.
+         */
+        void onPlaceSearchResult(@Nullable List<Place> places, GraphResponse response);
+
+        /**
+         * Invoked when the Places Graph SDK fails to retrieve the current location.
+         * @param error Contains the reason why retrieving the location failed.
+         */
+        void onLocationError(PlaceManager.LocationError error);
+    }
+
+    /**
+     * Defines the listener invoked when the place info response is received.
+     */
+    public interface PlaceInfoRequestListener {
+
+        /**
+         * Invoked when the place info response is received.
+         *
+         * @param place The place instance parsed from the response,
+         *              or contains null if the request fails.
+         * @param response The Places Graph response.
+         */
+        void onPlaceInfoResult(@Nullable Place place, GraphResponse response);
+    }
+
+    /**
+     * Creates and executes a place search request.
+     * @param searchQuery The text search term. This can be null to let the Places Graph SDK
+     *                    return nearby places.
+     * @param listener Invoked when the place search response is received,
+     *                 and when the place search request fails.
+     */
+    public static void searchPlace(String searchQuery, PlaceSearchRequestListener listener) {
+
+        // Creates the place search request builder.
+        PlaceSearchRequestParams.Builder builder = new PlaceSearchRequestParams.Builder();
+        // Specifies the text search query. This field is optional. If you don't specify it,
+        // then places of importance within the maximum distance radius will be returned.
+        builder.setSearchText(searchQuery);
+        // The maximum search radius in meters.
+        builder.setDistance(1000);
+        // The maximum number of places to return.
+        builder.setLimit(10);
+        // The place fields to be returned.
+        builder.addField(Place.NAME);
+        builder.addField(Place.LOCATION);
+        builder.addField(Place.PHONE);
+
+        // Creates the callback invoked when the request is ready.
+        OnPlaceSearchRequestReadyCallback onRequestReadyCallback =
+                new OnPlaceSearchRequestReadyCallback(listener);
+
+        // The Places Graph SDK starts retrieving the current device location, and constructs
+        // the GraphRequest. The callback is invoked once the request is ready.
+        PlaceManager.newPlaceSearchRequest(builder.build(), onRequestReadyCallback);
+    }
+
+    private static class OnPlaceSearchRequestReadyCallback
+            implements PlaceManager.OnRequestReadyCallback, GraphRequest.Callback {
+
+        private final WeakReference<PlaceSearchRequestListener> listenerRef;
+
+        OnPlaceSearchRequestReadyCallback(PlaceSearchRequestListener listener) {
+            listenerRef = new WeakReference<>(listener);
+        }
+
+        @Override
+        public void onLocationError(PlaceManager.LocationError error) {
+            // Invoked if the Places Graph SDK fails to retrieve the device location.
+            PlaceSearchRequestListener listener = listenerRef.get();
+            if (listener == null) {
+                Log.d(TAG, "listener is null!");
+            } else {
+                listener.onLocationError(error);
+            }
+        }
+
+        @Override
+        public void onRequestReady(GraphRequest graphRequest) {
+
+            // The place search request is ready to be executed.
+            // The request can be customized here if needed.
+
+            // Sets the callback, and executes the request.
+            graphRequest.setCallback(this);
+            graphRequest.executeAsync();
+        }
+
+        @Override
+        public void onCompleted(GraphResponse response) {
+            // Event invoked when the place search response is received.
+
+            List<Place> places = null;
+
+            FacebookRequestError error = response.getError();
+            if (error == null) {
+                // Parses the place search response.
+                try {
+                    JSONObject jsonObject = response.getJSONObject();
+                    if (jsonObject != null) {
+                        JSONArray jsonArray = jsonObject.optJSONArray(PARAM_DATA);
+                        if (jsonArray != null) {
+                            int length = jsonArray.length();
+                            places = new ArrayList<>(length);
+                            for (int i = 0; i < length; i++) {
+                                places.add(new Place(jsonArray.getJSONObject(i)));
+                            }
+                        }
+                    }
+                } catch (JSONException e) {
+                    Log.e(TAG, "failed to parse place the place search response", e);
+                }
+            } else {
+                // The error object contains more information on the error.
+                Log.d(TAG, "response error: " + error);
+            }
+
+            PlaceSearchRequestListener listener = listenerRef.get();
+            if (listener == null) {
+                Log.d(TAG, "no listener!");
+            } else {
+                listener.onPlaceSearchResult(places, response);
+            }
+        }
+    }
+
+    /**
+     * Creates and executes a current place request.
+     * This request is used to determine the place where the user is currently located.
+     *
+     * @param listener Listener invoked when the current place response is received.
+     */
+    public static void getCurrentPlace(CurrentPlaceRequestListener listener) {
+
+        // Creates the current place request builder.
+        CurrentPlaceRequestParams.Builder builder =
+                new CurrentPlaceRequestParams.Builder();
+
+        // Specifies the minimum confidence level of the results.
+        builder.setMinConfidenceLevel(CurrentPlaceRequestParams.ConfidenceLevel.LOW);
+        // Specifies the maximum number of places returned.
+        builder.setLimit(10);
+        // Specifies the place fields returned.
+        builder.addField(PlaceFields.NAME);
+        builder.addField(PlaceFields.CONFIDENCE_LEVEL);
+        builder.addField(PlaceFields.LOCATION);
+        builder.addField(PlaceFields.PHONE);
+
+        OnCurrentPlaceRequestReadyCallback callback =
+                new OnCurrentPlaceRequestReadyCallback(listener);
+
+        PlaceManager.newCurrentPlaceRequest(builder.build(), callback);
+    }
+
+    private static class OnCurrentPlaceRequestReadyCallback
+            implements PlaceManager.OnRequestReadyCallback, GraphRequest.Callback {
+
+        private final WeakReference<CurrentPlaceRequestListener> listenerRef;
+
+        private OnCurrentPlaceRequestReadyCallback(CurrentPlaceRequestListener listener) {
+            listenerRef = new WeakReference<>(listener);
+        }
+
+        @Override
+        public void onRequestReady(GraphRequest graphRequest) {
+
+            // The current place request is ready. The request can be customized here.
+            // Define the callback that will handle and parse the response,
+            // and then execute the request.
+            graphRequest.setCallback(this);
+            graphRequest.executeAsync();
+        }
+
+        @Override
+        public void onCompleted(GraphResponse response) {
+
+            FacebookRequestError error = response.getError();
+
+            // Parses the current place response. CurrentPlaceResult is used in
+            // the sample app to illustrate how to parse the list of places, and
+            // how to parse the tracking ID from the current place response.
+
+            CurrentPlaceResult result = null;
+            if (error == null) {
+                try {
+                    JSONObject jsonObject = response.getJSONObject();
+                    if (jsonObject != null) {
+                        result = CurrentPlaceResult.fromJson(jsonObject);
+                    }
+                } catch (JSONException e) {
+                    Log.e(TAG, "error while parsing current place response", e);
+                }
+            } else {
+                Log.d(TAG, "response error: " + error);
+            }
+
+            CurrentPlaceRequestListener listener = listenerRef.get();
+            if (listener == null) {
+                Log.d(TAG, "no listener");
+            } else {
+                listener.onCurrentPlaceResult(result, response);
+            }
+        }
+
+        @Override
+        public void onLocationError(PlaceManager.LocationError error) {
+            CurrentPlaceRequestListener listener = listenerRef.get();
+            if (listener == null) {
+                Log.d(TAG, "listener is null!");
+            } else {
+                listener.onLocationError(error);
+            }
+        }
+    }
+
+    /**
+     * Creates and executes a current place feedback request. This request is used to provide
+     * feedback on the accuracy of the current place response.
+     *
+     * @param currentPlaceResult The result of the current place request.
+     * @param place The place where the user is (or isn't') located.
+     * @param wasHere true to indicate that the user is located at the place, and
+     * false to indicate that the user is not located at the place.
+     */
+    public static void provideCurrentPlaceFeedback(
+            final CurrentPlaceResult currentPlaceResult,
+            final Place place,
+            final boolean wasHere) {
+
+        // Creates the builder of the current place feedback request.
+        CurrentPlaceFeedbackRequestParams.Builder builder =
+                new CurrentPlaceFeedbackRequestParams.Builder();
+
+        /**
+         * Sets the tracking ID, which is used as a correlator to the current place response.
+         * The tracking ID is retrieved from the current place response.
+          */
+        builder.setTracking(currentPlaceResult.getTracking());
+
+        // The place at which the user is (or is not) located.
+        String placeId = place.get(Place.ID);
+        builder.setPlaceId(placeId);
+
+        // Indicates if the user is or is not at the place.
+        builder.setWasHere(wasHere);
+
+        GraphRequest request = PlaceManager.newCurrentPlaceFeedbackRequest(builder.build());
+
+        GraphRequest.Callback callback = new GraphRequest.Callback() {
+            @Override
+            public void onCompleted(GraphResponse response) {
+                boolean success = false;
+                FacebookRequestError error = response.getError();
+                if (error == null) {
+                    JSONObject jsonObject = response.getJSONObject();
+                    success = jsonObject.optBoolean("success");
+                } else {
+                    Log.d(TAG, "response error: " + error);
+                }
+                Log.d(
+                        TAG,
+                        "provideCurrentPlaceFeedback: onCompleted: response: success=" + success);
+            }
+        };
+        request.setCallback(callback);
+
+        request.executeAsync();
+    }
+
+    /**
+     * Creates and executes a Place Info request on the Places Graph SDK.
+     *
+     * @param place Specifies the place for retrieving additional fields.
+     * @param listener The listener invoked when the place details have been fetched.
+     */
+    public static void fetchPlaceInfo(Place place, PlaceInfoRequestListener listener) {
+
+        // Creates the builder for the place info request.
+        PlaceInfoRequestParams.Builder builder = new PlaceInfoRequestParams.Builder();
+
+        // Specifies the ID of the place to fetch information about.
+        String placeId = place.get(Place.ID);
+        builder.setPlaceId(placeId);
+        /**
+         * Specifies the fields to be fetched. Note the fields are defined in {@link PlaceFields}
+         * as String constants. Refer to the Places Graph online documentation to see the
+         * complete list of fields.
+         */
+        builder.addFields(PLACE_INFO_REQUEST_FIELDS);
+
+        // Create the place information request.
+        final GraphRequest request = PlaceManager.newPlaceInfoRequest(builder.build());
+
+        // Define the callback that will parse the response.
+        request.setCallback(new OnPlaceInfoResponseCallback(listener));
+        request.executeAsync();
+    }
+
+    /**
+     * Callback used to parse the place information response.
+     */
+    private static class OnPlaceInfoResponseCallback implements GraphRequest.Callback {
+
+        private final WeakReference<PlaceInfoRequestListener> listenerRef;
+
+        private OnPlaceInfoResponseCallback(PlaceInfoRequestListener listener) {
+            listenerRef = new WeakReference<>(listener);
+        }
+
+        @Override
+        public void onCompleted(GraphResponse response) {
+
+            Place place = null;
+
+            // The place object is used in the sample app to parse the JSON response
+            // from the Places Graph.
+            FacebookRequestError error = response.getError();
+            if (error == null) {
+                try {
+                    JSONObject jsonObject = response.getJSONObject();
+                    if (jsonObject != null) {
+                        place = new Place(jsonObject);
+                    }
+                } catch (Exception e) {
+                    Log.e(TAG, "failed to parse place info", e);
+                }
+            } else {
+                Log.d(TAG, "response error: " + error);
+            }
+
+            PlaceInfoRequestListener listener = listenerRef.get();
+            if (listener == null) {
+                Log.d(TAG, "no listener");
+            } else {
+                listener.onPlaceInfoResult(place, response);
+            }
+        }
+    }
+
+    /**
+     * Illustrates how to download the cover photo of a given place.
+     *
+     * @param place Specifies the place associated with the cover photo.
+     *              The place must have a COVER field. See {@link PlaceFields}.
+     * @param listener The listener invoked when the cover photo is downloaded.
+     * @return true if the download is initiated. false if the place does not have a COVER field.
+     */
+    public static boolean downloadPlaceCoverPhoto(
+            Place place,
+            BitmapDownloadTask.Listener listener) {
+        /**
+         * In your applications, use Fresco to download, load, cache, and display images.
+         * https://github.com/facebook/fresco
+         */
+        String coverPhotoUrl = place.getCoverPhotoUrl();
+        if (coverPhotoUrl == null) {
+            return false;
+        }
+        BitmapDownloadTask bitmapDownloadTask = new BitmapDownloadTask(coverPhotoUrl, listener);
+        FacebookSdk.getExecutor().execute(bitmapDownloadTask);
+        return true;
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceDetailsAdapter.java b/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceDetailsAdapter.java
new file mode 100644
index 000000000..3808161db
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceDetailsAdapter.java
@@ -0,0 +1,101 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.adapters;
+
+import android.content.Context;
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.example.places.R;
+import com.example.places.utils.PlaceFieldData;
+
+import java.util.List;
+
+public class PlaceDetailsAdapter extends
+        RecyclerView.Adapter<PlaceDetailsAdapter.PlaceDetailViewHolder> {
+
+    private List<PlaceFieldData> fields;
+    private Listener listener;
+
+    public interface Listener {
+        void onPlaceFieldSelected(PlaceFieldData placeFieldData);
+    }
+
+    public class PlaceDetailViewHolder extends RecyclerView.ViewHolder
+            implements View.OnClickListener {
+
+        private View container;
+        private TextView title;
+        private TextView text;
+        private PlaceFieldData currentPlaceFieldData;
+
+        public PlaceDetailViewHolder(View itemView) {
+            super(itemView);
+            container = itemView.findViewById(R.id.place_detail_container);
+            title = (TextView) itemView.findViewById(R.id.place_detail_title);
+            text = (TextView) itemView.findViewById(R.id.place_detail_text);
+        }
+
+        void update(PlaceFieldData placeFieldData) {
+            currentPlaceFieldData = placeFieldData;
+            title.setText(placeFieldData.getTitle());
+            text.setText(placeFieldData.getText());
+            if (placeFieldData.isClickable()) {
+                container.setOnClickListener(this);
+            } else {
+                container.setOnClickListener(null);
+            }
+        }
+
+        @Override
+        public void onClick(View v) {
+            listener.onPlaceFieldSelected(currentPlaceFieldData);
+        }
+    }
+
+    public PlaceDetailsAdapter(Listener listener, List<PlaceFieldData> fields) {
+        this.listener = listener;
+        this.fields = fields;
+    }
+
+    @Override
+    public PlaceDetailViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        Context context = parent.getContext();
+        LayoutInflater inflater = LayoutInflater.from(context);
+        View view = inflater.inflate(R.layout.place_info_item, parent, false);
+        PlaceDetailViewHolder viewHolder = new PlaceDetailViewHolder(view);
+        return viewHolder;
+    }
+
+    @Override
+    public int getItemCount() {
+        return fields.size();
+    }
+
+    @Override
+    public void onBindViewHolder(PlaceDetailViewHolder holder, int position) {
+        PlaceFieldData field = fields.get(position);
+        holder.update(field);
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceListAdapter.java b/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceListAdapter.java
new file mode 100644
index 000000000..9d6904aa6
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceListAdapter.java
@@ -0,0 +1,99 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.adapters;
+
+import android.content.Context;
+import android.support.v7.widget.CardView;
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.example.places.R;
+import com.example.places.model.Place;
+import com.example.places.model.PlaceTextUtils;
+
+import java.util.List;
+
+public class PlaceListAdapter extends RecyclerView.Adapter<PlaceListAdapter.PlaceViewHolder> {
+
+    private List<Place> places;
+    private Listener listener;
+    private int layoutId;
+
+    public interface Listener {
+        void onPlaceSelected(Place place);
+    }
+
+    public class PlaceViewHolder extends RecyclerView.ViewHolder {
+        private View container;
+        private TextView placeNameTextView;
+        private TextView placeAddressTextView;
+        private Place currentPlace;
+
+        public PlaceViewHolder(View itemView) {
+            super(itemView);
+            container = itemView.findViewById(R.id.place_container);
+            placeNameTextView = (TextView) itemView.findViewById(R.id.place_name);
+            placeAddressTextView =
+                    (TextView) itemView.findViewById(R.id.place_address);
+            container.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    listener.onPlaceSelected(currentPlace);
+                }
+            });
+        }
+
+        void refresh(Place place) {
+            this.currentPlace = place;
+            placeNameTextView.setText(place.get(Place.NAME));
+            placeAddressTextView.setText(PlaceTextUtils.getAddress(place));
+        }
+    }
+
+    public PlaceListAdapter(int laoyutId, List<Place> places, Listener listener) {
+        this.layoutId = laoyutId;
+        this.places = places;
+        this.listener = listener;
+    }
+
+    @Override
+    public PlaceViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        Context context = parent.getContext();
+        LayoutInflater inflater = LayoutInflater.from(context);
+        View view = inflater.inflate(layoutId, parent, false);
+        PlaceViewHolder viewHolder = new PlaceViewHolder(view);
+        return viewHolder;
+    }
+
+    @Override
+    public void onBindViewHolder(PlaceViewHolder holder, int position) {
+        Place place = places.get(position);
+        holder.refresh(place);
+    }
+
+    @Override
+    public int getItemCount() {
+        return places.size();
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/fragments/CurrentPlaceDialogFragment.java b/samples/PlacesGraphSample/src/com/example/places/fragments/CurrentPlaceDialogFragment.java
new file mode 100644
index 000000000..7d1f1dfdb
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/fragments/CurrentPlaceDialogFragment.java
@@ -0,0 +1,171 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.fragments;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.DialogFragment;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Toast;
+
+import com.example.places.PlacesGraphSDKHelper;
+import com.example.places.R;
+import com.example.places.adapters.PlaceListAdapter;
+import com.example.places.model.CurrentPlaceResult;
+import com.example.places.model.Place;
+import com.facebook.GraphResponse;
+import com.facebook.places.PlaceManager;
+
+/**
+ * This dialog fragment illustrates how to:
+ * <ul>
+ *   <li>Fetch a collection of current place candidates where the user might be located.</li>
+ *   <li>Display a list of current place candidates.</li>
+ *   <li>Provide feedback about the current place estimate.</li>
+ * </ul>
+ */
+public class CurrentPlaceDialogFragment extends DialogFragment implements
+        PlaceListAdapter.Listener {
+
+    public static final String EXTRA_CURRENT_PLACE = "current_place";
+
+    private RecyclerView recyclerView;
+    private View loadingView;
+    private CurrentPlaceResult currentPlaceResult;
+    private CurrentPlaceRequestListener currentPlaceRequestListener
+            = new CurrentPlaceRequestListener();
+
+    public static CurrentPlaceDialogFragment newInstance() {
+        return new CurrentPlaceDialogFragment();
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+        currentPlaceRequestListener = null;
+    }
+
+    public View onCreateView(
+            LayoutInflater inflater,
+            @Nullable ViewGroup container,
+            Bundle savedInstanceState) {
+        getDialog().setTitle(getString(R.string.current_place));
+        return inflater.inflate(R.layout.current_place_fragment, container, false);
+    }
+
+    @Override
+    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+
+        recyclerView = (RecyclerView) view.findViewById(R.id.current_place_recyclerview);
+        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
+        loadingView = view.findViewById(R.id.current_place_loading_container);
+
+        getCurrentPlace();
+    }
+
+    private void getCurrentPlace() {
+        PlacesGraphSDKHelper.getCurrentPlace(currentPlaceRequestListener);
+    }
+
+    @Override
+    public void onPlaceSelected(Place place) {
+
+        // Provides feedback to the Places Graph once the user confirms presence at
+        // a place. This feedback helps Facebook improve the accuracy of current place estimates.
+        PlacesGraphSDKHelper.provideCurrentPlaceFeedback(
+                currentPlaceResult,
+                place,
+                true);
+
+        Intent data = new Intent();
+        data.putExtra(EXTRA_CURRENT_PLACE, place);
+
+        getTargetFragment().onActivityResult(
+                getTargetRequestCode(),
+                Activity.RESULT_OK,
+                data);
+
+        dismiss();
+    }
+
+    private void refreshCurrentPlaceList(CurrentPlaceResult result) {
+        currentPlaceResult = result;
+
+        PlaceListAdapter adapter = new PlaceListAdapter(
+                R.layout.current_place_list_item,
+                result.getPlaces(),
+                this);
+
+        recyclerView.setAdapter(adapter);
+        recyclerView.setVisibility(View.VISIBLE);
+        loadingView.setVisibility(View.GONE);
+    }
+
+    private class CurrentPlaceRequestListener
+            implements PlacesGraphSDKHelper.CurrentPlaceRequestListener {
+
+        @Override
+        public void onCurrentPlaceResult(
+                @Nullable final CurrentPlaceResult result,
+                final GraphResponse response) {
+
+            if (isAdded()) {
+                getActivity().runOnUiThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        if (result == null) {
+                            Toast.makeText(
+                                    getActivity(),
+                                    R.string.error,
+                                    Toast.LENGTH_SHORT).show();
+                            dismiss();
+                        } else {
+                            refreshCurrentPlaceList(result);
+                        }
+                    }
+                });
+            }
+        }
+
+        @Override
+        public void onLocationError(PlaceManager.LocationError error) {
+            if (isAdded()) {
+                getActivity().runOnUiThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        Toast.makeText(
+                                getActivity(),
+                                R.string.location_error_unknown,
+                                Toast.LENGTH_SHORT).show();
+                        dismiss();
+                    }
+                });
+            }
+        }
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/fragments/LoginFragment.java b/samples/PlacesGraphSample/src/com/example/places/fragments/LoginFragment.java
new file mode 100644
index 000000000..fc81046e8
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/fragments/LoginFragment.java
@@ -0,0 +1,141 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.fragments;
+
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.example.places.R;
+import com.facebook.CallbackManager;
+import com.facebook.FacebookCallback;
+import com.facebook.FacebookException;
+import com.facebook.login.LoginResult;
+import com.facebook.login.widget.LoginButton;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * This fragment implements login to Facebook. This step is optional when
+ * using the Places Graph SDK.
+ *
+ * The Places Graph SDK supports two types of authentication tokens:
+ * <ul>
+ *     <li>Client Token: these do NOT require users to log in Facebook.
+ * Refer to {@link com.example.places.MainActivity} to see how to use a Client Token.</li>
+ *     <li>User Access Token: these are the tokens obtained when a user logs into Facebook.
+ *     This fragment illustrates how to login to Facebook and get a user token.
+ *     For more information about Facebook login, see the "HelloFacebookSample".</li>
+ * </ul>
+ */
+public class LoginFragment extends Fragment {
+
+    private static final String TAG = "LoginFragment";
+    private static final String PUBLIC_PERMISSION = "public_profile";
+
+    private Listener listener;
+    private CallbackManager callbackManager;
+
+    public interface Listener {
+        void onLoginComplete();
+    }
+
+    public static LoginFragment newInstance() {
+        return new LoginFragment();
+    }
+
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof Activity) {
+            listener = (Listener) context;
+        }
+    }
+
+    public void onDestroy() {
+        super.onDestroy();
+        listener = null;
+    }
+
+    @Nullable
+    @Override
+    public View onCreateView(
+            LayoutInflater inflater,
+            @Nullable ViewGroup container,
+            Bundle savedInstanceState) {
+        return inflater.inflate(R.layout.login_fragment, container, false);
+    }
+
+    @Override
+    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+
+        LoginButton loginButton = (LoginButton) view.findViewById(R.id.login_button);
+        loginButton.setFragment(this);
+        List<String> permissions = new ArrayList<>();
+        permissions.add(PUBLIC_PERMISSION);
+        loginButton.setReadPermissions(permissions);
+        callbackManager = CallbackManager.Factory.create();
+
+        loginButton.registerCallback(
+            callbackManager,
+            new FacebookCallback<LoginResult>() {
+                    @Override
+                    public void onSuccess(LoginResult loginResult) {
+                        listener.onLoginComplete();
+                    }
+
+                    @Override
+                    public void onCancel() {
+                        Log.d(TAG, "onCancel");
+                        showAlert();
+                    }
+
+                    @Override
+                    public void onError(FacebookException exception) {
+                        Log.d(TAG, "onError: " + exception);
+                        showAlert();
+                    }
+                });
+    }
+
+    private void showAlert() {
+        new AlertDialog.Builder(getActivity())
+                .setTitle(R.string.cancelled)
+                .setMessage(R.string.permission_not_granted)
+                .setPositiveButton(R.string.ok, null)
+                .show();
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        callbackManager.onActivityResult(requestCode, resultCode, data);
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceInfoFragment.java b/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceInfoFragment.java
new file mode 100644
index 000000000..0f2d22b8f
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceInfoFragment.java
@@ -0,0 +1,268 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.fragments;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.graphics.Bitmap;
+import android.net.Uri;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.design.widget.FloatingActionButton;
+import android.support.v4.app.Fragment;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.support.v7.widget.Toolbar;
+import android.telephony.PhoneNumberUtils;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.ProgressBar;
+import android.widget.Toast;
+
+import com.example.places.R;
+import com.example.places.adapters.PlaceDetailsAdapter;
+import com.example.places.PlacesGraphSDKHelper;
+import com.example.places.utils.PlaceFieldData;
+import com.example.places.utils.PlaceFieldDataFactory;
+import com.example.places.model.Place;
+import com.example.places.model.PlaceTextUtils;
+import com.example.places.utils.BitmapDownloadTask;
+import com.facebook.GraphResponse;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * This fragment illustrates how to get detailed place information from the Places Graph SDK.
+ *
+ * Refer to {@link PlacesGraphSDKHelper}, {@link Place}, and {@link PlaceTextUtils} to see how
+ * the place info request is created, and to see how the place info is parsed and displayed.
+ */
+public class PlaceInfoFragment extends Fragment implements
+        PlacesGraphSDKHelper.PlaceInfoRequestListener,
+        PlaceDetailsAdapter.Listener,
+        BitmapDownloadTask.Listener {
+
+    public static final String EXTRA_PLACE = "place";
+
+    /**
+     *
+     * These are the place fields that will be displayed in the recycler view.
+     */
+    private static final String[] PLACE_FIELDS_TO_DISPLAY_IN_RECYCLERVIEW = new String[]{
+            Place.CATEGORY_LIST,
+            Place.ABOUT,
+            Place.LOCATION,
+            Place.PHONE,
+            Place.WEBSITE,
+            Place.HOURS,
+            Place.IS_ALWAYS_OPEN,
+            Place.IS_PERMANENTLY_CLOSED,
+            Place.DESCRIPTION,
+            Place.CHECKINS,
+            Place.OVERALL_STAR_RATING,
+            Place.ENGAGEMENT,
+            Place.RESTAURANT_SPECIALTIES,
+            Place.RESTAURANT_SERVICES,
+            Place.PRICE_RANGE,
+            Place.PAYMENT_OPTIONS,
+            Place.IS_VERIFIED,
+            Place.APP_LINKS,
+            Place.PARKING,
+            Place.LINK,
+    };
+
+    public interface Listener {
+        void onCallPhone(Intent intent);
+    }
+
+    private Listener listener;
+    private Place place;
+    private RecyclerView recyclerView;
+    private ImageView coverView;
+    private Toolbar toolbar;
+    private FloatingActionButton floatingActionButton;
+    private ProgressBar progressBar;
+
+    public static PlaceInfoFragment newInstance() {
+        return new PlaceInfoFragment();
+    }
+
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof Activity) {
+            listener = (Listener) context;
+        }
+    }
+
+    public void onDestroy() {
+        super.onDestroy();
+        listener = null;
+    }
+
+    public View onCreateView(
+            LayoutInflater inflater,
+            @Nullable ViewGroup container,
+            Bundle savedInstanceState) {
+        if (savedInstanceState == null) {
+            final Bundle args = getArguments();
+            place = args.getParcelable(EXTRA_PLACE);
+        } else {
+            place = savedInstanceState.getParcelable(EXTRA_PLACE);
+        }
+        return inflater.inflate(R.layout.place_info_fragment, container, false);
+    }
+
+    @Override
+    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+
+        toolbar = (Toolbar) view.findViewById(R.id.place_details_toolbar);
+        ((AppCompatActivity) getActivity()).setSupportActionBar(toolbar);
+        ((AppCompatActivity) getActivity()).getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+        ((AppCompatActivity) getActivity()).getSupportActionBar().setDisplayShowHomeEnabled(true);
+
+        progressBar = (ProgressBar) view.findViewById(R.id.place_details_progress);
+        coverView = (ImageView) view.findViewById(R.id.place_details_cover);
+        recyclerView = (RecyclerView) view.findViewById(R.id.place_details_recyclerview);
+        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
+        floatingActionButton =
+                (FloatingActionButton) view.findViewById(R.id.place_details_actionbutton);
+        floatingActionButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                String phoneNumber = place.get(Place.PHONE);
+                if (phoneNumber != null) {
+                    String strippedNumber = PhoneNumberUtils.stripSeparators(phoneNumber);
+                    Intent intent =
+                            new Intent(Intent.ACTION_CALL, Uri.parse("tel:" + strippedNumber));
+                    listener.onCallPhone(intent);
+                }
+            }
+        });
+
+        toolbar.setTitle(place.get(Place.NAME));
+        int actionButtonVisibility = place.has(Place.PHONE) ? View.VISIBLE : View.GONE;
+        floatingActionButton.setVisibility(actionButtonVisibility);
+
+        fetchPlaceInfo();
+    }
+
+    @Override
+    public void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
+        outState.putParcelable(EXTRA_PLACE, place);
+    }
+
+    public void onDestroyView() {
+        toolbar = null;
+        coverView = null;
+        recyclerView = null;
+        floatingActionButton = null;
+        super.onDestroyView();
+    }
+
+    private void fetchPlaceInfo() {
+        // Creates and executes a Place Info request on the Places Graph SDK
+        PlacesGraphSDKHelper.fetchPlaceInfo(place, this);
+        progressBar.setVisibility(View.VISIBLE);
+    }
+
+    private void updateList() {
+        List<PlaceFieldData> fields = new ArrayList<>();
+        for (String fieldName : PLACE_FIELDS_TO_DISPLAY_IN_RECYCLERVIEW) {
+            PlaceFieldData fieldData =
+                    PlaceFieldDataFactory.newPlaceField(getActivity(), fieldName, place);
+            if (fieldData != null) {
+                fields.add(fieldData);
+            }
+        }
+        PlaceDetailsAdapter adapter = new PlaceDetailsAdapter(this, fields);
+        recyclerView.setAdapter(adapter);
+    }
+
+    @Override
+    public void onPlaceInfoResult(final Place place, final GraphResponse response) {
+        if (isAdded()) {
+            getActivity().runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+                    progressBar.setVisibility(View.INVISIBLE);
+                    if (place == null) {
+                        // The response object contains additional information on the error.
+                        Toast.makeText(getActivity(), R.string.error, Toast.LENGTH_SHORT).show();
+                    } else {
+                        // Refresh the UI with the new place information.
+                        PlaceInfoFragment.this.place = place;
+                        updateList();
+                        downloadCoverPhoto();
+                    }
+                }
+            });
+        }
+    }
+
+    private void downloadCoverPhoto() {
+        // Downloads the place cover photo.
+        PlacesGraphSDKHelper.downloadPlaceCoverPhoto(place, PlaceInfoFragment.this);
+    }
+
+    @Override
+    public void onPlaceFieldSelected(PlaceFieldData placeFieldData) {
+        Intent intent = placeFieldData.getActionIntent();
+        if (Intent.ACTION_CALL.equals(intent.getAction())) {
+            listener.onCallPhone(intent);
+        } else {
+            getActivity().startActivity(intent);
+        }
+    }
+
+    @Override
+    public void onBitmapDownloadSuccess(final String url, final Bitmap bitmap) {
+        if (isAdded()) {
+            getActivity().runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+                    coverView.setImageBitmap(bitmap);
+                }
+            });
+        }
+    }
+
+    @Override
+    public void onBitmapDownloadFailure(final String url) {
+        if (isAdded()) {
+            getActivity().runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+                    Toast.makeText(
+                            getActivity(),
+                            R.string.error,
+                            Toast.LENGTH_SHORT).show();
+                }
+            });
+        }
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceSearchFragment.java b/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceSearchFragment.java
new file mode 100644
index 000000000..0e4544f3a
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceSearchFragment.java
@@ -0,0 +1,404 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.fragments;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.graphics.Rect;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.design.widget.FloatingActionButton;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v4.view.ViewCompat;
+import android.support.v7.widget.CardView;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.view.KeyEvent;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.inputmethod.EditorInfo;
+import android.view.inputmethod.InputMethodManager;
+import android.widget.EditText;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.example.places.R;
+import com.example.places.adapters.PlaceListAdapter;
+import com.example.places.model.Place;
+import com.example.places.PlacesGraphSDKHelper;
+import com.example.places.model.PlaceTextUtils;
+import com.facebook.GraphResponse;
+import com.facebook.places.PlaceManager;
+import com.google.android.gms.maps.CameraUpdate;
+import com.google.android.gms.maps.CameraUpdateFactory;
+import com.google.android.gms.maps.GoogleMap;
+import com.google.android.gms.maps.OnMapReadyCallback;
+import com.google.android.gms.maps.SupportMapFragment;
+import com.google.android.gms.maps.model.LatLng;
+import com.google.android.gms.maps.model.LatLngBounds;
+import com.google.android.gms.maps.model.Marker;
+import com.google.android.gms.maps.model.MarkerOptions;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * This fragment illustrates how to use the Places Graph SDK to:
+ * <ul>
+ *     <li>Search for nearby places.</li>
+ *     <li>Display places on a map.</li>
+ * </ul>
+ */
+public class PlaceSearchFragment extends Fragment implements
+        PlacesGraphSDKHelper.PlaceSearchRequestListener,
+        PlaceListAdapter.Listener,
+        OnMapReadyCallback {
+
+    private static final int SCROLL_DIRECTION_UP = -1;
+    private static final int REQUEST_CODE_GET_CURRENT_PLACE = 1;
+
+    private Listener listener;
+    private ProgressBar progressBar;
+    private RecyclerView recyclerView;
+    private PlaceListAdapter placeListAdapter;
+    private TextView currentPlaceNameTextView;
+    private TextView currentPlaceAddressTextView;
+    private CardView searchCardView;
+    private CardView currentPlaceCardView;
+    private EditText searchEditText;
+    private FloatingActionButton actionButton;
+    private SupportMapFragment mapFragment;
+    private GoogleMap map;
+    private State state = State.LIST;
+
+    private List<Place> placesToDisplay = new ArrayList<>(0);
+
+    public enum State {
+        LIST,
+        MAP
+    };
+
+    public interface Listener {
+        void onPlaceSelected(Place place);
+        void onLocationPermissionsError();
+        boolean hasLocationPermission();
+    }
+
+    public static PlaceSearchFragment newInstance() {
+        return new PlaceSearchFragment();
+    }
+
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof Activity) {
+            listener = (Listener) context;
+        }
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+    }
+
+    public View onCreateView(
+            LayoutInflater inflater,
+            @Nullable ViewGroup container,
+            Bundle savedInstanceState) {
+        return inflater.inflate(R.layout.place_search_fragment, container, false);
+    }
+
+    @Override
+    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+
+        progressBar = (ProgressBar) view.findViewById(R.id.place_search_progressbar);
+        recyclerView = (RecyclerView) view.findViewById(R.id.place_search_recyclerview);
+        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
+
+        actionButton = (FloatingActionButton) view.findViewById(R.id.place_search_toggle_button);
+        actionButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                onActionButtonClicked();
+            }
+        });
+
+        currentPlaceCardView = (CardView) view.findViewById(R.id.current_place_cardview);
+        currentPlaceCardView.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                openCurrentPlaceDialog();
+            }
+        });
+
+        currentPlaceNameTextView = (TextView) view.findViewById(R.id.current_place_name);
+        currentPlaceAddressTextView = (TextView) view.findViewById(R.id.current_place_address);
+        searchCardView = (CardView) view.findViewById(R.id.place_search_cardview);
+        searchEditText = (EditText) view.findViewById(R.id.place_search_edittext);
+        searchEditText.setOnEditorActionListener(new TextView.OnEditorActionListener() {
+            @Override
+            public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
+                // When the search soft input key is clicked,
+                // hide soft input and search nearby places
+                if (actionId == EditorInfo.IME_ACTION_SEARCH) {
+                    InputMethodManager imm = (InputMethodManager) getActivity()
+                            .getSystemService(Context.INPUT_METHOD_SERVICE);
+                    imm.hideSoftInputFromWindow(searchEditText.getWindowToken(), 0);
+                    searchPlace(searchEditText.getText().toString());
+                }
+                return true;
+            }
+        });
+
+        RecyclerView.ItemDecoration itemDecoration = new RecyclerView.ItemDecoration() {
+            @Override
+            public void getItemOffsets(
+                    Rect outRect,
+                    View view,
+                    RecyclerView parent,
+                    RecyclerView.State state) {
+                if (parent.getChildAdapterPosition(view) == 0) {
+                    outRect.top = getResources()
+                            .getDimensionPixelOffset(R.dimen.place_search_list_header_height);
+                }
+            }
+        };
+        recyclerView.addItemDecoration(itemDecoration);
+
+        recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {
+            @Override
+            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
+                super.onScrolled(recyclerView, dx, dy);
+                float elevation;
+                if (recyclerView.canScrollVertically(SCROLL_DIRECTION_UP)) {
+                    elevation = getResources().getDimension(R.dimen.search_scrolling_elevation);
+                } else {
+                    elevation = getResources().getDimension(R.dimen.search_resting_elevation);
+                }
+                ViewCompat.setElevation(currentPlaceCardView, elevation);
+                ViewCompat.setElevation(searchCardView, elevation);
+            }
+        });
+    }
+
+    public void onDestroyView() {
+        recyclerView = null;
+        searchEditText = null;
+        searchCardView = null;
+        actionButton = null;
+        progressBar = null;
+        mapFragment = null;
+        map = null;
+        super.onDestroyView();
+    }
+
+    private void setLoading(boolean isLoading) {
+        progressBar.setVisibility(isLoading ? View.VISIBLE : View.INVISIBLE);
+    }
+
+    private void searchPlace(String searchQuery) {
+        setLoading(true);
+        PlacesGraphSDKHelper.searchPlace(searchQuery, this);
+    }
+
+    private void onActionButtonClicked() {
+        toggleMapAndList();
+        // Hide soft input
+        InputMethodManager imm = (InputMethodManager) getActivity()
+                .getSystemService(Context.INPUT_METHOD_SERVICE);
+        imm.hideSoftInputFromWindow(searchEditText.getWindowToken(), 0);
+    }
+
+    private void toggleMapAndList() {
+        state = state == State.MAP ? State.LIST : State.MAP;
+
+        if (state == State.LIST) {
+            if (mapFragment != null) {
+                FragmentTransaction ft = getChildFragmentManager().beginTransaction();
+                ft.hide(mapFragment).commit();
+            }
+            recyclerView.setVisibility(View.VISIBLE);
+            currentPlaceCardView.setVisibility(View.VISIBLE);
+        }
+        if (state == State.MAP) {
+            if (mapFragment == null) {
+                mapFragment = SupportMapFragment.newInstance();
+                FragmentTransaction transaction = getChildFragmentManager().beginTransaction();
+                transaction.replace(R.id.place_search_map_placeholder, mapFragment);
+                transaction.commit();
+                mapFragment.getMapAsync(this);
+            } else {
+                FragmentTransaction ft = getChildFragmentManager().beginTransaction();
+                ft.show(mapFragment).commit();
+            }
+            recyclerView.setVisibility(View.INVISIBLE);
+            currentPlaceCardView.setVisibility(View.INVISIBLE);
+        }
+        displayPlaces(placesToDisplay);
+    }
+
+    private void openCurrentPlaceDialog() {
+
+        CurrentPlaceDialogFragment currentPlaceDialogFragment =
+                CurrentPlaceDialogFragment.newInstance();
+
+        FragmentTransaction transaction = getChildFragmentManager().beginTransaction();
+        Fragment prev = getFragmentManager().findFragmentByTag("dialog");
+        if (prev != null) {
+            transaction.remove(prev);
+        }
+        transaction.addToBackStack(null);
+
+        currentPlaceDialogFragment.setTargetFragment(this, REQUEST_CODE_GET_CURRENT_PLACE);
+        currentPlaceDialogFragment.show(transaction, "dialog");
+    }
+
+    @Override
+    public void onPlaceSearchResult(final List<Place> places, GraphResponse response) {
+        if (isAdded()) {
+            getActivity().runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+
+                    setLoading(false);
+
+                    if (places == null) {
+                        // The response object does contain more information on the error
+                        Toast.makeText(getActivity(), R.string.error, Toast.LENGTH_SHORT).show();
+                    } else {
+                        placesToDisplay = places;
+                        displayPlaces(placesToDisplay);
+                    }
+                }
+            });
+        }
+    }
+
+    @Override
+    public void onLocationError(final PlaceManager.LocationError error) {
+
+        // This event is invoked when the Places Graph SDK fails to retrieve the device location.
+
+        if (isAdded()) {
+            getActivity().runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+                    if (error == PlaceManager.LocationError.LOCATION_PERMISSION_DENIED) {
+                        // Trigger the activity to prompt the user for location permissions.
+                        listener.onLocationPermissionsError();
+                    } else if (error == PlaceManager.LocationError.LOCATION_SERVICES_DISABLED) {
+                        String message = getString(R.string.location_error_disabled);
+                        Toast.makeText(getActivity(), message, Toast.LENGTH_SHORT).show();
+                    } else {
+                        String message = getString(R.string.location_error_unknown);
+                        Toast.makeText(getActivity(), message, Toast.LENGTH_SHORT).show();
+                    }
+                }
+            });
+        }
+    }
+
+    private void displayPlaces(List<Place> places) {
+        if (state == State.LIST) {
+            placeListAdapter = new PlaceListAdapter(R.layout.place_list_item, places, this);
+            recyclerView.setAdapter(placeListAdapter);
+            placeListAdapter.notifyDataSetChanged();
+        } else if (state == State.MAP) {
+            displayPlacesOnMap(places);
+        }
+    }
+
+    private void displayPlacesOnMap(List<Place> places) {
+        if (map != null) {
+            map.clear();
+            if (!places.isEmpty()) {
+                LatLngBounds.Builder boundsBuilder = new LatLngBounds.Builder();
+                for (Place place : places) {
+                    // Creates a marker at the place location and with the place name
+                    LatLng position = place.getPosition();
+                    String placeName = place.get(Place.NAME);
+                    if (position != null) {
+                        MarkerOptions markerOptions = new MarkerOptions()
+                                .position(position)
+                                .title(placeName);
+                        Marker marker = map.addMarker(markerOptions);
+                        marker.setTag(place);
+                        boundsBuilder.include(position);
+                    }
+                }
+
+                CameraUpdate cameraUpdate =
+                        CameraUpdateFactory.newLatLngBounds(boundsBuilder.build(), 100);
+                map.moveCamera(cameraUpdate);
+            }
+        }
+    }
+
+    @Override
+    @SuppressWarnings("MissingPermission")
+    public void onMapReady(GoogleMap googleMap) {
+        map = googleMap;
+        map.getUiSettings().setMapToolbarEnabled(false);
+        if (listener.hasLocationPermission()) {
+            map.setMyLocationEnabled(true);
+            map.getUiSettings().setMyLocationButtonEnabled(false);
+        }
+        map.setOnInfoWindowClickListener(new GoogleMap.OnInfoWindowClickListener() {
+            @Override
+            public void onInfoWindowClick(Marker marker) {
+                if (marker.getTag() instanceof Place) {
+                    Place place = (Place) marker.getTag();
+                    listener.onPlaceSelected(place);
+                }
+            }
+        });
+        if (state == State.MAP) {
+            displayPlaces(placesToDisplay);
+        }
+    }
+
+    @Override
+    public void onPlaceSelected(Place place) {
+        listener.onPlaceSelected(place);
+    }
+
+    private void onCurrentPlaceSelected(Place place) {
+        currentPlaceNameTextView.setText(place.get(Place.NAME));
+        currentPlaceNameTextView.setVisibility(View.VISIBLE);
+        currentPlaceAddressTextView.setText(PlaceTextUtils.getAddress(place));
+        currentPlaceAddressTextView.setVisibility(View.VISIBLE);
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        if (requestCode == REQUEST_CODE_GET_CURRENT_PLACE) {
+            if (resultCode == Activity.RESULT_OK) {
+                Place place = (Place) data.getParcelableExtra(
+                        CurrentPlaceDialogFragment.EXTRA_CURRENT_PLACE);
+                onCurrentPlaceSelected(place);
+            }
+        }
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/model/AppLink.java b/samples/PlacesGraphSample/src/com/example/places/model/AppLink.java
new file mode 100644
index 000000000..05b74cec9
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/model/AppLink.java
@@ -0,0 +1,42 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.model;
+
+import android.content.Intent;
+
+public class AppLink {
+
+    private String appName;
+    private Intent intent;
+
+    public AppLink(String appName, Intent intent) {
+        this.appName = appName;
+        this.intent = intent;
+    }
+
+    public String getAppName() {
+        return appName;
+    }
+
+    public Intent getIntent() {
+        return intent;
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/model/CurrentPlaceResult.java b/samples/PlacesGraphSample/src/com/example/places/model/CurrentPlaceResult.java
new file mode 100644
index 000000000..ad13b7a78
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/model/CurrentPlaceResult.java
@@ -0,0 +1,67 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.model;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class CurrentPlaceResult {
+
+    private static final String PARAM_DATA = "data";
+    private static final String PARAM_SUMMARY = "summary";
+    private static final String PARAM_TRACKING = "tracking";
+
+    private List<Place> places;
+    private String tracking;
+
+    public List<Place> getPlaces() {
+        return places;
+    }
+
+    public String getTracking() {
+        return tracking;
+    }
+
+    public static CurrentPlaceResult fromJson(JSONObject json) throws JSONException {
+
+        CurrentPlaceResult response = new CurrentPlaceResult();
+
+        if (json.has(PARAM_DATA)) {
+            JSONArray array = json.getJSONArray(PARAM_DATA);
+            int length = array.length();
+            response.places = new ArrayList<>(length);
+            for (int i=0; i<length; i++) {
+                JSONObject placeJson = array.getJSONObject(i);
+                response.places.add(new Place(placeJson));
+            }
+        }
+        if (json.has(PARAM_SUMMARY)) {
+            JSONObject summaryJson = json.getJSONObject(PARAM_SUMMARY);
+            response.tracking = summaryJson.getString(PARAM_TRACKING);
+        }
+
+        return response;
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/model/OpeningHours.java b/samples/PlacesGraphSample/src/com/example/places/model/OpeningHours.java
new file mode 100644
index 000000000..8b51d4dba
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/model/OpeningHours.java
@@ -0,0 +1,85 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.model;
+
+import android.text.TextUtils;
+import android.util.SparseArray;
+
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class OpeningHours {
+
+    public static final int MONDAY = 0;
+    public static final int TUESDAY = 1;
+    public static final int WEDNESDAY = 2;
+    public static final int THURSDAY = 3;
+    public static final int FRIDAY = 4;
+    public static final int SATURDAY = 5;
+    public static final int SUNDAY = 6;
+
+    private static final String[] DAY_PREFIX =
+            new String[] {"mon", "tue", "wed","thu", "fri", "sat","sun"};
+
+    private final SparseArray<List<String>> openingHours = new SparseArray<>();
+
+    public List<String> getHoursInterval(int day) {
+        return openingHours.get(day);
+    }
+
+    public static OpeningHours parse(Place place) {
+        JSONObject jsonHours = place.getJson(Place.HOURS);
+        if (jsonHours != null) {
+            OpeningHours instance = new OpeningHours();
+            for (int i = MONDAY; i <= SUNDAY; i++) {
+                List<String> hoursIntervals = getOpeningHoursOfADay(jsonHours, DAY_PREFIX[i]);
+                if (hoursIntervals != null) {
+                    instance.openingHours.put(i, hoursIntervals);
+                }
+            }
+            return instance;
+        }
+        return null;
+    }
+
+    private static List<String> getOpeningHoursOfADay(JSONObject jsonHours, String dayPrefix) {
+        List<String> hoursIntervals = null;
+        String open1 = jsonHours.optString(dayPrefix + "_1_open");
+        String close1 = jsonHours.optString(dayPrefix + "_1_close");
+
+        if (!TextUtils.isEmpty(open1) && !TextUtils.isEmpty(close1)) {
+            hoursIntervals = new ArrayList<>(4);
+            hoursIntervals.add(open1);
+            hoursIntervals.add(close1);
+
+            String open2 = jsonHours.optString(dayPrefix + "_2_open");
+            String close2 = jsonHours.optString(dayPrefix + "_2_close");
+
+            if (!TextUtils.isEmpty(open2) && !TextUtils.isEmpty(close2)) {
+                hoursIntervals.add(open2);
+                hoursIntervals.add(close2);
+            }
+        }
+        return hoursIntervals;
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/model/Place.java b/samples/PlacesGraphSample/src/com/example/places/model/Place.java
new file mode 100644
index 000000000..2269375a1
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/model/Place.java
@@ -0,0 +1,183 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.model;
+
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Parcel;
+import android.os.Parcelable;
+import android.text.TextUtils;
+import android.util.Log;
+
+import com.facebook.places.model.CurrentPlaceRequestParams;
+import com.facebook.places.model.PlaceFields;
+import com.google.android.gms.maps.model.LatLng;
+
+import org.json.JSONArray;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class Place implements PlaceFields, Parcelable {
+
+    private static final String TAG = Place.class.getSimpleName();
+
+    private JSONObject jsonData;
+
+    public Place(JSONObject jsonData) {
+        this.jsonData = jsonData;
+    }
+
+    public JSONObject getJson() {
+        return jsonData;
+    }
+
+    public String get(String field) {
+        return jsonData.optString(field);
+    }
+
+    public JSONObject getJson(String field) {
+        return jsonData.optJSONObject(field);
+    }
+
+    public JSONArray getJsonArray(String field) {
+        return jsonData.optJSONArray(field);
+    }
+
+    public int getInt(String field) {
+        return jsonData.optInt(field);
+    }
+
+    public boolean getBoolean(String field) {
+        return jsonData.optBoolean(field);
+    }
+
+    public boolean has(String field) {
+        return jsonData.has(field);
+    }
+
+    public LatLng getPosition() {
+        JSONObject location = jsonData.optJSONObject(LOCATION);
+        if (location != null) {
+            if (location.has("latitude") && location.has("longitude")) {
+                double latitude = location.optDouble("latitude");
+                double longitude = location.optDouble("longitude");
+                return new LatLng(latitude, longitude);
+            }
+        }
+        return null;
+    }
+
+    public CurrentPlaceRequestParams.ConfidenceLevel getConfidenceLevel() {
+        if (jsonData.has(CONFIDENCE_LEVEL)) {
+            String confidenceLevel = jsonData.optString(CONFIDENCE_LEVEL);
+            if ("high".equalsIgnoreCase(confidenceLevel)) {
+                return CurrentPlaceRequestParams.ConfidenceLevel.HIGH;
+            } else if ("medium".equalsIgnoreCase(confidenceLevel)) {
+                return CurrentPlaceRequestParams.ConfidenceLevel.MEDIUM;
+            } else if ("low".equalsIgnoreCase(confidenceLevel)) {
+                return CurrentPlaceRequestParams.ConfidenceLevel.LOW;
+            }
+        }
+        return null;
+    }
+
+    public String getCoverPhotoUrl() {
+        JSONObject coverPhotoJson = jsonData.optJSONObject("cover");
+        if (coverPhotoJson != null) {
+            return coverPhotoJson.optString("source");
+        }
+        return null;
+    }
+
+    public Intent getAppLinkIntent(String appName) {
+        List<AppLink> appLinks = getAppLinks();
+        if (appLinks != null) {
+            for (AppLink appLink : appLinks) {
+                if (appName.equals(appLink.getAppName())) {
+                    return appLink.getIntent();
+                }
+            }
+        }
+        return null;
+    }
+
+    public List<AppLink> getAppLinks() {
+        List<AppLink> appLinks = new ArrayList<>();
+        JSONObject appLinkJson = jsonData.optJSONObject(APP_LINKS);
+        if (appLinkJson != null) {
+            JSONArray appArray = appLinkJson.optJSONArray("android");
+            if (appArray != null) {
+                int length = appArray.length();
+                for (int i = 0; i < length; i++) {
+                    JSONObject linkJson = appArray.optJSONObject(i);
+                    if (linkJson != null) {
+                        String appName = linkJson.optString("app_name");
+                        Intent intent = new Intent(Intent.ACTION_VIEW);
+                        String packageName = linkJson.optString("package");
+                        String className = linkJson.optString("class");
+                        if (!TextUtils.isEmpty(packageName) && !TextUtils.isEmpty(className)) {
+                            intent.setClassName(packageName, className);
+                        }
+                        String url = linkJson.optString("url");
+                        if (url != null) {
+                            intent.setData(Uri.parse(url));
+                        }
+                        appLinks.add(new AppLink(appName, intent));
+                    }
+                }
+            }
+        }
+        return appLinks;
+    }
+
+    public OpeningHours getOpeningHours() {
+        return OpeningHours.parse(this);
+    }
+
+    @Override
+    public int describeContents() {
+        return 0;
+    }
+
+    @Override
+    public void writeToParcel(Parcel dest, int flags) {
+        dest.writeString(jsonData.toString());
+    }
+
+    public static final Parcelable.Creator<Place> CREATOR = new Parcelable.Creator<Place>() {
+
+        public Place createFromParcel(Parcel in) {
+            try {
+                String json = in.readString();
+                return new Place(new JSONObject(json));
+            } catch (Exception e) {
+                Log.e(TAG, "Failed to parse place", e);
+            }
+            return null;
+        }
+
+        public Place[] newArray(int size) {
+            return new Place[size];
+        }
+    };
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/model/PlaceTextUtils.java b/samples/PlacesGraphSample/src/com/example/places/model/PlaceTextUtils.java
new file mode 100644
index 000000000..5442980ec
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/model/PlaceTextUtils.java
@@ -0,0 +1,310 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.model;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.text.TextUtils;
+
+import com.example.places.R;
+
+import org.json.JSONArray;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class PlaceTextUtils {
+
+    private static final int[] DAY_OF_WEEK_STRINGID =  new int[]{
+            R.string.monday,
+            R.string.tuesday,
+            R.string.wednesday,
+            R.string.thursday,
+            R.string.friday,
+            R.string.saturday,
+            R.string.sunday,
+    };
+
+    public static String getFieldName(Context context, String placeField) {
+        Resources resources = context.getResources();
+        if (Place.ABOUT.equals(placeField)) {
+            return resources.getString(R.string.place_field_about);
+        } else if (Place.APP_LINKS.equals(placeField)) {
+            return resources.getString(R.string.place_field_app_link);
+        } else if (Place.CATEGORY_LIST.equals(placeField)) {
+            return resources.getString(R.string.place_field_categories);
+        } else if (Place.CHECKINS.equals(placeField)) {
+            return resources.getString(R.string.place_field_checkins);
+        } else if (Place.DESCRIPTION.equals(placeField)) {
+            return resources.getString(R.string.place_field_description);
+        } else if (Place.ENGAGEMENT.equals(placeField)) {
+            return resources.getString(R.string.place_field_engagement);
+        } else if (Place.HOURS.equals(placeField)) {
+            return resources.getString(R.string.place_field_hours);
+        } else if (Place.LOCATION.equals(placeField)) {
+            return resources.getString(R.string.place_field_address);
+        } else if (Place.LINK.equals(placeField)) {
+            return resources.getString(R.string.place_field_link);
+        } else if (Place.OVERALL_STAR_RATING.equals(placeField)) {
+            return resources.getString(R.string.place_field_rating);
+        } else if (Place.PARKING.equals(placeField)) {
+            return resources.getString(R.string.place_field_parking);
+        } else if (Place.PAYMENT_OPTIONS.equals(placeField)) {
+            return resources.getString(R.string.place_field_payment_options);
+        } else if (Place.PHONE.equals(placeField)) {
+            return resources.getString(R.string.place_field_phone);
+        } else if (Place.PRICE_RANGE.equals(placeField)) {
+            return resources.getString(R.string.place_field_price_range);
+        } else if (Place.RATING_COUNT.equals(placeField)) {
+            return resources.getString(R.string.place_field_rating_count);
+        } else if (Place.RESTAURANT_SPECIALTIES.equals(placeField)) {
+            return resources.getString(R.string.place_field_specialties);
+        } else if (Place.RESTAURANT_SERVICES.equals(placeField)) {
+            return resources.getString(R.string.place_field_services);
+        } else if (Place.WEBSITE.equals(placeField)) {
+            return resources.getString(R.string.place_field_website);
+        }
+        return null;
+    }
+
+    public static String getFieldValue(Context context, Place place, String field) {
+        Resources resources = context.getResources();
+        if (Place.CATEGORY_LIST.equals(field)) {
+            List<String> categories = getCategories(place);
+            return TextUtils.join(", ", categories);
+        } else if (Place.LOCATION.equals(field)) {
+            return getAddress(place);
+        } else if (Place.PHONE.equals(field)) {
+            return place.get(field);
+        } else if (Place.WEBSITE.equals(field)) {
+            return place.get(field);
+        } else if (Place.LINK.equals(field)) {
+            return place.get(field);
+        } else if (Place.HOURS.equals(field)) {
+            return getOpeningHours(context, place);
+        } else if (Place.DESCRIPTION.equals(field)) {
+            return place.get(field);
+        } else if (Place.ABOUT.equals(field)) {
+            return place.get(field);
+        } else if (Place.CHECKINS.equals(field)) {
+            int checkins = place.getInt(field);
+            return resources.getString(R.string.place_info_checkins, checkins);
+        } else if (Place.OVERALL_STAR_RATING.equals(field)) {
+            String rating = place.get(Place.OVERALL_STAR_RATING);
+            int ratingCount = place.getInt(Place.RATING_COUNT);
+            if (!TextUtils.isEmpty(rating) && ratingCount > 0) {
+                return resources.getString(R.string.place_info_rating, rating, ratingCount);
+            }
+        } else if (Place.ENGAGEMENT.equals(field)) {
+            JSONObject jsonObject = place.getJson(Place.ENGAGEMENT);
+            if (jsonObject != null) {
+                return jsonObject.optString("social_sentence");
+            }
+        } else if (Place.RESTAURANT_SPECIALTIES.equals(field)) {
+            List<String> specialties = getRestaurantSpecialties(context, place);
+            if (!specialties.isEmpty()) {
+                return TextUtils.join(", ", specialties);
+            }
+        } else if (Place.PRICE_RANGE.equals(field)) {
+            return place.get(Place.PRICE_RANGE);
+        } else if (Place.IS_ALWAYS_OPEN.equals(field)) {
+            boolean isAlwaysOpen = place.getBoolean(field);
+            if (isAlwaysOpen) {
+                return resources.getString(R.string.place_always_open);
+            }
+        } else if (Place.IS_PERMANENTLY_CLOSED.equals(field)) {
+            boolean isPermanentlyClosed = place.getBoolean(field);
+            if (isPermanentlyClosed) {
+                return resources.getString(R.string.place_permanently_closed);
+            }
+        } else if (Place.APP_LINKS.equals(field)) {
+           if (hasFacebookAppLink(place)) {
+                return resources.getString(R.string.place_app_link);
+            }
+        } else if (Place.PARKING.equals(field)) {
+            List<String> parking = getParking(context, place);
+            if (!parking.isEmpty()) {
+                return TextUtils.join(", ", parking);
+            }
+        } else if (Place.RESTAURANT_SERVICES.equals(field)) {
+            List<String> services = getRestaurantServices(context, place);
+            if (!services.isEmpty()) {
+                return TextUtils.join(", ", services);
+            }
+        } else if (Place.PAYMENT_OPTIONS.equals(field)) {
+            List<String> paymentOptions = getPaymentOptions(context, place);
+            if (!paymentOptions.isEmpty()) {
+                return TextUtils.join(", ", paymentOptions);
+            }
+        }
+        return null;
+    }
+
+    public static String getAddress(Place place) {
+        if (place.has(Place.SINGLE_LINE_ADDRESS)) {
+            return place.get(Place.SINGLE_LINE_ADDRESS);
+        } else if (place.has(Place.LOCATION)) {
+            JSONObject location = place.getJson(Place.LOCATION);
+            List<String> address = new ArrayList<>(5);
+            String street = location.optString("street");
+            if (!TextUtils.isEmpty(street)) {
+                address.add(street);
+            }
+            String city = location.optString("city");
+            if (!TextUtils.isEmpty(city)) {
+                address.add(city);
+            }
+            String state = location.optString("state");
+            if (!TextUtils.isEmpty(state)) {
+                address.add(state);
+            }
+            String country = location.optString("city");
+            if (!TextUtils.isEmpty(country)) {
+                address.add(country);
+            }
+            return TextUtils.join(", ", address);
+        }
+        return null;
+    }
+
+    public static List<String> getCategories(Place place) {
+        JSONObject jsonData = place.getJson();
+        List<String> categories = new ArrayList<>();
+        JSONArray jsonCategories = jsonData.optJSONArray(Place.CATEGORY_LIST);
+        if (jsonCategories != null) {
+            int length = jsonCategories.length();
+            for (int i=0; i<length; i++) {
+                JSONObject jsonCategory = jsonCategories.optJSONObject(i);
+                if (jsonCategory != null) {
+                    String category = jsonCategory.optString("name");
+                    categories.add(category);
+                }
+            }
+        }
+        return categories;
+    }
+
+    public static String getOpeningHours(Context context, Place place) {
+        OpeningHours hours = place.getOpeningHours();
+        if (hours != null) {
+            StringBuilder openingHours = new StringBuilder();
+            for (int day = OpeningHours.MONDAY; day < OpeningHours.SUNDAY; day++) {
+                String hourIntervalText = getOpeningHourText(context.getResources(), hours, day);
+                if (hourIntervalText != null) {
+                    if (openingHours.length() > 0) {
+                        openingHours.append("\n");
+                    }
+                    openingHours.append(hourIntervalText);
+                }
+            }
+            if (openingHours.length() > 0) {
+                return openingHours.toString();
+            }
+        }
+        return null;
+    }
+
+    private static String getOpeningHourText(Resources resources, OpeningHours hours, int day) {
+        List<String> hourInterval = hours.getHoursInterval(day);
+        if (hourInterval != null) {
+            StringBuilder builder = new StringBuilder();
+            if (hourInterval.size() >= 2) {
+                builder.append(hourInterval.get(0));
+                builder.append(' ');
+                builder.append(hourInterval.get(1));
+            }
+            if (hourInterval.size() == 4) {
+                builder.append(", ");
+                builder.append(hourInterval.get(2));
+                builder.append(' ');
+                builder.append(hourInterval.get(3));
+            }
+            if (hourInterval.size() > 0) {
+                builder.append(" - ");
+                builder.append(resources.getString(DAY_OF_WEEK_STRINGID[day]));
+                return builder.toString();
+            }
+        }
+        return null;
+    }
+
+    public static List<String> getPaymentOptions(Context context, Place place) {
+        return extractValidValues(
+                context,
+                place.getJson(Place.PAYMENT_OPTIONS),
+                R.array.payment_options_keys,
+                R.array.payment_options_labels);
+    }
+
+    public static List<String> getParking(Context context, Place place) {
+        return extractValidValues(
+                context,
+                place.getJson(Place.PARKING),
+                R.array.parking_keys,
+                R.array.parking_labels);
+    }
+
+    public static List<String> getRestaurantSpecialties(Context context, Place place) {
+        return extractValidValues(
+                context,
+                place.getJson(Place.RESTAURANT_SPECIALTIES),
+                R.array.restaurant_specialties_keys,
+                R.array.restaurant_specialties_labels);
+    }
+
+    public static List<String> getRestaurantServices(Context context, Place place) {
+        return extractValidValues(
+                context,
+                place.getJson(Place.RESTAURANT_SERVICES),
+                R.array.restaurant_services_keys,
+                R.array.restaurant_services_labels);
+    }
+
+    private static List<String> extractValidValues(
+            Context context,
+            JSONObject jsonObject,
+            int keysId,
+            int labelsId) {
+        List<String> labels = new ArrayList<>();
+        if (jsonObject != null) {
+            String[] keys = context.getResources().getStringArray(keysId);
+            String[] labelArray = context.getResources().getStringArray(labelsId);
+            for (int i=0; i<keys.length; i++) {
+                int value = jsonObject.optInt(keys[i]);
+                if (value == 1) {
+                    labels.add(labelArray[i]);
+                }
+            }
+        }
+        return labels;
+    }
+
+    private static boolean hasFacebookAppLink(Place place) {
+        List<AppLink> appLinks = place.getAppLinks();
+        for (AppLink appLink : appLinks) {
+            if ("Facebook".equals(appLink.getAppName())) {
+                return true;
+            }
+        }
+        return false;
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/utils/BitmapDownloadTask.java b/samples/PlacesGraphSample/src/com/example/places/utils/BitmapDownloadTask.java
new file mode 100644
index 000000000..980331846
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/utils/BitmapDownloadTask.java
@@ -0,0 +1,71 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.utils;
+
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.util.Log;
+
+import java.io.InputStream;
+import java.lang.ref.WeakReference;
+import java.net.HttpURLConnection;
+
+/**
+ * In your applications, use Fresco for image download, caching and display.
+ * https://github.com/facebook/fresco
+ */
+public class BitmapDownloadTask implements Runnable {
+
+    private final String url;
+    private final WeakReference<Listener> listenerWeakReference;
+
+    public interface Listener {
+        void onBitmapDownloadSuccess(String url, Bitmap bitmap);
+        void onBitmapDownloadFailure(String url);
+    }
+
+    public BitmapDownloadTask(String url, Listener listener) {
+        this.url = url;
+        listenerWeakReference = new WeakReference<>(listener);
+    }
+
+    @Override
+    public void run() {
+        try {
+            HttpURLConnection connection =
+                    (HttpURLConnection) new java.net.URL(url).openConnection();
+            connection.setDoInput(true);
+            connection.connect();
+            InputStream input = connection.getInputStream();
+            Bitmap bitmap = BitmapFactory.decodeStream(input);
+            Listener listener = listenerWeakReference.get();
+            if (listener != null) {
+                listener.onBitmapDownloadSuccess(url, bitmap);
+            }
+        } catch (Throwable t) {
+            t.printStackTrace();
+            Listener listener = listenerWeakReference.get();
+            if (listener != null) {
+                listener.onBitmapDownloadFailure(url);
+            }
+        }
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldData.java b/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldData.java
new file mode 100644
index 000000000..c58d1eec0
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldData.java
@@ -0,0 +1,94 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.utils;
+
+import android.content.Intent;
+import android.net.Uri;
+import android.telephony.PhoneNumberUtils;
+
+import com.example.places.model.Place;
+
+public class PlaceFieldData {
+
+    public enum Type {
+        TEXT,
+        LINK,
+        PHONE,
+        MAP,
+        APP_LINK,
+    }
+
+    private Place place;
+    private String field;
+    private String title;
+    private String text;
+    private Type type;
+
+    public PlaceFieldData(Place place, String field, String title, String text, Type type) {
+        this.place = place;
+        this.field = field;
+        this.title = title;
+        this.text = text;
+        this.type = type;
+    }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public String getText() {
+        return text;
+    }
+
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    public void setText(String text) {
+        this.text = text;
+    }
+
+    public boolean isClickable() {
+        return type != Type.TEXT;
+    }
+
+    public Intent getActionIntent() {
+        Intent intent = null;
+        if (type == Type.LINK) {
+            intent = new Intent(Intent.ACTION_VIEW);
+            String url = text;
+            if (!url.startsWith("http")) {
+                url = "http://" + url;
+            }
+            intent.setData(Uri.parse(url));
+        } else if (type == Type.MAP) {
+            intent = new Intent(
+                    android.content.Intent.ACTION_VIEW,
+                    Uri.parse("google.navigation:q=" + text));
+        } else if (type == Type.PHONE) {
+            String number = PhoneNumberUtils.stripSeparators(text);
+            intent = new Intent(Intent.ACTION_CALL, Uri.parse("tel:" + number));
+        } else if (type == Type.APP_LINK) {
+            intent = place.getAppLinkIntent("Facebook");
+        }
+        return intent;
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldDataFactory.java b/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldDataFactory.java
new file mode 100644
index 000000000..a7f36d881
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldDataFactory.java
@@ -0,0 +1,70 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.utils;
+
+import android.content.Context;
+
+import com.example.places.model.Place;
+import com.example.places.model.PlaceTextUtils;
+
+public class PlaceFieldDataFactory {
+
+    public static PlaceFieldData newPlaceField(
+            Context context,
+            String field,
+            Place place) {
+
+        if (!place.has(field)) {
+            return null;
+        }
+
+        String text = PlaceTextUtils.getFieldValue(context, place, field);
+
+        if (text == null) {
+            return null;
+        }
+        PlaceFieldData.Type type = getPlaceFieldType(field);
+        String title = PlaceTextUtils.getFieldName(context, field);
+
+        return new PlaceFieldData(
+                place,
+                field,
+                title,
+                text,
+                type);
+    }
+
+    private static PlaceFieldData.Type getPlaceFieldType(String field) {
+        switch (field) {
+            case Place.LOCATION:
+                return PlaceFieldData.Type.MAP;
+            case Place.APP_LINKS:
+                return PlaceFieldData.Type.APP_LINK;
+            case Place.PHONE:
+                return PlaceFieldData.Type.PHONE;
+            case Place.LINK:
+            case Place.WEBSITE:
+                return PlaceFieldData.Type.LINK;
+            default:
+                return PlaceFieldData.Type.TEXT;
+        }
+    }
+}
diff --git a/samples/RPSSample/res/drawable-hdpi/icon.png b/samples/RPSSample/res/drawable-hdpi/icon.png
index 9e70a87f3..e3336f6bf 100644
Binary files a/samples/RPSSample/res/drawable-hdpi/icon.png and b/samples/RPSSample/res/drawable-hdpi/icon.png differ
diff --git a/samples/Scrumptious/res/drawable-hdpi/icon.png b/samples/Scrumptious/res/drawable-hdpi/icon.png
index 383503ce9..d5b4ef6cb 100644
Binary files a/samples/Scrumptious/res/drawable-hdpi/icon.png and b/samples/Scrumptious/res/drawable-hdpi/icon.png differ
diff --git a/samples/Scrumptious/res/drawable-mdpi/icon.png b/samples/Scrumptious/res/drawable-mdpi/icon.png
index b14f00b4d..895d70f2e 100644
Binary files a/samples/Scrumptious/res/drawable-mdpi/icon.png and b/samples/Scrumptious/res/drawable-mdpi/icon.png differ
diff --git a/samples/Scrumptious/res/drawable-xhdpi/icon.png b/samples/Scrumptious/res/drawable-xhdpi/icon.png
index c86c5f0f3..7e7a5ce77 100644
Binary files a/samples/Scrumptious/res/drawable-xhdpi/icon.png and b/samples/Scrumptious/res/drawable-xhdpi/icon.png differ
diff --git a/samples/Scrumptious/res/drawable/icon.png b/samples/Scrumptious/res/drawable/icon.png
index 739392fc0..895d70f2e 100644
Binary files a/samples/Scrumptious/res/drawable/icon.png and b/samples/Scrumptious/res/drawable/icon.png differ
diff --git a/samples/ShareIt/res/drawable-hdpi/icon.png b/samples/ShareIt/res/drawable-hdpi/icon.png
index 66186b7d9..ae01da1ea 100644
Binary files a/samples/ShareIt/res/drawable-hdpi/icon.png and b/samples/ShareIt/res/drawable-hdpi/icon.png differ
diff --git a/samples/ShareIt/res/drawable-mdpi/icon.png b/samples/ShareIt/res/drawable-mdpi/icon.png
index 85917270a..50cdca5ee 100644
Binary files a/samples/ShareIt/res/drawable-mdpi/icon.png and b/samples/ShareIt/res/drawable-mdpi/icon.png differ
diff --git a/samples/ShareIt/res/drawable-xhdpi/icon.png b/samples/ShareIt/res/drawable-xhdpi/icon.png
index 73d2a23ed..3775b0c2d 100644
Binary files a/samples/ShareIt/res/drawable-xhdpi/icon.png and b/samples/ShareIt/res/drawable-xhdpi/icon.png differ
diff --git a/samples/SwitchUserSample/res/drawable-hdpi/icon.png b/samples/SwitchUserSample/res/drawable-hdpi/icon.png
index 8e4f7040c..dd6f7d77e 100644
Binary files a/samples/SwitchUserSample/res/drawable-hdpi/icon.png and b/samples/SwitchUserSample/res/drawable-hdpi/icon.png differ
diff --git a/samples/SwitchUserSample/res/drawable-xhdpi/icon.png b/samples/SwitchUserSample/res/drawable-xhdpi/icon.png
index e49838d03..25270e1a9 100644
Binary files a/samples/SwitchUserSample/res/drawable-xhdpi/icon.png and b/samples/SwitchUserSample/res/drawable-xhdpi/icon.png differ
diff --git a/scripts/build_documentation.sh b/scripts/build_documentation.sh
index fc164718e..49b58cf04 100755
--- a/scripts/build_documentation.sh
+++ b/scripts/build_documentation.sh
@@ -71,7 +71,8 @@ do
   grep --recursive --no-filename -Po '(?<=package )com\.facebook.*?(?=;)' $SRC_FOLDER | sort | uniq | grep -v internal \
     | xargs javadoc -quiet -d $DOC_FOLDER -sourcepath $SRC_FOLDER &> $LOG_FILE
 
-  zip --quiet --recurse-paths $DOC_FOLDER.zip $DOC_FOLDER
+  cd $FB_SDK_ROOT/docs
+  zip --quiet --recurse-paths $DOC_FOLDER.zip $KIT_DOC
 
   echo ""
   echo "Generated docs in $DOC_FOLDER"
