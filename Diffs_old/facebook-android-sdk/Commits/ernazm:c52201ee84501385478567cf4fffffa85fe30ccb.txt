diff --git a/facebook/src/com/facebook/android/FbDialog.java b/facebook/src/com/facebook/android/FbDialog.java
index 9622f816d..36ee22b85 100644
--- a/facebook/src/com/facebook/android/FbDialog.java
+++ b/facebook/src/com/facebook/android/FbDialog.java
@@ -25,7 +25,6 @@
 import android.graphics.drawable.Drawable;
 import android.net.Uri;
 import android.os.Bundle;
-import android.util.Log;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.ViewGroup.LayoutParams;
@@ -41,11 +40,10 @@
 public class FbDialog extends Dialog {
 
     static final int FB_BLUE = 0xFF6D84B4;
-    static final float[] DIMENSIONS_DIFF_LANDSCAPE = {20, 60};
-    static final float[] DIMENSIONS_DIFF_PORTRAIT = {40, 60};
-    static final FrameLayout.LayoutParams FILL =
-        new FrameLayout.LayoutParams(ViewGroup.LayoutParams.FILL_PARENT,
-                         ViewGroup.LayoutParams.FILL_PARENT);
+    static final float[] DIMENSIONS_DIFF_LANDSCAPE = { 20, 60 };
+    static final float[] DIMENSIONS_DIFF_PORTRAIT = { 40, 60 };
+    static final FrameLayout.LayoutParams FILL = new FrameLayout.LayoutParams(
+                    ViewGroup.LayoutParams.FILL_PARENT, ViewGroup.LayoutParams.FILL_PARENT);
     static final int MARGIN = 4;
     static final int PADDING = 2;
     static final String DISPLAY_STRING = "touch";
@@ -70,29 +68,34 @@ protected void onCreate(Bundle savedInstanceState) {
         mSpinner = new ProgressDialog(getContext());
         mSpinner.requestWindowFeature(Window.FEATURE_NO_TITLE);
         mSpinner.setMessage("Loading...");
-        
+
         requestWindowFeature(Window.FEATURE_NO_TITLE);
         mContent = new FrameLayout(getContext());
 
-        /* Create the 'x' image, but don't add to the mContent layout yet
-         * at this point, we only need to know its drawable width and height 
-         * to place the webview
+        /*
+         * Create the 'x' image, but don't add to the mContent layout yet at
+         * this point, we only need to know its drawable width and height to
+         * place the webview
          */
         createCrossImage();
-        
-        /* Now we know 'x' drawable width and height, 
-         * layout the webivew and add it the mContent layout
+
+        /*
+         * Now we know 'x' drawable width and height, layout the webivew and add
+         * it the mContent layout
          */
         int crossWidth = mCrossImage.getDrawable().getIntrinsicWidth();
         setUpWebView(crossWidth / 2);
-        
-        /* Finally add the 'x' image to the mContent layout and
-         * add mContent to the Dialog view
+
+        /*
+         * Finally add the 'x' image to the mContent layout and add mContent to
+         * the Dialog view
          */
-        mContent.addView(mCrossImage, new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));
-        addContentView(mContent, new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT));
+        mContent.addView(mCrossImage, new LayoutParams(LayoutParams.WRAP_CONTENT,
+                        LayoutParams.WRAP_CONTENT));
+        addContentView(mContent, new LayoutParams(LayoutParams.FILL_PARENT,
+                        LayoutParams.FILL_PARENT));
     }
-    
+
     private void createCrossImage() {
         mCrossImage = new ImageView(getContext());
         // Dismiss the dialog when user click on the 'x'
@@ -105,9 +108,10 @@ public void onClick(View v) {
         });
         Drawable crossDrawable = getContext().getResources().getDrawable(R.drawable.close);
         mCrossImage.setImageDrawable(crossDrawable);
-        /* 'x' should not be visible while webview is loading
-         * make it visible only after webview has fully loaded
-        */
+        /*
+         * 'x' should not be visible while webview is loading make it visible
+         * only after webview has fully loaded
+         */
         mCrossImage.setVisibility(View.INVISIBLE);
     }
 
@@ -122,7 +126,7 @@ private void setUpWebView(int margin) {
         mWebView.setLayoutParams(FILL);
         mWebView.setVisibility(View.INVISIBLE);
         mWebView.getSettings().setSavePassword(false);
-        
+
         webViewContainer.setPadding(margin, margin, margin, margin);
         webViewContainer.addView(mWebView);
         mContent.addView(webViewContainer);
@@ -143,8 +147,8 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
 
                 if (error == null) {
                     mListener.onComplete(values);
-                } else if (error.equals("access_denied") ||
-                           error.equals("OAuthAccessDeniedException")) {
+                } else if (error.equals("access_denied")
+                                || error.equals("OAuthAccessDeniedException")) {
                     mListener.onCancel();
                 } else {
                     mListener.onFacebookError(new FacebookError(error));
@@ -160,17 +164,15 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 return false;
             }
             // launch non-dialog URLs in a full browser
-            getContext().startActivity(
-                    new Intent(Intent.ACTION_VIEW, Uri.parse(url)));
+            getContext().startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(url)));
             return true;
         }
 
         @Override
-        public void onReceivedError(WebView view, int errorCode,
-                String description, String failingUrl) {
+        public void onReceivedError(WebView view, int errorCode, String description,
+                        String failingUrl) {
             super.onReceivedError(view, errorCode, description, failingUrl);
-            mListener.onError(
-                    new DialogError(description, errorCode, failingUrl));
+            mListener.onError(new DialogError(description, errorCode, failingUrl));
             FbDialog.this.dismiss();
         }
 
@@ -178,16 +180,20 @@ public void onReceivedError(WebView view, int errorCode,
         public void onPageStarted(WebView view, String url, Bitmap favicon) {
             Util.logd("Facebook-WebView", "Webview loading URL: " + url);
             super.onPageStarted(view, url, favicon);
-            mSpinner.show();
+            if (isShowing()) {
+                mSpinner.show();
+            }
         }
 
         @Override
         public void onPageFinished(WebView view, String url) {
             super.onPageFinished(view, url);
-            mSpinner.dismiss();
-            /* 
-             * Once webview is fully loaded, set the mContent background to be transparent
-             * and make visible the 'x' image. 
+            if (isShowing()) {
+                mSpinner.dismiss();
+            }
+            /*
+             * Once webview is fully loaded, set the mContent background to be
+             * transparent and make visible the 'x' image.
              */
             mContent.setBackgroundColor(Color.TRANSPARENT);
             mWebView.setVisibility(View.VISIBLE);
