diff --git a/.arcconfig b/.arcconfig
deleted file mode 100644
index e5b788da0..000000000
--- a/.arcconfig
+++ /dev/null
@@ -1,11 +0,0 @@
-{
-  "project_id" : "facebook-android-sdk",
-  "conduit_uri" : "https://phabricator.fb.com/api/",
-  "copyright_holder" : "Facebook",
-  "phutil_libraries" : {
-    "android-sdk-arcanist" : "internal/arcanist"
-  },
-  "arcanist_configuration" : "FacebookAndroidSDKArcanistConfiguration",
-  "unit_engine" : "AndroidSdkUnitTestEngine",
-  "lint_engine" : "AndroidSdkLintEngine"
-}
diff --git a/.buckconfig b/.buckconfig
deleted file mode 100644
index ed8b51685..000000000
--- a/.buckconfig
+++ /dev/null
@@ -1,22 +0,0 @@
-# .buckconfig.local is in .gitignore, so you do not have to worry about checking your
-# personal customizations to Buck into the repo.
-
-[java]
-    # This makes it possible to determine the package of a
-    # Java file from the path alone.
-    src_roots = /facebook/src/, /samples/HelloFacebookSample/src/
-
-    # We target gingerbread. Ensure that libraries target that.
-    source_level = 7
-    target_level = 7
-
-[build]
-    build_dependencies = FIRST_ORDER_ONLY
-
-[alias]
-    sdk = //facebook:android-sdk
-    hello-facebook = //samples/HelloFacebookSample:app
-    iconicus = //samples/Iconicus:app
-    rps = //samples/RPSSample:app
-    scrumptious = //samples/Scrumptious:app
-    switch-user = //samples/SwitchUserSample:app
diff --git a/.buckversion b/.buckversion
deleted file mode 100644
index 33b8b7e09..000000000
--- a/.buckversion
+++ /dev/null
@@ -1 +0,0 @@
-edff8b2b8818bb64982837158dd546a66b6ef6c2
diff --git a/.gitignore b/.gitignore
index 1d6218e3e..b43ca86b3 100644
--- a/.gitignore
+++ b/.gitignore
@@ -11,6 +11,7 @@
 # generated files
 bin/
 gen/
+libs/
 
 # Local configuration file (sdk path, etc)
 local.properties
@@ -33,6 +34,10 @@ proguard/
 build
 
 # Buck
+BUCK*
+.buckconfig
+.buckversion
+keystores/
 /buck-cache/
 /buck-out/
 /.buckconfig.local
@@ -43,14 +48,10 @@ build
 # vim temp files
 *.swp
 
-# Arc generated
-.phutil_module_cache
-
 *~
 *.DS_Store
 *java#
 *.settings
-.arc/
 out/
 facebook/doc/
 facebook/tests/lint.xml
diff --git a/README.mdown b/README.mdown
index 2c0d09c85..bdb321d82 100644
--- a/README.mdown
+++ b/README.mdown
@@ -15,11 +15,87 @@ TRY IT OUT
 
 FEATURES
 --------
-* Login - https://developers.facebook.com/docs/facebook-login
-* Sharing - https://developers.facebook.com/docs/sharing
+* Login     - https://developers.facebook.com/docs/facebook-login
+* Sharing   - https://developers.facebook.com/docs/sharing
+* Places    - https://developers.facebook.com/docs/places
+* Messenger - https://developers.facebook.com/docs/messenger-expressions
 * App Links - https://developers.facebook.com/docs/applinks
+* Analytics - https://developers.facebook.com/docs/analytics
 * Graph API - https://developers.facebook.com/docs/android/graph
-* Analytics for Apps - https://developers.facebook.com/docs/analytics
+
+STRUCTURE
+---------
+The SDK is separated into modules with the following structure. Each box represents a module with an 
+estimated size when included into an app (when included using proguard and supporting a single language). 
+
+    +--------------------------------------------------------------+
+    |                                                              |
+    |  Facebook-android-sdk : 335.39 kb                            |
+    |                                                              |
+    +--------------------------------------------------------------+
+    +----------+ +----------+ +----------+ +----------+ +----------+
+    |          | |          | |          | |          | |          |
+    |          | |          | |          | |          | |          |
+    | Facebook | | Facebook | | Facebook | | Facebook | | Facebook |
+    | -Login : | | -Share : | | -Places :| |-Messenger: |-Applinks:|
+    |          | |          | |          | |          | |          |
+    | 246.66 kb| | 247.92 kb| | 53.48 kb | | 91.96 kb | | 67.00 kb |
+    +----------+ +----------+ |          | |          | |          |
+    +-----------------------+ |          | |          | |          |
+    |                       | |          | |          | |          |
+    | Facebook-Common : N/A | |          | |          | |          |
+    |                       | |          | |          | |          |
+    +-----------------------+ +----------+ +----------+ +----------+
+    +--------------------------------------------------------------+
+    |                                                              |
+    | Facebook-Core : 52.46 kb                                     |
+    |                                                              |
+    +--------------------------------------------------------------+
+    
+Example: Including the Facebook-Login module (which depends on Facebook-Common and Facebook-Core) would
+increase your app's size by an estimated 243.91 kb and including just Facebook-Core would only increase
+your size by 50.98 kb.
+
+USAGE
+-----
+Facebook SDKs are broken up into separate modules as shown above. To ensure the most optimized use of
+space only install the modules that you intend to use. To get started, see the Installation section below.
+
+INSTALLATION
+------------
+Facebook SDKs are published to Maven as independent modules. To utilize a feature listed above
+include the appropriate dependency (or dependencies) listed below in your `app/build.gradle` file. 
+    
+    dependencies {
+        // Facebook Core only (Analytics)
+        compile 'com.facebook.android:facebook-core:4.27'
+        
+        // Facebook Login only
+        compile 'com.facebook.android:facebook-login:4.27'
+        
+        // Facebook Share only
+        compile 'com.facebook.android:facebook-share:4.27'
+        
+        // Facebook Places only
+        compile 'com.facebook.android:facebook-places:4.27'
+        
+        // Facbeook Messenger only
+        compile 'com.facebook.android:facebook-messenger:4.27'
+        
+        // Facebook App Links only
+        compile 'com.facebook.android:facebook-applinks:4.27'
+        
+        // Facebook Android SDK (everything)
+        compile 'com.facebook.android:facebook-android-sdk:4.27'
+    }
+
+You may also need to add the following to your project/build.gradle file.
+
+    buildscript {
+        repositories {
+            mavenCentral() 
+        }
+    }
 
 GIVE FEEDBACK
 -------------
diff --git a/build.gradle b/build.gradle
index 4ea313abc..e5c5761c8 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,15 +1,22 @@
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 buildscript {
     repositories {
+        jcenter()
         mavenCentral()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.1.3'
+        classpath 'com.android.tools.build:gradle:2.3.3'
     }
 }
 
 allprojects {
     repositories {
         mavenCentral()
+        jcenter()
+        maven {
+            url "https://maven.google.com"
+        }
     }
+
+    project.apply from: "${rootDir}/constants.gradle"
 }
diff --git a/constants.gradle b/constants.gradle
new file mode 100644
index 000000000..2b95ec8a1
--- /dev/null
+++ b/constants.gradle
@@ -0,0 +1,7 @@
+project.ext {
+    buildTools = "25.0.3"
+    supportLibraryVersion = "25.3.1"
+    compileSdk = 25
+    minSdk = 15
+    targetSdk = 25
+}
\ No newline at end of file
diff --git a/facebook-applinks/.gitignore b/facebook-applinks/.gitignore
new file mode 100644
index 000000000..796b96d1c
--- /dev/null
+++ b/facebook-applinks/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/facebook-applinks/build.gradle b/facebook-applinks/build.gradle
new file mode 100644
index 000000000..e3756d51b
--- /dev/null
+++ b/facebook-applinks/build.gradle
@@ -0,0 +1,33 @@
+apply plugin: 'com.android.library'
+
+project.group 'com.facebook.android'
+
+project.ext.name = 'Facebook-Applinks-Android-SDK'
+project.ext.artifactId = "facebook-applinks"
+project.ext.description = 'Facebook Applinks Android SDK'
+project.ext.url = 'https://github.com/facebook/facebook-android-sdk/facebook-applinks'
+
+dependencies {
+    // Facebook Dependencies
+    compile project(':facebook-core')
+}
+
+android {
+    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
+    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
+
+    defaultConfig {
+        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
+        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
+        consumerProguardFiles 'proguard-rules.pro'
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+apply from: "${rootDir}/maven.gradle"
diff --git a/facebook-applinks/proguard-rules.pro b/facebook-applinks/proguard-rules.pro
new file mode 100644
index 000000000..3d8585b06
--- /dev/null
+++ b/facebook-applinks/proguard-rules.pro
@@ -0,0 +1,33 @@
+# To enable ProGuard in your project, edit project.properties
+# to define the proguard.config property as described in that file.
+#
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in ${sdk.dir}/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the ProGuard
+# include property in project.properties.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+-keepclassmembers class * implements java.io.Serializable {
+    private static final java.io.ObjectStreamField[] serialPersistentFields;
+    private void writeObject(java.io.ObjectOutputStream);
+    private void readObject(java.io.ObjectInputStream);
+    java.lang.Object writeReplace();
+    java.lang.Object readResolve();
+}
+
+-keepnames class com.facebook.FacebookActivity
+-keepnames class com.facebook.CustomTabActivity
+
+-keep class com.facebook.applinks.AppLinks
\ No newline at end of file
diff --git a/facebook/src/main/res/values-bn/messenger_button_strings.xml b/facebook-applinks/src/main/AndroidManifest.xml
similarity index 86%
rename from facebook/src/main/res/values-bn/messenger_button_strings.xml
rename to facebook-applinks/src/main/AndroidManifest.xml
index 633acf2b0..52fc26c0a 100644
--- a/facebook/src/main/res/values-bn/messenger_button_strings.xml
+++ b/facebook-applinks/src/main/AndroidManifest.xml
@@ -19,6 +19,11 @@
     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 -->
 
-<resources>
-  <string name="messenger_send_button_text">প্রেরণ করুন</string>
-</resources>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.facebook.applinks">
+
+    <application android:supportsRtl="true">
+
+    </application>
+
+</manifest>
diff --git a/facebook/src/main/java/com/facebook/applinks/AppLinkData.java b/facebook-applinks/src/main/java/com/facebook/applinks/AppLinkData.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/applinks/AppLinkData.java
rename to facebook-applinks/src/main/java/com/facebook/applinks/AppLinkData.java
index 13b016860..c656c65ce 100644
--- a/facebook/src/main/java/com/facebook/applinks/AppLinkData.java
+++ b/facebook-applinks/src/main/java/com/facebook/applinks/AppLinkData.java
@@ -163,6 +163,9 @@ private static void fetchDeferredAppLinkFromServer(
                     AttributionIdentifiers.getAttributionIdentifiers(context),
                     AppEventsLogger.getAnonymousAppDeviceGUID(context),
                     FacebookSdk.getLimitEventAndDataUsage(context));
+            Utility.setAppEventExtendedDeviceInfoParameters(
+                    deferredApplinkParams,
+                    FacebookSdk.getApplicationContext());
             deferredApplinkParams.put("application_package_name", context.getPackageName());
         } catch (JSONException e) {
             throw new FacebookException("An error occurred while preparing deferred app link", e);
diff --git a/facebook-applinks/src/main/java/com/facebook/applinks/AppLinks.java b/facebook-applinks/src/main/java/com/facebook/applinks/AppLinks.java
new file mode 100644
index 000000000..7fc64e106
--- /dev/null
+++ b/facebook-applinks/src/main/java/com/facebook/applinks/AppLinks.java
@@ -0,0 +1,5 @@
+// Copyright 2004-present Facebook. All Rights Reserved.
+
+package com.facebook.applinks;
+
+public class AppLinks { }
diff --git a/facebook/src/main/java/com/facebook/applinks/FacebookAppLinkResolver.java b/facebook-applinks/src/main/java/com/facebook/applinks/FacebookAppLinkResolver.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/applinks/FacebookAppLinkResolver.java
rename to facebook-applinks/src/main/java/com/facebook/applinks/FacebookAppLinkResolver.java
index 807d92f1f..6045c7129 100644
--- a/facebook/src/main/java/com/facebook/applinks/FacebookAppLinkResolver.java
+++ b/facebook-applinks/src/main/java/com/facebook/applinks/FacebookAppLinkResolver.java
@@ -28,15 +28,20 @@
 import com.facebook.GraphRequest;
 import com.facebook.GraphResponse;
 
-import bolts.AppLink;
-import bolts.AppLinkResolver;
-import bolts.Continuation;
-import bolts.Task;
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import java.util.*;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Map;
+
+import bolts.AppLink;
+import bolts.AppLinkResolver;
+import bolts.Continuation;
+import bolts.Task;
 
 /**
  * Provides an implementation for the {@link AppLinkResolver AppLinkResolver} interface that uses
@@ -93,7 +98,7 @@ public AppLink then(Task<Map<Uri, AppLink>> resolveUrisTask) throws Exception {
         StringBuilder graphRequestFields = new StringBuilder();
 
         for (Uri uri : uris) {
-            AppLink appLink = null;
+            AppLink appLink;
             synchronized (cachedAppLinks) {
                 appLink = cachedAppLinks.get(uri);
             }
@@ -153,7 +158,7 @@ public void onCompleted(GraphResponse response) {
                                 continue;
                             }
 
-                            JSONObject urlData = null;
+                            JSONObject urlData;
                             try {
                                 urlData = responseJson.getJSONObject(uri.toString());
                                 JSONObject appLinkData = urlData.getJSONObject(APP_LINK_KEY);
diff --git a/facebook-common/.gitignore b/facebook-common/.gitignore
new file mode 100644
index 000000000..796b96d1c
--- /dev/null
+++ b/facebook-common/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/facebook-common/build.gradle b/facebook-common/build.gradle
new file mode 100644
index 000000000..3e286586c
--- /dev/null
+++ b/facebook-common/build.gradle
@@ -0,0 +1,54 @@
+apply plugin: 'com.android.library'
+
+project.group 'com.facebook.android'
+
+project.ext.name = 'Facebook-Common-Android-SDK'
+project.ext.artifactId = "facebook-common"
+project.ext.description = 'Facebook Common Android SDK'
+project.ext.url = 'https://github.com/facebook/facebook-android-sdk/facebook-common'
+
+dependencies {
+    // Facebook Dependencies
+    compile project(':facebook-core')
+    // Support Dependencies
+    compile 'com.android.support:appcompat-v7:25.3.1'
+    compile 'com.android.support:cardview-v7:25.3.1'
+    compile 'com.android.support:customtabs:25.3.1'
+    compile 'com.android.support:support-v4:25.3.1'
+    // Third-party Dependencies
+    compile 'com.google.zxing:core:3.3.0'
+}
+
+android {
+    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
+    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
+
+    defaultConfig {
+        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
+        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
+        consumerProguardFiles 'proguard-rules.pro'
+        vectorDrawables.useSupportLibrary = true
+    }
+
+    aaptOptions {
+        additionalParameters "--no-version-vectors"
+    }
+
+    lintOptions {
+        abortOnError false
+    }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_7
+        targetCompatibility JavaVersion.VERSION_1_7
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+apply from: "${rootDir}/maven.gradle"
diff --git a/facebook-common/proguard-rules.pro b/facebook-common/proguard-rules.pro
new file mode 100644
index 000000000..5d0cc61f8
--- /dev/null
+++ b/facebook-common/proguard-rules.pro
@@ -0,0 +1,33 @@
+# To enable ProGuard in your project, edit project.properties
+# to define the proguard.config property as described in that file.
+#
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in ${sdk.dir}/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the ProGuard
+# include property in project.properties.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+-keepclassmembers class * implements java.io.Serializable {
+    private static final java.io.ObjectStreamField[] serialPersistentFields;
+    private void writeObject(java.io.ObjectOutputStream);
+    private void readObject(java.io.ObjectInputStream);
+    java.lang.Object writeReplace();
+    java.lang.Object readResolve();
+}
+
+-keepnames class com.facebook.FacebookActivity
+-keepnames class com.facebook.CustomTabActivity
+
+-keep class com.facebook.common.Common
diff --git a/facebook/src/main/res/values-pa/messenger_button_strings.xml b/facebook-common/src/main/AndroidManifest.xml
similarity index 70%
rename from facebook/src/main/res/values-pa/messenger_button_strings.xml
rename to facebook-common/src/main/AndroidManifest.xml
index 12057e2f7..11c353a70 100644
--- a/facebook/src/main/res/values-pa/messenger_button_strings.xml
+++ b/facebook-common/src/main/AndroidManifest.xml
@@ -19,6 +19,18 @@
     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 -->
 
-<resources>
-  <string name="messenger_send_button_text">ਭੇਜੋ</string>
-</resources>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.facebook.common">
+
+    <application android:supportsRtl="true">
+
+        <activity
+            android:name="com.facebook.FacebookActivity"
+            android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation"
+            android:theme="@style/com_facebook_activity_theme" />
+
+        <activity android:name="com.facebook.CustomTabMainActivity" />
+
+    </application>
+
+</manifest>
diff --git a/facebook/src/main/java/com/facebook/AccessTokenTracker.java b/facebook-common/src/main/java/com/facebook/AccessTokenTracker.java
similarity index 97%
rename from facebook/src/main/java/com/facebook/AccessTokenTracker.java
rename to facebook-common/src/main/java/com/facebook/AccessTokenTracker.java
index b25b6e4f6..c4f3ed29c 100644
--- a/facebook/src/main/java/com/facebook/AccessTokenTracker.java
+++ b/facebook-common/src/main/java/com/facebook/AccessTokenTracker.java
@@ -26,6 +26,9 @@
 import android.content.IntentFilter;
 import android.support.v4.content.LocalBroadcastManager;
 
+import com.facebook.AccessToken;
+import com.facebook.AccessTokenManager;
+import com.facebook.FacebookSdk;
 import com.facebook.internal.Validate;
 
 
diff --git a/facebook/src/main/java/com/facebook/CustomTabActivity.java b/facebook-common/src/main/java/com/facebook/CustomTabActivity.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/CustomTabActivity.java
rename to facebook-common/src/main/java/com/facebook/CustomTabActivity.java
diff --git a/facebook/src/main/java/com/facebook/CustomTabMainActivity.java b/facebook-common/src/main/java/com/facebook/CustomTabMainActivity.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/CustomTabMainActivity.java
rename to facebook-common/src/main/java/com/facebook/CustomTabMainActivity.java
index f29c027fb..004852f94 100644
--- a/facebook/src/main/java/com/facebook/CustomTabMainActivity.java
+++ b/facebook-common/src/main/java/com/facebook/CustomTabMainActivity.java
@@ -29,6 +29,7 @@
 import android.os.Bundle;
 import android.support.v4.content.LocalBroadcastManager;
 
+import com.facebook.FacebookSdk;
 import com.facebook.internal.CustomTab;
 
 public class CustomTabMainActivity extends Activity {
diff --git a/facebook/src/main/java/com/facebook/FacebookActivity.java b/facebook-common/src/main/java/com/facebook/FacebookActivity.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/FacebookActivity.java
rename to facebook-common/src/main/java/com/facebook/FacebookActivity.java
index ded4c9660..3c691db22 100644
--- a/facebook/src/main/java/com/facebook/FacebookActivity.java
+++ b/facebook-common/src/main/java/com/facebook/FacebookActivity.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -28,6 +28,7 @@
 import android.support.v4.app.FragmentManager;
 import android.util.Log;
 
+import com.facebook.common.R;
 import com.facebook.internal.FacebookDialogFragment;
 import com.facebook.internal.NativeProtocol;
 import com.facebook.login.LoginFragment;
diff --git a/facebook/src/main/java/com/facebook/FacebookAuthorizationException.java b/facebook-common/src/main/java/com/facebook/FacebookAuthorizationException.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/FacebookAuthorizationException.java
rename to facebook-common/src/main/java/com/facebook/FacebookAuthorizationException.java
index 1997e8057..b61765e7a 100644
--- a/facebook/src/main/java/com/facebook/FacebookAuthorizationException.java
+++ b/facebook-common/src/main/java/com/facebook/FacebookAuthorizationException.java
@@ -20,6 +20,8 @@
 
 package com.facebook;
 
+import com.facebook.FacebookException;
+
 /**
  * An Exception indicating that Login failed.
  */
diff --git a/facebook/src/main/java/com/facebook/FacebookButtonBase.java b/facebook-common/src/main/java/com/facebook/FacebookButtonBase.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/FacebookButtonBase.java
rename to facebook-common/src/main/java/com/facebook/FacebookButtonBase.java
index 0192206cd..5cde8d40f 100644
--- a/facebook/src/main/java/com/facebook/FacebookButtonBase.java
+++ b/facebook-common/src/main/java/com/facebook/FacebookButtonBase.java
@@ -35,8 +35,10 @@
 import android.view.View;
 import android.widget.Button;
 
+import com.facebook.FacebookException;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.internal.FragmentWrapper;
+import com.facebook.common.R;
 
 /**
  * A base class for a facebook button.
diff --git a/facebook/src/main/java/com/facebook/FacebookCallback.java b/facebook-common/src/main/java/com/facebook/FacebookCallback.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/FacebookCallback.java
rename to facebook-common/src/main/java/com/facebook/FacebookCallback.java
index b25092c1d..222dc5cf9 100644
--- a/facebook/src/main/java/com/facebook/FacebookCallback.java
+++ b/facebook-common/src/main/java/com/facebook/FacebookCallback.java
@@ -20,6 +20,8 @@
 
 package com.facebook;
 
+import com.facebook.FacebookException;
+
 /**
  * A callback class for the Facebook SDK.
  */
diff --git a/facebook/src/main/java/com/facebook/FacebookDialog.java b/facebook-common/src/main/java/com/facebook/FacebookDialog.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/FacebookDialog.java
rename to facebook-common/src/main/java/com/facebook/FacebookDialog.java
index 5af094bc6..f66e8125d 100644
--- a/facebook/src/main/java/com/facebook/FacebookDialog.java
+++ b/facebook-common/src/main/java/com/facebook/FacebookDialog.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -20,6 +20,8 @@
 
 package com.facebook;
 
+import com.facebook.CallbackManager;
+
 /**
  * Represents dialogs provided by Facebook
  */
diff --git a/facebook/src/main/java/com/facebook/FacebookDialogException.java b/facebook-common/src/main/java/com/facebook/FacebookDialogException.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/FacebookDialogException.java
rename to facebook-common/src/main/java/com/facebook/FacebookDialogException.java
index 4a336fa28..67ddb452d 100644
--- a/facebook/src/main/java/com/facebook/FacebookDialogException.java
+++ b/facebook-common/src/main/java/com/facebook/FacebookDialogException.java
@@ -20,6 +20,8 @@
 
 package com.facebook;
 
+import com.facebook.FacebookException;
+
 /**
  * Represents an error condition relating to displaying a Facebook Web dialog.
  */
diff --git a/facebook/src/test/java/com/facebook/GraphUtilTest.java b/facebook-common/src/main/java/com/facebook/LoginStatusCallback.java
similarity index 64%
rename from facebook/src/test/java/com/facebook/GraphUtilTest.java
rename to facebook-common/src/main/java/com/facebook/LoginStatusCallback.java
index a89fcf846..d4de3939d 100644
--- a/facebook/src/test/java/com/facebook/GraphUtilTest.java
+++ b/facebook-common/src/main/java/com/facebook/LoginStatusCallback.java
@@ -20,22 +20,27 @@
 
 package com.facebook;
 
-import com.facebook.internal.GraphUtil;
-import com.facebook.internal.NativeProtocol;
+import com.facebook.AccessToken;
 
-import org.json.JSONObject;
-import org.junit.Test;
+/**
+ * A callback class for getting the Login Status of a user.
+ */
+public interface LoginStatusCallback {
 
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.when;
+    /**
+     * Called when an access token is able to be retrieved successfully.
+     * @param accessToken The access token retrieved for the user
+     */
+    void onCompleted(final AccessToken accessToken);
 
-import static org.junit.Assert.*;
+    /**
+     * Called when an access token could not be retrieved.
+     */
+    void onFailure();
 
-public class GraphUtilTest extends FacebookTestCase {
-    @Test
-    public void testIsOpenGraphObjectForPost() {
-        JSONObject jsonObject = mock(JSONObject.class);
-        when(jsonObject.optBoolean(NativeProtocol.OPEN_GRAPH_CREATE_OBJECT_KEY)).thenReturn(true);
-        assertTrue(GraphUtil.isOpenGraphObjectForPost(jsonObject));
-    }
+    /**
+     * Called when there was an error getting the login status of a user.
+     * @param exception The error that occurred
+     */
+    void onError(final Exception exception);
 }
diff --git a/facebook-common/src/main/java/com/facebook/ShareGraphRequest.java b/facebook-common/src/main/java/com/facebook/ShareGraphRequest.java
new file mode 100644
index 000000000..436d3561d
--- /dev/null
+++ b/facebook-common/src/main/java/com/facebook/ShareGraphRequest.java
@@ -0,0 +1,101 @@
+/*
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook;
+
+import android.net.Uri;
+import android.os.Bundle;
+
+import com.facebook.AccessToken;
+import com.facebook.FacebookException;
+import com.facebook.GraphRequest;
+import com.facebook.HttpMethod;
+import com.facebook.internal.NativeProtocol;
+import com.facebook.share.internal.OpenGraphJSONUtility;
+import com.facebook.share.model.ShareOpenGraphObject;
+import com.facebook.share.model.SharePhoto;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.Locale;
+
+public class ShareGraphRequest {
+
+    /**
+     * Create an User Owned Open Graph object
+     *
+     * Use this method to create an open graph object, which can then be posted utilizing the same
+     * GraphRequest methods as other GraphRequests.
+     *
+     * @param openGraphObject The open graph object to create. Only SharePhotos with the imageUrl
+     *                        set are accepted through this helper method.
+     * @return GraphRequest for creating the given openGraphObject
+     * @throws FacebookException thrown in the case of a JSONException or in the case of invalid
+     *                           format for SharePhoto (missing imageUrl)
+     */
+
+    public static GraphRequest createOpenGraphObject(final ShareOpenGraphObject openGraphObject)
+            throws FacebookException {
+        String type = openGraphObject.getString("type");
+        if (type == null) {
+            type = openGraphObject.getString("og:type");
+        }
+
+        if (type == null) {
+            throw new FacebookException("Open graph object type cannot be null");
+        }
+        try {
+            JSONObject stagedObject = (JSONObject) OpenGraphJSONUtility.toJSONValue(
+                    openGraphObject,
+                    new OpenGraphJSONUtility.PhotoJSONProcessor() {
+                        @Override
+                        public JSONObject toJSONObject(SharePhoto photo) {
+                            Uri photoUri = photo.getImageUrl();
+                            JSONObject photoJSONObject = new JSONObject();
+                            try {
+                                photoJSONObject.put(
+                                        NativeProtocol.IMAGE_URL_KEY, photoUri.toString());
+                            } catch (Exception e) {
+                                throw new FacebookException("Unable to attach images", e);
+                            }
+                            return photoJSONObject;
+                        }
+                    });
+            String ogType = type;
+            Bundle parameters = new Bundle();
+            parameters.putString("object", stagedObject.toString());
+
+            String graphPath = String.format(
+                    Locale.ROOT, "%s/%s",
+                    "me",
+                    "objects/" + ogType);
+            return new GraphRequest(
+                    AccessToken.getCurrentAccessToken(),
+                    graphPath,
+                    parameters,
+                    HttpMethod.POST);
+        }
+        catch(JSONException e){
+            throw new FacebookException(e.getMessage());
+        }
+    }
+
+}
diff --git a/facebook-common/src/main/java/com/facebook/WebDialog.java b/facebook-common/src/main/java/com/facebook/WebDialog.java
new file mode 100644
index 000000000..168b31b48
--- /dev/null
+++ b/facebook-common/src/main/java/com/facebook/WebDialog.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook;
+
+public class WebDialog {
+
+    private WebDialog() { /* no instances */ }
+
+    /**
+     * Gets the theme used by {@link com.facebook.internal.WebDialog}
+     * @return the theme
+     */
+    public static int getWebDialogTheme() {
+        return com.facebook.internal.WebDialog.getWebDialogTheme();
+    }
+
+    /**
+     * Sets the theme used by {@link com.facebook.internal.WebDialog}
+     * @param theme A theme to use
+     */
+    public static void setWebDialogTheme(int theme) {
+        com.facebook.internal.WebDialog.setWebDialogTheme(theme);
+    }
+}
diff --git a/facebook-common/src/main/java/com/facebook/common/Common.java b/facebook-common/src/main/java/com/facebook/common/Common.java
new file mode 100644
index 000000000..af14a0253
--- /dev/null
+++ b/facebook-common/src/main/java/com/facebook/common/Common.java
@@ -0,0 +1,5 @@
+// Copyright 2004-present Facebook. All Rights Reserved.
+
+package com.facebook.common;
+
+public class Common { }
diff --git a/facebook-common/src/main/java/com/facebook/devicerequests/internal/DeviceRequestsHelper.java b/facebook-common/src/main/java/com/facebook/devicerequests/internal/DeviceRequestsHelper.java
new file mode 100644
index 000000000..500f27108
--- /dev/null
+++ b/facebook-common/src/main/java/com/facebook/devicerequests/internal/DeviceRequestsHelper.java
@@ -0,0 +1,215 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.devicerequests.internal;
+
+import android.annotation.TargetApi;
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.Color;
+import android.net.nsd.NsdManager;
+import android.net.nsd.NsdServiceInfo;
+import android.os.Build;
+
+import com.facebook.FacebookSdk;
+import com.facebook.internal.FetchedAppSettingsManager;
+import com.facebook.internal.SmartLoginOption;
+import com.google.zxing.BarcodeFormat;
+import com.google.zxing.EncodeHintType;
+import com.google.zxing.MultiFormatWriter;
+import com.google.zxing.WriterException;
+import com.google.zxing.common.BitMatrix;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.EnumMap;
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * com.facebook.devicerequests.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public class DeviceRequestsHelper {
+
+    public static final String DEVICE_INFO_PARAM = "device_info";
+
+    static final String DEVICE_INFO_DEVICE = "device";
+    static final String DEVICE_INFO_MODEL = "model";
+
+    static final String SDK_HEADER = "fbsdk";
+    static final String SDK_FLAVOR = "android";
+
+    static final String SERVICE_TYPE = "_fb._tcp.";
+
+    private static HashMap<String, NsdManager.RegistrationListener> deviceRequestsListeners =
+            new HashMap<>();
+
+    public static String getDeviceInfo() {
+        // Device info
+        // We don't need all the information in Utility.setAppEventExtendedDeviceInfoParameters
+        // We only want the model so we can show it to the user, so they know which device
+        // the login request comes from
+        JSONObject deviceInfo = new JSONObject();
+        try {
+            deviceInfo.put(DEVICE_INFO_DEVICE, Build.DEVICE);
+            deviceInfo.put(DEVICE_INFO_MODEL, Build.MODEL);
+        } catch (JSONException ignored) {
+        }
+
+        return deviceInfo.toString();
+    }
+
+    public static boolean startAdvertisementService(String userCode) {
+        if (isAvailable()) {
+            return startAdvertisementServiceImpl(userCode);
+        }
+
+        return false;
+    }
+
+    /*
+    returns true if smart login is enabled and the android api level is supported.
+     */
+    public static boolean isAvailable() {
+        return (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) &&
+                FetchedAppSettingsManager.getAppSettingsWithoutQuery(FacebookSdk.getApplicationId()).
+                        getSmartLoginOptions().contains(SmartLoginOption.Enabled);
+    }
+
+    public static Bitmap generateQRCode(final String url) {
+        Bitmap qrCode = null;
+        Map<EncodeHintType, Object> hints = new EnumMap<>(EncodeHintType.class);
+        hints.put(EncodeHintType.MARGIN, 2);
+        try {
+            BitMatrix matrix = new MultiFormatWriter()
+                    .encode(url, BarcodeFormat.QR_CODE, 200, 200, hints);
+
+            int h = matrix.getHeight();
+            int w = matrix.getWidth();
+            int[] pixels = new int[h * w];
+
+            for (int i = 0; i < h; i++) {
+                int offset = i * w;
+                for (int j = 0; j < w; j++) {
+                    pixels[offset + j] =
+                            matrix.get(j, i) ? Color.BLACK : Color.WHITE;
+                }
+            }
+
+            qrCode = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888);
+            qrCode.setPixels(pixels, 0, w, 0, 0, w, h);
+
+        } catch (WriterException ignored) {
+            // ignored because exception would be thrown from ZXing library.
+        }
+
+        return qrCode;
+    }
+
+    public static void cleanUpAdvertisementService(String userCode) {
+        cleanUpAdvertisementServiceImpl(userCode);
+    }
+
+    @TargetApi(16)
+    private static boolean startAdvertisementServiceImpl(final String userCode) {
+        if (deviceRequestsListeners.containsKey(userCode)) {
+            return true;
+        }
+
+        // Dots in the version will mess up the Bonjour DNS record parsing
+        String sdkVersion = FacebookSdk.getSdkVersion().replace('.', '|');
+        // Other SDKs that adopt this feature should use different flavor name
+        // The whole name should not exceed 60 characters
+        final String nsdServiceName = String.format("%s_%s_%s",
+                // static identifier
+                SDK_HEADER,
+                // sdk type and version
+                // client app parses the string based on this version
+                String.format("%s-%s",
+                        SDK_FLAVOR,
+                        sdkVersion
+                ),
+
+                // Additional fields should be added here
+
+                // short code for the login flow
+                userCode
+        );
+
+        NsdServiceInfo nsdLoginAdvertisementService = new NsdServiceInfo();
+        nsdLoginAdvertisementService.setServiceType(SERVICE_TYPE);
+        nsdLoginAdvertisementService.setServiceName(nsdServiceName);
+        nsdLoginAdvertisementService.setPort(80);
+
+        NsdManager nsdManager = (NsdManager)FacebookSdk
+                .getApplicationContext()
+                .getSystemService(Context.NSD_SERVICE);
+
+        NsdManager.RegistrationListener nsdRegistrationListener =
+                new NsdManager.RegistrationListener() {
+                    @Override
+                    public void onServiceRegistered(NsdServiceInfo NsdServiceInfo) {
+                        // Android may have changed the service name in order to resolve a conflict
+                        if (!nsdServiceName.equals(NsdServiceInfo.getServiceName())) {
+                            cleanUpAdvertisementService(userCode);
+                        }
+                    }
+
+                    @Override
+                    public void onServiceUnregistered(NsdServiceInfo serviceInfo) {
+                    }
+
+                    @Override
+                    public void onRegistrationFailed(NsdServiceInfo serviceInfo, int errorCode) {
+                        cleanUpAdvertisementService(userCode);
+                    }
+
+                    @Override
+                    public void onUnregistrationFailed(NsdServiceInfo serviceInfo, int errorCode) {
+                    }
+                };
+
+        deviceRequestsListeners.put(userCode, nsdRegistrationListener);
+
+        nsdManager.registerService(nsdLoginAdvertisementService,
+                NsdManager.PROTOCOL_DNS_SD,
+                nsdRegistrationListener);
+
+        return true;
+    }
+
+    @TargetApi(16)
+    private static void cleanUpAdvertisementServiceImpl(String userCode) {
+        NsdManager.RegistrationListener nsdRegistrationListener =
+                deviceRequestsListeners.get(userCode);
+        if (nsdRegistrationListener != null) {
+            NsdManager nsdManager = (NsdManager)FacebookSdk
+                    .getApplicationContext()
+                    .getSystemService(Context.NSD_SERVICE);
+
+            nsdManager.unregisterService(nsdRegistrationListener);
+
+            deviceRequestsListeners.remove(userCode);
+        }
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/internal/AppCall.java b/facebook-common/src/main/java/com/facebook/internal/AppCall.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/internal/AppCall.java
rename to facebook-common/src/main/java/com/facebook/internal/AppCall.java
diff --git a/facebook/src/main/java/com/facebook/internal/CustomTab.java b/facebook-common/src/main/java/com/facebook/internal/CustomTab.java
similarity index 96%
rename from facebook/src/main/java/com/facebook/internal/CustomTab.java
rename to facebook-common/src/main/java/com/facebook/internal/CustomTab.java
index 91c345222..22dcad509 100644
--- a/facebook/src/main/java/com/facebook/internal/CustomTab.java
+++ b/facebook-common/src/main/java/com/facebook/internal/CustomTab.java
@@ -28,6 +28,8 @@
 import android.support.customtabs.CustomTabsIntent;
 
 import com.facebook.FacebookSdk;
+import com.facebook.internal.ServerProtocol;
+import com.facebook.internal.Utility;
 
 public class CustomTab {
 
diff --git a/facebook/src/main/java/com/facebook/internal/DialogFeature.java b/facebook-common/src/main/java/com/facebook/internal/DialogFeature.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/internal/DialogFeature.java
rename to facebook-common/src/main/java/com/facebook/internal/DialogFeature.java
diff --git a/facebook/src/main/java/com/facebook/internal/DialogPresenter.java b/facebook-common/src/main/java/com/facebook/internal/DialogPresenter.java
similarity index 91%
rename from facebook/src/main/java/com/facebook/internal/DialogPresenter.java
rename to facebook-common/src/main/java/com/facebook/internal/DialogPresenter.java
index d2f934bd3..eca10cdf1 100644
--- a/facebook/src/main/java/com/facebook/internal/DialogPresenter.java
+++ b/facebook-common/src/main/java/com/facebook/internal/DialogPresenter.java
@@ -25,12 +25,16 @@
 import android.content.Intent;
 import android.net.Uri;
 import android.os.Bundle;
-import android.support.v4.app.Fragment;
 
 import com.facebook.FacebookActivity;
 import com.facebook.FacebookException;
 import com.facebook.FacebookSdk;
 import com.facebook.appevents.AppEventsLogger;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.NativeProtocol;
+import com.facebook.internal.ServerProtocol;
+import com.facebook.internal.Utility;
+import com.facebook.internal.Validate;
 
 /**
  * com.facebook.internal is solely for the use of other packages within the
@@ -72,7 +76,7 @@ public static void present(AppCall appCall, FragmentWrapper fragmentWrapper) {
 
     public static boolean canPresentNativeDialogWithFeature(
             DialogFeature feature) {
-        return getProtocolVersionForNativeDialog(feature)
+        return getProtocolVersionForNativeDialog(feature).getProtocolVersion()
                 != NativeProtocol.NO_PROTOCOL_AVAILABLE;
     }
 
@@ -185,7 +189,9 @@ public static void setupAppCallForNativeDialog(
             DialogFeature feature) {
         Context context = FacebookSdk.getApplicationContext();
         String action = feature.getAction();
-        int protocolVersion = getProtocolVersionForNativeDialog(feature);
+        NativeProtocol.ProtocolVersionQueryResult protocolVersionResult =
+                getProtocolVersionForNativeDialog(feature);
+        int protocolVersion = protocolVersionResult.getProtocolVersion();
         if (protocolVersion == NativeProtocol.NO_PROTOCOL_AVAILABLE) {
             throw new FacebookException(
                     "Cannot present this dialog. This likely means that the " +
@@ -208,7 +214,7 @@ public static void setupAppCallForNativeDialog(
                 context,
                 appCall.getCallId().toString(),
                 action,
-                protocolVersion,
+                protocolVersionResult,
                 params);
         if (intent == null) {
             throw new FacebookException(
@@ -224,8 +230,8 @@ private static Uri getDialogWebFallbackUri(DialogFeature feature) {
         String action = feature.getAction();
         String applicationId = FacebookSdk.getApplicationId();
 
-        Utility.DialogFeatureConfig config =
-                Utility.getDialogFeatureConfig(applicationId, action, featureName);
+        FetchedAppSettings.DialogFeatureConfig config =
+                FetchedAppSettings.getDialogFeatureConfig(applicationId, action, featureName);
         Uri fallbackUrl = null;
         if (config != null) {
             fallbackUrl = config.getFallbackUrl();
@@ -234,7 +240,7 @@ private static Uri getDialogWebFallbackUri(DialogFeature feature) {
         return fallbackUrl;
     }
 
-    public static int getProtocolVersionForNativeDialog(
+    public static NativeProtocol.ProtocolVersionQueryResult getProtocolVersionForNativeDialog(
             DialogFeature feature) {
         String applicationId = FacebookSdk.getApplicationId();
         String action = feature.getAction();
@@ -251,8 +257,8 @@ public static int getProtocolVersionForNativeDialog(
             DialogFeature feature) {
         // Return the value from DialogFeatureConfig if available. Otherwise, just
         // default to the min-version
-        Utility.DialogFeatureConfig config =
-                Utility.getDialogFeatureConfig(applicationId, actionName, feature.name());
+        FetchedAppSettings.DialogFeatureConfig config =
+                FetchedAppSettings.getDialogFeatureConfig(applicationId, actionName, feature.name());
         if (config != null) {
             return config.getVersionSpec();
         } else {
diff --git a/facebook/src/main/java/com/facebook/internal/FacebookDialogBase.java b/facebook-common/src/main/java/com/facebook/internal/FacebookDialogBase.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/internal/FacebookDialogBase.java
rename to facebook-common/src/main/java/com/facebook/internal/FacebookDialogBase.java
index 3eabaf47c..b9b46c43f 100644
--- a/facebook/src/main/java/com/facebook/internal/FacebookDialogBase.java
+++ b/facebook-common/src/main/java/com/facebook/internal/FacebookDialogBase.java
@@ -30,6 +30,10 @@
 import com.facebook.FacebookException;
 import com.facebook.FacebookSdk;
 import com.facebook.LoggingBehavior;
+import com.facebook.internal.CallbackManagerImpl;
+import com.facebook.internal.Logger;
+import com.facebook.internal.Utility;
+import com.facebook.internal.Validate;
 
 import java.util.List;
 
diff --git a/facebook/src/main/java/com/facebook/internal/FacebookDialogFragment.java b/facebook-common/src/main/java/com/facebook/internal/FacebookDialogFragment.java
similarity index 97%
rename from facebook/src/main/java/com/facebook/internal/FacebookDialogFragment.java
rename to facebook-common/src/main/java/com/facebook/internal/FacebookDialogFragment.java
index 57d78ed6e..935d64fd5 100644
--- a/facebook/src/main/java/com/facebook/internal/FacebookDialogFragment.java
+++ b/facebook-common/src/main/java/com/facebook/internal/FacebookDialogFragment.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -31,6 +31,8 @@
 
 import com.facebook.FacebookException;
 import com.facebook.FacebookSdk;
+import com.facebook.internal.NativeProtocol;
+import com.facebook.internal.Utility;
 
 /**
  * com.facebook.internal is solely for the use of other packages within the
@@ -92,7 +94,7 @@ public void onComplete(Bundle values, FacebookException error) {
 
                 String redirectUrl =
                         String.format("fb%s://bridge/", FacebookSdk.getApplicationId());
-                webDialog = new FacebookWebFallbackDialog(activity, url, redirectUrl);
+                webDialog = FacebookWebFallbackDialog.newInstance(activity, url, redirectUrl);
                 webDialog.setOnCompleteListener(new WebDialog.OnCompleteListener() {
                     @Override
                     public void onComplete(Bundle values, FacebookException error) {
diff --git a/facebook/src/main/java/com/facebook/internal/FacebookWebFallbackDialog.java b/facebook-common/src/main/java/com/facebook/internal/FacebookWebFallbackDialog.java
similarity index 92%
rename from facebook/src/main/java/com/facebook/internal/FacebookWebFallbackDialog.java
rename to facebook-common/src/main/java/com/facebook/internal/FacebookWebFallbackDialog.java
index 9d945cdcd..3d501b255 100644
--- a/facebook/src/main/java/com/facebook/internal/FacebookWebFallbackDialog.java
+++ b/facebook-common/src/main/java/com/facebook/internal/FacebookWebFallbackDialog.java
@@ -27,6 +27,11 @@
 import android.os.Looper;
 import android.webkit.WebView;
 
+import com.facebook.internal.BundleJSONConverter;
+import com.facebook.internal.NativeProtocol;
+import com.facebook.internal.ServerProtocol;
+import com.facebook.internal.Utility;
+
 import org.json.JSONException;
 import org.json.JSONObject;
 
@@ -45,7 +50,16 @@
 
     private boolean waitingForDialogToClose;
 
-    public FacebookWebFallbackDialog(Context context, String url, String expectedRedirectUrl) {
+    public static FacebookWebFallbackDialog newInstance(
+            Context context,
+            String url,
+            String expectedRedirectUrl) {
+        WebDialog.initDefaultTheme(context);
+
+        return new FacebookWebFallbackDialog(context, url, expectedRedirectUrl);
+    }
+
+    private FacebookWebFallbackDialog(Context context, String url, String expectedRedirectUrl) {
         super(context, url);
 
         setExpectedRedirectUrl(expectedRedirectUrl);
diff --git a/facebook/src/main/java/com/facebook/internal/FragmentWrapper.java b/facebook-common/src/main/java/com/facebook/internal/FragmentWrapper.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/internal/FragmentWrapper.java
rename to facebook-common/src/main/java/com/facebook/internal/FragmentWrapper.java
index 990faa3a9..98a8249b3 100644
--- a/facebook/src/main/java/com/facebook/internal/FragmentWrapper.java
+++ b/facebook-common/src/main/java/com/facebook/internal/FragmentWrapper.java
@@ -26,6 +26,8 @@
 import android.support.v4.app.Fragment;
 import android.support.v4.app.FragmentActivity;
 
+import com.facebook.internal.Validate;
+
 public class FragmentWrapper {
     private Fragment supportFragment;
     private android.app.Fragment nativeFragment;
diff --git a/facebook/src/main/java/com/facebook/internal/LoginAuthorizationType.java b/facebook-common/src/main/java/com/facebook/internal/LoginAuthorizationType.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/internal/LoginAuthorizationType.java
rename to facebook-common/src/main/java/com/facebook/internal/LoginAuthorizationType.java
diff --git a/facebook/src/main/java/com/facebook/internal/PlatformServiceClient.java b/facebook-common/src/main/java/com/facebook/internal/PlatformServiceClient.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/internal/PlatformServiceClient.java
rename to facebook-common/src/main/java/com/facebook/internal/PlatformServiceClient.java
index 45b7dfab8..8d54147c9 100644
--- a/facebook/src/main/java/com/facebook/internal/PlatformServiceClient.java
+++ b/facebook-common/src/main/java/com/facebook/internal/PlatformServiceClient.java
@@ -26,6 +26,8 @@
 import android.content.ServiceConnection;
 import android.os.*;
 
+import com.facebook.internal.NativeProtocol;
+
 /**
  * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
  * Android. Use of any of the classes in this package is unsupported, and they may be modified or
diff --git a/facebook/src/main/java/com/facebook/internal/WebDialog.java b/facebook-common/src/main/java/com/facebook/internal/WebDialog.java
similarity index 92%
rename from facebook/src/main/java/com/facebook/internal/WebDialog.java
rename to facebook-common/src/main/java/com/facebook/internal/WebDialog.java
index 528d55d6e..045f88953 100644
--- a/facebook/src/main/java/com/facebook/internal/WebDialog.java
+++ b/facebook-common/src/main/java/com/facebook/internal/WebDialog.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -27,6 +27,8 @@
 import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageManager;
 import android.graphics.Bitmap;
 import android.graphics.Color;
 import android.graphics.drawable.Drawable;
@@ -61,7 +63,11 @@
 import com.facebook.GraphRequest;
 import com.facebook.GraphRequestAsyncTask;
 import com.facebook.GraphResponse;
-import com.facebook.R;
+import com.facebook.common.R;
+import com.facebook.internal.Logger;
+import com.facebook.internal.ServerProtocol;
+import com.facebook.internal.Utility;
+import com.facebook.internal.Validate;
 import com.facebook.share.internal.ShareConstants;
 import com.facebook.share.internal.ShareInternalUtility;
 import com.facebook.share.widget.ShareDialog;
@@ -75,6 +81,8 @@
 import java.util.concurrent.ConcurrentLinkedQueue;
 import java.util.concurrent.CountDownLatch;
 
+import static com.facebook.FacebookSdk.WEB_DIALOG_THEME;
+
 /**
  * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
  * Android. Use of any of the classes in this package is unsupported, and they may be modified or
@@ -106,6 +114,8 @@
     // translucent border around the webview
     private static final int BACKGROUND_GRAY = 0xCC000000;
 
+    private static final int DEFAULT_THEME = R.style.com_facebook_activity_theme;
+
     private String url;
     private String expectedRedirectUrl = REDIRECT_URI;
     private OnCompleteListener onCompleteListener;
@@ -117,6 +127,58 @@
     private boolean listenerCalled = false;
     private boolean isDetached = false;
     private boolean isPageFinished = false;
+    private static volatile int webDialogTheme;
+
+    protected static void initDefaultTheme(Context context) {
+        if (context == null) {
+            return;
+        }
+
+        ApplicationInfo ai;
+        try {
+            ai = context.getPackageManager().getApplicationInfo(
+                    context.getPackageName(), PackageManager.GET_META_DATA);
+        } catch (PackageManager.NameNotFoundException e) {
+            return;
+        }
+
+        if (ai == null || ai.metaData == null) {
+            return;
+        }
+
+
+        if (webDialogTheme == 0) {
+            setWebDialogTheme(ai.metaData.getInt(WEB_DIALOG_THEME));
+        }
+    }
+
+    public static WebDialog newInstance(
+            Context context,
+            String action,
+            Bundle parameters,
+            int theme,
+            OnCompleteListener listener) {
+        initDefaultTheme(context);
+
+        return new WebDialog(context, action, parameters, theme, listener);
+    }
+
+    /**
+     * Gets the theme used by {@link com.facebook.internal.WebDialog}
+     * @return the theme
+     */
+    public static int getWebDialogTheme() {
+        Validate.sdkInitialized();
+        return webDialogTheme;
+    }
+
+    /**
+     * Sets the theme used by {@link com.facebook.internal.WebDialog}
+     * @param theme A theme to use
+     */
+    public static void setWebDialogTheme(int theme) {
+        webDialogTheme = (theme != 0) ? theme : DEFAULT_THEME;
+    }
 
     /**
      * Interface that implements a listener to be called when the user's interaction with the
@@ -140,8 +202,8 @@
      * @param url     the URL of the Web Dialog to display; no validation is done on this URL, but it should
      *                be a valid URL pointing to a Facebook Web Dialog
      */
-    public WebDialog(Context context, String url) {
-        this(context, url, FacebookSdk.getWebDialogTheme());
+    protected WebDialog(Context context, String url) {
+        this(context, url, getWebDialogTheme());
     }
 
     /**
@@ -152,8 +214,8 @@ public WebDialog(Context context, String url) {
      *                be a valid URL pointing to a Facebook Web Dialog
      * @param theme   identifier of a theme to pass to the Dialog class
      */
-    public WebDialog(Context context, String url, int theme) {
-        super(context, theme == 0 ? FacebookSdk.getWebDialogTheme() : theme);
+    private WebDialog(Context context, String url, int theme) {
+        super(context, theme == 0 ? getWebDialogTheme() : theme);
         this.url = url;
     }
 
@@ -166,8 +228,13 @@ public WebDialog(Context context, String url, int theme) {
      * @param theme      identifier of a theme to pass to the Dialog class
      * @param listener the listener to notify, or null if no notification is desired
      */
-    public WebDialog(Context context, String action, Bundle parameters, int theme, OnCompleteListener listener) {
-        super(context, theme == 0 ? FacebookSdk.getWebDialogTheme() : theme);
+    private WebDialog(
+            Context context,
+            String action,
+            Bundle parameters,
+            int theme,
+            OnCompleteListener listener) {
+        super(context, theme == 0 ? getWebDialogTheme() : theme);
 
         if (parameters == null) {
             parameters = new Bundle();
@@ -399,7 +466,7 @@ protected void sendSuccessToListener(Bundle values) {
     protected void sendErrorToListener(Throwable error) {
         if (onCompleteListener != null && !listenerCalled) {
             listenerCalled = true;
-            FacebookException facebookException = null;
+            FacebookException facebookException;
             if (error instanceof FacebookException) {
                 facebookException = (FacebookException) error;
             } else {
@@ -672,7 +739,7 @@ public WebDialog build() {
                 parameters.putString(ServerProtocol.DIALOG_PARAM_APP_ID, applicationId);
             }
 
-            return new WebDialog(context, action, parameters, theme, listener);
+            return WebDialog.newInstance(context, action, parameters, theme, listener);
         }
 
         public String getApplicationId() {
diff --git a/facebook/src/main/java/com/facebook/login/CustomTabLoginMethodHandler.java b/facebook-common/src/main/java/com/facebook/login/CustomTabLoginMethodHandler.java
similarity index 97%
rename from facebook/src/main/java/com/facebook/login/CustomTabLoginMethodHandler.java
rename to facebook-common/src/main/java/com/facebook/login/CustomTabLoginMethodHandler.java
index 9298f6de5..06c5b33c4 100644
--- a/facebook/src/main/java/com/facebook/login/CustomTabLoginMethodHandler.java
+++ b/facebook-common/src/main/java/com/facebook/login/CustomTabLoginMethodHandler.java
@@ -37,6 +37,8 @@
 import com.facebook.FacebookRequestError;
 import com.facebook.FacebookSdk;
 import com.facebook.FacebookServiceException;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.ServerProtocol;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
@@ -110,7 +112,7 @@ private boolean isCustomTabsAllowed() {
 
     private boolean isCustomTabsEnabled() {
         final String appId = Utility.getMetadataApplicationId(loginClient.getActivity());
-        final Utility.FetchedAppSettings settings = Utility.getAppSettingsWithoutQuery(appId);
+        final FetchedAppSettings settings = FetchedAppSettingsManager.getAppSettingsWithoutQuery(appId);
         return settings != null && settings.getCustomTabsEnabled();
     }
 
diff --git a/facebook/src/main/java/com/facebook/login/DeviceAuthDialog.java b/facebook-common/src/main/java/com/facebook/login/DeviceAuthDialog.java
similarity index 73%
rename from facebook/src/main/java/com/facebook/login/DeviceAuthDialog.java
rename to facebook-common/src/main/java/com/facebook/login/DeviceAuthDialog.java
index b6f8c66d9..6e5b57d3e 100644
--- a/facebook/src/main/java/com/facebook/login/DeviceAuthDialog.java
+++ b/facebook-common/src/main/java/com/facebook/login/DeviceAuthDialog.java
@@ -20,8 +20,11 @@
 
 package com.facebook.login;
 
+import android.app.AlertDialog;
 import android.app.Dialog;
 import android.content.DialogInterface;
+import android.graphics.Bitmap;
+import android.graphics.drawable.BitmapDrawable;
 import android.os.Bundle;
 import android.os.Parcel;
 import android.os.Parcelable;
@@ -47,7 +50,12 @@
 import com.facebook.GraphRequestAsyncTask;
 import com.facebook.GraphResponse;
 import com.facebook.HttpMethod;
-import com.facebook.R;
+import com.facebook.common.R;
+import com.facebook.appevents.AppEventsLogger;
+import com.facebook.devicerequests.internal.DeviceRequestsHelper;
+import com.facebook.internal.AnalyticsEvents;
+import com.facebook.internal.FetchedAppSettingsManager;
+import com.facebook.internal.SmartLoginOption;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
 
@@ -55,6 +63,7 @@
 import org.json.JSONObject;
 
 import java.util.Date;
+import java.util.Locale;
 import java.util.concurrent.ScheduledFuture;
 import java.util.concurrent.TimeUnit;
 import java.util.concurrent.atomic.AtomicBoolean;
@@ -71,6 +80,7 @@
 
     private ProgressBar progressBar;
     private TextView confirmationCode;
+    private TextView instructions;
     private DeviceAuthMethodHandler deviceAuthMethodHandler;
     private AtomicBoolean completed = new AtomicBoolean();
     private volatile GraphRequestAsyncTask currentGraphRequestPoll;
@@ -81,6 +91,8 @@
     // Used to tell if we are destroying the fragment because it was dismissed or dismissing the
     // fragment because it is being destroyed.
     private boolean isBeingDestroyed = false;
+    private boolean isRetry = false;
+    private LoginClient.Request mRequest = null;
 
     @Nullable
     @Override
@@ -109,23 +121,8 @@ public View onCreateView(
     @Override
     public Dialog onCreateDialog(Bundle savedInstanceState) {
         dialog = new Dialog(getActivity(), R.style.com_facebook_auth_dialog);
-        LayoutInflater inflater = getActivity().getLayoutInflater();
-        View view = inflater.inflate(R.layout.com_facebook_device_auth_dialog_fragment, null);
-        progressBar = (ProgressBar)view.findViewById(R.id.progress_bar);
-        confirmationCode = (TextView)view.findViewById(R.id.confirmation_code);
 
-        Button cancelButton = (Button) view.findViewById(R.id.cancel_button);
-        cancelButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                onCancel();
-            }
-        });
-
-        TextView instructions = (TextView)view.findViewById(
-                R.id.com_facebook_device_auth_instructions);
-        instructions.setText(
-                Html.fromHtml(getString(R.string.com_facebook_device_auth_instructions)));
+        View view = initializeContentView(DeviceRequestsHelper.isAvailable() && !this.isRetry);
 
         dialog.setContentView(view);
         return dialog;
@@ -165,7 +162,8 @@ public void onDestroy() {
     }
 
     public void startLogin(final LoginClient.Request request) {
-        Bundle parameters = new Bundle();
+        this.mRequest = request;
+        final Bundle parameters = new Bundle();
         parameters.putString("scope", TextUtils.join(",", request.getPermissions()));
 
         String redirectUriString = request.getDeviceRedirectUriString();
@@ -175,6 +173,9 @@ public void startLogin(final LoginClient.Request request) {
 
         String accessToken = Validate.hasAppID()+ "|" + Validate.hasClientToken();
         parameters.putString(GraphRequest.ACCESS_TOKEN_PARAM, accessToken);
+        parameters.putString(DeviceRequestsHelper.DEVICE_INFO_PARAM,
+                             DeviceRequestsHelper.getDeviceInfo());
+
         GraphRequest graphRequest = new GraphRequest(
                 null,
                 DEVICE_LOGIN_ENDPOINT,
@@ -183,6 +184,9 @@ public void startLogin(final LoginClient.Request request) {
                 new GraphRequest.Callback() {
             @Override
             public void onCompleted(GraphResponse response) {
+                if (isBeingDestroyed) {
+                    return;
+                }
                 if (response.getError() != null) {
                     onError(response.getError().getException());
                     return;
@@ -208,9 +212,20 @@ public void onCompleted(GraphResponse response) {
     private void setCurrentRequestState(RequestState currentRequestState) {
         this.currentRequestState = currentRequestState;
         confirmationCode.setText(currentRequestState.getUserCode());
+        final Bitmap bitmap =
+                DeviceRequestsHelper.generateQRCode(currentRequestState.getAuthorizationUri());
+        final BitmapDrawable qrCode = new BitmapDrawable(getResources(), bitmap);
+        instructions.setCompoundDrawablesWithIntrinsicBounds(null, qrCode, null, null);
         confirmationCode.setVisibility(View.VISIBLE);
         progressBar.setVisibility(View.GONE);
 
+        if (!isRetry) {
+            if (DeviceRequestsHelper.startAdvertisementService(currentRequestState.getUserCode())) {
+                final AppEventsLogger logger = AppEventsLogger.newLogger(getContext());
+                logger.logSdkEvent(AnalyticsEvents.EVENT_SMART_LOGIN_SERVICE, null, null);
+            }
+        }
+
         // If we polled within the last interval schedule a poll else start a poll.
         if (currentRequestState.withinLastRefreshWindow()) {
             schedulePoll();
@@ -219,6 +234,32 @@ private void setCurrentRequestState(RequestState currentRequestState) {
         }
     }
 
+    private View initializeContentView(boolean isSmartLogin) {
+        View view;
+        LayoutInflater inflater = this.getActivity().getLayoutInflater();
+        if (isSmartLogin) {
+            view = inflater.inflate(R.layout.com_facebook_smart_device_dialog_fragment, null);
+        } else {
+            view = inflater.inflate(R.layout.com_facebook_device_auth_dialog_fragment, null);
+        }
+        progressBar = (ProgressBar)view.findViewById(R.id.progress_bar);
+        confirmationCode = (TextView)view.findViewById(R.id.confirmation_code);
+
+        Button cancelButton = (Button) view.findViewById(R.id.cancel_button);
+        cancelButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                onCancel();
+            }
+        });
+
+        instructions = (TextView) view.findViewById(
+                R.id.com_facebook_device_auth_instructions);
+        instructions.setText(
+                Html.fromHtml(getString(R.string.com_facebook_device_auth_instructions)));
+        return view;
+    }
+
     private void poll() {
         currentRequestState.setLastPoll(new Date().getTime());
         currentGraphRequestPoll = getPollRequest().executeAsync();
@@ -284,9 +325,37 @@ public void onCompleted(GraphResponse response) {
                 });
     }
 
+    private void presentConfirmation(final String userId,
+                                     final Utility.PermissionsPair permissions,
+                                     final String accessToken,
+                                     final String name) {
+        final String message = getResources().getString(
+            R.string.com_facebook_smart_login_confirmation_title);
+        final String continueFormat = getResources().getString(
+            R.string.com_facebook_smart_login_confirmation_continue_as);
+        final String cancel = getResources().getString(
+            R.string.com_facebook_smart_login_confirmation_cancel);
+        final String continueText = String.format(continueFormat, name);
+        AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
+        builder.setMessage(message)
+                .setCancelable(true)
+                .setNegativeButton(continueText, new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface alertDialog, int which) {
+                        completeLogin(userId, permissions, accessToken);
+                    }
+                })
+                .setPositiveButton(cancel, new DialogInterface.OnClickListener() {
+                    public void onClick(DialogInterface alertDialog, int which) {
+                        View view = initializeContentView(false);
+                        dialog.setContentView(view);
+                        startLogin(mRequest);
+                    }
+                });
+        builder.create().show();
+    }
     private void onSuccess(final String accessToken) {
         Bundle parameters = new Bundle();
-        parameters.putString("fields", "id,permissions");
+        parameters.putString("fields", "id,permissions,name");
         AccessToken temporaryToken = new AccessToken(
                 accessToken,
                 FacebookSdk.getApplicationId(),
@@ -316,35 +385,58 @@ public void onCompleted(GraphResponse response) {
 
                         String userId;
                         Utility.PermissionsPair permissions;
+                        String name;
                         try {
                             JSONObject jsonObject = response.getJSONObject();
                             userId = jsonObject.getString("id");
                             permissions = Utility.handlePermissionResponse(jsonObject);
+                            name = jsonObject.getString("name");
                         } catch (JSONException ex) {
                             onError(new FacebookException(ex));
                             return;
                         }
+                        DeviceRequestsHelper.cleanUpAdvertisementService(
+                                currentRequestState.getUserCode());
+
+                        boolean requireConfirm =
+                                FetchedAppSettingsManager.
+                                getAppSettingsWithoutQuery(FacebookSdk.getApplicationId()).
+                                getSmartLoginOptions().contains(SmartLoginOption.RequireConfirm);
+                        if (requireConfirm && !isRetry) {
+                            isRetry = true;
+                            presentConfirmation(userId, permissions, accessToken, name);
+                            return;
+                        }
 
-                        deviceAuthMethodHandler.onSuccess(
-                                accessToken,
-                                FacebookSdk.getApplicationId(),
-                                userId,
-                                permissions.getGrantedPermissions(),
-                                permissions.getDeclinedPermissions(),
-                                AccessTokenSource.DEVICE_AUTH,
-                                null,
-                                null);
-                        dialog.dismiss();
+                        completeLogin(userId, permissions, accessToken);
                     }
                 });
         request.executeAsync();
     }
 
+    private void completeLogin(String userId,
+                               Utility.PermissionsPair permissions,
+                               String accessToken) {
+        deviceAuthMethodHandler.onSuccess(
+                accessToken,
+                FacebookSdk.getApplicationId(),
+                userId,
+                permissions.getGrantedPermissions(),
+                permissions.getDeclinedPermissions(),
+                AccessTokenSource.DEVICE_AUTH,
+                null,
+                null);
+        dialog.dismiss();
+    }
+
     private void onError(FacebookException ex) {
         if (!completed.compareAndSet(false, true)) {
             return;
         }
 
+        if (currentRequestState != null) {
+            DeviceRequestsHelper.cleanUpAdvertisementService(currentRequestState.getUserCode());
+        }
         deviceAuthMethodHandler.onError(ex);
         dialog.dismiss();
     }
@@ -355,6 +447,10 @@ private void onCancel() {
             return;
         }
 
+        if (currentRequestState != null) {
+            DeviceRequestsHelper.cleanUpAdvertisementService(currentRequestState.getUserCode());
+        }
+
         if (deviceAuthMethodHandler != null) {
             // We are detached and cannot send a cancel message back
             deviceAuthMethodHandler.onCancel();
@@ -364,6 +460,7 @@ private void onCancel() {
     }
 
     private static class RequestState implements Parcelable{
+        private String authorizationUri;
         private String userCode;
         private String requestCode;
         private long interval;
@@ -371,12 +468,20 @@ private void onCancel() {
 
         RequestState() {}
 
+        public String getAuthorizationUri() {
+            return authorizationUri;
+        }
+
         public String getUserCode() {
             return userCode;
         }
 
         public void setUserCode(String userCode) {
             this.userCode = userCode;
+            this.authorizationUri = String.format(
+                    Locale.ENGLISH,
+                    "https://facebook.com/device?user_code=%1$s&qr=1",
+                    userCode);
         }
 
         public String getRequestCode() {
diff --git a/facebook/src/main/java/com/facebook/login/DeviceAuthMethodHandler.java b/facebook-common/src/main/java/com/facebook/login/DeviceAuthMethodHandler.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/login/DeviceAuthMethodHandler.java
rename to facebook-common/src/main/java/com/facebook/login/DeviceAuthMethodHandler.java
index 9539525f3..e034b18e8 100644
--- a/facebook/src/main/java/com/facebook/login/DeviceAuthMethodHandler.java
+++ b/facebook-common/src/main/java/com/facebook/login/DeviceAuthMethodHandler.java
@@ -20,7 +20,6 @@
 
 package com.facebook.login;
 
-import android.app.Dialog;
 import android.os.Parcel;
 import android.os.Parcelable;
 
diff --git a/facebook/src/main/java/com/facebook/login/FacebookLiteLoginMethodHandler.java b/facebook-common/src/main/java/com/facebook/login/FacebookLiteLoginMethodHandler.java
similarity index 92%
rename from facebook/src/main/java/com/facebook/login/FacebookLiteLoginMethodHandler.java
rename to facebook-common/src/main/java/com/facebook/login/FacebookLiteLoginMethodHandler.java
index a39406278..4de6dfa9b 100644
--- a/facebook/src/main/java/com/facebook/login/FacebookLiteLoginMethodHandler.java
+++ b/facebook-common/src/main/java/com/facebook/login/FacebookLiteLoginMethodHandler.java
@@ -20,19 +20,12 @@
 
 package com.facebook.login;
 
-import android.app.Activity;
-import android.content.ActivityNotFoundException;
 import android.content.Intent;
-import android.os.Bundle;
 import android.os.Parcel;
 import android.os.Parcelable;
 
-import com.facebook.AccessToken;
-import com.facebook.AccessTokenSource;
-import com.facebook.FacebookException;
 import com.facebook.internal.NativeProtocol;
 import com.facebook.internal.ServerProtocol;
-import com.facebook.internal.Utility;
 
 
 class FacebookLiteLoginMethodHandler extends NativeAppLoginMethodHandler {
diff --git a/facebook/src/main/java/com/facebook/login/GetTokenClient.java b/facebook-common/src/main/java/com/facebook/login/GetTokenClient.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/login/GetTokenClient.java
rename to facebook-common/src/main/java/com/facebook/login/GetTokenClient.java
diff --git a/facebook/src/main/java/com/facebook/login/GetTokenLoginMethodHandler.java b/facebook-common/src/main/java/com/facebook/login/GetTokenLoginMethodHandler.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/login/GetTokenLoginMethodHandler.java
rename to facebook-common/src/main/java/com/facebook/login/GetTokenLoginMethodHandler.java
diff --git a/facebook/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java b/facebook-common/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java
similarity index 92%
rename from facebook/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java
rename to facebook-common/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java
index 0651b1c9a..fee9eac8f 100644
--- a/facebook/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java
+++ b/facebook-common/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java
@@ -20,19 +20,12 @@
 
 package com.facebook.login;
 
-import android.app.Activity;
-import android.content.ActivityNotFoundException;
 import android.content.Intent;
-import android.os.Bundle;
 import android.os.Parcel;
 import android.os.Parcelable;
 
-import com.facebook.AccessToken;
-import com.facebook.AccessTokenSource;
-import com.facebook.FacebookException;
 import com.facebook.internal.NativeProtocol;
 import com.facebook.internal.ServerProtocol;
-import com.facebook.internal.Utility;
 
 class KatanaProxyLoginMethodHandler extends NativeAppLoginMethodHandler {
 
diff --git a/facebook/src/main/java/com/facebook/login/LoginBehavior.java b/facebook-common/src/main/java/com/facebook/login/LoginBehavior.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/login/LoginBehavior.java
rename to facebook-common/src/main/java/com/facebook/login/LoginBehavior.java
index a7b8f1957..45c3cac4b 100644
--- a/facebook/src/main/java/com/facebook/login/LoginBehavior.java
+++ b/facebook-common/src/main/java/com/facebook/login/LoginBehavior.java
@@ -65,7 +65,7 @@
     private final boolean allowsCustomTabAuth;
     private final boolean allowsFacebookLiteAuth;
 
-    private LoginBehavior(
+    LoginBehavior(
             boolean allowsGetTokenAuth,
             boolean allowsKatanaAuth,
             boolean allowsWebViewAuth,
diff --git a/facebook/src/main/java/com/facebook/login/LoginClient.java b/facebook-common/src/main/java/com/facebook/login/LoginClient.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/login/LoginClient.java
rename to facebook-common/src/main/java/com/facebook/login/LoginClient.java
index e0beee610..81c35069a 100644
--- a/facebook/src/main/java/com/facebook/login/LoginClient.java
+++ b/facebook-common/src/main/java/com/facebook/login/LoginClient.java
@@ -24,8 +24,6 @@
 import android.app.Activity;
 import android.content.Intent;
 import android.content.pm.PackageManager;
-import android.net.Uri;
-import android.os.Bundle;
 import android.os.Parcel;
 import android.os.Parcelable;
 import android.support.v4.app.Fragment;
@@ -33,17 +31,14 @@
 import android.text.TextUtils;
 
 import com.facebook.AccessToken;
-import com.facebook.GraphRequest;
-import com.facebook.GraphResponse;
-import com.facebook.appevents.AppEventsConstants;
 import com.facebook.FacebookException;
-import com.facebook.HttpMethod;
-import com.facebook.R;
+import com.facebook.common.R;
+import com.facebook.appevents.AppEventsConstants;
 import com.facebook.internal.CallbackManagerImpl;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
+import com.facebook.login.DefaultAudience;
 
-import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
@@ -51,7 +46,6 @@
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.HashSet;
-import java.util.List;
 import java.util.Map;
 import java.util.Set;
 
@@ -341,7 +335,7 @@ void validateSameFbidAndFinish(Result pendingResult) {
         AccessToken newToken = pendingResult.token;
 
         try {
-            Result result = null;
+            Result result;
             if (previousToken != null && newToken != null &&
                     previousToken.getUserId().equals(newToken.getUserId())) {
                 result = Result.createTokenResult(pendingRequest, pendingResult.token);
@@ -524,7 +518,7 @@ private Request(Parcel parcel) {
             this.defaultAudience = enumValue != null ? DefaultAudience.valueOf(enumValue) : null;
             this.applicationId = parcel.readString();
             this.authId = parcel.readString();
-            this.isRerequest = parcel.readByte() != 0 ? true : false;
+            this.isRerequest = parcel.readByte() != 0;
             this.deviceRedirectUriString = parcel.readString();
         }
 
diff --git a/facebook/src/main/java/com/facebook/login/LoginFragment.java b/facebook-common/src/main/java/com/facebook/login/LoginFragment.java
similarity index 96%
rename from facebook/src/main/java/com/facebook/login/LoginFragment.java
rename to facebook-common/src/main/java/com/facebook/login/LoginFragment.java
index e06756791..1222581c9 100644
--- a/facebook/src/main/java/com/facebook/login/LoginFragment.java
+++ b/facebook-common/src/main/java/com/facebook/login/LoginFragment.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -31,7 +31,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 
-import com.facebook.R;
+import com.facebook.common.R;
 
 /**
  * This Fragment is a necessary part of the overall Facebook login process
@@ -78,10 +78,12 @@ public void onCompleted(LoginClient.Result outcome) {
         }
 
         initializeCallingPackage(activity);
-        if (activity.getIntent() != null) {
-            Intent intent = activity.getIntent();
+        Intent intent = activity.getIntent();
+        if (intent != null) {
             Bundle bundle = intent.getBundleExtra(REQUEST_KEY);
-            request = (LoginClient.Request)bundle.getParcelable(EXTRA_REQUEST);
+            if (bundle != null) {
+                request = bundle.getParcelable(EXTRA_REQUEST);
+            }
         }
     }
 
diff --git a/facebook/src/main/java/com/facebook/login/LoginLogger.java b/facebook-common/src/main/java/com/facebook/login/LoginLogger.java
similarity index 85%
rename from facebook/src/main/java/com/facebook/login/LoginLogger.java
rename to facebook-common/src/main/java/com/facebook/login/LoginLogger.java
index ad6cefbb2..7b31b014f 100644
--- a/facebook/src/main/java/com/facebook/login/LoginLogger.java
+++ b/facebook-common/src/main/java/com/facebook/login/LoginLogger.java
@@ -41,6 +41,8 @@
     static final String EVENT_PARAM_METHOD_RESULT_SKIPPED = "skipped";
     static final String EVENT_NAME_LOGIN_START = "fb_mobile_login_start";
     static final String EVENT_NAME_LOGIN_COMPLETE = "fb_mobile_login_complete";
+    static final String EVENT_NAME_LOGIN_STATUS_START = "fb_mobile_login_status_start";
+    static final String EVENT_NAME_LOGIN_STATUS_COMPLETE = "fb_mobile_login_status_complete";
     // Note: to ensure stability of column mappings across the four different event types, we
     // prepend a column index to each name, and we log all columns with all events, even if they are
     // empty.
@@ -62,6 +64,7 @@
     static final String EVENT_EXTRAS_DEFAULT_AUDIENCE = "default_audience";
     static final String EVENT_EXTRAS_IS_REAUTHORIZE = "isReauthorize";
     static final String EVENT_EXTRAS_FACEBOOK_VERSION = "facebookVersion";
+    static final String EVENT_EXTRAS_FAILURE = "failure";
 
     static final String FACEBOOK_PACKAGE_NAME = "com.facebook.katana";
 
@@ -143,7 +146,7 @@ public void logCompleteLogin(String loginRequestId, Map<String, String> loggingE
 
         // Combine extras from the request and from the result.
         JSONObject jsonObject = null;
-        if (loggingExtras.isEmpty() == false) {
+        if (!loggingExtras.isEmpty()) {
             jsonObject = new JSONObject(loggingExtras);
         }
         if (resultExtras != null) {
@@ -201,6 +204,34 @@ public void logAuthorizationMethodNotTried(String authId, String method) {
         appEventsLogger.logSdkEvent(EVENT_NAME_LOGIN_METHOD_NOT_TRIED, null, bundle);
     }
 
+    public void logLoginStatusStart(final String loggerRef) {
+        Bundle bundle = LoginLogger.newAuthorizationLoggingBundle(loggerRef);
+        appEventsLogger.logSdkEvent(EVENT_NAME_LOGIN_STATUS_START, null, bundle);
+    }
+
+    public void logLoginStatusSuccess(final String loggerRef) {
+        Bundle bundle = LoginLogger.newAuthorizationLoggingBundle(loggerRef);
+        bundle.putString(
+            EVENT_PARAM_LOGIN_RESULT,
+            LoginClient.Result.Code.SUCCESS.getLoggingValue());
+        appEventsLogger.logSdkEvent(EVENT_NAME_LOGIN_STATUS_COMPLETE, null, bundle);
+    }
+
+    public void logLoginStatusFailure(final String loggerRef) {
+        Bundle bundle = LoginLogger.newAuthorizationLoggingBundle(loggerRef);
+        bundle.putString(EVENT_PARAM_LOGIN_RESULT, EVENT_EXTRAS_FAILURE);
+        appEventsLogger.logSdkEvent(EVENT_NAME_LOGIN_STATUS_COMPLETE, null, bundle);
+    }
+
+    public void logLoginStatusError(final String loggerRef, final Exception exception) {
+        Bundle bundle = LoginLogger.newAuthorizationLoggingBundle(loggerRef);
+        bundle.putString(
+            EVENT_PARAM_LOGIN_RESULT,
+            LoginClient.Result.Code.ERROR.getLoggingValue());
+        bundle.putString(EVENT_PARAM_ERROR_MESSAGE, exception.toString());
+        appEventsLogger.logSdkEvent(EVENT_NAME_LOGIN_STATUS_COMPLETE, null, bundle);
+    }
+
     public void logUnexpectedError(String eventName, String errorMessage) {
         logUnexpectedError(eventName, errorMessage, "");
     }
diff --git a/facebook/src/main/java/com/facebook/login/LoginManager.java b/facebook-common/src/main/java/com/facebook/login/LoginManager.java
similarity index 71%
rename from facebook/src/main/java/com/facebook/login/LoginManager.java
rename to facebook-common/src/main/java/com/facebook/login/LoginManager.java
index ac0224167..0694dc83c 100644
--- a/facebook/src/main/java/com/facebook/login/LoginManager.java
+++ b/facebook-common/src/main/java/com/facebook/login/LoginManager.java
@@ -23,9 +23,12 @@
 import android.app.Activity;
 import android.content.ActivityNotFoundException;
 import android.content.Intent;
+import android.content.SharedPreferences;
 import android.content.pm.ResolveInfo;
+import android.net.Uri;
 import android.os.Bundle;
 import android.content.Context;
+import android.support.annotation.Nullable;
 import android.support.v4.app.Fragment;
 
 import com.facebook.AccessToken;
@@ -36,14 +39,20 @@
 import com.facebook.FacebookException;
 import com.facebook.FacebookSdk;
 import com.facebook.GraphResponse;
+import com.facebook.LoginStatusCallback;
 import com.facebook.Profile;
 import com.facebook.internal.CallbackManagerImpl;
 import com.facebook.internal.FragmentWrapper;
+import com.facebook.internal.NativeProtocol;
+import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
 import com.facebook.appevents.AppEventsConstants;
+import com.facebook.login.DefaultAudience;
 
+import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;
+import java.util.Date;
 import java.util.HashMap;
 import java.util.HashSet;
 import java.util.Map;
@@ -56,15 +65,20 @@
 public class LoginManager {
     private static final String PUBLISH_PERMISSION_PREFIX = "publish";
     private static final String MANAGE_PERMISSION_PREFIX = "manage";
+    private static final String EXPRESS_LOGIN_ALLOWED = "express_login_allowed";
+    private static final String PREFERENCE_LOGIN_MANAGER = "com.facebook.loginManager";
     private static final Set<String> OTHER_PUBLISH_PERMISSIONS = getOtherPublishPermissions();
 
     private static volatile LoginManager instance;
 
     private LoginBehavior loginBehavior = LoginBehavior.NATIVE_WITH_FALLBACK;
     private DefaultAudience defaultAudience = DefaultAudience.FRIENDS;
+    private final SharedPreferences sharedPreferences;
 
     LoginManager() {
         Validate.sdkInitialized();
+        sharedPreferences = FacebookSdk.getApplicationContext()
+                .getSharedPreferences(PREFERENCE_LOGIN_MANAGER, Context.MODE_PRIVATE);
     }
 
     /**
@@ -165,6 +179,20 @@ public boolean onActivityResult(int resultCode, Intent data) {
         );
     }
 
+    /**
+     * Unregisters a login callback to the given callback manager.
+     * @param callbackManager The callback manager that will encapsulate the callback.
+     */
+    public void unregisterCallback(
+            final CallbackManager callbackManager) {
+        if (!(callbackManager instanceof CallbackManagerImpl)) {
+            throw new FacebookException("Unexpected CallbackManager, " +
+                    "please use the provided Factory.");
+        }
+        ((CallbackManagerImpl) callbackManager).unregisterCallback(
+                CallbackManagerImpl.RequestCodeOffset.Login.toRequestCode());
+    }
+
     boolean onActivityResult(int resultCode, Intent data) {
         return onActivityResult(resultCode, data, null);
     }
@@ -179,7 +207,7 @@ boolean onActivityResult(int resultCode, Intent data, FacebookCallback<LoginResu
         boolean isCanceled = false;
         if (data != null) {
             LoginClient.Result result =
-                    (LoginClient.Result) data.getParcelableExtra(LoginFragment.RESULT_KEY);
+                    data.getParcelableExtra(LoginFragment.RESULT_KEY);
             if (result != null) {
                 originalRequest = result.request;
                 code = result.code;
@@ -260,6 +288,39 @@ public LoginManager setDefaultAudience(DefaultAudience defaultAudience) {
     public void logOut() {
         AccessToken.setCurrentAccessToken(null);
         Profile.setCurrentProfile(null);
+        setExpressLoginStatus(false);
+    }
+
+    /**
+     * Retrieves the login status for the user. This will return an access token for the app if
+     * a user is logged into the Facebook for Android app on the same device and that user had
+     * previously logged into the app.
+     * If an access token was retrieved then a toast will be shown telling the user that they have
+     * been logged in.
+     * @param context An Android context
+     * @param responseCallback The callback to be called when the request completes
+     */
+    public void retrieveLoginStatus(
+            final Context context,
+            final LoginStatusCallback responseCallback) {
+        retrieveLoginStatus(context, LoginStatusClient.DEFAULT_TOAST_DURATION_MS, responseCallback);
+    }
+
+    /**
+     * Retrieves the login status for the user. This will return an access token for the app if
+     * a user is logged into the Facebook for Android app on the same device and that user had
+     * previously logged into the app.
+     * If an access token was retrieved then a toast will be shown telling the user that they have
+     * been logged in.
+     * @param context An Android context
+     * @param responseCallback The callback to be called when the request completes
+     * @param toastDurationMs The duration to show the success toast in milliseconds
+     */
+    public void retrieveLoginStatus(
+            final Context context,
+            final long toastDurationMs,
+            final LoginStatusCallback responseCallback) {
+        retrieveLoginStatusImpl(context, responseCallback, toastDurationMs);
     }
 
     /**
@@ -517,10 +578,7 @@ private boolean tryFacebookActivity(
     private boolean resolveIntent(Intent intent) {
         ResolveInfo resolveInfo = FacebookSdk.getApplicationContext().getPackageManager()
             .resolveActivity(intent, 0);
-        if (resolveInfo == null) {
-            return false;
-        }
-        return true;
+        return resolveInfo != null;
     }
 
     protected Intent getFacebookActivityIntent(LoginClient.Request request) {
@@ -529,7 +587,6 @@ protected Intent getFacebookActivityIntent(LoginClient.Request request) {
         intent.setAction(request.getLoginBehavior().toString());
 
         // Let FacebookActivity populate extras appropriately
-        LoginClient.Request authClientRequest = request;
         Bundle extras = new Bundle();
         extras.putParcelable(LoginFragment.EXTRA_REQUEST, request);
         intent.putExtra(LoginFragment.REQUEST_KEY, extras);
@@ -578,11 +635,159 @@ private void finishLogin(
             } else if (exception != null) {
                 callback.onError(exception);
             } else if (newToken != null) {
+                setExpressLoginStatus(true);
                 callback.onSuccess(loginResult);
             }
         }
     }
 
+    private void retrieveLoginStatusImpl(
+            final Context context,
+            final LoginStatusCallback responseCallback,
+            final long toastDurationMs) {
+        final String applicationId = FacebookSdk.getApplicationId();
+        final String loggerRef = UUID.randomUUID().toString();
+
+        final LoginLogger logger = new LoginLogger(context, applicationId);
+
+        if (!isExpressLoginAllowed()) {
+            logger.logLoginStatusFailure(loggerRef);
+            responseCallback.onFailure();
+            return;
+        }
+
+        final LoginStatusClient client
+                = new LoginStatusClient(
+                context,
+                applicationId,
+                loggerRef,
+                FacebookSdk.getGraphApiVersion(),
+                toastDurationMs);
+
+        final LoginStatusClient.CompletedListener callback =
+            new LoginStatusClient.CompletedListener() {
+                @Override
+                public void completed(Bundle result) {
+                    if (result != null) {
+
+                        final String errorType = result.getString(NativeProtocol.STATUS_ERROR_TYPE);
+                        final String errorDescription =
+                                result.getString(NativeProtocol.STATUS_ERROR_DESCRIPTION);
+                        if (errorType != null) {
+                            handleLoginStatusError(
+                                    errorType,
+                                    errorDescription,
+                                    loggerRef,
+                                    logger,
+                                    responseCallback);
+                        } else {
+                            final String token =
+                                    result.getString(NativeProtocol.EXTRA_ACCESS_TOKEN);
+                            final long expires =
+                                    result.getLong(
+                                            NativeProtocol.EXTRA_EXPIRES_SECONDS_SINCE_EPOCH);
+                            final ArrayList<String> permissions =
+                                    result.getStringArrayList(NativeProtocol.EXTRA_PERMISSIONS);
+                            final String signedRequest =
+                                    result.getString(NativeProtocol.RESULT_ARGS_SIGNED_REQUEST);
+                            String userId = null;
+                            if (!Utility.isNullOrEmpty(signedRequest)) {
+                                userId =
+                                    LoginMethodHandler.getUserIDFromSignedRequest(signedRequest);
+                            }
+
+                            if (!Utility.isNullOrEmpty(token) &&
+                                    permissions != null &&
+                                    !permissions.isEmpty() &&
+                                    !Utility.isNullOrEmpty(userId)) {
+                                final AccessToken accessToken = new AccessToken(
+                                        token,
+                                        applicationId,
+                                        userId,
+                                        permissions,
+                                        null,
+                                        null,
+                                        new Date(expires),
+                                        null);
+                                AccessToken.setCurrentAccessToken(accessToken);
+
+                                final Profile profile = getProfileFromBundle(result);
+                                if (profile != null) {
+                                    Profile.setCurrentProfile(profile);
+                                } else {
+                                    Profile.fetchProfileForCurrentAccessToken();
+                                }
+
+                                logger.logLoginStatusSuccess(loggerRef);
+                                responseCallback.onCompleted(accessToken);
+                            } else {
+                                logger.logLoginStatusFailure(loggerRef);
+                                responseCallback.onFailure();
+                            }
+                        }
+                    } else {
+                        logger.logLoginStatusFailure(loggerRef);
+                        responseCallback.onFailure();
+                    }
+                }
+            };
+
+        client.setCompletedListener(callback);
+        logger.logLoginStatusStart(loggerRef);
+        if (!client.start()) {
+            logger.logLoginStatusFailure(loggerRef);
+            responseCallback.onFailure();
+        };
+    }
+
+    private void setExpressLoginStatus(boolean isExpressLoginAllowed) {
+        SharedPreferences.Editor editor = sharedPreferences.edit();
+        editor.putBoolean(EXPRESS_LOGIN_ALLOWED, isExpressLoginAllowed);
+        editor.apply();
+    }
+
+    private boolean isExpressLoginAllowed() {
+        return sharedPreferences.getBoolean(EXPRESS_LOGIN_ALLOWED, true);
+    }
+
+    @Nullable
+    private static Profile getProfileFromBundle(Bundle result) {
+        final String name = result.getString(NativeProtocol.EXTRA_ARGS_PROFILE_NAME);
+        final String firstName = result.getString(NativeProtocol.EXTRA_ARGS_PROFILE_FIRST_NAME);
+        final String middleName = result.getString(NativeProtocol.EXTRA_ARGS_PROFILE_MIDDLE_NAME);
+        final String lastName = result.getString(NativeProtocol.EXTRA_ARGS_PROFILE_LAST_NAME);
+        final String link = result.getString(NativeProtocol.EXTRA_ARGS_PROFILE_LINK);
+        final String appScopedUserId = result.getString(NativeProtocol.EXTRA_ARGS_PROFILE_USER_ID);
+
+        if (name != null &&
+            firstName != null &&
+            middleName != null &&
+            lastName != null &&
+            link != null &&
+            appScopedUserId != null) {
+
+            return new Profile(
+                    appScopedUserId,
+                    firstName,
+                    middleName,
+                    lastName,
+                    name,
+                    Uri.parse(link));
+        }
+        return null;
+    }
+
+    private static void handleLoginStatusError(
+            final String errorType,
+            final String errorDescription,
+            final String loggerRef,
+            final LoginLogger logger,
+            final LoginStatusCallback responseCallback) {
+        final Exception exception = new FacebookException(errorType + ": " + errorDescription);
+        logger.logLoginStatusError(loggerRef, exception);
+        responseCallback.onError(exception);
+    }
+
     private static class ActivityStartActivityDelegate implements StartActivityDelegate {
         private final Activity activity;
 
@@ -622,7 +827,7 @@ public Activity getActivityContext() {
     }
 
     private static class LoginLoggerHolder {
-        private static volatile LoginLogger logger;
+        private static LoginLogger logger;
 
         private static synchronized LoginLogger getLogger(Context context) {
             context = context != null ? context : FacebookSdk.getApplicationContext();
diff --git a/facebook/src/main/java/com/facebook/login/LoginMethodHandler.java b/facebook-common/src/main/java/com/facebook/login/LoginMethodHandler.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/login/LoginMethodHandler.java
rename to facebook-common/src/main/java/com/facebook/login/LoginMethodHandler.java
index fc3e01879..57ddc6f49 100644
--- a/facebook/src/main/java/com/facebook/login/LoginMethodHandler.java
+++ b/facebook-common/src/main/java/com/facebook/login/LoginMethodHandler.java
@@ -29,13 +29,11 @@
 
 import com.facebook.AccessToken;
 import com.facebook.AccessTokenSource;
-import com.facebook.FacebookAuthorizationException;
 import com.facebook.FacebookException;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.NativeProtocol;
 import com.facebook.internal.Utility;
-import com.facebook.internal.Validate;
 
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -186,7 +184,7 @@ public static AccessToken createAccessTokenFromWebBundle(
                 new Date());
     }
 
-    private static String getUserIDFromSignedRequest(
+    static String getUserIDFromSignedRequest(
             String signedRequest) throws FacebookException {
         if (signedRequest == null || signedRequest.isEmpty()) {
             throw new FacebookException(
diff --git a/facebook/src/main/java/com/facebook/login/LoginResult.java b/facebook-common/src/main/java/com/facebook/login/LoginResult.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/login/LoginResult.java
rename to facebook-common/src/main/java/com/facebook/login/LoginResult.java
diff --git a/facebook-common/src/main/java/com/facebook/login/LoginStatusClient.java b/facebook-common/src/main/java/com/facebook/login/LoginStatusClient.java
new file mode 100644
index 000000000..3d23b0ffa
--- /dev/null
+++ b/facebook-common/src/main/java/com/facebook/login/LoginStatusClient.java
@@ -0,0 +1,58 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.login;
+
+import android.content.Context;
+import android.os.Bundle;
+
+import com.facebook.internal.NativeProtocol;
+import com.facebook.internal.PlatformServiceClient;
+
+final class LoginStatusClient extends PlatformServiceClient {
+
+    static final long DEFAULT_TOAST_DURATION_MS = 5000L;
+    private final String loggerRef;
+    private final String graphApiVersion;
+    private final long toastDurationMs;
+
+    LoginStatusClient(final Context context,
+                      final String applicationId,
+                      final String loggerRef,
+                      final String graphApiVersion,
+                      final long toastDurationMs) {
+        super(
+                context,
+                NativeProtocol.MESSAGE_GET_LOGIN_STATUS_REQUEST,
+                NativeProtocol.MESSAGE_GET_LOGIN_STATUS_REPLY,
+                NativeProtocol.PROTOCOL_VERSION_20170411,
+                applicationId);
+        this.loggerRef = loggerRef;
+        this.graphApiVersion = graphApiVersion;
+        this.toastDurationMs = toastDurationMs;
+    }
+
+    @Override
+    protected void populateRequestBundle(Bundle data) {
+        data.putString(NativeProtocol.EXTRA_LOGGER_REF, loggerRef);
+        data.putString(NativeProtocol.EXTRA_GRAPH_API_VERSION, graphApiVersion);
+        data.putLong(NativeProtocol.EXTRA_TOAST_DURATION_MS, toastDurationMs);
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/login/NativeAppLoginMethodHandler.java b/facebook-common/src/main/java/com/facebook/login/NativeAppLoginMethodHandler.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/login/NativeAppLoginMethodHandler.java
rename to facebook-common/src/main/java/com/facebook/login/NativeAppLoginMethodHandler.java
diff --git a/facebook/src/main/java/com/facebook/login/StartActivityDelegate.java b/facebook-common/src/main/java/com/facebook/login/StartActivityDelegate.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/login/StartActivityDelegate.java
rename to facebook-common/src/main/java/com/facebook/login/StartActivityDelegate.java
diff --git a/facebook/src/main/java/com/facebook/login/WebLoginMethodHandler.java b/facebook-common/src/main/java/com/facebook/login/WebLoginMethodHandler.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/login/WebLoginMethodHandler.java
rename to facebook-common/src/main/java/com/facebook/login/WebLoginMethodHandler.java
index 1aa098c76..00567aa15 100644
--- a/facebook/src/main/java/com/facebook/login/WebLoginMethodHandler.java
+++ b/facebook-common/src/main/java/com/facebook/login/WebLoginMethodHandler.java
@@ -37,6 +37,7 @@
 import com.facebook.appevents.AppEventsConstants;
 import com.facebook.internal.ServerProtocol;
 import com.facebook.internal.Utility;
+import com.facebook.login.DefaultAudience;
 
 import java.util.Locale;
 
diff --git a/facebook/src/main/java/com/facebook/login/WebViewLoginMethodHandler.java b/facebook-common/src/main/java/com/facebook/login/WebViewLoginMethodHandler.java
similarity index 96%
rename from facebook/src/main/java/com/facebook/login/WebViewLoginMethodHandler.java
rename to facebook-common/src/main/java/com/facebook/login/WebViewLoginMethodHandler.java
index e83ead459..869f89ca3 100644
--- a/facebook/src/main/java/com/facebook/login/WebViewLoginMethodHandler.java
+++ b/facebook-common/src/main/java/com/facebook/login/WebViewLoginMethodHandler.java
@@ -138,7 +138,12 @@ public WebDialog build() {
                         ServerProtocol.DIALOG_PARAM_AUTH_TYPE,
                         ServerProtocol.DIALOG_REREQUEST_AUTH_TYPE);
 
-            return new WebDialog(getContext(), OAUTH_DIALOG, parameters, getTheme(), getListener());
+            return WebDialog.newInstance(
+                    getContext(),
+                    OAUTH_DIALOG,
+                    parameters,
+                    getTheme(),
+                    getListener());
         }
     }
 
diff --git a/facebook/src/main/java/com/facebook/share/ShareBuilder.java b/facebook-common/src/main/java/com/facebook/share/ShareBuilder.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/ShareBuilder.java
rename to facebook-common/src/main/java/com/facebook/share/ShareBuilder.java
diff --git a/facebook/src/main/java/com/facebook/share/Sharer.java b/facebook-common/src/main/java/com/facebook/share/Sharer.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/Sharer.java
rename to facebook-common/src/main/java/com/facebook/share/Sharer.java
diff --git a/facebook-common/src/main/java/com/facebook/share/internal/CameraEffectFeature.java b/facebook-common/src/main/java/com/facebook/share/internal/CameraEffectFeature.java
new file mode 100644
index 000000000..a19b8a3b7
--- /dev/null
+++ b/facebook-common/src/main/java/com/facebook/share/internal/CameraEffectFeature.java
@@ -0,0 +1,55 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.share.internal;
+
+import com.facebook.internal.DialogFeature;
+import com.facebook.internal.NativeProtocol;
+
+/**
+ * com.facebook.share.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public enum CameraEffectFeature implements DialogFeature {
+    SHARE_CAMERA_EFFECT(NativeProtocol.PROTOCOL_VERSION_20170417);
+
+    private int minVersion;
+
+    CameraEffectFeature(int minVersion) {
+        this.minVersion = minVersion;
+    }
+
+    /**
+     * This method is for internal use only.
+     */
+    @Override
+    public String getAction() {
+        return NativeProtocol.ACTION_CAMERA_EFFECT;
+    }
+
+    /**
+     * This method is for internal use only.
+     */
+    @Override
+    public int getMinVersion() {
+        return minVersion;
+    }
+}
diff --git a/facebook-common/src/main/java/com/facebook/share/internal/CameraEffectJSONUtility.java b/facebook-common/src/main/java/com/facebook/share/internal/CameraEffectJSONUtility.java
new file mode 100644
index 000000000..26d32e753
--- /dev/null
+++ b/facebook-common/src/main/java/com/facebook/share/internal/CameraEffectJSONUtility.java
@@ -0,0 +1,147 @@
+// Copyright 2004-present Facebook. All Rights Reserved.
+
+package com.facebook.share.internal;
+
+import com.facebook.share.model.CameraEffectArguments;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.Map;
+
+/**
+ * com.facebook.share.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ *
+ * Utility methods for JSON representation of Open Graph models.
+ */
+public class CameraEffectJSONUtility {
+    private static final Map<Class<?>, CameraEffectJSONUtility.Setter> SETTERS = new HashMap<>();
+
+    static {
+        SETTERS.put(String.class, new CameraEffectJSONUtility.Setter() {
+            @Override
+            public void setOnArgumentsBuilder(
+                    CameraEffectArguments.Builder builder,
+                    String key,
+                    Object value)
+                    throws JSONException {
+                builder.putArgument(key, (String) value);
+            }
+
+            @Override
+            public void setOnJSON(JSONObject json, String key, Object value) throws JSONException {
+                json.put(key, value);
+            }
+        });
+        SETTERS.put(String[].class, new CameraEffectJSONUtility.Setter() {
+            @Override
+            public void setOnArgumentsBuilder(
+                    CameraEffectArguments.Builder builder,
+                    String key,
+                    Object value)
+                    throws JSONException {
+                throw new IllegalArgumentException("Unexpected type from JSON");
+            }
+
+            @Override
+            public void setOnJSON(JSONObject json, String key, Object value) throws JSONException {
+                JSONArray jsonArray = new JSONArray();
+                for (String stringValue : (String[]) value) {
+                    jsonArray.put(stringValue);
+                }
+                json.put(key, jsonArray);
+            }
+        });
+
+        SETTERS.put(JSONArray.class, new CameraEffectJSONUtility.Setter() {
+            @Override
+            public void setOnArgumentsBuilder(
+                    CameraEffectArguments.Builder builder,
+                    String key,
+                    Object value)
+                    throws JSONException {
+                // Only strings are supported for now
+                JSONArray jsonArray = (JSONArray) value;
+                String[] argsArray = new String[jsonArray.length()];
+                for (int i = 0; i < jsonArray.length(); i++) {
+                    Object current = jsonArray.get(i);
+                    if (current instanceof String) {
+                        argsArray[i] = (String) current;
+                    } else {
+                        throw new IllegalArgumentException(
+                                "Unexpected type in an array: " + current.getClass());
+                    }
+                }
+                builder.putArgument(key, argsArray);
+            }
+
+            @Override
+            public void setOnJSON(JSONObject json, String key, Object value) throws JSONException {
+                throw new IllegalArgumentException("JSONArray's are not supported in bundles.");
+            }
+        });
+    }
+
+    public interface Setter {
+        void setOnArgumentsBuilder(CameraEffectArguments.Builder builder, String key, Object value)
+                throws JSONException;
+        void setOnJSON(JSONObject json, String key, Object value)
+                throws JSONException;
+    }
+
+    public static JSONObject convertToJSON(CameraEffectArguments arguments)
+            throws JSONException {
+        if (arguments == null) {
+            return null;
+        }
+
+        JSONObject json = new JSONObject();
+
+        for (String key : arguments.keySet()) {
+            Object value = arguments.get(key);
+            if (value == null) {
+                // Null is not supported.
+                continue;
+            }
+
+            CameraEffectJSONUtility.Setter setter = SETTERS.get(value.getClass());
+            if (setter == null) {
+                throw new IllegalArgumentException("Unsupported type: " + value.getClass());
+            }
+            setter.setOnJSON(json, key, value);
+        }
+
+        return json;
+    }
+
+    public static CameraEffectArguments convertToCameraEffectArguments(JSONObject jsonObject)
+            throws JSONException {
+        if (jsonObject == null) {
+            return null;
+        }
+
+        CameraEffectArguments.Builder builder = new CameraEffectArguments.Builder();
+        Iterator<String> jsonIterator = jsonObject.keys();
+        while (jsonIterator.hasNext()) {
+            String key = jsonIterator.next();
+            Object value = jsonObject.get(key);
+            if (value == null || value == JSONObject.NULL) {
+                // Null is not supported.
+                continue;
+            }
+
+            CameraEffectJSONUtility.Setter setter = SETTERS.get(value.getClass());
+            if (setter == null) {
+                throw new IllegalArgumentException("Unsupported type: " + value.getClass());
+            }
+            setter.setOnArgumentsBuilder(builder, key, value);
+        }
+
+        return builder.build();
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/share/internal/DeviceShareDialogFragment.java b/facebook-common/src/main/java/com/facebook/share/internal/DeviceShareDialogFragment.java
similarity index 97%
rename from facebook/src/main/java/com/facebook/share/internal/DeviceShareDialogFragment.java
rename to facebook-common/src/main/java/com/facebook/share/internal/DeviceShareDialogFragment.java
index 82bc20cef..195de42b4 100644
--- a/facebook/src/main/java/com/facebook/share/internal/DeviceShareDialogFragment.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/DeviceShareDialogFragment.java
@@ -42,7 +42,8 @@
 import com.facebook.GraphRequest;
 import com.facebook.GraphResponse;
 import com.facebook.HttpMethod;
-import com.facebook.R;
+import com.facebook.common.R;
+import com.facebook.devicerequests.internal.DeviceRequestsHelper;
 import com.facebook.internal.Validate;
 import com.facebook.share.model.ShareContent;
 import com.facebook.share.model.ShareLinkContent;
@@ -135,6 +136,8 @@ public void onSaveInstanceState(Bundle outState) {
     }
 
     private void finishActivity(int resultCode, Intent data) {
+        DeviceRequestsHelper.cleanUpAdvertisementService(currentRequestState.getUserCode());
+
         if (isAdded()) {
             Activity activity = getActivity();
             activity.setResult(resultCode, data);
@@ -171,8 +174,12 @@ private void startShare() {
             this.finishActivityWithError(
                     new FacebookRequestError(0, "", "Failed to get share content"));
         }
+
         String accessToken = Validate.hasAppID()+ "|" + Validate.hasClientToken();
         parameters.putString(GraphRequest.ACCESS_TOKEN_PARAM, accessToken);
+        parameters.putString(DeviceRequestsHelper.DEVICE_INFO_PARAM,
+                             DeviceRequestsHelper.getDeviceInfo());
+
         GraphRequest graphRequest = new GraphRequest(
                 null,
                 DEVICE_SHARE_ENDPOINT,
diff --git a/facebook/src/main/java/com/facebook/share/internal/LegacyNativeDialogParameters.java b/facebook-common/src/main/java/com/facebook/share/internal/LegacyNativeDialogParameters.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/share/internal/LegacyNativeDialogParameters.java
rename to facebook-common/src/main/java/com/facebook/share/internal/LegacyNativeDialogParameters.java
index a00f9e5fc..7b187ac5b 100644
--- a/facebook/src/main/java/com/facebook/share/internal/LegacyNativeDialogParameters.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/LegacyNativeDialogParameters.java
@@ -20,7 +20,6 @@
 
 package com.facebook.share.internal;
 
-import android.content.Context;
 import android.os.Bundle;
 
 import com.facebook.FacebookException;
@@ -28,7 +27,6 @@
 import com.facebook.internal.Validate;
 import com.facebook.share.model.ShareContent;
 import com.facebook.share.model.ShareLinkContent;
-import com.facebook.share.model.ShareOpenGraphAction;
 import com.facebook.share.model.ShareOpenGraphContent;
 import com.facebook.share.model.SharePhotoContent;
 import com.facebook.share.model.ShareVideoContent;
diff --git a/facebook/src/main/java/com/facebook/share/internal/LikeActionController.java b/facebook-common/src/main/java/com/facebook/share/internal/LikeActionController.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/share/internal/LikeActionController.java
rename to facebook-common/src/main/java/com/facebook/share/internal/LikeActionController.java
index 3f0c8fd27..b0ba9f900 100644
--- a/facebook/src/main/java/com/facebook/share/internal/LikeActionController.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/LikeActionController.java
@@ -29,6 +29,16 @@
 import android.util.Log;
 
 import com.facebook.*;
+import com.facebook.AccessToken;
+import com.facebook.FacebookException;
+import com.facebook.FacebookOperationCanceledException;
+import com.facebook.FacebookRequestError;
+import com.facebook.FacebookSdk;
+import com.facebook.GraphRequest;
+import com.facebook.GraphRequestBatch;
+import com.facebook.GraphResponse;
+import com.facebook.HttpMethod;
+import com.facebook.LoggingBehavior;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.AppCall;
diff --git a/facebook/src/main/java/com/facebook/share/internal/LikeBoxCountView.java b/facebook-common/src/main/java/com/facebook/share/internal/LikeBoxCountView.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/share/internal/LikeBoxCountView.java
rename to facebook-common/src/main/java/com/facebook/share/internal/LikeBoxCountView.java
index 23cf68ffe..075fb6bf7 100644
--- a/facebook/src/main/java/com/facebook/share/internal/LikeBoxCountView.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/LikeBoxCountView.java
@@ -27,7 +27,7 @@
 import android.view.ViewGroup;
 import android.widget.FrameLayout;
 import android.widget.TextView;
-import com.facebook.R;
+import com.facebook.common.R;
 
 /**
  * com.facebook.share.internal is solely for the use of other packages within the Facebook SDK for
diff --git a/facebook/src/main/java/com/facebook/share/internal/LikeButton.java b/facebook-common/src/main/java/com/facebook/share/internal/LikeButton.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/share/internal/LikeButton.java
rename to facebook-common/src/main/java/com/facebook/share/internal/LikeButton.java
index 3a4a0c5ca..3be7415ce 100644
--- a/facebook/src/main/java/com/facebook/share/internal/LikeButton.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/LikeButton.java
@@ -23,7 +23,7 @@
 import android.content.Context;
 import android.util.AttributeSet;
 import com.facebook.FacebookButtonBase;
-import com.facebook.R;
+import com.facebook.common.R;
 import com.facebook.internal.AnalyticsEvents;
 
 /**
diff --git a/facebook/src/main/java/com/facebook/share/internal/LikeContent.java b/facebook-common/src/main/java/com/facebook/share/internal/LikeContent.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/internal/LikeContent.java
rename to facebook-common/src/main/java/com/facebook/share/internal/LikeContent.java
diff --git a/facebook/src/main/java/com/facebook/share/internal/LikeDialog.java b/facebook-common/src/main/java/com/facebook/share/internal/LikeDialog.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/internal/LikeDialog.java
rename to facebook-common/src/main/java/com/facebook/share/internal/LikeDialog.java
diff --git a/facebook/src/main/java/com/facebook/share/internal/LikeDialogFeature.java b/facebook-common/src/main/java/com/facebook/share/internal/LikeDialogFeature.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/internal/LikeDialogFeature.java
rename to facebook-common/src/main/java/com/facebook/share/internal/LikeDialogFeature.java
diff --git a/facebook/src/main/java/com/facebook/share/internal/LikeStatusClient.java b/facebook-common/src/main/java/com/facebook/share/internal/LikeStatusClient.java
similarity index 97%
rename from facebook/src/main/java/com/facebook/share/internal/LikeStatusClient.java
rename to facebook-common/src/main/java/com/facebook/share/internal/LikeStatusClient.java
index f890db8a5..7ac26eb2b 100644
--- a/facebook/src/main/java/com/facebook/share/internal/LikeStatusClient.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/LikeStatusClient.java
@@ -26,7 +26,6 @@
 
 import com.facebook.internal.NativeProtocol;
 import com.facebook.internal.PlatformServiceClient;
-import com.facebook.share.internal.ShareConstants;
 
 /**
  * com.facebook.share.internal is solely for the use of other packages within the Facebook SDK for
diff --git a/facebook/src/main/java/com/facebook/share/internal/NativeDialogParameters.java b/facebook-common/src/main/java/com/facebook/share/internal/NativeDialogParameters.java
similarity index 82%
rename from facebook/src/main/java/com/facebook/share/internal/NativeDialogParameters.java
rename to facebook-common/src/main/java/com/facebook/share/internal/NativeDialogParameters.java
index 3d56d79c8..01514abad 100644
--- a/facebook/src/main/java/com/facebook/share/internal/NativeDialogParameters.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/NativeDialogParameters.java
@@ -25,6 +25,7 @@
 import com.facebook.FacebookException;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
+import com.facebook.share.model.ShareCameraEffectContent;
 import com.facebook.share.model.ShareContent;
 import com.facebook.share.model.ShareHashtag;
 import com.facebook.share.model.ShareLinkContent;
@@ -90,11 +91,54 @@ public static Bundle create(
                     callId);
 
             nativeParams = create(mediaContent, mediaInfos, shouldFailOnDataError);
+        } else if (shareContent instanceof ShareCameraEffectContent) {
+            final ShareCameraEffectContent cameraEffectContent =
+                    (ShareCameraEffectContent) shareContent;
+
+            // Put Bitmaps behind content uris.
+            Bundle attachmentUrlsBundle = ShareInternalUtility.getTextureUrlBundle(
+                    cameraEffectContent,
+                    callId);
+
+            nativeParams = create(cameraEffectContent, attachmentUrlsBundle, shouldFailOnDataError);
         }
 
         return nativeParams;
     }
 
+    private static Bundle create(
+            ShareCameraEffectContent cameraEffectContent,
+            Bundle attachmentUrlsBundle,
+            boolean dataErrorsFatal) {
+        Bundle params = createBaseParameters(cameraEffectContent, dataErrorsFatal);
+
+        Utility.putNonEmptyString(
+                params,
+                ShareConstants.EFFECT_ID,
+                cameraEffectContent.getEffectId());
+
+        if (attachmentUrlsBundle != null) {
+            params.putBundle(ShareConstants.EFFECT_TEXTURES, attachmentUrlsBundle);
+        }
+
+        try {
+            JSONObject argsJSON =
+                    CameraEffectJSONUtility.convertToJSON(cameraEffectContent.getArguments());
+            if (argsJSON != null) {
+                Utility.putNonEmptyString(
+                        params,
+                        ShareConstants.EFFECT_ARGS,
+                        argsJSON.toString());
+            }
+        } catch (JSONException e) {
+            throw new FacebookException(
+                    "Unable to create a JSON Object from the provided CameraEffectArguments: "
+                            + e.getMessage());
+        }
+
+        return params;
+    }
+
     private static Bundle create(ShareLinkContent linkContent, boolean dataErrorsFatal) {
         Bundle params = createBaseParameters(linkContent, dataErrorsFatal);
 
diff --git a/facebook/src/main/java/com/facebook/share/internal/OpenGraphActionDialogFeature.java b/facebook-common/src/main/java/com/facebook/share/internal/OpenGraphActionDialogFeature.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/internal/OpenGraphActionDialogFeature.java
rename to facebook-common/src/main/java/com/facebook/share/internal/OpenGraphActionDialogFeature.java
diff --git a/facebook/src/main/java/com/facebook/share/internal/OpenGraphJSONUtility.java b/facebook-common/src/main/java/com/facebook/share/internal/OpenGraphJSONUtility.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/share/internal/OpenGraphJSONUtility.java
rename to facebook-common/src/main/java/com/facebook/share/internal/OpenGraphJSONUtility.java
index dfa01941d..787600ca2 100644
--- a/facebook/src/main/java/com/facebook/share/internal/OpenGraphJSONUtility.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/OpenGraphJSONUtility.java
@@ -20,9 +20,8 @@
 
 package com.facebook.share.internal;
 
-import android.os.Bundle;
 import android.support.annotation.Nullable;
-import com.facebook.internal.Validate;
+
 import com.facebook.share.model.ShareOpenGraphAction;
 import com.facebook.share.model.ShareOpenGraphObject;
 import com.facebook.share.model.SharePhoto;
diff --git a/facebook/src/main/java/com/facebook/share/internal/ResultProcessor.java b/facebook-common/src/main/java/com/facebook/share/internal/ResultProcessor.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/internal/ResultProcessor.java
rename to facebook-common/src/main/java/com/facebook/share/internal/ResultProcessor.java
diff --git a/facebook/src/main/java/com/facebook/share/internal/ShareConstants.java b/facebook-common/src/main/java/com/facebook/share/internal/ShareConstants.java
similarity index 97%
rename from facebook/src/main/java/com/facebook/share/internal/ShareConstants.java
rename to facebook-common/src/main/java/com/facebook/share/internal/ShareConstants.java
index 550545b96..20f4119b5 100644
--- a/facebook/src/main/java/com/facebook/share/internal/ShareConstants.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/ShareConstants.java
@@ -93,6 +93,11 @@
     public static final String MEDIA_TYPE = "type";
     public static final String MEDIA_URI = "uri";
 
+    // Camera-share args
+    public static final String EFFECT_ID = "effect_id";
+    public static final String EFFECT_ARGS = "effect_arguments";
+    public static final String EFFECT_TEXTURES = "effect_textures";
+
     // Extras supported for ACTION_OGACTIONPUBLISH_DIALOG:
     public static final String LEGACY_ACTION = "com.facebook.platform.extra.ACTION";
     public static final String LEGACY_ACTION_TYPE = "com.facebook.platform.extra.ACTION_TYPE";
diff --git a/facebook/src/main/java/com/facebook/share/internal/ShareContentValidation.java b/facebook-common/src/main/java/com/facebook/share/internal/ShareContentValidation.java
similarity index 95%
rename from facebook/src/main/java/com/facebook/share/internal/ShareContentValidation.java
rename to facebook-common/src/main/java/com/facebook/share/internal/ShareContentValidation.java
index bd5643b1c..5a04fe5e5 100644
--- a/facebook/src/main/java/com/facebook/share/internal/ShareContentValidation.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/ShareContentValidation.java
@@ -27,6 +27,7 @@
 import com.facebook.FacebookSdk;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
+import com.facebook.share.model.ShareCameraEffectContent;
 import com.facebook.share.model.ShareContent;
 import com.facebook.share.model.ShareLinkContent;
 import com.facebook.share.model.ShareMedia;
@@ -108,6 +109,8 @@ private static void validate(ShareContent content, Validator validator)
             validator.validate((ShareOpenGraphContent) content);
         } else if (content instanceof ShareMediaContent) {
             validator.validate((ShareMediaContent) content);
+        } else if (content instanceof ShareCameraEffectContent) {
+            validator.validate((ShareCameraEffectContent) content);
         }
     }
 
@@ -232,6 +235,14 @@ public static void validateMedium(ShareMedia medium, Validator validator) {
         }
     }
 
+    private static void validateCameraEffectContent(
+            ShareCameraEffectContent cameraEffectContent, Validator validator) {
+        String effectId = cameraEffectContent.getEffectId();
+        if (Utility.isNullOrEmpty(effectId)) {
+            throw new FacebookException("Must specify a non-empty effectId");
+        }
+    }
+
     private static void validateOpenGraphContent(
             ShareOpenGraphContent openGraphContent, Validator validator) {
         validator.validate(openGraphContent.getAction());
@@ -260,7 +271,7 @@ private static void validateOpenGraphAction(
             throw new FacebookException("ShareOpenGraphAction must have a non-empty actionType");
         }
 
-        validator.validate((ShareOpenGraphValueContainer) openGraphAction, false);
+        validator.validate(openGraphAction, false);
     }
 
     private static void validateOpenGraphObject(
@@ -270,7 +281,7 @@ private static void validateOpenGraphObject(
             throw new FacebookException("Cannot share a null ShareOpenGraphObject");
         }
 
-        validator.validate((ShareOpenGraphValueContainer) openGraphObject, true);
+        validator.validate(openGraphObject, true);
     }
 
     private static void validateOpenGraphValueContainer(
@@ -394,6 +405,10 @@ public void validate(final ShareMediaContent mediaContent) {
             validateMediaContent(mediaContent, this);
         }
 
+        public void validate(final ShareCameraEffectContent cameraEffectContent) {
+            validateCameraEffectContent(cameraEffectContent, this);
+        }
+
         public void validate(final ShareOpenGraphContent openGraphContent) {
             isOpenGraphContent = true;
             validateOpenGraphContent(openGraphContent, this);
diff --git a/facebook/src/main/java/com/facebook/share/internal/ShareDialogFeature.java b/facebook-common/src/main/java/com/facebook/share/internal/ShareDialogFeature.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/internal/ShareDialogFeature.java
rename to facebook-common/src/main/java/com/facebook/share/internal/ShareDialogFeature.java
diff --git a/facebook/src/main/java/com/facebook/share/internal/ShareFeedContent.java b/facebook-common/src/main/java/com/facebook/share/internal/ShareFeedContent.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/share/internal/ShareFeedContent.java
rename to facebook-common/src/main/java/com/facebook/share/internal/ShareFeedContent.java
index 295ca4047..e3f3cdfdd 100644
--- a/facebook/src/main/java/com/facebook/share/internal/ShareFeedContent.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/ShareFeedContent.java
@@ -25,9 +25,6 @@
 
 import com.facebook.share.model.ShareContent;
 
-import java.util.HashMap;
-import java.util.Map;
-
 // This class is used specifically for backwards support in unity for various feed parameters
 // Currently this content is only supported if you set the mode to Feed when sharing.
 public class ShareFeedContent
diff --git a/facebook/src/main/java/com/facebook/share/internal/ShareInternalUtility.java b/facebook-common/src/main/java/com/facebook/share/internal/ShareInternalUtility.java
similarity index 94%
rename from facebook/src/main/java/com/facebook/share/internal/ShareInternalUtility.java
rename to facebook-common/src/main/java/com/facebook/share/internal/ShareInternalUtility.java
index 4e8305eb2..edf96c202 100644
--- a/facebook/src/main/java/com/facebook/share/internal/ShareInternalUtility.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/ShareInternalUtility.java
@@ -49,6 +49,8 @@
 import com.facebook.internal.NativeProtocol;
 import com.facebook.internal.Utility;
 import com.facebook.share.Sharer;
+import com.facebook.share.model.CameraEffectTextures;
+import com.facebook.share.model.ShareCameraEffectContent;
 import com.facebook.share.model.ShareMedia;
 import com.facebook.share.model.ShareMediaContent;
 import com.facebook.share.model.ShareOpenGraphAction;
@@ -345,6 +347,30 @@ public Bundle apply(ShareMedia item) {
         return mediaInfos;
     }
 
+    public static Bundle getTextureUrlBundle(
+            final ShareCameraEffectContent cameraEffectContent,
+            final UUID appCallId) {
+        CameraEffectTextures textures;
+        if (cameraEffectContent == null || (textures = cameraEffectContent.getTextures()) == null) {
+            return null;
+        }
+
+        Bundle attachmentUrlsBundle = new Bundle();
+        List<NativeAppCallAttachmentStore.Attachment> attachments = new ArrayList<>();
+        for (String key : textures.keySet()) {
+            NativeAppCallAttachmentStore.Attachment attachment = getAttachment(
+                    appCallId,
+                    textures.getTextureUri(key),
+                    textures.getTextureBitmap(key));
+            attachments.add(attachment);
+            attachmentUrlsBundle.putString(key, attachment.getAttachmentUrl());
+        }
+
+        NativeAppCallAttachmentStore.addAttachments(attachments);
+
+        return attachmentUrlsBundle;
+    }
+
     public static JSONObject toJSONObjectForCall(
             final UUID callId,
             final ShareOpenGraphContent content)
@@ -401,7 +427,7 @@ public JSONObject toJSONObject(SharePhoto photo) {
             for (String peopleId : content.getPeopleIds()) {
                 peopleIdSet.add(peopleId);
             }
-            actionJSON.put("tags", new ArrayList<>(peopleIdSet));
+            actionJSON.put("tags", new JSONArray(peopleIdSet));
         }
 
         return actionJSON;
@@ -418,6 +444,10 @@ public static JSONObject toJSONObjectForWeb(
                     @Override
                     public JSONObject toJSONObject(SharePhoto photo) {
                         Uri photoUri = photo.getImageUrl();
+                        if (!Utility.isWebUri(photoUri)) {
+                            throw new FacebookException("Only web images may be used in OG" +
+                                    " objects shared via the web dialog");
+                        }
                         JSONObject photoJSONObject = new JSONObject();
                         try {
                             photoJSONObject.put(
@@ -460,7 +490,7 @@ public static JSONObject removeNamespacesFromOGJsonObject(
             JSONArray names = jsonObject.names();
             for (int i = 0; i < names.length(); ++i) {
                 String key = names.getString(i);
-                Object value = null;
+                Object value;
                 value = jsonObject.get(key);
                 if (value instanceof JSONObject) {
                     value = removeNamespacesFromOGJsonObject((JSONObject) value, true);
@@ -526,6 +556,13 @@ public static JSONObject removeNamespacesFromOGJsonObject(
             uri = video.getLocalUrl();
         }
 
+        return getAttachment(callId, uri, bitmap);
+    }
+
+    private static NativeAppCallAttachmentStore.Attachment getAttachment(
+            UUID callId,
+            Uri uri,
+            Bitmap bitmap) {
         NativeAppCallAttachmentStore.Attachment attachment = null;
         if (bitmap != null) {
             attachment = NativeAppCallAttachmentStore.createAttachment(
diff --git a/facebook/src/main/java/com/facebook/share/internal/WebDialogParameters.java b/facebook-common/src/main/java/com/facebook/share/internal/WebDialogParameters.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/share/internal/WebDialogParameters.java
rename to facebook-common/src/main/java/com/facebook/share/internal/WebDialogParameters.java
index fd0cef464..ca2b5f5d8 100644
--- a/facebook/src/main/java/com/facebook/share/internal/WebDialogParameters.java
+++ b/facebook-common/src/main/java/com/facebook/share/internal/WebDialogParameters.java
@@ -33,12 +33,9 @@
 import com.facebook.share.model.SharePhoto;
 import com.facebook.share.model.SharePhotoContent;
 
-import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import java.util.ArrayList;
-import java.util.List;
 import java.util.Locale;
 
 /**
diff --git a/facebook/src/main/java/com/facebook/share/model/AppGroupCreationContent.java b/facebook-common/src/main/java/com/facebook/share/model/AppGroupCreationContent.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/model/AppGroupCreationContent.java
rename to facebook-common/src/main/java/com/facebook/share/model/AppGroupCreationContent.java
diff --git a/facebook-common/src/main/java/com/facebook/share/model/CameraEffectArguments.java b/facebook-common/src/main/java/com/facebook/share/model/CameraEffectArguments.java
new file mode 100644
index 000000000..d0af04d94
--- /dev/null
+++ b/facebook-common/src/main/java/com/facebook/share/model/CameraEffectArguments.java
@@ -0,0 +1,187 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.share.model;
+
+import android.os.Bundle;
+import android.os.Parcel;
+import android.support.annotation.Nullable;
+
+import java.util.Set;
+
+/**
+ * NOTE: This API is in a closed beta and not available for general consumption. To apply for access
+ * to the beta, please visit https://developers.facebook.com/products/camera-effects/ar-studio/.
+ * Usage of this API without admission to the beta is unsupported and WILL result in errors for
+ * users of your application.
+ *
+ * This class represents a set of Arguments that are used to configure an Effect in the Camera.
+ */
+public class CameraEffectArguments implements ShareModel {
+
+    private final Bundle params;
+
+    private CameraEffectArguments(final Builder builder) {
+        params = builder.params;
+    }
+
+    CameraEffectArguments(final Parcel in) {
+        params = in.readBundle(getClass().getClassLoader());
+    }
+
+    /**
+     * Returns the value of a String argument associated with the passed in key. If the key does
+     * not exist, or if it points to an object that is not a String, null will be returned.
+     *
+     * @param key Key for the value desired.
+     * @return The String associated with the passed in key, or null if the key does not exist or if
+     * the value is not a String.
+     */
+    @Nullable
+    public String getString(final String key) {
+        return params.getString(key);
+    }
+
+    @Nullable
+    /**
+     * Returns the value of a String[] argument associated with the passed in key. If the key does
+     * not exist, or if it points to an object that is not a String[], null will be returned.
+     *
+     * @param key Key for the value desired.
+     * @return The String[] associated with the passed in key, or null if the key does not exist or
+     * if the value is not a String[].
+     */
+    public String[] getStringArray(final String key) {
+        return params.getStringArray(key);
+    }
+
+    @Nullable
+    /**
+     * Returns the value of the argument associated with the passed in key. If the key does not
+     * exist, null will be returned
+     *
+     * @param key Key for the value desired.
+     * @return The value associated with the passed in key, or null if the key does not exist.
+     */
+    public Object get(final String key) {
+        return this.params.get(key);
+    }
+
+    /**
+     * The set of keys that have been set in this instance of CameraEffectArguments
+     * @return The set of keys that have been set in this instance of CameraEffectArguments
+     */
+    public Set<String> keySet() {
+        return this.params.keySet();
+    }
+
+    @Override
+    public int describeContents() {
+        return 0;
+    }
+
+    @Override
+    public void writeToParcel(final Parcel out, final int flags) {
+        out.writeBundle(params);
+    }
+
+    public static final Creator<CameraEffectArguments> CREATOR =
+            new Creator<CameraEffectArguments>() {
+                public CameraEffectArguments createFromParcel(final Parcel in) {
+                    return new CameraEffectArguments(in);
+                }
+
+                public CameraEffectArguments[] newArray(final int size) {
+                    return new CameraEffectArguments[size];
+                }
+            };
+
+    /**
+     * NOTE: This API is in a closed beta and not available for general consumption. To apply
+     * for access to the beta, please visit:
+     * https://developers.facebook.com/products/camera-effects/ar-studio/.
+     * Usage of this API without admission to the beta is unsupported and WILL result in errors
+     * for users of your application.
+     *
+     * Builder for the {@link com.facebook.share.model.CameraEffectArguments} class.
+     */
+    public static class Builder
+            implements ShareModelBuilder<CameraEffectArguments, Builder> {
+
+        private Bundle params = new Bundle();
+
+        /**
+         * Sets the passed in value for the passed in key. This will override any previous calls
+         * with the same key.
+         *
+         * @param key Key for the argument
+         * @param value Value of the argument
+         * @return This Builder instance
+         */
+        public Builder putArgument(final String key, final String value) {
+            params.putString(key, value);
+            return this;
+        }
+
+        /**
+         * Sets the passed in value for the passed in key. This will override any previous calls
+         * with the same key.
+         *
+         * @param key Key for the argument
+         * @param arrayValue Value of the argument
+         * @return This Builder instance
+         */
+        public Builder putArgument(final String key, final String[] arrayValue) {
+            params.putStringArray(key, arrayValue);
+            return this;
+        }
+
+        @Override
+        public Builder readFrom(final CameraEffectArguments model) {
+            if (model != null) {
+                this.params.putAll(model.params);
+            }
+            return this;
+        }
+
+        public Builder readFrom(final Parcel parcel) {
+            return this.readFrom(
+                    (CameraEffectArguments) parcel.readParcelable(
+                            CameraEffectArguments.class.getClassLoader()));
+        }
+
+        /**
+         * NOTE: This API is in a closed beta and not available for general consumption. To apply
+         * for access to the beta, please visit:
+         * https://developers.facebook.com/products/camera-effects/ar-studio/.
+         * Usage of this API without admission to the beta is unsupported and WILL result in errors
+         * for users of your application.
+         *
+         * Creates a new instance of CameraEffectArguments with the arguments that have been set
+         * in this Builder instance.
+         *
+         * @return A new instance of CameraEffectArguments.
+         */
+        @Override
+        public CameraEffectArguments build() {
+            return new CameraEffectArguments(this);
+        }
+    }
+}
diff --git a/facebook-common/src/main/java/com/facebook/share/model/CameraEffectTextures.java b/facebook-common/src/main/java/com/facebook/share/model/CameraEffectTextures.java
new file mode 100644
index 000000000..753689684
--- /dev/null
+++ b/facebook-common/src/main/java/com/facebook/share/model/CameraEffectTextures.java
@@ -0,0 +1,158 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.share.model;
+
+import android.graphics.Bitmap;
+import android.net.Uri;
+import android.os.Bundle;
+import android.os.Parcel;
+import android.os.Parcelable;
+import android.support.annotation.Nullable;
+
+import com.facebook.internal.Utility;
+
+import java.util.Set;
+
+/**
+ * NOTE: This API is in a closed beta and not available for general consumption. To apply
+ * for access to the beta, please visit:
+ * https://developers.facebook.com/products/camera-effects/ar-studio/.
+ * Usage of this API without admission to the beta is unsupported and WILL result in errors
+ * for users of your application.
+ *
+ * This class represents the textures that are used by an Effect in the Camera.
+ */
+public class CameraEffectTextures implements ShareModel {
+
+    private final Bundle textures;
+
+    private CameraEffectTextures(final Builder builder) {
+        textures = builder.textures;
+    }
+
+    CameraEffectTextures(final Parcel in) {
+        textures = in.readBundle(getClass().getClassLoader());
+    }
+
+    @Nullable
+    public Bitmap getTextureBitmap(final String key) {
+        Object value = this.textures.get(key);
+        if (value instanceof Bitmap) {
+            return (Bitmap) value;
+        }
+        return null;
+    }
+
+    @Nullable
+    public Uri getTextureUri(final String key) {
+        Object value = this.textures.get(key);
+        if (value instanceof Uri) {
+            return (Uri) value;
+        }
+        return null;
+    }
+
+    @Nullable
+    public Object get(final String key) {
+        return this.textures.get(key);
+    }
+
+    public Set<String> keySet() {
+        return this.textures.keySet();
+    }
+
+    @Override
+    public int describeContents() {
+        return 0;
+    }
+
+    @Override
+    public void writeToParcel(final Parcel out, final int flags) {
+        out.writeBundle(textures);
+    }
+
+    public static final Creator<CameraEffectTextures> CREATOR =
+            new Creator<CameraEffectTextures>() {
+                public CameraEffectTextures createFromParcel(final Parcel in) {
+                    return new CameraEffectTextures(in);
+                }
+
+                public CameraEffectTextures[] newArray(final int size) {
+                    return new CameraEffectTextures[size];
+                }
+            };
+
+    /**
+     * NOTE: This API is in a closed beta and not available for general consumption. To apply
+     * for access to the beta, please visit:
+     * https://developers.facebook.com/products/camera-effects/ar-studio/.
+     * Usage of this API without admission to the beta is unsupported and WILL result in errors
+     * for users of your application.
+     *
+     * Builder for the {@link com.facebook.share.model.CameraEffectTextures} class.
+     */
+    public static class Builder
+            implements ShareModelBuilder<CameraEffectTextures, Builder> {
+
+        private Bundle textures = new Bundle();
+
+        public Builder putTexture(final String key, Bitmap texture) {
+            return putParcelableTexture(key, texture);
+        }
+
+        public Builder putTexture(final String key, Uri textureUrl) {
+            return putParcelableTexture(key, textureUrl);
+        }
+
+        private Builder putParcelableTexture(final String key, final Parcelable parcelableTexture) {
+            if (!Utility.isNullOrEmpty(key) && parcelableTexture != null) {
+                textures.putParcelable(key, parcelableTexture);
+            }
+            return this;
+        }
+
+        @Override
+        public Builder readFrom(final CameraEffectTextures model) {
+            if (model != null) {
+                this.textures.putAll(model.textures);
+            }
+            return this;
+        }
+
+        public Builder readFrom(final Parcel parcel) {
+            return this.readFrom(
+                    (CameraEffectTextures) parcel.readParcelable(
+                            CameraEffectTextures.class.getClassLoader()));
+        }
+
+        /**
+         * NOTE: This API is in a closed beta and not available for general consumption. To apply
+         * for access to the beta, please visit:
+         * https://developers.facebook.com/products/camera-effects/ar-studio/.
+         * Usage of this API without admission to the beta is unsupported and WILL result in errors
+         * for users of your application.
+         */
+        @Override
+        public CameraEffectTextures build() {
+            return new CameraEffectTextures(this);
+        }
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/share/model/GameRequestContent.java b/facebook-common/src/main/java/com/facebook/share/model/GameRequestContent.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/share/model/GameRequestContent.java
rename to facebook-common/src/main/java/com/facebook/share/model/GameRequestContent.java
index d9d185471..cc4fa0c2b 100644
--- a/facebook/src/main/java/com/facebook/share/model/GameRequestContent.java
+++ b/facebook-common/src/main/java/com/facebook/share/model/GameRequestContent.java
@@ -23,7 +23,6 @@
 import android.os.Parcel;
 import android.text.TextUtils;
 
-import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 
diff --git a/facebook-common/src/main/java/com/facebook/share/model/ShareCameraEffectContent.java b/facebook-common/src/main/java/com/facebook/share/model/ShareCameraEffectContent.java
new file mode 100644
index 000000000..16ea83dc3
--- /dev/null
+++ b/facebook-common/src/main/java/com/facebook/share/model/ShareCameraEffectContent.java
@@ -0,0 +1,191 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.share.model;
+
+import android.os.Parcel;
+
+/**
+ * NOTE: This API is in a closed beta and not available for general consumption. To apply
+ * for access to the beta, please visit:
+ * https://developers.facebook.com/products/camera-effects/ar-studio/.
+ * Usage of this API without admission to the beta is unsupported and WILL result in errors
+ * for users of your application.
+ *
+ * Describes the Camera Effect to be shared.
+ *
+ * Use {@link ShareCameraEffectContent.Builder} to build instances.
+ *
+ * See documentation for
+ * <a href="https://developers.facebook.com/docs/sharing/best-practices">best practices</a>.
+ */
+public class ShareCameraEffectContent
+        extends ShareContent<ShareCameraEffectContent, ShareCameraEffectContent.Builder> {
+
+    private String effectId;
+    private CameraEffectArguments arguments;
+    private CameraEffectTextures textures;
+
+    private ShareCameraEffectContent(final Builder builder) {
+        super(builder);
+
+        this.effectId = builder.effectId;
+        this.arguments = builder.arguments;
+        this.textures = builder.textures;
+    }
+
+    ShareCameraEffectContent(final Parcel in) {
+        super(in);
+
+        this.effectId = in.readString();
+        this.arguments = new CameraEffectArguments.Builder().readFrom(in).build();
+        this.textures = new CameraEffectTextures.Builder().readFrom(in).build();
+    }
+
+    @Override
+    public void writeToParcel(final Parcel out, final int flags) {
+        super.writeToParcel(out, flags);
+
+        out.writeString(effectId);
+        out.writeParcelable(arguments, 0);
+        out.writeParcelable(textures, 0);
+    }
+
+    /**
+     * Returns the Effect Id represented in this content instance, as set in the Builder.
+     *
+     * @return The Effect Id
+     */
+    public String getEffectId() {
+        return this.effectId;
+    }
+
+    /**
+     * Returns the Arguments for the Effect represented in this content instance, as set in the
+     * Builder.
+     *
+     * @return Effect Arguments
+     */
+    public CameraEffectArguments getArguments() {
+        return this.arguments;
+    }
+
+    /**
+     * Returns the Textures for the Effect represented in this content instance, as set in the
+     * Builder.
+     *
+     * @return Effect Textures
+     */
+    public CameraEffectTextures getTextures() {
+        return this.textures;
+    }
+
+    @SuppressWarnings("unused")
+    public static final Creator<ShareCameraEffectContent> CREATOR =
+            new Creator<ShareCameraEffectContent>() {
+                public ShareCameraEffectContent createFromParcel(final Parcel in) {
+                    return new ShareCameraEffectContent(in);
+                }
+
+                public ShareCameraEffectContent[] newArray(final int size) {
+                    return new ShareCameraEffectContent[size];
+                }
+            };
+
+    /**
+     * NOTE: This API is in a closed beta and not available for general consumption. To apply
+     * for access to the beta, please visit:
+     * https://developers.facebook.com/products/camera-effects/ar-studio/.
+     * Usage of this API without admission to the beta is unsupported and WILL result in errors
+     * for users of your application.
+     *
+     * Builder for the {@link ShareCameraEffectContent} interface.
+     */
+    public static final class Builder
+            extends ShareContent.Builder<ShareCameraEffectContent, Builder> {
+
+        private String effectId;
+        private CameraEffectArguments arguments;
+        private CameraEffectTextures textures;
+
+        /**
+         * Sets the Effect Id for the Effect represented by this content instance. This must be an
+         * Id of an effect that is published and approved.
+         *
+         * @param effectId Id of the Effect.
+         * @return This builder instance
+         */
+        public Builder setEffectId(String effectId) {
+            this.effectId = effectId;
+            return this;
+        }
+
+        /**
+         * Sets the Arguments for the Effect represented by this content instance.
+         *
+         * @param arguments Arguments for this Effect
+         * @return This builder instance
+         */
+        public Builder setArguments(CameraEffectArguments arguments) {
+            this.arguments = arguments;
+            return this;
+        }
+
+        /**
+         * Sets the Textures for the Effect represented by this content instance.
+         *
+         * @param textures Textures for this Effect
+         * @return This builder instance
+         */
+        public Builder setTextures(CameraEffectTextures textures) {
+            this.textures = textures;
+            return this;
+        }
+
+        /**
+         * NOTE: This API is in a closed beta and not available for general consumption. To apply
+         * for access to the beta, please visit:
+         * https://developers.facebook.com/products/camera-effects/ar-studio/.
+         * Usage of this API without admission to the beta is unsupported and WILL result in errors
+         * for users of your application.
+         *
+         * Creates a new instance of ShareCameraEffectContent with the properties as set on this
+         * Builder instance
+         *
+         * @return A new instance of ShareCameraEffectContent
+         */
+        @Override
+        public ShareCameraEffectContent build() {
+            return new ShareCameraEffectContent(this);
+        }
+
+        @Override
+        public ShareCameraEffectContent.Builder readFrom(final ShareCameraEffectContent model) {
+            if (model == null) {
+                return this;
+            }
+
+            return super
+                    .readFrom(model)
+                    .setEffectId(effectId)
+                    .setArguments(arguments);
+        }
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareContent.java b/facebook-common/src/main/java/com/facebook/share/model/ShareContent.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/model/ShareContent.java
rename to facebook-common/src/main/java/com/facebook/share/model/ShareContent.java
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareHashtag.java b/facebook-common/src/main/java/com/facebook/share/model/ShareHashtag.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/model/ShareHashtag.java
rename to facebook-common/src/main/java/com/facebook/share/model/ShareHashtag.java
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareLinkContent.java b/facebook-common/src/main/java/com/facebook/share/model/ShareLinkContent.java
similarity index 74%
rename from facebook/src/main/java/com/facebook/share/model/ShareLinkContent.java
rename to facebook-common/src/main/java/com/facebook/share/model/ShareLinkContent.java
index f95134a75..d074078d6 100644
--- a/facebook/src/main/java/com/facebook/share/model/ShareLinkContent.java
+++ b/facebook-common/src/main/java/com/facebook/share/model/ShareLinkContent.java
@@ -23,6 +23,7 @@
 import android.net.Uri;
 import android.os.Parcel;
 import android.support.annotation.Nullable;
+import android.util.Log;
 
 /**
  * Describes link content to be shared.
@@ -33,9 +34,9 @@
  */
 public final class ShareLinkContent
         extends ShareContent<ShareLinkContent, ShareLinkContent.Builder> {
-    private final String contentDescription;
-    private final String contentTitle;
-    private final Uri imageUrl;
+    @Deprecated private final String contentDescription;
+    @Deprecated private final String contentTitle;
+    @Deprecated private final Uri imageUrl;
     private final String quote;
 
     private ShareLinkContent(final Builder builder) {
@@ -55,27 +56,36 @@ private ShareLinkContent(final Builder builder) {
     }
 
     /**
+     * @deprecated As of Graph API 2.9 this field is deprecated and may not function as expected.
+     * For more information, see https://developers.facebook.com/docs/apps/changelog#v2_9_deprecations.
      * The description of the link.  If not specified, this field is automatically populated by
      * information scraped from the link, typically the title of the page.
      * @return The description of the link.
      */
+    @Deprecated
     public String getContentDescription() {
         return this.contentDescription;
     }
 
     /**
+     * @deprecated As of Graph API 2.9 this field is deprecated and may not function as expected.
+     * For more information, see https://developers.facebook.com/docs/apps/changelog#v2_9_deprecations.
      * The title to display for this link.
      * @return The link title.
      */
+    @Deprecated
     @Nullable
     public String getContentTitle() {
         return this.contentTitle;
     }
 
     /**
+     * @deprecated As of Graph API 2.9 this field is deprecated and may not function as expected.
+     * For more information, see https://developers.facebook.com/docs/apps/changelog#v2_9_deprecations.
      * The URL of a picture to attach to this content.
      * @return The network URL of an image.
      */
+    @Deprecated
     @Nullable
     public Uri getImageUrl() {
         return this.imageUrl;
@@ -119,39 +129,50 @@ public ShareLinkContent createFromParcel(final Parcel in) {
      */
     public static final class Builder
             extends ShareContent.Builder<ShareLinkContent, Builder> {
-        private String contentDescription;
-        private String contentTitle;
-        private Uri imageUrl;
+        static final String TAG = Builder.class.getSimpleName();
+        @Deprecated private String contentDescription;
+        @Deprecated private String contentTitle;
+        @Deprecated private Uri imageUrl;
+
         private String quote;
 
         /**
+         * @deprecated As of Graph API 2.9 this field is deprecated and may not function as expected.
          * Set the contentDescription of the link.
+         * For more information, see https://developers.facebook.com/docs/apps/changelog#v2_9_deprecations.
          * @param contentDescription The contentDescription of the link.
          * @return The builder.
          */
+        @Deprecated
         public Builder setContentDescription(
                 @Nullable final String contentDescription) {
-            this.contentDescription = contentDescription;
+            Log.w(TAG, "This method does nothing. ContentDescription is deprecated in Graph API 2.9.");
             return this;
         }
 
         /**
+         * @deprecated As of Graph API 2.9 this field is deprecated and may not function as expected.
+         * For more information, see https://developers.facebook.com/docs/apps/changelog#v2_9_deprecations.
          * Set the contentTitle to display for this link.
          * @param contentTitle The link contentTitle.
          * @return The builder.
          */
+        @Deprecated
         public Builder setContentTitle(@Nullable final String contentTitle) {
-            this.contentTitle = contentTitle;
+            Log.w(TAG, "This method does nothing. ContentTitle is deprecated in Graph API 2.9.");
             return this;
         }
 
         /**
+         * @deprecated As of Graph API 2.9 this field is deprecated and may not function as expected.
+         * For more information, see https://developers.facebook.com/docs/apps/changelog#v2_9_deprecations.
          * Set the URL of a picture to attach to this content.
          * @param imageUrl The network URL of an image.
          * @return The builder.
          */
+        @Deprecated
         public Builder setImageUrl(@Nullable final Uri imageUrl) {
-            this.imageUrl = imageUrl;
+            Log.w(TAG, "This method does nothing. ImageUrl is deprecated in Graph API 2.9.");
             return this;
         }
 
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareMedia.java b/facebook-common/src/main/java/com/facebook/share/model/ShareMedia.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/share/model/ShareMedia.java
rename to facebook-common/src/main/java/com/facebook/share/model/ShareMedia.java
index f1be45be7..96efc6b29 100644
--- a/facebook/src/main/java/com/facebook/share/model/ShareMedia.java
+++ b/facebook-common/src/main/java/com/facebook/share/model/ShareMedia.java
@@ -22,11 +22,9 @@
 
 import android.os.Bundle;
 import android.os.Parcel;
-import android.os.ParcelFormatException;
 import android.os.Parcelable;
 
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.List;
 
 /**
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareMediaContent.java b/facebook-common/src/main/java/com/facebook/share/model/ShareMediaContent.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/model/ShareMediaContent.java
rename to facebook-common/src/main/java/com/facebook/share/model/ShareMediaContent.java
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareModel.java b/facebook-common/src/main/java/com/facebook/share/model/ShareModel.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/model/ShareModel.java
rename to facebook-common/src/main/java/com/facebook/share/model/ShareModel.java
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareModelBuilder.java b/facebook-common/src/main/java/com/facebook/share/model/ShareModelBuilder.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/share/model/ShareModelBuilder.java
rename to facebook-common/src/main/java/com/facebook/share/model/ShareModelBuilder.java
index 4e8fe2968..3500dde49 100644
--- a/facebook/src/main/java/com/facebook/share/model/ShareModelBuilder.java
+++ b/facebook-common/src/main/java/com/facebook/share/model/ShareModelBuilder.java
@@ -20,8 +20,6 @@
 
 package com.facebook.share.model;
 
-import android.os.Parcel;
-
 import com.facebook.share.ShareBuilder;
 
 /**
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareOpenGraphAction.java b/facebook-common/src/main/java/com/facebook/share/model/ShareOpenGraphAction.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/model/ShareOpenGraphAction.java
rename to facebook-common/src/main/java/com/facebook/share/model/ShareOpenGraphAction.java
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareOpenGraphContent.java b/facebook-common/src/main/java/com/facebook/share/model/ShareOpenGraphContent.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/model/ShareOpenGraphContent.java
rename to facebook-common/src/main/java/com/facebook/share/model/ShareOpenGraphContent.java
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareOpenGraphObject.java b/facebook-common/src/main/java/com/facebook/share/model/ShareOpenGraphObject.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/model/ShareOpenGraphObject.java
rename to facebook-common/src/main/java/com/facebook/share/model/ShareOpenGraphObject.java
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareOpenGraphValueContainer.java b/facebook-common/src/main/java/com/facebook/share/model/ShareOpenGraphValueContainer.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/model/ShareOpenGraphValueContainer.java
rename to facebook-common/src/main/java/com/facebook/share/model/ShareOpenGraphValueContainer.java
diff --git a/facebook/src/main/java/com/facebook/share/model/SharePhoto.java b/facebook-common/src/main/java/com/facebook/share/model/SharePhoto.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/model/SharePhoto.java
rename to facebook-common/src/main/java/com/facebook/share/model/SharePhoto.java
diff --git a/facebook/src/main/java/com/facebook/share/model/SharePhotoContent.java b/facebook-common/src/main/java/com/facebook/share/model/SharePhotoContent.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/share/model/SharePhotoContent.java
rename to facebook-common/src/main/java/com/facebook/share/model/SharePhotoContent.java
index fccbc67de..8b740bf7b 100644
--- a/facebook/src/main/java/com/facebook/share/model/SharePhotoContent.java
+++ b/facebook-common/src/main/java/com/facebook/share/model/SharePhotoContent.java
@@ -23,8 +23,6 @@
 import android.os.Parcel;
 import android.support.annotation.Nullable;
 
-import com.facebook.share.internal.ShareConstants;
-
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareVideo.java b/facebook-common/src/main/java/com/facebook/share/model/ShareVideo.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/model/ShareVideo.java
rename to facebook-common/src/main/java/com/facebook/share/model/ShareVideo.java
diff --git a/facebook/src/main/java/com/facebook/share/model/ShareVideoContent.java b/facebook-common/src/main/java/com/facebook/share/model/ShareVideoContent.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/model/ShareVideoContent.java
rename to facebook-common/src/main/java/com/facebook/share/model/ShareVideoContent.java
diff --git a/facebook/src/main/java/com/facebook/share/widget/LikeView.java b/facebook-common/src/main/java/com/facebook/share/widget/LikeView.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/share/widget/LikeView.java
rename to facebook-common/src/main/java/com/facebook/share/widget/LikeView.java
index b23d39ebb..eaf07ba56 100644
--- a/facebook/src/main/java/com/facebook/share/widget/LikeView.java
+++ b/facebook-common/src/main/java/com/facebook/share/widget/LikeView.java
@@ -40,8 +40,10 @@
 import android.widget.TextView;
 
 import com.facebook.FacebookException;
-import com.facebook.R;
+import com.facebook.common.R;
 import com.facebook.internal.*;
+import com.facebook.internal.AnalyticsEvents;
+import com.facebook.internal.FragmentWrapper;
 import com.facebook.share.internal.LikeActionController;
 import com.facebook.share.internal.LikeBoxCountView;
 import com.facebook.share.internal.LikeButton;
diff --git a/facebook/src/main/java/com/facebook/share/widget/ShareDialog.java b/facebook-common/src/main/java/com/facebook/share/widget/ShareDialog.java
similarity index 85%
rename from facebook/src/main/java/com/facebook/share/widget/ShareDialog.java
rename to facebook-common/src/main/java/com/facebook/share/widget/ShareDialog.java
index 4613c6a25..5b0c3773c 100644
--- a/facebook/src/main/java/com/facebook/share/widget/ShareDialog.java
+++ b/facebook-common/src/main/java/com/facebook/share/widget/ShareDialog.java
@@ -26,7 +26,9 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
+import android.util.Log;
 
+import com.facebook.AccessToken;
 import com.facebook.FacebookCallback;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.internal.AnalyticsEvents;
@@ -39,6 +41,7 @@
 import com.facebook.internal.NativeAppCallAttachmentStore;
 import com.facebook.internal.Utility;
 import com.facebook.share.Sharer;
+import com.facebook.share.internal.CameraEffectFeature;
 import com.facebook.share.internal.LegacyNativeDialogParameters;
 import com.facebook.share.internal.NativeDialogParameters;
 import com.facebook.share.internal.OpenGraphActionDialogFeature;
@@ -47,6 +50,7 @@
 import com.facebook.share.internal.ShareFeedContent;
 import com.facebook.share.internal.ShareInternalUtility;
 import com.facebook.share.internal.WebDialogParameters;
+import com.facebook.share.model.ShareCameraEffectContent;
 import com.facebook.share.model.ShareContent;
 import com.facebook.share.model.ShareLinkContent;
 import com.facebook.share.model.ShareMediaContent;
@@ -88,6 +92,8 @@
         FEED
     }
 
+    private static final String TAG = ShareDialog.class.getSimpleName();
+
     private static final String FEED_DIALOG = "feed";
     public static final String WEB_SHARE_DIALOG = "share";
     private static final String WEB_OG_SHARE_DIALOG = "share_open_graph";
@@ -168,9 +174,35 @@ private static boolean canShowWebTypeCheck(Class<? extends ShareContent> content
         // The instance method version of this check is more accurate and should be used on
         // ShareDialog instances.
 
+        // SharePhotoContent currently requires the user staging endpoint, so we need a user access
+        // token, so we need to see if we have one
+        final AccessToken accessToken = AccessToken.getCurrentAccessToken();
+        final boolean haveUserAccessToken = accessToken != null && !accessToken.isExpired();
+
         return ShareLinkContent.class.isAssignableFrom(contentType)
                 || ShareOpenGraphContent.class.isAssignableFrom(contentType)
-                || SharePhotoContent.class.isAssignableFrom(contentType);
+                || (SharePhotoContent.class.isAssignableFrom(contentType) && haveUserAccessToken);
+    }
+
+    private static boolean canShowWebCheck(ShareContent content) {
+        if (!canShowWebTypeCheck(content.getClass())) {
+            return false;
+        }
+
+        if (content instanceof ShareOpenGraphContent) {
+            final ShareOpenGraphContent ogContent = ((ShareOpenGraphContent) content);
+            try {
+                ShareInternalUtility.toJSONObjectForWeb(ogContent);
+            } catch (Exception e) {
+                Log.d(
+                    TAG,
+                    "canShow returned false because the content of the Opem Graph object" +
+                      " can't be shared via the web dialog",
+                    e);
+                return false;
+            }
+        }
+        return true;
     }
 
     /**
@@ -278,6 +310,7 @@ protected AppCall createBaseAppCall() {
         handlers.add(new NativeHandler());
         handlers.add(new FeedHandler()); // Feed takes precedence for link-shares for Mode.AUTOMATIC
         handlers.add(new WebShareHandler());
+        handlers.add(new CameraEffectHandler());
 
         return handlers;
     }
@@ -290,7 +323,7 @@ public Object getMode() {
 
         @Override
         public boolean canShow(final ShareContent content, boolean isBestEffort) {
-            if (content == null) {
+            if (content == null || (content instanceof ShareCameraEffectContent)) {
                 return false;
             }
 
@@ -356,7 +389,7 @@ public Object getMode() {
 
         @Override
         public boolean canShow(final ShareContent content, boolean isBestEffort) {
-            return (content != null) && ShareDialog.canShowWebTypeCheck(content.getClass());
+            return (content != null) && ShareDialog.canShowWebCheck(content);
         }
 
         @Override
@@ -462,6 +495,51 @@ public AppCall createAppCall(final ShareContent content) {
         }
     }
 
+    private class CameraEffectHandler extends ModeHandler {
+        @Override
+        public Object getMode() {
+            return Mode.NATIVE;
+        }
+
+        @Override
+        public boolean canShow(final ShareContent content, boolean isBestEffort) {
+            boolean canShowResult = (content instanceof ShareCameraEffectContent);
+
+            return canShowResult && ShareDialog.canShowNative(content.getClass());
+        }
+
+        @Override
+        public AppCall createAppCall(final ShareContent content) {
+            ShareContentValidation.validateForNativeShare(content);
+
+            final AppCall appCall = createBaseAppCall();
+            final boolean shouldFailOnDataError = getShouldFailOnDataError();
+
+            DialogPresenter.setupAppCallForNativeDialog(
+                    appCall,
+                    new DialogPresenter.ParameterProvider() {
+                        @Override
+                        public Bundle getParameters() {
+                            return NativeDialogParameters.create(
+                                    appCall.getCallId(),
+                                    content,
+                                    shouldFailOnDataError);
+                        }
+
+                        @Override
+                        public Bundle getLegacyParameters() {
+                            return LegacyNativeDialogParameters.create(
+                                    appCall.getCallId(),
+                                    content,
+                                    shouldFailOnDataError);
+                        }
+                    },
+                    getFeature(content.getClass()));
+
+            return appCall;
+        }
+    }
+
     private static DialogFeature getFeature(
             Class<? extends ShareContent> contentType) {
         if (ShareLinkContent.class.isAssignableFrom(contentType)) {
@@ -474,6 +552,8 @@ private static DialogFeature getFeature(
             return OpenGraphActionDialogFeature.OG_ACTION_DIALOG;
         } else if (ShareMediaContent.class.isAssignableFrom(contentType)) {
             return ShareDialogFeature.MULTIMEDIA;
+        } else if (ShareCameraEffectContent.class.isAssignableFrom(contentType)) {
+            return CameraEffectFeature.SHARE_CAMERA_EFFECT;
         }
         return null;
     }
diff --git a/facebook/src/main/res/color/com_facebook_button_text_color.xml b/facebook-common/src/main/res/color/com_facebook_button_text_color.xml
similarity index 100%
rename from facebook/src/main/res/color/com_facebook_button_text_color.xml
rename to facebook-common/src/main/res/color/com_facebook_button_text_color.xml
diff --git a/facebook-common/src/main/res/drawable-hdpi/com_facebook_button_icon_blue.png b/facebook-common/src/main/res/drawable-hdpi/com_facebook_button_icon_blue.png
new file mode 100644
index 000000000..0b9da8598
Binary files /dev/null and b/facebook-common/src/main/res/drawable-hdpi/com_facebook_button_icon_blue.png differ
diff --git a/facebook/src/main/res/drawable-hdpi/com_facebook_button_icon_white.png b/facebook-common/src/main/res/drawable-hdpi/com_facebook_button_icon_white.png
similarity index 100%
rename from facebook/src/main/res/drawable-hdpi/com_facebook_button_icon_white.png
rename to facebook-common/src/main/res/drawable-hdpi/com_facebook_button_icon_white.png
diff --git a/facebook-common/src/main/res/drawable-hdpi/com_facebook_button_like_icon_selected.png b/facebook-common/src/main/res/drawable-hdpi/com_facebook_button_like_icon_selected.png
new file mode 100644
index 000000000..32b581d83
Binary files /dev/null and b/facebook-common/src/main/res/drawable-hdpi/com_facebook_button_like_icon_selected.png differ
diff --git a/facebook-common/src/main/res/drawable-hdpi/com_facebook_close.png b/facebook-common/src/main/res/drawable-hdpi/com_facebook_close.png
new file mode 100644
index 000000000..b60be9c27
Binary files /dev/null and b/facebook-common/src/main/res/drawable-hdpi/com_facebook_close.png differ
diff --git a/facebook-common/src/main/res/drawable-mdpi/com_facebook_button_icon_blue.png b/facebook-common/src/main/res/drawable-mdpi/com_facebook_button_icon_blue.png
new file mode 100644
index 000000000..2194532f9
Binary files /dev/null and b/facebook-common/src/main/res/drawable-mdpi/com_facebook_button_icon_blue.png differ
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_button_icon_white.png b/facebook-common/src/main/res/drawable-mdpi/com_facebook_button_icon_white.png
similarity index 100%
rename from facebook/src/main/res/drawable-mdpi/com_facebook_button_icon_white.png
rename to facebook-common/src/main/res/drawable-mdpi/com_facebook_button_icon_white.png
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_button_like_icon_selected.png b/facebook-common/src/main/res/drawable-mdpi/com_facebook_button_like_icon_selected.png
similarity index 100%
rename from facebook/src/main/res/drawable-mdpi/com_facebook_button_like_icon_selected.png
rename to facebook-common/src/main/res/drawable-mdpi/com_facebook_button_like_icon_selected.png
diff --git a/facebook-common/src/main/res/drawable-mdpi/com_facebook_close.png b/facebook-common/src/main/res/drawable-mdpi/com_facebook_close.png
new file mode 100755
index 000000000..dce68511a
Binary files /dev/null and b/facebook-common/src/main/res/drawable-mdpi/com_facebook_close.png differ
diff --git a/facebook-common/src/main/res/drawable-xhdpi/com_facebook_button_icon_blue.png b/facebook-common/src/main/res/drawable-xhdpi/com_facebook_button_icon_blue.png
new file mode 100644
index 000000000..ff313d4c7
Binary files /dev/null and b/facebook-common/src/main/res/drawable-xhdpi/com_facebook_button_icon_blue.png differ
diff --git a/facebook/src/main/res/drawable-xhdpi/com_facebook_button_icon_white.png b/facebook-common/src/main/res/drawable-xhdpi/com_facebook_button_icon_white.png
similarity index 100%
rename from facebook/src/main/res/drawable-xhdpi/com_facebook_button_icon_white.png
rename to facebook-common/src/main/res/drawable-xhdpi/com_facebook_button_icon_white.png
diff --git a/facebook-common/src/main/res/drawable-xhdpi/com_facebook_button_like_icon_selected.png b/facebook-common/src/main/res/drawable-xhdpi/com_facebook_button_like_icon_selected.png
new file mode 100644
index 000000000..225ddf873
Binary files /dev/null and b/facebook-common/src/main/res/drawable-xhdpi/com_facebook_button_like_icon_selected.png differ
diff --git a/facebook-common/src/main/res/drawable-xhdpi/com_facebook_close.png b/facebook-common/src/main/res/drawable-xhdpi/com_facebook_close.png
new file mode 100755
index 000000000..2597da9fd
Binary files /dev/null and b/facebook-common/src/main/res/drawable-xhdpi/com_facebook_close.png differ
diff --git a/facebook-common/src/main/res/drawable-xxhdpi/com_facebook_button_icon_blue.png b/facebook-common/src/main/res/drawable-xxhdpi/com_facebook_button_icon_blue.png
new file mode 100644
index 000000000..35b63356e
Binary files /dev/null and b/facebook-common/src/main/res/drawable-xxhdpi/com_facebook_button_icon_blue.png differ
diff --git a/facebook/src/main/res/drawable-xxhdpi/com_facebook_button_icon_white.png b/facebook-common/src/main/res/drawable-xxhdpi/com_facebook_button_icon_white.png
similarity index 100%
rename from facebook/src/main/res/drawable-xxhdpi/com_facebook_button_icon_white.png
rename to facebook-common/src/main/res/drawable-xxhdpi/com_facebook_button_icon_white.png
diff --git a/facebook-common/src/main/res/drawable-xxhdpi/com_facebook_button_like_icon_selected.png b/facebook-common/src/main/res/drawable-xxhdpi/com_facebook_button_like_icon_selected.png
new file mode 100644
index 000000000..617169c75
Binary files /dev/null and b/facebook-common/src/main/res/drawable-xxhdpi/com_facebook_button_like_icon_selected.png differ
diff --git a/facebook/src/main/res/drawable/com_facebook_auth_dialog_background.xml b/facebook-common/src/main/res/drawable/com_facebook_auth_dialog_background.xml
similarity index 100%
rename from facebook/src/main/res/drawable/com_facebook_auth_dialog_background.xml
rename to facebook-common/src/main/res/drawable/com_facebook_auth_dialog_background.xml
diff --git a/facebook/src/main/res/drawable/com_facebook_auth_dialog_cancel_background.xml b/facebook-common/src/main/res/drawable/com_facebook_auth_dialog_cancel_background.xml
similarity index 100%
rename from facebook/src/main/res/drawable/com_facebook_auth_dialog_cancel_background.xml
rename to facebook-common/src/main/res/drawable/com_facebook_auth_dialog_cancel_background.xml
diff --git a/facebook/src/main/res/drawable/com_facebook_auth_dialog_header_background.xml b/facebook-common/src/main/res/drawable/com_facebook_auth_dialog_header_background.xml
similarity index 100%
rename from facebook/src/main/res/drawable/com_facebook_auth_dialog_header_background.xml
rename to facebook-common/src/main/res/drawable/com_facebook_auth_dialog_header_background.xml
diff --git a/facebook/src/main/res/drawable/com_facebook_button_background.xml b/facebook-common/src/main/res/drawable/com_facebook_button_background.xml
similarity index 100%
rename from facebook/src/main/res/drawable/com_facebook_button_background.xml
rename to facebook-common/src/main/res/drawable/com_facebook_button_background.xml
diff --git a/facebook/src/main/res/drawable/com_facebook_button_icon.xml b/facebook-common/src/main/res/drawable/com_facebook_button_icon.xml
similarity index 100%
rename from facebook/src/main/res/drawable/com_facebook_button_icon.xml
rename to facebook-common/src/main/res/drawable/com_facebook_button_icon.xml
diff --git a/facebook/src/main/res/drawable/com_facebook_button_like_background.xml b/facebook-common/src/main/res/drawable/com_facebook_button_like_background.xml
similarity index 100%
rename from facebook/src/main/res/drawable/com_facebook_button_like_background.xml
rename to facebook-common/src/main/res/drawable/com_facebook_button_like_background.xml
diff --git a/facebook/src/main/res/drawable/com_facebook_favicon_blue.xml b/facebook-common/src/main/res/drawable/com_facebook_favicon_blue.xml
similarity index 100%
rename from facebook/src/main/res/drawable/com_facebook_favicon_blue.xml
rename to facebook-common/src/main/res/drawable/com_facebook_favicon_blue.xml
diff --git a/facebook/src/main/res/layout/com_facebook_activity_layout.xml b/facebook-common/src/main/res/layout/com_facebook_activity_layout.xml
similarity index 100%
rename from facebook/src/main/res/layout/com_facebook_activity_layout.xml
rename to facebook-common/src/main/res/layout/com_facebook_activity_layout.xml
diff --git a/facebook/src/main/res/layout/com_facebook_device_auth_dialog_fragment.xml b/facebook-common/src/main/res/layout/com_facebook_device_auth_dialog_fragment.xml
similarity index 94%
rename from facebook/src/main/res/layout/com_facebook_device_auth_dialog_fragment.xml
rename to facebook-common/src/main/res/layout/com_facebook_device_auth_dialog_fragment.xml
index 5b7001999..79a3dd493 100644
--- a/facebook/src/main/res/layout/com_facebook_device_auth_dialog_fragment.xml
+++ b/facebook-common/src/main/res/layout/com_facebook_device_auth_dialog_fragment.xml
@@ -27,13 +27,13 @@
     app:cardElevation="10dp">
 
     <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="wrap_content"
+        android:layout_width="300dp"
         android:layout_height="wrap_content"
         android:background="@drawable/com_facebook_auth_dialog_background"
         android:orientation="vertical">
 
         <RelativeLayout
-            android:layout_width="300dp"
+            android:layout_width="match_parent"
             android:layout_height="100dp"
             android:background="@drawable/com_facebook_auth_dialog_header_background"
             android:orientation="horizontal">
@@ -85,7 +85,7 @@
             android:layout_marginStart="16dp"
             android:layout_marginTop="20dp"
             android:fontFamily="roboto_condensed"
-            android:gravity="center_horizontal"
+            android:gravity="center"
             android:singleLine="false"
             android:textColor="@color/com_facebook_device_auth_text"
             android:textSize="12sp"
@@ -93,7 +93,7 @@
 
         <FrameLayout
             android:layout_width="match_parent"
-            android:layout_height="match_parent"
+            android:layout_height="wrap_content"
             android:layout_marginBottom="17dp"
             android:layout_marginTop="14dp">
 
@@ -111,7 +111,9 @@
                 android:textColor="@color/com_facebook_device_auth_text"
                 android:textSize="10sp"
                 android:textStyle="bold"
-                android:typeface="sans" />
+                android:typeface="sans" >
+                    <requestFocus />
+            </Button>
         </FrameLayout>
 
     </LinearLayout>
diff --git a/facebook/src/main/res/layout/com_facebook_login_fragment.xml b/facebook-common/src/main/res/layout/com_facebook_login_fragment.xml
similarity index 100%
rename from facebook/src/main/res/layout/com_facebook_login_fragment.xml
rename to facebook-common/src/main/res/layout/com_facebook_login_fragment.xml
diff --git a/facebook-common/src/main/res/layout/com_facebook_smart_device_dialog_fragment.xml b/facebook-common/src/main/res/layout/com_facebook_smart_device_dialog_fragment.xml
new file mode 100644
index 000000000..915705df3
--- /dev/null
+++ b/facebook-common/src/main/res/layout/com_facebook_smart_device_dialog_fragment.xml
@@ -0,0 +1,138 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<android.support.v7.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    app:cardBackgroundColor="@android:color/transparent"
+    app:cardElevation="10dp">
+
+    <LinearLayout
+        android:layout_width="600dp"
+        android:layout_height="wrap_content"
+        android:background="@drawable/com_facebook_auth_dialog_background"
+        android:orientation="vertical"
+        android:gravity="center_horizontal"
+        >
+
+        <RelativeLayout
+            android:layout_width="match_parent"
+            android:layout_height="110dp"
+            android:background="@drawable/com_facebook_auth_dialog_header_background"
+            android:orientation="horizontal">
+
+            <FrameLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content">
+
+                <android.support.v7.widget.AppCompatImageView
+                    android:layout_width="18dp"
+                    android:layout_height="18dp"
+                    android:layout_marginBottom="11dp"
+                    android:layout_marginStart="12dp"
+                    android:layout_marginLeft="12dp"
+                    android:layout_marginTop="11dp"
+                    android:adjustViewBounds="false"
+                    android:scaleType="fitXY"
+                    app:srcCompat="@drawable/com_facebook_favicon_blue" />
+            </FrameLayout>
+
+            <TextView
+                android:id="@+id/confirmation_code"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_centerInParent="true"
+                android:fontFamily="sans-serif-light"
+                android:gravity="center"
+                android:textColor="@color/com_smart_login_code"
+                android:textSize="52sp"
+                android:typeface="sans"
+                android:visibility="invisible" />
+
+            <ProgressBar
+                android:id="@+id/progress_bar"
+                android:layout_width="wrap_content"
+                android:layout_height="0dp"
+                android:layout_alignBottom="@+id/confirmation_code"
+                android:layout_alignTop="@+id/confirmation_code"
+                android:layout_centerHorizontal="true"
+                android:layout_centerInParent="true"
+                android:layout_centerVertical="true" />
+
+        </RelativeLayout>
+
+        <TextView
+            android:id="@+id/com_facebook_smart_instructions_0"
+            style="@style/com_facebook_auth_dialog_instructions_textview"
+            android:layout_marginTop="18dp"
+            android:layout_marginStart="90dp"
+            android:layout_marginEnd="90dp"
+            android:layout_marginLeft="90dp"
+            android:layout_marginRight="90dp"
+            android:text="@string/com_facebook_smart_device_instructions"
+            />
+
+        <TextView
+            android:id="@+id/com_facebook_smart_instructions_or"
+            style="@style/com_facebook_auth_dialog_instructions_textview"
+            android:layout_width="match_parent"
+            android:gravity="center_horizontal"
+            android:textStyle="bold"
+            android:layout_marginTop="12dp"
+            android:layout_marginStart="0dp"
+            android:layout_marginEnd="0dp"
+            android:text="@string/com_facebook_smart_device_instructions_or"
+            />
+
+        <TextView
+        android:id="@+id/com_facebook_device_auth_instructions"
+        style="@style/com_facebook_auth_dialog_instructions_textview"
+        android:layout_marginTop="12dp"
+        />
+
+        <FrameLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="17dp"
+            android:layout_marginTop="17dp"
+            >
+
+            <Button
+                android:id="@+id/cancel_button"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:minWidth="200dp"
+                android:layout_gravity="center_horizontal"
+                android:background="@drawable/com_facebook_auth_dialog_cancel_background"
+                android:clickable="true"
+                android:focusable="true"
+                android:fontFamily="sans-serif-medium"
+                android:text="@android:string/cancel"
+                android:textAllCaps="true"
+                android:textColor="@color/com_facebook_device_auth_text"
+                android:textSize="18sp"
+                android:textStyle="bold"
+                android:typeface="sans" />
+        </FrameLayout>
+
+    </LinearLayout>
+</android.support.v7.widget.CardView>
diff --git a/facebook-common/src/main/res/values-af/strings.xml b/facebook-common/src/main/res/values-af/strings.xml
new file mode 100644
index 000000000..32cc26472
--- /dev/null
+++ b/facebook-common/src/main/res/values-af/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: af_ZA -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Hou van</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Hou van</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Teken uit</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Teken aan</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Meld aan met Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Gaan voort met Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Aangemeld as: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Aangemeld met Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Teken uit</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Kanselleer</string>
+    <string name="com_facebook_loading" gender="unknown">Laai tans …</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest-fout</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-aanmelding vereis INTERNET-toestemming</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Jy is in beheer – kies watter inligting jy met toepassings wil deel.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Onvoorsiene fout terwyl die prent afgelaai is.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Deel</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Stuur</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Besoek &lt;b&gt;facebook.com/device&lt;/b&gt; en voer die kode wat hierbo gewys word, in.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Maak die Facebook-toepassing op jou mobiele toestel oop en soek kennisgewings om jou rekening te koppel.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- OF -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Bevestig aanmelding</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Gaan voort as %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Nie jy nie?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-ar/strings.xml b/facebook-common/src/main/res/values-ar/strings.xml
new file mode 100644
index 000000000..3389c2cb7
--- /dev/null
+++ b/facebook-common/src/main/res/values-ar/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ar_AR -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">أعجبني</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">أعجبك</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">تسجيل الخروج</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">تسجيل الدخول</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">تسجيل الدخول بحساب فيسبوك</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">متابعة بحساب فيسبوك</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">تم تسجيل الدخول باسم: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">تم تسجيل الدخول باستخدام حساب فيسبوك</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">تسجيل الخروج</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">إلغاء</string>
+    <string name="com_facebook_loading" gender="unknown">جارٍ التحميل…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">خطأ AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">يتطلب تسجيل دخول WebView الحصول إلى إذن INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">أنت المتحكم في الأمر - يمكنك اختيار المعلومات التي تود مشاركتها مع التطبيقات.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">حدث خطأ غير متوقع أثناء تنزيل صورة.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">مشاركة</string>
+    <string name="com_facebook_send_button_text" gender="unknown">إرسال</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">تفضل بزيارة &lt;b&gt;facebook.com/device&lt;/b&gt; وإدخال الرمز الموضح أعلاه.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">لربط حسابك، افتح تطبيق فيسبوك على جهازك المحمول وراجع الإشعارات.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- أو -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">تأكيد تسجيل الدخول</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">متابعة باسم %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">لست أنت؟</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-bn/strings.xml b/facebook-common/src/main/res/values-bn/strings.xml
new file mode 100644
index 000000000..b6537c710
--- /dev/null
+++ b/facebook-common/src/main/res/values-bn/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: bn_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">লাইক</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">পছন্দ করেছে</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">লগ আউট করুন</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">লগ ইন করুন</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook দিয়ে লগইন করুন</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook এর সাথে চালিয়ে যান</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s হিসাবে লগ ইন করা হয়েছে।</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ব্যবহার করার মাধ্যমে লগ ইন করা হয়েছে</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">লগ আউট করুন</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">বাতিল করুন</string>
+    <string name="com_facebook_loading" gender="unknown">লোড হচ্ছে…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest ত্রুটি</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView লগ ইনের ইন্টারনেটের অনুমতি প্রয়োজন</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">আপনার নিয়ন্ত্রণ রয়েছে - আপনি অ্যাপগুলির সাথে কোন তথ্য শেয়ার করতে চান সেটি বেছে নিন।</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">একটি ছবি ডাউনলোড করার সময় অপ্রত্যাশিত ত্রুটি ঘটেছে৷</string>
+    <string name="com_facebook_share_button_text" gender="unknown">শেয়ার করুন</string>
+    <string name="com_facebook_send_button_text" gender="unknown">পাঠান</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; দেখুন এবং উপরে দেখানো কোডটিকে প্রবেশ করান৷</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">আপনার অ্যাকাউন্ট সংযুক্ত করতে, আপনার মোবাইল ডিভাইসে Facebook অ্যাপ খুলুন এবং বিজ্ঞপ্তিগুলির জন্য পরীক্ষা করুন।</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- বা -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">লগ ইন নিশ্চিত করুন</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s হিসাবে চালিয়ে যান</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">আপনি নন?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-cs/strings.xml b/facebook-common/src/main/res/values-cs/strings.xml
new file mode 100644
index 000000000..b07e05acc
--- /dev/null
+++ b/facebook-common/src/main/res/values-cs/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: cs_CZ -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">To se mi líbí</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">To se mi už líbí</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Odhlásit se</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Přihlášení</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Přihlásit se přes Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Pokračovat přes Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Přihlášen(a) jako: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Přihlášení přes Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Odhlásit se</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Zrušit</string>
+    <string name="com_facebook_loading" gender="unknown">Načítání...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Chyba AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView vyžaduje oprávnění pro INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Je to jen na vás – nastavte si, které informace chcete s aplikacemi sdílet.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Neočekávaná chyba při stahování obrázku.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Sdílet</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Odeslat</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Přejděte na &lt;b&gt;facebook.com/device&lt;/b&gt; a zadejte nahoře uvedený kód.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Pokud chcete připojit svůj účet, spusťte aplikaci Facebook ve svém mobilním zařízení a zkontrolujte upozornění.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- NEBO -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Potvrďte přihlášení</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Pokračovat jako %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Nejste to vy?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-da/strings.xml b/facebook-common/src/main/res/values-da/strings.xml
new file mode 100644
index 000000000..8f987fe02
--- /dev/null
+++ b/facebook-common/src/main/res/values-da/strings.xml
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: da_DK -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Synes godt om</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Synes godt om</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Log af</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Log på</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Log på med Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Fortsæt med Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Logget på som %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Logget på med Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Log af</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Annuller</string>
+    <string name="com_facebook_loading" gender="unknown">Indlæser …</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Fejl i AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-login kræver INTERNET-tilladelse</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Du har kontrollen – Vælg, hvilke informationer du vil dele med apps.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Uventet fejl under download af billede.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Del</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Gå til &lt;b&gt;facebook.com/device&lt;/b&gt; og indtast koden, som er vist ovenfor.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">For at tilslutte din konto skal du åbne Facebook-appen på din mobilenhed og se efter, om der er notifikationer.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ELLER -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Bekræft login</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Fortsæt som %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Ikke dig?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-de/strings.xml b/facebook-common/src/main/res/values-de/strings.xml
new file mode 100644
index 000000000..222c68ff9
--- /dev/null
+++ b/facebook-common/src/main/res/values-de/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: de_DE -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Gefällt mir</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Gefällt dir</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Abmelden</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Melde dich an</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Mit Facebook anmelden</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Weiter mit Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Angemeldet als: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Mit Facebook angemeldet</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Abmelden</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Abbrechen</string>
+    <string name="com_facebook_loading" gender="unknown">Wird geladen ...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidOffensichtlicher Fehler</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-Anmeldung erfordert INTERNET-Berechtigung</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Du bestimmst, welche Informationen du mit Apps teilen möchtest.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Unerwarteter Fehler beim Herunterladen eines Bildes.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Teilen</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Senden</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Gehe zu &lt;b&gt;facebook.com/device&lt;/b&gt; und gib den oben angezeigten Code ein.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Öffne die Facebook-App auf deinem Mobilgerät, um dich mit deinem Konto zu verbinden und nach Benachrichtigungen zu suchen.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ODER -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Anmeldung bestätigen</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Weiter als %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Das bist du nicht?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-el/strings.xml b/facebook-common/src/main/res/values-el/strings.xml
new file mode 100644
index 000000000..b68cf0ab3
--- /dev/null
+++ b/facebook-common/src/main/res/values-el/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: el_GR -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Μου αρέσει!</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Σας αρέσει</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Αποσύνδεση</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Σύνδεση</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Συνδεθείτε μέσω Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Συνέχεια με το Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Έχετε συνδεθεί ως: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Έγινε σύνδεση μέσω Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Αποσύνδεση</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Ακύρωση</string>
+    <string name="com_facebook_loading" gender="unknown">Φόρτωση...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Σφάλμα AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Για σύνδεση στην εφαρμογή WebView απαιτείται άδεια INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Εσείς έχετε τον έλεγχο - επιλέξτε ποιες πληροφορίες θέλετε να κοινοποιείτε στις εφαρμογές.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Παρουσιάστηκε μη αναμενόμενο σφάλμα κατά τη λήψη μιας εικόνας.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Κοινοποιήστε</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Αποστολή</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Πηγαίνετε στη διεύθυνση &lt;b&gt;facebook.com/device&lt;/b&gt; και εισαγάγετε τον παραπάνω κωδικό.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Για να συνδέσετε το λογαριασμό σας, ανοίξτε την εφαρμογή Facebook στη φορητή συσκευή σας και ελέγξτε για ειδοποιήσεις.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- Ή -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Επιβεβαίωση σύνδεσης</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Συνέχεια ως %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Δεν είστε εσείς;</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-en-rGB/strings.xml b/facebook-common/src/main/res/values-en-rGB/strings.xml
new file mode 100644
index 000000000..22bbe4865
--- /dev/null
+++ b/facebook-common/src/main/res/values-en-rGB/strings.xml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: en_GB -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_loading" gender="unknown">Loading…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest error</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView login requires Internet permission</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">You\'re in control – choose what information you want to share with apps.</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-es-rES/strings.xml b/facebook-common/src/main/res/values-es-rES/strings.xml
new file mode 100644
index 000000000..d9faad9f0
--- /dev/null
+++ b/facebook-common/src/main/res/values-es-rES/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: es_ES -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Me gusta</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Te gusta</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Salir</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Entrar</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Inicia sesión con Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continuar con Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Sesión iniciada como: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Has iniciado sesión con Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Salir</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Cancelar</string>
+    <string name="com_facebook_loading" gender="unknown">Cargando…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Error de AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">El inicio de sesión en WebView requiere permisos de INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Tú decides qué información quieres compartir con las aplicaciones.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Se ha producido un error inesperado al descargar una imagen.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Compartir</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Enviar</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; e introduce el código que se muestra más arriba.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Para conectar tu cuenta, abre la aplicación de Facebook en tu dispositivo móvil y comprueba las notificaciones.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- O -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Confirmar inicio de sesión</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continuar como %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">¿No eres tú?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-es/strings.xml b/facebook-common/src/main/res/values-es/strings.xml
new file mode 100644
index 000000000..e8e001985
--- /dev/null
+++ b/facebook-common/src/main/res/values-es/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: es_LA -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Me gusta</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Te gusta</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Salir</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Entrar</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Iniciar sesión con Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continuar con Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Sesión iniciada como: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Iniciaste sesión con Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Salir</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Cancelar</string>
+    <string name="com_facebook_loading" gender="unknown">Cargando...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Error de AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">El inicio de sesión de WebView requiere permisos de INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Tú decides qué información quieres compartir con las aplicaciones.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Se produjo un error inesperado al descargar una imagen.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Compartir</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Enviar</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Ve a &lt;b&gt;facebook.com/device&lt;/b&gt; e ingresa el código que se muestra arriba.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Para conectar tu cuenta, abre la aplicación de Facebook en tu dispositivo móvil y comprueba las notificaciones.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">o</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Confirmar inicio de sesión</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continuar como %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">¿No eres tú?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-fi/strings.xml b/facebook-common/src/main/res/values-fi/strings.xml
new file mode 100644
index 000000000..f2bffab23
--- /dev/null
+++ b/facebook-common/src/main/res/values-fi/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: fi_FI -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Tykkää</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Tykätty</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Kirjaudu ulos</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Kirjaudu sisään</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Kirjaudu Facebook-tunnuksilla</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Jatka Facebookissa</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Kirjautunut sisään nimellä %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Kirjauduttu sisään Facebook-tunnuksilla</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Kirjaudu ulos</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Peruuta</string>
+    <string name="com_facebook_loading" gender="unknown">Ladataan...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest-virhe</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-sisäänkirjautuminen edellyttää Internet-lupaa</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Sinä päätät - valitse mitkä tiedot haluat jakaa sovelluksille</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Kuvaa ladattaessa tapahtui yllättävä virhe.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Jaa</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Lähetä</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Siirry osoitteeseen &lt;b&gt;facebook.com/device&lt;/b&gt; ja anna oheinen koodi.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Liitä tilisi avaamalla Facebook-sovellus matkapuhelimellasi ja tarkistamalla ilmoitukset.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- TAI -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Vahvista sisäänkirjautuminen</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Jatka nimellä %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Etkö ole tämä henkilö?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-fr/strings.xml b/facebook-common/src/main/res/values-fr/strings.xml
new file mode 100644
index 000000000..5c84a76df
--- /dev/null
+++ b/facebook-common/src/main/res/values-fr/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: fr_FR -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">J’aime</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">J’aime déjà</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Déconnexion</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Connectez-vous</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Se connecter avec Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continuer avec Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Connecté(e) en tant que : %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Connecté(e) avec Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Déconnexion</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Annuler</string>
+    <string name="com_facebook_loading" gender="unknown">Chargement...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Erreur AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">La connexion à WebView nécessite une autorisation INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Vous avez le contrôle - choisissez les informations que vous voulez partager avec les apps.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Une erreur inattendue s’est produite lors du téléchargement d’une image.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Publier</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Envoyer</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Consultez &lt;b&gt;facebook.com/device&lt;/b&gt; et entrez le code affiché ci-dessus.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Pour associer votre compte, ouvrez l’app Facebook sur votre appareil mobile et vérifiez les notifications.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- OU -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Confirmer la connexion</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continuer en tant que %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Ce n’est pas vous ?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-gu/strings.xml b/facebook-common/src/main/res/values-gu/strings.xml
new file mode 100644
index 000000000..c91af5459
--- /dev/null
+++ b/facebook-common/src/main/res/values-gu/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: gu_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">પસંદ કરો</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ગમ્યું</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">લૉગ આઉટ કરો</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">લૉગ ઇન કરો</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook થી લૉગિન કરો</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook સાથે ચાલુ રાખો</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s: તરીકે લૉગ ઇન છે</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">તમે Facebook નો ઉપયોગ કરીને લોગ ઇન કર્યું છે</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">લૉગ આઉટ કરો</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">રદ કરો</string>
+    <string name="com_facebook_loading" gender="unknown">લોડ થઈ રહ્યું છે…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest ભૂલ</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView લૉગિનને ઇન્ટરનેટ પરવાનગીની જરૂર છે</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">તમે નિયંત્રણમાં છો - તમે એપ્લિકેશન્સ સાથે શું માહિતી શેર કરવા માંગો પસંદ કરો.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">છબી ડાઉનલોડ કરતી વખતે એક અનપેક્ષિત ભૂલ આવી.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">શેર કરો</string>
+    <string name="com_facebook_send_button_text" gender="unknown">મોકલો</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&amp;gt ની મુલકાત લો; અને ઉપર આપેલો કોડ દાખલ કરો.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">તમારા એકાઉન્ટ સાથે કનેક્ટ કરવા માટે, તમારા મોબાઇલ ઉપકરણ પર Facebook એપ્લિકેશન ખોલો અને સૂચનાઓ માટે તપાસો.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- અથવા -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">લૉગિનની પુષ્ટિ કરો</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s તરીકે ચાલુ રાખો</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">તમે નથી?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-hi/strings.xml b/facebook-common/src/main/res/values-hi/strings.xml
new file mode 100644
index 000000000..65b19888c
--- /dev/null
+++ b/facebook-common/src/main/res/values-hi/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: hi_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">पसंद करें</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">पसंद किया</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">लॉग आउट करें</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">लॉग इन</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook से लॉग इन करें</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook के साथ जारी रखें</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">इस रूप में लॉग इन हैं: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook का उपयोग करके लॉग इन किया है</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">लॉग आउट करें</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">रद्द करें</string>
+    <string name="com_facebook_loading" gender="unknown">लोड हो रहा है...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest गलती</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView लॉग इन के लिए इंटरनेट अनुमति आवश्यक है</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">नियंत्रण आपके पास है - चुनें कि आप एप्लिकेशन के साथ कौन सी जानकारी साझा करना चाहते हैं.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">चित्र डाउनलोड करते समय अनपेक्षित त्रुटि हुई.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">साझा करें</string>
+    <string name="com_facebook_send_button_text" gender="unknown">भेजें</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; पर विज़िट करें और ऊपर दिखाया गया कोड डालें.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">अपने खाते से कनेक्ट करने के लिए, अपने मोबाइल डिवाइस पर Facebook एप्लिकेशन खोलें और सूचनाएँ जाँचें.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- या -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">लॉग इन कन्फ़र्म करें</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s के रूप में जारी रखें</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">आप नहीं हैं?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-hr/strings.xml b/facebook-common/src/main/res/values-hr/strings.xml
new file mode 100644
index 000000000..016cdf947
--- /dev/null
+++ b/facebook-common/src/main/res/values-hr/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: hr_HR -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Sviđa mi se</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Označeno sa \"sviđa mi se\"</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Odjava</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Prijava</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Prijavi se putem Facebooka</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Nastavak uz Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Prijavljeni ste kao: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Prijavljeni ste putem Facebooka</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Odjava</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Odustani</string>
+    <string name="com_facebook_loading" gender="unknown">Učitavanje...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Pogreška AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Prijava WebView zahtijeva dopuštenje za INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Vi odlučujete – odaberite koje informacije želite podijeliti s aplikacijama.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Neočekivana pogreška prilikom preuzimanja slike.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Podijeli</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Pošalji</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Posjetitw &lt;b&gt;facebook.com/device&lt;/b&gt; i unesite gore prikazani kôd.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Za povezivanje svog računa otvorite aplikaciju Facebook na mobilnom uređaju i pročitajte obavijesti.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ILI -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Potvrdi prijavu</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Nastavite kao %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Ovo niste vi?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-hu/strings.xml b/facebook-common/src/main/res/values-hu/strings.xml
new file mode 100644
index 000000000..6dc9c20f2
--- /dev/null
+++ b/facebook-common/src/main/res/values-hu/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: hu_HU -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Tetszik</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Kedvelt</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Kijelentkezés</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Belépés</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Bejelentkezés Facebookkal</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Folytatás a Facebookkal</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Bejelentkezve %1$s néven</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Bejelentkezve a Facebook használatával</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Kijelentkezés</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Mégsem</string>
+    <string name="com_facebook_loading" gender="unknown">Betöltés…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest hiba</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">A WebView-bejelentkezéshez „INTERNET” jogosultság szükséges.</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Te irányítasz – válaszd ki, milyen adatokat szeretnél megosztani az alkalmazásokkal.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Váratlan hiba történt a kép letöltésekor.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Megosztás</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Küldés</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Keresd fel a &lt;b&gt;facebook.com/device&lt;/b&gt; címet, és írd be a fent megjelenített kódot.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">A fiók hozzákapcsolásához nyisd meg a mobilkészülékeden a Facebook alkalmazást, és nézd meg az értesítéseket.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- VAGY -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Bejelentkezés megerősítése</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Folytatás mint %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Nem te vagy az?</string>
+</resources>
diff --git a/facebook/src/main/res/values-id/strings.xml b/facebook-common/src/main/res/values-id/strings.xml
similarity index 72%
rename from facebook/src/main/res/values-id/strings.xml
rename to facebook-common/src/main/res/values-id/strings.xml
index 76bbb24bc..895b0f331 100644
--- a/facebook/src/main/res/values-id/strings.xml
+++ b/facebook-common/src/main/res/values-id/strings.xml
@@ -24,17 +24,22 @@
     <string name="com_facebook_like_button_liked">Disukai</string>
     <string name="com_facebook_loginview_log_out_button">Keluar</string>
     <string name="com_facebook_loginview_log_in_button">Masuk</string>
+    <string name="com_facebook_loginview_log_in_button_continue">Lanjutkan dengan Facebook</string>
     <string name="com_facebook_loginview_log_in_button_long">Masuk menggunakan Facebook</string>
     <string name="com_facebook_loginview_logged_in_as">Masuk sebagai: %1$s</string>
     <string name="com_facebook_loginview_logged_in_using_facebook">Masuk menggunakan Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Keluar</string>
     <string name="com_facebook_loginview_cancel_action">Batal</string>
-    <string name="com_facebook_loading">Memuat...</string>
+    <string name="com_facebook_loading">Memuat&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">Kesalahan AndroidManifest</string>
     <string name="com_facebook_internet_permission_error_message">Masuk WebView memerlukan izin INTERNET</string>
-    <string name="com_facebook_tooltip_default">Baru! Anda memegang kendali - pilih info yang ingin Anda bagikan dengan aplikasi.</string>
+    <string name="com_facebook_tooltip_default">Anda memegang kendali - pilih info yang ingin Anda bagikan dengan aplikasi.</string>
     <string name="com_facebook_image_download_unknown_error">Kesalahan yang tidak diharapkan saat mengunduh gambar.</string>
     <string name="com_facebook_share_button_text">Berbagi</string>
     <string name="com_facebook_send_button_text">Kirim</string>
-    <string name="com_facebook_device_auth_instructions">Buka &lt;b&gt;facebook.com/device&lt;/b&gt; dari smartphone Anda atau komputer dan masukkan kode ini:</string>
+    <string name="com_facebook_device_auth_instructions">Kunjungi &lt;b&gt;facebook.com/device&lt;/b&gt; dan masukkan kode yang ditampilkan di atas.</string>
+    <string name="com_facebook_smart_device_instructions">Untuk menghubungkan akun Anda, buka aplikasi Facebook di perangkat seluler Anda dan periksa pemberitahuan.</string>
+    <string name="com_facebook_smart_login_confirmation_cancel">Bukan Anda?</string>
+    <string name="com_facebook_smart_login_confirmation_title">Konfirmasikan Masuk</string>
+    <string name="com_facebook_smart_device_instructions_or">- ATAU -</string>
 </resources>
diff --git a/facebook-common/src/main/res/values-in/strings.xml b/facebook-common/src/main/res/values-in/strings.xml
new file mode 100644
index 000000000..04ea86a53
--- /dev/null
+++ b/facebook-common/src/main/res/values-in/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: id_ID -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Suka</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Suka</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Keluar</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Masuk</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Masuk dengan Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Lanjutkan dengan Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Masuk sebagai: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Masuk menggunakan Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Keluar</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Batalkan</string>
+    <string name="com_facebook_loading" gender="unknown">Memuat…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Terjadi Kesalahan AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Masuk Tampilan Web memerlukan izin INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Anda memegang kendali - pilih info apa yang ingin Anda bagikan dengan aplikasi.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Kesalahan tak terduga ketika mengunduh gambar.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Bagikan</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Kirim</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Kunjungi &lt;b&gt;facebook.com/device&lt;/b&gt; dan masukkan kode yang ditampilkan di bawah ini.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Untuk menghubungkan akun Anda, buka aplikasi Facebook di perangkat seluler Anda dan lihat pemberitahuan.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ATAU -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Konfirmasikan Masuk</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Lanjutkan sebagai %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Bukan Anda?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-it/strings.xml b/facebook-common/src/main/res/values-it/strings.xml
new file mode 100644
index 000000000..06e864c95
--- /dev/null
+++ b/facebook-common/src/main/res/values-it/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: it_IT -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Mi piace</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Ti piace</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Esci</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Accedi</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Accedi con Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continua con Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Accesso effettuato come %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Accesso effettuato tramite Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Esci</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Annulla</string>
+    <string name="com_facebook_loading" gender="unknown">Caricamento in corso...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Errore AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">L\'accesso alla visualizzazione Web richiede le autorizzazioni Internet</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Il controllo è nelle tue mani: scegli quali informazioni condividere con le app.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Errore imprevisto durante il download dell\'immagine.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Condividi</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Invia</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; e inserisci il codice mostrato qui sotto.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Per connettere il tuo account, apri l\'app Facebook dal tuo dispositivo mobile e controlla le notifiche.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- oppure -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Conferma accesso</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continua come %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Non sei tu?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-iw/strings.xml b/facebook-common/src/main/res/values-iw/strings.xml
new file mode 100644
index 000000000..f04525a69
--- /dev/null
+++ b/facebook-common/src/main/res/values-iw/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: he_IL -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">אהבתי</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">אהבתי</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">התנתק/י</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">התחבר</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">התחברות באמצעות פייסבוק</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">המשך/המשיכי עם פייסבוק</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">מחובר/ת בתור: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">מחובר/ת כמשתמש בפייסבוק</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">התנתק/י</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">בטל</string>
+    <string name="com_facebook_loading" gender="unknown">טוען...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">שגיאת AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">התחברות WebView דורשת הרשאת אינטרנט</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">את/ה בשליטה - בחר/י אילו פרטים ברצונך לשתף עם אפליקציות.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">שגיאה לא צפויה במהלך הורדת תמונה.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">שתף/שתפי</string>
+    <string name="com_facebook_send_button_text" gender="unknown">שלח/י</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">יש לבקר בכתובת facebook.com/device&lt;/b&amp;gt ולהזין את הקוד המוצג למעלה</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">כדי לחבר את חשבונך, יש לפתוח את אפליקציית פייסבוק במכשיר הנייד ולבדוק אם יש התראות.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- או -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">אשר/י את ההתחברות</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">המשך/המשיכי בתור %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">לא את/ה?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-ja/strings.xml b/facebook-common/src/main/res/values-ja/strings.xml
new file mode 100644
index 000000000..c4ff47cc5
--- /dev/null
+++ b/facebook-common/src/main/res/values-ja/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ja_JP -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">いいね！</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">「いいね！」しました</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">ログアウト</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">ログイン</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebookでログイン</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebookでログイン</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$sとしてログイン中</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebookでログイン中</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">ログアウト</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">キャンセル</string>
+    <string name="com_facebook_loading" gender="unknown">読み込み中です…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifestエラー</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebViewにログインするには、インターネットへのアクセスが必要です</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">アプリと共有する情報をコントロールすることができます。</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">画像のダウンロードで何らかのエラーが発生しました。</string>
+    <string name="com_facebook_share_button_text" gender="unknown">シェアする</string>
+    <string name="com_facebook_send_button_text" gender="unknown">送信</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt;にアクセスして、上のコードを入力してください。</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">アカウントをリンクするには、モバイル機器でFacebookアプリを開いて、お知らせをご確認ください。</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- または -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">ログインを実行</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$sとしてログイン</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">別のアカウントでログイン</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-kn/strings.xml b/facebook-common/src/main/res/values-kn/strings.xml
new file mode 100644
index 000000000..d6ac550b0
--- /dev/null
+++ b/facebook-common/src/main/res/values-kn/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: kn_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">ಇಷ್ಟ</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ಇಷ್ಟಪಟ್ಟಿದ್ದಾರೆ</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">ಲಾಗ್ ಔಟ್</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">ಲಾಗ್ ಇನ್</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook ನೊಂದಿಗೆ ಲಾಗ್ ಇನ್ ಮಾಡಿ</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook ನೊಂದಿಗೆ ಮುಂದುವರಿಸಿ</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s ಎಂದು ಲಾಗಿನ್ ಮಾಡಲಾಗಿದೆ</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ಬಳಸಿ ಲಾಗಿನ್ ಮಾಡಲಾಗಿದೆ</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">ಲಾಗ್ ಔಟ್</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">ರದ್ದುಮಾಡು</string>
+    <string name="com_facebook_loading" gender="unknown">ಲೋಡ್ ಆಗುತ್ತಿದೆ...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Android ಮ್ಯಾನಿಫೆಸ್ಟ್ ದೋಷ</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">ವೆಬ್ ವೀಕ್ಷಣೆ ಲಾಗಿನ್‌ಗೆ ಇಂಟರ್ನೆಟ್ ಅನುಮತಿಯ ಅಗತ್ಯವಿದೆ</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">ನೀವು ನಿಯಂತ್ರಣದಲ್ಲಿದ್ದಿರಿ- ಅಪ್ಲಿಕೇಶನ್‌ಗಳೊಂದಿಗೆ ನೀವು ಯಾವ ಮಾಹಿತಿಯನ್ನು ಹಂಚಿಕೊಳ್ಳಬೇಕೆಂದು ಆಯ್ಕೆಮಾಡಿ.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">ಚಿತ್ರವನ್ನು ಡೌನ್‌ಲೋಡ್ ಮಾಡುವಾಗ ಅನಿರೀಕ್ಷಿತ ದೋಷ.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">ಹಂಚಿರಿ</string>
+    <string name="com_facebook_send_button_text" gender="unknown">ಕಳುಹಿಸಿ</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; ಗೆ ಭೇಟಿ ನೀಡಿ ಮತ್ತು ಮೇಲೆ ತೋರಿಸಿದ ಕೋಡ್ ಅನ್ನು ನಮೂದಿಸಿ.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">ನಿಮ್ಮ ಖಾತೆಯನ್ನು ಸಂಪರ್ಕಿಸಲು, ನಿಮ್ಮ ಮೊಬೈಲ್ ಸಾಧನದಲ್ಲಿ Facebook ಅಪ್ಲಿಕೇಶನ್ ತೆರೆಯಿರಿ ಮತ್ತು ಅಧಿಸೂಚನೆಗಳಿಗಾಗಿ ಪರಿಶೀಲಿಸಿ.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ಅಥವಾ -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">ಲಾಗಿನ್ ಖಚಿತಪಡಿಸಿ</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s ಎಂದು ಮುಂದುವರಿಸಿ</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">ನೀವಲ್ಲವೇ?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-ko/strings.xml b/facebook-common/src/main/res/values-ko/strings.xml
new file mode 100644
index 000000000..1e2b9b85b
--- /dev/null
+++ b/facebook-common/src/main/res/values-ko/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ko_KR -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">좋아요</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">좋아요</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">로그아웃</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">로그인</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook으로 로그인</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook으로 계속하기</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">로그인 사용자: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook을 사용하여 로그인함</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">로그아웃</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">취소</string>
+    <string name="com_facebook_loading" gender="unknown">읽어들이는 중...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest 오류</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView 로그인에 인터넷 권한이 필요합니다</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">앱과 공유할 정보를 자유롭게 선택할 수 있습니다.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">이미지를 다운로드하는 중 예기치 않은 오류가 발생했습니다.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">공유하기</string>
+    <string name="com_facebook_send_button_text" gender="unknown">보내기</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt;에 방문하여 위 코드를 입력하세요.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">계정에 연결하려면 모바일 기기에서 Facebook 앱을 열고 알림을 확인하세요.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- 또는 -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">로그인 확인</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s님으로 계속</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">회원님이 아닌가요?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-ml/strings.xml b/facebook-common/src/main/res/values-ml/strings.xml
new file mode 100644
index 000000000..17c55e1ea
--- /dev/null
+++ b/facebook-common/src/main/res/values-ml/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ml_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">ലൈക്കുചെയ്യുക</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ലൈക്കുചെയ്തു</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">ലോഗൗട്ട് ചെയ്യുക</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">ലോഗിന് ചെയ്യുക</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook ഉപയോഗിച്ച് ലോഗിൻ ചെയ്യുക</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook ഉപയോഗിച്ച് തുടരുക</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">എന്നയാളായി ലോഗ് ഇൻ ചെയ്‌തു: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ഉപയോഗിച്ച് ലോഗിൻ ചെയ്‌തു</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">ലോഗൗട്ട് ചെയ്യുക</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">റദ്ദാക്കുക</string>
+    <string name="com_facebook_loading" gender="unknown">ലോഡ് ചെയ്യുന്നു…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest പിശക്</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView ലോഗിൻ ചെയ്യാൻ ഇന്റർനെറ്റ് അനുമതി ആവശ്യമാണ്</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">നിങ്ങൾ നിയന്ത്രണത്തിലാണ് - ആപ്പുകൾ ഉപയോഗിച്ച് നിങ്ങൾക്ക് എന്ത് വിവരമാണ് പങ്കിടേണ്ടതെന്ന് തിരഞ്ഞെടുക്കുക.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">ഒരു ചിത്രം ഡൗൺലോഡുചെയ്യുമ്പോൾ അജ്ഞാതമായ പിശക് സംഭവിച്ചു.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">പങ്കിടുക</string>
+    <string name="com_facebook_send_button_text" gender="unknown">അയയ്ക്കുക</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; സന്ദർശിച്ച് മുകളിൽ കാണിച്ചിരിക്കുന്ന കോഡ് നൽകുക.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">നിങ്ങളുടെ അക്കൗണ്ട് കണക്‌റ്റ്ചെയ്യാൻ, നിങ്ങളുടെ മൊബൈൽ ഉപകരണത്തിലെ Facebook ആപ്പ് തുറന്ന് അറിയിപ്പുകൾ പരിശോധിക്കുക.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- അല്ലെങ്കിൽ -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">ലോഗിൻ സ്ഥിരീകരിക്കുക</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s എന്നയാളായി തുടരുക</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">നിങ്ങള്‍ അല്ലേ?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-mr/strings.xml b/facebook-common/src/main/res/values-mr/strings.xml
new file mode 100644
index 000000000..d01142746
--- /dev/null
+++ b/facebook-common/src/main/res/values-mr/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: mr_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">आवडले</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">पसंत केले</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">लॉग आउट करा</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">लॉग इन करा</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook सह लॉग इन करा</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook सह चालू ठेवा</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s म्हणून लॉग इन केले</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook वापरून लॉग इन केले</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">लॉग आउट करा</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">रद्द करा</string>
+    <string name="com_facebook_loading" gender="unknown">लोड करत आहे…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest त्रुटी</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView लॉग इन ला इंटरनेट परवानगीची आवश्यकता आहे</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">तुम्ही नियंत्रणात आहात - तुम्ही अॅपसह कोणती माहिती सामायिक करू इच्छिता ते निवडा.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">प्रतिमा डाउनलोड करत असताना अनपेक्षित त्रुटी आली.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">शेअर करा</string>
+    <string name="com_facebook_send_button_text" gender="unknown">पाठवा</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; भेट द्या आणि वरील कोड प्रविष्ट करा.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">तुमचे खाते कनेक्ट करण्यासाठी, तुमच्या मोबाईल उपकरणावर Facebook अॅप उघडा आणि सूचना तपासा.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- किंवा -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">लॉग इन पुष्टी करा</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s म्हणून चालू ठेवा</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">आपण नाही?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-ms/strings.xml b/facebook-common/src/main/res/values-ms/strings.xml
new file mode 100644
index 000000000..203791a31
--- /dev/null
+++ b/facebook-common/src/main/res/values-ms/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ms_MY -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Suka</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Disukai</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Log keluar</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Log masuk</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Log masuk dengan Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Teruskan dengan Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Dilog masuk sebagai %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Log masuk menggunakan Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Log keluar</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Batal</string>
+    <string name="com_facebook_loading" gender="unknown">Memuatkan...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Ralat AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Log masuk WebView memerlukan kebenaran INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Anda berada dalam kawalan - pilih maklumat yang anda mahu berkongsi dengan aplikasi.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Ralat tidak dijangka semasa memuat turun imej.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Kongsi</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Hantar</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Lawati &lt;b&gt;facebook.com/device&lt;/b&gt; dan masukkan kod yang ditunjukkan di atas.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Untuk menyambungkan akaun anda, buka aplikasi Facebook pada peranti mudah alih anda, dan semak untuk pemberitahuan.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ATAU -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Sahkan Log Masuk</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Teruskan sebagai %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Bukan anda?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-nb/strings.xml b/facebook-common/src/main/res/values-nb/strings.xml
new file mode 100644
index 000000000..014e5d823
--- /dev/null
+++ b/facebook-common/src/main/res/values-nb/strings.xml
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: nb_NO -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Liker</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Likt</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Logg av</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Logg inn</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Logg inn med Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Fortsett med Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Logget inn som %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Innlogget med Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Logg av</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Avbryt</string>
+    <string name="com_facebook_loading" gender="unknown">Laster inn ...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest-feil</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-innlogging krever INTERNETT-tillatelse</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Du bestemmer – velg hvilke opplysninger du vil dele med apper.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Det oppstod en uvented feil under nedlasting av et bilde.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Del</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Gå til &lt;b&gt;facebook.com/device&lt;/b&gt; og skriv inn koden som vises over.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Koble til kontoen din ved å åpne Facebook-appen på mobilenheten din og se etter varsler.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">– ELLER –</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Bekreft innlogging</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Fortsett som %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Ikke deg?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-nl/strings.xml b/facebook-common/src/main/res/values-nl/strings.xml
new file mode 100644
index 000000000..32ebcc148
--- /dev/null
+++ b/facebook-common/src/main/res/values-nl/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: nl_NL -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Vind ik leuk</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Vind ik leuk</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Afmelden</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Aanmelden</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Aanmelden met Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Doorgaan met Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Aangemeld als: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Aangemeld via Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Afmelden</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Annuleren</string>
+    <string name="com_facebook_loading" gender="unknown">Laden...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest-fout</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Voor WebView-aanmelding is INTERNET-toestemming vereist</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Jij hebt de controle: bepaal welke informatie je met apps wilt delen.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Onverwachte fout bij downloaden van afbeelding.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Delen</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Verzenden</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Ga naar &lt;b&gt;facebook.com/device&lt;/b&gt; en voer de bovenstaande code in.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Als je je account wilt koppelen, open je de Facebook-app op je mobiele apparaat en controleer je je meldingen.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- OF -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Aanmelding bevestigen</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Doorgaan als %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Ben jij dit niet?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-pa/strings.xml b/facebook-common/src/main/res/values-pa/strings.xml
new file mode 100644
index 000000000..1c52a62c5
--- /dev/null
+++ b/facebook-common/src/main/res/values-pa/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: pa_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">ਪਸੰਦ ਕਰੋ</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ਪਸੰਦ ਕੀਤਾ</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">ਲੌਗ ਆਉਟ ਕਰੋ</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">ਲਾਗ ਇਨ</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook ਦੇ ਨਾਲ ਲੌਗ ਇਨ ਕਰੋ</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook ਨਾਲ ਜਾਰੀ ਰੱਖੋ</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">ਇਸ ਵੱਜੋਂ ਲੌਗ ਇਨ ਕੀਤਾ ਗਿਆ: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ਦੀ ਵਰਤੋਂ ਕਰਦੇ ਹੋਏ ਲੌਗ ਇਨ ਕਰੋ</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">ਲੌਗ ਆਉਟ ਕਰੋ</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">ਰੱਦ ਕਰੋ</string>
+    <string name="com_facebook_loading" gender="unknown">ਲੋਡ ਹੋ ਰਿਹਾ ਹੈ...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest ਤਰੁੱਟੀ</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView ਵਿੱਚ ਲੌਗ ਇਨ ਕਰਨ ਲਈ ਇੰਟਰਨੈੱਟ ਦੀ ਇਜਾਜ਼ਤ ਦੀ ਲੋੜ ਹੈ</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">ਤੁਸੀਂ ਨਿਯੰਤਰਣ ਵਿੱਚ ਹੋ - ਇਹ ਚੁਣੋ ਕਿ ਐਪਾਂ ਨਾਲ ਤੁਸੀਂ ਕਿਹੜੀ ਜਾਣਕਾਰੀ ਨੂੰ ਸਾਂਝਾ ਕਰਨਾ ਚਾਹੁੰਦੇ ਹੋ।</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">ਇੱਕ ਚਿੱਤਰ ਡਾਉਨਲੋਡ ਕਰਨ ਦੌਰਾਨ ਅਕਲਪਿਤ ਤਰੁੱਟੀ।</string>
+    <string name="com_facebook_share_button_text" gender="unknown">ਸਾਂਝਾ ਕਰੋ</string>
+    <string name="com_facebook_send_button_text" gender="unknown">ਭੇਜੋ</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; \'ਤੇ ਵਿਜਿਟ ਕਰੋ ਅਤੇ ਉੱਪਰ ਦਿੱਤੇ ਕੋਡ ਨੂੰ ਦਾਖ਼ਲ ਕਰੋ।</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">ਆਪਣੇ ਖਾਤੇ ਨੂੰ ਕਨੈਕਟ ਕਰਨ ਲਈ, ਮੋਬਾਈਲ ਡਿਵਾਈਸ \'ਤੇ Facebook ਐਪ ਖੋਲ੍ਹੋ ਅਤੇ ਸੂਚਨਾਵਾਂ ਦੀ ਜਾਂਚ ਕਰੋ।</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ਜਾਂ -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">ਲੌਗ ਇਨ ਦੀ ਪੁਸ਼ਟੀ ਕਰੋ</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s ਵਜੋਂ ਜਾਰੀ ਰੱਖੋ</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">ਇਹ ਤੁਸੀਂ ਨਹੀਂ ਹੋ?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-pl/strings.xml b/facebook-common/src/main/res/values-pl/strings.xml
new file mode 100644
index 000000000..7f09f3e1b
--- /dev/null
+++ b/facebook-common/src/main/res/values-pl/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: pl_PL -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Lubię to!</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Lubisz to</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Wyloguj się</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Logowanie się</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Zaloguj się przez Facebooka</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Kontynuuj za pośrednictwem Facebooka</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Zalogowano jako: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Zalogowano przy użyciu Facebooka</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Wyloguj się</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Anuluj</string>
+    <string name="com_facebook_loading" gender="unknown">Ładowanie…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Błąd AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Logowanie WebView wymaga uprawnienia INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Zachowujesz kontrolę — wybierz informacje, które chcesz udostępniać w aplikacjach.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Nieoczekiwany błąd podczas pobierania obrazu.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Udostępnij</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Wyślij</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Odwiedź stronę &lt;b&gt;facebook.com/device&lt;/b&gt; i wprowadź powyższy kod.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Aby połączyć konto, otwórz aplikację Facebook na urządzeniu mobilnym i sprawdź powiadomienia.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- LUB -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Potwierdź logowanie</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Kontynuuj jako %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">To nie Ty?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-pt-rPT/strings.xml b/facebook-common/src/main/res/values-pt-rPT/strings.xml
new file mode 100644
index 000000000..c4c84ff99
--- /dev/null
+++ b/facebook-common/src/main/res/values-pt-rPT/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: pt_PT -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Gosto</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Gostaste</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Terminar a sessão</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Iniciar sessão</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Iniciar sessão com o Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continuar com o Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Com sessão iniciada como %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Com sessão iniciada com o Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Terminar a sessão</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Cancelar</string>
+    <string name="com_facebook_loading" gender="unknown">A carregar...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Erro AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">O início de sessão WebView requer a permissão INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Tens o controlo. Escolhe as informações que queres partilhar com as apps.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Ocorreu um erro inesperado ao descarregar uma imagem.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Partilhar</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Enviar</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; e insere o código apresentado abaixo.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Para associares a tua conta, abre a app Facebook no teu dispositivo móvel e consulta as notificações.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- OU -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Confirmar início de sessão</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continuar como %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Não és tu?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-pt/strings.xml b/facebook-common/src/main/res/values-pt/strings.xml
new file mode 100644
index 000000000..129a4baa7
--- /dev/null
+++ b/facebook-common/src/main/res/values-pt/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: pt_BR -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Curtir</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Curtiu</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Sair</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Entrar</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Entrar com o Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continuar com o Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Conectado como: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Conectado usando o Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Sair</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Cancelar</string>
+    <string name="com_facebook_loading" gender="unknown">Carregando...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Erro AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">O login do WebView exige permissão da INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Você está no controle — escolha quais informações você quer compartilhar com os aplicativos.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Erro inesperado ao baixar uma imagem.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Compartilhar</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Enviar</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Acesse &lt;b&gt;facebook.com/device&lt;/b&gt; e insira o código mostrado acima.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Para conectar sua conta, abra o aplicativo do Facebook no seu dispositivo móvel e verifique se há notificações.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- OU -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Confirmar login</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continuar como %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Não é você?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-ru/strings.xml b/facebook-common/src/main/res/values-ru/strings.xml
new file mode 100644
index 000000000..a3a7568a6
--- /dev/null
+++ b/facebook-common/src/main/res/values-ru/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ru_RU -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Нравится</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Нравится</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Выйти</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Войти</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Вход через Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Продолжить с Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Вы вошли как %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Выполнен вход через Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Выйти</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Отмена</string>
+    <string name="com_facebook_loading" gender="unknown">Загрузка...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Ошибка AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Для входа через WebView необходимо разрешение INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Контроль над данными — выберите, какой информацией вы хотите делиться с приложениями.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Неожиданная ошибка при скачивании изображения.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Поделиться</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Отправить</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Откройте &lt;b&gt;facebook.com/device&lt;/b&gt; и введите код, показанный выше.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Чтобы привязать ваш аккаунт, откройте приложение Facebook на своем мобильном устройстве и проверьте уведомления.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ИЛИ -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Подтвердите вход</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Продолжить как %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Не Вы?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-sk/strings.xml b/facebook-common/src/main/res/values-sk/strings.xml
new file mode 100644
index 000000000..3c03ba982
--- /dev/null
+++ b/facebook-common/src/main/res/values-sk/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: sk_SK -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Páči sa mi to</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Páčilo sa mi to</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Odhlásiť sa</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Prihlásiť sa</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Prihlásiť sa cez Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Pokračovať s Facebookom</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Prihlásený/-á ako: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Prihlásený/-á cez Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Odhlásiť sa</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Zrušiť</string>
+    <string name="com_facebook_loading" gender="unknown">Načítava sa…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Chyba AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Na prihlásenie cez WebView sa vyžaduje povolenie internetu</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Máte to pod kontrolou: vy určujete, ktoré informácie chcete zdieľať s aplikáciami.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Pri sťahovaní obrázka sa vyskytla neočakávaná chyba.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Zdieľať</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Poslať</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Navštívte stránku &lt;b&gt;facebook.com/device&lt;/b&gt; a zadajte kód zobrazený vyššie.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Ak si chcete pripojiť účet, vo svojom mobilnom zariadení otvorte aplikáciu Facebook a pozrite si upozornenia.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ALEBO -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Potvrdiť prihlásenie</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Pokračovať ako %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Nie ste to vy?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-sv/strings.xml b/facebook-common/src/main/res/values-sv/strings.xml
new file mode 100644
index 000000000..cf95c35ad
--- /dev/null
+++ b/facebook-common/src/main/res/values-sv/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: sv_SE -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Gilla</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Gillat</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Logga ut</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Logga in</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Logga in med Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Fortsätt med Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Inloggad som: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Inloggad med Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Logga ut</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Avbryt</string>
+    <string name="com_facebook_loading" gender="unknown">Laddar ...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest-fel</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-inloggning kräver INTERNET-åtkomst</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Du bestämmer – välj vilken information du vill dela med appar.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Ett oväntat fel inträffade när en bild skulle laddas ned.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Dela</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Skicka</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Gå till &lt;b&gt;facebook.com/device&lt;/b&gt; och skriv in koden som visas ovan.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Koppla ditt konto genom att öppna Facebook-appen på din mobila enhet och leta efter aviseringar.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ELLER -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Bekräfta inloggning</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Fortsätt som %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Inte du?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-ta/strings.xml b/facebook-common/src/main/res/values-ta/strings.xml
new file mode 100644
index 000000000..7508b4d25
--- /dev/null
+++ b/facebook-common/src/main/res/values-ta/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ta_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">பிடித்திருக்கிறது</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">விரும்பியவை</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">வெளியேறு</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">உள்நுழையவும்</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook மூலம் உள்நுழையவும்</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook மூலம் தொடரவும்</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s ஆக உள்நுழைந்துள்ளீர்கள்</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ஐப் பயன்படுத்தி உள்நுழைந்துள்ளீர்கள்</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">வெளியேறு</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">ரத்துசெய்</string>
+    <string name="com_facebook_loading" gender="unknown">ஏற்றுகிறது…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest பிழை</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView உள்நுழைவுக்கு இணைய அனுமதித் தேவை</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">கட்டுப்பாடு உங்களிடம் உள்ளது. பயன்பாடுகளுடன் நீங்கள் பகிர விரும்பும் தகவல்களைத் தேர்வுசெய்யவும்.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">படத்தைப் பதிவிறக்கும்போது எதிர்பாராத பிழை ஏற்பட்டது.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">பகிர்</string>
+    <string name="com_facebook_send_button_text" gender="unknown">அனுப்பு</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; ஐப் பார்வையிட்டு, மேலே காட்டப்பட்ட குறியீட்டை உள்ளிடவும்.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">உங்கள் கணக்கை இணைக்க, உங்கள் மொபைல் சாதனத்தில் Facebook பயன்பாட்டைத் திறந்து, அறிவிப்புகளைப் பார்க்கவும்.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- அல்லது -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">உள்நுழைதலை உறுதிப்படுத்தவும்</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s ஆகத் தொடர்</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">நீங்கள் அல்ல?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-te/strings.xml b/facebook-common/src/main/res/values-te/strings.xml
new file mode 100644
index 000000000..d8546f72c
--- /dev/null
+++ b/facebook-common/src/main/res/values-te/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: te_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">ఇష్టం</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ఇష్టపడ్డారు</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">లాగ్ అవుట్ చేయండి</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">లాగిన్</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebookతో లాగిన్ చేయండి</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebookతో కొనసాగించు</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">వీరి వలె లాగిన్ చేసారు: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebookని ఉపయోగించి లాగిన్ చేసారు</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">లాగ్ అవుట్ చేయండి</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">రద్దు చేయి</string>
+    <string name="com_facebook_loading" gender="unknown">లోడ్ చేస్తోంది…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest లోపం</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView లాగిన్ కోసం ఇంటర్నెట్ అనుమతి అవసరమవుతుంది</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">మీరు నియంత్రణలో ఉన్నారు - మీరు ఏ సమాచారాన్ని అనువర్తనాలతో పంచుకోవాలనుకుంటున్నారో ఎంచుకోండి.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">ఒక చిత్రాన్ని డౌన్‌లోడ్ చేయడంలో అనుకోని లోపం సంభవించింది.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">భాగస్వామ్యం చేయి</string>
+    <string name="com_facebook_send_button_text" gender="unknown">పంపండి</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt;ని సందర్శించి ఎగువన చూపిన కోడ్‌ను నమోదు చేయండి.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">మీ ఖాతాను అనుసంధానించేందుకు, మీ మొబైల్ పరికరంలో Facebook అనువర్తనాన్ని తెరిచి నోటిఫికేషన్‌లను తనిఖీ చేయండి.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- లేదా -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">లాగిన్‌ను నిర్ధారించండి</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$sగా కొనసాగండి</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">మీరు కాదా?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-th/strings.xml b/facebook-common/src/main/res/values-th/strings.xml
new file mode 100644
index 000000000..d39dedcab
--- /dev/null
+++ b/facebook-common/src/main/res/values-th/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: th_TH -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">ถูกใจ</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ถูกใจแล้ว</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">ออกจากระบบ</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">เข้าสู่ระบบ</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">เข้าสู่ระบบด้วย Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">ดำเนินการต่อด้วย Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">เข้าสู่ระบบแล้วในชื่อ %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">เข้าสู่ระบบแล้วโดยใช้ Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">ออกจากระบบ</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">ยกเลิก</string>
+    <string name="com_facebook_loading" gender="unknown">กำลังโหลด...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">ข้อผิดพลาด AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">การเข้าสู่ระบบ WebView ต้องได้รับสิทธิ์การอนุญาตอินเทอร์เน็ต</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">คุณควบคุมได้ เลือกว่าคุณต้องการแชร์ข้อมูลใดกับแอพ</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">เกิดข้อผิดพลาดที่ไม่คาดคิดขณะดาวน์โหลดภาพ</string>
+    <string name="com_facebook_share_button_text" gender="unknown">แชร์</string>
+    <string name="com_facebook_send_button_text" gender="unknown">ส่ง</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">ไปที่ &lt;b&gt;facebook.com/device&lt;/b&gt; แล้วป้อนรหัสที่ปรากฏด้านล่าง</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">หากต้องการเชื่อมต่อกับบัญชีผู้ใช้ของคุณ ให้เปิดแอพ Facebook บนอุปกรณ์มือถือของคุณแล้วตรวจสอบการแจ้งเตือน</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- หรือ -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">ยืนยันการเข้าสู่ระบบ</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">ดำเนินการต่อในชื่อ %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">ไม่ใช่คุณใช่ไหม</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-tl/strings.xml b/facebook-common/src/main/res/values-tl/strings.xml
new file mode 100644
index 000000000..a276ac020
--- /dev/null
+++ b/facebook-common/src/main/res/values-tl/strings.xml
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: tl_PH -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Gusto ko ito</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Nagustuhan</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Mag-log out</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Mag-log in</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Mag-log in sa Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Magpatuloy gamit ang Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Mag-log-in bilang: %1$s.</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Naka-log in gamit ang Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Mag-log out</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Kanselahin</string>
+    <string name="com_facebook_loading" gender="unknown">Naglo-load...</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Ang pag-log in sa WebView ay nangangailangan ng pahintulot sa INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Ikaw ang may kontrol - piliin anong impormasyon ang gusto mong i-share sa mga app.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Hindi inaasahang error habang dina-download ang larawan.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">I-share</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Ipadala</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Puntahan ang &lt;b&gt;facebook.com/device&lt;/b&gt; at ilagay ang code na ipinapakita sa itaas.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Para ikonekta ang iyong account, buksan ang Facebook app sa iyong cellphone at tumingin ng mga notification.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- O -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">I-confirm ang Pag-log in</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Magpatuloy bilang %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Hindi ikaw?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-tr/strings.xml b/facebook-common/src/main/res/values-tr/strings.xml
new file mode 100644
index 000000000..c77ce01e4
--- /dev/null
+++ b/facebook-common/src/main/res/values-tr/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: tr_TR -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Beğen</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Beğendin</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Çıkış Yap</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Giriş yap</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook ile Giriş Yap</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook ile Devam Et</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s olarak giriş yapıldı</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ile giriş yapıldı</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Çıkış Yap</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">İptal</string>
+    <string name="com_facebook_loading" gender="unknown">Yükleniyor...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest Hatası</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView girişi için İNTERNET izni gerekiyor</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Kontrol sende - uygulamalarla paylaşmak istediğin bilgileri seç.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Görüntü indirilirken beklenmedik bir hata oluştu.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Paylaş</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Gönder</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; adresine git ve yukarıda gösterilen kodu gir.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Hesabını bağlamak için, mobil cihazında Facebook uygulamasını aç ve bildirimleri kontrol et.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- VEYA -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Girişi Onayla</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s olarak devam et</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Siz değil misiniz?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-vi/strings.xml b/facebook-common/src/main/res/values-vi/strings.xml
new file mode 100644
index 000000000..90901c711
--- /dev/null
+++ b/facebook-common/src/main/res/values-vi/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: vi_VN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Thích</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Đã thích</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Đăng xuất</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Đăng nhập</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Đăng nhập bằng Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Tiếp tục với Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Đã đăng nhập với tên: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Đã đăng nhập bằng Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Đăng xuất</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Hủy</string>
+    <string name="com_facebook_loading" gender="unknown">Đang tải…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Lỗi AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Đăng nhập chế độ xem web yêu cầu quyền INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Bạn nắm quyền kiểm soát - chọn thông tin bạn muốn chia sẻ với ứng dụng.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Lỗi không mong muốn khi tải hình ảnh xuống.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Chia sẻ</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Gửi</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Truy cập &lt;b&gt;facebook.com/device&lt;/b&gt; và nhập mã được hiển thị bên trên.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Để kết nối tài khoản của bạn, hãy mở ứng dụng Facebook trên thiết bị di động và kiểm tra thông báo.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- HOẶC -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Xác nhận đăng nhập</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Tiếp tục với tư cách %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Không phải bạn?</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-zh-rCN/strings.xml b/facebook-common/src/main/res/values-zh-rCN/strings.xml
new file mode 100644
index 000000000..125758e72
--- /dev/null
+++ b/facebook-common/src/main/res/values-zh-rCN/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: zh_CN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">赞</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">赞了</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">注销</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">登录</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">使用 Facebook 登录</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">前往 Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">登录身份：%1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">已通过 Facebook 登录</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">注销</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">取消</string>
+    <string name="com_facebook_loading" gender="unknown">正在加载...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest 错误</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView 登录需要访问网络</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">应用分享内容由你掌控。</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">下载图片时出现意外错误。</string>
+    <string name="com_facebook_share_button_text" gender="unknown">分享</string>
+    <string name="com_facebook_send_button_text" gender="unknown">发送</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">请访问&lt;b&gt;facebook.com/device&lt;/b&gt;并输入以上验证码。</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">要关联帐户，请在移动设备上打开 Facebook 应用并查看通知。</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- 或 -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">确认登录</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">以%1$s的身份继续</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">不是你？</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-zh-rHK/strings.xml b/facebook-common/src/main/res/values-zh-rHK/strings.xml
new file mode 100644
index 000000000..13d2ecfcf
--- /dev/null
+++ b/facebook-common/src/main/res/values-zh-rHK/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: zh_HK -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">讚好</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">已讚好</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">登出</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">登入</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">使用 Facebook 登入</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">繼續使用 Facebook 帳戶</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">以%1$s身分登入</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">已使用 Facebook 登入</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">登出</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">取消</string>
+    <string name="com_facebook_loading" gender="unknown">載入中......</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest 錯誤</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView 登入需要網絡使用權限</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">一切由你掌握：自行選擇要分享給應用程式的資訊種類。</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">下載圖像時發生沒有預期的錯誤。</string>
+    <string name="com_facebook_share_button_text" gender="unknown">分享</string>
+    <string name="com_facebook_send_button_text" gender="unknown">送出</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">前往&lt;b&gt;facebook.com/device&lt;/b&amp;gt，並輸入上方顯示的代碼。</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">若要連結帳戶，請在流動裝置上開啟 Facebook 應用程式，然後查看通知。</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- 或 -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">確認登入</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">以%1$s的身分繼續</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">不是你嗎？</string>
+</resources>
diff --git a/facebook-common/src/main/res/values-zh-rTW/strings.xml b/facebook-common/src/main/res/values-zh-rTW/strings.xml
new file mode 100644
index 000000000..8f08dc11e
--- /dev/null
+++ b/facebook-common/src/main/res/values-zh-rTW/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: zh_TW -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">讚</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">已說讚</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">登出</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">登入</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">使用 Facebook 帳號登入</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">繼續使用 Facebook 帳號</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">以%1$s身分登入</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">已使用 Facebook 登入</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">登出</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">取消</string>
+    <string name="com_facebook_loading" gender="unknown">載入中......</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest 錯誤</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView 登入需要網路使用權限</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">一切操之在你：自行選擇要分享給應用程式的資訊種類。</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">下載圖像時無預警發生錯誤。</string>
+    <string name="com_facebook_share_button_text" gender="unknown">分享</string>
+    <string name="com_facebook_send_button_text" gender="unknown">送出</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">前往&lt;b&gt;facebook.com/device&lt;/b&amp;gt，並輸入上方顯示的代碼。</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">若要連結帳號，請在行動裝置上開啟 Facebook 應用程式，然後查看通知。</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- 或 -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">確認登入</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">以%1$s的身分繼續</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">不是你？</string>
+</resources>
diff --git a/facebook/src/main/res/values/attrs.xml b/facebook-common/src/main/res/values/attrs.xml
similarity index 71%
rename from facebook/src/main/res/values/attrs.xml
rename to facebook-common/src/main/res/values/attrs.xml
index ecd88b321..bd889806b 100644
--- a/facebook/src/main/res/values/attrs.xml
+++ b/facebook-common/src/main/res/values/attrs.xml
@@ -20,26 +20,6 @@
 -->
 
 <resources>
-    <declare-styleable name="com_facebook_login_view">
-        <attr name="com_facebook_confirm_logout" format="boolean"/>
-        <attr name="com_facebook_login_text" format="string"/>
-        <attr name="com_facebook_logout_text" format="string"/>
-        <attr name="com_facebook_tooltip_mode">
-            <!-- Keep in sync with Enums in LoginButton -->
-            <enum name="automatic" value="0" />
-            <enum name="display_always" value="1" />
-            <enum name="never_display" value="2" />
-        </attr>
-    </declare-styleable>
-    <declare-styleable name="com_facebook_profile_picture_view">
-        <attr name="com_facebook_preset_size">
-            <!-- Keep in sync with constants in ProfilePictureView -->
-            <enum name="small" value="-2" />
-            <enum name="normal" value="-3" />
-            <enum name="large" value="-4" />
-        </attr>
-        <attr name="com_facebook_is_cropped" format="boolean" />
-    </declare-styleable>
     <declare-styleable name="com_facebook_like_view">
         <attr name="com_facebook_foreground_color" format="color" />
         <attr name="com_facebook_object_id" format="string" />
diff --git a/facebook/src/main/res/values/dimens.xml b/facebook-common/src/main/res/values/dimens.xml
similarity index 70%
rename from facebook/src/main/res/values/dimens.xml
rename to facebook-common/src/main/res/values/dimens.xml
index 5ae0ed683..08d5c19df 100644
--- a/facebook/src/main/res/values/dimens.xml
+++ b/facebook-common/src/main/res/values/dimens.xml
@@ -25,4 +25,15 @@
     one does not stick out-->
     <dimen name="com_facebook_auth_dialog_corner_radius_oversized">4dp</dimen>
     <dimen name="com_facebook_button_corner_radius">2dp</dimen>
+
+    <dimen name="com_facebook_likeview_text_size">11.0sp</dimen>
+    <dimen name="com_facebook_likeview_edge_padding">2dp</dimen>
+    <dimen name="com_facebook_likeview_internal_padding">6dp</dimen>
+
+    <dimen name="com_facebook_likeboxcountview_caret_width">6dp</dimen>
+    <dimen name="com_facebook_likeboxcountview_caret_height">3dp</dimen>
+    <dimen name="com_facebook_likeboxcountview_border_radius">3dp</dimen>
+    <dimen name="com_facebook_likeboxcountview_border_width">1dp</dimen>
+    <dimen name="com_facebook_likeboxcountview_text_size">11.0sp</dimen>
+    <dimen name="com_facebook_likeboxcountview_text_padding">6dp</dimen>
 </resources>
diff --git a/facebook/src/main/res/values/strings.xml b/facebook-common/src/main/res/values/strings.xml
similarity index 69%
rename from facebook/src/main/res/values/strings.xml
rename to facebook-common/src/main/res/values/strings.xml
index 070cb88b6..af7262eaa 100644
--- a/facebook/src/main/res/values/strings.xml
+++ b/facebook-common/src/main/res/values/strings.xml
@@ -18,23 +18,28 @@
     IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 -->
-
-<resources>
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
     <string name="com_facebook_like_button_not_liked">Like</string>
     <string name="com_facebook_like_button_liked">Liked</string>
     <string name="com_facebook_loginview_log_out_button">Log out</string>
     <string name="com_facebook_loginview_log_in_button">Log in</string>
     <string name="com_facebook_loginview_log_in_button_long">Log in with Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Logged in as: %1$s</string>
+    <string name="com_facebook_loginview_log_in_button_continue">Continue with Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Logged in as: <xliff:g id="user name">%1$s</xliff:g></string>
     <string name="com_facebook_loginview_logged_in_using_facebook">Logged in using Facebook</string>
     <string name="com_facebook_loginview_log_out_action">Log out</string>
     <string name="com_facebook_loginview_cancel_action">Cancel</string>
-    <string name="com_facebook_loading">Loading...</string>
+    <string name="com_facebook_loading">Loading&#8230;</string>
     <string name="com_facebook_internet_permission_error_title">AndroidManifest Error</string>
     <string name="com_facebook_internet_permission_error_message">WebView login requires INTERNET permission</string>
-    <string name="com_facebook_tooltip_default">New! You\'re in control - choose what info you want to share with apps.</string>
+    <string name="com_facebook_tooltip_default">You\'re in control - choose what info you want to share with apps.</string>
     <string name="com_facebook_image_download_unknown_error">Unexpected error while downloading an image.</string>
     <string name="com_facebook_share_button_text">Share</string>
     <string name="com_facebook_send_button_text">Send</string>
-    <string name="com_facebook_device_auth_instructions">Visit &lt;b&gt;facebook.com/device&lt;/b&gt; on your smartphone or computer and enter this code</string>
+    <string name="com_facebook_device_auth_instructions">Visit &lt;b&gt;facebook.com/device&lt;/b&gt; and enter the code shown above.</string>
+    <string name="com_facebook_smart_device_instructions">To connect your account, open the Facebook app on your mobile device and check for notifications.</string>
+    <string name="com_facebook_smart_device_instructions_or">- OR -</string>
+    <string name="com_facebook_smart_login_confirmation_title">Confirm Login</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as">Continue as <xliff:g id="user name">%1$s</xliff:g></string>
+    <string name="com_facebook_smart_login_confirmation_cancel">Not you?</string>
 </resources>
diff --git a/facebook-common/src/main/res/values/styles.xml b/facebook-common/src/main/res/values/styles.xml
new file mode 100644
index 000000000..be8212e85
--- /dev/null
+++ b/facebook-common/src/main/res/values/styles.xml
@@ -0,0 +1,77 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources xmlns:tools="http://schemas.android.com/tools">
+    <color name="com_facebook_blue">#3B5998</color>
+    <color name="com_facebook_device_auth_text">#90949C</color>
+    <color name="com_smart_login_code">#3C6499</color>
+    <color name="com_facebook_button_background_color_focused_disabled">#84878c</color>
+    <color name="com_facebook_button_background_color_disabled">#bdc1c9</color>
+    <color name="com_facebook_button_background_color_focused">#FFFFFe</color>
+    <color name="com_facebook_button_border_color_focused">#dedee6</color>
+    <color name="com_facebook_button_background_color_pressed">#2f477a</color>
+    <color name="com_facebook_button_background_color">#415dae</color>
+    <color name="com_facebook_likeview_text_color">#6a7180</color>
+    <color name="com_facebook_likeboxcountview_border_color">#6a7180</color>
+    <color name="com_facebook_likeboxcountview_text_color">#6a7180</color>
+    <color name="com_facebook_button_background_color_selected">#7c8fc8</color>
+
+    <style name="com_facebook_auth_dialog_instructions_textview" tools:targetApi="17">
+        <item name="android:layout_width">wrap_content</item>
+        <item name="android:layout_height">wrap_content</item>
+        <item name="android:fontFamily">roboto</item>
+        <item name="android:gravity">center</item>
+        <item name="android:drawablePadding">12dp</item>
+        <item name="android:singleLine">false</item>
+        <item name="android:textColor">@color/com_facebook_device_auth_text</item>
+        <item name="android:textSize">16sp</item>
+        <item name="android:typeface">sans</item>
+    </style>
+
+    <style name="com_facebook_button" parent="@android:style/Widget.Button">
+        <item name="android:background">@drawable/com_facebook_button_background</item>
+        <item name="android:drawablePadding">6dp</item>
+        <item name="android:gravity">center</item>
+        <item name="android:paddingBottom">5dp</item>
+        <item name="android:paddingLeft">8dp</item>
+        <item name="android:paddingRight">8dp</item>
+        <item name="android:paddingTop">5dp</item>
+        <item name="android:textColor">@color/com_facebook_button_text_color</item>
+        <item name="android:textSize">14.0dp</item>
+    </style>
+
+    <style name="com_facebook_auth_dialog" parent="@style/Theme.AppCompat.Dialog">
+        <item name="android:windowIsTranslucent">true</item>
+        <item name="android:windowBackground">@android:color/transparent</item>
+        <item name="android:windowNoTitle">true</item>
+        <item name="android:windowIsFloating">true</item>
+    </style>
+
+    <style name="com_facebook_button_like" parent="com_facebook_button">
+        <item name="android:background">@drawable/com_facebook_button_like_background</item>
+    </style>
+
+    <style name="com_facebook_activity_theme" parent="@style/Theme.AppCompat.NoActionBar">
+      <item name="android:windowIsTranslucent">true</item>
+      <item name="android:windowBackground">@android:color/transparent</item>
+      <item name="android:windowNoTitle">true</item>
+    </style>
+</resources>
diff --git a/facebook-core/.gitignore b/facebook-core/.gitignore
new file mode 100644
index 000000000..796b96d1c
--- /dev/null
+++ b/facebook-core/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/facebook-core/build.gradle b/facebook-core/build.gradle
new file mode 100644
index 000000000..7f967b30c
--- /dev/null
+++ b/facebook-core/build.gradle
@@ -0,0 +1,40 @@
+apply plugin: 'com.android.library'
+
+project.group = 'com.facebook.android'
+
+project.ext.name = 'Facebook-Core-Android-SDK'
+project.ext.artifactId = "facebook-core"
+project.ext.description = 'Facebook Core Android SDK'
+project.ext.url = 'https://github.com/facebook/facebook-android-sdk/facebook-core'
+
+dependencies {
+    // Facebook Dependencies
+    compile 'com.parse.bolts:bolts-android:1.4.0'
+    compile 'com.android.support:support-annotations:25.3.1'
+    compile 'com.android.support:support-core-utils:25.3.1'
+
+    // Unit Tests
+    testCompile 'junit:junit:4.12'
+}
+
+android {
+    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
+    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
+
+    defaultConfig {
+        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
+        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
+        consumerProguardFiles 'proguard-rules.pro'
+    }
+
+    lintOptions {
+        abortOnError false
+    }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_7
+        targetCompatibility JavaVersion.VERSION_1_7
+    }
+}
+
+apply from: "${rootDir}/maven.gradle"
diff --git a/facebook-core/proguard-rules.pro b/facebook-core/proguard-rules.pro
new file mode 100644
index 000000000..4f8fdcdc7
--- /dev/null
+++ b/facebook-core/proguard-rules.pro
@@ -0,0 +1,38 @@
+# To enable ProGuard in your project, edit project.properties
+# to define the proguard.config property as described in that file.
+#
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in ${sdk.dir}/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the ProGuard
+# include property in project.properties.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+-keepclassmembers class * implements java.io.Serializable {
+    private static final java.io.ObjectStreamField[] serialPersistentFields;
+    private void writeObject(java.io.ObjectOutputStream);
+    private void readObject(java.io.ObjectInputStream);
+    java.lang.Object writeReplace();
+    java.lang.Object readResolve();
+}
+
+-keepnames class com.facebook.FacebookActivity
+-keepnames class com.facebook.CustomTabActivity
+
+-keep class com.facebook.core.Core
+
+-keep public class com.android.vending.billing.IInAppBillingService {
+    public static com.android.vending.billing.IInAppBillingService asInterface(android.os.IBinder);
+    public android.os.Bundle getSkuDetails(int, java.lang.String, java.lang.String, android.os.Bundle);
+}
diff --git a/facebook-core/src/main/AndroidManifest.xml b/facebook-core/src/main/AndroidManifest.xml
new file mode 100644
index 000000000..5fee38086
--- /dev/null
+++ b/facebook-core/src/main/AndroidManifest.xml
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.facebook.core">
+
+    <application android:supportsRtl="true">
+
+        <!-- The initialization ContentProvider will call FacebookSdk.sdkInitialize automatically
+         with the application context. This config is merged in with the host app's manifest,
+         but there can only be one provider with the same authority activated at any given
+         point; so if the end user has two or more different apps that use Facebook SDK, only the
+         first one will be able to use the provider. To work around this problem, we use the
+         following placeholder in the authority to identify each host application as if it was
+         a completely different provider.
+        -->
+        <provider
+            android:authorities="${applicationId}.FacebookInitProvider"
+            android:name="com.facebook.internal.FacebookInitProvider"
+            android:exported="false" />
+
+    </application>
+
+</manifest>
diff --git a/facebook/src/main/java/com/facebook/AccessToken.java b/facebook-core/src/main/java/com/facebook/AccessToken.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/AccessToken.java
rename to facebook-core/src/main/java/com/facebook/AccessToken.java
index 523b34c6f..289e99e7c 100644
--- a/facebook/src/main/java/com/facebook/AccessToken.java
+++ b/facebook-core/src/main/java/com/facebook/AccessToken.java
@@ -23,8 +23,6 @@
 import android.annotation.SuppressLint;
 import android.content.Intent;
 import android.os.Bundle;
-import android.os.Handler;
-import android.os.Looper;
 import android.os.Parcel;
 import android.os.Parcelable;
 import android.support.annotation.Nullable;
@@ -37,7 +35,13 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import java.util.*;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Date;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
 
 /**
  * This class represents an immutable access token for using Facebook APIs. It also includes
diff --git a/facebook/src/main/java/com/facebook/AccessTokenCache.java b/facebook-core/src/main/java/com/facebook/AccessTokenCache.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/AccessTokenCache.java
rename to facebook-core/src/main/java/com/facebook/AccessTokenCache.java
diff --git a/facebook/src/main/java/com/facebook/AccessTokenManager.java b/facebook-core/src/main/java/com/facebook/AccessTokenManager.java
similarity index 97%
rename from facebook/src/main/java/com/facebook/AccessTokenManager.java
rename to facebook-core/src/main/java/com/facebook/AccessTokenManager.java
index 6171527d7..1d38756b5 100644
--- a/facebook/src/main/java/com/facebook/AccessTokenManager.java
+++ b/facebook-core/src/main/java/com/facebook/AccessTokenManager.java
@@ -40,16 +40,16 @@
 import java.util.Set;
 import java.util.concurrent.atomic.AtomicBoolean;
 
-final class AccessTokenManager {
-    static final String TAG = "AccessTokenManager";
+final public class AccessTokenManager {
+    public static final String TAG = "AccessTokenManager";
 
-    static final String ACTION_CURRENT_ACCESS_TOKEN_CHANGED =
+    public static final String ACTION_CURRENT_ACCESS_TOKEN_CHANGED =
             "com.facebook.sdk.ACTION_CURRENT_ACCESS_TOKEN_CHANGED";
-    static final String EXTRA_OLD_ACCESS_TOKEN =
+    public static final String EXTRA_OLD_ACCESS_TOKEN =
             "com.facebook.sdk.EXTRA_OLD_ACCESS_TOKEN";
-    static final String EXTRA_NEW_ACCESS_TOKEN =
+    public static final String EXTRA_NEW_ACCESS_TOKEN =
             "com.facebook.sdk.EXTRA_NEW_ACCESS_TOKEN";
-    static final String SHARED_PREFERENCES_NAME =
+    public static final String SHARED_PREFERENCES_NAME =
             "com.facebook.AccessTokenManager.SharedPreferences";
 
     // Token extension constants
diff --git a/facebook/src/main/java/com/facebook/AccessTokenSource.java b/facebook-core/src/main/java/com/facebook/AccessTokenSource.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/AccessTokenSource.java
rename to facebook-core/src/main/java/com/facebook/AccessTokenSource.java
diff --git a/facebook/src/main/java/com/facebook/CallbackManager.java b/facebook-core/src/main/java/com/facebook/CallbackManager.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/CallbackManager.java
rename to facebook-core/src/main/java/com/facebook/CallbackManager.java
diff --git a/facebook/src/main/java/com/facebook/FacebookBroadcastReceiver.java b/facebook-core/src/main/java/com/facebook/FacebookBroadcastReceiver.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/FacebookBroadcastReceiver.java
rename to facebook-core/src/main/java/com/facebook/FacebookBroadcastReceiver.java
diff --git a/facebook/src/main/java/com/facebook/FacebookContentProvider.java b/facebook-core/src/main/java/com/facebook/FacebookContentProvider.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/FacebookContentProvider.java
rename to facebook-core/src/main/java/com/facebook/FacebookContentProvider.java
diff --git a/facebook/src/main/java/com/facebook/FacebookException.java b/facebook-core/src/main/java/com/facebook/FacebookException.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/FacebookException.java
rename to facebook-core/src/main/java/com/facebook/FacebookException.java
diff --git a/facebook/src/main/java/com/facebook/FacebookGraphResponseException.java b/facebook-core/src/main/java/com/facebook/FacebookGraphResponseException.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/FacebookGraphResponseException.java
rename to facebook-core/src/main/java/com/facebook/FacebookGraphResponseException.java
diff --git a/facebook/src/main/java/com/facebook/FacebookOperationCanceledException.java b/facebook-core/src/main/java/com/facebook/FacebookOperationCanceledException.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/FacebookOperationCanceledException.java
rename to facebook-core/src/main/java/com/facebook/FacebookOperationCanceledException.java
diff --git a/facebook/src/main/java/com/facebook/FacebookRequestError.java b/facebook-core/src/main/java/com/facebook/FacebookRequestError.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/FacebookRequestError.java
rename to facebook-core/src/main/java/com/facebook/FacebookRequestError.java
index 562ac169b..c71508501 100644
--- a/facebook/src/main/java/com/facebook/FacebookRequestError.java
+++ b/facebook-core/src/main/java/com/facebook/FacebookRequestError.java
@@ -24,6 +24,8 @@
 import android.os.Parcelable;
 
 import com.facebook.internal.FacebookRequestErrorClassification;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.Utility;
 
 import org.json.JSONException;
@@ -426,8 +428,8 @@ static FacebookRequestError checkResponseAndCreateError(
 
     static synchronized FacebookRequestErrorClassification getErrorClassification() {
         FacebookRequestErrorClassification errorClassification;
-        Utility.FetchedAppSettings appSettings =
-                Utility.getAppSettingsWithoutQuery(FacebookSdk.getApplicationId());
+        FetchedAppSettings appSettings =
+                FetchedAppSettingsManager.getAppSettingsWithoutQuery(FacebookSdk.getApplicationId());
         if (appSettings == null) {
             return FacebookRequestErrorClassification.getDefaultErrorClassification();
         }
diff --git a/facebook/src/main/java/com/facebook/FacebookSdk.java b/facebook-core/src/main/java/com/facebook/FacebookSdk.java
similarity index 82%
rename from facebook/src/main/java/com/facebook/FacebookSdk.java
rename to facebook-core/src/main/java/com/facebook/FacebookSdk.java
index 2e143b371..9aa5fdcb0 100644
--- a/facebook/src/main/java/com/facebook/FacebookSdk.java
+++ b/facebook-core/src/main/java/com/facebook/FacebookSdk.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -20,6 +20,7 @@
 
 package com.facebook;
 
+import android.app.Application;
 import android.content.Context;
 import android.content.SharedPreferences;
 import android.content.pm.ApplicationInfo;
@@ -27,12 +28,13 @@
 import android.content.pm.PackageManager;
 import android.content.pm.Signature;
 import android.os.AsyncTask;
-import android.text.TextUtils;
 import android.util.Base64;
 import android.util.Log;
 
 import com.facebook.appevents.AppEventsLogger;
+import com.facebook.core.BuildConfig;
 import com.facebook.internal.AppEventsLoggerUtility;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.LockOnGetVariable;
 import com.facebook.internal.BoltsMeasurementEventListener;
 import com.facebook.internal.AttributionIdentifiers;
@@ -40,7 +42,6 @@
 import com.facebook.internal.ServerProtocol;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
-import com.facebook.internal.WebDialog;
 
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -64,11 +65,13 @@
     private static final String TAG = FacebookSdk.class.getCanonicalName();
     private static final HashSet<LoggingBehavior> loggingBehaviors =
             new HashSet<LoggingBehavior>(Arrays.asList(LoggingBehavior.DEVELOPER_ERRORS));
-    private static volatile Executor executor;
+    private static final int DEFAULT_CALLBACK_REQUEST_CODE_OFFSET = 0xface;
+
+    private static Executor executor;
     private static volatile String applicationId;
     private static volatile String applicationName;
     private static volatile String appClientToken;
-    private static volatile int webDialogTheme;
+    private static volatile Boolean autoLogAppEventsEnabled;
     private static final String FACEBOOK_COM = "facebook.com";
     private static volatile String facebookDomain = FACEBOOK_COM;
     private static AtomicLong onProgressThreshold = new AtomicLong(65536);
@@ -79,9 +82,8 @@
     private static final int DEFAULT_CORE_POOL_SIZE = 5;
     private static final int DEFAULT_MAXIMUM_POOL_SIZE = 128;
     private static final int DEFAULT_KEEP_ALIVE = 1;
-    private static int callbackRequestCodeOffset = 0xface;
+    private static int callbackRequestCodeOffset = DEFAULT_CALLBACK_REQUEST_CODE_OFFSET;
     private static final Object LOCK = new Object();
-    private static final int DEFAULT_THEME = R.style.com_facebook_activity_theme;
     private static String graphApiVersion = ServerProtocol.getDefaultAPIVersion();
 
     private static final int MAX_REQUEST_CODE_RANGE = 100;
@@ -101,7 +103,8 @@ public Thread newThread(Runnable runnable) {
     };
 
     static final String CALLBACK_OFFSET_CHANGED_AFTER_INIT =
-            "The callback request code offset can't be updated once the SDK is initialized.";
+            "The callback request code offset can't be updated once the SDK is initialized. " +
+            "Call FacebookSdk.setCallbackRequestCodeOffset inside your Application.onCreate method";
 
     static final String CALLBACK_OFFSET_NEGATIVE =
             "The callback request code offset can't be negative.";
@@ -127,17 +130,41 @@ public Thread newThread(Runnable runnable) {
      */
     public static final String WEB_DIALOG_THEME = "com.facebook.sdk.WebDialogTheme";
 
+    /**
+     * The key for the auto logging app events in the Android manifest.
+     */
+    public static final String AUTO_LOG_APP_EVENTS_ENABLED_PROPERTY =
+            "com.facebook.sdk.AutoLogAppEventsEnabled";
+
+    /**
+     * The key for the callback off set in the Android manifest.
+     */
+    public static final String CALLBACK_OFFSET_PROPERTY = "com.facebook.sdk.CallbackOffset";
+
     private static Boolean sdkInitialized = false;
 
     /**
-     * This function initializes the Facebook SDK, the behavior of Facebook SDK functions are
-     * undetermined if this function is not called. It should be called as early as possible.
+     * This function initializes the Facebook SDK. This function is called automatically on app
+     * start up if the proper entries are listed in the AndroidManifest, such as the facebook
+     * app id. This method can bee called manually if needed.
+     * The behavior of Facebook SDK functions are undetermined if this function is not called.
+     * It should be called as early as possible.
+     * As part of SDK initialization basic auto logging of app events will occur, this can be
+     * controlled via 'com.facebook.sdk.AutoLogAppEventsEnabled' manifest setting
      * @param applicationContext The application context
      * @param callbackRequestCodeOffset The request code offset that Facebook activities will be
      *                                  called with. Please do not use the range between the
      *                                  value you set and another 100 entries after it in your
      *                                  other requests.
-     */
+     * @Deprecated {@link #sdkInitialize(Context)} and
+     * {@link AppEventsLogger#activateApp(Application)} are called automatically on application
+     * start. Automatic event logging from 'activateApp' can be controlled via the
+     * 'com.facebook.sdk.AutoLogAppEventsEnabled' manifest setting. The callbackRequestCodeOffset
+     * can be set in the AndroidManifest as a meta data entry with the name
+     * {@link #CALLBACK_OFFSET_PROPERTY}.
+     */
+    @Deprecated
+    @SuppressWarnings("deprecation")
     public static synchronized void sdkInitialize(
             Context applicationContext,
             int callbackRequestCodeOffset) {
@@ -145,8 +172,13 @@ public static synchronized void sdkInitialize(
     }
 
     /**
-     * This function initializes the Facebook SDK, the behavior of Facebook SDK functions are
-     * undetermined if this function is not called. It should be called as early as possible.
+     * This function initializes the Facebook SDK. This function is called automatically on app
+     * start up if the proper entries are listed in the AndroidManifest, such as the facebook
+     * app id. This method can bee called manually if needed.
+     * The behavior of Facebook SDK functions are undetermined if this function is not called.
+     * It should be called as early as possible.
+     * As part of SDK initialization basic auto logging of app events will occur, this can be
+     * controlled via 'com.facebook.sdk.AutoLogAppEventsEnabled' manifest setting
      * @param applicationContext The application context
      * @param callbackRequestCodeOffset The request code offset that Facebook activities will be
      *                                  called with. Please do not use the range between the
@@ -154,7 +186,15 @@ public static synchronized void sdkInitialize(
      *                                  other requests.
      * @param callback A callback called when initialize finishes. This will be called even if the
      *                 sdk is already initialized.
-     */
+     * @Deprecated {@link #sdkInitialize(Context)} and
+     * {@link AppEventsLogger#activateApp(Application)} are called automatically on application
+     * start. Automatic event logging from 'activateApp' can be controlled via the
+     * 'com.facebook.sdk.AutoLogAppEventsEnabled' manifest setting. The callbackRequestCodeOffset
+     * can be set in the AndroidManifest as a meta data entry with the name
+     * {@link #CALLBACK_OFFSET_PROPERTY}.
+     */
+    @Deprecated
+    @SuppressWarnings("deprecation")
     public static synchronized void sdkInitialize(
             Context applicationContext,
             int callbackRequestCodeOffset,
@@ -165,26 +205,48 @@ public static synchronized void sdkInitialize(
         if (callbackRequestCodeOffset < 0) {
             throw new FacebookException(CALLBACK_OFFSET_NEGATIVE);
         }
+
         FacebookSdk.callbackRequestCodeOffset = callbackRequestCodeOffset;
         sdkInitialize(applicationContext, callback);
     }
 
     /**
-     * This function initializes the Facebook SDK, the behavior of Facebook SDK functions are
-     * undetermined if this function is not called. It should be called as early as possible.
+     * This function initializes the Facebook SDK. This function is called automatically on app
+     * start up if the proper entries are listed in the AndroidManifest, such as the facebook
+     * app id. This method can bee called manually if needed.
+     * The behavior of Facebook SDK functions are undetermined if this function is not called.
+     * It should be called as early as possible.
+     * As part of SDK initialization basic auto logging of app events will occur, this can be
+     * controlled via 'com.facebook.sdk.AutoLogAppEventsEnabled' manifest setting
      * @param applicationContext The application context
+     * @Deprecated {@link #sdkInitialize(Context)} and
+     * {@link AppEventsLogger#activateApp(Application)} are called automatically on application
+     * start. Automatic event logging from 'activateApp' can be controlled via the
+     * 'com.facebook.sdk.AutoLogAppEventsEnabled' manifest setting.
      */
+    @Deprecated
+    @SuppressWarnings("deprecation")
     public static synchronized void sdkInitialize(Context applicationContext) {
         FacebookSdk.sdkInitialize(applicationContext, null);
     }
 
     /**
-     * This function initializes the Facebook SDK, the behavior of Facebook SDK functions are
-     * undetermined if this function is not called. It should be called as early as possible.
+     * This function initializes the Facebook SDK. This function is called automatically on app
+     * start up if the proper entries are listed in the AndroidManifest, such as the facebook
+     * app id. This method can bee called manually if needed.
+     * The behavior of Facebook SDK functions are undetermined if this function is not called.
+     * It should be called as early as possible.
+     * As part of SDK initialization basic auto logging of app events will occur, this can be
+     * controlled via 'com.facebook.sdk.AutoLogAppEventsEnabled' manifest setting
      * @param applicationContext The application context
      * @param callback A callback called when initialize finishes. This will be called even if the
      *                 sdk is already initialized.
+     * @Deprecated {@link #sdkInitialize(Context)} and
+     * {@link AppEventsLogger#activateApp(Application)} are called automatically on application
+     * start. Automatic event logging from 'activateApp' can be controlled via the
+     * 'com.facebook.sdk.AutoLogAppEventsEnabled' manifest setting.
      */
+    @Deprecated
     public static synchronized void sdkInitialize(
             final Context applicationContext,
             final InitializeCallback callback) {
@@ -207,12 +269,19 @@ public static synchronized void sdkInitialize(
         // Make sure we've loaded default settings if we haven't already.
         FacebookSdk.loadDefaultsFromMetadata(FacebookSdk.applicationContext);
 
+        // We should have an application id by now if not throw
+        if (Utility.isNullOrEmpty(applicationId)) {
+            throw new FacebookException("A valid Facebook app id must be set in the " +
+                    "AndroidManifest.xml or set by calling FacebookSdk.setApplicationId " +
+                    "before initializing the sdk.");
+        }
+
         // Set sdkInitialized to true now so the bellow async tasks don't throw not initialized
         // exceptions.
         sdkInitialized = true;
 
         // Load app settings from network so that dialog configs are available
-        Utility.loadAppSettingsAsync(FacebookSdk.applicationContext, applicationId);
+        FetchedAppSettingsManager.loadAppSettingsAsync();
         // Fetch available protocol versions from the apps on the device
         NativeProtocol.updateAllAvailableProtocolVersionsAsync();
 
@@ -225,7 +294,6 @@ public File call() throws Exception {
                         return FacebookSdk.applicationContext.getCacheDir();
                     }
                 });
-
         FutureTask<Void> futureTask =
                 new FutureTask<>(new Callable<Void>() {
                     @Override
@@ -243,6 +311,10 @@ public Void call() throws Exception {
                             callback.onInitialized();
                         }
 
+                        AppEventsLogger.initializeLib(
+                                FacebookSdk.applicationContext,
+                                applicationId);
+
                         // Flush any app events that might have been persisted during last run.
                         AppEventsLogger.newLogger(
                                 applicationContext.getApplicationContext()).flush();
@@ -650,8 +722,16 @@ static void loadDefaultsFromMetadata(Context context) {
             appClientToken = ai.metaData.getString(CLIENT_TOKEN_PROPERTY);
         }
 
-        if (webDialogTheme == 0) {
-            setWebDialogTheme(ai.metaData.getInt(WEB_DIALOG_THEME));
+        if (callbackRequestCodeOffset == DEFAULT_CALLBACK_REQUEST_CODE_OFFSET) {
+            callbackRequestCodeOffset = ai.metaData.getInt(
+                    CALLBACK_OFFSET_PROPERTY,
+                    DEFAULT_CALLBACK_REQUEST_CODE_OFFSET);
+        }
+
+        if (autoLogAppEventsEnabled == null) {
+            autoLogAppEventsEnabled = ai.metaData.getBoolean(
+                AUTO_LOG_APP_EVENTS_ENABLED_PROPERTY,
+                true);
         }
     }
 
@@ -751,20 +831,21 @@ public static void setClientToken(String clientToken) {
     }
 
     /**
-     * Gets the theme used by {@link com.facebook.internal.WebDialog}
-     * @return the theme
+     * Gets the flag used by {@link com.facebook.appevents.AppEventsLogger}
+     * @return the auto logging events flag for the application
      */
-    public static int getWebDialogTheme() {
+    public static boolean getAutoLogAppEventsEnabled() {
         Validate.sdkInitialized();
-        return webDialogTheme;
+        return autoLogAppEventsEnabled;
     }
 
     /**
-     * Sets the theme used by {@link com.facebook.internal.WebDialog}
-     * @param theme A theme to use
+     * Sets the auto logging events flag for the application
+     * {@link com.facebook.appevents.AppEventsLogger}
+     * @param flag true or false
      */
-    public static void setWebDialogTheme(int theme) {
-        webDialogTheme = (theme != 0) ? theme : DEFAULT_THEME;
+    public static void setAutoLogAppEventsEnabled(boolean flag) {
+        autoLogAppEventsEnabled = flag;
     }
 
     /**
diff --git a/facebook/src/main/java/com/facebook/FacebookSdkNotInitializedException.java b/facebook-core/src/main/java/com/facebook/FacebookSdkNotInitializedException.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/FacebookSdkNotInitializedException.java
rename to facebook-core/src/main/java/com/facebook/FacebookSdkNotInitializedException.java
diff --git a/facebook/src/main/java/com/facebook/FacebookSdkVersion.java b/facebook-core/src/main/java/com/facebook/FacebookSdkVersion.java
similarity index 95%
rename from facebook/src/main/java/com/facebook/FacebookSdkVersion.java
rename to facebook-core/src/main/java/com/facebook/FacebookSdkVersion.java
index 2306bd159..7577364e1 100644
--- a/facebook/src/main/java/com/facebook/FacebookSdkVersion.java
+++ b/facebook-core/src/main/java/com/facebook/FacebookSdkVersion.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -21,5 +21,5 @@
 package com.facebook;
 
 final class FacebookSdkVersion {
-    public static final String BUILD = "4.16.0";
+    public static final String BUILD = "4.27.0";
 }
diff --git a/facebook/src/main/java/com/facebook/FacebookServiceException.java b/facebook-core/src/main/java/com/facebook/FacebookServiceException.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/FacebookServiceException.java
rename to facebook-core/src/main/java/com/facebook/FacebookServiceException.java
diff --git a/facebook/src/main/java/com/facebook/GraphRequest.java b/facebook-core/src/main/java/com/facebook/GraphRequest.java
similarity index 97%
rename from facebook/src/main/java/com/facebook/GraphRequest.java
rename to facebook-core/src/main/java/com/facebook/GraphRequest.java
index 5368774e7..35dbf155f 100644
--- a/facebook/src/main/java/com/facebook/GraphRequest.java
+++ b/facebook-core/src/main/java/com/facebook/GraphRequest.java
@@ -30,9 +30,6 @@
 import android.util.Pair;
 
 import com.facebook.internal.*;
-import com.facebook.share.internal.OpenGraphJSONUtility;
-import com.facebook.share.model.ShareOpenGraphObject;
-import com.facebook.share.model.SharePhoto;
 
 import org.json.JSONArray;
 import org.json.JSONException;
@@ -1830,65 +1827,6 @@ private static void processGraphObject(
         }
     }
 
-    /**
-     * Create an User Owned Open Graph object
-     *
-     * Use this method to create an open graph object, which can then be posted utilizing the same
-     * GraphRequest methods as other GraphRequests.
-     *
-     * @param openGraphObject The open graph object to create. Only SharePhotos with the imageUrl
-     *                        set are accepted through this helper method.
-     * @return GraphRequest for creating the given openGraphObject
-     * @throws FacebookException thrown in the case of a JSONException or in the case of invalid
-     *                           format for SharePhoto (missing imageUrl)
-     */
-
-    public static GraphRequest createOpenGraphObject(final ShareOpenGraphObject openGraphObject)
-            throws FacebookException {
-        String type = openGraphObject.getString("type");
-        if (type == null) {
-            type = openGraphObject.getString("og:type");
-        }
-
-        if (type == null) {
-            throw new FacebookException("Open graph object type cannot be null");
-        }
-        try {
-            JSONObject stagedObject = (JSONObject) OpenGraphJSONUtility.toJSONValue(
-                    openGraphObject,
-                    new OpenGraphJSONUtility.PhotoJSONProcessor() {
-                        @Override
-                        public JSONObject toJSONObject(SharePhoto photo) {
-                            Uri photoUri = photo.getImageUrl();
-                            JSONObject photoJSONObject = new JSONObject();
-                            try {
-                                photoJSONObject.put(
-                                        NativeProtocol.IMAGE_URL_KEY, photoUri.toString());
-                            } catch (Exception e) {
-                                throw new FacebookException("Unable to attach images", e);
-                            }
-                            return photoJSONObject;
-                        }
-                    });
-            String ogType = type;
-            Bundle parameters = new Bundle();
-            parameters.putString("object", stagedObject.toString());
-
-            String graphPath = String.format(
-                    Locale.ROOT, GRAPH_PATH_FORMAT,
-                    ME,
-                    "objects/" + ogType);
-            return new GraphRequest(
-                    AccessToken.getCurrentAccessToken(),
-                    graphPath,
-                    parameters,
-                    HttpMethod.POST);
-        }
-        catch(JSONException e){
-            throw new FacebookException(e.getMessage());
-        }
-    }
-
     private static void processGraphObjectProperty(
             String key,
             Object value,
diff --git a/facebook/src/main/java/com/facebook/GraphRequestAsyncTask.java b/facebook-core/src/main/java/com/facebook/GraphRequestAsyncTask.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/GraphRequestAsyncTask.java
rename to facebook-core/src/main/java/com/facebook/GraphRequestAsyncTask.java
diff --git a/facebook/src/main/java/com/facebook/GraphRequestBatch.java b/facebook-core/src/main/java/com/facebook/GraphRequestBatch.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/GraphRequestBatch.java
rename to facebook-core/src/main/java/com/facebook/GraphRequestBatch.java
diff --git a/facebook/src/main/java/com/facebook/GraphResponse.java b/facebook-core/src/main/java/com/facebook/GraphResponse.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/GraphResponse.java
rename to facebook-core/src/main/java/com/facebook/GraphResponse.java
index 34868efb4..f7de20e11 100644
--- a/facebook/src/main/java/com/facebook/GraphResponse.java
+++ b/facebook-core/src/main/java/com/facebook/GraphResponse.java
@@ -359,8 +359,7 @@ public String toString() {
         }
 
         if (!(object instanceof JSONArray) || ((JSONArray) object).length() != numRequests) {
-            FacebookException exception = new FacebookException("Unexpected number of results");
-            throw exception;
+            throw new FacebookException("Unexpected number of results");
         }
 
         JSONArray jsonArray = (JSONArray) object;
diff --git a/facebook/src/main/java/com/facebook/HttpMethod.java b/facebook-core/src/main/java/com/facebook/HttpMethod.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/HttpMethod.java
rename to facebook-core/src/main/java/com/facebook/HttpMethod.java
diff --git a/facebook/src/main/java/com/facebook/LegacyTokenHelper.java b/facebook-core/src/main/java/com/facebook/LegacyTokenHelper.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/LegacyTokenHelper.java
rename to facebook-core/src/main/java/com/facebook/LegacyTokenHelper.java
diff --git a/facebook/src/main/java/com/facebook/LoggingBehavior.java b/facebook-core/src/main/java/com/facebook/LoggingBehavior.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/LoggingBehavior.java
rename to facebook-core/src/main/java/com/facebook/LoggingBehavior.java
diff --git a/facebook/src/main/java/com/facebook/Profile.java b/facebook-core/src/main/java/com/facebook/Profile.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/Profile.java
rename to facebook-core/src/main/java/com/facebook/Profile.java
index 919ba1686..22488c669 100644
--- a/facebook/src/main/java/com/facebook/Profile.java
+++ b/facebook-core/src/main/java/com/facebook/Profile.java
@@ -21,7 +21,6 @@
 package com.facebook;
 
 import android.net.Uri;
-import android.os.Bundle;
 import android.os.Parcel;
 import android.os.Parcelable;
 import android.support.annotation.Nullable;
diff --git a/facebook/src/main/java/com/facebook/ProfileCache.java b/facebook-core/src/main/java/com/facebook/ProfileCache.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/ProfileCache.java
rename to facebook-core/src/main/java/com/facebook/ProfileCache.java
diff --git a/facebook/src/main/java/com/facebook/ProfileManager.java b/facebook-core/src/main/java/com/facebook/ProfileManager.java
similarity index 95%
rename from facebook/src/main/java/com/facebook/ProfileManager.java
rename to facebook-core/src/main/java/com/facebook/ProfileManager.java
index 1f14b2554..666d1c816 100644
--- a/facebook/src/main/java/com/facebook/ProfileManager.java
+++ b/facebook-core/src/main/java/com/facebook/ProfileManager.java
@@ -27,12 +27,12 @@
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
 
-final class ProfileManager {
-    static final String ACTION_CURRENT_PROFILE_CHANGED =
+final public class ProfileManager {
+    public static final String ACTION_CURRENT_PROFILE_CHANGED =
             "com.facebook.sdk.ACTION_CURRENT_PROFILE_CHANGED";
-    static final String EXTRA_OLD_PROFILE =
+    public static final String EXTRA_OLD_PROFILE =
             "com.facebook.sdk.EXTRA_OLD_PROFILE";
-    static final String EXTRA_NEW_PROFILE =
+    public static final String EXTRA_NEW_PROFILE =
             "com.facebook.sdk.EXTRA_NEW_PROFILE";
 
     private static volatile ProfileManager instance;
diff --git a/facebook/src/main/java/com/facebook/ProfileTracker.java b/facebook-core/src/main/java/com/facebook/ProfileTracker.java
similarity index 93%
rename from facebook/src/main/java/com/facebook/ProfileTracker.java
rename to facebook-core/src/main/java/com/facebook/ProfileTracker.java
index 8ee010c8e..ad18f74b7 100644
--- a/facebook/src/main/java/com/facebook/ProfileTracker.java
+++ b/facebook-core/src/main/java/com/facebook/ProfileTracker.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -97,10 +97,8 @@ public boolean isTracking() {
         public void onReceive(Context context, Intent intent) {
             if (ProfileManager.ACTION_CURRENT_PROFILE_CHANGED.equals(intent.getAction())) {
 
-                Profile oldProfile = (Profile) intent
-                        .getParcelableExtra(ProfileManager.EXTRA_OLD_PROFILE);
-                Profile newProfile = (Profile) intent
-                        .getParcelableExtra(ProfileManager.EXTRA_NEW_PROFILE);
+                Profile oldProfile = intent.getParcelableExtra(ProfileManager.EXTRA_OLD_PROFILE);
+                Profile newProfile = intent.getParcelableExtra(ProfileManager.EXTRA_NEW_PROFILE);
 
                 onCurrentProfileChanged(oldProfile, newProfile);
             }
diff --git a/facebook/src/main/java/com/facebook/ProgressNoopOutputStream.java b/facebook-core/src/main/java/com/facebook/ProgressNoopOutputStream.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/ProgressNoopOutputStream.java
rename to facebook-core/src/main/java/com/facebook/ProgressNoopOutputStream.java
diff --git a/facebook/src/main/java/com/facebook/ProgressOutputStream.java b/facebook-core/src/main/java/com/facebook/ProgressOutputStream.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/ProgressOutputStream.java
rename to facebook-core/src/main/java/com/facebook/ProgressOutputStream.java
diff --git a/facebook/src/main/java/com/facebook/RequestOutputStream.java b/facebook-core/src/main/java/com/facebook/RequestOutputStream.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/RequestOutputStream.java
rename to facebook-core/src/main/java/com/facebook/RequestOutputStream.java
diff --git a/facebook/src/main/java/com/facebook/RequestProgress.java b/facebook-core/src/main/java/com/facebook/RequestProgress.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/RequestProgress.java
rename to facebook-core/src/main/java/com/facebook/RequestProgress.java
diff --git a/facebook/src/main/java/com/facebook/appevents/AccessTokenAppIdPair.java b/facebook-core/src/main/java/com/facebook/appevents/AccessTokenAppIdPair.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/appevents/AccessTokenAppIdPair.java
rename to facebook-core/src/main/java/com/facebook/appevents/AccessTokenAppIdPair.java
diff --git a/facebook-core/src/main/java/com/facebook/appevents/AnalyticsUserIDStore.java b/facebook-core/src/main/java/com/facebook/appevents/AnalyticsUserIDStore.java
new file mode 100644
index 000000000..960ab1c76
--- /dev/null
+++ b/facebook-core/src/main/java/com/facebook/appevents/AnalyticsUserIDStore.java
@@ -0,0 +1,113 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.appevents;
+
+import android.content.SharedPreferences;
+import android.preference.PreferenceManager;
+import android.util.Log;
+
+import com.facebook.FacebookSdk;
+import com.facebook.appevents.internal.AppEventUtility;
+
+import java.util.concurrent.locks.ReentrantReadWriteLock;
+
+class AnalyticsUserIDStore {
+    private static final String TAG = AnalyticsUserIDStore.class.getSimpleName();
+    private static final String ANALYTICS_USER_ID_KEY =
+            "com.facebook.appevents.AnalyticsUserIDStore.userID";
+
+    private static ReentrantReadWriteLock lock = new ReentrantReadWriteLock();
+    private static String userID;
+    private static volatile boolean initialized = false;
+
+    public static void initStore() {
+        if (initialized) {
+            return;
+        }
+
+        AppEventsLogger.getAnalyticsExecutor().execute(new Runnable() {
+            @Override
+            public void run() {
+                initAndWait();
+            }
+        });
+    }
+
+    public static void setUserID(final String id) {
+        AppEventUtility.assertIsNotMainThread();
+        if (!initialized) {
+            Log.w(TAG, "initStore should have been called before calling setUserID");
+            initAndWait();
+        }
+
+        AppEventsLogger.getAnalyticsExecutor().execute(new Runnable() {
+            @Override
+            public void run() {
+                lock.writeLock().lock();
+                try {
+                    userID = id;
+                    SharedPreferences sharedPreferences = PreferenceManager
+                            .getDefaultSharedPreferences(
+                                    FacebookSdk.getApplicationContext());
+                    SharedPreferences.Editor editor = sharedPreferences.edit();
+                    editor.putString(ANALYTICS_USER_ID_KEY, userID);
+                    editor.apply();
+                } finally {
+                    lock.writeLock().unlock();
+                }
+            }
+        });
+    }
+
+    public static String getUserID() {
+        if (!initialized) {
+            Log.w(TAG, "initStore should have been called before calling setUserID");
+            initAndWait();
+        }
+
+        lock.readLock().lock();
+        try {
+            return userID;
+        } finally {
+            lock.readLock().unlock();
+        }
+    }
+
+    private static void initAndWait() {
+        if (initialized) {
+            return;
+        }
+
+        lock.writeLock().lock();
+        try {
+            if (initialized) {
+                return;
+            }
+
+            SharedPreferences sharedPreferences = PreferenceManager.getDefaultSharedPreferences(
+                    FacebookSdk.getApplicationContext());
+            userID = sharedPreferences.getString(ANALYTICS_USER_ID_KEY, null);
+            initialized = true;
+        } finally {
+            lock.writeLock().unlock();
+        }
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/appevents/AppEvent.java b/facebook-core/src/main/java/com/facebook/appevents/AppEvent.java
similarity index 96%
rename from facebook/src/main/java/com/facebook/appevents/AppEvent.java
rename to facebook-core/src/main/java/com/facebook/appevents/AppEvent.java
index 52d2d7c98..1b1d70486 100644
--- a/facebook/src/main/java/com/facebook/appevents/AppEvent.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/AppEvent.java
@@ -124,7 +124,7 @@ private static void validateIdentifier(String identifier) throws FacebookExcepti
             );
         }
 
-        boolean alreadyValidated = false;
+        boolean alreadyValidated;
         synchronized (validatedIdentifiers) {
             alreadyValidated = validatedIdentifiers.contains(identifier);
         }
@@ -160,6 +160,7 @@ private static JSONObject getJSONObjectForAppEvent(
         JSONObject eventObject = new JSONObject();
 
         eventObject.put(Constants.EVENT_NAME_EVENT_KEY, eventName);
+        eventObject.put(Constants.EVENT_NAME_MD5_EVENT_KEY, md5Checksum(eventName));
         eventObject.put(Constants.LOG_TIME_APP_EVENT_KEY, System.currentTimeMillis() / 1000);
         eventObject.put("_ui", contextName);
         if (currentSessionId != null) {
@@ -174,6 +175,11 @@ private static JSONObject getJSONObjectForAppEvent(
             eventObject.put("_implicitlyLogged", "1");
         }
 
+        String externalAnalyticsUserId = AppEventsLogger.getUserID();
+        if (externalAnalyticsUserId != null) {
+            eventObject.put("_app_user_id", externalAnalyticsUserId);
+        }
+
         if (parameters != null) {
             for (String key : parameters.keySet()) {
 
@@ -254,7 +260,7 @@ private String calculateChecksum() {
 
     private static String md5Checksum(String toHash )
     {
-        String hash = null;
+        String hash;
         try
         {
             MessageDigest digest = MessageDigest.getInstance("MD5");
diff --git a/facebook/src/main/java/com/facebook/appevents/AppEventCollection.java b/facebook-core/src/main/java/com/facebook/appevents/AppEventCollection.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/appevents/AppEventCollection.java
rename to facebook-core/src/main/java/com/facebook/appevents/AppEventCollection.java
diff --git a/facebook/src/main/java/com/facebook/appevents/AppEventQueue.java b/facebook-core/src/main/java/com/facebook/appevents/AppEventQueue.java
similarity index 96%
rename from facebook/src/main/java/com/facebook/appevents/AppEventQueue.java
rename to facebook-core/src/main/java/com/facebook/appevents/AppEventQueue.java
index 690611996..70a2ff364 100644
--- a/facebook/src/main/java/com/facebook/appevents/AppEventQueue.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/AppEventQueue.java
@@ -31,14 +31,14 @@
 import com.facebook.GraphRequest;
 import com.facebook.GraphResponse;
 import com.facebook.LoggingBehavior;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.Logger;
-import com.facebook.internal.Utility;
 
 import org.json.JSONArray;
 import org.json.JSONException;
 
 import java.util.ArrayList;
-import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
 import java.util.concurrent.Executors;
@@ -194,8 +194,8 @@ private static GraphRequest buildRequestForSession(
             final FlushStatistics flushState) {
         String applicationId = accessTokenAppId.getApplicationId();
 
-        Utility.FetchedAppSettings fetchedAppSettings =
-                Utility.queryAppSettings(applicationId, false);
+        FetchedAppSettings fetchedAppSettings =
+                FetchedAppSettingsManager.queryAppSettings(applicationId, false);
 
         final GraphRequest postRequest = GraphRequest.newPostRequest(
                 null,
@@ -216,14 +216,16 @@ private static GraphRequest buildRequestForSession(
 
         postRequest.setParameters(requestParameters);
 
-        if (fetchedAppSettings == null) {
-            return null;
+        boolean supportsImplicitLogging = false;
+
+        if (fetchedAppSettings != null) {
+            supportsImplicitLogging = fetchedAppSettings.supportsImplicitLogging();
         }
 
         int numEvents = appEvents.populateRequest(
                 postRequest,
                 FacebookSdk.getApplicationContext(),
-                fetchedAppSettings.supportsImplicitLogging(),
+                supportsImplicitLogging,
                 limitEventUsage);
 
         if (numEvents == 0) {
diff --git a/facebook/src/main/java/com/facebook/appevents/AppEventStore.java b/facebook-core/src/main/java/com/facebook/appevents/AppEventStore.java
similarity index 95%
rename from facebook/src/main/java/com/facebook/appevents/AppEventStore.java
rename to facebook-core/src/main/java/com/facebook/appevents/AppEventStore.java
index 35d6bc518..ca21cb27a 100644
--- a/facebook/src/main/java/com/facebook/appevents/AppEventStore.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/AppEventStore.java
@@ -21,15 +21,12 @@
 package com.facebook.appevents;
 
 import android.content.Context;
-import android.os.Looper;
 import android.util.Log;
 
 import com.facebook.FacebookSdk;
 import com.facebook.appevents.internal.AppEventUtility;
 import com.facebook.internal.Utility;
 
-import junit.framework.Assert;
-
 import java.io.BufferedInputStream;
 import java.io.BufferedOutputStream;
 import java.io.FileNotFoundException;
@@ -38,8 +35,6 @@
 import java.io.ObjectInputStream;
 import java.io.ObjectOutputStream;
 import java.io.ObjectStreamClass;
-import java.util.HashMap;
-import java.util.List;
 
 class AppEventStore {
     private static final String TAG = AppEventStore.class.getName();
@@ -156,11 +151,11 @@ protected ObjectStreamClass readClassDescriptor()
             if (resultClassDescriptor.getName().equals(
                     ACCESS_TOKEN_APP_ID_PAIR_SERIALIZATION_PROXY_V1_CLASS_NAME)) {
                 resultClassDescriptor = ObjectStreamClass.lookup(
-                        com.facebook.appevents.AccessTokenAppIdPair.SerializationProxyV1.class);
+                        AccessTokenAppIdPair.SerializationProxyV1.class);
             } else if (resultClassDescriptor.getName().equals(
                     APP_EVENT_SERIALIZATION_PROXY_V1_CLASS_NAME)) {
                 resultClassDescriptor = ObjectStreamClass.lookup(
-                        com.facebook.appevents.AppEvent.SerializationProxyV1.class);
+                        AppEvent.SerializationProxyV1.class);
             }
 
             return resultClassDescriptor;
diff --git a/facebook/src/main/java/com/facebook/appevents/AppEventsConstants.java b/facebook-core/src/main/java/com/facebook/appevents/AppEventsConstants.java
similarity index 97%
rename from facebook/src/main/java/com/facebook/appevents/AppEventsConstants.java
rename to facebook-core/src/main/java/com/facebook/appevents/AppEventsConstants.java
index 060b05964..ecc16ce91 100644
--- a/facebook/src/main/java/com/facebook/appevents/AppEventsConstants.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/AppEventsConstants.java
@@ -57,6 +57,9 @@
     /** Log this event when the user has completed a tutorial in the app. */
     public static final String EVENT_NAME_COMPLETED_TUTORIAL = "fb_mobile_tutorial_completion";
 
+    /** Log this event when the app obtained a push registration token from FCM. */
+    public static final String EVENT_NAME_PUSH_TOKEN_OBTAINED = "fb_mobile_obtain_push_token";
+
     // Ecommerce related
 
     /**
diff --git a/facebook/src/main/java/com/facebook/appevents/AppEventsLogger.java b/facebook-core/src/main/java/com/facebook/appevents/AppEventsLogger.java
similarity index 82%
rename from facebook/src/main/java/com/facebook/appevents/AppEventsLogger.java
rename to facebook-core/src/main/java/com/facebook/appevents/AppEventsLogger.java
index 2652736c8..42e695f1e 100644
--- a/facebook/src/main/java/com/facebook/appevents/AppEventsLogger.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/AppEventsLogger.java
@@ -34,15 +34,15 @@
 
 import com.facebook.AccessToken;
 import com.facebook.FacebookException;
-import com.facebook.FacebookRequestError;
 import com.facebook.FacebookSdk;
 import com.facebook.GraphRequest;
-import com.facebook.GraphResponse;
 import com.facebook.HttpMethod;
 import com.facebook.LoggingBehavior;
 import com.facebook.appevents.internal.ActivityLifecycleTracker;
+import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.AttributionIdentifiers;
 import com.facebook.internal.BundleJSONConverter;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.Logger;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
@@ -196,7 +196,9 @@
 
     /**
      * Notifies the events system that the app has launched and activate and deactivate events
-     * should start being logged automatically. This should be called from the OnCreate method
+     * should start being logged automatically. By default this function is called automatically
+     * from sdkInitialize() flow. In case 'com.facebook.sdk.AutoLogAppEventsEnabled' manifest
+     * setting is set to false, it should typically be called from the OnCreate method
      * of you application.
      *
      * @param application The running application
@@ -207,7 +209,9 @@ public static void activateApp(Application application) {
 
     /**
      * Notifies the events system that the app has launched and activate and deactivate events
-     * should start being logged automatically. This should be called from the OnCreate method
+     * should start being logged automatically. By default this function is called automatically
+     * from sdkInitialize() flow. In case 'com.facebook.sdk.AutoLogAppEventsEnabled' manifest
+     * setting is set to false, it should typically be called from the OnCreate method
      * of you application.
      *
      * Call this if you wish to use a different Application ID then the one specified in the
@@ -222,6 +226,8 @@ public static void activateApp(Application application, String applicationId) {
                     "activateApp");
         }
 
+        AnalyticsUserIDStore.initStore();
+
         if (applicationId == null) {
             applicationId = FacebookSdk.getApplicationId();
         }
@@ -280,6 +286,8 @@ public static void activateApp(Context context, String applicationId) {
             throw new IllegalArgumentException("Both context and applicationId must be non-null");
         }
 
+        AnalyticsUserIDStore.initStore();
+
         if ((context instanceof Activity)) {
             setSourceApplication((Activity) context);
         } else {
@@ -382,6 +390,53 @@ private void logAppSessionSuspendEvent(long eventTime) {
                 eventTime);
     }
 
+    /**
+     * Notifies the events system which internal SDK Libraries the app is utilizing.
+     * This is called internally and does NOT need to be called externally.
+     *
+     * @param context The Context
+     * @param applicationId The String applicationId
+     */
+    public static void initializeLib(Context context, String applicationId) {
+        final AppEventsLogger logger = new AppEventsLogger(context, applicationId, null);
+        backgroundExecutor.execute(new Runnable() {
+            @Override
+            public void run() {
+                Bundle params = new Bundle();
+                try {
+                    Class.forName("com.facebook.core.Core");
+                    params.putInt("core_lib_included", 1);
+                } catch (ClassNotFoundException ignored) { /* no op */ }
+                try {
+                    Class.forName("com.facebook.login.Login");
+                    params.putInt("login_lib_included", 1);
+                } catch (ClassNotFoundException ignored) { /* no op */ }
+                try {
+                    Class.forName("com.facebook.share.Share");
+                    params.putInt("share_lib_included", 1);
+                } catch (ClassNotFoundException ignored) { /* no op */ }
+                try {
+                    Class.forName("com.facebook.places.Places");
+                    params.putInt("places_lib_included", 1);
+                } catch (ClassNotFoundException ignored) { /* no op */ }
+                try {
+                    Class.forName("com.facebook.messenger.Messenger");
+                    params.putInt("messenger_lib_included", 1);
+                } catch (ClassNotFoundException ignored) { /* no op */ }
+                try {
+                    Class.forName("com.facebook.applinks.AppLinks");
+                    params.putInt("applinks_lib_included", 1);
+                } catch (ClassNotFoundException ignored) { /* no op */ }
+                try {
+                    Class.forName("com.facebook.all.All");
+                    params.putInt("all_lib_included", 1);
+                } catch (ClassNotFoundException ignored) { /* no op */ }
+
+                logger.logSdkEvent(AnalyticsEvents.EVENT_SDK_INITIALIZE, null, params);
+            }
+        });
+    }
+
     /**
      * Build an AppEventsLogger instance to log events through.  The Facebook app that these events
      * are targeted at comes from this application's metadata. The application ID used to log events
@@ -575,7 +630,41 @@ public void logEvent(String eventName, double valueToSum, Bundle parameters) {
      * @param currency       Currency used to specify the amount.
      */
     public void logPurchase(BigDecimal purchaseAmount, Currency currency) {
-        logPurchase(purchaseAmount, currency, null);
+        logPurchase(purchaseAmount, currency, null, false);
+    }
+
+    /**
+     * Logs a purchase event with Facebook explicitly, in the specified amount and with the
+     * specified currency. Additional detail about the purchase can be passed in through the
+     * parameters bundle.
+     * @param purchaseAmount Amount of purchase, in the currency specified by the 'currency'
+     *                       parameter. This value will be rounded to the thousandths place (e.g.,
+     *                       12.34567 becomes 12.346).
+     * @param currency       Currency used to specify the amount.
+     * @param parameters     Arbitrary additional information for describing this event. This should
+     *                       have no more than 24 entries, and keys should be mostly consistent from
+     *                       one purchase event to the next.
+     */
+    public void logPurchase(
+            BigDecimal purchaseAmount, Currency currency, Bundle parameters) {
+        logPurchase(purchaseAmount, currency, parameters, false);
+    }
+
+    /**
+     * Logs purchase event implicitly, in the specified amount and with the
+     * specified currency. Additional detail about the purchase can be passed in through the
+     * parameters bundle.
+     * @param purchaseAmount Amount of purchase, in the currency specified by the 'currency'
+     *                       parameter. This value will be rounded to the thousandths place (e.g.,
+     *                       12.34567 becomes 12.346).
+     * @param currency       Currency used to specify the amount.
+     * @param parameters     Arbitrary additional information for describing this event. This should
+     *                       have no more than 24 entries, and keys should be mostly consistent from
+     *                       one purchase event to the next.
+     */
+    public void logPurchaseImplicitly(
+            BigDecimal purchaseAmount, Currency currency, Bundle parameters) {
+        logPurchase(purchaseAmount, currency, parameters, true);
     }
 
     /**
@@ -591,7 +680,11 @@ public void logPurchase(BigDecimal purchaseAmount, Currency currency) {
      *                       one purchase event to the next.
      */
     @SuppressWarnings("deprecation")
-    public void logPurchase(BigDecimal purchaseAmount, Currency currency, Bundle parameters) {
+    public void logPurchase(
+            BigDecimal purchaseAmount,
+            Currency currency,
+            Bundle parameters,
+            boolean isImplicitlyLogged) {
 
         if (purchaseAmount == null) {
             notifyDeveloperError("purchaseAmount cannot be null");
@@ -606,7 +699,12 @@ public void logPurchase(BigDecimal purchaseAmount, Currency currency, Bundle par
         }
         parameters.putString(AppEventsConstants.EVENT_PARAM_CURRENCY, currency.getCurrencyCode());
 
-        logEvent(AppEventsConstants.EVENT_NAME_PURCHASED, purchaseAmount.doubleValue(), parameters);
+        logEvent(
+                AppEventsConstants.EVENT_NAME_PURCHASED,
+                purchaseAmount.doubleValue(),
+                parameters,
+                isImplicitlyLogged,
+                ActivityLifecycleTracker.getCurrentSessionGuid());
         eagerFlush();
     }
 
@@ -680,12 +778,24 @@ public boolean isValidForAccessToken(AccessToken accessToken) {
     }
 
     /**
-     * Sets a registration id to register the current app installation for push notifications.
-     * @param registrationId RegistrationId received from GCM.
+     * Sets and sends registration id to register the current app for push notifications.
+     * @param registrationId RegistrationId received from FCM.
      */
     public static void setPushNotificationsRegistrationId(String registrationId) {
         synchronized (staticLock) {
-            pushNotificationsRegistrationId = registrationId;
+            if (!Utility.stringsEqualOrEmpty(pushNotificationsRegistrationId, registrationId))
+            {
+                pushNotificationsRegistrationId = registrationId;
+
+                AppEventsLogger logger = AppEventsLogger.newLogger(
+                        FacebookSdk.getApplicationContext());
+                // Log implicit push token event and flush logger immediately
+                logger.logEvent(AppEventsConstants.EVENT_NAME_PUSH_TOKEN_OBTAINED);
+                if (AppEventsLogger.getFlushBehavior() !=
+                        AppEventsLogger.FlushBehavior.EXPLICIT_ONLY) {
+                    logger.flush();
+                }
+            }
         }
     }
 
@@ -695,6 +805,94 @@ static String getPushNotificationsRegistrationId() {
         }
     }
 
+    /**
+     * Sets a user id to associate with all app events. This can be used to associate your own
+     * user id with the app events logged from this instance of an application.
+     *
+     * The user ID will be persisted between application instantces.
+     *
+     * @param userID A User ID
+     */
+    public static void setUserID(final String userID) {
+        AnalyticsUserIDStore.setUserID(userID);
+    }
+
+    /**
+     * Returns the set user id else null.
+     */
+    public static String getUserID() {
+       return AnalyticsUserIDStore.getUserID();
+    }
+
+    /**
+     * Clears the currently set user id.
+     */
+    public static void clearUserID() {
+        AnalyticsUserIDStore.setUserID(null);
+    }
+
+    public static void updateUserProperties(
+            Bundle parameters,
+            GraphRequest.Callback callback) {
+        updateUserProperties(
+                parameters,
+                FacebookSdk.getApplicationId(),
+                callback);
+    }
+
+    public static void updateUserProperties(
+            final Bundle parameters,
+            final String applicationID,
+            final GraphRequest.Callback callback) {
+        final String userID = getUserID();
+        if (userID == null || userID.isEmpty()) {
+            Logger.log(
+                    LoggingBehavior.APP_EVENTS,
+                    TAG,
+                    "AppEventsLogger userID cannot be null or empty");
+            return;
+        }
+
+        getAnalyticsExecutor().execute(new Runnable() {
+            @Override
+            public void run() {
+                Bundle userPropertiesParams = new Bundle();
+                userPropertiesParams.putString("user_unique_id", userID);
+                userPropertiesParams.putBundle("custom_data", parameters);
+                // This call must be run on the background thread
+                AttributionIdentifiers identifiers =
+                        AttributionIdentifiers.getAttributionIdentifiers(
+                            FacebookSdk.getApplicationContext());
+                if (identifiers != null && identifiers.getAndroidAdvertiserId() != null) {
+                    userPropertiesParams.putString(
+                            "advertiser_id",
+                            identifiers.getAndroidAdvertiserId());
+                }
+
+                Bundle data = new Bundle();
+                try {
+                    JSONObject userData = BundleJSONConverter.convertToJSON(userPropertiesParams);
+                    JSONArray dataArray = new JSONArray();
+                    dataArray.put(userData);
+
+                    data.putString(
+                            "data", dataArray.toString());
+                } catch (JSONException ex) {
+                    throw new FacebookException("Failed to construct request", ex);
+                }
+
+                GraphRequest request = new GraphRequest(
+                        AccessToken.getCurrentAccessToken(),
+                        String.format(Locale.US, "%s/user_properties", applicationID),
+                        data,
+                        HttpMethod.POST,
+                        callback);
+                request.setSkipClientToken(true);
+                request.executeAsync();
+            }
+        });
+    }
+
     /**
      * This method is intended only for internal use by the Facebook SDK and other use is
      * unsupported.
@@ -776,7 +974,7 @@ public void run() {
                 }
 
                 for (String applicationId : applicationIds) {
-                    Utility.queryAppSettings(applicationId, true);
+                    FetchedAppSettingsManager.queryAppSettings(applicationId, true);
                 }
             }
         };
diff --git a/facebook/src/main/java/com/facebook/appevents/FacebookTimeSpentData.java b/facebook-core/src/main/java/com/facebook/appevents/FacebookTimeSpentData.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/appevents/FacebookTimeSpentData.java
rename to facebook-core/src/main/java/com/facebook/appevents/FacebookTimeSpentData.java
index 4dd7cc254..1d703b632 100644
--- a/facebook/src/main/java/com/facebook/appevents/FacebookTimeSpentData.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/FacebookTimeSpentData.java
@@ -233,6 +233,9 @@ void onResume(AppEventsLogger logger, long eventTime, String sourceApplicationIn
                     sourceApplicationInfo);
             logger.logEvent(AppEventsConstants.EVENT_NAME_ACTIVATED_APP, eventParams);
             lastActivateEventLoggedTime = now;
+            if (logger.getFlushBehavior() != AppEventsLogger.FlushBehavior.EXPLICIT_ONLY) {
+              logger.flush();
+            }
         }
 
         // If this is an application that's not calling onSuspend yet, log and return. We can't
diff --git a/facebook/src/main/java/com/facebook/appevents/FlushReason.java b/facebook-core/src/main/java/com/facebook/appevents/FlushReason.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/appevents/FlushReason.java
rename to facebook-core/src/main/java/com/facebook/appevents/FlushReason.java
diff --git a/facebook/src/main/java/com/facebook/appevents/FlushResult.java b/facebook-core/src/main/java/com/facebook/appevents/FlushResult.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/appevents/FlushResult.java
rename to facebook-core/src/main/java/com/facebook/appevents/FlushResult.java
diff --git a/facebook/src/main/java/com/facebook/appevents/FlushStatistics.java b/facebook-core/src/main/java/com/facebook/appevents/FlushStatistics.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/appevents/FlushStatistics.java
rename to facebook-core/src/main/java/com/facebook/appevents/FlushStatistics.java
diff --git a/facebook/src/main/java/com/facebook/appevents/PersistedEvents.java b/facebook-core/src/main/java/com/facebook/appevents/PersistedEvents.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/appevents/PersistedEvents.java
rename to facebook-core/src/main/java/com/facebook/appevents/PersistedEvents.java
index df47a7ac8..283263126 100644
--- a/facebook/src/main/java/com/facebook/appevents/PersistedEvents.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/PersistedEvents.java
@@ -59,7 +59,7 @@ public void addEvents(AccessTokenAppIdPair accessTokenAppIdPair, List<AppEvent>
     }
 
     static class SerializationProxyV1 implements Serializable {
-        private static final long serialVersionUID = 2016_06_29_001L;;
+        private static final long serialVersionUID = 2016_06_29_001L;
         private final HashMap<AccessTokenAppIdPair, List<AppEvent>> proxyEvents;
 
         private SerializationProxyV1(HashMap<AccessTokenAppIdPair, List<AppEvent>> events) {
diff --git a/facebook/src/main/java/com/facebook/appevents/SessionEventsState.java b/facebook-core/src/main/java/com/facebook/appevents/SessionEventsState.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/appevents/SessionEventsState.java
rename to facebook-core/src/main/java/com/facebook/appevents/SessionEventsState.java
diff --git a/facebook/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java b/facebook-core/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java
similarity index 88%
rename from facebook/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java
rename to facebook-core/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java
index f9e27b90b..9d82fe2e2 100644
--- a/facebook/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -24,15 +24,14 @@
 import android.app.Application;
 import android.content.Context;
 import android.os.Bundle;
-import android.os.Looper;
 import android.util.Log;
 
 import com.facebook.FacebookSdk;
 import com.facebook.appevents.AppEventsLogger;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.Utility;
 
-import junit.framework.Assert;
-
 import java.util.UUID;
 import java.util.concurrent.Executors;
 import java.util.concurrent.ScheduledExecutorService;
@@ -50,6 +49,7 @@
     private static final ScheduledExecutorService singleThreadExecutor =
             Executors.newSingleThreadScheduledExecutor();
     private static volatile ScheduledFuture currentFuture;
+    private static final Object currentFutureLock = new Object();
     private static AtomicInteger foregroundActivityCount = new AtomicInteger(0);
     // This member should only be changed or updated when executing on the singleThreadExecutor.
     private static volatile SessionInfo currentSession;
@@ -113,15 +113,16 @@ public static UUID getCurrentSessionGuid() {
     }
 
     // Public in order to allow unity sdk to correctly log app events
-    public static void onActivityCreated(final Activity activity) {
+    public static void onActivityCreated(Activity activity) {
         final long currentTime = System.currentTimeMillis();
+        final Context applicationContext = activity.getApplicationContext();
+        final String activityName = Utility.getActivityName(activity);
+        final SourceApplicationInfo sourceApplicationInfo =
+                SourceApplicationInfo.Factory.create(activity);
         Runnable handleActivityCreate = new Runnable() {
             @Override
             public void run() {
                 if (currentSession == null) {
-                    Context applicationContext = activity.getApplicationContext();
-                    String activityName = Utility.getActivityName(activity);
-
                     SessionInfo lastSession =
                             SessionInfo.getStoredSessionInfo();
                     if (lastSession != null) {
@@ -133,8 +134,7 @@ public void run() {
                     }
 
                     currentSession = new SessionInfo(currentTime, null);
-                    SourceApplicationInfo sourceApplicationInfo =
-                            SourceApplicationInfo.Factory.create(activity);
+
                     currentSession.setSourceApplicationInfo(sourceApplicationInfo);
                     SessionLogger.logActivateApp(
                             applicationContext,
@@ -148,17 +148,16 @@ public void run() {
     }
 
     // Public in order to allow unity sdk to correctly log app events
-    public static void onActivityResumed(final Activity activity) {
+    public static void onActivityResumed(Activity activity) {
         foregroundActivityCount.incrementAndGet();
         cancelCurrentTask();
         final long currentTime = System.currentTimeMillis();
         ActivityLifecycleTracker.currentActivityAppearTime = currentTime;
+        final Context applicationContext = activity.getApplicationContext();
+        final String activityName = Utility.getActivityName(activity);
         Runnable handleActivityResume = new Runnable() {
             @Override
             public void run() {
-                Context applicationContext = activity.getApplicationContext();
-                String activityName = Utility.getActivityName(activity);
-
                 if (currentSession == null) {
                     currentSession = new SessionInfo(currentTime, null);
                     SessionLogger.logActivateApp(
@@ -240,13 +239,18 @@ public void run() {
                                 currentSession = null;
                             }
 
-                            currentFuture = null;
+                            synchronized (currentFutureLock) {
+                                currentFuture = null;
+                            }
                         }
                     };
-                    currentFuture = singleThreadExecutor.schedule(
-                            task,
-                            getSessionTimeoutInSeconds(),
-                            TimeUnit.SECONDS);
+
+                    synchronized (currentFutureLock) {
+                        currentFuture = singleThreadExecutor.schedule(
+                                task,
+                                getSessionTimeoutInSeconds(),
+                                TimeUnit.SECONDS);
+                    }
 
                 }
 
@@ -255,8 +259,6 @@ public void run() {
                         ? (currentTime - appearTime) / 1000
                         : 0;
                 AutomaticAnalyticsLogger.logActivityTimeSpentEvent(
-                        applicationContext,
-                        appId,
                         activityName,
                         timeSpentOnActivityInSeconds
                 );
@@ -268,8 +270,8 @@ public void run() {
     }
 
     private static int getSessionTimeoutInSeconds() {
-        Utility.FetchedAppSettings settings =
-                Utility.getAppSettingsWithoutQuery(FacebookSdk.getApplicationId());
+        FetchedAppSettings settings =
+                FetchedAppSettingsManager.getAppSettingsWithoutQuery(FacebookSdk.getApplicationId());
         if (settings == null) {
             return Constants.getDefaultAppEventsSessionTimeoutInSeconds();
         }
@@ -278,10 +280,12 @@ private static int getSessionTimeoutInSeconds() {
     }
 
     private static void cancelCurrentTask() {
-        if (currentFuture != null) {
-            currentFuture.cancel(false);
-        }
+        synchronized (currentFutureLock) {
+            if (currentFuture != null) {
+                currentFuture.cancel(false);
+            }
 
-        currentFuture = null;
+            currentFuture = null;
+        }
     }
 }
diff --git a/facebook/src/main/java/com/facebook/appevents/internal/AppEventUtility.java b/facebook-core/src/main/java/com/facebook/appevents/internal/AppEventUtility.java
similarity index 97%
rename from facebook/src/main/java/com/facebook/appevents/internal/AppEventUtility.java
rename to facebook-core/src/main/java/com/facebook/appevents/internal/AppEventUtility.java
index c9455ce57..b36e82741 100644
--- a/facebook/src/main/java/com/facebook/appevents/internal/AppEventUtility.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/internal/AppEventUtility.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -21,7 +21,8 @@
 package com.facebook.appevents.internal;
 
 import android.os.Looper;
-import android.support.v4.BuildConfig;
+
+import com.facebook.core.BuildConfig;
 
 import junit.framework.Assert;
 
diff --git a/facebook-core/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java b/facebook-core/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java
new file mode 100644
index 000000000..b0d556a8e
--- /dev/null
+++ b/facebook-core/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java
@@ -0,0 +1,180 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.appevents.internal;
+
+import android.app.Activity;
+import android.app.Application;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.content.ServiceConnection;
+import android.os.Bundle;
+import android.os.IBinder;
+import android.support.annotation.Nullable;
+import android.util.Log;
+
+import com.facebook.FacebookSdk;
+import com.facebook.appevents.AppEventsLogger;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
+import com.facebook.internal.Utility;
+import com.facebook.internal.Validate;
+
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.math.BigDecimal;
+import java.util.Currency;
+
+/**
+ * com.facebook.appevents.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public class AutomaticAnalyticsLogger {
+    // Constants
+    private static final String TAG = AutomaticAnalyticsLogger.class.getCanonicalName();
+
+    private static final String INAPP_PURCHASE_DATA = "INAPP_PURCHASE_DATA";
+
+    @Nullable private static Object inAppBillingObj;
+
+    public static void logActivateAppEvent() {
+        final Context context = FacebookSdk.getApplicationContext();
+        final String appId = FacebookSdk.getApplicationId();
+        final boolean autoLogAppEvents = FacebookSdk.getAutoLogAppEventsEnabled();
+        Validate.notNull(context, "context");
+        if (autoLogAppEvents) {
+            if (context instanceof Application) {
+                AppEventsLogger.activateApp((Application) context, appId);
+            } else { // Context is probably originated from ContentProvider or Mocked
+                Log.w(
+                    TAG,
+                    "Automatic logging of basic events will not happen, because " +
+                      "FacebookSdk.getApplicationContext() returns object that is not " +
+                      "instance of android.app.Application. Make sure you call " +
+                      "FacebookSdk.sdkInitialize() from Application class and pass " +
+                      "application context.");
+            }
+        }
+    }
+
+    public static void logActivityTimeSpentEvent(String activityName, long timeSpentInSeconds) {
+        final Context context = FacebookSdk.getApplicationContext();
+        final String appId = FacebookSdk.getApplicationId();
+        Validate.notNull(context, "context");
+        final FetchedAppSettings settings = FetchedAppSettingsManager.queryAppSettings(
+                appId, false);
+        if (settings != null && settings.getAutomaticLoggingEnabled() && timeSpentInSeconds > 0) {
+            AppEventsLogger appEventsLogger = AppEventsLogger.newLogger(context);
+            Bundle params = new Bundle(1);
+            params.putCharSequence(Constants.AA_TIME_SPENT_SCREEN_PARAMETER_NAME, activityName);
+            appEventsLogger.logEvent(
+                Constants.AA_TIME_SPENT_EVENT_NAME, timeSpentInSeconds, params);
+        }
+    }
+
+    public static boolean logInAppPurchaseEvent(
+        final Context context,
+        int resultCode,
+        Intent data) {
+        final String appId = FacebookSdk.getApplicationId();
+        final FetchedAppSettings settings = FetchedAppSettingsManager.queryAppSettings(
+                appId, false);
+        if (data == null || !FacebookSdk.getAutoLogAppEventsEnabled()
+                || !settings.getIAPAutomaticLoggingEnabled()) {
+            return false;
+        }
+        final String purchaseData = data.getStringExtra(INAPP_PURCHASE_DATA);
+
+        if (resultCode == Activity.RESULT_OK) {
+            ServiceConnection serviceConnection = new ServiceConnection() {
+                @Override
+                public void onServiceDisconnected(ComponentName name) {
+                    inAppBillingObj = null;
+                    Utility.logd(TAG, "In-app billing service disconnected");
+                }
+
+                @Override
+                public void onServiceConnected(
+                        ComponentName name,
+                        IBinder service) {
+                    inAppBillingObj = InAppPurchaseEventManager
+                            .getServiceInterface(context, service);
+                    try {
+                        JSONObject purchaseDetails = new JSONObject(purchaseData);
+                        String sku = purchaseDetails.getString("productId");
+                        String skuDetails = InAppPurchaseEventManager.getPurchaseDetails(
+                                context, sku, inAppBillingObj);
+                        if (skuDetails.equals("")) {
+                            return;
+                        }
+                        JSONObject jsonSkuDetails = new JSONObject(skuDetails);
+                        AppEventsLogger appEventsLogger = AppEventsLogger.newLogger(context);
+                        Bundle params = new Bundle(1);
+                        params.putCharSequence(Constants.IAP_PRODUCT_ID, sku);
+                        params.putCharSequence(
+                                Constants.IAP_PURCHASE_TIME,
+                                purchaseDetails.getString("purchaseTime"));
+                        params.putCharSequence(
+                                Constants.IAP_PURCHASE_STATE,
+                                purchaseDetails.getString("purchaseState"));
+                        params.putCharSequence(
+                                Constants.IAP_PURCHASE_TOKEN,
+                                purchaseDetails.getString("purchaseToken"));
+                        params.putCharSequence(
+                                Constants.IAP_PACKAGE_NAME,
+                                purchaseDetails.getString("packageName"));
+                        params.putCharSequence(
+                                Constants.IAP_PRODUCT_TYPE,
+                                jsonSkuDetails.getString("type"));
+                        params.putCharSequence(
+                                Constants.IAP_PRODUCT_TITLE,
+                                jsonSkuDetails.getString("title"));
+                        params.putCharSequence(
+                                Constants.IAP_PRODUCT_DESCRIPTION,
+                                jsonSkuDetails.getString("description"));
+
+                        appEventsLogger.logPurchaseImplicitly(
+                                new BigDecimal(jsonSkuDetails.getInt("price_amount_micros") / 1000000.0),
+                                Currency.getInstance(jsonSkuDetails.getString("price_currency_code")),
+                                params);
+                    }
+                    catch (JSONException e) {
+                        Log.e(TAG, "Error parsing in-app purchase data.", e);
+                    }
+                    finally {
+                        context.unbindService(this);
+                    }
+                }
+            };
+
+            // Bind to InAppBillingService. This service reference should only be used
+            // to query in-app product details before logging. Do not use it for actual in-app
+            // purchase.
+            Intent serviceIntent =
+                    new Intent("com.android.vending.billing.InAppBillingService.BIND");
+            serviceIntent.setPackage("com.android.vending");
+            context.bindService(serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE);
+        }
+        return true;
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/appevents/internal/Constants.java b/facebook-core/src/main/java/com/facebook/appevents/internal/Constants.java
similarity index 70%
rename from facebook/src/main/java/com/facebook/appevents/internal/Constants.java
rename to facebook-core/src/main/java/com/facebook/appevents/internal/Constants.java
index 7df30fb0c..b9d308f13 100644
--- a/facebook/src/main/java/com/facebook/appevents/internal/Constants.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/internal/Constants.java
@@ -23,10 +23,19 @@
 public class Constants {
     public static final String LOG_TIME_APP_EVENT_KEY = "_logTime";
     public static final String EVENT_NAME_EVENT_KEY = "_eventName";
+    public static final String EVENT_NAME_MD5_EVENT_KEY = "_eventName_md5";
 
     // The following are for Automatic Analytics events and parameters
     public static final String AA_TIME_SPENT_EVENT_NAME = "fb_aa_time_spent_on_view";
     public static final String AA_TIME_SPENT_SCREEN_PARAMETER_NAME = "fb_aa_time_spent_view_name";
+    public static final String IAP_PRODUCT_ID = "fb_iap_product_id";
+    public static final String IAP_PURCHASE_TIME = "fb_iap_purchase_time";
+    public static final String IAP_PURCHASE_STATE = "fb_iap_purchase_state";
+    public static final String IAP_PURCHASE_TOKEN = "fb_iap_purchase_token";
+    public static final String IAP_PRODUCT_TYPE = "fb_iap_product_type";
+    public static final String IAP_PRODUCT_TITLE = "fb_iap_product_title";
+    public static final String IAP_PRODUCT_DESCRIPTION = "fb_iap_product_description";
+    public static final String IAP_PACKAGE_NAME = "fb_iap_package_name";
 
     public static int getDefaultAppEventsSessionTimeoutInSeconds() {
         return 60;
diff --git a/facebook-core/src/main/java/com/facebook/appevents/internal/InAppPurchaseEventManager.java b/facebook-core/src/main/java/com/facebook/appevents/internal/InAppPurchaseEventManager.java
new file mode 100644
index 000000000..cdeee7c9f
--- /dev/null
+++ b/facebook-core/src/main/java/com/facebook/appevents/internal/InAppPurchaseEventManager.java
@@ -0,0 +1,148 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.appevents.internal;
+
+import android.content.Context;
+import android.os.Bundle;
+import android.os.IBinder;
+import android.util.Log;
+
+import com.facebook.internal.Utility;
+
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+import java.util.ArrayList;
+import java.util.HashMap;
+
+public class InAppPurchaseEventManager {
+    private static final HashMap<String, Method> methodMap =
+            new HashMap<>();
+    private static final HashMap<String, Class<?>> classMap =
+            new HashMap<>();
+    private static final String TAG = InAppPurchaseEventManager.class.getCanonicalName();
+    private static final String GET_INTERFACE_METHOD = "iap_get_interface";
+    private static final String GET_SKU_DETAILS_METHOD = "iap_get_sku_details";
+    private static final String IN_APP_BILLING_SERVICE_STUB =
+            "com.android.vending.billing.IInAppBillingService$Stub";
+    private static final String IN_APP_BILLING_SERVICE =
+            "com.android.vending.billing.IInAppBillingService";
+    private static final String ITEM_ID_LIST = "ITEM_ID_LIST";
+    private static final String RESPONSE_CODE = "RESPONSE_CODE";
+    private static final String DETAILS_LIST = "DETAILS_LIST";
+
+    public static Object getServiceInterface(Context context, IBinder service) {
+        try {
+            Method getInterfaceMethod = methodMap.get(GET_INTERFACE_METHOD);
+            if (getInterfaceMethod ==  null) {
+                Class<?> iapClass = context.getClassLoader().loadClass(IN_APP_BILLING_SERVICE_STUB);
+                Class[] paramTypes = new Class[1];
+                paramTypes[0] = IBinder.class;
+                getInterfaceMethod = iapClass.getDeclaredMethod("asInterface", paramTypes);
+                methodMap.put(GET_INTERFACE_METHOD, getInterfaceMethod);
+            }
+
+            Object[] args = new Object[1];
+            args[0] = service;
+            Utility.logd(TAG, "In-app billing service connected");
+            return getInterfaceMethod.invoke(null, args);
+        }
+        catch (ClassNotFoundException e) {
+            Log.e(
+                    TAG,
+                    IN_APP_BILLING_SERVICE_STUB + " is not available, please add " +
+                            IN_APP_BILLING_SERVICE + " to the project.",
+                    e);
+        }
+        catch (NoSuchMethodException e) {
+            Log.e(TAG, IN_APP_BILLING_SERVICE_STUB + ".asInterface method not found", e);
+        }
+        catch (IllegalAccessException e) {
+            Log.e(
+                    TAG, "Illegal access to method " + IN_APP_BILLING_SERVICE_STUB + ".asInterface",
+                    e);
+        }
+        catch (InvocationTargetException e) {
+            Log.e(TAG, "Invocation target exception in " + IN_APP_BILLING_SERVICE_STUB +
+                    ".asInterface", e);
+        }
+        return null;
+    }
+
+    public static String getPurchaseDetails(Context context, String sku, Object inAppBillingObj) {
+        if (inAppBillingObj == null || sku == "") {
+            return "";
+        }
+        try {
+            Method getSkuDetailsMethod = methodMap.get(GET_SKU_DETAILS_METHOD);
+            Class<?> iapClass = classMap.get(IN_APP_BILLING_SERVICE);
+            if (getSkuDetailsMethod == null || iapClass == null) {
+                iapClass = context.getClassLoader().loadClass(IN_APP_BILLING_SERVICE);
+                Class[] paramTypes = new Class[4];
+                paramTypes[0] = Integer.TYPE;
+                paramTypes[1] = String.class;
+                paramTypes[2] = String.class;
+                paramTypes[3] = Bundle.class;
+                getSkuDetailsMethod = iapClass.getDeclaredMethod("getSkuDetails", paramTypes);
+                methodMap.put(GET_SKU_DETAILS_METHOD, getSkuDetailsMethod);
+                classMap.put(IN_APP_BILLING_SERVICE, iapClass);
+            }
+
+            ArrayList<String> skuList = new ArrayList<>();
+            skuList.add(sku);
+            Bundle querySkus = new Bundle();
+            querySkus.putStringArrayList(ITEM_ID_LIST, skuList);
+            Object localObj = iapClass.cast(inAppBillingObj);
+            Object[] args = new Object[4];
+            args[0] = Integer.valueOf(3);
+            args[1] = context.getPackageName();
+            args[2] = "inapp";
+            args[3] = querySkus;
+            Bundle skuDetails = (Bundle) getSkuDetailsMethod.invoke(localObj, args);
+
+            int response = skuDetails.getInt(RESPONSE_CODE);
+            if (response == 0) {
+                ArrayList<String> details = skuDetails.getStringArrayList(DETAILS_LIST);
+                String detail = details.size() < 1 ? "" : details.get(0);
+                return detail;
+            }
+        }
+        catch (ClassNotFoundException e) {
+            Log.e(
+                    TAG,
+                    IN_APP_BILLING_SERVICE + " is not available, please add " +
+                            IN_APP_BILLING_SERVICE + " to the project, and import the " +
+                            "IInAppBillingService.aidl file into this package",
+                    e);
+        }
+        catch (NoSuchMethodException e) {
+            Log.e(TAG, IN_APP_BILLING_SERVICE + ".getSkuDetails method is not available", e);
+        }
+        catch (InvocationTargetException e) {
+            Log.e(TAG,
+                    "Invocation target exception in " + IN_APP_BILLING_SERVICE + ".getSkuDetails",
+                    e);
+        }
+        catch (IllegalAccessException e) {
+            Log.e(TAG, "Illegal access to method " + IN_APP_BILLING_SERVICE + ".getSkuDetails", e);
+        }
+        return "";
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/appevents/internal/InternalAppEventsLogger.java b/facebook-core/src/main/java/com/facebook/appevents/internal/InternalAppEventsLogger.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/appevents/internal/InternalAppEventsLogger.java
rename to facebook-core/src/main/java/com/facebook/appevents/internal/InternalAppEventsLogger.java
diff --git a/facebook/src/main/java/com/facebook/appevents/internal/SessionInfo.java b/facebook-core/src/main/java/com/facebook/appevents/internal/SessionInfo.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/appevents/internal/SessionInfo.java
rename to facebook-core/src/main/java/com/facebook/appevents/internal/SessionInfo.java
index 7e6b18792..ac3823601 100644
--- a/facebook/src/main/java/com/facebook/appevents/internal/SessionInfo.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/internal/SessionInfo.java
@@ -62,7 +62,7 @@ public static SessionInfo getStoredSessionInfo() {
         SharedPreferences sharedPreferences =
             PreferenceManager.getDefaultSharedPreferences(
                     FacebookSdk.getApplicationContext());
-        
+
         long startTime = sharedPreferences.getLong(LAST_SESSION_INFO_START_KEY, 0);
         long endTime = sharedPreferences.getLong(LAST_SESSION_INFO_END_KEY, 0);
         String sessionIDStr = sharedPreferences.getString(SESSION_ID_KEY, null);
diff --git a/facebook/src/main/java/com/facebook/appevents/internal/SessionLogger.java b/facebook-core/src/main/java/com/facebook/appevents/internal/SessionLogger.java
similarity index 94%
rename from facebook/src/main/java/com/facebook/appevents/internal/SessionLogger.java
rename to facebook-core/src/main/java/com/facebook/appevents/internal/SessionLogger.java
index 8b88f5527..093519f17 100644
--- a/facebook/src/main/java/com/facebook/appevents/internal/SessionLogger.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/internal/SessionLogger.java
@@ -20,17 +20,14 @@
 
 package com.facebook.appevents.internal;
 
-import android.app.Activity;
 import android.content.Context;
 import android.os.Bundle;
 import android.text.format.DateUtils;
 
-import com.facebook.FacebookSdk;
 import com.facebook.LoggingBehavior;
 import com.facebook.appevents.AppEventsConstants;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.internal.Logger;
-import com.facebook.internal.Utility;
 
 import java.util.Locale;
 
@@ -74,11 +71,14 @@ public static void logActivateApp(
         eventParams.putString(
                 AppEventsConstants.EVENT_PARAM_SOURCE_APPLICATION,
                 sourAppInfoStr);
-        new InternalAppEventsLogger(
+        AppEventsLogger logger = new InternalAppEventsLogger(
                 activityName,
                 appId,
-                null)
-                .logEvent(AppEventsConstants.EVENT_NAME_ACTIVATED_APP, eventParams);
+                null);
+        logger.logEvent(AppEventsConstants.EVENT_NAME_ACTIVATED_APP, eventParams);
+        if (logger.getFlushBehavior() != AppEventsLogger.FlushBehavior.EXPLICIT_ONLY) {
+          logger.flush();
+        }
     }
 
     public static void logDeactivateApp(
diff --git a/facebook/src/main/java/com/facebook/appevents/internal/SourceApplicationInfo.java b/facebook-core/src/main/java/com/facebook/appevents/internal/SourceApplicationInfo.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/appevents/internal/SourceApplicationInfo.java
rename to facebook-core/src/main/java/com/facebook/appevents/internal/SourceApplicationInfo.java
diff --git a/facebook-core/src/main/java/com/facebook/core/Core.java b/facebook-core/src/main/java/com/facebook/core/Core.java
new file mode 100644
index 000000000..1f351f107
--- /dev/null
+++ b/facebook-core/src/main/java/com/facebook/core/Core.java
@@ -0,0 +1,5 @@
+// Copyright 2004-present Facebook. All Rights Reserved.
+
+package com.facebook.core;
+
+public class Core { }
diff --git a/facebook/src/main/java/com/facebook/internal/AnalyticsEvents.java b/facebook-core/src/main/java/com/facebook/internal/AnalyticsEvents.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/internal/AnalyticsEvents.java
rename to facebook-core/src/main/java/com/facebook/internal/AnalyticsEvents.java
index 753eec00e..32326d8d7 100644
--- a/facebook/src/main/java/com/facebook/internal/AnalyticsEvents.java
+++ b/facebook-core/src/main/java/com/facebook/internal/AnalyticsEvents.java
@@ -113,4 +113,8 @@
 
     public static final String EVENT_DEVICE_SHARE_BUTTON_CREATE = "fb_device_share_button_create";
     public static final String EVENT_DEVICE_SHARE_BUTTON_DID_TAP= "fb_device_share_button_did_tap";
+
+    public static final String EVENT_SMART_LOGIN_SERVICE = "fb_smart_login_service";
+
+    public static final String EVENT_SDK_INITIALIZE = "fb_sdk_initialize";
 }
diff --git a/facebook/src/main/java/com/facebook/internal/AppEventsLoggerUtility.java b/facebook-core/src/main/java/com/facebook/internal/AppEventsLoggerUtility.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/internal/AppEventsLoggerUtility.java
rename to facebook-core/src/main/java/com/facebook/internal/AppEventsLoggerUtility.java
diff --git a/facebook/src/main/java/com/facebook/internal/AttributionIdentifiers.java b/facebook-core/src/main/java/com/facebook/internal/AttributionIdentifiers.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/internal/AttributionIdentifiers.java
rename to facebook-core/src/main/java/com/facebook/internal/AttributionIdentifiers.java
index 8a314e367..16a0ee55f 100644
--- a/facebook/src/main/java/com/facebook/internal/AttributionIdentifiers.java
+++ b/facebook-core/src/main/java/com/facebook/internal/AttributionIdentifiers.java
@@ -265,7 +265,9 @@ private static String getInstallerPackageName(Context context) {
         @Override
         public void onServiceConnected(ComponentName name, IBinder service) {
             try {
-                queue.put(service);
+                if (service != null) {
+                    queue.put(service);
+                }
             } catch (InterruptedException e) {
             }
         }
diff --git a/facebook/src/main/java/com/facebook/internal/BoltsMeasurementEventListener.java b/facebook-core/src/main/java/com/facebook/internal/BoltsMeasurementEventListener.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/internal/BoltsMeasurementEventListener.java
rename to facebook-core/src/main/java/com/facebook/internal/BoltsMeasurementEventListener.java
index 681a94838..1dd813d97 100644
--- a/facebook/src/main/java/com/facebook/internal/BoltsMeasurementEventListener.java
+++ b/facebook-core/src/main/java/com/facebook/internal/BoltsMeasurementEventListener.java
@@ -89,7 +89,7 @@ public void onReceive(Context context, Intent intent) {
         for(String key : eventArgs.keySet()) {
            String safeKey = key.replaceAll(
                    "[^0-9a-zA-Z _-]", "-").replaceAll("^[ -]*", "").replaceAll("[ -]*$", "");
-           logData.putString(safeKey, (String)eventArgs.get(key));
+           logData.putString(safeKey, (String) eventArgs.get(key));
         }
         appEventsLogger.logEvent(eventName, logData);
     }
diff --git a/facebook/src/main/java/com/facebook/internal/BundleJSONConverter.java b/facebook-core/src/main/java/com/facebook/internal/BundleJSONConverter.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/internal/BundleJSONConverter.java
rename to facebook-core/src/main/java/com/facebook/internal/BundleJSONConverter.java
diff --git a/facebook/src/main/java/com/facebook/internal/CallbackManagerImpl.java b/facebook-core/src/main/java/com/facebook/internal/CallbackManagerImpl.java
similarity index 77%
rename from facebook/src/main/java/com/facebook/internal/CallbackManagerImpl.java
rename to facebook-core/src/main/java/com/facebook/internal/CallbackManagerImpl.java
index d7fdbd5e6..80050b246 100644
--- a/facebook/src/main/java/com/facebook/internal/CallbackManagerImpl.java
+++ b/facebook-core/src/main/java/com/facebook/internal/CallbackManagerImpl.java
@@ -21,10 +21,14 @@
 package com.facebook.internal;
 
 import android.content.Intent;
+import android.util.Log;
 
 import com.facebook.CallbackManager;
 import com.facebook.FacebookSdk;
 
+import org.json.JSONException;
+import org.json.JSONObject;
+
 import java.util.HashMap;
 import java.util.Map;
 
@@ -34,6 +38,8 @@
  * unsupported, and they may be modified or removed without warning at any time.
  */
 public final class CallbackManagerImpl implements CallbackManager {
+    private static final String TAG = CallbackManagerImpl.class.getSimpleName();
+    private static final String INAPP_PURCHASE_DATA = "INAPP_PURCHASE_DATA";
     private static Map<Integer, Callback> staticCallbacks = new HashMap<>();
 
     /**
@@ -75,8 +81,15 @@ public void registerCallback(int requestCode, Callback callback) {
         callbacks.put(requestCode, callback);
     }
 
+    public void unregisterCallback(int requestCode) {
+        callbacks.remove(requestCode);
+    }
+
     @Override
     public boolean onActivityResult(int requestCode, int resultCode, Intent data) {
+        if (isPurchaseIntent(data)) {
+            requestCode = RequestCodeOffset.InAppPurchase.toRequestCode();
+        }
         Callback callback = callbacks.get(requestCode);
         if (callback != null) {
             return callback.onActivityResult(resultCode, data);
@@ -98,6 +111,7 @@ public boolean onActivityResult(int requestCode, int resultCode, Intent data) {
         AppGroupJoin(6),
         AppInvite(7),
         DeviceShare(8),
+        InAppPurchase(9),
         ;
 
         private final int offset;
@@ -110,4 +124,23 @@ public int toRequestCode() {
             return FacebookSdk.getCallbackRequestCodeOffset() + offset;
         }
     }
+
+    private static boolean isPurchaseIntent(Intent data) {
+        final String purchaseData;
+        if (data == null || (purchaseData = data.getStringExtra(INAPP_PURCHASE_DATA)) == null) {
+            return false;
+        }
+
+        try {
+            JSONObject jo = new JSONObject(purchaseData);
+            return jo.has("orderId") && jo.has("packageName") && jo.has("productId")
+                    && jo.has("purchaseTime") && jo.has("purchaseState")
+                    && jo.has("developerPayload") && jo.has("purchaseToken");
+        }
+        catch (JSONException e) {
+            Log.e(TAG, "Error parsing intent data.", e);
+        }
+
+        return false;
+    }
 }
diff --git a/facebook-core/src/main/java/com/facebook/internal/FacebookInitProvider.java b/facebook-core/src/main/java/com/facebook/internal/FacebookInitProvider.java
new file mode 100644
index 000000000..e50f0f3af
--- /dev/null
+++ b/facebook-core/src/main/java/com/facebook/internal/FacebookInitProvider.java
@@ -0,0 +1,60 @@
+// Copyright 2004-present Facebook. All Rights Reserved.
+
+package com.facebook.internal;
+
+import android.content.ContentProvider;
+import android.content.ContentValues;
+import android.database.Cursor;
+import android.net.Uri;
+import android.util.Log;
+
+import com.facebook.FacebookSdk;
+
+public final class FacebookInitProvider extends ContentProvider {
+    private static final String TAG = FacebookInitProvider.class.getSimpleName();
+
+    @Override
+    @SuppressWarnings("deprecation")
+    public boolean onCreate() {
+        try {
+            FacebookSdk.sdkInitialize(getContext());
+        } catch (Exception ex) {
+            Log.i(TAG, "Failed to auto initialize the Facebook SDK", ex);
+        }
+        return false;
+    }
+
+    @Override
+    public Cursor query(
+            final Uri uri,
+            final String[] projection,
+            final String selection,
+            final String[] selectionArgs,
+            final String sortOrder) {
+        return null;
+    }
+
+    @Override
+    public String getType(final Uri uri) {
+        return null;
+    }
+
+    @Override
+    public Uri insert(final Uri uri, final ContentValues values) {
+        return null;
+    }
+
+    @Override
+    public int delete(final Uri uri, final String selection, final String[] selectionArgs) {
+        return 0;
+    }
+
+    @Override
+    public int update(
+            final Uri uri,
+            final ContentValues values,
+            final String selection,
+            final String[] selectionArgs) {
+        return 0;
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/internal/FacebookRequestErrorClassification.java b/facebook-core/src/main/java/com/facebook/internal/FacebookRequestErrorClassification.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/internal/FacebookRequestErrorClassification.java
rename to facebook-core/src/main/java/com/facebook/internal/FacebookRequestErrorClassification.java
diff --git a/facebook-core/src/main/java/com/facebook/internal/FacebookSignatureValidator.java b/facebook-core/src/main/java/com/facebook/internal/FacebookSignatureValidator.java
new file mode 100644
index 000000000..734abfe9b
--- /dev/null
+++ b/facebook-core/src/main/java/com/facebook/internal/FacebookSignatureValidator.java
@@ -0,0 +1,91 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.internal;
+
+import java.util.HashSet;
+
+import android.content.Context;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.Signature;
+import android.os.Build;
+
+/**
+ * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
+ * Android. Use of any of the classes in this package is unsupported, and they may be modified or
+ * removed without warning at any time.
+ */
+public class FacebookSignatureValidator {
+
+  private static final String FBI_HASH = "a4b7452e2ed8f5f191058ca7bbfd26b0d3214bfc";
+  private static final String FBL_HASH = "5e8f16062ea3cd2c4a0d547876baa6f38cabf625";
+  private static final String FBL2_HASH = "df6b721c8b4d3b6eb44c861d4415007e5a35fc95";
+  private static final String FBR_HASH = "8a3c4b262d721acd49a4bf97d5213199c86fa2b9";
+  private static final String FBR2_HASH = "cc2751449a350f668590264ed76692694a80308a";
+  private static final String MSR_HASH = "9b8f518b086098de3d77736f9458a3d2f6f95a37";
+
+  private static final HashSet<String> validAppSignatureHashes = buildAppSignatureHashes();
+
+  private static HashSet<String> buildAppSignatureHashes() {
+    HashSet<String> set = new HashSet<String>();
+    set.add(FBR_HASH);
+    set.add(FBR2_HASH);
+    set.add(FBI_HASH);
+    set.add(FBL_HASH);
+    set.add(FBL2_HASH);
+    set.add(MSR_HASH);
+    return set;
+  }
+
+  public static boolean validateSignature(Context context, String packageName) {
+    String brand = Build.BRAND;
+    int applicationFlags = context.getApplicationInfo().flags;
+    if (brand.startsWith("generic") &&
+        (applicationFlags & ApplicationInfo.FLAG_DEBUGGABLE) != 0) {
+      // We are debugging on an emulator, don't validate package signature.
+      return true;
+    }
+
+    PackageInfo packageInfo;
+    try {
+      packageInfo = context.getPackageManager().getPackageInfo(
+          packageName,
+          PackageManager.GET_SIGNATURES);
+    } catch (PackageManager.NameNotFoundException e) {
+      return false;
+    }
+
+    // just in case
+    if (packageInfo.signatures == null || packageInfo.signatures.length <= 0) {
+      return false;
+    }
+
+    for (Signature signature : packageInfo.signatures) {
+      String hashedSignature = Utility.sha1hash(signature.toByteArray());
+      if (!validAppSignatureHashes.contains(hashedSignature)) {
+        return false;
+      }
+    }
+
+    return true;
+  }
+}
diff --git a/facebook-core/src/main/java/com/facebook/internal/FetchedAppSettings.java b/facebook-core/src/main/java/com/facebook/internal/FetchedAppSettings.java
new file mode 100644
index 000000000..42ca0ee36
--- /dev/null
+++ b/facebook-core/src/main/java/com/facebook/internal/FetchedAppSettings.java
@@ -0,0 +1,244 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.internal;
+
+import android.net.Uri;
+
+import org.json.JSONArray;
+import org.json.JSONObject;
+
+import java.util.EnumSet;
+import java.util.Map;
+
+/**
+ * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
+ * Android. Use of any of the classes in this package is unsupported, and they may be modified or
+ * removed without warning at any time.
+ */
+public final class FetchedAppSettings {
+    private boolean supportsImplicitLogging;
+    private String nuxContent;
+    private boolean nuxEnabled;
+    private boolean customTabsEnabled;
+    private int sessionTimeoutInSeconds;
+    private EnumSet<SmartLoginOption> smartLoginOptions;
+    private Map<String, Map<String, DialogFeatureConfig>> dialogConfigMap;
+    private boolean automaticLoggingEnabled;
+    private FacebookRequestErrorClassification errorClassification;
+    private String smartLoginBookmarkIconURL;
+    private String smartLoginMenuIconURL;
+    private boolean IAPAutomaticLoggingEnabled;
+
+    public FetchedAppSettings(boolean supportsImplicitLogging,
+                               String nuxContent,
+                               boolean nuxEnabled,
+                               boolean customTabsEnabled,
+                               int sessionTimeoutInSeconds,
+                               EnumSet<SmartLoginOption> smartLoginOptions,
+                               Map<String, Map<String, DialogFeatureConfig>> dialogConfigMap,
+                               boolean automaticLoggingEnabled,
+                               FacebookRequestErrorClassification errorClassification,
+                               String smartLoginBookmarkIconURL,
+                               String smartLoginMenuIconURL,
+                               boolean IAPAutomaticLoggingEnabled
+    ) {
+        this.supportsImplicitLogging = supportsImplicitLogging;
+        this.nuxContent = nuxContent;
+        this.nuxEnabled = nuxEnabled;
+        this.customTabsEnabled = customTabsEnabled;
+        this.dialogConfigMap = dialogConfigMap;
+        this.errorClassification = errorClassification;
+        this.sessionTimeoutInSeconds = sessionTimeoutInSeconds;
+        this.automaticLoggingEnabled = automaticLoggingEnabled;
+        this.smartLoginOptions = smartLoginOptions;
+        this.smartLoginBookmarkIconURL = smartLoginBookmarkIconURL;
+        this.smartLoginMenuIconURL = smartLoginMenuIconURL;
+        this.IAPAutomaticLoggingEnabled = IAPAutomaticLoggingEnabled;
+    }
+
+    public boolean supportsImplicitLogging() {
+        return supportsImplicitLogging;
+    }
+
+    public String getNuxContent() {
+        return nuxContent;
+    }
+
+    public boolean getNuxEnabled() {
+        return nuxEnabled;
+    }
+
+    public boolean getCustomTabsEnabled() {
+        return customTabsEnabled;
+    }
+
+    public int getSessionTimeoutInSeconds() {
+        return sessionTimeoutInSeconds;
+    }
+
+    public boolean getAutomaticLoggingEnabled() {
+        return automaticLoggingEnabled;
+    }
+
+    public EnumSet<SmartLoginOption> getSmartLoginOptions() {
+        return smartLoginOptions;
+    }
+
+    public Map<String, Map<String, DialogFeatureConfig>> getDialogConfigurations() {
+        return dialogConfigMap;
+    }
+
+    public FacebookRequestErrorClassification getErrorClassification() {
+        return errorClassification;
+    }
+
+    public String getSmartLoginBookmarkIconURL() { return smartLoginBookmarkIconURL; }
+    public String getSmartLoginMenuIconURL() { return smartLoginMenuIconURL; }
+
+    public boolean getIAPAutomaticLoggingEnabled() {
+        return IAPAutomaticLoggingEnabled;
+    }
+
+    public static class DialogFeatureConfig {
+        private static final String DIALOG_CONFIG_DIALOG_NAME_FEATURE_NAME_SEPARATOR = "\\|";
+        private static final String DIALOG_CONFIG_NAME_KEY = "name";
+        private static final String DIALOG_CONFIG_VERSIONS_KEY = "versions";
+        private static final String DIALOG_CONFIG_URL_KEY = "url";
+
+        public static DialogFeatureConfig parseDialogConfig(JSONObject dialogConfigJSON) {
+            String dialogNameWithFeature = dialogConfigJSON.optString(DIALOG_CONFIG_NAME_KEY);
+            if (Utility.isNullOrEmpty(dialogNameWithFeature)) {
+                return null;
+            }
+
+            String[] components = dialogNameWithFeature.split(
+                    DIALOG_CONFIG_DIALOG_NAME_FEATURE_NAME_SEPARATOR);
+            if (components.length != 2) {
+                // We expect the format to be dialogName|FeatureName, where both components are
+                // non-empty.
+                return null;
+            }
+
+            String dialogName = components[0];
+            String featureName = components[1];
+            if (Utility.isNullOrEmpty(dialogName) || Utility.isNullOrEmpty(featureName)) {
+                return null;
+            }
+
+            String urlString = dialogConfigJSON.optString(DIALOG_CONFIG_URL_KEY);
+            Uri fallbackUri = null;
+            if (!Utility.isNullOrEmpty(urlString)) {
+                fallbackUri = Uri.parse(urlString);
+            }
+
+            JSONArray versionsJSON = dialogConfigJSON.optJSONArray(DIALOG_CONFIG_VERSIONS_KEY);
+
+            int[] featureVersionSpec = parseVersionSpec(versionsJSON);
+
+            return new DialogFeatureConfig(
+                    dialogName, featureName, fallbackUri, featureVersionSpec);
+        }
+
+        private static int[] parseVersionSpec(JSONArray versionsJSON) {
+            // Null signifies no overrides to the min-version as specified by the SDK.
+            // An empty array would basically turn off the dialog (i.e no supported versions), so
+            // DON'T default to that.
+            int[] versionSpec = null;
+            if (versionsJSON != null) {
+                int numVersions = versionsJSON.length();
+                versionSpec = new int[numVersions];
+                for (int i = 0; i < numVersions; i++) {
+                    // See if the version was stored directly as an Integer
+                    int version = versionsJSON.optInt(i, NativeProtocol.NO_PROTOCOL_AVAILABLE);
+                    if (version == NativeProtocol.NO_PROTOCOL_AVAILABLE) {
+                        // If not, then see if it was stored as a string that can be parsed out.
+                        // If even that fails, then we will leave it as NO_PROTOCOL_AVAILABLE
+                        String versionString = versionsJSON.optString(i);
+                        if (!Utility.isNullOrEmpty(versionString)) {
+                            try {
+                                version = Integer.parseInt(versionString);
+                            } catch (NumberFormatException nfe) {
+                                Utility.logd(Utility.LOG_TAG, nfe);
+                                version = NativeProtocol.NO_PROTOCOL_AVAILABLE;
+                            }
+                        }
+                    }
+
+                    versionSpec[i] = version;
+                }
+            }
+
+            return versionSpec;
+        }
+
+        private String dialogName;
+        private String featureName;
+        private Uri fallbackUrl;
+        private int[] featureVersionSpec;
+
+        private DialogFeatureConfig(
+                String dialogName,
+                String featureName,
+                Uri fallbackUrl,
+                int[] featureVersionSpec) {
+            this.dialogName = dialogName;
+            this.featureName = featureName;
+            this.fallbackUrl = fallbackUrl;
+            this.featureVersionSpec = featureVersionSpec;
+        }
+
+        public String getDialogName() {
+            return dialogName;
+        }
+
+        public String getFeatureName() {
+            return featureName;
+        }
+
+        public Uri getFallbackUrl() {
+            return fallbackUrl;
+        }
+
+        public int[] getVersionSpec() {
+            return featureVersionSpec;
+        }
+    }
+
+    public static DialogFeatureConfig getDialogFeatureConfig(
+            String applicationId,
+            String actionName,
+            String featureName) {
+        if (Utility.isNullOrEmpty(actionName) || Utility.isNullOrEmpty(featureName)) {
+            return null;
+        }
+
+        FetchedAppSettings settings = FetchedAppSettingsManager.
+                getAppSettingsWithoutQuery(applicationId);
+        if (settings != null) {
+            Map<String, DialogFeatureConfig> featureMap =
+                    settings.getDialogConfigurations().get(actionName);
+            if (featureMap != null) {
+                return featureMap.get(featureName);
+            }
+        }
+        return null;
+    }
+}
diff --git a/facebook-core/src/main/java/com/facebook/internal/FetchedAppSettingsManager.java b/facebook-core/src/main/java/com/facebook/internal/FetchedAppSettingsManager.java
new file mode 100644
index 000000000..9494d9599
--- /dev/null
+++ b/facebook-core/src/main/java/com/facebook/internal/FetchedAppSettingsManager.java
@@ -0,0 +1,269 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.internal;
+
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.content.ServiceConnection;
+import android.content.SharedPreferences;
+import android.os.Bundle;
+import android.os.IBinder;
+import android.support.annotation.Nullable;
+import android.text.TextUtils;
+
+import com.facebook.FacebookSdk;
+import com.facebook.GraphRequest;
+import com.facebook.appevents.internal.AutomaticAnalyticsLogger;
+import com.facebook.appevents.internal.Constants;
+import com.facebook.appevents.internal.InAppPurchaseEventManager;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.HashMap;
+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.atomic.AtomicBoolean;
+
+/**
+ * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
+ * Android. Use of any of the classes in this package is unsupported, and they may be modified or
+ * removed without warning at any time.
+ */
+public final class FetchedAppSettingsManager {
+    private static final String TAG = FetchedAppSettingsManager.class.getCanonicalName();
+    private static final String APP_SETTINGS_PREFS_STORE =
+            "com.facebook.internal.preferences.APP_SETTINGS";
+    private static final String APP_SETTINGS_PREFS_KEY_FORMAT =
+            "com.facebook.internal.APP_SETTINGS.%s";
+    private static final String APP_SETTING_SUPPORTS_IMPLICIT_SDK_LOGGING =
+            "supports_implicit_sdk_logging";
+    private static final String APP_SETTING_NUX_CONTENT = "gdpv4_nux_content";
+    private static final String APP_SETTING_NUX_ENABLED = "gdpv4_nux_enabled";
+    private static final String APP_SETTING_CUSTOM_TABS_ENABLED =
+            "gdpv4_chrome_custom_tabs_enabled";
+    private static final String APP_SETTING_DIALOG_CONFIGS = "android_dialog_configs";
+    private static final String APP_SETTING_ANDROID_SDK_ERROR_CATEGORIES =
+            "android_sdk_error_categories";
+    private static final String APP_SETTING_APP_EVENTS_SESSION_TIMEOUT =
+            "app_events_session_timeout";
+    private static final String APP_SETTING_APP_EVENTS_FEATURE_BITMASK =
+            "app_events_feature_bitmask";
+    private static final int AUTOMATIC_LOGGING_ENABLED_BITMASK_FIELD = 1 << 3;
+    // The second bit of app_events_feature_bitmask is used for iOS in-app purchase automatic
+    // logging, while the fourth bit is used for Android in-app purchase automatic logging.
+    private static final int IAP_AUTOMATIC_LOGGING_ENABLED_BITMASK_FIELD = 1 << 4;
+    private static final String APP_SETTING_SMART_LOGIN_OPTIONS =
+            "seamless_login";
+    private static final String SMART_LOGIN_BOOKMARK_ICON_URL = "smart_login_bookmark_icon_url";
+    private static final String SMART_LOGIN_MENU_ICON_URL = "smart_login_menu_icon_url";
+
+    private static final String[] APP_SETTING_FIELDS = new String[]{
+            APP_SETTING_SUPPORTS_IMPLICIT_SDK_LOGGING,
+            APP_SETTING_NUX_CONTENT,
+            APP_SETTING_NUX_ENABLED,
+            APP_SETTING_CUSTOM_TABS_ENABLED,
+            APP_SETTING_DIALOG_CONFIGS,
+            APP_SETTING_ANDROID_SDK_ERROR_CATEGORIES,
+            APP_SETTING_APP_EVENTS_SESSION_TIMEOUT,
+            APP_SETTING_APP_EVENTS_FEATURE_BITMASK,
+            APP_SETTING_SMART_LOGIN_OPTIONS,
+            SMART_LOGIN_BOOKMARK_ICON_URL,
+            SMART_LOGIN_MENU_ICON_URL,
+    };
+    private static final String APPLICATION_FIELDS = "fields";
+
+    private static Map<String, FetchedAppSettings> fetchedAppSettings =
+            new ConcurrentHashMap<String, FetchedAppSettings>();
+    private static AtomicBoolean loadingSettings = new AtomicBoolean(false);
+
+    public static void loadAppSettingsAsync() {
+        final Context context = FacebookSdk.getApplicationContext();
+        final String applicationId = FacebookSdk.getApplicationId();
+        boolean canStartLoading = loadingSettings.compareAndSet(false, true);
+        if (Utility.isNullOrEmpty(applicationId) ||
+                fetchedAppSettings.containsKey(applicationId) ||
+                !canStartLoading) {
+            return;
+        }
+
+        final String settingsKey = String.format(APP_SETTINGS_PREFS_KEY_FORMAT, applicationId);
+
+        FacebookSdk.getExecutor().execute(new Runnable() {
+            @Override
+            public void run() {
+                // See if we had a cached copy and use that immediately.
+                SharedPreferences sharedPrefs = context.getSharedPreferences(
+                        APP_SETTINGS_PREFS_STORE,
+                        Context.MODE_PRIVATE);
+                String settingsJSONString = sharedPrefs.getString(settingsKey, null);
+                if (!Utility.isNullOrEmpty(settingsJSONString)) {
+                    JSONObject settingsJSON = null;
+                    try {
+                        settingsJSON = new JSONObject(settingsJSONString);
+                    } catch (JSONException je) {
+                        Utility.logd(Utility.LOG_TAG, je);
+                    }
+                    if (settingsJSON != null) {
+                        parseAppSettingsFromJSON(applicationId, settingsJSON);
+                    }
+                }
+
+                JSONObject resultJSON = getAppSettingsQueryResponse(applicationId);
+                if (resultJSON != null) {
+                    parseAppSettingsFromJSON(applicationId, resultJSON);
+
+                    sharedPrefs.edit()
+                            .putString(settingsKey, resultJSON.toString())
+                            .apply();
+                }
+
+                // Start log activate & deactivate app events, in case autoLogAppEvents flag is set
+                AutomaticAnalyticsLogger.logActivateAppEvent();
+
+                // Automatically log In App Purchase events
+                startInAppPurchaseAutoLogging(context);
+
+                loadingSettings.set(false);
+            }
+        });
+    }
+
+    // This call only gets the app settings if they're already fetched
+    public static FetchedAppSettings getAppSettingsWithoutQuery(final String applicationId) {
+        return applicationId != null ? fetchedAppSettings.get(applicationId) : null;
+    }
+
+    // Note that this method makes a synchronous Graph API call, so should not be called from the
+    // main thread.
+    public static FetchedAppSettings queryAppSettings(
+            final String applicationId,
+            final boolean forceRequery) {
+        // Cache the last app checked results.
+        if (!forceRequery && fetchedAppSettings.containsKey(applicationId)) {
+            return fetchedAppSettings.get(applicationId);
+        }
+
+        JSONObject response = getAppSettingsQueryResponse(applicationId);
+        if (response == null) {
+            return null;
+        }
+
+        return parseAppSettingsFromJSON(applicationId, response);
+    }
+
+    private static FetchedAppSettings parseAppSettingsFromJSON(
+            String applicationId,
+            JSONObject settingsJSON) {
+        JSONArray errorClassificationJSON =
+                settingsJSON.optJSONArray(APP_SETTING_ANDROID_SDK_ERROR_CATEGORIES);
+        FacebookRequestErrorClassification errorClassification =
+                errorClassificationJSON == null
+                        ? FacebookRequestErrorClassification.getDefaultErrorClassification()
+                        : FacebookRequestErrorClassification.createFromJSON(
+                        errorClassificationJSON
+                );
+        int featureBitmask = settingsJSON.optInt(APP_SETTING_APP_EVENTS_FEATURE_BITMASK,0);
+        boolean automaticLoggingEnabled =
+                (featureBitmask & AUTOMATIC_LOGGING_ENABLED_BITMASK_FIELD) != 0;
+        boolean inAppPurchaseAutomaticLoggingEnabled =
+                (featureBitmask & IAP_AUTOMATIC_LOGGING_ENABLED_BITMASK_FIELD) != 0;
+        FetchedAppSettings result = new FetchedAppSettings(
+                settingsJSON.optBoolean(APP_SETTING_SUPPORTS_IMPLICIT_SDK_LOGGING, false),
+                settingsJSON.optString(APP_SETTING_NUX_CONTENT, ""),
+                settingsJSON.optBoolean(APP_SETTING_NUX_ENABLED, false),
+                settingsJSON.optBoolean(APP_SETTING_CUSTOM_TABS_ENABLED, false),
+                settingsJSON.optInt(
+                        APP_SETTING_APP_EVENTS_SESSION_TIMEOUT,
+                        Constants.getDefaultAppEventsSessionTimeoutInSeconds()),
+                SmartLoginOption.parseOptions(settingsJSON.optLong(APP_SETTING_SMART_LOGIN_OPTIONS)),
+                parseDialogConfigurations(settingsJSON.optJSONObject(APP_SETTING_DIALOG_CONFIGS)),
+                automaticLoggingEnabled,
+                errorClassification,
+                settingsJSON.optString(SMART_LOGIN_BOOKMARK_ICON_URL),
+                settingsJSON.optString(SMART_LOGIN_MENU_ICON_URL),
+                inAppPurchaseAutomaticLoggingEnabled
+        );
+
+        fetchedAppSettings.put(applicationId, result);
+
+        return result;
+    }
+
+    // Note that this method makes a synchronous Graph API call, so should not be called from the
+    // main thread.
+    private static JSONObject getAppSettingsQueryResponse(String applicationId) {
+        Bundle appSettingsParams = new Bundle();
+        appSettingsParams.putString(APPLICATION_FIELDS, TextUtils.join(",", APP_SETTING_FIELDS));
+
+        GraphRequest request = GraphRequest.newGraphPathRequest(null, applicationId, null);
+        request.setSkipClientToken(true);
+        request.setParameters(appSettingsParams);
+
+        return request.executeAndWait().getJSONObject();
+    }
+
+    private static Map<String, Map<String, FetchedAppSettings.DialogFeatureConfig>> parseDialogConfigurations(
+            JSONObject dialogConfigResponse) {
+        HashMap<String, Map<String, FetchedAppSettings.DialogFeatureConfig>> dialogConfigMap
+                = new HashMap<String, Map<String, FetchedAppSettings.DialogFeatureConfig>>();
+
+        if (dialogConfigResponse != null) {
+            JSONArray dialogConfigData = dialogConfigResponse.optJSONArray("data");
+            if (dialogConfigData != null) {
+                for (int i = 0; i < dialogConfigData.length(); i++) {
+                    FetchedAppSettings.DialogFeatureConfig dialogConfig =
+                            FetchedAppSettings.DialogFeatureConfig.parseDialogConfig(
+                            dialogConfigData.optJSONObject(i));
+                    if (dialogConfig == null) {
+                        continue;
+                    }
+
+                    String dialogName = dialogConfig.getDialogName();
+                    Map<String, FetchedAppSettings.DialogFeatureConfig> featureMap =
+                            dialogConfigMap.get(dialogName);
+                    if (featureMap == null) {
+                        featureMap = new HashMap<String, FetchedAppSettings.DialogFeatureConfig>();
+                        dialogConfigMap.put(dialogName, featureMap);
+                    }
+                    featureMap.put(dialogConfig.getFeatureName(), dialogConfig);
+                }
+            }
+        }
+
+        return dialogConfigMap;
+    }
+
+    private static void startInAppPurchaseAutoLogging(final Context context) {
+        // Register callback to do auto logging.
+        CallbackManagerImpl.registerStaticCallback(
+                CallbackManagerImpl.RequestCodeOffset.InAppPurchase.toRequestCode(),
+                new CallbackManagerImpl.Callback() {
+                    @Override
+                    public boolean onActivityResult(int resultCode, Intent data) {
+                        return AutomaticAnalyticsLogger.logInAppPurchaseEvent(
+                                context, resultCode, data);
+                    }
+                });
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/internal/FileLruCache.java b/facebook-core/src/main/java/com/facebook/internal/FileLruCache.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/internal/FileLruCache.java
rename to facebook-core/src/main/java/com/facebook/internal/FileLruCache.java
index 72e73d467..fcbc1c501 100644
--- a/facebook/src/main/java/com/facebook/internal/FileLruCache.java
+++ b/facebook-core/src/main/java/com/facebook/internal/FileLruCache.java
@@ -127,7 +127,7 @@ public InputStream get(String key) throws IOException {
     public InputStream get(String key, String contentTag) throws IOException {
         File file = new File(this.directory, Utility.md5hash(key));
 
-        FileInputStream input = null;
+        FileInputStream input;
         try {
             input = new FileInputStream(file);
         } catch (IOException e) {
@@ -184,7 +184,7 @@ public OutputStream openPutStream(final String key, String contentTag) throws IO
             throw new IOException("Could not create file at " + buffer.getAbsolutePath());
         }
 
-        FileOutputStream file = null;
+        FileOutputStream file;
         try {
             file = new FileOutputStream(buffer);
         } catch (FileNotFoundException e) {
@@ -448,7 +448,7 @@ static JSONObject readHeader(InputStream stream) throws IOException {
             }
 
             String headerString = new String(headerBytes);
-            JSONObject header = null;
+            JSONObject header;
             JSONTokener tokener = new JSONTokener(headerString);
             try {
                 Object parsed = tokener.nextValue();
diff --git a/facebook/src/main/java/com/facebook/internal/ImageDownloader.java b/facebook-core/src/main/java/com/facebook/internal/ImageDownloader.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/internal/ImageDownloader.java
rename to facebook-core/src/main/java/com/facebook/internal/ImageDownloader.java
index 9309f2beb..33ded785f 100644
--- a/facebook/src/main/java/com/facebook/internal/ImageDownloader.java
+++ b/facebook-core/src/main/java/com/facebook/internal/ImageDownloader.java
@@ -27,14 +27,11 @@
 import android.os.Handler;
 import android.os.Looper;
 import com.facebook.FacebookException;
-import com.facebook.R;
 
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
 import java.net.HttpURLConnection;
-import java.net.URI;
-import java.net.URISyntaxException;
 import java.net.URL;
 import java.util.HashMap;
 import java.util.Map;
@@ -276,8 +273,7 @@ private static void download(RequestKey key, Context context) {
                         }
                         Utility.closeQuietly(reader);
                     } else {
-                        errorMessageBuilder.append(
-                            context.getString(R.string.com_facebook_image_download_unknown_error));
+                        errorMessageBuilder.append("Unexpected error while downloading an image.");
                     }
                     error = new FacebookException(errorMessageBuilder.toString());
                     break;
diff --git a/facebook/src/main/java/com/facebook/internal/ImageRequest.java b/facebook-core/src/main/java/com/facebook/internal/ImageRequest.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/internal/ImageRequest.java
rename to facebook-core/src/main/java/com/facebook/internal/ImageRequest.java
index f0dbfbf3e..acbe35ebb 100644
--- a/facebook/src/main/java/com/facebook/internal/ImageRequest.java
+++ b/facebook-core/src/main/java/com/facebook/internal/ImageRequest.java
@@ -23,8 +23,6 @@
 import android.content.Context;
 import android.net.Uri;
 
-import java.net.URI;
-import java.net.URISyntaxException;
 import java.util.Locale;
 
 /**
diff --git a/facebook/src/main/java/com/facebook/internal/ImageResponse.java b/facebook-core/src/main/java/com/facebook/internal/ImageResponse.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/internal/ImageResponse.java
rename to facebook-core/src/main/java/com/facebook/internal/ImageResponse.java
diff --git a/facebook/src/main/java/com/facebook/internal/ImageResponseCache.java b/facebook-core/src/main/java/com/facebook/internal/ImageResponseCache.java
similarity index 97%
rename from facebook/src/main/java/com/facebook/internal/ImageResponseCache.java
rename to facebook-core/src/main/java/com/facebook/internal/ImageResponseCache.java
index 847c441d4..5850a0530 100644
--- a/facebook/src/main/java/com/facebook/internal/ImageResponseCache.java
+++ b/facebook-core/src/main/java/com/facebook/internal/ImageResponseCache.java
@@ -29,9 +29,6 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.net.HttpURLConnection;
-import java.net.URI;
-import java.net.URISyntaxException;
-import java.net.URL;
 
 /**
  * com.facebook.internal is solely for the use of other packages within the
@@ -41,7 +38,7 @@
 class ImageResponseCache {
     static final String TAG = ImageResponseCache.class.getSimpleName();
 
-    private volatile static FileLruCache imageCache;
+    private static FileLruCache imageCache;
 
     synchronized static FileLruCache getCache(Context context) throws IOException{
         if (imageCache == null) {
diff --git a/facebook/src/main/java/com/facebook/internal/InternalSettings.java b/facebook-core/src/main/java/com/facebook/internal/InternalSettings.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/internal/InternalSettings.java
rename to facebook-core/src/main/java/com/facebook/internal/InternalSettings.java
diff --git a/facebook/src/main/java/com/facebook/internal/LockOnGetVariable.java b/facebook-core/src/main/java/com/facebook/internal/LockOnGetVariable.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/internal/LockOnGetVariable.java
rename to facebook-core/src/main/java/com/facebook/internal/LockOnGetVariable.java
diff --git a/facebook/src/main/java/com/facebook/internal/Logger.java b/facebook-core/src/main/java/com/facebook/internal/Logger.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/internal/Logger.java
rename to facebook-core/src/main/java/com/facebook/internal/Logger.java
diff --git a/facebook/src/main/java/com/facebook/internal/NativeAppCallAttachmentStore.java b/facebook-core/src/main/java/com/facebook/internal/NativeAppCallAttachmentStore.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/internal/NativeAppCallAttachmentStore.java
rename to facebook-core/src/main/java/com/facebook/internal/NativeAppCallAttachmentStore.java
index 18814f355..e3a44572f 100644
--- a/facebook/src/main/java/com/facebook/internal/NativeAppCallAttachmentStore.java
+++ b/facebook-core/src/main/java/com/facebook/internal/NativeAppCallAttachmentStore.java
@@ -81,7 +81,7 @@ private static void processAttachmentFile(
             File outputFile) throws IOException {
         FileOutputStream outputStream = new FileOutputStream(outputFile);
         try {
-            InputStream inputStream = null;
+            InputStream inputStream;
             if (!isContentUri) {
                 inputStream = new FileInputStream(imageUri.getPath());
             } else {
diff --git a/facebook/src/main/java/com/facebook/internal/NativeProtocol.java b/facebook-core/src/main/java/com/facebook/internal/NativeProtocol.java
similarity index 85%
rename from facebook/src/main/java/com/facebook/internal/NativeProtocol.java
rename to facebook-core/src/main/java/com/facebook/internal/NativeProtocol.java
index 610acea34..338e68676 100644
--- a/facebook/src/main/java/com/facebook/internal/NativeProtocol.java
+++ b/facebook-core/src/main/java/com/facebook/internal/NativeProtocol.java
@@ -23,11 +23,13 @@
 import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
-import android.content.pm.*;
+import android.content.pm.PackageManager;
+import android.content.pm.ProviderInfo;
+import android.content.pm.ResolveInfo;
 import android.database.Cursor;
 import android.net.Uri;
-import android.os.Build;
 import android.os.Bundle;
+import android.support.annotation.Nullable;
 import android.text.TextUtils;
 import android.util.Log;
 
@@ -36,12 +38,16 @@
 import com.facebook.FacebookSdk;
 import com.facebook.login.DefaultAudience;
 
-import java.util.*;
-import java.util.concurrent.Callable;
-import java.util.concurrent.Executors;
-import java.util.concurrent.FutureTask;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Map;
+import java.util.TreeSet;
+import java.util.UUID;
 import java.util.concurrent.atomic.AtomicBoolean;
-import java.util.concurrent.atomic.AtomicInteger;
 
 /**
  * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
@@ -62,6 +68,8 @@
     public static final String FACEBOOK_PROXY_AUTH_APP_ID_KEY = "client_id";
     public static final String FACEBOOK_PROXY_AUTH_E2E_KEY = "e2e";
 
+    public static final String FACEBOOK_SDK_VERSION_KEY = "facebook_sdk_version";
+
     // ---------------------------------------------------------------------------------------------
     // Native Protocol updated 2012-11
 
@@ -80,6 +88,9 @@
     public static final int PROTOCOL_VERSION_20141107 = 20141107; // Bucketed Result Intents
     public static final int PROTOCOL_VERSION_20141218 = 20141218;
     public static final int PROTOCOL_VERSION_20160327 = 20160327;
+    public static final int PROTOCOL_VERSION_20170213 = 20170213;
+    public static final int PROTOCOL_VERSION_20170411 = 20170411; // express login
+    public static final int PROTOCOL_VERSION_20170417 = 20170417;
 
     public static final String EXTRA_PROTOCOL_VERSION =
             "com.facebook.platform.protocol.PROTOCOL_VERSION";
@@ -120,6 +131,10 @@
     public static final int MESSAGE_GET_INSTALL_DATA_REPLY      = 0x10005;
     public static final int MESSAGE_GET_LIKE_STATUS_REQUEST     = 0x10006;
     public static final int MESSAGE_GET_LIKE_STATUS_REPLY       = 0x10007;
+    public static final int MESSAGE_GET_AK_SEAMLESS_TOKEN_REQUEST = 0x10008;
+    public static final int MESSAGE_GET_AK_SEAMLESS_TOKEN_REPLY   = 0x10009;
+    public static final int MESSAGE_GET_LOGIN_STATUS_REQUEST   = 0x1000A;
+    public static final int MESSAGE_GET_LOGIN_STATUS_REPLY   = 0x1000B;
 
     // MESSAGE_ERROR_REPLY data keys:
     // See STATUS_*
@@ -161,6 +176,8 @@
     // The value of ACTION_APPINVITE_DIALOG is different since that is what is on the server.
     public static final String ACTION_APPINVITE_DIALOG =
             "com.facebook.platform.action.request.APPINVITES_DIALOG";
+    public static final String ACTION_CAMERA_EFFECT =
+            "com.facebook.platform.action.request.CAMERA_EFFECT";
 
     // Extras supported for ACTION_LOGIN_DIALOG:
     public static final String EXTRA_PERMISSIONS = "com.facebook.platform.extra.PERMISSIONS";
@@ -168,6 +185,11 @@
     public static final String EXTRA_APPLICATION_NAME =
             "com.facebook.platform.extra.APPLICATION_NAME";
     public static final String EXTRA_USER_ID = "com.facebook.platform.extra.USER_ID";
+    public static final String EXTRA_LOGGER_REF = "com.facebook.platform.extra.LOGGER_REF";
+    public static final String EXTRA_TOAST_DURATION_MS =
+            "com.facebook.platform.extra.EXTRA_TOAST_DURATION_MS";
+    public static final String EXTRA_GRAPH_API_VERSION =
+            "com.facebook.platform.extra.GRAPH_API_VERSION";
 
     // Extras returned by setResult() for ACTION_LOGIN_DIALOG
     public static final String EXTRA_ACCESS_TOKEN = "com.facebook.platform.extra.ACCESS_TOKEN";
@@ -176,9 +198,22 @@
     // EXTRA_PERMISSIONS
 
     public static final String RESULT_ARGS_ACCESS_TOKEN = "access_token";
+    public static final String RESULT_ARGS_SIGNED_REQUEST = "signed request";
     public static final String RESULT_ARGS_EXPIRES_SECONDS_SINCE_EPOCH =
             "expires_seconds_since_epoch";
     public static final String RESULT_ARGS_PERMISSIONS = "permissions";
+    public static final String EXTRA_ARGS_PROFILE = "com.facebook.platform.extra.PROFILE";
+    public static final String EXTRA_ARGS_PROFILE_NAME = "com.facebook.platform.extra.PROFILE_NAME";
+    public static final String EXTRA_ARGS_PROFILE_LAST_NAME =
+            "com.facebook.platform.extra.PROFILE_LAST_NAME";
+    public static final String EXTRA_ARGS_PROFILE_FIRST_NAME =
+            "com.facebook.platform.extra.PROFILE_FIRST_NAME";
+    public static final String EXTRA_ARGS_PROFILE_MIDDLE_NAME =
+            "com.facebook.platform.extra.PROFILE_MIDDLE_NAME";
+    public static final String EXTRA_ARGS_PROFILE_LINK =
+            "com.facebook.platform.extra.PROFILE_LINK";
+    public static final String EXTRA_ARGS_PROFILE_USER_ID =
+            "com.facebook.platform.extra.PROFILE_USER_ID";
 
     // OG objects will have this key to set to true if they should be created as part of OG Action
     // publish
@@ -232,54 +267,8 @@
         abstract protected String getPackage();
         abstract protected String getLoginActivity();
 
-        private static final String FBI_HASH = "a4b7452e2ed8f5f191058ca7bbfd26b0d3214bfc";
-        private static final String FBL_HASH = "5e8f16062ea3cd2c4a0d547876baa6f38cabf625";
-        private static final String FBR_HASH = "8a3c4b262d721acd49a4bf97d5213199c86fa2b9";
-
-        private static final HashSet<String> validAppSignatureHashes = buildAppSignatureHashes();
-
         private TreeSet<Integer> availableVersions;
 
-        private static HashSet<String> buildAppSignatureHashes() {
-            HashSet<String> set = new HashSet<String>();
-            set.add(FBR_HASH);
-            set.add(FBI_HASH);
-            set.add(FBL_HASH);
-            return set;
-        }
-
-        public boolean validateSignature(Context context, String packageName) {
-            String brand = Build.BRAND;
-            int applicationFlags = context.getApplicationInfo().flags;
-            if (brand.startsWith("generic") &&
-                    (applicationFlags & ApplicationInfo.FLAG_DEBUGGABLE) != 0) {
-                // We are debugging on an emulator, don't validate package signature.
-                return true;
-            }
-
-            PackageInfo packageInfo = null;
-            try {
-                packageInfo = context.getPackageManager().getPackageInfo(packageName,
-                        PackageManager.GET_SIGNATURES);
-            } catch (PackageManager.NameNotFoundException e) {
-                return false;
-            }
-
-            // just in case
-            if (packageInfo.signatures == null || packageInfo.signatures.length <= 0) {
-                return false;
-            }
-
-            for (Signature signature : packageInfo.signatures) {
-                String hashedSignature = Utility.sha1hash(signature.toByteArray());
-                if (!validAppSignatureHashes.contains(hashedSignature)) {
-                    return false;
-                }
-            }
-
-            return true;
-        }
-
         public TreeSet<Integer> getAvailableVersions() {
             if (availableVersions == null) {
                 fetchAvailableVersions(false);
@@ -352,9 +341,26 @@ protected String getLoginActivity() {
         }
     }
 
-    private static List<NativeAppInfo> facebookAppInfoList = buildFacebookAppList();
-    private static Map<String, List<NativeAppInfo>> actionToAppInfoMap = buildActionToAppInfoMap();
-    private static AtomicBoolean protocolVersionsAsyncUpdating = new AtomicBoolean(false);
+    private static class EffectTestAppInfo extends NativeAppInfo {
+        static final String EFFECT_TEST_APP_PACKAGE = "com.facebook.arstudio.player.android";
+
+        @Override
+        protected String getPackage() {
+            return EFFECT_TEST_APP_PACKAGE;
+        }
+
+        @Override
+        protected String getLoginActivity() {
+            return null;
+        }
+    }
+
+    private static final List<NativeAppInfo> facebookAppInfoList = buildFacebookAppList();
+    private static final List<NativeAppInfo> effectCameraAppInfoList =
+            buildEffectCameraAppInfoList();
+    private static final Map<String, List<NativeAppInfo>> actionToAppInfoMap =
+            buildActionToAppInfoMap();
+    private static final AtomicBoolean protocolVersionsAsyncUpdating = new AtomicBoolean(false);
 
     private static List<NativeAppInfo> buildFacebookAppList() {
         List<NativeAppInfo> list = new ArrayList<NativeAppInfo>();
@@ -367,6 +373,15 @@ protected String getLoginActivity() {
         return list;
     }
 
+    private static List<NativeAppInfo> buildEffectCameraAppInfoList() {
+        List<NativeAppInfo> list = new ArrayList<>(buildFacebookAppList());
+
+        // Add the effect test app in first position to make it the default choice.
+        list.add(0, new EffectTestAppInfo());
+
+        return list;
+    }
+
     private static Map<String, List<NativeAppInfo>> buildActionToAppInfoMap() {
         Map<String, List<NativeAppInfo>> map = new HashMap<String, List<NativeAppInfo>>();
 
@@ -380,6 +395,7 @@ protected String getLoginActivity() {
         map.put(ACTION_APPINVITE_DIALOG, facebookAppInfoList);
         map.put(ACTION_MESSAGE_DIALOG, messengerAppInfoList);
         map.put(ACTION_OGMESSAGEPUBLISH_DIALOG, messengerAppInfoList);
+        map.put(ACTION_CAMERA_EFFECT, effectCameraAppInfoList);
 
         return map;
     }
@@ -394,7 +410,9 @@ static Intent validateActivityIntent(Context context, Intent intent, NativeAppIn
             return null;
         }
 
-        if (!appInfo.validateSignature(context, resolveInfo.activityInfo.packageName)) {
+        if (!FacebookSignatureValidator.validateSignature(
+                context,
+                resolveInfo.activityInfo.packageName)) {
             return null;
         }
 
@@ -411,7 +429,9 @@ static Intent validateServiceIntent(Context context, Intent intent, NativeAppInf
             return null;
         }
 
-        if (!appInfo.validateSignature(context, resolveInfo.serviceInfo.packageName)) {
+        if (!FacebookSignatureValidator.validateSignature(
+                context,
+                resolveInfo.serviceInfo.packageName)) {
             return null;
         }
 
@@ -463,6 +483,8 @@ private static Intent createNativeAppIntent(
                 .setClassName(appInfo.getPackage(), activityName)
                 .putExtra(FACEBOOK_PROXY_AUTH_APP_ID_KEY, applicationId);
 
+        intent.putExtra(FACEBOOK_SDK_VERSION_KEY, FacebookSdk.getSdkVersion());
+
         if (!Utility.isNullOrEmpty(permissions)) {
             intent.putExtra(
                     FACEBOOK_PROXY_AUTH_PERMISSIONS_KEY, TextUtils.join(",", permissions));
@@ -544,6 +566,7 @@ public static final int getLatestKnownVersion() {
     // Note: be sure this stays sorted in descending order; add new versions at the beginning
     private static final List<Integer> KNOWN_PROTOCOL_VERSIONS =
             Arrays.asList(
+                    PROTOCOL_VERSION_20170417,
                     PROTOCOL_VERSION_20160327,
                     PROTOCOL_VERSION_20141218,
                     PROTOCOL_VERSION_20141107,
@@ -555,32 +578,7 @@ public static final int getLatestKnownVersion() {
                     PROTOCOL_VERSION_20131107,
                     PROTOCOL_VERSION_20130618,
                     PROTOCOL_VERSION_20130502,
-                    PROTOCOL_VERSION_20121101
-            );
-
-    private static Intent findActivityIntent(
-            Context context,
-            String activityAction,
-            String internalAction) {
-        List<NativeAppInfo> list = actionToAppInfoMap.get(internalAction);
-        if (list == null) {
-            return null;
-        }
-
-        Intent intent = null;
-        for (NativeAppInfo appInfo : list) {
-            intent = new Intent()
-                    .setAction(activityAction)
-                    .setPackage(appInfo.getPackage())
-                    .addCategory(Intent.CATEGORY_DEFAULT);
-            intent = validateActivityIntent(context, intent, appInfo);
-            if (intent != null) {
-                return intent;
-            }
-        }
-
-        return intent;
-    }
+                    PROTOCOL_VERSION_20121101);
 
     public static boolean isVersionCompatibleWithBucketedIntent(int version) {
         return KNOWN_PROTOCOL_VERSIONS.contains(version) && version >= PROTOCOL_VERSION_20140701;
@@ -594,14 +592,27 @@ public static Intent createPlatformActivityIntent(
             Context context,
             String callId,
             String action,
-            int version,
+            ProtocolVersionQueryResult versionResult,
             Bundle extras) {
-        Intent intent = findActivityIntent(context, INTENT_ACTION_PLATFORM_ACTIVITY, action);
+        if (versionResult == null) {
+            return null;
+        }
+
+        NativeAppInfo appInfo = versionResult.nativeAppInfo;
+        if (appInfo == null) {
+            return null;
+        }
+
+        Intent intent = new Intent()
+                .setAction(INTENT_ACTION_PLATFORM_ACTIVITY)
+                .setPackage(appInfo.getPackage())
+                .addCategory(Intent.CATEGORY_DEFAULT);
+        intent = validateActivityIntent(context, intent, appInfo);
         if (intent == null) {
             return null;
         }
 
-        setupProtocolRequestIntent(intent, callId, action, version, extras);
+        setupProtocolRequestIntent(intent, callId, action, versionResult.protocolVersion, extras);
 
         return intent;
     }
@@ -805,24 +816,24 @@ public static Bundle createBundleForException(FacebookException e) {
     public static int getLatestAvailableProtocolVersionForService(final int minimumVersion) {
         // Services are currently always against the Facebook App
         return getLatestAvailableProtocolVersionForAppInfoList(
-                facebookAppInfoList, new int[]{minimumVersion});
+                facebookAppInfoList, new int[]{minimumVersion}).getProtocolVersion();
     }
 
-    public static int getLatestAvailableProtocolVersionForAction(
+    public static ProtocolVersionQueryResult getLatestAvailableProtocolVersionForAction(
             String action,
             int[] versionSpec) {
         List<NativeAppInfo> appInfoList = actionToAppInfoMap.get(action);
         return getLatestAvailableProtocolVersionForAppInfoList(appInfoList, versionSpec);
     }
 
-    private static int getLatestAvailableProtocolVersionForAppInfoList(
+    private static ProtocolVersionQueryResult getLatestAvailableProtocolVersionForAppInfoList(
             List<NativeAppInfo> appInfoList,
             int[] versionSpec) {
         // Kick off an update
         updateAllAvailableProtocolVersionsAsync();
 
         if (appInfoList == null) {
-            return NO_PROTOCOL_AVAILABLE;
+            return ProtocolVersionQueryResult.createEmpty();
         }
 
         // Could potentially cache the NativeAppInfo to latestProtocolVersion
@@ -834,11 +845,11 @@ private static int getLatestAvailableProtocolVersionForAppInfoList(
                             versionSpec);
 
             if (protocolVersion != NO_PROTOCOL_AVAILABLE) {
-                return protocolVersion;
+                return ProtocolVersionQueryResult.create(appInfo, protocolVersion);
             }
         }
 
-        return NO_PROTOCOL_AVAILABLE;
+        return ProtocolVersionQueryResult.createEmpty();
     }
 
     public static void updateAllAvailableProtocolVersionsAsync() {
@@ -963,4 +974,37 @@ public static int computeLatestAvailableVersionFromVersionSpec(
     private static Uri buildPlatformProviderVersionURI(NativeAppInfo appInfo) {
         return Uri.parse(CONTENT_SCHEME + appInfo.getPackage() + PLATFORM_PROVIDER_VERSIONS);
     }
+
+    public static class ProtocolVersionQueryResult {
+        private NativeAppInfo nativeAppInfo;
+        private int protocolVersion;
+
+        public static ProtocolVersionQueryResult create(
+                NativeAppInfo nativeAppInfo,
+                int protocolVersion) {
+            ProtocolVersionQueryResult result = new ProtocolVersionQueryResult();
+            result.nativeAppInfo = nativeAppInfo;
+            result.protocolVersion = protocolVersion;
+
+            return result;
+        }
+
+        public static ProtocolVersionQueryResult createEmpty() {
+            ProtocolVersionQueryResult result = new ProtocolVersionQueryResult();
+            result.protocolVersion = NO_PROTOCOL_AVAILABLE;
+
+            return result;
+        }
+
+        private ProtocolVersionQueryResult() {
+        }
+
+        public @Nullable NativeAppInfo getAppInfo() {
+            return nativeAppInfo;
+        }
+
+        public int getProtocolVersion() {
+            return protocolVersion;
+        }
+    }
 }
diff --git a/facebook/src/main/java/com/facebook/internal/ProfileInformationCache.java b/facebook-core/src/main/java/com/facebook/internal/ProfileInformationCache.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/internal/ProfileInformationCache.java
rename to facebook-core/src/main/java/com/facebook/internal/ProfileInformationCache.java
diff --git a/facebook/src/main/java/com/facebook/internal/ServerProtocol.java b/facebook-core/src/main/java/com/facebook/internal/ServerProtocol.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/internal/ServerProtocol.java
rename to facebook-core/src/main/java/com/facebook/internal/ServerProtocol.java
index 5816c11c8..340803788 100644
--- a/facebook/src/main/java/com/facebook/internal/ServerProtocol.java
+++ b/facebook-core/src/main/java/com/facebook/internal/ServerProtocol.java
@@ -76,7 +76,7 @@
     // URL components
     private static final String GRAPH_VIDEO_URL_FORMAT = "https://graph-video.%s";
     private static final String GRAPH_URL_FORMAT = "https://graph.%s";
-    private static final String GRAPH_API_VERSION = "v2.7";
+    private static final String GRAPH_API_VERSION = "v2.10";
 
     public static final Collection<String> errorsProxyAuthDisabled =
             Utility.unmodifiableCollection("service_disabled", "AndroidAuthKillSwitchException");
diff --git a/facebook-core/src/main/java/com/facebook/internal/SmartLoginOption.java b/facebook-core/src/main/java/com/facebook/internal/SmartLoginOption.java
new file mode 100644
index 000000000..4283bda91
--- /dev/null
+++ b/facebook-core/src/main/java/com/facebook/internal/SmartLoginOption.java
@@ -0,0 +1,49 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+package com.facebook.internal;
+
+import java.util.EnumSet;
+
+public enum SmartLoginOption {
+    None(0),
+    Enabled(1),
+    RequireConfirm(2);
+
+    public static final EnumSet<SmartLoginOption> ALL = EnumSet.allOf(SmartLoginOption.class);
+    public static EnumSet<SmartLoginOption> parseOptions(long bitmask) {
+        EnumSet<SmartLoginOption> result = EnumSet.noneOf(SmartLoginOption.class);
+        for (SmartLoginOption opt : ALL) {
+            if ((bitmask & opt.getValue()) != 0) {
+                result.add(opt);
+            }
+        }
+        return result;
+    }
+
+    private final long mValue;
+
+    SmartLoginOption(long value) {
+        this.mValue= value;
+    }
+
+    public long getValue(){
+        return mValue;
+    }
+}
diff --git a/facebook/src/main/java/com/facebook/internal/UrlRedirectCache.java b/facebook-core/src/main/java/com/facebook/internal/UrlRedirectCache.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/internal/UrlRedirectCache.java
rename to facebook-core/src/main/java/com/facebook/internal/UrlRedirectCache.java
index bf4c5b269..382d31f8e 100644
--- a/facebook/src/main/java/com/facebook/internal/UrlRedirectCache.java
+++ b/facebook-core/src/main/java/com/facebook/internal/UrlRedirectCache.java
@@ -38,7 +38,7 @@
     static final String TAG = UrlRedirectCache.class.getSimpleName();
     private static final String REDIRECT_CONTENT_TAG = TAG + "_Redirect";
 
-    private volatile static FileLruCache urlRedirectCache;
+    private static FileLruCache urlRedirectCache;
 
     synchronized static FileLruCache getCache() throws IOException{
         if (urlRedirectCache == null) {
diff --git a/facebook/src/main/java/com/facebook/internal/Utility.java b/facebook-core/src/main/java/com/facebook/internal/Utility.java
similarity index 72%
rename from facebook/src/main/java/com/facebook/internal/Utility.java
rename to facebook-core/src/main/java/com/facebook/internal/Utility.java
index 7c1411a1b..fcf3fdc82 100644
--- a/facebook/src/main/java/com/facebook/internal/Utility.java
+++ b/facebook-core/src/main/java/com/facebook/internal/Utility.java
@@ -21,7 +21,6 @@
 package com.facebook.internal;
 
 import android.content.Context;
-import android.content.SharedPreferences;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
 import android.database.Cursor;
@@ -47,25 +46,42 @@
 import com.facebook.GraphRequest;
 import com.facebook.GraphResponse;
 import com.facebook.HttpMethod;
-import com.facebook.appevents.AppEventsConstants;
-import com.facebook.appevents.internal.Constants;
 
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 import org.json.JSONTokener;
 
-import java.io.*;
+import java.io.BufferedInputStream;
+import java.io.Closeable;
+import java.io.File;
+import java.io.FilenameFilter;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.io.UnsupportedEncodingException;
 import java.lang.reflect.InvocationTargetException;
 import java.lang.reflect.Method;
 import java.math.BigInteger;
 import java.net.HttpURLConnection;
 import java.net.URLConnection;
-
 import java.net.URLDecoder;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
-import java.util.*;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collection;
+import java.util.Collections;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Locale;
+import java.util.Map;
+import java.util.Random;
+import java.util.Set;
+import java.util.TimeZone;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.regex.Pattern;
@@ -80,44 +96,10 @@
     private static final String HASH_ALGORITHM_MD5 = "MD5";
     private static final String HASH_ALGORITHM_SHA1 = "SHA-1";
     private static final String URL_SCHEME = "https";
-    private static final String APP_SETTINGS_PREFS_STORE =
-            "com.facebook.internal.preferences.APP_SETTINGS";
-    private static final String APP_SETTINGS_PREFS_KEY_FORMAT =
-            "com.facebook.internal.APP_SETTINGS.%s";
-    private static final String APP_SETTING_SUPPORTS_IMPLICIT_SDK_LOGGING =
-            "supports_implicit_sdk_logging";
-    private static final String APP_SETTING_NUX_CONTENT = "gdpv4_nux_content";
-    private static final String APP_SETTING_NUX_ENABLED = "gdpv4_nux_enabled";
-    private static final String APP_SETTING_CUSTOM_TABS_ENABLED =
-            "gdpv4_chrome_custom_tabs_enabled";
-    private static final String APP_SETTING_DIALOG_CONFIGS = "android_dialog_configs";
-    private static final String APP_SETTING_ANDROID_SDK_ERROR_CATEGORIES =
-            "android_sdk_error_categories";
-    private static final String APP_SETTING_APP_EVENTS_SESSION_TIMEOUT =
-            "app_events_session_timeout";
-    private static final String APP_SETTING_APP_EVENTS_FEATURE_BITMASK =
-            "app_events_feature_bitmask";
-    private static final int AUTOMATIC_LOGGING_ENABLED_BITMASK_FIELD = 1 << 3;
     private static final String EXTRA_APP_EVENTS_INFO_FORMAT_VERSION = "a2";
-    private static final String DIALOG_CONFIG_DIALOG_NAME_FEATURE_NAME_SEPARATOR = "\\|";
-    private static final String DIALOG_CONFIG_NAME_KEY = "name";
-    private static final String DIALOG_CONFIG_VERSIONS_KEY = "versions";
-    private static final String DIALOG_CONFIG_URL_KEY = "url";
 
     private final static String UTF8 = "UTF-8";
 
-    private static final String[] APP_SETTING_FIELDS = new String[]{
-            APP_SETTING_SUPPORTS_IMPLICIT_SDK_LOGGING,
-            APP_SETTING_NUX_CONTENT,
-            APP_SETTING_NUX_ENABLED,
-            APP_SETTING_CUSTOM_TABS_ENABLED,
-            APP_SETTING_DIALOG_CONFIGS,
-            APP_SETTING_ANDROID_SDK_ERROR_CATEGORIES,
-            APP_SETTING_APP_EVENTS_SESSION_TIMEOUT,
-            APP_SETTING_APP_EVENTS_FEATURE_BITMASK
-    };
-    private static final String APPLICATION_FIELDS = "fields";
-
     // This is the default used by the buffer streams, but they trace a warning if you do not
     // specify.
     public static final int DEFAULT_STREAM_BUFFER_SIZE = 8192;
@@ -129,11 +111,6 @@
 
     private static final int GINGERBREAD_MR1 = 10;
 
-    private static Map<String, FetchedAppSettings> fetchedAppSettings =
-            new ConcurrentHashMap<String, FetchedAppSettings>();
-
-    private static AtomicBoolean loadingSettings = new AtomicBoolean(false);
-
     private static int numCPUCores = 0;
 
     private static long timestampOfLastCheck = -1;
@@ -143,167 +120,6 @@
     private static String deviceTimeZoneName = "";
     private static String carrierName = noCarrierConstant;
 
-    public static class FetchedAppSettings {
-        private boolean supportsImplicitLogging;
-        private String nuxContent;
-        private boolean nuxEnabled;
-        private boolean customTabsEnabled;
-        private int sessionTimeoutInSeconds;
-        private Map<String, Map<String, DialogFeatureConfig>> dialogConfigMap;
-        private boolean automaticLoggingEnabled;
-        private FacebookRequestErrorClassification errorClassification;
-
-        private FetchedAppSettings(boolean supportsImplicitLogging,
-                                   String nuxContent,
-                                   boolean nuxEnabled,
-                                   boolean customTabsEnabled,
-                                   int sessionTimeoutInSeconds,
-                                   Map<String, Map<String, DialogFeatureConfig>> dialogConfigMap,
-                                   boolean automaticLoggingEnabled,
-                                   FacebookRequestErrorClassification errorClassification) {
-            this.supportsImplicitLogging = supportsImplicitLogging;
-            this.nuxContent = nuxContent;
-            this.nuxEnabled = nuxEnabled;
-            this.customTabsEnabled = customTabsEnabled;
-            this.dialogConfigMap = dialogConfigMap;
-            this.errorClassification = errorClassification;
-            this.sessionTimeoutInSeconds = sessionTimeoutInSeconds;
-            this.automaticLoggingEnabled = automaticLoggingEnabled;
-        }
-
-        public boolean supportsImplicitLogging() {
-            return supportsImplicitLogging;
-        }
-
-        public String getNuxContent() {
-            return nuxContent;
-        }
-
-        public boolean getNuxEnabled() {
-            return nuxEnabled;
-        }
-
-        public boolean getCustomTabsEnabled() {
-            return customTabsEnabled;
-        }
-
-        public int getSessionTimeoutInSeconds() {
-            return sessionTimeoutInSeconds;
-        }
-
-        public boolean getAutomaticLoggingEnabled() {
-            return automaticLoggingEnabled;
-        }
-
-        public Map<String, Map<String, DialogFeatureConfig>> getDialogConfigurations() {
-            return dialogConfigMap;
-        }
-
-        public FacebookRequestErrorClassification getErrorClassification() {
-            return errorClassification;
-        }
-    }
-
-    public static class DialogFeatureConfig {
-        private static DialogFeatureConfig parseDialogConfig(JSONObject dialogConfigJSON) {
-            String dialogNameWithFeature = dialogConfigJSON.optString(DIALOG_CONFIG_NAME_KEY);
-            if (Utility.isNullOrEmpty(dialogNameWithFeature)) {
-                return null;
-            }
-
-            String[] components = dialogNameWithFeature.split(
-                    DIALOG_CONFIG_DIALOG_NAME_FEATURE_NAME_SEPARATOR);
-            if (components.length != 2) {
-                // We expect the format to be dialogName|FeatureName, where both components are
-                // non-empty.
-                return null;
-            }
-
-            String dialogName = components[0];
-            String featureName = components[1];
-            if (isNullOrEmpty(dialogName) || isNullOrEmpty(featureName)) {
-                return null;
-            }
-
-            String urlString = dialogConfigJSON.optString(DIALOG_CONFIG_URL_KEY);
-            Uri fallbackUri = null;
-            if (!Utility.isNullOrEmpty(urlString)) {
-                fallbackUri = Uri.parse(urlString);
-            }
-
-            JSONArray versionsJSON = dialogConfigJSON.optJSONArray(DIALOG_CONFIG_VERSIONS_KEY);
-
-            int[] featureVersionSpec = parseVersionSpec(versionsJSON);
-
-            return new DialogFeatureConfig(
-                    dialogName, featureName, fallbackUri, featureVersionSpec);
-        }
-
-        private static int[] parseVersionSpec(JSONArray versionsJSON) {
-            // Null signifies no overrides to the min-version as specified by the SDK.
-            // An empty array would basically turn off the dialog (i.e no supported versions), so
-            // DON'T default to that.
-            int[] versionSpec = null;
-            if (versionsJSON != null) {
-                int numVersions = versionsJSON.length();
-                versionSpec = new int[numVersions];
-                for (int i = 0; i < numVersions; i++) {
-                    // See if the version was stored directly as an Integer
-                    int version = versionsJSON.optInt(i, NativeProtocol.NO_PROTOCOL_AVAILABLE);
-                    if (version == NativeProtocol.NO_PROTOCOL_AVAILABLE) {
-                        // If not, then see if it was stored as a string that can be parsed out.
-                        // If even that fails, then we will leave it as NO_PROTOCOL_AVAILABLE
-                        String versionString = versionsJSON.optString(i);
-                        if (!isNullOrEmpty(versionString)) {
-                            try {
-                                version = Integer.parseInt(versionString);
-                            } catch (NumberFormatException nfe) {
-                                logd(LOG_TAG, nfe);
-                                version = NativeProtocol.NO_PROTOCOL_AVAILABLE;
-                            }
-                        }
-                    }
-
-                    versionSpec[i] = version;
-                }
-            }
-
-            return versionSpec;
-        }
-
-        private String dialogName;
-        private String featureName;
-        private Uri fallbackUrl;
-        private int[] featureVersionSpec;
-
-        private DialogFeatureConfig(
-                String dialogName,
-                String featureName,
-                Uri fallbackUrl,
-                int[] featureVersionSpec) {
-            this.dialogName = dialogName;
-            this.featureName = featureName;
-            this.fallbackUrl = fallbackUrl;
-            this.featureVersionSpec = featureVersionSpec;
-        }
-
-        public String getDialogName() {
-            return dialogName;
-        }
-
-        public String getFeatureName() {
-            return featureName;
-        }
-
-        public Uri getFallbackUrl() {
-            return fallbackUrl;
-        }
-
-        public int[] getVersionSpec() {
-            return featureVersionSpec;
-        }
-    }
-
     /**
      * Each array represents a set of closed or open Range, like so: [0,10,50,60] - Ranges are
      * {0-9}, {50-59} [20] - Ranges are {20-} [30,40,100] - Ranges are {30-39}, {100-}
@@ -576,9 +392,9 @@ public static boolean putJSONValueInBundle(Bundle bundle, String key, Object val
         } else if (value instanceof String) {
             bundle.putString(key, (String) value);
         } else if (value instanceof JSONArray) {
-            bundle.putString(key, ((JSONArray) value).toString());
+            bundle.putString(key, value.toString());
         } else if (value instanceof JSONObject) {
-            bundle.putString(key, ((JSONObject) value).toString());
+            bundle.putString(key, value.toString());
         } else {
             return false;
         }
@@ -796,168 +612,6 @@ public static boolean hasSameId(JSONObject a, JSONObject b) {
         return idA.equals(idB);
     }
 
-    public static void loadAppSettingsAsync(
-            final Context context,
-            final String applicationId
-    ) {
-        boolean canStartLoading = loadingSettings.compareAndSet(false, true);
-        if (Utility.isNullOrEmpty(applicationId) ||
-                fetchedAppSettings.containsKey(applicationId) ||
-                !canStartLoading) {
-            return;
-        }
-
-        final String settingsKey = String.format(APP_SETTINGS_PREFS_KEY_FORMAT, applicationId);
-
-        FacebookSdk.getExecutor().execute(new Runnable() {
-            @Override
-            public void run() {
-                // See if we had a cached copy and use that immediately.
-                SharedPreferences sharedPrefs = context.getSharedPreferences(
-                        APP_SETTINGS_PREFS_STORE,
-                        Context.MODE_PRIVATE);
-                String settingsJSONString = sharedPrefs.getString(settingsKey, null);
-                if (!isNullOrEmpty(settingsJSONString)) {
-                    JSONObject settingsJSON = null;
-                    try {
-                        settingsJSON = new JSONObject(settingsJSONString);
-                    } catch (JSONException je) {
-                        logd(LOG_TAG, je);
-                    }
-                    if (settingsJSON != null) {
-                        parseAppSettingsFromJSON(applicationId, settingsJSON);
-                    }
-                }
-
-                JSONObject resultJSON = getAppSettingsQueryResponse(applicationId);
-                if (resultJSON != null) {
-                    parseAppSettingsFromJSON(applicationId, resultJSON);
-
-                    sharedPrefs.edit()
-                            .putString(settingsKey, resultJSON.toString())
-                            .apply();
-                }
-
-                loadingSettings.set(false);
-            }
-        });
-    }
-
-    // This call only gets the app settings if they're already fetched
-    public static FetchedAppSettings getAppSettingsWithoutQuery(final String applicationId) {
-        return applicationId != null ? fetchedAppSettings.get(applicationId) : null;
-    }
-
-    // Note that this method makes a synchronous Graph API call, so should not be called from the
-    // main thread.
-    public static FetchedAppSettings queryAppSettings(
-            final String applicationId,
-            final boolean forceRequery) {
-        // Cache the last app checked results.
-        if (!forceRequery && fetchedAppSettings.containsKey(applicationId)) {
-            return fetchedAppSettings.get(applicationId);
-        }
-
-        JSONObject response = getAppSettingsQueryResponse(applicationId);
-        if (response == null) {
-            return null;
-        }
-
-        return parseAppSettingsFromJSON(applicationId, response);
-    }
-
-    private static FetchedAppSettings parseAppSettingsFromJSON(
-            String applicationId,
-            JSONObject settingsJSON) {
-        JSONArray errorClassificationJSON =
-                settingsJSON.optJSONArray(APP_SETTING_ANDROID_SDK_ERROR_CATEGORIES);
-        FacebookRequestErrorClassification errorClassification =
-                errorClassificationJSON == null
-                        ? FacebookRequestErrorClassification.getDefaultErrorClassification()
-                        : FacebookRequestErrorClassification.createFromJSON(
-                        errorClassificationJSON
-                );
-        int featureBitmask = settingsJSON.optInt(APP_SETTING_APP_EVENTS_FEATURE_BITMASK,0);
-        boolean automaticLoggingEnabled =
-                (featureBitmask & AUTOMATIC_LOGGING_ENABLED_BITMASK_FIELD) != 0;
-        FetchedAppSettings result = new FetchedAppSettings(
-                settingsJSON.optBoolean(APP_SETTING_SUPPORTS_IMPLICIT_SDK_LOGGING, false),
-                settingsJSON.optString(APP_SETTING_NUX_CONTENT, ""),
-                settingsJSON.optBoolean(APP_SETTING_NUX_ENABLED, false),
-                settingsJSON.optBoolean(APP_SETTING_CUSTOM_TABS_ENABLED, false),
-                settingsJSON.optInt(
-                        APP_SETTING_APP_EVENTS_SESSION_TIMEOUT,
-                        Constants.getDefaultAppEventsSessionTimeoutInSeconds()),
-                parseDialogConfigurations(settingsJSON.optJSONObject(APP_SETTING_DIALOG_CONFIGS)),
-                automaticLoggingEnabled,
-                errorClassification
-        );
-
-        fetchedAppSettings.put(applicationId, result);
-
-        return result;
-    }
-
-    // Note that this method makes a synchronous Graph API call, so should not be called from the
-    // main thread.
-    private static JSONObject getAppSettingsQueryResponse(String applicationId) {
-        Bundle appSettingsParams = new Bundle();
-        appSettingsParams.putString(APPLICATION_FIELDS, TextUtils.join(",", APP_SETTING_FIELDS));
-
-        GraphRequest request = GraphRequest.newGraphPathRequest(null, applicationId, null);
-        request.setSkipClientToken(true);
-        request.setParameters(appSettingsParams);
-
-        return request.executeAndWait().getJSONObject();
-    }
-
-    public static DialogFeatureConfig getDialogFeatureConfig(
-            String applicationId,
-            String actionName,
-            String featureName) {
-        if (Utility.isNullOrEmpty(actionName) || Utility.isNullOrEmpty(featureName)) {
-            return null;
-        }
-
-        FetchedAppSettings settings = fetchedAppSettings.get(applicationId);
-        if (settings != null) {
-            Map<String, DialogFeatureConfig> featureMap =
-                    settings.getDialogConfigurations().get(actionName);
-            if (featureMap != null) {
-                return featureMap.get(featureName);
-            }
-        }
-        return null;
-    }
-
-    private static Map<String, Map<String, DialogFeatureConfig>> parseDialogConfigurations(
-            JSONObject dialogConfigResponse) {
-        HashMap<String, Map<String, DialogFeatureConfig>> dialogConfigMap = new HashMap<String, Map<String, DialogFeatureConfig>>();
-
-        if (dialogConfigResponse != null) {
-            JSONArray dialogConfigData = dialogConfigResponse.optJSONArray("data");
-            if (dialogConfigData != null) {
-                for (int i = 0; i < dialogConfigData.length(); i++) {
-                    DialogFeatureConfig dialogConfig = DialogFeatureConfig.parseDialogConfig(
-                            dialogConfigData.optJSONObject(i));
-                    if (dialogConfig == null) {
-                        continue;
-                    }
-
-                    String dialogName = dialogConfig.getDialogName();
-                    Map<String, DialogFeatureConfig> featureMap = dialogConfigMap.get(dialogName);
-                    if (featureMap == null) {
-                        featureMap = new HashMap<String, DialogFeatureConfig>();
-                        dialogConfigMap.put(dialogName, featureMap);
-                    }
-                    featureMap.put(dialogConfig.getFeatureName(), dialogConfig);
-                }
-            }
-        }
-
-        return dialogConfigMap;
-    }
-
     public static String safeGetStringFromResponse(JSONObject response, String propertyName) {
         return response != null ? response.optString(propertyName, "") : "";
     }
@@ -1075,7 +729,7 @@ public static void setAppEventExtendedDeviceInfoParameters(
         extraInfoArray.put(Build.MODEL);
 
         // Locale
-        Locale locale = null;
+        Locale locale;
         try {
             locale = appContext.getResources().getConfiguration().locale;
         } catch (Exception e) {
@@ -1246,7 +900,7 @@ public static Date getBundleLongAsDate(Bundle bundle, String key, Date dateBase)
             return null;
         }
 
-        long secondsFromBase = Long.MIN_VALUE;
+        long secondsFromBase;
 
         Object secondsObject = bundle.get(key);
         if (secondsObject instanceof Long) {
@@ -1372,7 +1026,6 @@ private static int refreshBestGuessNumberOfCPUCores() {
 
         // Enumerate all available CPU files and try to count the number of CPU cores.
         try {
-            int res = 0;
             File cpuDir = new File("/sys/devices/system/cpu/");
             File[] cpuFiles = cpuDir.listFiles(new FilenameFilter() {
                 @Override
diff --git a/facebook/src/main/java/com/facebook/internal/Validate.java b/facebook-core/src/main/java/com/facebook/internal/Validate.java
similarity index 89%
rename from facebook/src/main/java/com/facebook/internal/Validate.java
rename to facebook-core/src/main/java/com/facebook/internal/Validate.java
index 72f87abcf..0f51773e9 100644
--- a/facebook/src/main/java/com/facebook/internal/Validate.java
+++ b/facebook-core/src/main/java/com/facebook/internal/Validate.java
@@ -31,8 +31,6 @@
 import android.os.Looper;
 import android.util.Log;
 
-import com.facebook.CustomTabActivity;
-import com.facebook.FacebookActivity;
 import com.facebook.FacebookException;
 import com.facebook.FacebookSdk;
 import com.facebook.FacebookSdkNotInitializedException;
@@ -180,6 +178,29 @@ public static void hasInternetPermissions(Context context, boolean shouldThrow)
         }
     }
 
+    public static boolean hasWiFiPermission(Context context) {
+        return hasPermission(context, Manifest.permission.ACCESS_WIFI_STATE);
+    }
+
+    public static boolean hasChangeWifiStatePermission(Context context) {
+        return hasPermission(context, Manifest.permission.CHANGE_WIFI_STATE);
+    }
+
+    public static boolean hasLocationPermission(Context context) {
+        return hasPermission(context, Manifest.permission.ACCESS_COARSE_LOCATION)
+                || hasPermission(context, Manifest.permission.ACCESS_FINE_LOCATION);
+    }
+
+    public static boolean hasBluetoothPermission(Context context) {
+        return hasPermission(context, Manifest.permission.BLUETOOTH)
+                && hasPermission(context, Manifest.permission.BLUETOOTH_ADMIN);
+    }
+
+    public static boolean hasPermission(Context context, String permission) {
+        return context.checkCallingOrSelfPermission(permission) ==
+          PackageManager.PERMISSION_GRANTED;
+    }
+
     public static void hasFacebookActivity(Context context) {
         Validate.hasFacebookActivity(context, true);
     }
@@ -191,10 +212,11 @@ public static void hasFacebookActivity(Context context, boolean shouldThrow) {
         ActivityInfo activityInfo = null;
         if (pm != null) {
             ComponentName componentName =
-                    new ComponentName(context, FacebookActivity.class);
+                    new ComponentName(context, "com.facebook.FacebookActivity");
             try {
                 activityInfo = pm.getActivityInfo(componentName, PackageManager.GET_ACTIVITIES);
             } catch (PackageManager.NameNotFoundException e) {
+                // ignore
             }
         }
         if (activityInfo == null) {
@@ -236,7 +258,8 @@ public static boolean hasCustomTabRedirectActivity(Context context) {
         if (infos != null) {
             for (ResolveInfo info : infos) {
                 ActivityInfo activityInfo = info.activityInfo;
-                if (activityInfo.name.equals(CustomTabActivity.class.getName())) {
+                if (activityInfo.name.equals("com.facebook.CustomTabActivity") &&
+                    activityInfo.packageName.equals(context.getPackageName())) {
                     hasActivity = true;
                 } else {
                     // another application is listening for this url scheme, don't open
diff --git a/facebook/src/main/java/com/facebook/internal/WorkQueue.java b/facebook-core/src/main/java/com/facebook/internal/WorkQueue.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/internal/WorkQueue.java
rename to facebook-core/src/main/java/com/facebook/internal/WorkQueue.java
diff --git a/facebook/src/main/java/com/facebook/internal/package-info.java b/facebook-core/src/main/java/com/facebook/internal/package-info.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/internal/package-info.java
rename to facebook-core/src/main/java/com/facebook/internal/package-info.java
index 6c63b4a3f..f132059ed 100644
--- a/facebook/src/main/java/com/facebook/internal/package-info.java
+++ b/facebook-core/src/main/java/com/facebook/internal/package-info.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
diff --git a/facebook/src/main/java/com/facebook/login/DefaultAudience.java b/facebook-core/src/main/java/com/facebook/login/DefaultAudience.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/login/DefaultAudience.java
rename to facebook-core/src/main/java/com/facebook/login/DefaultAudience.java
diff --git a/facebook-login/.gitignore b/facebook-login/.gitignore
new file mode 100644
index 000000000..796b96d1c
--- /dev/null
+++ b/facebook-login/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/facebook-login/build.gradle b/facebook-login/build.gradle
new file mode 100644
index 000000000..1fb015a25
--- /dev/null
+++ b/facebook-login/build.gradle
@@ -0,0 +1,48 @@
+apply plugin: 'com.android.library'
+
+project.group 'com.facebook.android'
+
+project.ext.name = 'Facebook-Login-Android-SDK'
+project.ext.artifactId = "facebook-login"
+project.ext.description = 'Facebook Login Android SDK'
+project.ext.url = 'https://github.com/facebook/facebook-android-sdk/facebook-login'
+
+dependencies {
+    // Facebook Dependencies
+    compile project(':facebook-core')
+    compile project(':facebook-common')
+}
+
+android {
+    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
+    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
+
+    defaultConfig {
+        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
+        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
+        consumerProguardFiles 'proguard-rules.pro'
+        vectorDrawables.useSupportLibrary = true
+    }
+
+    aaptOptions {
+        additionalParameters "--no-version-vectors"
+    }
+
+    lintOptions {
+        abortOnError false
+    }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_7
+        targetCompatibility JavaVersion.VERSION_1_7
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+apply from: "${rootDir}/maven.gradle"
diff --git a/facebook-login/proguard-rules.pro b/facebook-login/proguard-rules.pro
new file mode 100644
index 000000000..4ec9628db
--- /dev/null
+++ b/facebook-login/proguard-rules.pro
@@ -0,0 +1,33 @@
+# To enable ProGuard in your project, edit project.properties
+# to define the proguard.config property as described in that file.
+#
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in ${sdk.dir}/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the ProGuard
+# include property in project.properties.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+-keepclassmembers class * implements java.io.Serializable {
+    private static final java.io.ObjectStreamField[] serialPersistentFields;
+    private void writeObject(java.io.ObjectOutputStream);
+    private void readObject(java.io.ObjectInputStream);
+    java.lang.Object writeReplace();
+    java.lang.Object readResolve();
+}
+
+-keepnames class com.facebook.FacebookActivity
+-keepnames class com.facebook.CustomTabActivity
+
+-keep class com.facebook.login.Login
diff --git a/facebook/src/main/res/values-cs/messenger_button_strings.xml b/facebook-login/src/main/AndroidManifest.xml
similarity index 86%
rename from facebook/src/main/res/values-cs/messenger_button_strings.xml
rename to facebook-login/src/main/AndroidManifest.xml
index 381bf74f6..840d40f47 100644
--- a/facebook/src/main/res/values-cs/messenger_button_strings.xml
+++ b/facebook-login/src/main/AndroidManifest.xml
@@ -19,6 +19,11 @@
     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 -->
 
-<resources>
-  <string name="messenger_send_button_text">Odeslat</string>
-</resources>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.facebook.login">
+
+    <application android:supportsRtl="true">
+
+    </application>
+
+</manifest>
diff --git a/facebook/src/main/java/com/facebook/login/DeviceLoginManager.java b/facebook-login/src/main/java/com/facebook/login/DeviceLoginManager.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/login/DeviceLoginManager.java
rename to facebook-login/src/main/java/com/facebook/login/DeviceLoginManager.java
diff --git a/facebook-login/src/main/java/com/facebook/login/Login.java b/facebook-login/src/main/java/com/facebook/login/Login.java
new file mode 100644
index 000000000..fcbde1f0c
--- /dev/null
+++ b/facebook-login/src/main/java/com/facebook/login/Login.java
@@ -0,0 +1,5 @@
+// Copyright 2004-present Facebook. All Rights Reserved.
+
+package com.facebook.login;
+
+public class Login { }
diff --git a/facebook/src/main/java/com/facebook/login/widget/DeviceLoginButton.java b/facebook-login/src/main/java/com/facebook/login/widget/DeviceLoginButton.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/login/widget/DeviceLoginButton.java
rename to facebook-login/src/main/java/com/facebook/login/widget/DeviceLoginButton.java
diff --git a/facebook/src/main/java/com/facebook/login/widget/LoginButton.java b/facebook-login/src/main/java/com/facebook/login/widget/LoginButton.java
similarity index 95%
rename from facebook/src/main/java/com/facebook/login/widget/LoginButton.java
rename to facebook-login/src/main/java/com/facebook/login/widget/LoginButton.java
index 0ae9eb9a2..c166703c4 100644
--- a/facebook/src/main/java/com/facebook/login/widget/LoginButton.java
+++ b/facebook-login/src/main/java/com/facebook/login/widget/LoginButton.java
@@ -27,21 +27,30 @@
 import android.content.res.TypedArray;
 import android.graphics.Canvas;
 import android.graphics.Paint;
-import android.net.Uri;
 import android.os.Bundle;
+import android.support.v7.content.res.AppCompatResources;
 import android.util.AttributeSet;
 import android.view.View;
-import com.facebook.*;
+
+import com.facebook.AccessToken;
+import com.facebook.AccessTokenTracker;
+import com.facebook.CallbackManager;
+import com.facebook.FacebookButtonBase;
+import com.facebook.FacebookCallback;
+import com.facebook.FacebookSdk;
+import com.facebook.Profile;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.CallbackManagerImpl;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.LoginAuthorizationType;
 import com.facebook.internal.Utility;
-import com.facebook.internal.Utility.FetchedAppSettings;
 import com.facebook.login.DefaultAudience;
 import com.facebook.login.LoginBehavior;
 import com.facebook.login.LoginManager;
 import com.facebook.login.LoginResult;
+import com.facebook.login.R;
 
 import java.util.Arrays;
 import java.util.Collections;
@@ -123,7 +132,7 @@ public int getValue() {
 
     static class LoginButtonProperties {
         private DefaultAudience defaultAudience = DefaultAudience.FRIENDS;
-        private List<String> permissions = Collections.<String>emptyList();
+        private List<String> permissions = Collections.emptyList();
         private LoginAuthorizationType authorizationType = null;
         private LoginBehavior loginBehavior = LoginBehavior.NATIVE_WITH_FALLBACK;
 
@@ -447,6 +456,15 @@ public void registerCallback(
         getLoginManager().registerCallback(callbackManager, callback);
     }
 
+    /**
+     * Unregisters a login callback to the given callback manager.
+     *
+     * @param callbackManager The callback manager that will encapsulate the callback.
+     */
+    public void unregisterCallback(final CallbackManager callbackManager) {
+        getLoginManager().unregisterCallback(callbackManager);
+    }
+
     @Override
     protected void onAttachedToWindow() {
         super.onAttachedToWindow();
@@ -488,7 +506,7 @@ private void checkToolTipSettings() {
                 FacebookSdk.getExecutor().execute(new Runnable() {
                     @Override
                     public void run() {
-                        final FetchedAppSettings settings = Utility.queryAppSettings(appId, false);
+                        final FetchedAppSettings settings = FetchedAppSettingsManager.queryAppSettings(appId, false);
                         getActivity().runOnUiThread(new Runnable() {
                             @Override
                             public void run() {
@@ -555,10 +573,10 @@ protected void configureButton(
         if (isInEditMode()) {
             // cannot use a drawable in edit mode, so setting the background color instead
             // of a background resource.
-            setBackgroundColor(getResources().getColor(R.color.com_facebook_blue));
+            setBackgroundColor(getResources().getColor(com.facebook.common.R.color.com_facebook_blue));
             // hardcoding in edit mode as getResources().getString() doesn't seem to work in
             // IntelliJ
-            loginText = "Log in with Facebook";
+            loginText = "Continue with Facebook";
         } else {
             accessTokenTracker = new AccessTokenTracker() {
                 @Override
@@ -571,6 +589,13 @@ protected void onCurrentAccessTokenChanged(
         }
 
         setButtonText();
+
+        // set vector drawables on the button
+        setCompoundDrawablesWithIntrinsicBounds(
+            AppCompatResources.getDrawable(getContext(), R.drawable.com_facebook_button_login_logo),
+            null,
+            null,
+            null);
     }
 
     protected LoginClickListener getNewLoginClickListener() {
@@ -617,7 +642,7 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         int logInWidth;
         int width;
         if (text == null) {
-            text = resources.getString(R.string.com_facebook_loginview_log_in_button_long);
+            text = resources.getString(R.string.com_facebook_loginview_log_in_button_continue);
             logInWidth = measureButtonWidth(text);
             width = resolveSize(logInWidth, widthMeasureSpec);
             if (width < logInWidth) {
@@ -638,11 +663,10 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
 
     private int measureButtonWidth(final String text) {
         int textWidth = measureTextWidth(text);
-        int width = (getCompoundPaddingLeft() +
+        return (getCompoundPaddingLeft() +
                 getCompoundDrawablePadding() +
                 textWidth +
                 getCompoundPaddingRight());
-        return width;
     }
 
     private void setButtonText() {
@@ -656,7 +680,7 @@ private void setButtonText() {
                 setText(loginText);
             } else {
                 String text = resources.getString(
-                        R.string.com_facebook_loginview_log_in_button_long);
+                        R.string.com_facebook_loginview_log_in_button_continue);
                 int width = getWidth();
                 // if the width is 0, we are going to measure size, so use the long text
                 if (width != 0) {
diff --git a/facebook/src/main/java/com/facebook/login/widget/ProfilePictureView.java b/facebook-login/src/main/java/com/facebook/login/widget/ProfilePictureView.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/login/widget/ProfilePictureView.java
rename to facebook-login/src/main/java/com/facebook/login/widget/ProfilePictureView.java
index b92c39107..e20075360 100644
--- a/facebook/src/main/java/com/facebook/login/widget/ProfilePictureView.java
+++ b/facebook-login/src/main/java/com/facebook/login/widget/ProfilePictureView.java
@@ -33,8 +33,8 @@
 import android.widget.ImageView;
 import com.facebook.FacebookException;
 import com.facebook.LoggingBehavior;
-import com.facebook.R;
 import com.facebook.internal.*;
+import com.facebook.login.R;
 
 /**
  * View that displays the profile photo of a supplied profile ID, while conforming
@@ -322,7 +322,6 @@ protected Parcelable onSaveInstanceState() {
         instanceState.putString(PROFILE_ID_KEY, profileId);
         instanceState.putInt(PRESET_SIZE_KEY, presetSizeType);
         instanceState.putBoolean(IS_CROPPED_KEY, isCropped);
-        instanceState.putParcelable(BITMAP_KEY, imageContents);
         instanceState.putInt(BITMAP_WIDTH_KEY, queryWidth);
         instanceState.putInt(BITMAP_HEIGHT_KEY, queryHeight);
         instanceState.putBoolean(PENDING_REFRESH_KEY, lastRequest != null);
@@ -348,11 +347,7 @@ protected void onRestoreInstanceState(Parcelable state) {
             queryWidth = instanceState.getInt(BITMAP_WIDTH_KEY);
             queryHeight = instanceState.getInt(BITMAP_HEIGHT_KEY);
 
-            setImageBitmap((Bitmap)instanceState.getParcelable(BITMAP_KEY));
-
-            if (instanceState.getBoolean(PENDING_REFRESH_KEY)) {
-                refreshImage(true);
-            }
+            refreshImage(true);
         }
     }
 
diff --git a/facebook/src/main/java/com/facebook/login/widget/ToolTipPopup.java b/facebook-login/src/main/java/com/facebook/login/widget/ToolTipPopup.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/login/widget/ToolTipPopup.java
rename to facebook-login/src/main/java/com/facebook/login/widget/ToolTipPopup.java
index 017960820..2d00528f3 100644
--- a/facebook/src/main/java/com/facebook/login/widget/ToolTipPopup.java
+++ b/facebook-login/src/main/java/com/facebook/login/widget/ToolTipPopup.java
@@ -30,7 +30,8 @@
 import android.widget.ImageView;
 import android.widget.PopupWindow;
 import android.widget.TextView;
-import com.facebook.R;
+
+import com.facebook.login.R;
 
 import java.lang.ref.WeakReference;
 
@@ -95,7 +96,7 @@ public ToolTipPopup(String text, View anchor) {
         mAnchorViewRef = new WeakReference<View>(anchor);
         mContext = anchor.getContext();
     }
-    
+
     /**
      * Sets the {@link Style} of this tool tip.
      * @param mStyle the style for the tool tip
diff --git a/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_black_background.9.png b/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_black_background.9.png
new file mode 100644
index 000000000..8dbcf03a7
Binary files /dev/null and b/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_black_background.9.png differ
diff --git a/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_black_bottomnub.png b/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_black_bottomnub.png
similarity index 100%
rename from facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_black_bottomnub.png
rename to facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_black_bottomnub.png
diff --git a/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_black_topnub.png b/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_black_topnub.png
similarity index 100%
rename from facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_black_topnub.png
rename to facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_black_topnub.png
diff --git a/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_black_xout.png b/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_black_xout.png
new file mode 100644
index 000000000..5226a21e3
Binary files /dev/null and b/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_black_xout.png differ
diff --git a/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_background.9.png b/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_background.9.png
new file mode 100644
index 000000000..ce8d5fcb4
Binary files /dev/null and b/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_background.9.png differ
diff --git a/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_bottomnub.png b/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_bottomnub.png
new file mode 100644
index 000000000..072a967f7
Binary files /dev/null and b/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_bottomnub.png differ
diff --git a/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_topnub.png b/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_topnub.png
new file mode 100644
index 000000000..e8d4f4e54
Binary files /dev/null and b/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_topnub.png differ
diff --git a/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_xout.png b/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_xout.png
new file mode 100644
index 000000000..6f39f036a
Binary files /dev/null and b/facebook-login/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_xout.png differ
diff --git a/facebook-login/src/main/res/drawable-mdpi/com_facebook_profile_picture_blank_portrait.png b/facebook-login/src/main/res/drawable-mdpi/com_facebook_profile_picture_blank_portrait.png
new file mode 100644
index 000000000..d0f4b1e01
Binary files /dev/null and b/facebook-login/src/main/res/drawable-mdpi/com_facebook_profile_picture_blank_portrait.png differ
diff --git a/facebook-login/src/main/res/drawable-mdpi/com_facebook_profile_picture_blank_square.png b/facebook-login/src/main/res/drawable-mdpi/com_facebook_profile_picture_blank_square.png
new file mode 100644
index 000000000..a01e0ba5c
Binary files /dev/null and b/facebook-login/src/main/res/drawable-mdpi/com_facebook_profile_picture_blank_square.png differ
diff --git a/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_black_background.9.png b/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_black_background.9.png
new file mode 100644
index 000000000..fd00d7e44
Binary files /dev/null and b/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_black_background.9.png differ
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_black_bottomnub.png b/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_black_bottomnub.png
similarity index 100%
rename from facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_black_bottomnub.png
rename to facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_black_bottomnub.png
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_black_topnub.png b/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_black_topnub.png
similarity index 100%
rename from facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_black_topnub.png
rename to facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_black_topnub.png
diff --git a/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_black_xout.png b/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_black_xout.png
new file mode 100644
index 000000000..ba4e69463
Binary files /dev/null and b/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_black_xout.png differ
diff --git a/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_background.9.png b/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_background.9.png
new file mode 100644
index 000000000..3939bbd26
Binary files /dev/null and b/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_background.9.png differ
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_bottomnub.png b/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_bottomnub.png
similarity index 100%
rename from facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_bottomnub.png
rename to facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_bottomnub.png
diff --git a/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_topnub.png b/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_topnub.png
new file mode 100644
index 000000000..95d84ce60
Binary files /dev/null and b/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_topnub.png differ
diff --git a/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_xout.png b/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_xout.png
new file mode 100644
index 000000000..430a90748
Binary files /dev/null and b/facebook-login/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_xout.png differ
diff --git a/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_background.9.png b/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_background.9.png
similarity index 100%
rename from facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_background.9.png
rename to facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_background.9.png
diff --git a/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_bottomnub.png b/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_bottomnub.png
similarity index 100%
rename from facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_bottomnub.png
rename to facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_bottomnub.png
diff --git a/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_topnub.png b/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_topnub.png
new file mode 100644
index 000000000..de8d25517
Binary files /dev/null and b/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_topnub.png differ
diff --git a/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_xout.png b/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_xout.png
new file mode 100644
index 000000000..e4cce1708
Binary files /dev/null and b/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_xout.png differ
diff --git a/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_background.9.png b/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_background.9.png
new file mode 100644
index 000000000..44fa73ae0
Binary files /dev/null and b/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_background.9.png differ
diff --git a/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_bottomnub.png b/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_bottomnub.png
new file mode 100644
index 000000000..47bf2c0c1
Binary files /dev/null and b/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_bottomnub.png differ
diff --git a/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_topnub.png b/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_topnub.png
new file mode 100644
index 000000000..ca5281e8a
Binary files /dev/null and b/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_topnub.png differ
diff --git a/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_xout.png b/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_xout.png
new file mode 100644
index 000000000..bbf51a70a
Binary files /dev/null and b/facebook-login/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_xout.png differ
diff --git a/facebook-login/src/main/res/drawable/com_facebook_button_login_background.xml b/facebook-login/src/main/res/drawable/com_facebook_button_login_background.xml
new file mode 100644
index 000000000..2735fba16
--- /dev/null
+++ b/facebook-login/src/main/res/drawable/com_facebook_button_login_background.xml
@@ -0,0 +1,58 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_enabled="false" android:state_focused="true">
+        <shape android:shape="rectangle">
+            <corners android:radius="@dimen/com_facebook_button_login_corner_radius" />
+            <solid android:color="@color/com_facebook_button_background_color_focused_disabled" />
+        </shape>
+    </item>
+    <item android:state_enabled="false" android:state_focused="false">
+        <shape android:shape="rectangle">
+            <corners android:radius="@dimen/com_facebook_button_login_corner_radius" />
+            <solid android:color="@color/com_facebook_button_background_color_disabled" />
+        </shape>
+    </item>
+    <item android:state_focused="true">
+        <shape android:shape="rectangle">
+            <corners android:radius="@dimen/com_facebook_button_login_corner_radius" />
+            <solid android:color="@color/com_facebook_button_background_color_focused" />
+            <stroke
+                android:width="1dp"
+                android:color="@color/com_facebook_button_border_color_focused"
+                >
+            </stroke>
+        </shape>
+    </item>
+    <item android:state_pressed="true">
+        <shape android:shape="rectangle">
+            <corners android:radius="@dimen/com_facebook_button_login_corner_radius" />
+            <solid android:color="@color/com_facebook_button_background_color_pressed" />
+        </shape>
+    </item>
+    <item>
+        <shape android:shape="rectangle">
+            <corners android:radius="@dimen/com_facebook_button_login_corner_radius" />
+            <solid android:color="@color/com_facebook_button_login_background_color" />
+        </shape>
+    </item>
+</selector>
diff --git a/facebook-login/src/main/res/drawable/com_facebook_button_login_logo.xml b/facebook-login/src/main/res/drawable/com_facebook_button_login_logo.xml
new file mode 100644
index 000000000..4a528aae0
--- /dev/null
+++ b/facebook-login/src/main/res/drawable/com_facebook_button_login_logo.xml
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<vector
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:height="16dp"
+    android:viewportHeight="22.0"
+    android:viewportWidth="22.0"
+    android:width="16dp"
+    >
+    <path
+        android:fillColor="#FFFFFF"
+        android:pathData="M20,0H2C0.895,0 0,0.896 0,2v18c0,1.105 0.895,2 2,
+            2h9.96v-8.662H9.01V9.962h2.95v-2.49c0,-2.888 1.785,-4.46 4.393,-4.46 1.25,
+            0 2.323,0.09 2.637,0.13v3.02l-1.81,0.002c-1.418,0 -1.693,0.666 -1.693,
+            1.643v2.155h3.383l-0.44,3.376h-2.943V22H20c1.105,0 2,-0.895 2,-2V2c0,
+            -1.104 -0.895,-2 -2,-2"
+    />
+</vector>
diff --git a/facebook/src/main/res/drawable/com_facebook_button_login_silver_background.xml b/facebook-login/src/main/res/drawable/com_facebook_button_login_silver_background.xml
similarity index 100%
rename from facebook/src/main/res/drawable/com_facebook_button_login_silver_background.xml
rename to facebook-login/src/main/res/drawable/com_facebook_button_login_silver_background.xml
diff --git a/facebook/src/main/res/layout/com_facebook_tooltip_bubble.xml b/facebook-login/src/main/res/layout/com_facebook_tooltip_bubble.xml
similarity index 100%
rename from facebook/src/main/res/layout/com_facebook_tooltip_bubble.xml
rename to facebook-login/src/main/res/layout/com_facebook_tooltip_bubble.xml
diff --git a/facebook-login/src/main/res/values-af/strings.xml b/facebook-login/src/main/res/values-af/strings.xml
new file mode 100644
index 000000000..32cc26472
--- /dev/null
+++ b/facebook-login/src/main/res/values-af/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: af_ZA -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Hou van</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Hou van</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Teken uit</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Teken aan</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Meld aan met Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Gaan voort met Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Aangemeld as: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Aangemeld met Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Teken uit</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Kanselleer</string>
+    <string name="com_facebook_loading" gender="unknown">Laai tans …</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest-fout</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-aanmelding vereis INTERNET-toestemming</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Jy is in beheer – kies watter inligting jy met toepassings wil deel.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Onvoorsiene fout terwyl die prent afgelaai is.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Deel</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Stuur</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Besoek &lt;b&gt;facebook.com/device&lt;/b&gt; en voer die kode wat hierbo gewys word, in.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Maak die Facebook-toepassing op jou mobiele toestel oop en soek kennisgewings om jou rekening te koppel.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- OF -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Bevestig aanmelding</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Gaan voort as %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Nie jy nie?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-ar/strings.xml b/facebook-login/src/main/res/values-ar/strings.xml
new file mode 100644
index 000000000..3389c2cb7
--- /dev/null
+++ b/facebook-login/src/main/res/values-ar/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ar_AR -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">أعجبني</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">أعجبك</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">تسجيل الخروج</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">تسجيل الدخول</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">تسجيل الدخول بحساب فيسبوك</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">متابعة بحساب فيسبوك</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">تم تسجيل الدخول باسم: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">تم تسجيل الدخول باستخدام حساب فيسبوك</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">تسجيل الخروج</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">إلغاء</string>
+    <string name="com_facebook_loading" gender="unknown">جارٍ التحميل…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">خطأ AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">يتطلب تسجيل دخول WebView الحصول إلى إذن INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">أنت المتحكم في الأمر - يمكنك اختيار المعلومات التي تود مشاركتها مع التطبيقات.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">حدث خطأ غير متوقع أثناء تنزيل صورة.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">مشاركة</string>
+    <string name="com_facebook_send_button_text" gender="unknown">إرسال</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">تفضل بزيارة &lt;b&gt;facebook.com/device&lt;/b&gt; وإدخال الرمز الموضح أعلاه.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">لربط حسابك، افتح تطبيق فيسبوك على جهازك المحمول وراجع الإشعارات.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- أو -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">تأكيد تسجيل الدخول</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">متابعة باسم %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">لست أنت؟</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-bn/strings.xml b/facebook-login/src/main/res/values-bn/strings.xml
new file mode 100644
index 000000000..b6537c710
--- /dev/null
+++ b/facebook-login/src/main/res/values-bn/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: bn_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">লাইক</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">পছন্দ করেছে</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">লগ আউট করুন</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">লগ ইন করুন</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook দিয়ে লগইন করুন</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook এর সাথে চালিয়ে যান</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s হিসাবে লগ ইন করা হয়েছে।</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ব্যবহার করার মাধ্যমে লগ ইন করা হয়েছে</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">লগ আউট করুন</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">বাতিল করুন</string>
+    <string name="com_facebook_loading" gender="unknown">লোড হচ্ছে…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest ত্রুটি</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView লগ ইনের ইন্টারনেটের অনুমতি প্রয়োজন</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">আপনার নিয়ন্ত্রণ রয়েছে - আপনি অ্যাপগুলির সাথে কোন তথ্য শেয়ার করতে চান সেটি বেছে নিন।</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">একটি ছবি ডাউনলোড করার সময় অপ্রত্যাশিত ত্রুটি ঘটেছে৷</string>
+    <string name="com_facebook_share_button_text" gender="unknown">শেয়ার করুন</string>
+    <string name="com_facebook_send_button_text" gender="unknown">পাঠান</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; দেখুন এবং উপরে দেখানো কোডটিকে প্রবেশ করান৷</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">আপনার অ্যাকাউন্ট সংযুক্ত করতে, আপনার মোবাইল ডিভাইসে Facebook অ্যাপ খুলুন এবং বিজ্ঞপ্তিগুলির জন্য পরীক্ষা করুন।</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- বা -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">লগ ইন নিশ্চিত করুন</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s হিসাবে চালিয়ে যান</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">আপনি নন?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-cs/strings.xml b/facebook-login/src/main/res/values-cs/strings.xml
new file mode 100644
index 000000000..b07e05acc
--- /dev/null
+++ b/facebook-login/src/main/res/values-cs/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: cs_CZ -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">To se mi líbí</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">To se mi už líbí</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Odhlásit se</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Přihlášení</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Přihlásit se přes Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Pokračovat přes Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Přihlášen(a) jako: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Přihlášení přes Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Odhlásit se</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Zrušit</string>
+    <string name="com_facebook_loading" gender="unknown">Načítání...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Chyba AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView vyžaduje oprávnění pro INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Je to jen na vás – nastavte si, které informace chcete s aplikacemi sdílet.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Neočekávaná chyba při stahování obrázku.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Sdílet</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Odeslat</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Přejděte na &lt;b&gt;facebook.com/device&lt;/b&gt; a zadejte nahoře uvedený kód.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Pokud chcete připojit svůj účet, spusťte aplikaci Facebook ve svém mobilním zařízení a zkontrolujte upozornění.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- NEBO -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Potvrďte přihlášení</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Pokračovat jako %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Nejste to vy?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-da/strings.xml b/facebook-login/src/main/res/values-da/strings.xml
new file mode 100644
index 000000000..8f987fe02
--- /dev/null
+++ b/facebook-login/src/main/res/values-da/strings.xml
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: da_DK -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Synes godt om</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Synes godt om</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Log af</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Log på</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Log på med Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Fortsæt med Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Logget på som %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Logget på med Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Log af</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Annuller</string>
+    <string name="com_facebook_loading" gender="unknown">Indlæser …</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Fejl i AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-login kræver INTERNET-tilladelse</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Du har kontrollen – Vælg, hvilke informationer du vil dele med apps.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Uventet fejl under download af billede.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Del</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Gå til &lt;b&gt;facebook.com/device&lt;/b&gt; og indtast koden, som er vist ovenfor.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">For at tilslutte din konto skal du åbne Facebook-appen på din mobilenhed og se efter, om der er notifikationer.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ELLER -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Bekræft login</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Fortsæt som %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Ikke dig?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-de/strings.xml b/facebook-login/src/main/res/values-de/strings.xml
new file mode 100644
index 000000000..222c68ff9
--- /dev/null
+++ b/facebook-login/src/main/res/values-de/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: de_DE -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Gefällt mir</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Gefällt dir</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Abmelden</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Melde dich an</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Mit Facebook anmelden</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Weiter mit Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Angemeldet als: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Mit Facebook angemeldet</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Abmelden</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Abbrechen</string>
+    <string name="com_facebook_loading" gender="unknown">Wird geladen ...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidOffensichtlicher Fehler</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-Anmeldung erfordert INTERNET-Berechtigung</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Du bestimmst, welche Informationen du mit Apps teilen möchtest.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Unerwarteter Fehler beim Herunterladen eines Bildes.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Teilen</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Senden</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Gehe zu &lt;b&gt;facebook.com/device&lt;/b&gt; und gib den oben angezeigten Code ein.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Öffne die Facebook-App auf deinem Mobilgerät, um dich mit deinem Konto zu verbinden und nach Benachrichtigungen zu suchen.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ODER -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Anmeldung bestätigen</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Weiter als %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Das bist du nicht?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-el/strings.xml b/facebook-login/src/main/res/values-el/strings.xml
new file mode 100644
index 000000000..b68cf0ab3
--- /dev/null
+++ b/facebook-login/src/main/res/values-el/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: el_GR -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Μου αρέσει!</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Σας αρέσει</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Αποσύνδεση</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Σύνδεση</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Συνδεθείτε μέσω Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Συνέχεια με το Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Έχετε συνδεθεί ως: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Έγινε σύνδεση μέσω Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Αποσύνδεση</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Ακύρωση</string>
+    <string name="com_facebook_loading" gender="unknown">Φόρτωση...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Σφάλμα AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Για σύνδεση στην εφαρμογή WebView απαιτείται άδεια INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Εσείς έχετε τον έλεγχο - επιλέξτε ποιες πληροφορίες θέλετε να κοινοποιείτε στις εφαρμογές.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Παρουσιάστηκε μη αναμενόμενο σφάλμα κατά τη λήψη μιας εικόνας.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Κοινοποιήστε</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Αποστολή</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Πηγαίνετε στη διεύθυνση &lt;b&gt;facebook.com/device&lt;/b&gt; και εισαγάγετε τον παραπάνω κωδικό.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Για να συνδέσετε το λογαριασμό σας, ανοίξτε την εφαρμογή Facebook στη φορητή συσκευή σας και ελέγξτε για ειδοποιήσεις.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- Ή -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Επιβεβαίωση σύνδεσης</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Συνέχεια ως %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Δεν είστε εσείς;</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-en-rGB/strings.xml b/facebook-login/src/main/res/values-en-rGB/strings.xml
new file mode 100644
index 000000000..22bbe4865
--- /dev/null
+++ b/facebook-login/src/main/res/values-en-rGB/strings.xml
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: en_GB -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_loading" gender="unknown">Loading…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest error</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView login requires Internet permission</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">You\'re in control – choose what information you want to share with apps.</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-es-rES/strings.xml b/facebook-login/src/main/res/values-es-rES/strings.xml
new file mode 100644
index 000000000..d9faad9f0
--- /dev/null
+++ b/facebook-login/src/main/res/values-es-rES/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: es_ES -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Me gusta</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Te gusta</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Salir</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Entrar</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Inicia sesión con Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continuar con Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Sesión iniciada como: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Has iniciado sesión con Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Salir</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Cancelar</string>
+    <string name="com_facebook_loading" gender="unknown">Cargando…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Error de AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">El inicio de sesión en WebView requiere permisos de INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Tú decides qué información quieres compartir con las aplicaciones.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Se ha producido un error inesperado al descargar una imagen.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Compartir</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Enviar</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; e introduce el código que se muestra más arriba.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Para conectar tu cuenta, abre la aplicación de Facebook en tu dispositivo móvil y comprueba las notificaciones.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- O -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Confirmar inicio de sesión</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continuar como %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">¿No eres tú?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-es/strings.xml b/facebook-login/src/main/res/values-es/strings.xml
new file mode 100644
index 000000000..e8e001985
--- /dev/null
+++ b/facebook-login/src/main/res/values-es/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: es_LA -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Me gusta</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Te gusta</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Salir</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Entrar</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Iniciar sesión con Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continuar con Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Sesión iniciada como: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Iniciaste sesión con Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Salir</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Cancelar</string>
+    <string name="com_facebook_loading" gender="unknown">Cargando...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Error de AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">El inicio de sesión de WebView requiere permisos de INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Tú decides qué información quieres compartir con las aplicaciones.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Se produjo un error inesperado al descargar una imagen.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Compartir</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Enviar</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Ve a &lt;b&gt;facebook.com/device&lt;/b&gt; e ingresa el código que se muestra arriba.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Para conectar tu cuenta, abre la aplicación de Facebook en tu dispositivo móvil y comprueba las notificaciones.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">o</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Confirmar inicio de sesión</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continuar como %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">¿No eres tú?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-fi/strings.xml b/facebook-login/src/main/res/values-fi/strings.xml
new file mode 100644
index 000000000..f2bffab23
--- /dev/null
+++ b/facebook-login/src/main/res/values-fi/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: fi_FI -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Tykkää</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Tykätty</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Kirjaudu ulos</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Kirjaudu sisään</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Kirjaudu Facebook-tunnuksilla</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Jatka Facebookissa</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Kirjautunut sisään nimellä %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Kirjauduttu sisään Facebook-tunnuksilla</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Kirjaudu ulos</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Peruuta</string>
+    <string name="com_facebook_loading" gender="unknown">Ladataan...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest-virhe</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-sisäänkirjautuminen edellyttää Internet-lupaa</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Sinä päätät - valitse mitkä tiedot haluat jakaa sovelluksille</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Kuvaa ladattaessa tapahtui yllättävä virhe.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Jaa</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Lähetä</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Siirry osoitteeseen &lt;b&gt;facebook.com/device&lt;/b&gt; ja anna oheinen koodi.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Liitä tilisi avaamalla Facebook-sovellus matkapuhelimellasi ja tarkistamalla ilmoitukset.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- TAI -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Vahvista sisäänkirjautuminen</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Jatka nimellä %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Etkö ole tämä henkilö?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-fr/strings.xml b/facebook-login/src/main/res/values-fr/strings.xml
new file mode 100644
index 000000000..5c84a76df
--- /dev/null
+++ b/facebook-login/src/main/res/values-fr/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: fr_FR -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">J’aime</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">J’aime déjà</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Déconnexion</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Connectez-vous</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Se connecter avec Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continuer avec Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Connecté(e) en tant que : %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Connecté(e) avec Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Déconnexion</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Annuler</string>
+    <string name="com_facebook_loading" gender="unknown">Chargement...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Erreur AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">La connexion à WebView nécessite une autorisation INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Vous avez le contrôle - choisissez les informations que vous voulez partager avec les apps.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Une erreur inattendue s’est produite lors du téléchargement d’une image.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Publier</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Envoyer</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Consultez &lt;b&gt;facebook.com/device&lt;/b&gt; et entrez le code affiché ci-dessus.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Pour associer votre compte, ouvrez l’app Facebook sur votre appareil mobile et vérifiez les notifications.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- OU -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Confirmer la connexion</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continuer en tant que %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Ce n’est pas vous ?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-gu/strings.xml b/facebook-login/src/main/res/values-gu/strings.xml
new file mode 100644
index 000000000..c91af5459
--- /dev/null
+++ b/facebook-login/src/main/res/values-gu/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: gu_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">પસંદ કરો</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ગમ્યું</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">લૉગ આઉટ કરો</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">લૉગ ઇન કરો</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook થી લૉગિન કરો</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook સાથે ચાલુ રાખો</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s: તરીકે લૉગ ઇન છે</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">તમે Facebook નો ઉપયોગ કરીને લોગ ઇન કર્યું છે</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">લૉગ આઉટ કરો</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">રદ કરો</string>
+    <string name="com_facebook_loading" gender="unknown">લોડ થઈ રહ્યું છે…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest ભૂલ</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView લૉગિનને ઇન્ટરનેટ પરવાનગીની જરૂર છે</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">તમે નિયંત્રણમાં છો - તમે એપ્લિકેશન્સ સાથે શું માહિતી શેર કરવા માંગો પસંદ કરો.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">છબી ડાઉનલોડ કરતી વખતે એક અનપેક્ષિત ભૂલ આવી.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">શેર કરો</string>
+    <string name="com_facebook_send_button_text" gender="unknown">મોકલો</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&amp;gt ની મુલકાત લો; અને ઉપર આપેલો કોડ દાખલ કરો.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">તમારા એકાઉન્ટ સાથે કનેક્ટ કરવા માટે, તમારા મોબાઇલ ઉપકરણ પર Facebook એપ્લિકેશન ખોલો અને સૂચનાઓ માટે તપાસો.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- અથવા -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">લૉગિનની પુષ્ટિ કરો</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s તરીકે ચાલુ રાખો</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">તમે નથી?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-hi/strings.xml b/facebook-login/src/main/res/values-hi/strings.xml
new file mode 100644
index 000000000..65b19888c
--- /dev/null
+++ b/facebook-login/src/main/res/values-hi/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: hi_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">पसंद करें</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">पसंद किया</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">लॉग आउट करें</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">लॉग इन</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook से लॉग इन करें</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook के साथ जारी रखें</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">इस रूप में लॉग इन हैं: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook का उपयोग करके लॉग इन किया है</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">लॉग आउट करें</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">रद्द करें</string>
+    <string name="com_facebook_loading" gender="unknown">लोड हो रहा है...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest गलती</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView लॉग इन के लिए इंटरनेट अनुमति आवश्यक है</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">नियंत्रण आपके पास है - चुनें कि आप एप्लिकेशन के साथ कौन सी जानकारी साझा करना चाहते हैं.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">चित्र डाउनलोड करते समय अनपेक्षित त्रुटि हुई.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">साझा करें</string>
+    <string name="com_facebook_send_button_text" gender="unknown">भेजें</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; पर विज़िट करें और ऊपर दिखाया गया कोड डालें.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">अपने खाते से कनेक्ट करने के लिए, अपने मोबाइल डिवाइस पर Facebook एप्लिकेशन खोलें और सूचनाएँ जाँचें.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- या -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">लॉग इन कन्फ़र्म करें</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s के रूप में जारी रखें</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">आप नहीं हैं?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-hr/strings.xml b/facebook-login/src/main/res/values-hr/strings.xml
new file mode 100644
index 000000000..016cdf947
--- /dev/null
+++ b/facebook-login/src/main/res/values-hr/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: hr_HR -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Sviđa mi se</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Označeno sa \"sviđa mi se\"</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Odjava</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Prijava</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Prijavi se putem Facebooka</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Nastavak uz Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Prijavljeni ste kao: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Prijavljeni ste putem Facebooka</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Odjava</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Odustani</string>
+    <string name="com_facebook_loading" gender="unknown">Učitavanje...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Pogreška AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Prijava WebView zahtijeva dopuštenje za INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Vi odlučujete – odaberite koje informacije želite podijeliti s aplikacijama.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Neočekivana pogreška prilikom preuzimanja slike.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Podijeli</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Pošalji</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Posjetitw &lt;b&gt;facebook.com/device&lt;/b&gt; i unesite gore prikazani kôd.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Za povezivanje svog računa otvorite aplikaciju Facebook na mobilnom uređaju i pročitajte obavijesti.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ILI -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Potvrdi prijavu</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Nastavite kao %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Ovo niste vi?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-hu/strings.xml b/facebook-login/src/main/res/values-hu/strings.xml
new file mode 100644
index 000000000..6dc9c20f2
--- /dev/null
+++ b/facebook-login/src/main/res/values-hu/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: hu_HU -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Tetszik</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Kedvelt</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Kijelentkezés</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Belépés</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Bejelentkezés Facebookkal</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Folytatás a Facebookkal</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Bejelentkezve %1$s néven</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Bejelentkezve a Facebook használatával</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Kijelentkezés</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Mégsem</string>
+    <string name="com_facebook_loading" gender="unknown">Betöltés…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest hiba</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">A WebView-bejelentkezéshez „INTERNET” jogosultság szükséges.</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Te irányítasz – válaszd ki, milyen adatokat szeretnél megosztani az alkalmazásokkal.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Váratlan hiba történt a kép letöltésekor.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Megosztás</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Küldés</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Keresd fel a &lt;b&gt;facebook.com/device&lt;/b&gt; címet, és írd be a fent megjelenített kódot.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">A fiók hozzákapcsolásához nyisd meg a mobilkészülékeden a Facebook alkalmazást, és nézd meg az értesítéseket.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- VAGY -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Bejelentkezés megerősítése</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Folytatás mint %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Nem te vagy az?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-in/strings.xml b/facebook-login/src/main/res/values-in/strings.xml
new file mode 100644
index 000000000..04ea86a53
--- /dev/null
+++ b/facebook-login/src/main/res/values-in/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: id_ID -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Suka</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Suka</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Keluar</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Masuk</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Masuk dengan Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Lanjutkan dengan Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Masuk sebagai: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Masuk menggunakan Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Keluar</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Batalkan</string>
+    <string name="com_facebook_loading" gender="unknown">Memuat…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Terjadi Kesalahan AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Masuk Tampilan Web memerlukan izin INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Anda memegang kendali - pilih info apa yang ingin Anda bagikan dengan aplikasi.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Kesalahan tak terduga ketika mengunduh gambar.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Bagikan</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Kirim</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Kunjungi &lt;b&gt;facebook.com/device&lt;/b&gt; dan masukkan kode yang ditampilkan di bawah ini.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Untuk menghubungkan akun Anda, buka aplikasi Facebook di perangkat seluler Anda dan lihat pemberitahuan.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ATAU -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Konfirmasikan Masuk</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Lanjutkan sebagai %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Bukan Anda?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-it/strings.xml b/facebook-login/src/main/res/values-it/strings.xml
new file mode 100644
index 000000000..06e864c95
--- /dev/null
+++ b/facebook-login/src/main/res/values-it/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: it_IT -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Mi piace</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Ti piace</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Esci</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Accedi</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Accedi con Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continua con Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Accesso effettuato come %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Accesso effettuato tramite Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Esci</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Annulla</string>
+    <string name="com_facebook_loading" gender="unknown">Caricamento in corso...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Errore AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">L\'accesso alla visualizzazione Web richiede le autorizzazioni Internet</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Il controllo è nelle tue mani: scegli quali informazioni condividere con le app.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Errore imprevisto durante il download dell\'immagine.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Condividi</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Invia</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; e inserisci il codice mostrato qui sotto.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Per connettere il tuo account, apri l\'app Facebook dal tuo dispositivo mobile e controlla le notifiche.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- oppure -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Conferma accesso</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continua come %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Non sei tu?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-iw/strings.xml b/facebook-login/src/main/res/values-iw/strings.xml
new file mode 100644
index 000000000..f04525a69
--- /dev/null
+++ b/facebook-login/src/main/res/values-iw/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: he_IL -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">אהבתי</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">אהבתי</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">התנתק/י</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">התחבר</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">התחברות באמצעות פייסבוק</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">המשך/המשיכי עם פייסבוק</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">מחובר/ת בתור: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">מחובר/ת כמשתמש בפייסבוק</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">התנתק/י</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">בטל</string>
+    <string name="com_facebook_loading" gender="unknown">טוען...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">שגיאת AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">התחברות WebView דורשת הרשאת אינטרנט</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">את/ה בשליטה - בחר/י אילו פרטים ברצונך לשתף עם אפליקציות.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">שגיאה לא צפויה במהלך הורדת תמונה.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">שתף/שתפי</string>
+    <string name="com_facebook_send_button_text" gender="unknown">שלח/י</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">יש לבקר בכתובת facebook.com/device&lt;/b&amp;gt ולהזין את הקוד המוצג למעלה</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">כדי לחבר את חשבונך, יש לפתוח את אפליקציית פייסבוק במכשיר הנייד ולבדוק אם יש התראות.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- או -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">אשר/י את ההתחברות</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">המשך/המשיכי בתור %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">לא את/ה?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-ja/strings.xml b/facebook-login/src/main/res/values-ja/strings.xml
new file mode 100644
index 000000000..c4ff47cc5
--- /dev/null
+++ b/facebook-login/src/main/res/values-ja/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ja_JP -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">いいね！</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">「いいね！」しました</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">ログアウト</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">ログイン</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebookでログイン</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebookでログイン</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$sとしてログイン中</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebookでログイン中</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">ログアウト</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">キャンセル</string>
+    <string name="com_facebook_loading" gender="unknown">読み込み中です…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifestエラー</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebViewにログインするには、インターネットへのアクセスが必要です</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">アプリと共有する情報をコントロールすることができます。</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">画像のダウンロードで何らかのエラーが発生しました。</string>
+    <string name="com_facebook_share_button_text" gender="unknown">シェアする</string>
+    <string name="com_facebook_send_button_text" gender="unknown">送信</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt;にアクセスして、上のコードを入力してください。</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">アカウントをリンクするには、モバイル機器でFacebookアプリを開いて、お知らせをご確認ください。</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- または -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">ログインを実行</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$sとしてログイン</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">別のアカウントでログイン</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-kn/strings.xml b/facebook-login/src/main/res/values-kn/strings.xml
new file mode 100644
index 000000000..d6ac550b0
--- /dev/null
+++ b/facebook-login/src/main/res/values-kn/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: kn_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">ಇಷ್ಟ</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ಇಷ್ಟಪಟ್ಟಿದ್ದಾರೆ</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">ಲಾಗ್ ಔಟ್</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">ಲಾಗ್ ಇನ್</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook ನೊಂದಿಗೆ ಲಾಗ್ ಇನ್ ಮಾಡಿ</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook ನೊಂದಿಗೆ ಮುಂದುವರಿಸಿ</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s ಎಂದು ಲಾಗಿನ್ ಮಾಡಲಾಗಿದೆ</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ಬಳಸಿ ಲಾಗಿನ್ ಮಾಡಲಾಗಿದೆ</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">ಲಾಗ್ ಔಟ್</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">ರದ್ದುಮಾಡು</string>
+    <string name="com_facebook_loading" gender="unknown">ಲೋಡ್ ಆಗುತ್ತಿದೆ...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Android ಮ್ಯಾನಿಫೆಸ್ಟ್ ದೋಷ</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">ವೆಬ್ ವೀಕ್ಷಣೆ ಲಾಗಿನ್‌ಗೆ ಇಂಟರ್ನೆಟ್ ಅನುಮತಿಯ ಅಗತ್ಯವಿದೆ</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">ನೀವು ನಿಯಂತ್ರಣದಲ್ಲಿದ್ದಿರಿ- ಅಪ್ಲಿಕೇಶನ್‌ಗಳೊಂದಿಗೆ ನೀವು ಯಾವ ಮಾಹಿತಿಯನ್ನು ಹಂಚಿಕೊಳ್ಳಬೇಕೆಂದು ಆಯ್ಕೆಮಾಡಿ.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">ಚಿತ್ರವನ್ನು ಡೌನ್‌ಲೋಡ್ ಮಾಡುವಾಗ ಅನಿರೀಕ್ಷಿತ ದೋಷ.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">ಹಂಚಿರಿ</string>
+    <string name="com_facebook_send_button_text" gender="unknown">ಕಳುಹಿಸಿ</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; ಗೆ ಭೇಟಿ ನೀಡಿ ಮತ್ತು ಮೇಲೆ ತೋರಿಸಿದ ಕೋಡ್ ಅನ್ನು ನಮೂದಿಸಿ.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">ನಿಮ್ಮ ಖಾತೆಯನ್ನು ಸಂಪರ್ಕಿಸಲು, ನಿಮ್ಮ ಮೊಬೈಲ್ ಸಾಧನದಲ್ಲಿ Facebook ಅಪ್ಲಿಕೇಶನ್ ತೆರೆಯಿರಿ ಮತ್ತು ಅಧಿಸೂಚನೆಗಳಿಗಾಗಿ ಪರಿಶೀಲಿಸಿ.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ಅಥವಾ -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">ಲಾಗಿನ್ ಖಚಿತಪಡಿಸಿ</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s ಎಂದು ಮುಂದುವರಿಸಿ</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">ನೀವಲ್ಲವೇ?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-ko/strings.xml b/facebook-login/src/main/res/values-ko/strings.xml
new file mode 100644
index 000000000..1e2b9b85b
--- /dev/null
+++ b/facebook-login/src/main/res/values-ko/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ko_KR -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">좋아요</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">좋아요</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">로그아웃</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">로그인</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook으로 로그인</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook으로 계속하기</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">로그인 사용자: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook을 사용하여 로그인함</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">로그아웃</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">취소</string>
+    <string name="com_facebook_loading" gender="unknown">읽어들이는 중...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest 오류</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView 로그인에 인터넷 권한이 필요합니다</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">앱과 공유할 정보를 자유롭게 선택할 수 있습니다.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">이미지를 다운로드하는 중 예기치 않은 오류가 발생했습니다.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">공유하기</string>
+    <string name="com_facebook_send_button_text" gender="unknown">보내기</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt;에 방문하여 위 코드를 입력하세요.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">계정에 연결하려면 모바일 기기에서 Facebook 앱을 열고 알림을 확인하세요.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- 또는 -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">로그인 확인</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s님으로 계속</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">회원님이 아닌가요?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-ml/strings.xml b/facebook-login/src/main/res/values-ml/strings.xml
new file mode 100644
index 000000000..17c55e1ea
--- /dev/null
+++ b/facebook-login/src/main/res/values-ml/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ml_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">ലൈക്കുചെയ്യുക</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ലൈക്കുചെയ്തു</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">ലോഗൗട്ട് ചെയ്യുക</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">ലോഗിന് ചെയ്യുക</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook ഉപയോഗിച്ച് ലോഗിൻ ചെയ്യുക</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook ഉപയോഗിച്ച് തുടരുക</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">എന്നയാളായി ലോഗ് ഇൻ ചെയ്‌തു: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ഉപയോഗിച്ച് ലോഗിൻ ചെയ്‌തു</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">ലോഗൗട്ട് ചെയ്യുക</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">റദ്ദാക്കുക</string>
+    <string name="com_facebook_loading" gender="unknown">ലോഡ് ചെയ്യുന്നു…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest പിശക്</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView ലോഗിൻ ചെയ്യാൻ ഇന്റർനെറ്റ് അനുമതി ആവശ്യമാണ്</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">നിങ്ങൾ നിയന്ത്രണത്തിലാണ് - ആപ്പുകൾ ഉപയോഗിച്ച് നിങ്ങൾക്ക് എന്ത് വിവരമാണ് പങ്കിടേണ്ടതെന്ന് തിരഞ്ഞെടുക്കുക.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">ഒരു ചിത്രം ഡൗൺലോഡുചെയ്യുമ്പോൾ അജ്ഞാതമായ പിശക് സംഭവിച്ചു.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">പങ്കിടുക</string>
+    <string name="com_facebook_send_button_text" gender="unknown">അയയ്ക്കുക</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; സന്ദർശിച്ച് മുകളിൽ കാണിച്ചിരിക്കുന്ന കോഡ് നൽകുക.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">നിങ്ങളുടെ അക്കൗണ്ട് കണക്‌റ്റ്ചെയ്യാൻ, നിങ്ങളുടെ മൊബൈൽ ഉപകരണത്തിലെ Facebook ആപ്പ് തുറന്ന് അറിയിപ്പുകൾ പരിശോധിക്കുക.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- അല്ലെങ്കിൽ -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">ലോഗിൻ സ്ഥിരീകരിക്കുക</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s എന്നയാളായി തുടരുക</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">നിങ്ങള്‍ അല്ലേ?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-mr/strings.xml b/facebook-login/src/main/res/values-mr/strings.xml
new file mode 100644
index 000000000..d01142746
--- /dev/null
+++ b/facebook-login/src/main/res/values-mr/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: mr_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">आवडले</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">पसंत केले</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">लॉग आउट करा</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">लॉग इन करा</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook सह लॉग इन करा</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook सह चालू ठेवा</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s म्हणून लॉग इन केले</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook वापरून लॉग इन केले</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">लॉग आउट करा</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">रद्द करा</string>
+    <string name="com_facebook_loading" gender="unknown">लोड करत आहे…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest त्रुटी</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView लॉग इन ला इंटरनेट परवानगीची आवश्यकता आहे</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">तुम्ही नियंत्रणात आहात - तुम्ही अॅपसह कोणती माहिती सामायिक करू इच्छिता ते निवडा.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">प्रतिमा डाउनलोड करत असताना अनपेक्षित त्रुटी आली.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">शेअर करा</string>
+    <string name="com_facebook_send_button_text" gender="unknown">पाठवा</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; भेट द्या आणि वरील कोड प्रविष्ट करा.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">तुमचे खाते कनेक्ट करण्यासाठी, तुमच्या मोबाईल उपकरणावर Facebook अॅप उघडा आणि सूचना तपासा.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- किंवा -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">लॉग इन पुष्टी करा</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s म्हणून चालू ठेवा</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">आपण नाही?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-ms/strings.xml b/facebook-login/src/main/res/values-ms/strings.xml
new file mode 100644
index 000000000..203791a31
--- /dev/null
+++ b/facebook-login/src/main/res/values-ms/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ms_MY -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Suka</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Disukai</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Log keluar</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Log masuk</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Log masuk dengan Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Teruskan dengan Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Dilog masuk sebagai %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Log masuk menggunakan Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Log keluar</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Batal</string>
+    <string name="com_facebook_loading" gender="unknown">Memuatkan...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Ralat AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Log masuk WebView memerlukan kebenaran INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Anda berada dalam kawalan - pilih maklumat yang anda mahu berkongsi dengan aplikasi.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Ralat tidak dijangka semasa memuat turun imej.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Kongsi</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Hantar</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Lawati &lt;b&gt;facebook.com/device&lt;/b&gt; dan masukkan kod yang ditunjukkan di atas.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Untuk menyambungkan akaun anda, buka aplikasi Facebook pada peranti mudah alih anda, dan semak untuk pemberitahuan.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ATAU -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Sahkan Log Masuk</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Teruskan sebagai %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Bukan anda?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-nb/strings.xml b/facebook-login/src/main/res/values-nb/strings.xml
new file mode 100644
index 000000000..014e5d823
--- /dev/null
+++ b/facebook-login/src/main/res/values-nb/strings.xml
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: nb_NO -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Liker</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Likt</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Logg av</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Logg inn</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Logg inn med Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Fortsett med Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Logget inn som %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Innlogget med Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Logg av</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Avbryt</string>
+    <string name="com_facebook_loading" gender="unknown">Laster inn ...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest-feil</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-innlogging krever INTERNETT-tillatelse</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Du bestemmer – velg hvilke opplysninger du vil dele med apper.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Det oppstod en uvented feil under nedlasting av et bilde.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Del</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Gå til &lt;b&gt;facebook.com/device&lt;/b&gt; og skriv inn koden som vises over.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Koble til kontoen din ved å åpne Facebook-appen på mobilenheten din og se etter varsler.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">– ELLER –</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Bekreft innlogging</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Fortsett som %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Ikke deg?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-nl/strings.xml b/facebook-login/src/main/res/values-nl/strings.xml
new file mode 100644
index 000000000..32ebcc148
--- /dev/null
+++ b/facebook-login/src/main/res/values-nl/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: nl_NL -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Vind ik leuk</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Vind ik leuk</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Afmelden</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Aanmelden</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Aanmelden met Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Doorgaan met Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Aangemeld als: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Aangemeld via Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Afmelden</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Annuleren</string>
+    <string name="com_facebook_loading" gender="unknown">Laden...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest-fout</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Voor WebView-aanmelding is INTERNET-toestemming vereist</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Jij hebt de controle: bepaal welke informatie je met apps wilt delen.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Onverwachte fout bij downloaden van afbeelding.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Delen</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Verzenden</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Ga naar &lt;b&gt;facebook.com/device&lt;/b&gt; en voer de bovenstaande code in.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Als je je account wilt koppelen, open je de Facebook-app op je mobiele apparaat en controleer je je meldingen.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- OF -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Aanmelding bevestigen</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Doorgaan als %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Ben jij dit niet?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-pa/strings.xml b/facebook-login/src/main/res/values-pa/strings.xml
new file mode 100644
index 000000000..1c52a62c5
--- /dev/null
+++ b/facebook-login/src/main/res/values-pa/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: pa_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">ਪਸੰਦ ਕਰੋ</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ਪਸੰਦ ਕੀਤਾ</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">ਲੌਗ ਆਉਟ ਕਰੋ</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">ਲਾਗ ਇਨ</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook ਦੇ ਨਾਲ ਲੌਗ ਇਨ ਕਰੋ</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook ਨਾਲ ਜਾਰੀ ਰੱਖੋ</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">ਇਸ ਵੱਜੋਂ ਲੌਗ ਇਨ ਕੀਤਾ ਗਿਆ: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ਦੀ ਵਰਤੋਂ ਕਰਦੇ ਹੋਏ ਲੌਗ ਇਨ ਕਰੋ</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">ਲੌਗ ਆਉਟ ਕਰੋ</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">ਰੱਦ ਕਰੋ</string>
+    <string name="com_facebook_loading" gender="unknown">ਲੋਡ ਹੋ ਰਿਹਾ ਹੈ...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest ਤਰੁੱਟੀ</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView ਵਿੱਚ ਲੌਗ ਇਨ ਕਰਨ ਲਈ ਇੰਟਰਨੈੱਟ ਦੀ ਇਜਾਜ਼ਤ ਦੀ ਲੋੜ ਹੈ</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">ਤੁਸੀਂ ਨਿਯੰਤਰਣ ਵਿੱਚ ਹੋ - ਇਹ ਚੁਣੋ ਕਿ ਐਪਾਂ ਨਾਲ ਤੁਸੀਂ ਕਿਹੜੀ ਜਾਣਕਾਰੀ ਨੂੰ ਸਾਂਝਾ ਕਰਨਾ ਚਾਹੁੰਦੇ ਹੋ।</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">ਇੱਕ ਚਿੱਤਰ ਡਾਉਨਲੋਡ ਕਰਨ ਦੌਰਾਨ ਅਕਲਪਿਤ ਤਰੁੱਟੀ।</string>
+    <string name="com_facebook_share_button_text" gender="unknown">ਸਾਂਝਾ ਕਰੋ</string>
+    <string name="com_facebook_send_button_text" gender="unknown">ਭੇਜੋ</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; \'ਤੇ ਵਿਜਿਟ ਕਰੋ ਅਤੇ ਉੱਪਰ ਦਿੱਤੇ ਕੋਡ ਨੂੰ ਦਾਖ਼ਲ ਕਰੋ।</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">ਆਪਣੇ ਖਾਤੇ ਨੂੰ ਕਨੈਕਟ ਕਰਨ ਲਈ, ਮੋਬਾਈਲ ਡਿਵਾਈਸ \'ਤੇ Facebook ਐਪ ਖੋਲ੍ਹੋ ਅਤੇ ਸੂਚਨਾਵਾਂ ਦੀ ਜਾਂਚ ਕਰੋ।</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ਜਾਂ -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">ਲੌਗ ਇਨ ਦੀ ਪੁਸ਼ਟੀ ਕਰੋ</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s ਵਜੋਂ ਜਾਰੀ ਰੱਖੋ</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">ਇਹ ਤੁਸੀਂ ਨਹੀਂ ਹੋ?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-pl/strings.xml b/facebook-login/src/main/res/values-pl/strings.xml
new file mode 100644
index 000000000..7f09f3e1b
--- /dev/null
+++ b/facebook-login/src/main/res/values-pl/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: pl_PL -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Lubię to!</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Lubisz to</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Wyloguj się</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Logowanie się</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Zaloguj się przez Facebooka</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Kontynuuj za pośrednictwem Facebooka</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Zalogowano jako: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Zalogowano przy użyciu Facebooka</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Wyloguj się</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Anuluj</string>
+    <string name="com_facebook_loading" gender="unknown">Ładowanie…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Błąd AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Logowanie WebView wymaga uprawnienia INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Zachowujesz kontrolę — wybierz informacje, które chcesz udostępniać w aplikacjach.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Nieoczekiwany błąd podczas pobierania obrazu.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Udostępnij</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Wyślij</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Odwiedź stronę &lt;b&gt;facebook.com/device&lt;/b&gt; i wprowadź powyższy kod.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Aby połączyć konto, otwórz aplikację Facebook na urządzeniu mobilnym i sprawdź powiadomienia.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- LUB -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Potwierdź logowanie</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Kontynuuj jako %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">To nie Ty?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-pt-rPT/strings.xml b/facebook-login/src/main/res/values-pt-rPT/strings.xml
new file mode 100644
index 000000000..c4c84ff99
--- /dev/null
+++ b/facebook-login/src/main/res/values-pt-rPT/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: pt_PT -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Gosto</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Gostaste</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Terminar a sessão</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Iniciar sessão</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Iniciar sessão com o Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continuar com o Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Com sessão iniciada como %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Com sessão iniciada com o Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Terminar a sessão</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Cancelar</string>
+    <string name="com_facebook_loading" gender="unknown">A carregar...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Erro AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">O início de sessão WebView requer a permissão INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Tens o controlo. Escolhe as informações que queres partilhar com as apps.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Ocorreu um erro inesperado ao descarregar uma imagem.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Partilhar</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Enviar</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; e insere o código apresentado abaixo.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Para associares a tua conta, abre a app Facebook no teu dispositivo móvel e consulta as notificações.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- OU -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Confirmar início de sessão</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continuar como %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Não és tu?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-pt/strings.xml b/facebook-login/src/main/res/values-pt/strings.xml
new file mode 100644
index 000000000..129a4baa7
--- /dev/null
+++ b/facebook-login/src/main/res/values-pt/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: pt_BR -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Curtir</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Curtiu</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Sair</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Entrar</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Entrar com o Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Continuar com o Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Conectado como: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Conectado usando o Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Sair</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Cancelar</string>
+    <string name="com_facebook_loading" gender="unknown">Carregando...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Erro AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">O login do WebView exige permissão da INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Você está no controle — escolha quais informações você quer compartilhar com os aplicativos.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Erro inesperado ao baixar uma imagem.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Compartilhar</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Enviar</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Acesse &lt;b&gt;facebook.com/device&lt;/b&gt; e insira o código mostrado acima.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Para conectar sua conta, abra o aplicativo do Facebook no seu dispositivo móvel e verifique se há notificações.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- OU -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Confirmar login</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Continuar como %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Não é você?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-ru/strings.xml b/facebook-login/src/main/res/values-ru/strings.xml
new file mode 100644
index 000000000..a3a7568a6
--- /dev/null
+++ b/facebook-login/src/main/res/values-ru/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ru_RU -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Нравится</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Нравится</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Выйти</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Войти</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Вход через Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Продолжить с Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Вы вошли как %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Выполнен вход через Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Выйти</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Отмена</string>
+    <string name="com_facebook_loading" gender="unknown">Загрузка...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Ошибка AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Для входа через WebView необходимо разрешение INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Контроль над данными — выберите, какой информацией вы хотите делиться с приложениями.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Неожиданная ошибка при скачивании изображения.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Поделиться</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Отправить</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Откройте &lt;b&gt;facebook.com/device&lt;/b&gt; и введите код, показанный выше.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Чтобы привязать ваш аккаунт, откройте приложение Facebook на своем мобильном устройстве и проверьте уведомления.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ИЛИ -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Подтвердите вход</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Продолжить как %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Не Вы?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-sk/strings.xml b/facebook-login/src/main/res/values-sk/strings.xml
new file mode 100644
index 000000000..3c03ba982
--- /dev/null
+++ b/facebook-login/src/main/res/values-sk/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: sk_SK -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Páči sa mi to</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Páčilo sa mi to</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Odhlásiť sa</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Prihlásiť sa</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Prihlásiť sa cez Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Pokračovať s Facebookom</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Prihlásený/-á ako: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Prihlásený/-á cez Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Odhlásiť sa</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Zrušiť</string>
+    <string name="com_facebook_loading" gender="unknown">Načítava sa…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Chyba AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Na prihlásenie cez WebView sa vyžaduje povolenie internetu</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Máte to pod kontrolou: vy určujete, ktoré informácie chcete zdieľať s aplikáciami.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Pri sťahovaní obrázka sa vyskytla neočakávaná chyba.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Zdieľať</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Poslať</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Navštívte stránku &lt;b&gt;facebook.com/device&lt;/b&gt; a zadajte kód zobrazený vyššie.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Ak si chcete pripojiť účet, vo svojom mobilnom zariadení otvorte aplikáciu Facebook a pozrite si upozornenia.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ALEBO -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Potvrdiť prihlásenie</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Pokračovať ako %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Nie ste to vy?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-sv/strings.xml b/facebook-login/src/main/res/values-sv/strings.xml
new file mode 100644
index 000000000..cf95c35ad
--- /dev/null
+++ b/facebook-login/src/main/res/values-sv/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: sv_SE -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Gilla</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Gillat</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Logga ut</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Logga in</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Logga in med Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Fortsätt med Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Inloggad som: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Inloggad med Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Logga ut</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Avbryt</string>
+    <string name="com_facebook_loading" gender="unknown">Laddar ...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest-fel</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView-inloggning kräver INTERNET-åtkomst</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Du bestämmer – välj vilken information du vill dela med appar.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Ett oväntat fel inträffade när en bild skulle laddas ned.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Dela</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Skicka</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Gå till &lt;b&gt;facebook.com/device&lt;/b&gt; och skriv in koden som visas ovan.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Koppla ditt konto genom att öppna Facebook-appen på din mobila enhet och leta efter aviseringar.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- ELLER -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Bekräfta inloggning</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Fortsätt som %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Inte du?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-ta/strings.xml b/facebook-login/src/main/res/values-ta/strings.xml
new file mode 100644
index 000000000..7508b4d25
--- /dev/null
+++ b/facebook-login/src/main/res/values-ta/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: ta_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">பிடித்திருக்கிறது</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">விரும்பியவை</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">வெளியேறு</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">உள்நுழையவும்</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook மூலம் உள்நுழையவும்</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook மூலம் தொடரவும்</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s ஆக உள்நுழைந்துள்ளீர்கள்</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ஐப் பயன்படுத்தி உள்நுழைந்துள்ளீர்கள்</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">வெளியேறு</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">ரத்துசெய்</string>
+    <string name="com_facebook_loading" gender="unknown">ஏற்றுகிறது…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest பிழை</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView உள்நுழைவுக்கு இணைய அனுமதித் தேவை</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">கட்டுப்பாடு உங்களிடம் உள்ளது. பயன்பாடுகளுடன் நீங்கள் பகிர விரும்பும் தகவல்களைத் தேர்வுசெய்யவும்.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">படத்தைப் பதிவிறக்கும்போது எதிர்பாராத பிழை ஏற்பட்டது.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">பகிர்</string>
+    <string name="com_facebook_send_button_text" gender="unknown">அனுப்பு</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; ஐப் பார்வையிட்டு, மேலே காட்டப்பட்ட குறியீட்டை உள்ளிடவும்.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">உங்கள் கணக்கை இணைக்க, உங்கள் மொபைல் சாதனத்தில் Facebook பயன்பாட்டைத் திறந்து, அறிவிப்புகளைப் பார்க்கவும்.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- அல்லது -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">உள்நுழைதலை உறுதிப்படுத்தவும்</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s ஆகத் தொடர்</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">நீங்கள் அல்ல?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-te/strings.xml b/facebook-login/src/main/res/values-te/strings.xml
new file mode 100644
index 000000000..d8546f72c
--- /dev/null
+++ b/facebook-login/src/main/res/values-te/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: te_IN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">ఇష్టం</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ఇష్టపడ్డారు</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">లాగ్ అవుట్ చేయండి</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">లాగిన్</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebookతో లాగిన్ చేయండి</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebookతో కొనసాగించు</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">వీరి వలె లాగిన్ చేసారు: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebookని ఉపయోగించి లాగిన్ చేసారు</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">లాగ్ అవుట్ చేయండి</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">రద్దు చేయి</string>
+    <string name="com_facebook_loading" gender="unknown">లోడ్ చేస్తోంది…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest లోపం</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView లాగిన్ కోసం ఇంటర్నెట్ అనుమతి అవసరమవుతుంది</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">మీరు నియంత్రణలో ఉన్నారు - మీరు ఏ సమాచారాన్ని అనువర్తనాలతో పంచుకోవాలనుకుంటున్నారో ఎంచుకోండి.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">ఒక చిత్రాన్ని డౌన్‌లోడ్ చేయడంలో అనుకోని లోపం సంభవించింది.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">భాగస్వామ్యం చేయి</string>
+    <string name="com_facebook_send_button_text" gender="unknown">పంపండి</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt;ని సందర్శించి ఎగువన చూపిన కోడ్‌ను నమోదు చేయండి.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">మీ ఖాతాను అనుసంధానించేందుకు, మీ మొబైల్ పరికరంలో Facebook అనువర్తనాన్ని తెరిచి నోటిఫికేషన్‌లను తనిఖీ చేయండి.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- లేదా -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">లాగిన్‌ను నిర్ధారించండి</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$sగా కొనసాగండి</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">మీరు కాదా?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-th/strings.xml b/facebook-login/src/main/res/values-th/strings.xml
new file mode 100644
index 000000000..d39dedcab
--- /dev/null
+++ b/facebook-login/src/main/res/values-th/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: th_TH -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">ถูกใจ</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">ถูกใจแล้ว</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">ออกจากระบบ</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">เข้าสู่ระบบ</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">เข้าสู่ระบบด้วย Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">ดำเนินการต่อด้วย Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">เข้าสู่ระบบแล้วในชื่อ %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">เข้าสู่ระบบแล้วโดยใช้ Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">ออกจากระบบ</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">ยกเลิก</string>
+    <string name="com_facebook_loading" gender="unknown">กำลังโหลด...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">ข้อผิดพลาด AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">การเข้าสู่ระบบ WebView ต้องได้รับสิทธิ์การอนุญาตอินเทอร์เน็ต</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">คุณควบคุมได้ เลือกว่าคุณต้องการแชร์ข้อมูลใดกับแอพ</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">เกิดข้อผิดพลาดที่ไม่คาดคิดขณะดาวน์โหลดภาพ</string>
+    <string name="com_facebook_share_button_text" gender="unknown">แชร์</string>
+    <string name="com_facebook_send_button_text" gender="unknown">ส่ง</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">ไปที่ &lt;b&gt;facebook.com/device&lt;/b&gt; แล้วป้อนรหัสที่ปรากฏด้านล่าง</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">หากต้องการเชื่อมต่อกับบัญชีผู้ใช้ของคุณ ให้เปิดแอพ Facebook บนอุปกรณ์มือถือของคุณแล้วตรวจสอบการแจ้งเตือน</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- หรือ -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">ยืนยันการเข้าสู่ระบบ</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">ดำเนินการต่อในชื่อ %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">ไม่ใช่คุณใช่ไหม</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-tl/strings.xml b/facebook-login/src/main/res/values-tl/strings.xml
new file mode 100644
index 000000000..a276ac020
--- /dev/null
+++ b/facebook-login/src/main/res/values-tl/strings.xml
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: tl_PH -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Gusto ko ito</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Nagustuhan</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Mag-log out</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Mag-log in</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Mag-log in sa Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Magpatuloy gamit ang Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Mag-log-in bilang: %1$s.</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Naka-log in gamit ang Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Mag-log out</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Kanselahin</string>
+    <string name="com_facebook_loading" gender="unknown">Naglo-load...</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Ang pag-log in sa WebView ay nangangailangan ng pahintulot sa INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Ikaw ang may kontrol - piliin anong impormasyon ang gusto mong i-share sa mga app.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Hindi inaasahang error habang dina-download ang larawan.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">I-share</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Ipadala</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Puntahan ang &lt;b&gt;facebook.com/device&lt;/b&gt; at ilagay ang code na ipinapakita sa itaas.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Para ikonekta ang iyong account, buksan ang Facebook app sa iyong cellphone at tumingin ng mga notification.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- O -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">I-confirm ang Pag-log in</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Magpatuloy bilang %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Hindi ikaw?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-tr/strings.xml b/facebook-login/src/main/res/values-tr/strings.xml
new file mode 100644
index 000000000..c77ce01e4
--- /dev/null
+++ b/facebook-login/src/main/res/values-tr/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: tr_TR -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Beğen</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Beğendin</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Çıkış Yap</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Giriş yap</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Facebook ile Giriş Yap</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Facebook ile Devam Et</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">%1$s olarak giriş yapıldı</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Facebook ile giriş yapıldı</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Çıkış Yap</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">İptal</string>
+    <string name="com_facebook_loading" gender="unknown">Yükleniyor...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest Hatası</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView girişi için İNTERNET izni gerekiyor</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Kontrol sende - uygulamalarla paylaşmak istediğin bilgileri seç.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Görüntü indirilirken beklenmedik bir hata oluştu.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Paylaş</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Gönder</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">&lt;b&gt;facebook.com/device&lt;/b&gt; adresine git ve yukarıda gösterilen kodu gir.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Hesabını bağlamak için, mobil cihazında Facebook uygulamasını aç ve bildirimleri kontrol et.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- VEYA -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Girişi Onayla</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">%1$s olarak devam et</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Siz değil misiniz?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-vi/strings.xml b/facebook-login/src/main/res/values-vi/strings.xml
new file mode 100644
index 000000000..90901c711
--- /dev/null
+++ b/facebook-login/src/main/res/values-vi/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: vi_VN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">Thích</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">Đã thích</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">Đăng xuất</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">Đăng nhập</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">Đăng nhập bằng Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">Tiếp tục với Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">Đã đăng nhập với tên: %1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">Đã đăng nhập bằng Facebook</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">Đăng xuất</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">Hủy</string>
+    <string name="com_facebook_loading" gender="unknown">Đang tải…</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">Lỗi AndroidManifest</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">Đăng nhập chế độ xem web yêu cầu quyền INTERNET</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">Bạn nắm quyền kiểm soát - chọn thông tin bạn muốn chia sẻ với ứng dụng.</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">Lỗi không mong muốn khi tải hình ảnh xuống.</string>
+    <string name="com_facebook_share_button_text" gender="unknown">Chia sẻ</string>
+    <string name="com_facebook_send_button_text" gender="unknown">Gửi</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">Truy cập &lt;b&gt;facebook.com/device&lt;/b&gt; và nhập mã được hiển thị bên trên.</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">Để kết nối tài khoản của bạn, hãy mở ứng dụng Facebook trên thiết bị di động và kiểm tra thông báo.</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- HOẶC -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">Xác nhận đăng nhập</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">Tiếp tục với tư cách %1$s</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">Không phải bạn?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-zh-rCN/strings.xml b/facebook-login/src/main/res/values-zh-rCN/strings.xml
new file mode 100644
index 000000000..125758e72
--- /dev/null
+++ b/facebook-login/src/main/res/values-zh-rCN/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: zh_CN -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">赞</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">赞了</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">注销</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">登录</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">使用 Facebook 登录</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">前往 Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">登录身份：%1$s</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">已通过 Facebook 登录</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">注销</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">取消</string>
+    <string name="com_facebook_loading" gender="unknown">正在加载...</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest 错误</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView 登录需要访问网络</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">应用分享内容由你掌控。</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">下载图片时出现意外错误。</string>
+    <string name="com_facebook_share_button_text" gender="unknown">分享</string>
+    <string name="com_facebook_send_button_text" gender="unknown">发送</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">请访问&lt;b&gt;facebook.com/device&lt;/b&gt;并输入以上验证码。</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">要关联帐户，请在移动设备上打开 Facebook 应用并查看通知。</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- 或 -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">确认登录</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">以%1$s的身份继续</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">不是你？</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-zh-rHK/strings.xml b/facebook-login/src/main/res/values-zh-rHK/strings.xml
new file mode 100644
index 000000000..13d2ecfcf
--- /dev/null
+++ b/facebook-login/src/main/res/values-zh-rHK/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: zh_HK -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">讚好</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">已讚好</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">登出</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">登入</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">使用 Facebook 登入</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">繼續使用 Facebook 帳戶</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">以%1$s身分登入</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">已使用 Facebook 登入</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">登出</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">取消</string>
+    <string name="com_facebook_loading" gender="unknown">載入中......</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest 錯誤</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView 登入需要網絡使用權限</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">一切由你掌握：自行選擇要分享給應用程式的資訊種類。</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">下載圖像時發生沒有預期的錯誤。</string>
+    <string name="com_facebook_share_button_text" gender="unknown">分享</string>
+    <string name="com_facebook_send_button_text" gender="unknown">送出</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">前往&lt;b&gt;facebook.com/device&lt;/b&amp;gt，並輸入上方顯示的代碼。</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">若要連結帳戶，請在流動裝置上開啟 Facebook 應用程式，然後查看通知。</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- 或 -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">確認登入</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">以%1$s的身分繼續</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">不是你嗎？</string>
+</resources>
diff --git a/facebook-login/src/main/res/values-zh-rTW/strings.xml b/facebook-login/src/main/res/values-zh-rTW/strings.xml
new file mode 100644
index 000000000..8f08dc11e
--- /dev/null
+++ b/facebook-login/src/main/res/values-zh-rTW/strings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- See fburl.com/140690840 for information about i18n on Android -->
+<!-- @generated -->
+<!-- FB Locale: zh_TW -->
+
+<resources exclude-from-buck-resource-map="true">
+    <string name="com_facebook_like_button_not_liked" gender="unknown">讚</string>
+    <string name="com_facebook_like_button_liked" gender="unknown">已說讚</string>
+    <string name="com_facebook_loginview_log_out_button" gender="unknown">登出</string>
+    <string name="com_facebook_loginview_log_in_button" gender="unknown">登入</string>
+    <string name="com_facebook_loginview_log_in_button_long" gender="unknown">使用 Facebook 帳號登入</string>
+    <string name="com_facebook_loginview_log_in_button_continue" gender="unknown">繼續使用 Facebook 帳號</string>
+    <string name="com_facebook_loginview_logged_in_as" gender="unknown">以%1$s身分登入</string>
+    <string name="com_facebook_loginview_logged_in_using_facebook" gender="unknown">已使用 Facebook 登入</string>
+    <string name="com_facebook_loginview_log_out_action" gender="unknown">登出</string>
+    <string name="com_facebook_loginview_cancel_action" gender="unknown">取消</string>
+    <string name="com_facebook_loading" gender="unknown">載入中......</string>
+    <string name="com_facebook_internet_permission_error_title" gender="unknown">AndroidManifest 錯誤</string>
+    <string name="com_facebook_internet_permission_error_message" gender="unknown">WebView 登入需要網路使用權限</string>
+    <string name="com_facebook_tooltip_default" gender="unknown">一切操之在你：自行選擇要分享給應用程式的資訊種類。</string>
+    <string name="com_facebook_image_download_unknown_error" gender="unknown">下載圖像時無預警發生錯誤。</string>
+    <string name="com_facebook_share_button_text" gender="unknown">分享</string>
+    <string name="com_facebook_send_button_text" gender="unknown">送出</string>
+    <string name="com_facebook_device_auth_instructions" gender="unknown">前往&lt;b&gt;facebook.com/device&lt;/b&amp;gt，並輸入上方顯示的代碼。</string>
+    <string name="com_facebook_smart_device_instructions" gender="unknown">若要連結帳號，請在行動裝置上開啟 Facebook 應用程式，然後查看通知。</string>
+    <string name="com_facebook_smart_device_instructions_or" gender="unknown">- 或 -</string>
+    <string name="com_facebook_smart_login_confirmation_title" gender="unknown">確認登入</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as" gender="unknown">以%1$s的身分繼續</string>
+    <string name="com_facebook_smart_login_confirmation_cancel" gender="unknown">不是你？</string>
+</resources>
diff --git a/facebook-login/src/main/res/values/attrs.xml b/facebook-login/src/main/res/values/attrs.xml
new file mode 100644
index 000000000..de33f5492
--- /dev/null
+++ b/facebook-login/src/main/res/values/attrs.xml
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <declare-styleable name="com_facebook_login_view">
+        <attr name="com_facebook_confirm_logout" format="boolean"/>
+        <attr name="com_facebook_login_text" format="string"/>
+        <attr name="com_facebook_logout_text" format="string"/>
+        <attr name="com_facebook_tooltip_mode">
+            <!-- Keep in sync with Enums in LoginButton -->
+            <enum name="automatic" value="0" />
+            <enum name="display_always" value="1" />
+            <enum name="never_display" value="2" />
+        </attr>
+    </declare-styleable>
+    <declare-styleable name="com_facebook_profile_picture_view">
+        <attr name="com_facebook_preset_size">
+            <!-- Keep in sync with constants in ProfilePictureView -->
+            <enum name="small" value="-2" />
+            <enum name="normal" value="-3" />
+            <enum name="large" value="-4" />
+        </attr>
+        <attr name="com_facebook_is_cropped" format="boolean" />
+    </declare-styleable>
+</resources>
diff --git a/facebook-login/src/main/res/values/dimens.xml b/facebook-login/src/main/res/values/dimens.xml
new file mode 100644
index 000000000..8f968aaf7
--- /dev/null
+++ b/facebook-login/src/main/res/values/dimens.xml
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <dimen name="com_facebook_button_login_corner_radius">3dp</dimen>
+
+    <dimen name="com_facebook_profilepictureview_preset_size_small">50dp</dimen>
+    <dimen name="com_facebook_profilepictureview_preset_size_normal">100dp</dimen>
+    <dimen name="com_facebook_profilepictureview_preset_size_large">180dp</dimen>
+
+</resources>
diff --git a/facebook-login/src/main/res/values/strings.xml b/facebook-login/src/main/res/values/strings.xml
new file mode 100644
index 000000000..af7262eaa
--- /dev/null
+++ b/facebook-login/src/main/res/values/strings.xml
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
+    <string name="com_facebook_like_button_not_liked">Like</string>
+    <string name="com_facebook_like_button_liked">Liked</string>
+    <string name="com_facebook_loginview_log_out_button">Log out</string>
+    <string name="com_facebook_loginview_log_in_button">Log in</string>
+    <string name="com_facebook_loginview_log_in_button_long">Log in with Facebook</string>
+    <string name="com_facebook_loginview_log_in_button_continue">Continue with Facebook</string>
+    <string name="com_facebook_loginview_logged_in_as">Logged in as: <xliff:g id="user name">%1$s</xliff:g></string>
+    <string name="com_facebook_loginview_logged_in_using_facebook">Logged in using Facebook</string>
+    <string name="com_facebook_loginview_log_out_action">Log out</string>
+    <string name="com_facebook_loginview_cancel_action">Cancel</string>
+    <string name="com_facebook_loading">Loading&#8230;</string>
+    <string name="com_facebook_internet_permission_error_title">AndroidManifest Error</string>
+    <string name="com_facebook_internet_permission_error_message">WebView login requires INTERNET permission</string>
+    <string name="com_facebook_tooltip_default">You\'re in control - choose what info you want to share with apps.</string>
+    <string name="com_facebook_image_download_unknown_error">Unexpected error while downloading an image.</string>
+    <string name="com_facebook_share_button_text">Share</string>
+    <string name="com_facebook_send_button_text">Send</string>
+    <string name="com_facebook_device_auth_instructions">Visit &lt;b&gt;facebook.com/device&lt;/b&gt; and enter the code shown above.</string>
+    <string name="com_facebook_smart_device_instructions">To connect your account, open the Facebook app on your mobile device and check for notifications.</string>
+    <string name="com_facebook_smart_device_instructions_or">- OR -</string>
+    <string name="com_facebook_smart_login_confirmation_title">Confirm Login</string>
+    <string name="com_facebook_smart_login_confirmation_continue_as">Continue as <xliff:g id="user name">%1$s</xliff:g></string>
+    <string name="com_facebook_smart_login_confirmation_cancel">Not you?</string>
+</resources>
diff --git a/facebook-login/src/main/res/values/styles.xml b/facebook-login/src/main/res/values/styles.xml
new file mode 100644
index 000000000..b930e2c1f
--- /dev/null
+++ b/facebook-login/src/main/res/values/styles.xml
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <color name="com_facebook_button_login_background_color">#4267b2</color>
+    <color name="com_facebook_button_login_silver_background_color">#f4f6f8</color>
+    <color name="com_facebook_button_login_silver_background_color_pressed">#e9eaf0</color>
+
+    <style name="tooltip_bubble_text">
+        <item name="android:textColor">@android:color/white</item>
+        <item name="android:gravity">left</item>
+        <item name="android:textSize">12sp</item>
+        <item name="android:shadowDy">-1</item>
+        <item name="android:shadowRadius">0.25</item>
+        <item name="android:shadowColor">#40000000</item>
+    </style>
+
+    <style name="com_facebook_loginview_silver_style" parent="com_facebook_loginview_default_style">
+        <item name="android:background">@drawable/com_facebook_button_login_silver_background</item>
+        <item name="android:drawableLeft">@null</item>
+        <item name="android:textColor">#4b5164</item>
+    </style>
+
+    <style name="com_facebook_loginview_default_style" parent="com_facebook_button">
+        <item name="android:background">@drawable/com_facebook_button_login_background</item>
+        <item name="android:drawablePadding">5dp</item>
+        <item name="android:paddingLeft">6dp</item>
+        <item name="android:paddingRight">6dp</item>
+        <item name="android:textSize">13.0dp</item>
+    </style>
+
+</resources>
diff --git a/facebook-messenger/.gitignore b/facebook-messenger/.gitignore
new file mode 100644
index 000000000..796b96d1c
--- /dev/null
+++ b/facebook-messenger/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/facebook-messenger/build.gradle b/facebook-messenger/build.gradle
new file mode 100644
index 000000000..cfb6a4346
--- /dev/null
+++ b/facebook-messenger/build.gradle
@@ -0,0 +1,47 @@
+apply plugin: 'com.android.library'
+
+project.group 'com.facebook.android'
+
+project.ext.name = 'Facebook-Messenger-Android-SDK'
+project.ext.artifactId = "facebook-messenger"
+project.ext.description = 'Facebook Messenger Android SDK'
+project.ext.url = 'https://github.com/facebook/facebook-android-sdk/facebook-messenger'
+
+dependencies {
+    // Facebook Dependencies
+    compile project(':facebook-core')
+}
+
+android {
+    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
+    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
+
+    defaultConfig {
+        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
+        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
+        consumerProguardFiles 'proguard-rules.pro'
+        vectorDrawables.useSupportLibrary = true
+    }
+
+    aaptOptions {
+        additionalParameters "--no-version-vectors"
+    }
+
+    lintOptions {
+        abortOnError false
+    }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_7
+        targetCompatibility JavaVersion.VERSION_1_7
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+apply from: "${rootDir}/maven.gradle"
diff --git a/facebook-messenger/proguard-rules.pro b/facebook-messenger/proguard-rules.pro
new file mode 100644
index 000000000..b19a92289
--- /dev/null
+++ b/facebook-messenger/proguard-rules.pro
@@ -0,0 +1,33 @@
+# To enable ProGuard in your project, edit project.properties
+# to define the proguard.config property as described in that file.
+#
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in ${sdk.dir}/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the ProGuard
+# include property in project.properties.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+-keepclassmembers class * implements java.io.Serializable {
+    private static final java.io.ObjectStreamField[] serialPersistentFields;
+    private void writeObject(java.io.ObjectOutputStream);
+    private void readObject(java.io.ObjectInputStream);
+    java.lang.Object writeReplace();
+    java.lang.Object readResolve();
+}
+
+-keepnames class com.facebook.FacebookActivity
+-keepnames class com.facebook.CustomTabActivity
+
+-keep class com.facebook.messenger.Messenger
diff --git a/facebook-messenger/src/main/AndroidManifest.xml b/facebook-messenger/src/main/AndroidManifest.xml
new file mode 100644
index 000000000..54dc91386
--- /dev/null
+++ b/facebook-messenger/src/main/AndroidManifest.xml
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.facebook.messenger">
+
+    <application android:supportsRtl="true">
+
+    </application>
+
+</manifest>
diff --git a/facebook-messenger/src/main/java/com/facebook/messenger/Messenger.java b/facebook-messenger/src/main/java/com/facebook/messenger/Messenger.java
new file mode 100644
index 000000000..9c3becd91
--- /dev/null
+++ b/facebook-messenger/src/main/java/com/facebook/messenger/Messenger.java
@@ -0,0 +1,5 @@
+// Copyright 2004-present Facebook. All Rights Reserved.
+
+package com.facebook.messenger;
+
+public class Messenger { }
diff --git a/facebook/src/main/java/com/facebook/messenger/MessengerThreadParams.java b/facebook-messenger/src/main/java/com/facebook/messenger/MessengerThreadParams.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/messenger/MessengerThreadParams.java
rename to facebook-messenger/src/main/java/com/facebook/messenger/MessengerThreadParams.java
index dcc1ff52a..3f7bd0a0b 100644
--- a/facebook/src/main/java/com/facebook/messenger/MessengerThreadParams.java
+++ b/facebook-messenger/src/main/java/com/facebook/messenger/MessengerThreadParams.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
diff --git a/facebook/src/main/java/com/facebook/messenger/MessengerUtils.java b/facebook-messenger/src/main/java/com/facebook/messenger/MessengerUtils.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/messenger/MessengerUtils.java
rename to facebook-messenger/src/main/java/com/facebook/messenger/MessengerUtils.java
index af847c14d..38f16166a 100644
--- a/facebook/src/main/java/com/facebook/messenger/MessengerUtils.java
+++ b/facebook-messenger/src/main/java/com/facebook/messenger/MessengerUtils.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -25,12 +25,12 @@
 import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
-import android.content.pm.PackageManager;
 import android.database.Cursor;
 import android.net.Uri;
 import android.os.Bundle;
 
 import com.facebook.FacebookSdk;
+import com.facebook.internal.FacebookSignatureValidator;
 
 import java.util.ArrayList;
 import java.util.Collections;
@@ -237,12 +237,7 @@ public static void finishShareToMessenger(
    * @return whether any version of messenger is installed
    */
   public static boolean hasMessengerInstalled(Context context) {
-    try {
-      context.getPackageManager().getPackageInfo(PACKAGE_NAME, 0);
-      return true;
-    } catch (PackageManager.NameNotFoundException e) {
-      return false;
-    }
+    return FacebookSignatureValidator.validateSignature(context, PACKAGE_NAME);
   }
 
   /**
diff --git a/facebook/src/main/java/com/facebook/messenger/ShareToMessengerParams.java b/facebook-messenger/src/main/java/com/facebook/messenger/ShareToMessengerParams.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/messenger/ShareToMessengerParams.java
rename to facebook-messenger/src/main/java/com/facebook/messenger/ShareToMessengerParams.java
index 9bb413384..a7dfe04ed 100644
--- a/facebook/src/main/java/com/facebook/messenger/ShareToMessengerParams.java
+++ b/facebook-messenger/src/main/java/com/facebook/messenger/ShareToMessengerParams.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
diff --git a/facebook/src/main/java/com/facebook/messenger/ShareToMessengerParamsBuilder.java b/facebook-messenger/src/main/java/com/facebook/messenger/ShareToMessengerParamsBuilder.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/messenger/ShareToMessengerParamsBuilder.java
rename to facebook-messenger/src/main/java/com/facebook/messenger/ShareToMessengerParamsBuilder.java
index ad42d6c28..a204fe65e 100644
--- a/facebook/src/main/java/com/facebook/messenger/ShareToMessengerParamsBuilder.java
+++ b/facebook-messenger/src/main/java/com/facebook/messenger/ShareToMessengerParamsBuilder.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
diff --git a/facebook-messenger/src/main/res/drawable-hdpi/messenger_bubble_large_blue.png b/facebook-messenger/src/main/res/drawable-hdpi/messenger_bubble_large_blue.png
new file mode 100644
index 000000000..4281f5bb2
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-hdpi/messenger_bubble_large_blue.png differ
diff --git a/facebook-messenger/src/main/res/drawable-hdpi/messenger_bubble_large_white.png b/facebook-messenger/src/main/res/drawable-hdpi/messenger_bubble_large_white.png
new file mode 100644
index 000000000..a282e4501
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-hdpi/messenger_bubble_large_white.png differ
diff --git a/facebook-messenger/src/main/res/drawable-hdpi/messenger_bubble_small_blue.png b/facebook-messenger/src/main/res/drawable-hdpi/messenger_bubble_small_blue.png
new file mode 100644
index 000000000..1258d68a1
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-hdpi/messenger_bubble_small_blue.png differ
diff --git a/facebook-messenger/src/main/res/drawable-hdpi/messenger_bubble_small_white.png b/facebook-messenger/src/main/res/drawable-hdpi/messenger_bubble_small_white.png
new file mode 100644
index 000000000..04847c88a
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-hdpi/messenger_bubble_small_white.png differ
diff --git a/facebook-messenger/src/main/res/drawable-hdpi/messenger_button_send_round_shadow.png b/facebook-messenger/src/main/res/drawable-hdpi/messenger_button_send_round_shadow.png
new file mode 100644
index 000000000..38e786dc3
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-hdpi/messenger_button_send_round_shadow.png differ
diff --git a/facebook-messenger/src/main/res/drawable-mdpi/messenger_bubble_large_blue.png b/facebook-messenger/src/main/res/drawable-mdpi/messenger_bubble_large_blue.png
new file mode 100644
index 000000000..3f0f0f65d
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-mdpi/messenger_bubble_large_blue.png differ
diff --git a/facebook-messenger/src/main/res/drawable-mdpi/messenger_bubble_large_white.png b/facebook-messenger/src/main/res/drawable-mdpi/messenger_bubble_large_white.png
new file mode 100644
index 000000000..fb39b8166
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-mdpi/messenger_bubble_large_white.png differ
diff --git a/facebook-messenger/src/main/res/drawable-mdpi/messenger_bubble_small_blue.png b/facebook-messenger/src/main/res/drawable-mdpi/messenger_bubble_small_blue.png
new file mode 100644
index 000000000..88da06669
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-mdpi/messenger_bubble_small_blue.png differ
diff --git a/facebook-messenger/src/main/res/drawable-mdpi/messenger_bubble_small_white.png b/facebook-messenger/src/main/res/drawable-mdpi/messenger_bubble_small_white.png
new file mode 100644
index 000000000..727ef9fc4
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-mdpi/messenger_bubble_small_white.png differ
diff --git a/facebook-messenger/src/main/res/drawable-mdpi/messenger_button_send_round_shadow.png b/facebook-messenger/src/main/res/drawable-mdpi/messenger_button_send_round_shadow.png
new file mode 100644
index 000000000..6b3f53d2b
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-mdpi/messenger_button_send_round_shadow.png differ
diff --git a/facebook-messenger/src/main/res/drawable-xhdpi/messenger_bubble_large_blue.png b/facebook-messenger/src/main/res/drawable-xhdpi/messenger_bubble_large_blue.png
new file mode 100644
index 000000000..02d034cd3
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-xhdpi/messenger_bubble_large_blue.png differ
diff --git a/facebook-messenger/src/main/res/drawable-xhdpi/messenger_bubble_large_white.png b/facebook-messenger/src/main/res/drawable-xhdpi/messenger_bubble_large_white.png
new file mode 100644
index 000000000..d15e747c1
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-xhdpi/messenger_bubble_large_white.png differ
diff --git a/facebook-messenger/src/main/res/drawable-xhdpi/messenger_bubble_small_blue.png b/facebook-messenger/src/main/res/drawable-xhdpi/messenger_bubble_small_blue.png
new file mode 100644
index 000000000..b21f104e8
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-xhdpi/messenger_bubble_small_blue.png differ
diff --git a/facebook-messenger/src/main/res/drawable-xhdpi/messenger_bubble_small_white.png b/facebook-messenger/src/main/res/drawable-xhdpi/messenger_bubble_small_white.png
new file mode 100644
index 000000000..5c641c94f
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-xhdpi/messenger_bubble_small_white.png differ
diff --git a/facebook-messenger/src/main/res/drawable-xhdpi/messenger_button_send_round_shadow.png b/facebook-messenger/src/main/res/drawable-xhdpi/messenger_button_send_round_shadow.png
new file mode 100644
index 000000000..9bccc2700
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-xhdpi/messenger_button_send_round_shadow.png differ
diff --git a/facebook-messenger/src/main/res/drawable-xxhdpi/messenger_bubble_large_blue.png b/facebook-messenger/src/main/res/drawable-xxhdpi/messenger_bubble_large_blue.png
new file mode 100644
index 000000000..93c5a6f16
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-xxhdpi/messenger_bubble_large_blue.png differ
diff --git a/facebook-messenger/src/main/res/drawable-xxhdpi/messenger_bubble_large_white.png b/facebook-messenger/src/main/res/drawable-xxhdpi/messenger_bubble_large_white.png
new file mode 100644
index 000000000..2ac468337
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-xxhdpi/messenger_bubble_large_white.png differ
diff --git a/facebook-messenger/src/main/res/drawable-xxhdpi/messenger_bubble_small_blue.png b/facebook-messenger/src/main/res/drawable-xxhdpi/messenger_bubble_small_blue.png
new file mode 100644
index 000000000..a9c23b535
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-xxhdpi/messenger_bubble_small_blue.png differ
diff --git a/facebook-messenger/src/main/res/drawable-xxhdpi/messenger_bubble_small_white.png b/facebook-messenger/src/main/res/drawable-xxhdpi/messenger_bubble_small_white.png
new file mode 100644
index 000000000..7180963f7
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-xxhdpi/messenger_bubble_small_white.png differ
diff --git a/facebook-messenger/src/main/res/drawable-xxhdpi/messenger_button_send_round_shadow.png b/facebook-messenger/src/main/res/drawable-xxhdpi/messenger_button_send_round_shadow.png
new file mode 100644
index 000000000..49117bc6e
Binary files /dev/null and b/facebook-messenger/src/main/res/drawable-xxhdpi/messenger_button_send_round_shadow.png differ
diff --git a/facebook/src/main/res/drawable/messenger_button_blue_bg_round.xml b/facebook-messenger/src/main/res/drawable/messenger_button_blue_bg_round.xml
similarity index 100%
rename from facebook/src/main/res/drawable/messenger_button_blue_bg_round.xml
rename to facebook-messenger/src/main/res/drawable/messenger_button_blue_bg_round.xml
diff --git a/facebook/src/main/res/drawable/messenger_button_blue_bg_selector.xml b/facebook-messenger/src/main/res/drawable/messenger_button_blue_bg_selector.xml
similarity index 100%
rename from facebook/src/main/res/drawable/messenger_button_blue_bg_selector.xml
rename to facebook-messenger/src/main/res/drawable/messenger_button_blue_bg_selector.xml
diff --git a/facebook/src/main/res/drawable/messenger_button_white_bg_round.xml b/facebook-messenger/src/main/res/drawable/messenger_button_white_bg_round.xml
similarity index 100%
rename from facebook/src/main/res/drawable/messenger_button_white_bg_round.xml
rename to facebook-messenger/src/main/res/drawable/messenger_button_white_bg_round.xml
diff --git a/facebook/src/main/res/drawable/messenger_button_white_bg_selector.xml b/facebook-messenger/src/main/res/drawable/messenger_button_white_bg_selector.xml
similarity index 100%
rename from facebook/src/main/res/drawable/messenger_button_white_bg_selector.xml
rename to facebook-messenger/src/main/res/drawable/messenger_button_white_bg_selector.xml
diff --git a/facebook/src/main/res/layout/messenger_button_send_blue_large.xml b/facebook-messenger/src/main/res/layout/messenger_button_send_blue_large.xml
similarity index 100%
rename from facebook/src/main/res/layout/messenger_button_send_blue_large.xml
rename to facebook-messenger/src/main/res/layout/messenger_button_send_blue_large.xml
diff --git a/facebook/src/main/res/layout/messenger_button_send_blue_round.xml b/facebook-messenger/src/main/res/layout/messenger_button_send_blue_round.xml
similarity index 100%
rename from facebook/src/main/res/layout/messenger_button_send_blue_round.xml
rename to facebook-messenger/src/main/res/layout/messenger_button_send_blue_round.xml
diff --git a/facebook/src/main/res/layout/messenger_button_send_blue_small.xml b/facebook-messenger/src/main/res/layout/messenger_button_send_blue_small.xml
similarity index 100%
rename from facebook/src/main/res/layout/messenger_button_send_blue_small.xml
rename to facebook-messenger/src/main/res/layout/messenger_button_send_blue_small.xml
diff --git a/facebook/src/main/res/layout/messenger_button_send_white_large.xml b/facebook-messenger/src/main/res/layout/messenger_button_send_white_large.xml
similarity index 100%
rename from facebook/src/main/res/layout/messenger_button_send_white_large.xml
rename to facebook-messenger/src/main/res/layout/messenger_button_send_white_large.xml
diff --git a/facebook/src/main/res/layout/messenger_button_send_white_round.xml b/facebook-messenger/src/main/res/layout/messenger_button_send_white_round.xml
similarity index 100%
rename from facebook/src/main/res/layout/messenger_button_send_white_round.xml
rename to facebook-messenger/src/main/res/layout/messenger_button_send_white_round.xml
diff --git a/facebook/src/main/res/layout/messenger_button_send_white_small.xml b/facebook-messenger/src/main/res/layout/messenger_button_send_white_small.xml
similarity index 100%
rename from facebook/src/main/res/layout/messenger_button_send_white_small.xml
rename to facebook-messenger/src/main/res/layout/messenger_button_send_white_small.xml
diff --git a/facebook/src/main/res/values-da/messenger_button_strings.xml b/facebook-messenger/src/main/res/values/messenger_button_strings.xml
similarity index 100%
rename from facebook/src/main/res/values-da/messenger_button_strings.xml
rename to facebook-messenger/src/main/res/values/messenger_button_strings.xml
diff --git a/facebook/src/main/res/values/messenger_button_styles.xml b/facebook-messenger/src/main/res/values/messenger_button_styles.xml
similarity index 100%
rename from facebook/src/main/res/values/messenger_button_styles.xml
rename to facebook-messenger/src/main/res/values/messenger_button_styles.xml
diff --git a/facebook-places/.gitignore b/facebook-places/.gitignore
new file mode 100644
index 000000000..796b96d1c
--- /dev/null
+++ b/facebook-places/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/facebook-places/build.gradle b/facebook-places/build.gradle
new file mode 100644
index 000000000..356e67e04
--- /dev/null
+++ b/facebook-places/build.gradle
@@ -0,0 +1,46 @@
+apply plugin: 'com.android.library'
+
+project.group 'com.facebook.android'
+
+project.ext.name = 'Facebook-Places-Android-SDK'
+project.ext.artifactId = "facebook-places"
+project.ext.description = 'Facebook Places Android SDK'
+project.ext.url = 'https://github.com/facebook/facebook-android-sdk/facebook-places'
+
+dependencies {
+    // Facebook Dependencies
+    compile project(':facebook-core')
+}
+
+android {
+    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
+    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
+
+    defaultConfig {
+        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
+        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
+        consumerProguardFiles 'proguard-rules.pro'
+    }
+
+    aaptOptions {
+        additionalParameters "--no-version-vectors"
+    }
+
+    lintOptions {
+        abortOnError false
+    }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_7
+        targetCompatibility JavaVersion.VERSION_1_7
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+apply from: "${rootDir}/maven.gradle"
\ No newline at end of file
diff --git a/facebook-places/proguard-rules.pro b/facebook-places/proguard-rules.pro
new file mode 100644
index 000000000..67e1ea6a3
--- /dev/null
+++ b/facebook-places/proguard-rules.pro
@@ -0,0 +1,33 @@
+# To enable ProGuard in your project, edit project.properties
+# to define the proguard.config property as described in that file.
+#
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in ${sdk.dir}/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the ProGuard
+# include property in project.properties.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+-keepclassmembers class * implements java.io.Serializable {
+    private static final java.io.ObjectStreamField[] serialPersistentFields;
+    private void writeObject(java.io.ObjectOutputStream);
+    private void readObject(java.io.ObjectInputStream);
+    java.lang.Object writeReplace();
+    java.lang.Object readResolve();
+}
+
+-keepnames class com.facebook.FacebookActivity
+-keepnames class com.facebook.CustomTabActivity
+
+-keep class com.facebook.places.Places
diff --git a/facebook/src/main/res/values-ar/messenger_button_strings.xml b/facebook-places/src/main/AndroidManifest.xml
similarity index 86%
rename from facebook/src/main/res/values-ar/messenger_button_strings.xml
rename to facebook-places/src/main/AndroidManifest.xml
index 5051f3908..7f1f58fe9 100644
--- a/facebook/src/main/res/values-ar/messenger_button_strings.xml
+++ b/facebook-places/src/main/AndroidManifest.xml
@@ -19,6 +19,11 @@
     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 -->
 
-<resources>
-  <string name="messenger_send_button_text">إرسال</string>
-</resources>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.facebook.places">
+
+    <application android:supportsRtl="true">
+
+    </application>
+
+</manifest>
diff --git a/facebook-places/src/main/java/com/facebook/places/PlaceManager.java b/facebook-places/src/main/java/com/facebook/places/PlaceManager.java
new file mode 100644
index 000000000..235037a2c
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/PlaceManager.java
@@ -0,0 +1,509 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places;
+
+import android.location.Location;
+import android.os.Bundle;
+import android.text.TextUtils;
+
+import com.facebook.AccessToken;
+import com.facebook.FacebookException;
+import com.facebook.GraphRequest;
+import com.facebook.HttpMethod;
+import com.facebook.internal.Utility;
+import com.facebook.places.internal.LocationPackageManager;
+import com.facebook.places.internal.LocationPackageRequestParams;
+import com.facebook.places.internal.ScannerException;
+import com.facebook.places.internal.BluetoothScanResult;
+import com.facebook.places.model.CurrentPlaceFeedbackRequestParams;
+import com.facebook.places.internal.LocationPackage;
+import com.facebook.places.model.PlaceInfoRequestParams;
+import com.facebook.places.model.PlaceSearchRequestParams;
+import com.facebook.places.model.CurrentPlaceRequestParams;
+import com.facebook.places.model.CurrentPlaceRequestParams.ConfidenceLevel;
+import com.facebook.places.internal.WifiScanResult;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.List;
+import java.util.Locale;
+import java.util.Set;
+
+/**
+ * Provides an interface to search and query the Places Graph.
+ * Supports querying the end user's' current place, searching nearby places, and fetching
+ * place information details.
+ */
+public class PlaceManager {
+
+    private static final String SEARCH = "search";
+    private static final String CURRENT_PLACE_RESULTS = "current_place/results";
+    private static final String CURRENT_PLACE_FEEDBACK = "current_place/feedback";
+
+    private static final String PARAM_ACCESS_POINTS = "access_points";
+    private static final String PARAM_ACCURACY = "accuracy";
+    private static final String PARAM_ALTITUDE = "altitude";
+    private static final String PARAM_BLUETOOTH = "bluetooth";
+    private static final String PARAM_CATEGORIES = "categories";
+    private static final String PARAM_CENTER = "center";
+    private static final String PARAM_COORDINATES = "coordinates";
+    private static final String PARAM_CURRENT_CONNECTION = "current_connection";
+    private static final String PARAM_DISTANCE = "distance";
+    private static final String PARAM_ENABLED = "enabled";
+    private static final String PARAM_FIELDS = "fields";
+    private static final String PARAM_FREQUENCY = "frequency";
+    private static final String PARAM_HEADING = "heading";
+    private static final String PARAM_LATITUDE = "latitude";
+    private static final String PARAM_LIMIT = "limit";
+    private static final String PARAM_LONGITUDE = "longitude";
+    private static final String PARAM_MAC_ADDRESS = "mac_address";
+    private static final String PARAM_MIN_CONFIDENCE_LEVEL = "min_confidence_level";
+    private static final String PARAM_PAYLOAD = "payload";
+    private static final String PARAM_PLACE_ID = "place_id";
+    private static final String PARAM_Q = "q";
+    private static final String PARAM_RSSI = "rssi";
+    private static final String PARAM_SCANS = "scans";
+    private static final String PARAM_SIGNAL_STRENGTH = "signal_strength";
+    private static final String PARAM_SPEED = "speed";
+    private static final String PARAM_SSID = "ssid";
+    private static final String PARAM_SUMMARY = "summary";
+    private static final String PARAM_TRACKING = "tracking";
+    private static final String PARAM_TYPE = "type";
+    private static final String PARAM_WAS_HERE = "was_here";
+    private static final String PARAM_WIFI = "wifi";
+
+    /**
+     * Describes an error that occurred while retrieving the current location.
+     */
+    public enum LocationError {
+        /**
+         * The location permissions are denied. The SDK requires permissions
+         * {@code "android.permission.ACCESS_FINE_LOCATION"} or
+         * {@code "android.permission.ACCESS_COARSE_LOCATION"} to retrieve the current location.
+         */
+        LOCATION_PERMISSION_DENIED,
+        /**
+         * The location could not be retrieved because location services are not enabled.
+         */
+        LOCATION_SERVICES_DISABLED,
+        /**
+         * The location could be retrieved within the allotted amount of time.
+         */
+        LOCATION_TIMEOUT,
+        /**
+         * An unknown error occurred.
+         */
+        UNKNOWN_ERROR,
+    }
+
+    /**
+     * Callback invoked when a request has been constructed and is ready to be executed.
+     * To be used with {@link PlaceManager#newCurrentPlaceRequest(CurrentPlaceRequestParams,
+     * OnRequestReadyCallback)} and {@link PlaceManager#newPlaceSearchRequest(
+     * PlaceSearchRequestParams, OnRequestReadyCallback)}.
+     */
+    public interface OnRequestReadyCallback {
+
+        /**
+         * Method invoked when the request can't be generated due to an error retrieving the current
+         * device location.
+         * @param error the error description
+         */
+        void onLocationError(LocationError error);
+
+        /**
+         * Method invoked when the provided {@code GraphRequest} is ready to be executed.
+         * Set a callback on it to handle the response using {@code setCallback}, and then
+         * execute the request.
+         *
+         * @param graphRequest the request that's ready to be executed.
+         */
+        void onRequestReady(GraphRequest graphRequest);
+    }
+
+    private PlaceManager() {
+        // No public constructor required as all methods are static
+    }
+
+    /**
+     * Creates a new place search request centered around the current device location.
+     * The SDK will retrieve the current device location using
+     * {@link android.location.LocationManager}
+     * <p>
+     * With the Places Graph, you can search for millions of places worldwide and retrieve
+     * information like number of checkins, ratings, and addresses all with one request.
+     * <p>
+     * The specified {@link OnRequestReadyCallback} will be invoked once the request has been
+     * generated and is ready to be executed.
+     *
+     * @param requestParams the request parameters. See {@link PlaceSearchRequestParams}
+     * @param callback the {@link OnRequestReadyCallback} invoked when the {@link GraphRequest}
+     *                 has been generated and is ready to be executed
+     */
+    public static void newPlaceSearchRequest(
+            final PlaceSearchRequestParams requestParams,
+            final OnRequestReadyCallback callback) {
+
+        LocationPackageRequestParams.Builder builder = new LocationPackageRequestParams.Builder();
+        builder.setWifiScanEnabled(false);
+        builder.setBluetoothScanEnabled(false);
+
+        LocationPackageManager.requestLocationPackage(
+                builder.build(),
+                new LocationPackageManager.Listener() {
+            @Override
+            public void onLocationPackage(LocationPackage locationPackage) {
+                if (locationPackage.locationError == null) {
+                    GraphRequest graphRequest = newPlaceSearchRequestForLocation(
+                            requestParams,
+                            locationPackage.location);
+                    callback.onRequestReady(graphRequest);
+                } else {
+                    callback.onLocationError(getLocationError(locationPackage.locationError));
+                }
+            }
+        });
+    }
+
+    /**
+     * Creates a new place search request centered around the specified location.
+     * If the location provided is null, the search will be completed globally.
+     * At least a location or a search text must be provided.
+     * <p>
+     * With the Places Graph, you can search for millions of places worldwide and retrieve
+     * information like number of checkins, ratings, and addresses all with one request.
+     * <p>
+     * Returns a new GraphRequest that is configured to perform a place search.
+     *
+     * @param requestParams the request parameters. See {@link PlaceSearchRequestParams}
+     * @param location the {@link Location} around which to search
+     * @return a {@link GraphRequest} that is ready to be executed
+     * @throws FacebookException thrown if neither {@code location} nor {@code searchText}
+     * is specified
+     */
+    public static GraphRequest newPlaceSearchRequestForLocation(
+            PlaceSearchRequestParams requestParams,
+            Location location) {
+
+        String searchText = requestParams.getSearchText();
+        if (location == null && searchText == null) {
+            throw new FacebookException("Either location or searchText must be specified.");
+        }
+        int limit = requestParams.getLimit();
+        Set<String> fields = requestParams.getFields();
+        Set<String> categories = requestParams.getCategories();
+
+        Bundle parameters = new Bundle(7);
+        parameters.putString(PARAM_TYPE, "place");
+
+        if (location != null) {
+            parameters.putString(
+                    PARAM_CENTER,
+                    String.format(
+                            Locale.US,
+                            "%f,%f",
+                            location.getLatitude(),
+                            location.getLongitude()));
+
+            int distance = requestParams.getDistance();
+            if (distance > 0) {
+                parameters.putInt(PARAM_DISTANCE, distance);
+            }
+        }
+        if (limit > 0) {
+            parameters.putInt(PARAM_LIMIT, limit);
+        }
+        if (!Utility.isNullOrEmpty(searchText)) {
+            parameters.putString(PARAM_Q, searchText);
+        }
+        if (categories != null && !categories.isEmpty()) {
+            JSONArray array = new JSONArray();
+            for (String category : categories) {
+                array.put(category);
+            }
+            parameters.putString(PARAM_CATEGORIES, array.toString());
+        }
+        if (fields != null && !fields.isEmpty()) {
+            parameters.putString(PARAM_FIELDS, TextUtils.join(",", fields));
+        }
+
+        return new GraphRequest(
+                AccessToken.getCurrentAccessToken(),
+                SEARCH,
+                parameters,
+                HttpMethod.GET);
+    }
+
+    /**
+     * Creates a new place info request.
+     * <p>
+     * The Places Graph exposes a rich set of information about places.
+     * If the request is authenticated with a user access token,
+     * you can also obtain social information such as the number of friends who have liked and
+     * checked into the PlaceFields. The specific friends are also available if they have
+     * authenticated the app with the user_tagged_places and user_likes permissions.
+     * <p>
+     * Returns a new {@link GraphRequest} that is configured to perform a place info request.
+     *
+     * @param requestParams the request parameters, a {@link PlaceInfoRequestParams#getPlaceId()}
+     *                      must be specified.
+     * @return a {@link GraphRequest} that is ready to be executed
+     * @throws FacebookException thrown if a {@link PlaceInfoRequestParams#getPlaceId()} is not
+     * specified.
+     */
+    public static GraphRequest newPlaceInfoRequest(
+            PlaceInfoRequestParams requestParams) {
+
+        String placeId = requestParams.getPlaceId();
+        if (placeId == null) {
+            throw new FacebookException("placeId must be specified.");
+        }
+
+        Bundle parameters = new Bundle(1);
+
+        Set<String> fields = requestParams.getFields();
+        if (fields != null && !fields.isEmpty()) {
+            parameters.putString(PARAM_FIELDS, TextUtils.join(",", fields));
+        }
+
+        return new GraphRequest(
+                AccessToken.getCurrentAccessToken(),
+                placeId,
+                parameters,
+                HttpMethod.GET);
+    }
+
+    /**
+     * Creates a new current place request.
+     * <p>
+     * The current place request estimates the place where the user is currently located.
+     * The response contains a list of places and their associated confidence levels.
+     * <p>
+     * If a location is not specified in {@link CurrentPlaceRequestParams}, then the SDK
+     * retrieves the current location using {@link android.location.LocationManager}.
+     *
+     * @param requestParams the request parameters. See {@link CurrentPlaceRequestParams}
+     * @param callback a {@link OnRequestReadyCallback} that is invoked when the
+     * {@link GraphRequest} has been created and is ready to be executed.
+     */
+    public static void newCurrentPlaceRequest(
+            final CurrentPlaceRequestParams requestParams,
+            final OnRequestReadyCallback callback) {
+
+        Location location = requestParams.getLocation();
+        CurrentPlaceRequestParams.ScanMode scanMode = requestParams.getScanMode();
+
+        LocationPackageRequestParams.Builder builder =
+                new LocationPackageRequestParams.Builder();
+
+        // Don't scan for a location if one is provided.
+        builder.setLocationScanEnabled(location == null);
+
+        if (scanMode != null && scanMode == CurrentPlaceRequestParams.ScanMode.LOW_LATENCY) {
+            // In low-latency mode, avoid active Wi-Fi scanning which can takes
+            // several seconds.
+            builder.setWifiActiveScanAllowed(false);
+        }
+
+        LocationPackageManager.requestLocationPackage(
+                builder.build(),
+                new LocationPackageManager.Listener() {
+                    @Override
+                    public void onLocationPackage(LocationPackage locationPackage) {
+                        if (locationPackage.locationError != null) {
+                            callback.onLocationError(
+                                    getLocationError(locationPackage.locationError));
+                        } else {
+                            Bundle parameters = getCurrentPlaceParameters(
+                                    requestParams,
+                                    locationPackage);
+
+                            GraphRequest graphRequest = new GraphRequest(
+                                    AccessToken.getCurrentAccessToken(),
+                                    CURRENT_PLACE_RESULTS,
+                                    parameters,
+                                    HttpMethod.GET);
+                            callback.onRequestReady(graphRequest);
+                        }
+                    }
+                });
+    }
+
+    /**
+     * Creates a new current place feedback request.
+     * <p>
+     * This request allows users to provide feedback on the accuracy of the current place
+     * estimate. This information is used to improve the accuracy of our results.
+     * <p>
+     * Returns a new GraphRequest that is configured to perform a current place feedback request.
+     *
+     * @param requestParams the request parameters. See {@link CurrentPlaceFeedbackRequestParams}
+     * @return a {@link GraphRequest} that is ready to be executed
+     * @throws FacebookException thrown if parameters
+     * {@link CurrentPlaceFeedbackRequestParams#getPlaceId()},
+     * {@link CurrentPlaceFeedbackRequestParams#getTracking()}, or
+     * {@link CurrentPlaceFeedbackRequestParams#wasHere()} are missing
+     */
+    public static GraphRequest newCurrentPlaceFeedbackRequest(
+            CurrentPlaceFeedbackRequestParams requestParams) {
+
+        String placeId = requestParams.getPlaceId();
+        String tracking = requestParams.getTracking();
+        Boolean wasHere = requestParams.wasHere();
+
+        if (tracking == null || placeId == null || wasHere == null) {
+            throw new FacebookException("tracking, placeId and wasHere must be specified.");
+        }
+
+        Bundle parameters = new Bundle(3);
+        parameters.putString(PARAM_TRACKING, tracking);
+        parameters.putString(PARAM_PLACE_ID, placeId);
+        parameters.putBoolean(PARAM_WAS_HERE, wasHere);
+
+        return new GraphRequest(
+          AccessToken.getCurrentAccessToken(),
+          CURRENT_PLACE_FEEDBACK,
+          parameters,
+          HttpMethod.POST);
+    }
+
+    private static Bundle getCurrentPlaceParameters(
+            CurrentPlaceRequestParams request,
+            LocationPackage locationPackage) throws FacebookException {
+
+        if (request == null) {
+            throw new FacebookException("Request and location must be specified.");
+        }
+        if (locationPackage == null) {
+            locationPackage = new LocationPackage();
+        }
+        if (locationPackage.location == null) {
+            locationPackage.location = request.getLocation();
+        }
+        if (locationPackage.location == null) {
+            throw new FacebookException("A location must be specified");
+        }
+
+        try {
+            Bundle parameters = new Bundle(6);
+            parameters.putString(PARAM_SUMMARY, PARAM_TRACKING);
+            int limit = request.getLimit();
+            if (limit > 0) {
+                parameters.putInt(PARAM_LIMIT, limit);
+            }
+            Set<String> fields = request.getFields();
+            if (fields != null && !fields.isEmpty()) {
+                parameters.putString(PARAM_FIELDS, TextUtils.join(",", fields));
+            }
+
+            // Coordinates.
+            Location location = locationPackage.location;
+            JSONObject coordinates = new JSONObject();
+            coordinates.put(PARAM_LATITUDE, location.getLatitude());
+            coordinates.put(PARAM_LONGITUDE, location.getLongitude());
+            if (location.hasAccuracy()) {
+                coordinates.put(PARAM_ACCURACY, location.getAccuracy());
+            }
+            if (location.hasAltitude()) {
+                coordinates.put(PARAM_ALTITUDE, location.getAltitude());
+            }
+            if (location.hasBearing()) {
+                coordinates.put(PARAM_HEADING, location.getBearing());
+            }
+            if (location.hasSpeed()) {
+                coordinates.put(PARAM_SPEED, location.getSpeed());
+            }
+            parameters.putString(PARAM_COORDINATES, coordinates.toString());
+
+            // min confidence level
+            ConfidenceLevel minConfidenceLevel = request.getMinConfidenceLevel();
+            if (minConfidenceLevel == ConfidenceLevel.LOW
+                    || minConfidenceLevel == ConfidenceLevel.MEDIUM
+                    || minConfidenceLevel == ConfidenceLevel.HIGH) {
+                String minConfidenceLevelString =
+                        minConfidenceLevel.toString().toLowerCase(Locale.US);
+                parameters.putString(PARAM_MIN_CONFIDENCE_LEVEL, minConfidenceLevelString);
+            }
+
+            if (locationPackage != null) {
+                // wifi
+                JSONObject wifi = new JSONObject();
+                wifi.put(PARAM_ENABLED, locationPackage.isWifiScanningEnabled);
+                WifiScanResult connectedWifi = locationPackage.connectedWifi;
+                if (connectedWifi != null) {
+                    wifi.put(PARAM_CURRENT_CONNECTION, getWifiScanJson(connectedWifi));
+                }
+                List<WifiScanResult> ambientWifi = locationPackage.ambientWifi;
+                if (ambientWifi != null) {
+                    JSONArray array = new JSONArray();
+                    for (WifiScanResult wifiScanResult : ambientWifi) {
+                        array.put(getWifiScanJson(wifiScanResult));
+                    }
+                    wifi.put(PARAM_ACCESS_POINTS, array);
+                }
+                parameters.putString(PARAM_WIFI, wifi.toString());
+
+                // bluetooth
+                JSONObject bluetooth = new JSONObject();
+                bluetooth.put(PARAM_ENABLED, locationPackage.isBluetoothScanningEnabled);
+                List<BluetoothScanResult> bluetoothScanResults =
+                        locationPackage.ambientBluetoothLe;
+                if (bluetoothScanResults != null) {
+                    JSONArray array = new JSONArray();
+                    for (BluetoothScanResult bluetoothScanResult : bluetoothScanResults) {
+                        JSONObject bluetoothData = new JSONObject();
+                        bluetoothData.put(PARAM_PAYLOAD, bluetoothScanResult.payload);
+                        bluetoothData.put(PARAM_RSSI, bluetoothScanResult.rssi);
+                        array.put(bluetoothData);
+                    }
+                    bluetooth.put(PARAM_SCANS, array);
+                }
+                parameters.putString(PARAM_BLUETOOTH, bluetooth.toString());
+            }
+
+            return parameters;
+        } catch (JSONException ex) {
+            throw new FacebookException(ex);
+        }
+    }
+
+    private static JSONObject getWifiScanJson(WifiScanResult wifiScanResult) throws JSONException {
+        JSONObject wifiData = new JSONObject();
+        wifiData.put(PARAM_MAC_ADDRESS, wifiScanResult.bssid);
+        wifiData.put(PARAM_SSID, wifiScanResult.ssid);
+        wifiData.put(PARAM_SIGNAL_STRENGTH, wifiScanResult.rssi);
+        wifiData.put(PARAM_FREQUENCY, wifiScanResult.frequency);
+        return wifiData;
+    }
+
+    private static LocationError getLocationError(ScannerException.Type type) {
+        if (type == ScannerException.Type.PERMISSION_DENIED) {
+            return LocationError.LOCATION_PERMISSION_DENIED;
+        } else if (type == ScannerException.Type.DISABLED) {
+            return LocationError.LOCATION_SERVICES_DISABLED;
+        } else if (type == ScannerException.Type.TIMEOUT) {
+            return LocationError.LOCATION_TIMEOUT;
+        }
+        return LocationError.UNKNOWN_ERROR;
+    }
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/Places.java b/facebook-places/src/main/java/com/facebook/places/Places.java
new file mode 100644
index 000000000..461c6927d
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/Places.java
@@ -0,0 +1,5 @@
+// Copyright 2004-present Facebook. All Rights Reserved.
+
+package com.facebook.places;
+
+public class Places { }
diff --git a/facebook-places/src/main/java/com/facebook/places/internal/BleScanner.java b/facebook-places/src/main/java/com/facebook/places/internal/BleScanner.java
new file mode 100644
index 000000000..35ccf597e
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/internal/BleScanner.java
@@ -0,0 +1,41 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import java.util.List;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public interface BleScanner {
+
+    void initAndCheckEligibility() throws ScannerException;
+
+    void startScanning() throws ScannerException;
+
+    void stopScanning() throws ScannerException;
+
+    int getErrorCode();
+
+    List<BluetoothScanResult> getScanResults();
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/internal/BleScannerImpl.java b/facebook-places/src/main/java/com/facebook/places/internal/BleScannerImpl.java
new file mode 100644
index 000000000..265068fb1
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/internal/BleScannerImpl.java
@@ -0,0 +1,357 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import android.annotation.TargetApi;
+import android.bluetooth.BluetoothAdapter;
+import android.bluetooth.le.BluetoothLeScanner;
+import android.bluetooth.le.ScanCallback;
+import android.bluetooth.le.ScanRecord;
+import android.bluetooth.le.ScanResult;
+import android.bluetooth.le.ScanSettings;
+import android.content.Context;
+import android.os.Build;
+import android.os.Handler;
+import android.os.Looper;
+import android.util.Log;
+
+import com.facebook.FacebookSdk;
+import com.facebook.internal.Validate;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.List;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+@TargetApi(21)
+@SuppressWarnings("MissingPermission")
+public class BleScannerImpl implements BleScanner {
+
+    private static final String TAG = "BleScannerImpl";
+
+    private static final byte[] IBEACON_PREFIX = fromHexString("ff4c000215");
+    private static final byte[] EDDYSTONE_PREFIX = fromHexString("16aafe");
+    private static final byte[] GRAVITY_PREFIX = fromHexString("17ffab01");
+
+    private BluetoothAdapter bluetoothAdapter;
+    private BluetoothLeScanner bluetoothLeScanner;
+    private LocationPackageRequestParams params;
+    private int errorCode;
+    private final List<BluetoothScanResult> scanResults = new ArrayList<>();
+    private boolean isScanInProgress;
+    private ScanCallBackImpl scanCallBack;
+    private Context context;
+
+    BleScannerImpl(Context context, LocationPackageRequestParams params) {
+        this.context = context;
+        this.params = params;
+    }
+
+    @Override
+    public synchronized void initAndCheckEligibility() throws ScannerException {
+        if (Build.VERSION.SDK_INT < ScannerFactory.OS_VERSION_LOLLIPOP) {
+            throw new ScannerException(ScannerException.Type.NOT_SUPPORTED);
+        }
+        if (!Validate.hasBluetoothPermission(context)) {
+            throw new ScannerException(ScannerException.Type.PERMISSION_DENIED);
+        }
+        if (!Validate.hasLocationPermission(context)) {
+            throw new ScannerException(ScannerException.Type.PERMISSION_DENIED);
+        }
+        bluetoothAdapter = BluetoothAdapter.getDefaultAdapter();
+        if (bluetoothAdapter == null || !bluetoothAdapter.isEnabled()) {
+            throw new ScannerException(ScannerException.Type.DISABLED);
+        }
+        bluetoothLeScanner = bluetoothAdapter.getBluetoothLeScanner();
+        if (bluetoothLeScanner == null) {
+            throw new ScannerException(ScannerException.Type.UNKNOWN_ERROR);
+        }
+    }
+
+    @Override
+    public synchronized void startScanning() throws ScannerException {
+        if (isScanInProgress) {
+            throw new ScannerException(ScannerException.Type.SCAN_ALREADY_IN_PROGRESS);
+        }
+        scanCallBack = new ScanCallBackImpl();
+        isScanInProgress = true;
+        errorCode = 0;
+
+        synchronized (scanResults) {
+            scanResults.clear();
+        }
+
+        if (bluetoothLeScanner == null) {
+            throw new ScannerException(ScannerException.Type.UNKNOWN_ERROR);
+        }
+
+        try {
+            ScanSettings.Builder builder = new ScanSettings.Builder();
+            builder.setScanMode(ScanSettings.SCAN_MODE_LOW_LATENCY);
+            builder.setReportDelay(0);
+            bluetoothLeScanner.startScan(null, builder.build(), scanCallBack);
+            isScanInProgress = true;
+        } catch (Exception e) {
+            throw new ScannerException(ScannerException.Type.UNKNOWN_ERROR);
+        }
+    }
+
+    @Override
+    public synchronized void stopScanning() {
+        bluetoothLeScanner.flushPendingScanResults(scanCallBack);
+        bluetoothLeScanner.stopScan(scanCallBack);
+        waitForMainLooper(params.getBluetoothFlushResultsTimeoutMs());
+        isScanInProgress = false;
+    }
+
+    private void waitForMainLooper(long maxWaitTimeoutMs) {
+        try {
+            // wait until all callbacks queued in the MainLooper have been processed.
+            final Object lock = new Object();
+            synchronized (lock) {
+
+                Handler handler = new Handler(Looper.getMainLooper());
+                handler.post(new Runnable() {
+                    @Override
+                    public void run() {
+                        try {
+                            synchronized (lock) {
+                                lock.notify();
+                            }
+                        } catch (Exception e) {
+                            logException("Exception waiting for main looper", e);
+                        }
+                    }
+                });
+
+                lock.wait(maxWaitTimeoutMs);
+            }
+        } catch (Exception e) {
+            logException("Exception waiting for main looper", e);
+        }
+    }
+
+    @Override
+    public synchronized int getErrorCode() {
+        return errorCode;
+    }
+
+    @Override
+    public synchronized List<BluetoothScanResult> getScanResults() {
+        List<BluetoothScanResult> output;
+        synchronized (scanResults) {
+            int maxSanResults = params.getBluetoothMaxScanResults();
+            if (scanResults.size() > maxSanResults) {
+                // Keep the scan results with strongest rssi
+                output = new ArrayList<>(maxSanResults);
+                Comparator<BluetoothScanResult> comparator = new Comparator<BluetoothScanResult>() {
+                    @Override
+                    public int compare(BluetoothScanResult lhs, BluetoothScanResult rhs) {
+                        return rhs.rssi - lhs.rssi;
+                    }
+                };
+                Collections.sort(scanResults, comparator);
+                output.addAll(scanResults.subList(0, maxSanResults));
+            } else {
+                output = new ArrayList<>(scanResults.size());
+                output.addAll(scanResults);
+            }
+        }
+        return output;
+    }
+
+    private class ScanCallBackImpl extends ScanCallback {
+
+        @Override
+        public void onScanFailed(int errorCode) {
+            super.onScanFailed(errorCode);
+            BleScannerImpl.this.errorCode = errorCode;
+        }
+
+        @Override
+        public void onBatchScanResults(List<ScanResult> results) {
+            super.onBatchScanResults(results);
+            try {
+                synchronized (scanResults) {
+                    for (ScanResult result : results) {
+                        BluetoothScanResult bluetoothScanResult = newBluetoothScanResult(result);
+                        if (bluetoothScanResult != null) {
+                            scanResults.add(bluetoothScanResult);
+                        }
+                    }
+                }
+            } catch (Exception e) {
+                logException("Exception in ble scan callback", e);
+            }
+        }
+
+        @Override
+        public void onScanResult(int callbackType, ScanResult result) {
+            super.onScanResult(callbackType, result);
+            try {
+                synchronized (scanResults) {
+                    BluetoothScanResult bluetoothScanResult = newBluetoothScanResult(result);
+                    if (bluetoothScanResult != null) {
+                        scanResults.add(bluetoothScanResult);
+                    }
+                }
+            } catch (Exception e) {
+                logException("Exception in ble scan callback", e);
+            }
+        }
+    }
+
+    private static BluetoothScanResult newBluetoothScanResult(ScanResult scanResult) {
+        ScanRecord scanRecord = scanResult.getScanRecord();
+        byte[] scanRecordBytes = scanRecord.getBytes();
+        if (isBeacon(scanRecordBytes)) {
+            String payload = formatPayload(scanRecord.getBytes());
+            int rssi = scanResult.getRssi();
+            BluetoothScanResult bluetoothScanResult = new BluetoothScanResult(payload, rssi);
+            return bluetoothScanResult;
+        }
+        return null;
+    }
+
+    private static String formatPayload(byte[] payload) {
+        if (payload == null || payload.length == 0) {
+            return null;
+        }
+        int payloadLength = getPayloadLength(payload);
+        return toHexString(payload, payloadLength);
+    }
+
+    private static int getPayloadLength(byte[] payload) {
+        int offset = 0;
+        while (offset < payload.length) {
+            byte length = payload[offset];
+            if (length == 0) {
+                // the end of the content has been reached
+                return offset;
+            } else if (length < 0) {
+                // unexpected, take the full payload
+                return payload.length;
+            }
+            offset += 1 + length;
+        }
+        return payload.length;
+    }
+
+    private static String toHexString(byte[] bytes, int length) {
+        StringBuffer sb = new StringBuffer();
+        if (length < 0 || length > bytes.length) {
+            length = bytes.length;
+        }
+        for (int i = 0; i < length; i++) {
+            byte b = bytes[i];
+            sb.append(String.format("%02x", b));
+        }
+        return sb.toString();
+    }
+
+    private static void logException(String message, Exception e) {
+        if (FacebookSdk.isDebugEnabled()) {
+            Log.e(TAG, message, e);
+        }
+    }
+
+    private static boolean isBeacon(byte[] payload) {
+        if (payload == null) {
+            return false;
+        }
+        int startIndex = 0;
+        int payloadLength = payload.length;
+        while (startIndex < payloadLength) {
+            int advLengthField = payload[startIndex];
+            if (advLengthField <= 0) {
+                return false;
+            }
+            int advPacketLength = 1 + advLengthField;
+            if (startIndex + advPacketLength > payloadLength) {
+                return false;
+            }
+            if (isAdvPacketBeacon(payload, startIndex)) {
+                return true;
+            }
+            startIndex += advPacketLength;
+        }
+        return false;
+    }
+
+    private static boolean isAdvPacketBeacon(byte[] payload, int advStartIndex) {
+        if (isArrayContained(payload, advStartIndex + 1, IBEACON_PREFIX)) {
+            return true;
+        }
+        if (isArrayContained(payload, advStartIndex + 1, EDDYSTONE_PREFIX)) {
+            return true;
+        }
+        if (isArrayContained(payload, advStartIndex, GRAVITY_PREFIX)) {
+            return true;
+        }
+        if (isAltBeacon(payload, advStartIndex)) {
+            return true;
+        }
+        return false;
+    }
+
+    private static boolean isAltBeacon(byte[] payload, int startIndex) {
+        if (startIndex + 5 < payload.length) {
+            byte length = payload[startIndex];
+            byte packetType = payload[startIndex + 1];
+            byte beaconCode1 = payload[startIndex + 4];
+            byte beaconCode2 = payload[startIndex + 5];
+            return length == (byte) 0x1b
+                    && packetType == (byte) 0xff
+                    && beaconCode1 == (byte) 0xbe
+                    && beaconCode2 == (byte) 0xac;
+        }
+        return false;
+    }
+
+    private static boolean isArrayContained(byte[] array1, int startIndex1, byte[] array2) {
+        int length = array2.length;
+        if (startIndex1 + length > array1.length) {
+            return false;
+        }
+        for (int i = 0; i < length; i++) {
+            if (array1[startIndex1 + i] != array2[i]) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    private static byte[] fromHexString(String hexString) {
+        int len = hexString.length();
+        byte[] bytes = new byte[len / 2];
+        for (int i = 0; i < len; i += 2) {
+            bytes[i / 2] =
+                    (byte) ((Character.digit(hexString.charAt(i), 16) << 4)
+                            + Character.digit(hexString.charAt(i + 1), 16));
+        }
+        return bytes;
+    }
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/internal/BleScannerLegacy.java b/facebook-places/src/main/java/com/facebook/places/internal/BleScannerLegacy.java
new file mode 100644
index 000000000..40d104b1b
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/internal/BleScannerLegacy.java
@@ -0,0 +1,60 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import java.util.List;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public class BleScannerLegacy implements BleScanner {
+
+    BleScannerLegacy() {
+
+    }
+
+    @Override
+    public void initAndCheckEligibility() throws ScannerException {
+        throw new ScannerException(ScannerException.Type.NOT_SUPPORTED);
+    }
+
+    @Override
+    public void startScanning() throws ScannerException {
+        throw new ScannerException(ScannerException.Type.NOT_SUPPORTED);
+    }
+
+    @Override
+    public void stopScanning() throws ScannerException {
+        throw new ScannerException(ScannerException.Type.NOT_SUPPORTED);
+    }
+
+    @Override
+    public int getErrorCode() {
+        return -1;
+    }
+
+    @Override
+    public List<BluetoothScanResult> getScanResults() {
+        return null;
+    }
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/internal/BluetoothScanResult.java b/facebook-places/src/main/java/com/facebook/places/internal/BluetoothScanResult.java
new file mode 100644
index 000000000..9c1f3e5c1
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/internal/BluetoothScanResult.java
@@ -0,0 +1,56 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+/**
+ * Describes the result of a bluetooth Low Energy scan.
+ */
+public class BluetoothScanResult {
+
+    /**
+     * The payload received from the bluetooth Low Energy device.
+     * This must be the raw bluetooth Low Energy advertisement payload,
+     * as returned by {@code scanRecord.getBytes()} {@link android.bluetooth.le.ScanRecord}
+     * E.g., for an iBeacon: 0201041aff4c00021566622e6d652f40ca9e6f6f71666163653e3a5f06c5
+     */
+    public String payload;
+
+    /**
+     * The received signal strength in dBm. {@link android.bluetooth.le.ScanResult}
+     * E.g., -92
+     */
+    public int rssi;
+
+    /**
+     * Construct a new Bluetooth Low Energy scan result.
+     *
+     * @param payload The payload received from the bluetooth Low Energy device.
+     * This must be the raw bluetooth Low Energy advertisement payload,
+     * as returned by {@code scanRecord.getBytes()} {@link android.bluetooth.le.ScanRecord}
+     * E.g., for an iBeacon: 0201041aff4c00021566622e6d652f40ca9e6f6f71666163653e3a5f06c5
+     * @param rssi The received signal strength in dBm. {@link android.bluetooth.le.ScanResult}
+     * E.g., -92
+     */
+    public BluetoothScanResult(String payload, int rssi) {
+        this.payload = payload;
+        this.rssi = rssi;
+    }
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/internal/LocationPackage.java b/facebook-places/src/main/java/com/facebook/places/internal/LocationPackage.java
new file mode 100644
index 000000000..2606a5bed
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/internal/LocationPackage.java
@@ -0,0 +1,69 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import android.location.Location;
+
+import java.util.List;
+
+/**
+ * Describes the nearby location sensors.
+ * Use LocationPackageManager to generate an instance. {@link LocationPackageManager}
+ */
+public class LocationPackage {
+
+    /**
+     * The location (latitude/longitude).
+     */
+    public Location location;
+
+    /**
+     * Indicates the error type that occured when fetching the location, or null if there was
+     * no error.
+     */
+    public ScannerException.Type locationError;
+
+    /**
+     * Indicates whether wifi scanning was enabled/possible at the moment of the sensor collection.
+     */
+    public boolean isWifiScanningEnabled;
+
+    /**
+     * Describes the wifi network connected at the moment of the sensor collection.
+     */
+    public WifiScanResult connectedWifi;
+
+    /**
+     * Describes the list of nearby wifi networks at the moment of the sensor collection.
+     */
+    public List<WifiScanResult> ambientWifi;
+
+    /**
+     * Indicates whether bluetooth scanning was enabled at the moment of the sensor collection.
+     */
+    public boolean isBluetoothScanningEnabled;
+
+    /**
+     * Describes the list of nearby bluetooth Low Energy beacons at the moment of the sensor
+     * collection.
+     */
+    public List<BluetoothScanResult> ambientBluetoothLe;
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/internal/LocationPackageManager.java b/facebook-places/src/main/java/com/facebook/places/internal/LocationPackageManager.java
new file mode 100644
index 000000000..16dcbfefa
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/internal/LocationPackageManager.java
@@ -0,0 +1,235 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import android.content.Context;
+import android.util.Log;
+
+import com.facebook.FacebookSdk;
+import com.facebook.places.PlaceManager;
+
+import java.util.concurrent.Callable;
+import java.util.concurrent.FutureTask;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public class LocationPackageManager {
+
+    private static final String TAG = "LocationPackageManager";
+
+    /**
+     * Specifies the interface to be implemented to receive the location sensor data.
+     */
+    public interface Listener {
+        /**
+         * Invoked when the location sensor data has been collected. The location sensor data can
+         * then be used to increase the accuracy when placing a current place request.
+         * {@link PlaceManager}
+         *
+         * @param locationPackage the nearby wifi and bluetooth beacons that have been collected.
+         */
+        void onLocationPackage(LocationPackage locationPackage);
+    }
+
+    public static void requestLocationPackage(
+            final LocationPackageRequestParams requestParams,
+            final Listener listener) {
+        FacebookSdk.getExecutor().execute(new Runnable() {
+            @Override
+            public void run() {
+                LocationPackage locationPackage = new LocationPackage();
+                try {
+                    // Start scanning tasks
+                    FutureTask<LocationPackage> locationScanTask = null;
+                    FutureTask<LocationPackage> wifiScanTask = null;
+                    FutureTask<LocationPackage> bleScanTask = null;
+
+                    if (requestParams.isLocationScanEnabled()) {
+
+                        LocationScanner locationScanner = ScannerFactory.newLocationScanner(
+                                FacebookSdk.getApplicationContext(),
+                                requestParams);
+
+                        // Check that location services are enabled, and if not, then abort
+                        // sensor scan.
+                        locationScanner.initAndCheckEligibility();
+
+                        locationScanTask = newLocationScanFuture(locationScanner, requestParams);
+                        FacebookSdk.getExecutor().execute(locationScanTask);
+                    }
+
+                    if (requestParams.isWifiScanEnabled()) {
+                        wifiScanTask = newWifiScanFuture(requestParams);
+                        FacebookSdk.getExecutor().execute(wifiScanTask);
+                    }
+                    if (requestParams.isBluetoothScanEnabled()) {
+                        bleScanTask = newBluetoothScanFuture(requestParams);
+                        FacebookSdk.getExecutor().execute(bleScanTask);
+                    }
+
+                    // Handle bluetooth results.
+                    if (bleScanTask != null) {
+                        try {
+                            LocationPackage bleSensorData = bleScanTask.get();
+                            locationPackage.ambientBluetoothLe = bleSensorData.ambientBluetoothLe;
+                            locationPackage.isBluetoothScanningEnabled =
+                                    bleSensorData.isBluetoothScanningEnabled;
+                        } catch (Exception e) {
+                            logException("Exception scanning for bluetooth beacons", e);
+                        }
+                    }
+
+                    // Handle wifi results
+                    if (wifiScanTask != null) {
+                        try {
+                            LocationPackage wifiSensorData = wifiScanTask.get();
+                            locationPackage.isWifiScanningEnabled =
+                                    wifiSensorData.isWifiScanningEnabled;
+                            locationPackage.connectedWifi = wifiSensorData.connectedWifi;
+                            locationPackage.ambientWifi = wifiSensorData.ambientWifi;
+                        } catch (Exception e) {
+                            logException("Exception scanning for wifi access points", e);
+                        }
+                    }
+
+                    // Handle location results
+                    if (locationScanTask != null) {
+                        try {
+                            LocationPackage locationSensorData = locationScanTask.get();
+                            locationPackage.locationError = locationSensorData.locationError;
+                            locationPackage.location = locationSensorData.location;
+                        } catch (Exception e) {
+                            logException("Exception getting location", e);
+                        }
+                    }
+                } catch (ScannerException e) {
+                    logException("Exception scanning for locations", e);
+                    locationPackage.locationError = e.type;
+                } catch (Exception e) {
+                    logException("Exception requesting a location package", e);
+                }
+                listener.onLocationPackage(locationPackage);
+            }
+        });
+    }
+
+    private static FutureTask<LocationPackage> newLocationScanFuture(
+            final LocationScanner locationScanner,
+            final LocationPackageRequestParams requestParams) {
+        return new FutureTask<>(new Callable<LocationPackage>() {
+            @Override
+            public LocationPackage call() throws Exception {
+                LocationPackage locationPackage = new LocationPackage();
+                try {
+                    locationPackage.location = locationScanner.getLocation();
+                } catch (ScannerException e) {
+                    locationPackage.locationError = e.type;
+                    logException("Exception while getting location", e);
+                } catch (Exception e) {
+                    locationPackage.locationError = ScannerException.Type.UNKNOWN_ERROR;
+                }
+                return locationPackage;
+            }
+        });
+    }
+
+    private static FutureTask<LocationPackage> newBluetoothScanFuture(
+            final LocationPackageRequestParams requestParams) {
+        return new FutureTask<>(new Callable<LocationPackage>() {
+            @Override
+            public LocationPackage call() throws Exception {
+                LocationPackage locationPackage = new LocationPackage();
+                try {
+                    Context context = FacebookSdk.getApplicationContext();
+                    BleScanner bleScanner = ScannerFactory.newBleScanner(context, requestParams);
+
+                    bleScanner.initAndCheckEligibility();
+
+                    try {
+                        bleScanner.startScanning();
+                        try {
+                            Thread.sleep(requestParams.getBluetoothScanDurationMs());
+                        } catch (Exception ex) {
+                            // ignore
+                        }
+                    } finally {
+                        bleScanner.stopScanning();
+                    }
+
+                    int errorCode = bleScanner.getErrorCode();
+                    if (errorCode == 0) {
+                        locationPackage.ambientBluetoothLe = bleScanner.getScanResults();
+                        locationPackage.isBluetoothScanningEnabled = true;
+                    } else {
+                        if (FacebookSdk.isDebugEnabled()) {
+                            Log.d(
+                                TAG,
+                                String.format(
+                                    "Bluetooth LE scan failed with error: %d",
+                                    errorCode));
+                        }
+                        locationPackage.isBluetoothScanningEnabled = false;
+                    }
+                } catch (Exception e) {
+                    logException("Exception scanning for bluetooth beacons", e);
+                    locationPackage.isBluetoothScanningEnabled = false;
+                }
+                return locationPackage;
+            }
+        });
+    }
+
+    private static FutureTask<LocationPackage> newWifiScanFuture(
+            final LocationPackageRequestParams requestParams) {
+        return new FutureTask<>(new Callable<LocationPackage>() {
+            @Override
+            public LocationPackage call() throws Exception {
+                LocationPackage locationPackage = new LocationPackage();
+                try {
+                    Context context = FacebookSdk.getApplicationContext();
+                    WifiScanner wifiScanner = ScannerFactory.newWifiScanner(context, requestParams);
+                    wifiScanner.initAndCheckEligibility();
+
+                    locationPackage.connectedWifi = wifiScanner.getConnectedWifi();
+                    locationPackage.isWifiScanningEnabled = wifiScanner.isWifiScanningEnabled();
+
+                    if (locationPackage.isWifiScanningEnabled) {
+                        locationPackage.ambientWifi =
+                                wifiScanner.getWifiScans();
+                    }
+                } catch (Exception e) {
+                    logException("Exception scanning for wifi access points", e);
+                    locationPackage.isWifiScanningEnabled = false;
+                }
+                return locationPackage;
+            }
+        });
+    }
+
+    private static void logException(String message, Throwable throwable) {
+        if (FacebookSdk.isDebugEnabled()) {
+            Log.e(TAG, message, throwable);
+        }
+    }
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/internal/LocationPackageRequestParams.java b/facebook-places/src/main/java/com/facebook/places/internal/LocationPackageRequestParams.java
new file mode 100644
index 000000000..4ec6f9874
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/internal/LocationPackageRequestParams.java
@@ -0,0 +1,246 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import android.location.LocationManager;
+
+/**
+ * Describes the nearby location sensors.
+ * Use {@link LocationPackageManager} to instantiate an instance.
+ */
+public class LocationPackageRequestParams {
+
+    private static final boolean DEFAULT_LOCATION_ENABLED = true;
+    private static final String[] DEFAULT_LOCATION_PROVIDERS =
+            new String[]{LocationManager.NETWORK_PROVIDER, LocationManager.GPS_PROVIDER};
+    private static final float DEFAULT_LOCATION_MAX_ACCURACY_METERS = 100f;
+    private static final long DEFAULT_LOCATION_REQUEST_TIMEOUT_MS = 30 * 1000;
+    private static final long DEFAULT_LAST_LOCATION_MAX_AGE_MS = 60 * 1000;
+
+    private static final boolean DEFAULT_WIFI_ENABLED = true;
+    private static final long DEFAULT_WIFI_SCAN_MAX_AGE_MS = 30 * 1000;
+    private static final long DEFAULT_WIFI_SCAN_TIMEOUT_MS = 6 * 1000;
+    private static final int DEFAULT_WIFI_MAX_SCAN_RESULTS = 25;
+    private static final boolean DEFAULT_WIFI_ACTIVE_SCAN_ALLOWED = true;
+    private static final boolean DEFAULT_WIFI_ACTIVE_SCAN_FORCED = false;
+
+    private static final boolean DEFAULT_BLUETOOTH_ENABLED = true;
+    private static final long DEFAULT_BLUETOOTH_SCAN_DURATION_MS = 500;
+    private static final int DEFAULT_BLUETOOTH_MAX_SCAN_RESULTS = 25;
+    private static final long DEFAULT_BLUETOOTH_FLUSH_RESULTS_TIMEOUT_MS = 300;
+
+    private boolean isLocationScanEnabled;
+    private final String[] locationProviders;
+    private float locationMaxAccuracyMeters;
+    private long locationRequestTimeoutMs;
+    private long lastLocationMaxAgeMs;
+
+    private boolean isWifiScanEnabled;
+    private long wifiScanMaxAgeMs;
+    private int wifiMaxScanResults;
+    private long wifiScanTimeoutMs;
+    private boolean isWifiActiveScanAllowed;
+    private boolean isWifiActiveScanForced;
+
+    private boolean isBluetoothScanEnabled;
+    private long bluetoothScanDurationMs;
+    private int bluetoothMaxScanResults;
+    private long bluetoothFlushResultsTimeoutMs;
+
+    private LocationPackageRequestParams(Builder b) {
+        isLocationScanEnabled = b.isLocationScanEnabled;
+        locationProviders = b.locationProviders;
+        locationMaxAccuracyMeters = b.locationMaxAccuracyMeters;
+        locationRequestTimeoutMs = b.locationRequestTimeoutMs;
+        lastLocationMaxAgeMs = b.lastLocationMaxAgeMs;
+
+        isWifiScanEnabled = b.isWifiScanEnabled;
+        wifiScanMaxAgeMs = b.wifiScanMaxAgeMs;
+        wifiMaxScanResults = b.wifiMaxScanResults;
+        wifiScanTimeoutMs = b.wifiScanTimeoutMs;
+        isWifiActiveScanAllowed = b.isWifiActiveScanAllowed;
+        isWifiActiveScanForced = b.isWifiActiveScanForced;
+
+        isBluetoothScanEnabled = b.isBluetoothScanEnabled;
+        bluetoothScanDurationMs = b.bluetoothScanDurationMs;
+        bluetoothMaxScanResults = b.bluetoothMaxScanResults;
+        bluetoothFlushResultsTimeoutMs = b.bluetoothFlushResultsTimeoutMs;
+    }
+
+    public boolean isLocationScanEnabled() {
+        return isLocationScanEnabled;
+    }
+
+    public String[] getLocationProviders() {
+        return locationProviders;
+    }
+
+    public float getLocationMaxAccuracyMeters() {
+        return locationMaxAccuracyMeters;
+    }
+
+    public long getLocationRequestTimeoutMs() {
+        return locationRequestTimeoutMs;
+    }
+
+    public long getLastLocationMaxAgeMs() {
+        return lastLocationMaxAgeMs;
+    }
+
+    public boolean isWifiScanEnabled() {
+        return isWifiScanEnabled;
+    }
+
+    public long getWifiScanMaxAgeMs() {
+        return wifiScanMaxAgeMs;
+    }
+
+    public int getWifiMaxScanResults() {
+        return wifiMaxScanResults;
+    }
+
+    public long getWifiScanTimeoutMs() {
+        return wifiScanTimeoutMs;
+    }
+
+    public boolean isWifiActiveScanAllowed() {
+        return isWifiActiveScanAllowed;
+    }
+
+    public boolean isWifiActiveScanForced() {
+        return isWifiActiveScanForced;
+    }
+
+    public boolean isBluetoothScanEnabled() {
+        return isBluetoothScanEnabled;
+    }
+
+    public long getBluetoothScanDurationMs() {
+        return bluetoothScanDurationMs;
+    }
+
+    public long getBluetoothFlushResultsTimeoutMs() {
+        return bluetoothFlushResultsTimeoutMs;
+    }
+
+    public int getBluetoothMaxScanResults() {
+        return bluetoothMaxScanResults;
+    }
+
+    public static class Builder {
+        private boolean isLocationScanEnabled = DEFAULT_LOCATION_ENABLED;
+        private String[] locationProviders = DEFAULT_LOCATION_PROVIDERS;
+        private float locationMaxAccuracyMeters = DEFAULT_LOCATION_MAX_ACCURACY_METERS;
+        private long locationRequestTimeoutMs = DEFAULT_LOCATION_REQUEST_TIMEOUT_MS;
+        private long lastLocationMaxAgeMs = DEFAULT_LAST_LOCATION_MAX_AGE_MS;
+
+        private boolean isWifiScanEnabled = DEFAULT_WIFI_ENABLED;
+        private long wifiScanMaxAgeMs = DEFAULT_WIFI_SCAN_MAX_AGE_MS;
+        private int wifiMaxScanResults = DEFAULT_WIFI_MAX_SCAN_RESULTS;
+        private long wifiScanTimeoutMs = DEFAULT_WIFI_SCAN_TIMEOUT_MS;
+        private boolean isWifiActiveScanAllowed = DEFAULT_WIFI_ACTIVE_SCAN_ALLOWED;
+        private boolean isWifiActiveScanForced = DEFAULT_WIFI_ACTIVE_SCAN_FORCED;
+
+        private boolean isBluetoothScanEnabled = DEFAULT_BLUETOOTH_ENABLED;
+        private long bluetoothScanDurationMs = DEFAULT_BLUETOOTH_SCAN_DURATION_MS;
+        private int bluetoothMaxScanResults = DEFAULT_BLUETOOTH_MAX_SCAN_RESULTS;
+        private long bluetoothFlushResultsTimeoutMs = DEFAULT_BLUETOOTH_FLUSH_RESULTS_TIMEOUT_MS;
+
+        public LocationPackageRequestParams build() {
+            return new LocationPackageRequestParams(this);
+        }
+
+        public Builder setLocationScanEnabled(boolean locationScanEnabled) {
+            isLocationScanEnabled = locationScanEnabled;
+            return this;
+        }
+
+        public Builder setLastLocationMaxAgeMs(long lastLocationMaxAgeMs) {
+            this.lastLocationMaxAgeMs = lastLocationMaxAgeMs;
+            return this;
+        }
+
+        public Builder setLocationProviders(String[] locationProviders) {
+            this.locationProviders = locationProviders;
+            return this;
+        }
+
+        public Builder setLocationMaxAccuracyMeters(float locationMaxAccuracyMeters) {
+            this.locationMaxAccuracyMeters = locationMaxAccuracyMeters;
+            return this;
+        }
+
+        public Builder setLocationRequestTimeoutMs(long locationRequestTimeoutMs) {
+            this.locationRequestTimeoutMs = locationRequestTimeoutMs;
+            return this;
+        }
+
+        public Builder setWifiScanEnabled(boolean wifiScanEnabled) {
+            isWifiScanEnabled = wifiScanEnabled;
+            return this;
+        }
+
+        public Builder setWifiScanMaxAgeMs(long wifiScanMaxAgeMs) {
+            this.wifiScanMaxAgeMs = wifiScanMaxAgeMs;
+            return this;
+        }
+
+        public Builder setWifiMaxScanResults(int wifiMaxScanResults) {
+            this.wifiMaxScanResults = wifiMaxScanResults;
+            return this;
+        }
+
+        public Builder setWifiScanTimeoutMs(long wifiScanTimeoutMs) {
+            this.wifiScanTimeoutMs = wifiScanTimeoutMs;
+            return this;
+        }
+
+        public Builder setWifiActiveScanAllowed(boolean wifiActiveScanAllowed) {
+            isWifiActiveScanAllowed = wifiActiveScanAllowed;
+            return this;
+        }
+
+        public Builder setWifiActiveScanForced(boolean wifiActiveScanForced) {
+            isWifiActiveScanForced = wifiActiveScanForced;
+            return this;
+        }
+
+        public Builder setBluetoothScanEnabled(boolean bluetoothScanEnabled) {
+            isBluetoothScanEnabled = bluetoothScanEnabled;
+            return this;
+        }
+
+        public Builder setBluetoothScanDurationMs(long bluetoothScanDurationMs) {
+            this.bluetoothScanDurationMs = bluetoothScanDurationMs;
+            return this;
+        }
+
+        public Builder setBluetoothMaxScanResults(int bluetoothMaxScanResults) {
+            this.bluetoothMaxScanResults = bluetoothMaxScanResults;
+            return this;
+        }
+
+        public Builder setBluetoothFlushResultsTimeoutMs(long bluetoothFlushResultsTimeoutMs) {
+            this.bluetoothFlushResultsTimeoutMs = bluetoothFlushResultsTimeoutMs;
+            return this;
+        }
+    }
+}
diff --git a/samples/MessengerSendSample/src/main/java/com/facebook/samples/messenger/send/MessengerSendSampleApplication.java b/facebook-places/src/main/java/com/facebook/places/internal/LocationScanner.java
similarity index 70%
rename from samples/MessengerSendSample/src/main/java/com/facebook/samples/messenger/send/MessengerSendSampleApplication.java
rename to facebook-places/src/main/java/com/facebook/places/internal/LocationScanner.java
index 00cd030f1..398b1cf10 100644
--- a/samples/MessengerSendSample/src/main/java/com/facebook/samples/messenger/send/MessengerSendSampleApplication.java
+++ b/facebook-places/src/main/java/com/facebook/places/internal/LocationScanner.java
@@ -18,22 +18,18 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.messenger.send;
+package com.facebook.places.internal;
 
-import android.app.Application;
-
-import com.facebook.FacebookSdk;
-import com.facebook.appevents.AppEventsLogger;
+import android.location.Location;
 
 /**
- * Application object for sample app.
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
  */
-public class MessengerSendSampleApplication extends Application {
+public interface LocationScanner {
+
+    void initAndCheckEligibility() throws ScannerException;
 
-  @Override
-  public void onCreate() {
-    super.onCreate();
-    FacebookSdk.sdkInitialize(this);
-    AppEventsLogger.activateApp(this);
-  }
+    Location getLocation() throws ScannerException;
 }
diff --git a/facebook-places/src/main/java/com/facebook/places/internal/LocationScannerImpl.java b/facebook-places/src/main/java/com/facebook/places/internal/LocationScannerImpl.java
new file mode 100644
index 000000000..54ab607f6
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/internal/LocationScannerImpl.java
@@ -0,0 +1,160 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import android.content.Context;
+import android.location.Location;
+import android.location.LocationListener;
+import android.location.LocationManager;
+import android.os.Bundle;
+import android.os.HandlerThread;
+
+import com.facebook.internal.Validate;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+@SuppressWarnings("MissingPermission")
+public class LocationScannerImpl implements LocationScanner, LocationListener {
+
+    private static final long MIN_TIME_BETWEEN_UPDATES = 100L;
+    private static final float MIN_DISTANCE_BETWEEN_UPDATES = 0f;
+
+    private Context context;
+    private LocationManager locationManager;
+    private LocationPackageRequestParams params;
+    private Location freshLocation;
+    private final Object scanLock = new Object();
+    private List<String> enabledProviders;
+
+    public LocationScannerImpl(
+            Context context,
+            LocationPackageRequestParams params) {
+        this.context = context;
+        this.params = params;
+        locationManager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);
+    }
+
+    @Override
+    public void initAndCheckEligibility() throws ScannerException {
+
+        if (!Validate.hasLocationPermission(context)) {
+            throw new ScannerException(ScannerException.Type.PERMISSION_DENIED);
+        }
+
+        enabledProviders = new ArrayList<>(params.getLocationProviders().length);
+        for (String provider : params.getLocationProviders()) {
+            if (locationManager.isProviderEnabled(provider)) {
+                enabledProviders.add(provider);
+            }
+        }
+
+        if (enabledProviders.isEmpty()) {
+            throw new ScannerException(ScannerException.Type.DISABLED);
+        }
+    }
+
+    private Location getLastLocation(String provider) {
+        Location lastLocation = locationManager.getLastKnownLocation(provider);
+        if (lastLocation != null) {
+            long lastLocationTs = lastLocation.getTime();
+            long locationAgeMs = System.currentTimeMillis() - lastLocationTs;
+            if (locationAgeMs < params.getLastLocationMaxAgeMs()) {
+                return lastLocation;
+            }
+        }
+        return null;
+    }
+
+    @Override
+    public Location getLocation() throws ScannerException {
+        for (String provider : enabledProviders) {
+            Location lastLocation = getLastLocation(provider);
+            if (lastLocation != null) {
+                return lastLocation;
+            }
+        }
+        return getFreshLocation();
+    }
+
+    private Location getFreshLocation() throws ScannerException {
+        freshLocation = null;
+        HandlerThread handlerThread = new HandlerThread("LocationScanner");
+        try {
+            handlerThread.start();
+            for (String provider : enabledProviders) {
+                locationManager.requestLocationUpdates(
+                        provider,
+                        MIN_TIME_BETWEEN_UPDATES,
+                        MIN_DISTANCE_BETWEEN_UPDATES,
+                        this,
+                        handlerThread.getLooper());
+            }
+            try {
+                synchronized (scanLock) {
+                    scanLock.wait(params.getLocationRequestTimeoutMs());
+                }
+            } catch (Exception e) {
+                // ignore
+            }
+        } finally {
+            locationManager.removeUpdates(this);
+            handlerThread.quit();
+        }
+
+        if (freshLocation == null) {
+            throw new ScannerException(ScannerException.Type.TIMEOUT);
+        }
+        return freshLocation;
+    }
+
+    @Override
+    public void onLocationChanged(Location location) {
+        if (freshLocation == null) {
+            if (location.getAccuracy() < params.getLocationMaxAccuracyMeters()) {
+                synchronized (scanLock) {
+                    freshLocation = location;
+                     scanLock.notify();
+                }
+            }
+        }
+    }
+
+    @Override
+    public void onStatusChanged(String provider, int status, Bundle extras) {
+        // ignore
+    }
+
+    @Override
+    public void onProviderEnabled(String provider) {
+        // ignore
+    }
+
+    @Override
+    public void onProviderDisabled(String provider) {
+        // ignore
+    }
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/internal/ScannerException.java b/facebook-places/src/main/java/com/facebook/places/internal/ScannerException.java
new file mode 100644
index 000000000..402f80243
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/internal/ScannerException.java
@@ -0,0 +1,55 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public class ScannerException extends Exception {
+
+    public enum Type {
+        NOT_SUPPORTED,
+        PERMISSION_DENIED,
+        DISABLED,
+        SCAN_ALREADY_IN_PROGRESS,
+        UNKNOWN_ERROR,
+        TIMEOUT,
+    }
+
+    public Type type;
+
+    public ScannerException(Type type) {
+        super("Type: " + type.name());
+        this.type = type;
+    }
+
+    public ScannerException(Type type, String message) {
+        super(message);
+        this.type = type;
+    }
+
+    public ScannerException(Type type, Exception ex) {
+        super("Type: " + type.name(), ex);
+        this.type = type;
+    }
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/internal/ScannerFactory.java b/facebook-places/src/main/java/com/facebook/places/internal/ScannerFactory.java
new file mode 100644
index 000000000..960812652
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/internal/ScannerFactory.java
@@ -0,0 +1,53 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import android.content.Context;
+import android.os.Build;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public class ScannerFactory {
+
+    public static final int OS_VERSION_LOLLIPOP = 21;
+    public static final int OS_VERSION_JELLY_BEAN_MR2 = 18;
+    public static final int OS_VERSION_JELLY_BEAN_MR1 = 17;
+
+    public static BleScanner newBleScanner(Context context, LocationPackageRequestParams params) {
+        if (Build.VERSION.SDK_INT >= OS_VERSION_LOLLIPOP) {
+            return new BleScannerImpl(context, params);
+        }
+        return new BleScannerLegacy();
+    }
+
+    public static WifiScanner newWifiScanner(Context context, LocationPackageRequestParams params) {
+        return new WifiScannerImpl(context, params);
+    }
+
+    public static LocationScanner newLocationScanner(
+            Context context,
+            LocationPackageRequestParams params) {
+        return new LocationScannerImpl(context, params);
+    }
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/internal/WifiScanResult.java b/facebook-places/src/main/java/com/facebook/places/internal/WifiScanResult.java
new file mode 100644
index 000000000..cbdaa8033
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/internal/WifiScanResult.java
@@ -0,0 +1,71 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+/**
+ * Describes a wifi access point scan result.
+ */
+public class WifiScanResult {
+
+    /**
+     * The name of the wifi access point.
+     */
+    public String ssid;
+
+    /**
+     * The hardware/mac-address of the access point.
+     */
+    public String bssid;
+
+    /**
+     * The detected signal strength in dBm.
+     */
+    public int rssi;
+
+    /**
+     * The frequency in MHz of the channel used by the access point.
+     * {@link android.net.wifi.ScanResult}
+     */
+    public int frequency;
+
+    /**
+     * Constructs a new {@code WifiScanResult}
+     */
+    public WifiScanResult() {
+
+    }
+
+    /**
+     * Constructs a new {@code WifiScanResult}
+     *
+     * @param ssid The name of the wifi access point.
+     * @param bssid The hardware/mac-address of the access point.
+     * @param rssi The detected signal strength in dBm.
+     * @param frequency The frequency in MHz of the channel used by the access point.
+     * {@link android.net.wifi.ScanResult}
+     */
+    public WifiScanResult(String ssid, String bssid, int rssi, int frequency) {
+        this.ssid = ssid;
+        this.bssid = bssid;
+        this.rssi = rssi;
+        this.frequency = frequency;
+    }
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/internal/WifiScanner.java b/facebook-places/src/main/java/com/facebook/places/internal/WifiScanner.java
new file mode 100644
index 000000000..a6da816f3
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/internal/WifiScanner.java
@@ -0,0 +1,39 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import java.util.List;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+public interface WifiScanner {
+
+    void initAndCheckEligibility() throws ScannerException;
+
+    WifiScanResult getConnectedWifi() throws ScannerException;
+
+    boolean isWifiScanningEnabled();
+
+    List<WifiScanResult> getWifiScans() throws ScannerException;
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/internal/WifiScannerImpl.java b/facebook-places/src/main/java/com/facebook/places/internal/WifiScannerImpl.java
new file mode 100644
index 000000000..6cabe30f6
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/internal/WifiScannerImpl.java
@@ -0,0 +1,275 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.internal;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.content.pm.PackageManager;
+import android.net.wifi.ScanResult;
+import android.net.wifi.SupplicantState;
+import android.net.wifi.WifiInfo;
+import android.net.wifi.WifiManager;
+import android.os.Build;
+import android.os.SystemClock;
+import android.text.TextUtils;
+
+import com.facebook.internal.Validate;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.List;
+
+/**
+ * com.facebook.places.internal is solely for the use of other packages within the
+ * Facebook SDK for Android. Use of any of the classes in this package is
+ * unsupported, and they may be modified or removed without warning at any time.
+ */
+@SuppressWarnings("MissingPermission")
+public class WifiScannerImpl implements WifiScanner {
+
+    private static final String SSID_NOMAP = "_nomap";
+    private static final String SSID_OPTOUT = "_optout";
+
+    private Context context;
+    private WifiManager wifiManager;
+    private ScanResultBroadcastReceiver broadcastReceiver;
+    private final Object scanLock = new Object();
+    private final LocationPackageRequestParams params;
+
+    WifiScannerImpl(Context context, LocationPackageRequestParams params) {
+        this.context = context;
+        this.params = params;
+    }
+
+    @Override
+    public void initAndCheckEligibility() throws ScannerException {
+
+        if (!context.getPackageManager().hasSystemFeature(PackageManager.FEATURE_WIFI)) {
+            throw new ScannerException(ScannerException.Type.NOT_SUPPORTED);
+        }
+
+        if (!Validate.hasWiFiPermission(context)) {
+            throw new ScannerException(ScannerException.Type.PERMISSION_DENIED);
+        }
+
+        if (wifiManager == null) {
+            wifiManager = (WifiManager) context.getSystemService(Context.WIFI_SERVICE);
+        }
+
+        boolean isWifiScanningAlwaysOn = isWifiScanningAlwaysOn();
+
+        if (!isWifiScanningAlwaysOn && !wifiManager.isWifiEnabled()) {
+            throw new ScannerException(ScannerException.Type.DISABLED);
+        }
+    }
+
+    @Override
+    public WifiScanResult getConnectedWifi() throws ScannerException {
+        try {
+            WifiInfo wifiInfo = wifiManager.getConnectionInfo();
+            if (wifiInfo == null
+                    || TextUtils.isEmpty(wifiInfo.getBSSID())
+                    || wifiInfo.getSupplicantState() != SupplicantState.COMPLETED
+                    || isWifiSsidBlacklisted(wifiInfo.getSSID())) {
+                return null;
+            }
+            WifiScanResult wifiScanResult = new WifiScanResult();
+            wifiScanResult.bssid = wifiInfo.getBSSID();
+            wifiScanResult.ssid = wifiInfo.getSSID();
+            wifiScanResult.rssi = wifiInfo.getRssi();
+            if (Build.VERSION.SDK_INT >= ScannerFactory.OS_VERSION_LOLLIPOP) {
+                wifiScanResult.frequency = wifiInfo.getFrequency();
+            }
+            return wifiScanResult;
+        } catch (Exception e) {
+            throw new ScannerException(ScannerException.Type.UNKNOWN_ERROR, e);
+        }
+    }
+
+    @Override
+    public boolean isWifiScanningEnabled() {
+        try {
+            initAndCheckEligibility();
+            if (Validate.hasLocationPermission(context)) {
+                return true;
+            }
+        } catch (ScannerException e) {
+            // ignore
+        }
+        return false;
+    }
+
+    private boolean isWifiScanningAlwaysOn() {
+        if (Build.VERSION.SDK_INT >= ScannerFactory.OS_VERSION_JELLY_BEAN_MR2) {
+            return wifiManager.isScanAlwaysAvailable();
+        }
+        return false;
+    }
+
+    private List<WifiScanResult> getCachedScanResults()
+            throws ScannerException {
+        try {
+            List<ScanResult> scanResults = wifiManager.getScanResults();
+            scanResults = filterWifiScanResultsByMaxAge(scanResults, params.getWifiScanMaxAgeMs());
+            filterResults(scanResults, params.getWifiMaxScanResults());
+            List<WifiScanResult> wifiScanResults = new ArrayList<>(scanResults.size());
+            for (ScanResult scanResult : scanResults) {
+                if (!isWifiSsidBlacklisted(scanResult.SSID)) {
+                    WifiScanResult wifiScanResult = new WifiScanResult();
+                    wifiScanResult.bssid = scanResult.BSSID;
+                    wifiScanResult.ssid = scanResult.SSID;
+                    wifiScanResult.rssi = scanResult.level;
+                    wifiScanResult.frequency = scanResult.frequency;
+                    wifiScanResults.add(wifiScanResult);
+                }
+            }
+            return wifiScanResults;
+        } catch (Exception e) {
+            throw new ScannerException(ScannerException.Type.UNKNOWN_ERROR, e);
+        }
+    }
+
+    private static boolean isWifiSsidBlacklisted(String ssid) {
+        if (ssid != null) {
+            if (ssid.endsWith(SSID_NOMAP)
+                || ssid.contains(SSID_OPTOUT)) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    private static void filterResults(List<ScanResult> scanResults, int maxResults) {
+        if (scanResults.size() > maxResults) {
+            Comparator<ScanResult> comparator = new Comparator<ScanResult>() {
+                @Override
+                public int compare(ScanResult lhs, ScanResult rhs) {
+                    return rhs.level - lhs.level;
+                }
+            };
+            Collections.sort(scanResults, comparator);
+            scanResults.subList(maxResults, scanResults.size()).clear();
+        }
+    }
+
+    private static List<ScanResult> filterWifiScanResultsByMaxAge(
+            List<ScanResult> scanResults,
+            long maxAgeMs) {
+        List<ScanResult> filtered = new ArrayList<>();
+        if (scanResults != null) {
+            if (Build.VERSION.SDK_INT < ScannerFactory.OS_VERSION_JELLY_BEAN_MR1) {
+                filtered.addAll(scanResults);
+            } else {
+                long nowSinceBootMs = SystemClock.elapsedRealtime();
+                for (ScanResult result : scanResults) {
+                    long ageMs = nowSinceBootMs - (result.timestamp / 1000);
+                    if (ageMs < 0) {
+                        // Some platform use unix timestmap
+                        ageMs = System.currentTimeMillis() - result.timestamp;
+                    }
+                    if (ageMs < maxAgeMs) {
+                        filtered.add(result);
+                    }
+                }
+            }
+        }
+        return filtered;
+    }
+
+    @Override
+    public synchronized List<WifiScanResult> getWifiScans()
+            throws ScannerException{
+        List<WifiScanResult> wifiScanResults = null;
+        if (!params.isWifiActiveScanForced()) {
+              wifiScanResults = getCachedScanResults();
+        }
+        boolean isListEmpty = wifiScanResults == null || wifiScanResults.isEmpty();
+        if (params.isWifiActiveScanForced() || (params.isWifiActiveScanAllowed() && isListEmpty)) {
+            wifiScanResults = getActiveScanResults();
+        }
+        return wifiScanResults;
+    }
+
+    private List<WifiScanResult> getActiveScanResults()
+            throws ScannerException{
+        List<WifiScanResult> wifiScanResults = null;
+        try {
+            if (Validate.hasChangeWifiStatePermission(context)) {
+                registerBroadcastReceiver();
+                boolean isScanStarted = wifiManager.startScan();
+                if (isScanStarted) {
+                    try {
+                        synchronized (scanLock) {
+                            scanLock.wait(params.getWifiScanTimeoutMs());
+                        }
+                    } catch (InterruptedException e) {
+                        // ignore
+                    }
+                    wifiScanResults = getCachedScanResults();
+                }
+            }
+        } catch (Exception e) {
+            // ignore
+        } finally {
+            unregisterBroadcastReceiver();
+        }
+        return wifiScanResults;
+    }
+
+    private void registerBroadcastReceiver() {
+        if (broadcastReceiver != null) {
+            unregisterBroadcastReceiver();
+        }
+        broadcastReceiver = new ScanResultBroadcastReceiver();
+        IntentFilter intentFilter = new IntentFilter();
+        intentFilter.addAction(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION);
+        context.registerReceiver(broadcastReceiver, intentFilter);
+    }
+
+    private void unregisterBroadcastReceiver() {
+        if (broadcastReceiver != null) {
+            try {
+                context.unregisterReceiver(broadcastReceiver);
+            } catch (Exception e) {
+                // ignore
+            }
+            broadcastReceiver = null;
+        }
+    }
+
+    private class ScanResultBroadcastReceiver extends BroadcastReceiver {
+
+        @Override
+        public void onReceive(Context context, Intent intent) {
+            if (intent != null) {
+                if (WifiManager.SCAN_RESULTS_AVAILABLE_ACTION.equals(intent.getAction())) {
+                    synchronized (scanLock) {
+                       scanLock.notify();
+                    }
+                    unregisterBroadcastReceiver();
+                }
+            }
+        }
+    }
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/model/CurrentPlaceFeedbackRequestParams.java b/facebook-places/src/main/java/com/facebook/places/model/CurrentPlaceFeedbackRequestParams.java
new file mode 100644
index 000000000..0a4c1f721
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/model/CurrentPlaceFeedbackRequestParams.java
@@ -0,0 +1,122 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+/**
+ * Describes the parameters used to create a current place feedback request
+ * with {@link com.facebook.places.PlaceManager}
+ */
+public class CurrentPlaceFeedbackRequestParams {
+
+    private final String tracking;
+    private final String placeId;
+    private final Boolean wasHere;
+
+    private CurrentPlaceFeedbackRequestParams(Builder b) {
+        tracking = b.tracking;
+        placeId = b.placeId;
+        wasHere = b.wasHere;
+    }
+
+    /**
+     * Gets the tracking ID. The tracking value is returned in the response
+     * of the current place request {@link com.facebook.places.PlaceManager}
+     *
+     * @return The tracking ID returned by the current place request.
+     */
+    public String getTracking() {
+        return tracking;
+    }
+
+    /**
+     * Gets the place ID associated with the feedback request.
+     * @return The place ID associated with the feedback.
+     */
+    public String getPlaceId() {
+        return placeId;
+    }
+
+    /**
+     * Indicates whether the user was actually located at the place specified by
+     * {@code getPlaceId()}.
+     * Could return null if {@code wasHere} was not set on the {@link Builder}.
+     *
+     * @return {@code true} if the user was at the place specified by getPlaceId(),
+     * {@false} if not,
+     * {@null} if wasHere was not specified on {@link Builder}
+     */
+    public Boolean wasHere() {
+        return wasHere;
+    }
+
+    /**
+     * Describes the builder to create a {@link CurrentPlaceFeedbackRequestParams}
+     */
+    public static class Builder {
+
+        private String tracking;
+        private String placeId;
+        private Boolean wasHere;
+
+        /**
+         * Indicates whether the user was actually located at the place specified by
+         * {@code setPlaceId()}.
+         * @param wasHere {@code true} if the user was at the place specified by
+         * {@code setPlaceId()}
+         * @return the builder
+         */
+        public Builder setWasHere(boolean wasHere) {
+            this.wasHere = wasHere;
+            return this;
+        }
+
+        /**
+         * Sets the place ID for the feedback request.
+         * @param placeId the place ID associated with the feedback.
+         * @return the builder
+         */
+        public Builder setPlaceId(String placeId) {
+            this.placeId = placeId;
+            return this;
+        }
+
+        /**
+         * Sets the tracking ID. The tracking ID value is returned in the response
+         * of the current place request. See {@link com.facebook.places.PlaceManager}
+         * for information on how to place a current place request.
+         *
+         * @param tracking The tracking ID returned by the current place request.
+         * @return The builder
+         */
+        public Builder setTracking(String tracking) {
+            this.tracking = tracking;
+            return this;
+        }
+
+        /**
+         * Returns the {@link CurrentPlaceFeedbackRequestParams}
+         * @return the {@link CurrentPlaceFeedbackRequestParams}
+         */
+        public CurrentPlaceFeedbackRequestParams build() {
+            return new CurrentPlaceFeedbackRequestParams(this);
+        }
+    }
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/model/CurrentPlaceRequestParams.java b/facebook-places/src/main/java/com/facebook/places/model/CurrentPlaceRequestParams.java
new file mode 100644
index 000000000..fc3aebe1d
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/model/CurrentPlaceRequestParams.java
@@ -0,0 +1,203 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+import android.location.Location;
+
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * Describes the parameters of the current place request.
+ * Use {@link com.facebook.places.PlaceManager} to create a new current place request.
+ */
+public class CurrentPlaceRequestParams {
+
+    /**
+     * Describes the confidence level of the current place response.
+     *
+     * A place with field {@code CONFIDENCE_LEVEL} set to {@code HIGH} indicates that there is a
+     * high likelihood that the user is currently located at that place.
+     */
+    public enum ConfidenceLevel {
+        LOW,
+        MEDIUM,
+        HIGH,
+    };
+
+    /**
+     * Describes the location scanning behavior when creating a new current place request.
+     */
+    public enum ScanMode {
+
+        /**
+         * In high accuracy mode, {@link com.facebook.places.PlaceManager}, scans for
+         * nearby Wi-Fi and Bluetooth Low Energy beacons to maximize the accuracy of the current
+         * place request. High accuracy mode is the default value.
+         */
+        HIGH_ACCURACY,
+
+        /**
+         * In low latency mode, {@link com.facebook.places.PlaceManager}, reduces
+         * nearby Wi-Fi and Bluetooth beacon scanning to a minimum to prioritize
+         * low latency rather than accuracy. Using low latency mode reduces the maximum time
+         * taken to generate the current place request. To minimize latency mode, a
+         * location must be specified on the {@link Builder}.
+         */
+        LOW_LATENCY,
+    }
+
+    private final Location location;
+    private final ScanMode scanMode;
+    private final ConfidenceLevel minConfidenceLevel;
+    private final int limit;
+    private final Set<String> fields = new HashSet<>();
+
+    private CurrentPlaceRequestParams(Builder b) {
+        location = b.location;
+        scanMode = b.scanMode;
+        minConfidenceLevel = b.minConfidenceLevel;
+        limit = b.limit;
+        fields.addAll(b.fields);
+    }
+
+    /**
+     * The current location of the user. If null, the SDK automatically retrieves the current
+     * device location using {@link android.location.LocationManager}
+     *
+     * @return The current device location.
+     */
+    public Location getLocation() {
+        return location;
+    }
+
+    /**
+     * The scan mode used when generating the current place request.
+     * @return The scan mode used when generating the current place request.
+     */
+    public ScanMode getScanMode() {
+        return scanMode;
+    }
+
+    /**
+     * Get the minimum confidence level of places to return.
+     * @return The minimum {@link ConfidenceLevel} of places to return.
+     */
+    public ConfidenceLevel getMinConfidenceLevel() {
+        return minConfidenceLevel;
+    }
+
+    /**
+     * The maximum number of places to be returned.
+     * @return The maximum number of places to be returned.
+     */
+    public int getLimit() {
+        return limit;
+    }
+
+    /**
+     * The fields to be returned in the response.
+     * @return The fields to be returned in the response.
+     */
+    public Set<String> getFields() {
+        return fields;
+    }
+
+    /**
+     * Describes the builder to create a {@link CurrentPlaceRequestParams}
+     */
+    public static class Builder {
+
+        private Location location;
+        private ScanMode scanMode = ScanMode.HIGH_ACCURACY;
+        private ConfidenceLevel minConfidenceLevel;
+        private int limit;
+        private final Set<String> fields = new HashSet<>();
+
+        /**
+         * Sets the current user location. This parameter is optional.
+         * If a location is not provided, the SDK automatically retrieves the current device
+         * location using {@link android.location.LocationManager}.
+         *
+         * @param location The location at which the user is currently located.
+         * @return this builder
+         */
+        public Builder setLocation(Location location) {
+            this.location = location;
+            return this;
+        }
+
+        /**
+         * Sets the scan mode to be used. When creating a current place request, the SDK
+         * scans for nearby Wi-Fi access points and Bluetooth Low Energy beacons. This parameter
+         * determines the behavior of that scan. High accuracy is the default value.
+         * In order to use low latency, you must specify a location on this builder.
+         *
+         * @param scanMode The scan mode used when generating the current place request.
+         * @return this builder
+         */
+        public Builder setScanMode(ScanMode scanMode) {
+            this.scanMode = scanMode;
+            return this;
+        }
+
+        /**
+         * The minimum confidence level of suggestions to return. See {@link ConfidenceLevel}.
+         * @param minConfidenceLevel the minimum confidence level of suggestions to return.
+         * @return this builder
+         */
+        public Builder setMinConfidenceLevel(ConfidenceLevel minConfidenceLevel) {
+            this.minConfidenceLevel = minConfidenceLevel;
+            return this;
+        }
+
+        /**
+         * Sets the maximum number of results to be returned.
+         *
+         * @param limit the maximum number of results to be returned.
+         * @return this builder
+         */
+        public Builder setLimit(int limit) {
+            this.limit = limit;
+            return this;
+        }
+
+        /**
+         * Specifies a field to be added to the response. Refer to {@link PlaceFields} for a list
+         * of known place fields. Refer to the online Places Graph documentation for an up to date
+         * list of fields.
+         * @param field The field to be returned in the response {@link PlaceFields}.
+         * @return this builder
+         */
+        public Builder addField(String field) {
+            fields.add(field);
+            return this;
+        }
+
+        /**
+         * Returns the {@link CurrentPlaceRequestParams}
+         * @return the {@link CurrentPlaceRequestParams}
+         */
+        public CurrentPlaceRequestParams build() {
+            return new CurrentPlaceRequestParams(this);
+        }
+    }
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/model/PlaceFields.java b/facebook-places/src/main/java/com/facebook/places/model/PlaceFields.java
new file mode 100644
index 000000000..b435b2709
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/model/PlaceFields.java
@@ -0,0 +1,210 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+/**
+ * Describes the fields available when searching for a place, or when querying a
+ * place's' information with {@link com.facebook.places.PlaceManager}. Refer to
+ * the online Places Graph documentation to get the complete list of supported
+ * place fields.
+ */
+public interface PlaceFields {
+
+    /**
+     * Information about the Place.
+     */
+    String ABOUT = "about";
+
+    /**
+     * AppLinks to the Place on various devices.
+     */
+    String APP_LINKS = "app_links";
+
+    /**
+     * The Place's categories.
+     */
+    String CATEGORY_LIST = "category_list";
+
+    /**
+     * The number of checkins at this Place.
+     */
+    String CHECKINS = "checkins";
+
+    /**
+     * To be used on the current_place request. Indicates the confidence level of the
+     * current place result.
+     */
+    String CONFIDENCE_LEVEL = "confidence_level";
+
+    /**
+     * OpenGraphContext. The social context for this Place, including friends who were at
+     * this place, or who liked to its page. This field requires authentication with a user
+     * token. An error will be thrown if this field is requested using a client token.
+     */
+    String CONTEXT = "context";
+
+    /**
+     * CoverPhoto. Information about the cover image.
+     */
+    String COVER = "cover";
+
+    /**
+     * The description of the Place.
+     */
+    String DESCRIPTION = "description";
+
+    /**
+     * Engagement. The social sentence and like count information for this place.
+     * This is the same information used for the Like button.
+     */
+    String ENGAGEMENT = "engagement";
+
+    /**
+     * Specifies a single range of open hours per day.
+     * Each day can have two different hours ranges.
+     * The keys in the map are in the form of {day}_{number}_{status}.
+     * {day} should be the first 3 characters of the day of the week,
+     * {number} should be either 1 or 2 to allow for the two different hours ranges per day.
+     * {status} should be either open or close, to delineate the start or end of a time range.
+     * An example would be mon_1_open with value 17:00 and mon_1_close with value 21:15
+     * which would represent a single opening range of 5 PM to 9:15 PM on Mondays.
+     */
+    String HOURS = "hours";
+
+    /**
+     * The unique node ID of the place on the graph api.
+     */
+    String ID = "id";
+
+    /**
+     * Indicates whether this place is always open.
+     */
+    String IS_ALWAYS_OPEN = "is_always_open";
+
+    /**
+     * Indicates whether this place is permanently closed.
+     */
+    String IS_PERMANENTLY_CLOSED = "is_permanently_closed";
+
+    /**
+     * Pages with a large number of followers can be manually verified by Facebook as having
+     * an authentic identity. This field indicates whether the page is verified by this process.
+     */
+    String IS_VERIFIED = "is_verified";
+
+    /**
+     * The place's web URL.
+     */
+    String LINK = "link";
+
+    /**
+     * Location information about the Place. E.g., latitude and longitude, and street address.
+     */
+    String LOCATION = "location";
+
+    /**
+     * The categories that this place matched.
+     * To be used on the search request if the categories parameter is specified.
+     */
+    String MATCHED_CATEGORIES = "matched_categories";
+
+    /**
+     * The name of the place.
+     */
+    String NAME = "name";
+
+    /**
+     * Overall page rating based on a rating survey from users, on a scale of 1-5.
+     * This value is normalized, and is not guaranteed to be a strict average of user ratings.
+     */
+    String OVERALL_STAR_RATING = "overall_star_rating";
+
+    /**
+     * PageParking. Parking information about the Place.
+     */
+    String PARKING = "parking";
+
+    /**
+     * The available payment options.
+     */
+    String PAYMENT_OPTIONS = "payment_options";
+
+    /**
+     * The place's phone number.
+     */
+    String PHONE = "phone";
+
+    /**
+     * Profile photos posted by the place's Page.
+     */
+    String PHOTOS_PROFILE = "photos";
+
+    /**
+     * Photos on the place's Page tagged by other Pages.
+     */
+    String PHOTOS_TAGGED = "photos.type(tagged)";
+
+    /**
+     * Photos uploaded by the place's Page.
+     */
+    String PHOTOS_UPLOADED = "photos.type(uploaded)";
+
+    /**
+     * The current profile picture of the place's Page.
+     */
+    String PICTURE = "picture";
+
+    /**
+     * Price range of the business. Applicable to Restaurants or Nightlife.
+     * Can be one of $ (0-10), $$ (10-30), $$$ (30-50), $$$$ (50+), or Unspecified.
+     */
+    String PRICE_RANGE = "price_range";
+
+    /**
+     * Number of ratings for the place.
+     */
+    String RATING_COUNT = "rating_count";
+
+    /**
+     * Restaurant services. Example: delivery, takeout.
+     */
+    String RESTAURANT_SERVICES = "restaurant_services";
+
+    /**
+     * PageRestaurantSpecialties. The restaurant's specialties. Applicable to Restaurants.
+     */
+    String RESTAURANT_SPECIALTIES = "restaurant_specialties";
+
+    /**
+     * The address, in a single line of text.
+     */
+    String SINGLE_LINE_ADDRESS = "single_line_address";
+
+    /**
+     * The URL of the place's website.
+     */
+    String WEBSITE = "website";
+
+    /**
+     * Workflows.
+     */
+    String WORKFLOWS = "workflows";
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/model/PlaceInfoRequestParams.java b/facebook-places/src/main/java/com/facebook/places/model/PlaceInfoRequestParams.java
new file mode 100644
index 000000000..bc2816342
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/model/PlaceInfoRequestParams.java
@@ -0,0 +1,108 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * Describes the parameters used to create a place info request
+ * with {@link com.facebook.places.PlaceManager}.
+ */
+public final class PlaceInfoRequestParams {
+
+    private final String placeId;
+    private final Set<String> fields = new HashSet<>();
+
+    private PlaceInfoRequestParams(Builder b) {
+        placeId = b.placeId;
+        fields.addAll(b.fields);
+    }
+
+    /**
+     * Gets the ID of the place to be queried.
+     * @return the ID of the place to be queried.
+     */
+    public String getPlaceId() {
+        return placeId;
+    }
+
+    /**
+     * Gets the list of fields to be returned in the response.
+     * @return the list of fields to be returned in the response.
+     */
+    public Set<String> getFields() {
+        return fields;
+    }
+
+    /**
+     * Describes the builder to create a {@link PlaceInfoRequestParams}.
+     */
+    public static class Builder {
+
+        private String placeId;
+        private final Set<String> fields = new HashSet<>();
+
+        /**
+         * Sets the ID of the place to be queried.
+         * @param placeId the ID of the place to be queried.
+         * @return the builder.
+         */
+        public Builder setPlaceId(String placeId) {
+            this.placeId = placeId;
+            return this;
+        }
+
+        /**
+         * Add a field to be returned in the response data. See {@link PlaceFields} for a list of
+         * known fields. Refer to the online Places Graph documentation for an up to date list of
+         * fields.
+         * @param field The field to be added to the list of fields to be returned.
+         * @return The builder.
+         */
+        public Builder addField(String field) {
+            fields.add(field);
+            return this;
+        }
+
+        /**
+         * Add a list of fields to be returned in the response data. See {@link PlaceFields}
+         * for a list of known fields. Refer to the online Places Graph documentation for an
+         * up to date list of fields.
+         * @param fields The list of fields to be returned in the response data.
+         * @return The builder.
+         */
+        public Builder addFields(String[] fields) {
+            for (String field : fields) {
+                this.fields.add(field);
+            }
+            return this;
+        }
+
+        /**
+         * Returns the {@link PlaceInfoRequestParams}.
+         * @return the {@link PlaceInfoRequestParams}.
+         */
+        public PlaceInfoRequestParams build() {
+            return new PlaceInfoRequestParams(this);
+        }
+    }
+}
diff --git a/facebook-places/src/main/java/com/facebook/places/model/PlaceSearchRequestParams.java b/facebook-places/src/main/java/com/facebook/places/model/PlaceSearchRequestParams.java
new file mode 100644
index 000000000..e5c388097
--- /dev/null
+++ b/facebook-places/src/main/java/com/facebook/places/model/PlaceSearchRequestParams.java
@@ -0,0 +1,171 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * Describes the parameters to create a place search request
+ * with {@link com.facebook.places.PlaceManager}.
+ */
+public final class PlaceSearchRequestParams {
+
+    private final int distance;
+    private final int limit;
+    private final String searchText;
+    private final Set<String> categories = new HashSet<>();
+    private final Set<String> fields = new HashSet<>();
+
+    private PlaceSearchRequestParams(Builder b) {
+        distance = b.distance;
+        limit = b.limit;
+        searchText = b.searchText;
+        categories.addAll(b.categories);
+        fields.addAll(b.fields);
+    }
+
+    /**
+     * Gets the maximum distance (in meters) from the location specified.
+     * This can be used only in conjunction with a location.
+     *
+     * @return The maximum distance in meters from the location specified.
+     */
+    public int getDistance() {
+        return distance;
+    }
+
+    /**
+     * Sets the maximum number of results to be returned.
+     *
+     * @return The maximum number of results to return.
+     */
+    public int getLimit() {
+        return limit;
+    }
+
+    /**
+     * Gets the name of the place to search for.
+     *
+     * @@return The name of the place to search for.
+     */
+    public String getSearchText() {
+        return searchText;
+    }
+
+    /**
+     * Gets the categories used to filter the place search results.
+     * @return The categories used to filter the place search results.
+     */
+    public Set<String> getCategories() {
+        return categories;
+    }
+
+    /**
+     * Gets the list of fields to be returned in the response.
+     * @return The list of fields to be returned in the response.
+     */
+    public Set<String> getFields() {
+        return fields;
+    }
+
+    /**
+     * Describes the builder to create a {@link PlaceSearchRequestParams}
+     */
+    public static class Builder {
+
+        private int distance;
+        private int limit;
+        private String searchText;
+        private final Set<String> categories = new HashSet<>();
+        private final Set<String> fields = new HashSet<>();
+
+        /**
+         * Sets the maximum search radius in meters. If {@code PlaceManager.newPlaceSearchRequest()}
+         * is used, then this parameter defines the maximum search radius around the current device
+         * location. If {@code PlaceManager.newPlaceSearchRequestForLocation()} is used, then this
+         * parameter defines the maximum search radius around the specified location.
+         *
+         * @param distance The maximum distance in meters.
+         * @return The builder.
+         */
+        public Builder setDistance(int distance) {
+            this.distance = distance;
+            return this;
+        }
+
+        /**
+         * Sets the maximum number of places to be returned.
+         *
+         * @param limit The maximum number of places to return.
+         * @return The builder.
+         */
+        public Builder setLimit(int limit) {
+            this.limit = limit;
+            return this;
+        }
+
+        /**
+         * Sets the name of the place to search for.
+         * If this parameter is not specified, then you must supply a location,
+         * and the response will contain places that are near the given location.
+         *
+         * @param searchText The name of the place to search for.
+         * @return The builder.
+         */
+        public Builder setSearchText(String searchText) {
+            this.searchText = searchText;
+            return this;
+        }
+
+        /**
+         * Add a place category to restrict the search results. Refer to the online Places Graph
+         * documentation to see the list of supported categories.
+         * @param category The name of the place category to add as a filter.
+         * @return The builder.
+         */
+        public Builder addCategory(String category) {
+            categories.add(category);
+            return this;
+        }
+
+        /**
+         * Add a place information field to the list of fields to be returned.
+         * Refer to {@link PlaceFields} for a list of fields. Refer to the online Places Graph
+         * documentation for the current list of supported fields.
+         *
+         * @param field The field to be returned in the place search response.
+         * @return The builder.
+         */
+        public Builder addField(String field) {
+            fields.add(field);
+            return this;
+        }
+
+        /**
+         * Returns the {@link PlaceSearchRequestParams}.
+         * @return the {@link PlaceSearchRequestParams}.
+         */
+        public PlaceSearchRequestParams build() {
+            return new PlaceSearchRequestParams(this);
+        }
+    }
+}
diff --git a/facebook-share/.gitignore b/facebook-share/.gitignore
new file mode 100644
index 000000000..796b96d1c
--- /dev/null
+++ b/facebook-share/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/facebook-share/build.gradle b/facebook-share/build.gradle
new file mode 100644
index 000000000..e27749b89
--- /dev/null
+++ b/facebook-share/build.gradle
@@ -0,0 +1,48 @@
+apply plugin: 'com.android.library'
+
+project.group 'com.facebook.android'
+
+project.ext.name = 'Facebook-Share-Android-SDK'
+project.ext.artifactId = "facebook-share"
+project.ext.description = 'Facebook Share Android SDK'
+project.ext.url = 'https://github.com/facebook/facebook-android-sdk/facebook-share'
+
+dependencies {
+    // Facebook Dependencies
+    compile project(':facebook-core')
+    compile project(':facebook-common')
+}
+
+android {
+    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
+    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
+
+    defaultConfig {
+        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
+        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
+        consumerProguardFiles 'proguard-rules.pro'
+        vectorDrawables.useSupportLibrary = true
+    }
+
+    aaptOptions {
+        additionalParameters "--no-version-vectors"
+    }
+
+    lintOptions {
+        abortOnError false
+    }
+
+    compileOptions {
+        sourceCompatibility JavaVersion.VERSION_1_7
+        targetCompatibility JavaVersion.VERSION_1_7
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+apply from: "${rootDir}/maven.gradle"
diff --git a/facebook-share/proguard-rules.pro b/facebook-share/proguard-rules.pro
new file mode 100644
index 000000000..1b6297c81
--- /dev/null
+++ b/facebook-share/proguard-rules.pro
@@ -0,0 +1,33 @@
+# To enable ProGuard in your project, edit project.properties
+# to define the proguard.config property as described in that file.
+#
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in ${sdk.dir}/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the ProGuard
+# include property in project.properties.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+-keepclassmembers class * implements java.io.Serializable {
+    private static final java.io.ObjectStreamField[] serialPersistentFields;
+    private void writeObject(java.io.ObjectOutputStream);
+    private void readObject(java.io.ObjectInputStream);
+    java.lang.Object writeReplace();
+    java.lang.Object readResolve();
+}
+
+-keepnames class com.facebook.FacebookActivity
+-keepnames class com.facebook.CustomTabActivity
+
+-keep class com.facebook.share.Share
diff --git a/facebook/src/main/res/values-af/messenger_button_strings.xml b/facebook-share/src/main/AndroidManifest.xml
similarity index 86%
rename from facebook/src/main/res/values-af/messenger_button_strings.xml
rename to facebook-share/src/main/AndroidManifest.xml
index 17be2a914..3f8c2f38e 100644
--- a/facebook/src/main/res/values-af/messenger_button_strings.xml
+++ b/facebook-share/src/main/AndroidManifest.xml
@@ -19,6 +19,11 @@
     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 -->
 
-<resources>
-  <string name="messenger_send_button_text">Stuur</string>
-</resources>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.facebook.share">
+
+    <application android:supportsRtl="true">
+
+    </application>
+
+</manifest>
diff --git a/facebook/src/main/java/com/facebook/internal/CollectionMapper.java b/facebook-share/src/main/java/com/facebook/internal/CollectionMapper.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/internal/CollectionMapper.java
rename to facebook-share/src/main/java/com/facebook/internal/CollectionMapper.java
index 6ab0f110a..191073e35 100644
--- a/facebook/src/main/java/com/facebook/internal/CollectionMapper.java
+++ b/facebook-share/src/main/java/com/facebook/internal/CollectionMapper.java
@@ -22,7 +22,6 @@
 
 import com.facebook.FacebookException;
 
-import java.util.HashSet;
 import java.util.Iterator;
 import java.util.LinkedList;
 import java.util.List;
diff --git a/facebook/src/main/java/com/facebook/internal/Mutable.java b/facebook-share/src/main/java/com/facebook/internal/Mutable.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/internal/Mutable.java
rename to facebook-share/src/main/java/com/facebook/internal/Mutable.java
diff --git a/facebook/src/main/java/com/facebook/share/DeviceShareDialog.java b/facebook-share/src/main/java/com/facebook/share/DeviceShareDialog.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/share/DeviceShareDialog.java
rename to facebook-share/src/main/java/com/facebook/share/DeviceShareDialog.java
index c9c017124..bbf8422e8 100644
--- a/facebook/src/main/java/com/facebook/share/DeviceShareDialog.java
+++ b/facebook-share/src/main/java/com/facebook/share/DeviceShareDialog.java
@@ -22,7 +22,6 @@
 import android.app.Activity;
 import android.app.Fragment;
 import android.content.Intent;
-import android.os.Bundle;
 
 import com.facebook.FacebookActivity;
 import com.facebook.FacebookCallback;
@@ -121,7 +120,6 @@ protected void registerCallbackImpl(
                 new CallbackManagerImpl.Callback() {
                     @Override
                     public boolean onActivityResult(int resultCode, Intent data) {
-                        Bundle extras = data.getExtras();
                         if (data.hasExtra("error")) {
                             FacebookRequestError error = data.getParcelableExtra("error");
                             callback.onError(error.getException());
diff --git a/facebook-share/src/main/java/com/facebook/share/Share.java b/facebook-share/src/main/java/com/facebook/share/Share.java
new file mode 100644
index 000000000..6a34d50a6
--- /dev/null
+++ b/facebook-share/src/main/java/com/facebook/share/Share.java
@@ -0,0 +1,5 @@
+// Copyright 2004-present Facebook. All Rights Reserved.
+
+package com.facebook.share;
+
+public class Share { }
diff --git a/facebook/src/main/java/com/facebook/share/ShareApi.java b/facebook-share/src/main/java/com/facebook/share/ShareApi.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/share/ShareApi.java
rename to facebook-share/src/main/java/com/facebook/share/ShareApi.java
index 2917e345e..7940f63f2 100644
--- a/facebook/src/main/java/com/facebook/share/ShareApi.java
+++ b/facebook-share/src/main/java/com/facebook/share/ShareApi.java
@@ -350,7 +350,7 @@ public void onCompleted(GraphResponse response) {
         };
         try {
             for (SharePhoto photo : photoContent.getPhotos()) {
-                Bundle params = null;
+                Bundle params;
                 try {
                     params = getSharePhotoCommonParameters(photo, photoContent);
                 } catch (JSONException e) {
diff --git a/facebook/src/main/java/com/facebook/share/internal/AppInviteDialogFeature.java b/facebook-share/src/main/java/com/facebook/share/internal/AppInviteDialogFeature.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/internal/AppInviteDialogFeature.java
rename to facebook-share/src/main/java/com/facebook/share/internal/AppInviteDialogFeature.java
diff --git a/facebook/src/main/java/com/facebook/share/internal/GameRequestValidation.java b/facebook-share/src/main/java/com/facebook/share/internal/GameRequestValidation.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/internal/GameRequestValidation.java
rename to facebook-share/src/main/java/com/facebook/share/internal/GameRequestValidation.java
diff --git a/facebook/src/main/java/com/facebook/share/internal/MessageDialogFeature.java b/facebook-share/src/main/java/com/facebook/share/internal/MessageDialogFeature.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/internal/MessageDialogFeature.java
rename to facebook-share/src/main/java/com/facebook/share/internal/MessageDialogFeature.java
diff --git a/facebook/src/main/java/com/facebook/share/internal/OpenGraphMessageDialogFeature.java b/facebook-share/src/main/java/com/facebook/share/internal/OpenGraphMessageDialogFeature.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/internal/OpenGraphMessageDialogFeature.java
rename to facebook-share/src/main/java/com/facebook/share/internal/OpenGraphMessageDialogFeature.java
diff --git a/facebook/src/main/java/com/facebook/share/internal/VideoUploader.java b/facebook-share/src/main/java/com/facebook/share/internal/VideoUploader.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/share/internal/VideoUploader.java
rename to facebook-share/src/main/java/com/facebook/share/internal/VideoUploader.java
index 52a012d9d..48c370a22 100644
--- a/facebook/src/main/java/com/facebook/share/internal/VideoUploader.java
+++ b/facebook-share/src/main/java/com/facebook/share/internal/VideoUploader.java
@@ -230,7 +230,7 @@ private static synchronized void enqueueRequest(
         int bufferSize = Math.min(8192, chunkSize);
         byte[] buffer = new byte[bufferSize];
 
-        int len = 0;
+        int len;
         while ((len = uploadContext.videoStream.read(buffer)) != -1) {
             byteBufferStream.write(buffer, 0, len);
 
@@ -333,7 +333,7 @@ private UploadContext(
 
         private void initialize()
                 throws FileNotFoundException {
-            ParcelFileDescriptor fileDescriptor = null;
+            ParcelFileDescriptor fileDescriptor;
             try {
                 if (Utility.isFileUri(videoUri)) {
                     fileDescriptor = ParcelFileDescriptor.open(
diff --git a/facebook/src/main/java/com/facebook/share/model/AppInviteContent.java b/facebook-share/src/main/java/com/facebook/share/model/AppInviteContent.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/model/AppInviteContent.java
rename to facebook-share/src/main/java/com/facebook/share/model/AppInviteContent.java
diff --git a/facebook/src/main/java/com/facebook/share/widget/AppInviteDialog.java b/facebook-share/src/main/java/com/facebook/share/widget/AppInviteDialog.java
similarity index 97%
rename from facebook/src/main/java/com/facebook/share/widget/AppInviteDialog.java
rename to facebook-share/src/main/java/com/facebook/share/widget/AppInviteDialog.java
index d65bdcbd0..90f6f4b56 100644
--- a/facebook/src/main/java/com/facebook/share/widget/AppInviteDialog.java
+++ b/facebook-share/src/main/java/com/facebook/share/widget/AppInviteDialog.java
@@ -29,10 +29,15 @@
 
 import com.facebook.FacebookCallback;
 import com.facebook.internal.*;
+import com.facebook.internal.AppCall;
+import com.facebook.internal.CallbackManagerImpl;
+import com.facebook.internal.DialogFeature;
+import com.facebook.internal.DialogPresenter;
+import com.facebook.internal.FacebookDialogBase;
+import com.facebook.internal.FragmentWrapper;
 import com.facebook.share.internal.*;
 import com.facebook.share.model.AppInviteContent;
 
-import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
diff --git a/facebook/src/main/java/com/facebook/share/widget/CreateAppGroupDialog.java b/facebook-share/src/main/java/com/facebook/share/widget/CreateAppGroupDialog.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/widget/CreateAppGroupDialog.java
rename to facebook-share/src/main/java/com/facebook/share/widget/CreateAppGroupDialog.java
diff --git a/facebook/src/main/java/com/facebook/share/widget/DeviceShareButton.java b/facebook-share/src/main/java/com/facebook/share/widget/DeviceShareButton.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/share/widget/DeviceShareButton.java
rename to facebook-share/src/main/java/com/facebook/share/widget/DeviceShareButton.java
index 67b03ffc7..97fdafef4 100644
--- a/facebook/src/main/java/com/facebook/share/widget/DeviceShareButton.java
+++ b/facebook-share/src/main/java/com/facebook/share/widget/DeviceShareButton.java
@@ -28,10 +28,10 @@
 import com.facebook.FacebookButtonBase;
 import com.facebook.FacebookCallback;
 import com.facebook.FacebookSdk;
-import com.facebook.R;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.CallbackManagerImpl;
 import com.facebook.share.DeviceShareDialog;
+import com.facebook.share.R;
 import com.facebook.share.model.ShareContent;
 
 /**
diff --git a/facebook/src/main/java/com/facebook/share/widget/GameRequestDialog.java b/facebook-share/src/main/java/com/facebook/share/widget/GameRequestDialog.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/widget/GameRequestDialog.java
rename to facebook-share/src/main/java/com/facebook/share/widget/GameRequestDialog.java
diff --git a/facebook/src/main/java/com/facebook/share/widget/JoinAppGroupDialog.java b/facebook-share/src/main/java/com/facebook/share/widget/JoinAppGroupDialog.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/widget/JoinAppGroupDialog.java
rename to facebook-share/src/main/java/com/facebook/share/widget/JoinAppGroupDialog.java
diff --git a/facebook/src/main/java/com/facebook/share/widget/MessageDialog.java b/facebook-share/src/main/java/com/facebook/share/widget/MessageDialog.java
similarity index 99%
rename from facebook/src/main/java/com/facebook/share/widget/MessageDialog.java
rename to facebook-share/src/main/java/com/facebook/share/widget/MessageDialog.java
index 01fb16943..03abaabd0 100644
--- a/facebook/src/main/java/com/facebook/share/widget/MessageDialog.java
+++ b/facebook-share/src/main/java/com/facebook/share/widget/MessageDialog.java
@@ -212,7 +212,6 @@ public AppCall createAppCall(final ShareContent content) {
 
             final AppCall appCall = createBaseAppCall();
             final boolean shouldFailOnDataError = getShouldFailOnDataError();
-            final Activity activity = getActivityContext();
 
             DialogPresenter.setupAppCallForNativeDialog(
                     appCall,
diff --git a/facebook/src/main/java/com/facebook/share/widget/SendButton.java b/facebook-share/src/main/java/com/facebook/share/widget/SendButton.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/share/widget/SendButton.java
rename to facebook-share/src/main/java/com/facebook/share/widget/SendButton.java
index 068d9ebc6..4155360c7 100644
--- a/facebook/src/main/java/com/facebook/share/widget/SendButton.java
+++ b/facebook-share/src/main/java/com/facebook/share/widget/SendButton.java
@@ -22,12 +22,11 @@
 
 import android.content.Context;
 import android.util.AttributeSet;
-import android.view.View;
 
-import com.facebook.R;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.CallbackManagerImpl;
 import com.facebook.internal.FacebookDialogBase;
+import com.facebook.share.R;
 import com.facebook.share.Sharer;
 import com.facebook.share.model.ShareContent;
 
diff --git a/facebook/src/main/java/com/facebook/share/widget/ShareButton.java b/facebook-share/src/main/java/com/facebook/share/widget/ShareButton.java
similarity index 98%
rename from facebook/src/main/java/com/facebook/share/widget/ShareButton.java
rename to facebook-share/src/main/java/com/facebook/share/widget/ShareButton.java
index 2c5835150..d37f6b164 100644
--- a/facebook/src/main/java/com/facebook/share/widget/ShareButton.java
+++ b/facebook-share/src/main/java/com/facebook/share/widget/ShareButton.java
@@ -22,12 +22,11 @@
 
 import android.content.Context;
 import android.util.AttributeSet;
-import android.view.View;
 
-import com.facebook.R;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.CallbackManagerImpl;
 import com.facebook.internal.FacebookDialogBase;
+import com.facebook.share.R;
 import com.facebook.share.Sharer;
 import com.facebook.share.model.ShareContent;
 
diff --git a/facebook/src/main/java/com/facebook/share/widget/ShareButtonBase.java b/facebook-share/src/main/java/com/facebook/share/widget/ShareButtonBase.java
similarity index 100%
rename from facebook/src/main/java/com/facebook/share/widget/ShareButtonBase.java
rename to facebook-share/src/main/java/com/facebook/share/widget/ShareButtonBase.java
diff --git a/facebook/src/main/res/color/com_facebook_send_button_text_color.xml b/facebook-share/src/main/res/color/com_facebook_send_button_text_color.xml
similarity index 100%
rename from facebook/src/main/res/color/com_facebook_send_button_text_color.xml
rename to facebook-share/src/main/res/color/com_facebook_send_button_text_color.xml
diff --git a/facebook-share/src/main/res/drawable-hdpi/com_facebook_button_send_icon_blue.png b/facebook-share/src/main/res/drawable-hdpi/com_facebook_button_send_icon_blue.png
new file mode 100644
index 000000000..68ac4fdd2
Binary files /dev/null and b/facebook-share/src/main/res/drawable-hdpi/com_facebook_button_send_icon_blue.png differ
diff --git a/facebook-share/src/main/res/drawable-hdpi/com_facebook_button_send_icon_white.png b/facebook-share/src/main/res/drawable-hdpi/com_facebook_button_send_icon_white.png
new file mode 100644
index 000000000..26ce8e230
Binary files /dev/null and b/facebook-share/src/main/res/drawable-hdpi/com_facebook_button_send_icon_white.png differ
diff --git a/facebook-share/src/main/res/drawable-mdpi/com_facebook_button_send_icon_blue.png b/facebook-share/src/main/res/drawable-mdpi/com_facebook_button_send_icon_blue.png
new file mode 100644
index 000000000..3a2474bd8
Binary files /dev/null and b/facebook-share/src/main/res/drawable-mdpi/com_facebook_button_send_icon_blue.png differ
diff --git a/facebook-share/src/main/res/drawable-mdpi/com_facebook_button_send_icon_white.png b/facebook-share/src/main/res/drawable-mdpi/com_facebook_button_send_icon_white.png
new file mode 100644
index 000000000..e76263eb5
Binary files /dev/null and b/facebook-share/src/main/res/drawable-mdpi/com_facebook_button_send_icon_white.png differ
diff --git a/facebook-share/src/main/res/drawable-xhdpi/com_facebook_button_send_icon_blue.png b/facebook-share/src/main/res/drawable-xhdpi/com_facebook_button_send_icon_blue.png
new file mode 100644
index 000000000..3466887ad
Binary files /dev/null and b/facebook-share/src/main/res/drawable-xhdpi/com_facebook_button_send_icon_blue.png differ
diff --git a/facebook-share/src/main/res/drawable-xhdpi/com_facebook_button_send_icon_white.png b/facebook-share/src/main/res/drawable-xhdpi/com_facebook_button_send_icon_white.png
new file mode 100644
index 000000000..0d354dd19
Binary files /dev/null and b/facebook-share/src/main/res/drawable-xhdpi/com_facebook_button_send_icon_white.png differ
diff --git a/facebook-share/src/main/res/drawable-xxhdpi/com_facebook_button_send_icon_white.png b/facebook-share/src/main/res/drawable-xxhdpi/com_facebook_button_send_icon_white.png
new file mode 100644
index 000000000..34423ab98
Binary files /dev/null and b/facebook-share/src/main/res/drawable-xxhdpi/com_facebook_button_send_icon_white.png differ
diff --git a/facebook/src/main/res/drawable/com_facebook_button_send_background.xml b/facebook-share/src/main/res/drawable/com_facebook_button_send_background.xml
similarity index 100%
rename from facebook/src/main/res/drawable/com_facebook_button_send_background.xml
rename to facebook-share/src/main/res/drawable/com_facebook_button_send_background.xml
diff --git a/facebook/src/main/res/drawable/com_facebook_send_button_icon.xml b/facebook-share/src/main/res/drawable/com_facebook_send_button_icon.xml
similarity index 100%
rename from facebook/src/main/res/drawable/com_facebook_send_button_icon.xml
rename to facebook-share/src/main/res/drawable/com_facebook_send_button_icon.xml
diff --git a/facebook-share/src/main/res/values/styles.xml b/facebook-share/src/main/res/values/styles.xml
new file mode 100644
index 000000000..571f3dfca
--- /dev/null
+++ b/facebook-share/src/main/res/values/styles.xml
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+    <color name="com_facebook_messenger_blue">#0084ff</color>
+    <color name="com_facebook_button_send_background_color">@color/com_facebook_messenger_blue</color>
+    <color name="com_facebook_button_send_background_color_pressed">#006fff</color>
+
+    <style name="com_facebook_button_send" parent="com_facebook_button">
+        <item name="android:background">@drawable/com_facebook_button_send_background</item>
+        <item name="android:drawableLeft">@drawable/com_facebook_send_button_icon</item>
+        <item name="android:text">@string/com_facebook_send_button_text</item>
+        <item name="android:textColor">@color/com_facebook_send_button_text_color</item>
+    </style>
+
+    <style name="com_facebook_button_share" parent="com_facebook_button">
+        <item name="android:drawableLeft">@drawable/com_facebook_button_icon</item>
+        <item name="android:text">@string/com_facebook_share_button_text</item>
+    </style>
+
+</resources>
diff --git a/facebook/BUCK b/facebook/BUCK
index b7d6df31e..ae9167a51 100644
--- a/facebook/BUCK
+++ b/facebook/BUCK
@@ -1,31 +1,144 @@
+prebuilt_jar(
+  name = 'support-annotations-25.0.0',
+  binary_jar = 'libs/support-annotations-25.0.0.jar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+prebuilt_jar(
+  name = 'bolts-applinks-1.4.0',
+  binary_jar = 'libs/bolts-applinks-1.4.0.jar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+prebuilt_jar(
+  name = 'bolts-tasks-1.4.0',
+  binary_jar = 'libs/bolts-tasks-1.4.0.jar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'support-v4-25.0.0',
+  aar = 'libs/support-v4-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'support-compat-25.0.0',
+  aar = 'libs/support-compat-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'support-core-ui-25.0.0',
+  aar = 'libs/support-core-ui-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'support-core-utils-25.0.0',
+  aar = 'libs/support-core-utils-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'support-fragment-25.0.0',
+  aar = 'libs/support-fragment-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'cardview-v7-25.0.0',
+  aar = 'libs/cardview-v7-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'customtabs-25.0.0',
+  aar = 'libs/customtabs-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'appcompat-v7-25.0.0',
+  aar = 'libs/appcompat-v7-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
+android_prebuilt_aar(
+  name = 'support-vector-drawable-25.0.0',
+  aar = 'libs/support-vector-drawable-25.0.0.aar',
+  visibility = [
+    'PUBLIC',
+  ],
+)
+
 android_build_config(
-  name = 'build_config',
-  package = 'com.facebook',
+  name = "build_config",
+  package = "com.facebook",
+  values = [
+    "String VERSION_NAME = \"4.21.1\"",
+  ],
+  visibility = [
+    "PUBLIC",
+  ],
 )
 
 android_resource(
   name = 'res',
-  res = 'res',
+  res = 'src/main/res',
   package = 'com.facebook',
   deps = [
   ],
+  visibility = [
+    'PUBLIC',
+  ],
 )
 
 android_library(
-  name = 'android-sdk',
-  srcs = glob(['src/**/*.java']),
+  name = 'lib',
+  srcs = glob(['src/main/**/*.java']),
+  manifest = 'src/main/AndroidManifest.xml',
+  provided_deps = [
+  ],
   deps = [
+    ':appcompat-v7-25.0.0',
+    ':bolts-applinks-1.4.0',
+    ':bolts-tasks-1.4.0',
     ':build_config',
+    ':cardview-v7-25.0.0',
+    ':customtabs-25.0.0',
     ':res',
-    '//libs:android-support-v4',
-    '//libs:bolts',
+    ':support-annotations-25.0.0',
+    ':support-compat-25.0.0',
+    ':support-core-ui-25.0.0',
+    ':support-core-utils-25.0.0',
+    ':support-fragment-25.0.0',
+    ':support-v4-25.0.0',
+    ':support-vector-drawable-25.0.0',
   ],
   visibility = [
     'PUBLIC',
   ],
 )
-
-project_config(
-  src_target = ':android-sdk',
-  src_roots = ['src'],
-)
diff --git a/facebook/build.gradle b/facebook/build.gradle
index 8754881ce..2d430067f 100644
--- a/facebook/build.gradle
+++ b/facebook/build.gradle
@@ -1,29 +1,31 @@
 apply plugin: 'com.android.library'
 
-repositories {
-    mavenCentral()
-}
+project.group 'com.facebook.android'
 
-project.group = 'com.facebook.android'
+project.ext.name = 'Facebook-Android-SDK'
+project.ext.artifactId = "facebook-android-sdk"
+project.ext.description = 'Facebook Android SDK'
+project.ext.url = 'https://github.com/facebook/facebook-android-sdk'
 
 dependencies {
     // Facebook Dependencies
-    compile 'com.android.support:support-v4:23.4.0'
-    compile 'com.android.support:appcompat-v7:23.4.0'
-    compile 'com.android.support:cardview-v7:23.4.0'
-    compile 'com.android.support:customtabs:23.4.0'
-    compile 'com.parse.bolts:bolts-android:1.4.0'
+    compile project(':facebook-core')
+    compile project(':facebook-common')
+    compile project(':facebook-login')
+    compile project(":facebook-share")
+    compile project(":facebook-places")
+    compile project(":facebook-applinks")
+    compile project(":facebook-messenger")
 
     // Unit Tests
     testCompile 'junit:junit:4.12'
-    testCompile 'org.robolectric:robolectric:3.0'
-    testCompile 'org.robolectric:shadows-support-v4:3.0'
+    testCompile 'org.robolectric:robolectric:3.3'
 
     def powerMockVersion = '1.6.1'
+    testCompile "org.powermock:powermock-api-mockito:$powerMockVersion"
     testCompile "org.powermock:powermock-module-junit4:$powerMockVersion"
     testCompile "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
     testCompile "org.powermock:powermock-classloading-xstream:$powerMockVersion"
-    testCompile "org.powermock:powermock-api-mockito:$powerMockVersion"
 
     // Connected Tests
     androidTestCompile 'org.mockito:mockito-core:1.10.19'
@@ -39,7 +41,6 @@ android {
         minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
         targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
         consumerProguardFiles 'proguard-project.txt'
-
         vectorDrawables.useSupportLibrary = true
     }
 
@@ -50,109 +51,11 @@ android {
     lintOptions {
         abortOnError false
     }
+
     compileOptions {
         sourceCompatibility JavaVersion.VERSION_1_7
         targetCompatibility JavaVersion.VERSION_1_7
     }
 }
 
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-def isSnapshot = version.endsWith('-SNAPSHOT')
-def ossrhUsername = hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
-def ossrhPassword = hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
-
-task setVersion {
-    // The version will be derived from source
-    project.version = null
-    def sdkVersionFile = file('src/main/java/com/facebook/FacebookSdkVersion.java')
-    sdkVersionFile.eachLine{
-        def matcher = (it =~ /(?:.*BUILD = \")(.*)(?:\".*)/)
-        if (matcher.matches()) {
-            project.version = matcher[0][1]
-            return
-        }
-    }
-    if (project.version.is('unspecified')) {
-        throw new GradleScriptException('Version could not be found.', null)
-    }
-}
-
-uploadArchives {
-    repositories.mavenDeployer {
-        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
-            authentication(userName: ossrhUsername, password: ossrhPassword)
-        }
-
-        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
-            authentication(userName: ossrhUsername, password: ossrhPassword)
-        }
-
-        pom.project {
-            name 'Facebook-Android-SDK'
-            artifactId = 'facebook-android-sdk'
-            packaging 'aar'
-            description 'Facebook Android SDK'
-            url 'https://github.com/facebook/facebook-android-sdk'
-
-            scm {
-                connection 'scm:git@github.com:facebook/facebook-android-sdk.git'
-                developerConnection 'scm:git@github.com:facebook/facebook-android-sdk.git'
-                url 'https://github.com/facebook/facebook-android-sdk'
-            }
-
-            licenses {
-                license {
-                    name 'Facebook Platform License'
-                    url 'https://github.com/facebook/facebook-android-sdk/blob/master/LICENSE.txt'
-                    distribution 'repo'
-                }
-            }
-
-            developers {
-                developer {
-                    id 'facebook'
-                    name 'Facebook'
-                }
-            }
-        }
-    }
-}
-
-uploadArchives.dependsOn(setVersion)
-
-signing {
-    required { !isSnapshot && gradle.taskGraph.hasTask("uploadArchives") }
-    sign configurations.archives
-}
-
-task androidJavadocs(type: Javadoc) {
-    source = android.sourceSets.main.java.srcDirs
-    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
-    // JDK 1.8 is more strict then 1.7. Have JDK 1.8 behave like 1.7 for javadoc generation
-    if (org.gradle.internal.jvm.Jvm.current().getJavaVersion() == JavaVersion.VERSION_1_8) {
-        options.addStringOption('Xdoclint:none', '-quiet')
-    }
-}
-
-task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
-    classifier = 'javadoc'
-    from androidJavadocs.destinationDir
-}
-
-task androidSourcesJar(type: Jar) {
-    classifier = 'sources'
-    from android.sourceSets.main.java.sourceFiles
-}
-
-artifacts {
-    archives androidSourcesJar
-    archives androidJavadocsJar
-}
-
-afterEvaluate {
-    androidJavadocs.classpath += project.android.libraryVariants.toList().first().javaCompile.classpath
-}
+apply from: "${rootDir}/maven.gradle"
diff --git a/facebook/proguard-project.txt b/facebook/proguard-project.txt
index 1eca961d7..a3c4133ef 100644
--- a/facebook/proguard-project.txt
+++ b/facebook/proguard-project.txt
@@ -25,4 +25,14 @@
     private void readObject(java.io.ObjectInputStream);
     java.lang.Object writeReplace();
     java.lang.Object readResolve();
-}
\ No newline at end of file
+}
+
+-keepnames class com.facebook.FacebookActivity
+-keepnames class com.facebook.CustomTabActivity
+
+-keep class com.facebook.all.All
+
+-keep public class com.android.vending.billing.IInAppBillingService {
+    public static com.android.vending.billing.IInAppBillingService asInterface(android.os.IBinder);
+    public android.os.Bundle getSkuDetails(int, java.lang.String, java.lang.String, android.os.Bundle);
+}
diff --git a/facebook/src/androidTest/java/com/facebook/AsyncRequestTests.java b/facebook/src/androidTest/java/com/facebook/AsyncRequestTests.java
index fce764fe1..151c4a93d 100644
--- a/facebook/src/androidTest/java/com/facebook/AsyncRequestTests.java
+++ b/facebook/src/androidTest/java/com/facebook/AsyncRequestTests.java
@@ -25,17 +25,12 @@
 import android.test.suitebuilder.annotation.LargeTest;
 import android.test.suitebuilder.annotation.MediumTest;
 import android.test.suitebuilder.annotation.SmallTest;
-import android.test.suitebuilder.annotation.Suppress;
 
-import com.facebook.internal.BundleJSONConverter;
 import com.facebook.share.internal.ShareInternalUtility;
 
 import org.json.JSONArray;
 import org.json.JSONObject;
 
-import java.net.HttpURLConnection;
-import java.util.Arrays;
-
 public class AsyncRequestTests extends FacebookTestCase {
 
     @SmallTest
@@ -101,69 +96,6 @@ public void testExecuteBatchWithNullRequestThrows() throws Exception {
 
     }
 
-    @MediumTest
-    @LargeTest
-    public void testExecuteSingleGet() {
-        final AccessToken accessToken = getAccessTokenForSharedUser();
-        Bundle parameters = new Bundle();
-        parameters.putString("fields", "location");
-        GraphRequest request = new GraphRequest(
-                accessToken,
-                RequestTests.TEST_PAGE_ID,
-                parameters,
-                null,
-                new ExpectSuccessCallback() {
-                    @Override
-                    protected void performAsserts(GraphResponse response) {
-                        assertNotNull(response);
-                        JSONObject graphPlace = response.getJSONObject();
-                        assertEquals(
-                                "Seattle",
-                                graphPlace.optJSONObject("location").optString("city"));
-                    }
-                });
-
-        TestGraphRequestAsyncTask task = new TestGraphRequestAsyncTask(request);
-
-        task.executeOnBlockerThread();
-
-        // Wait on 2 signals: request and task will both signal.
-        waitAndAssertSuccess(2);
-    }
-
-    @MediumTest
-    @LargeTest
-    public void testExecuteSingleGetUsingHttpURLConnection() {
-        final AccessToken accessToken = getAccessTokenForSharedUser();
-        Bundle parameters = new Bundle();
-        parameters.putString("fields", "location");
-        GraphRequest request = new GraphRequest(
-                accessToken,
-                "910055289103294",
-                parameters,
-                null,
-                new ExpectSuccessCallback() {
-                    @Override
-                    protected void performAsserts(GraphResponse response) {
-                        assertNotNull(response);
-                        JSONObject graphPlace = response.getJSONObject();
-                        assertEquals(
-                                "Seattle",
-                                graphPlace.optJSONObject("location").optString("city"));
-                    }
-                });
-        HttpURLConnection connection = GraphRequest.toHttpConnection(request);
-
-        TestGraphRequestAsyncTask task = new TestGraphRequestAsyncTask(
-                connection,
-                Arrays.asList(new GraphRequest[] { request }));
-
-        task.executeOnBlockerThread();
-
-        // Wait on 2 signals: request and task will both signal.
-        waitAndAssertSuccess(2);
-    }
-
     @MediumTest
     @LargeTest
     public void testExecuteSingleGetFailureCase() {
diff --git a/facebook/src/androidTest/java/com/facebook/BatchRequestTests.java b/facebook/src/androidTest/java/com/facebook/BatchRequestTests.java
index 9e0347775..7f371cdeb 100644
--- a/facebook/src/androidTest/java/com/facebook/BatchRequestTests.java
+++ b/facebook/src/androidTest/java/com/facebook/BatchRequestTests.java
@@ -65,75 +65,6 @@ public void testBatchWithoutAppIDIsError() {
         GraphRequest.executeBatchAndWait(request1, request2);
     }
 
-    @LargeTest
-    public void testExecuteBatchRequestsPathEncoding() throws IOException {
-        // ensures that paths passed to batch requests are encoded properly before
-        // we send it up to the server
-
-        final AccessToken accessToken = getAccessTokenForSharedUser();
-
-        Bundle parameters = new Bundle();
-        parameters.putString("fields", "location");
-
-        GraphRequest request1 = new GraphRequest(
-                accessToken,
-                RequestTests.TEST_PAGE_ID,
-                parameters,
-                null);
-        request1.setBatchEntryName("seattle");
-        request1.setBatchEntryOmitResultOnSuccess(false);
-        GraphRequest request2 = new GraphRequest(
-                accessToken,
-                "{result=seattle:$.id}",
-                parameters,
-                null);
-
-        List<GraphResponse> responses = GraphRequest.executeBatchAndWait(request1, request2);
-        assertEquals(2, responses.size());
-        assertTrue(responses.get(0).getError() == null);
-        assertTrue(responses.get(1).getError() == null);
-
-        JSONObject seattle1 = responses.get(0).getJSONObject();
-        JSONObject seattle2 = responses.get(1).getJSONObject();
-        assertTrue(seattle1 != null);
-        assertTrue(seattle2 != null);
-
-        assertEquals("Seattle", seattle1.optJSONObject("location").optString("city"));
-        assertEquals("Seattle", seattle2.optJSONObject("location").optString("city"));
-    }
-
-    @LargeTest
-    public void testExecuteBatchedGets() throws IOException {
-        final AccessToken accessToken = getAccessTokenForSharedUser();
-
-        Bundle parameters = new Bundle();
-        parameters.putString("fields", "location");
-
-        GraphRequest request1 = new GraphRequest(
-                accessToken,
-                RequestTests.TEST_PAGE_ID,
-                parameters,
-                null);
-        GraphRequest request2 = new GraphRequest(
-                accessToken,
-                RequestTests.TEST_PAGE_ID_2,
-                parameters,
-                null);
-
-        List<GraphResponse> responses = GraphRequest.executeBatchAndWait(request1, request2);
-        assertEquals(2, responses.size());
-        assertTrue(responses.get(0).getError() == null);
-        assertTrue(responses.get(1).getError() == null);
-
-        JSONObject seattle = responses.get(0).getJSONObject();
-        JSONObject paris = responses.get(1).getJSONObject();
-        assertTrue(seattle != null);
-        assertTrue(paris != null);
-
-        assertEquals("Seattle", seattle.optJSONObject("location").optString("city"));
-        assertEquals("Paris", paris.optJSONObject("location").optString("city"));
-    }
-
     @LargeTest
     public void testFacebookErrorResponsesCreateErrors() {
         setBatchApplicationIdForTestApp();
diff --git a/facebook/src/androidTest/java/com/facebook/FacebookAppLinkResolverTests.java b/facebook/src/androidTest/java/com/facebook/FacebookAppLinkResolverTests.java
index 06a01f5ad..fb11d0776 100644
--- a/facebook/src/androidTest/java/com/facebook/FacebookAppLinkResolverTests.java
+++ b/facebook/src/androidTest/java/com/facebook/FacebookAppLinkResolverTests.java
@@ -36,45 +36,6 @@
 public class FacebookAppLinkResolverTests extends FacebookTestCase {
     private Task resolveTask;
 
-    public void testSingleUrl() {
-        String testUrlString = "https://fb.me/732873156764191";
-        Uri testUrl = Uri.parse(testUrlString);
-        Uri testWebUri = Uri.parse("http://www.facebook.com/");
-        ArrayList<AppLink.Target> testTargets = new ArrayList<AppLink.Target>();
-        testTargets.add(new AppLink.Target(
-                "com.myapp",
-                null,
-                Uri.parse("myapp://3"),
-                "my app"));
-        testTargets.add(new AppLink.Target(
-                "com.myapp-test",
-                null,
-                Uri.parse("myapp-test://4"),
-                "my test app"));
-        try {
-            executeResolverOnBlockerThread(new FacebookAppLinkResolver(), testUrl);
-
-            getTestBlocker().waitForSignals(1);
-
-            assertNotNull(resolveTask);
-
-            Task<AppLink> singleUrlResolveTask = (Task<AppLink>)resolveTask;
-
-            assertTrue(singleUrlResolveTask.isCompleted() &&
-                    !singleUrlResolveTask.isCancelled() &&
-                    !singleUrlResolveTask.isFaulted());
-
-            AppLink appLink = singleUrlResolveTask.getResult();
-
-            assertEquals(appLink.getSourceUrl(), testUrl);
-            assertEquals(appLink.getWebUrl(), testWebUri);
-            assertTrue(targetListsAreEqual(appLink.getTargets(), testTargets));
-        } catch (Exception e) {
-            // Forcing the test to fail with details
-            assertNull(e);
-        }
-    }
-
     public void testUrlWithNoAppLinkData() {
         String testNoAppLinkUrlString = "https://fb.me/732873156764191_no_app_link";
         Uri testNoAppLinkUrl = Uri.parse(testNoAppLinkUrlString);
@@ -99,49 +60,6 @@ public void testUrlWithNoAppLinkData() {
         }
     }
 
-    @FlakyTest
-    public void testCachedAppLinkData() {
-        String testUrlString = "https://fb.me/732873156764191";
-        Uri testUrl = Uri.parse(testUrlString);
-        Uri testWebUri = Uri.parse("http://www.facebook.com/");
-        ArrayList<AppLink.Target> testTargets = new ArrayList<AppLink.Target>();
-        testTargets.add(new AppLink.Target(
-                "com.myapp",
-                null,
-                Uri.parse("myapp://3"),
-                "my app"));
-        testTargets.add(new AppLink.Target(
-                "com.myapp-test",
-                null,
-                Uri.parse("myapp-test://4"),
-                "my test app"));
-
-        try {
-            FacebookAppLinkResolver resolver = new FacebookAppLinkResolver();
-
-            // This will prefetch the app link
-            executeResolverOnBlockerThread(resolver, testUrl);
-            getTestBlocker().waitForSignals(1);
-            assertNotNull(resolveTask);
-
-            // Now let's fetch it again. This should complete the task synchronously.
-            Task<AppLink> cachedUrlResolveTask = resolver.getAppLinkFromUrlInBackground(testUrl);
-
-            assertTrue(cachedUrlResolveTask.isCompleted() &&
-                    !cachedUrlResolveTask.isCancelled() &&
-                    !cachedUrlResolveTask.isFaulted());
-
-            AppLink appLink = cachedUrlResolveTask.getResult();
-
-            assertEquals(appLink.getSourceUrl(), testUrl);
-            assertEquals(appLink.getWebUrl(), testWebUri);
-            assertTrue(targetListsAreEqual(appLink.getTargets(), testTargets));
-        } catch (Exception e) {
-            // Forcing the test to fail with details
-            assertNull(e);
-        }
-    }
-
     public void executeResolverOnBlockerThread(final FacebookAppLinkResolver resolver, final Uri testUrl) {
         final TestBlocker blocker = getTestBlocker();
         Runnable runnable = new Runnable() {
diff --git a/facebook/src/androidTest/java/com/facebook/RequestTests.java b/facebook/src/androidTest/java/com/facebook/RequestTests.java
index addb33e42..c2ad3ef33 100644
--- a/facebook/src/androidTest/java/com/facebook/RequestTests.java
+++ b/facebook/src/androidTest/java/com/facebook/RequestTests.java
@@ -25,7 +25,6 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.test.suitebuilder.annotation.LargeTest;
-import android.test.suitebuilder.annotation.Suppress;
 
 import com.facebook.internal.GraphUtil;
 import com.facebook.share.ShareApi;
@@ -49,7 +48,6 @@
 import java.net.HttpURLConnection;
 import java.net.URISyntaxException;
 import java.util.ArrayList;
-import java.util.Arrays;
 import java.util.List;
 import java.util.concurrent.atomic.AtomicBoolean;
 import java.util.concurrent.atomic.AtomicReference;
@@ -59,7 +57,7 @@
     private static final String TEST_OG_ACTION_TYPE = "facebooksdktests:run";
     private static final long REQUEST_TIMEOUT_MILLIS = 10000;
 
-    public static final String TEST_PAGE_ID = "910055289103294";
+    public static final String TEST_PAGE_ID = "1163806960341831";
     public static final String TEST_PAGE_ID_2 = "110774245616525";
 
     protected String[] getDefaultPermissions()
@@ -84,27 +82,6 @@ public void tearDown() throws Exception {
         super.tearDown();
     }
 
-    @LargeTest
-    public void testExecuteSingleGet() {
-        Bundle parameters = new Bundle();
-        parameters.putString("fields", "location");
-
-        GraphRequest request = new GraphRequest(
-                AccessToken.getCurrentAccessToken(),
-                TEST_PAGE_ID,
-                parameters,
-                null);
-        GraphResponse response = request.executeAndWait();
-
-        assertTrue(response != null);
-        assertTrue(response.getError() == null);
-        assertNotNull(response.getJSONObject());
-        assertNotNull(response.getRawResponse());
-
-        JSONObject graphPlace = response.getJSONObject();
-        assertEquals("Seattle", graphPlace.optJSONObject("location").optString("city"));
-    }
-
     @LargeTest
     public void testBuildsUploadPhotoHttpURLConnection() throws Exception {
         Bitmap image = createTestBitmap(128);
@@ -123,46 +100,6 @@ public void testBuildsUploadPhotoHttpURLConnection() throws Exception {
         assertNotSame("application/x-www-form-urlencoded", connection.getRequestProperty("Content-Type"));
     }
 
-    @LargeTest
-    public void testExecuteSingleGetUsingHttpURLConnection() throws IOException {
-        Bundle parameters = new Bundle();
-        parameters.putString("fields", "location");
-
-        GraphRequest request = new GraphRequest(
-                AccessToken.getCurrentAccessToken(),
-                TEST_PAGE_ID,
-                parameters,
-                null);
-        HttpURLConnection connection = GraphRequest.toHttpConnection(request);
-
-        assertEquals("gzip", connection.getRequestProperty("Content-Encoding"));
-        assertEquals(
-                "application/x-www-form-urlencoded",
-                connection.getRequestProperty("Content-Type"));
-
-        List<GraphResponse> responses = GraphRequest.executeConnectionAndWait(
-                connection,
-                Arrays.asList(new GraphRequest[]{request}));
-        assertNotNull(responses);
-        assertEquals(1, responses.size());
-
-        GraphResponse response = responses.get(0);
-
-        assertTrue(response != null);
-        assertTrue(response.getError() == null);
-        assertNotNull(response.getJSONObject());
-        assertNotNull(response.getRawResponse());
-
-        JSONObject graphPlace = response.getJSONObject();
-        assertEquals("Seattle", graphPlace.optJSONObject("location").optString("city"));
-
-        // Make sure calling code can still access HTTP headers and call disconnect themselves.
-        int code = connection.getResponseCode();
-        assertEquals(200, code);
-        assertTrue(connection.getHeaderFields().keySet().contains("Content-Type"));
-        connection.disconnect();
-    }
-
     @LargeTest
     public void testFacebookErrorResponseCreatesError() {
         GraphRequest request = new GraphRequest(null, "somestringthatshouldneverbeavalidfobjectid");
@@ -483,7 +420,7 @@ public void testCreateOpenGraphObjectWithBadImageType() throws InterruptedExcept
                 .build();
 
         try {
-            GraphRequest request = GraphRequest.createOpenGraphObject(ogObject);
+            GraphRequest request = ShareGraphRequest.createOpenGraphObject(ogObject);
             GraphResponse response = request.executeAndWait();
             //should fail because do not accept images without imageurl
             fail();
@@ -511,7 +448,7 @@ public void testCreateOpenGraphObject() throws InterruptedException {
                 .build();
 
         try {
-            GraphRequest request = GraphRequest.createOpenGraphObject(ogObject);
+            GraphRequest request = ShareGraphRequest.createOpenGraphObject(ogObject);
             GraphResponse response = request.executeAndWait();
 
             assertNotNull(response);
@@ -984,55 +921,4 @@ public void testCantUseComplexParameterInGetRequest() {
             setLongitude(-122.3331);
         }
     };
-
-    @LargeTest
-    public void testPaging() {
-        final List<JSONObject> returnedPlaces = new ArrayList<JSONObject>();
-        GraphRequest request = GraphRequest
-                .newPlacesSearchRequest(
-                        AccessToken.getCurrentAccessToken(),
-                        SEATTLE_LOCATION,
-                        100000,
-                        3,
-                        null,
-                        new GraphRequest.GraphJSONArrayCallback() {
-                            @Override
-                            public void onCompleted(JSONArray places, GraphResponse response) {
-                                if (places == null) {
-                                    assertNotNull(places);
-                                }
-                                for (int i = 0; i < places.length(); ++i) {
-                                    returnedPlaces.add(places.optJSONObject(i));
-                                }
-                            }
-                        });
-        GraphResponse response = request.executeAndWait();
-
-        assertNull(response.getError());
-        assertNotNull(response.getJSONObject());
-        assertNotSame(0, returnedPlaces.size());
-
-        returnedPlaces.clear();
-
-        GraphRequest nextRequest = response.getRequestForPagedResults(GraphResponse.PagingDirection.NEXT);
-        assertNotNull(nextRequest);
-
-        nextRequest.setCallback(request.getCallback());
-        response = nextRequest.executeAndWait();
-
-        assertNull(response.getError());
-        assertNotNull(response.getJSONObject());
-
-        returnedPlaces.clear();
-
-        GraphRequest previousRequest = response.getRequestForPagedResults(GraphResponse.PagingDirection.PREVIOUS);
-        assertNotNull(previousRequest);
-
-        previousRequest.setCallback(request.getCallback());
-        response = previousRequest.executeAndWait();
-
-        assertNull(response.getError());
-        assertNotNull(response.getJSONObject());
-        assertNotSame(0, returnedPlaces.size());
-    }
 }
diff --git a/facebook/src/main/java/com/facebook/TestUserManager.java b/facebook/src/androidTest/java/com/facebook/TestUserManager.java
similarity index 97%
rename from facebook/src/main/java/com/facebook/TestUserManager.java
rename to facebook/src/androidTest/java/com/facebook/TestUserManager.java
index 4f3cdf729..95176db03 100644
--- a/facebook/src/main/java/com/facebook/TestUserManager.java
+++ b/facebook/src/androidTest/java/com/facebook/TestUserManager.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -24,6 +24,13 @@
 import android.text.TextUtils;
 import android.util.Log;
 
+import com.facebook.AccessToken;
+import com.facebook.AccessTokenSource;
+import com.facebook.FacebookException;
+import com.facebook.FacebookRequestError;
+import com.facebook.GraphRequest;
+import com.facebook.GraphResponse;
+import com.facebook.HttpMethod;
 import com.facebook.internal.Utility;
 
 import org.json.JSONArray;
diff --git a/facebook/src/androidTest/java/com/facebook/TestUtils.java b/facebook/src/androidTest/java/com/facebook/TestUtils.java
index c0d89c49b..56cbf0569 100644
--- a/facebook/src/androidTest/java/com/facebook/TestUtils.java
+++ b/facebook/src/androidTest/java/com/facebook/TestUtils.java
@@ -26,6 +26,7 @@
 import android.os.Bundle;
 import android.os.Parcel;
 import android.os.Parcelable;
+
 import com.facebook.internal.FileLruCache;
 import com.facebook.internal.Utility;
 import junit.framework.Assert;
diff --git a/facebook/src/androidTest/java/com/facebook/appevents/AppEventsLoggerTests.java b/facebook/src/androidTest/java/com/facebook/appevents/AppEventsLoggerTests.java
index e3bf4d6c7..b6e4449d5 100644
--- a/facebook/src/androidTest/java/com/facebook/appevents/AppEventsLoggerTests.java
+++ b/facebook/src/androidTest/java/com/facebook/appevents/AppEventsLoggerTests.java
@@ -20,21 +20,15 @@
 
 package com.facebook.appevents;
 
-import android.content.Intent;
 import android.content.IntentFilter;
 import android.os.Bundle;
 import android.support.v4.content.LocalBroadcastManager;
 
 import com.facebook.AccessToken;
+import com.facebook.AccessTokenSource;
+import com.facebook.FacebookSdk;
 import com.facebook.FacebookTestCase;
 import com.facebook.WaitForBroadcastReceiver;
-import com.facebook.appevents.AppEventsLogger;
-
-import java.io.FileInputStream;
-import java.io.IOException;
-import java.io.ObjectInputStream;
-import java.util.HashMap;
-import java.util.List;
 
 public class AppEventsLoggerTests extends FacebookTestCase {
     public void testSimpleCall() throws InterruptedException {
@@ -49,7 +43,8 @@ public void testSimpleCall() throws InterruptedException {
         final WaitForBroadcastReceiver waitForBroadcastReceiver = new WaitForBroadcastReceiver();
         waitForBroadcastReceiver.incrementExpectCount();
 
-        final LocalBroadcastManager broadcastManager = LocalBroadcastManager.getInstance(getActivity());
+        final LocalBroadcastManager broadcastManager =
+                LocalBroadcastManager.getInstance(getActivity());
 
         try {
             // Need to get notifications on another thread so we can wait for them.
@@ -82,4 +77,52 @@ public void run() {
             broadcastManager.unregisterReceiver(waitForBroadcastReceiver);
         }
     }
+
+    public void testExplicitCallWithNoAppSettings() throws InterruptedException {
+        AppEventsLogger.setFlushBehavior(AppEventsLogger.FlushBehavior.EXPLICIT_ONLY);
+
+        AccessToken accessToken1 = getFakeAccessToken();
+        FacebookSdk.setApplicationId("234");
+
+        AppEventsLogger logger1 = AppEventsLogger.newLogger(getActivity(), accessToken1);
+
+        final WaitForBroadcastReceiver waitForBroadcastReceiver = new WaitForBroadcastReceiver();
+        waitForBroadcastReceiver.incrementExpectCount();
+
+        final LocalBroadcastManager broadcastManager =
+                LocalBroadcastManager.getInstance(getActivity());
+
+        try {
+            // Need to get notifications on another thread so we can wait for them.
+            runOnBlockerThread(new Runnable() {
+                @Override
+                public void run() {
+                    broadcastManager.registerReceiver(waitForBroadcastReceiver,
+                            new IntentFilter(AppEventsLogger.ACTION_APP_EVENTS_FLUSHED));
+                }
+            }, true);
+
+            logger1.logEvent("an_event");
+
+            logger1.flush();
+
+            waitForBroadcastReceiver.waitForExpectedCalls();
+
+            closeBlockerAndAssertSuccess();
+        } finally {
+            broadcastManager.unregisterReceiver(waitForBroadcastReceiver);
+        }
+    }
+
+    private AccessToken getFakeAccessToken() {
+        return new AccessToken(
+                "foobar",
+                "234",
+                "567",
+                null,
+                null,
+                AccessTokenSource.TEST_USER,
+                null,
+                null);
+    }
 }
diff --git a/facebook/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java b/facebook/src/androidTest/java/com/facebook/appevents/UpdateUserPropertiesTests.java
similarity index 52%
rename from facebook/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java
rename to facebook/src/androidTest/java/com/facebook/appevents/UpdateUserPropertiesTests.java
index b2d069d15..ebc23cd87 100644
--- a/facebook/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java
+++ b/facebook/src/androidTest/java/com/facebook/appevents/UpdateUserPropertiesTests.java
@@ -18,29 +18,38 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.appevents.internal;
+package com.facebook.appevents;
 
-import android.content.Context;
 import android.os.Bundle;
 
-import com.facebook.appevents.AppEventsLogger;
-import com.facebook.internal.Utility;
-import com.facebook.internal.Utility.FetchedAppSettings;
+import com.facebook.FacebookTestCase;
+import com.facebook.GraphRequest;
+import com.facebook.GraphResponse;
+import com.facebook.TestBlocker;
 
-class AutomaticAnalyticsLogger {
+public class UpdateUserPropertiesTests extends FacebookTestCase {
+    public void testUserUpdateProperties() throws Exception {
+        final TestBlocker blocker = getTestBlocker();
+        Bundle parameters = new Bundle();
+        parameters.putString("custom_value", "1");
+        AppEventsLogger.setUserID("1");
+        AppEventsLogger.updateUserProperties(
+                parameters,
+                getApplicationId(),
+                new GraphRequest.Callback() {
+            @Override
+            public void onCompleted(GraphResponse response) {
+                if (response.getError() != null) {
+                    blocker.setException(response.getError().getException());
+                }
 
-    public static void logActivityTimeSpentEvent(
-            Context context,
-            String appId,
-            String activityName,
-            long timeSpentInSeconds) {
-        AppEventsLogger l = AppEventsLogger.newLogger(context);
-        final FetchedAppSettings settings = Utility.queryAppSettings(appId, false);
-        if (settings.getAutomaticLoggingEnabled() && timeSpentInSeconds > 0) {
-            Bundle params = new Bundle(1);
-            params.putCharSequence(Constants.AA_TIME_SPENT_SCREEN_PARAMETER_NAME, activityName);
-            l.logEvent(Constants.AA_TIME_SPENT_EVENT_NAME, timeSpentInSeconds, params);
+                blocker.signal();
+            }
+        });
+
+        blocker.waitForSignals(1);
+        if (blocker.getException() != null) {
+            throw blocker.getException();
         }
     }
-
 }
diff --git a/facebook/src/main/java/com/facebook/internal/GraphUtil.java b/facebook/src/androidTest/java/com/facebook/internal/GraphUtil.java
similarity index 96%
rename from facebook/src/main/java/com/facebook/internal/GraphUtil.java
rename to facebook/src/androidTest/java/com/facebook/internal/GraphUtil.java
index 93b4566ed..b9fcc937e 100644
--- a/facebook/src/main/java/com/facebook/internal/GraphUtil.java
+++ b/facebook/src/androidTest/java/com/facebook/internal/GraphUtil.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -22,17 +22,11 @@
 
 import com.facebook.FacebookException;
 import com.facebook.internal.NativeProtocol;
-import com.facebook.internal.Validate;
+
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import java.util.List;
-import java.util.Locale;
-
 /**
  * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
  * Android. Use of any of the classes in this package is unsupported, and they may be modified or
diff --git a/facebook/src/androidTest/java/com/facebook/internal/ImageResponseCacheTest.java b/facebook/src/androidTest/java/com/facebook/internal/ImageResponseCacheTest.java
index ae67aead5..23084b4b3 100644
--- a/facebook/src/androidTest/java/com/facebook/internal/ImageResponseCacheTest.java
+++ b/facebook/src/androidTest/java/com/facebook/internal/ImageResponseCacheTest.java
@@ -26,30 +26,15 @@
 import android.net.Uri;
 import android.test.AndroidTestCase;
 import android.test.suitebuilder.annotation.LargeTest;
-import com.facebook.TestUtils;
 
 import java.io.IOException;
 import java.io.InputStream;
 import java.net.HttpURLConnection;
-import java.net.URI;
 import java.net.URL;
 import java.nio.ByteBuffer;
 import java.util.Arrays;
 
 public final class ImageResponseCacheTest extends AndroidTestCase {
-
-    @LargeTest
-    public void testImageCaching() throws Exception {
-        // In unit test, since we need verify first access the image is not in cache
-        // we need clear the cache first
-        TestUtils.clearFileLruCache(ImageResponseCache.getCache(safeGetContext()));
-        String imgUrl = "http://profile.ak.fbcdn.net/hprofile-ak-frc1/369438_100003049100322_615834658_n.jpg";
-
-        Bitmap bmp1 = readImage(imgUrl, false);
-        Bitmap bmp2 = readImage(imgUrl, true);
-        compareImages(bmp1, bmp2);
-    }
-
     @LargeTest
     public void testImageNotCaching() throws IOException {
 
diff --git a/facebook/src/androidTest/java/com/facebook/internal/UtilityTest.java b/facebook/src/androidTest/java/com/facebook/internal/UtilityTest.java
index 464531a21..3480a0f27 100644
--- a/facebook/src/androidTest/java/com/facebook/internal/UtilityTest.java
+++ b/facebook/src/androidTest/java/com/facebook/internal/UtilityTest.java
@@ -29,8 +29,8 @@
 
     @LargeTest
     public void testFetchedAppSettingsErrorClassification() throws Exception {
-        Utility.FetchedAppSettings fetchedAppSettings =
-                Utility.queryAppSettings(getApplicationId(), false);
+        FetchedAppSettings fetchedAppSettings =
+                FetchedAppSettingsManager.queryAppSettings(getApplicationId(), false);
         FacebookRequestErrorClassification errorClassification = fetchedAppSettings
                 .getErrorClassification();
         assertNotNull(errorClassification);
diff --git a/facebook/src/main/AndroidManifest.xml b/facebook/src/main/AndroidManifest.xml
index 0599a1faa..ad438745b 100644
--- a/facebook/src/main/AndroidManifest.xml
+++ b/facebook/src/main/AndroidManifest.xml
@@ -20,16 +20,10 @@
 -->
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-      package="com.facebook">
-    <application>
-        <activity
-            android:name="com.facebook.FacebookActivity"
-            android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|orientation"
-            android:theme="@style/com_facebook_activity_theme" />
-        <activity
-            android:name="com.facebook.CustomTabActivity"
-            android:exported="true">
-        </activity>
-        <activity android:name="com.facebook.CustomTabMainActivity" />
+    package="com.facebook">
+
+    <application android:supportsRtl="true">
+
     </application>
+
 </manifest>
diff --git a/facebook/src/main/java/com.facebook.all/All.java b/facebook/src/main/java/com.facebook.all/All.java
new file mode 100644
index 000000000..6f907f5da
--- /dev/null
+++ b/facebook/src/main/java/com.facebook.all/All.java
@@ -0,0 +1,5 @@
+// Copyright 2004-present Facebook. All Rights Reserved.
+
+package com.facebook.all;
+
+public class All { }
diff --git a/facebook/src/main/java/com/facebook/internal/PermissionType.java b/facebook/src/main/java/com/facebook/internal/PermissionType.java
deleted file mode 100644
index 0bf617f6c..000000000
--- a/facebook/src/main/java/com/facebook/internal/PermissionType.java
+++ /dev/null
@@ -1,31 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.internal;
-
-/**
- * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
- * Android. Use of any of the classes in this package is unsupported, and they may be modified or
- * removed without warning at any time.
- */
-public enum PermissionType {
-    READ,
-    PUBLISH
-}
diff --git a/facebook/src/main/res/drawable-hdpi/com_facebook_button_icon_blue.png b/facebook/src/main/res/drawable-hdpi/com_facebook_button_icon_blue.png
deleted file mode 100644
index dd8e61a62..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/com_facebook_button_icon_blue.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-hdpi/com_facebook_button_like_icon_selected.png b/facebook/src/main/res/drawable-hdpi/com_facebook_button_like_icon_selected.png
deleted file mode 100644
index 5e8ac3c99..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/com_facebook_button_like_icon_selected.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-hdpi/com_facebook_button_send_icon_blue.png b/facebook/src/main/res/drawable-hdpi/com_facebook_button_send_icon_blue.png
deleted file mode 100644
index 361e63874..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/com_facebook_button_send_icon_blue.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-hdpi/com_facebook_button_send_icon_white.png b/facebook/src/main/res/drawable-hdpi/com_facebook_button_send_icon_white.png
deleted file mode 100644
index dbc69dccc..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/com_facebook_button_send_icon_white.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-hdpi/com_facebook_close.png b/facebook/src/main/res/drawable-hdpi/com_facebook_close.png
deleted file mode 100644
index d81f040d7..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/com_facebook_close.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_black_background.9.png b/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_black_background.9.png
deleted file mode 100644
index 2c5b1bbad..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_black_background.9.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_black_xout.png b/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_black_xout.png
deleted file mode 100644
index e2903b6de..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_black_xout.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_background.9.png b/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_background.9.png
deleted file mode 100644
index a42b3cd92..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_background.9.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_bottomnub.png b/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_bottomnub.png
deleted file mode 100644
index 2d292f2ca..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_bottomnub.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_topnub.png b/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_topnub.png
deleted file mode 100644
index b2dcc4089..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_topnub.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_xout.png b/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_xout.png
deleted file mode 100644
index 1285a1665..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/com_facebook_tooltip_blue_xout.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-hdpi/messenger_bubble_large_blue.png b/facebook/src/main/res/drawable-hdpi/messenger_bubble_large_blue.png
deleted file mode 100644
index a58670371..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/messenger_bubble_large_blue.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-hdpi/messenger_bubble_large_white.png b/facebook/src/main/res/drawable-hdpi/messenger_bubble_large_white.png
deleted file mode 100644
index 80be8f6de..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/messenger_bubble_large_white.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-hdpi/messenger_bubble_small_blue.png b/facebook/src/main/res/drawable-hdpi/messenger_bubble_small_blue.png
deleted file mode 100644
index d7a6fcd42..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/messenger_bubble_small_blue.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-hdpi/messenger_bubble_small_white.png b/facebook/src/main/res/drawable-hdpi/messenger_bubble_small_white.png
deleted file mode 100644
index b368abbaa..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/messenger_bubble_small_white.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-hdpi/messenger_button_send_round_shadow.png b/facebook/src/main/res/drawable-hdpi/messenger_button_send_round_shadow.png
deleted file mode 100644
index f369b4128..000000000
Binary files a/facebook/src/main/res/drawable-hdpi/messenger_button_send_round_shadow.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_button_icon_blue.png b/facebook/src/main/res/drawable-mdpi/com_facebook_button_icon_blue.png
deleted file mode 100644
index fa21c2e81..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/com_facebook_button_icon_blue.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_button_send_icon_blue.png b/facebook/src/main/res/drawable-mdpi/com_facebook_button_send_icon_blue.png
deleted file mode 100644
index 5d58986ab..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/com_facebook_button_send_icon_blue.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_button_send_icon_white.png b/facebook/src/main/res/drawable-mdpi/com_facebook_button_send_icon_white.png
deleted file mode 100644
index 5964bc945..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/com_facebook_button_send_icon_white.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_close.png b/facebook/src/main/res/drawable-mdpi/com_facebook_close.png
deleted file mode 100755
index 4ffc94cdc..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/com_facebook_close.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_profile_picture_blank_portrait.png b/facebook/src/main/res/drawable-mdpi/com_facebook_profile_picture_blank_portrait.png
deleted file mode 100644
index 27a6f7a74..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/com_facebook_profile_picture_blank_portrait.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_profile_picture_blank_square.png b/facebook/src/main/res/drawable-mdpi/com_facebook_profile_picture_blank_square.png
deleted file mode 100644
index 77554e01f..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/com_facebook_profile_picture_blank_square.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_black_background.9.png b/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_black_background.9.png
deleted file mode 100644
index d10e30391..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_black_background.9.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_black_xout.png b/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_black_xout.png
deleted file mode 100644
index 51454e5a3..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_black_xout.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_background.9.png b/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_background.9.png
deleted file mode 100644
index bf60245bb..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_background.9.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_topnub.png b/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_topnub.png
deleted file mode 100644
index e09406081..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_topnub.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_xout.png b/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_xout.png
deleted file mode 100644
index 85699f8ec..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/com_facebook_tooltip_blue_xout.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/messenger_bubble_large_blue.png b/facebook/src/main/res/drawable-mdpi/messenger_bubble_large_blue.png
deleted file mode 100644
index 89ec1d6a1..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/messenger_bubble_large_blue.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/messenger_bubble_large_white.png b/facebook/src/main/res/drawable-mdpi/messenger_bubble_large_white.png
deleted file mode 100644
index b62f660e1..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/messenger_bubble_large_white.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/messenger_bubble_small_blue.png b/facebook/src/main/res/drawable-mdpi/messenger_bubble_small_blue.png
deleted file mode 100644
index cf4417797..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/messenger_bubble_small_blue.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/messenger_bubble_small_white.png b/facebook/src/main/res/drawable-mdpi/messenger_bubble_small_white.png
deleted file mode 100644
index 2f3a364ce..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/messenger_bubble_small_white.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-mdpi/messenger_button_send_round_shadow.png b/facebook/src/main/res/drawable-mdpi/messenger_button_send_round_shadow.png
deleted file mode 100644
index d5ebd1854..000000000
Binary files a/facebook/src/main/res/drawable-mdpi/messenger_button_send_round_shadow.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/com_facebook_button_icon_blue.png b/facebook/src/main/res/drawable-xhdpi/com_facebook_button_icon_blue.png
deleted file mode 100644
index f4141461b..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/com_facebook_button_icon_blue.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/com_facebook_button_like_icon_selected.png b/facebook/src/main/res/drawable-xhdpi/com_facebook_button_like_icon_selected.png
deleted file mode 100644
index ccb98d5e3..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/com_facebook_button_like_icon_selected.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/com_facebook_button_send_icon_blue.png b/facebook/src/main/res/drawable-xhdpi/com_facebook_button_send_icon_blue.png
deleted file mode 100644
index 1fc78ad78..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/com_facebook_button_send_icon_blue.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/com_facebook_button_send_icon_white.png b/facebook/src/main/res/drawable-xhdpi/com_facebook_button_send_icon_white.png
deleted file mode 100644
index a751b5fe8..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/com_facebook_button_send_icon_white.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/com_facebook_close.png b/facebook/src/main/res/drawable-xhdpi/com_facebook_close.png
deleted file mode 100755
index b603ef892..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/com_facebook_close.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_topnub.png b/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_topnub.png
deleted file mode 100644
index 4d3f58f6e..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_topnub.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_xout.png b/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_xout.png
deleted file mode 100644
index 6cd7bc8d9..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_black_xout.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_background.9.png b/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_background.9.png
deleted file mode 100644
index 7614b95c3..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_background.9.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_bottomnub.png b/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_bottomnub.png
deleted file mode 100644
index d29b95242..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_bottomnub.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_topnub.png b/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_topnub.png
deleted file mode 100644
index d2dc678ee..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_topnub.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_xout.png b/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_xout.png
deleted file mode 100644
index e9bc616f1..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/com_facebook_tooltip_blue_xout.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/messenger_bubble_large_blue.png b/facebook/src/main/res/drawable-xhdpi/messenger_bubble_large_blue.png
deleted file mode 100644
index 7bf06cc29..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/messenger_bubble_large_blue.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/messenger_bubble_large_white.png b/facebook/src/main/res/drawable-xhdpi/messenger_bubble_large_white.png
deleted file mode 100644
index 0743811ac..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/messenger_bubble_large_white.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/messenger_bubble_small_blue.png b/facebook/src/main/res/drawable-xhdpi/messenger_bubble_small_blue.png
deleted file mode 100644
index 8de9b46a8..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/messenger_bubble_small_blue.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/messenger_bubble_small_white.png b/facebook/src/main/res/drawable-xhdpi/messenger_bubble_small_white.png
deleted file mode 100644
index 9ed2cb28b..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/messenger_bubble_small_white.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xhdpi/messenger_button_send_round_shadow.png b/facebook/src/main/res/drawable-xhdpi/messenger_button_send_round_shadow.png
deleted file mode 100644
index 3f9382064..000000000
Binary files a/facebook/src/main/res/drawable-xhdpi/messenger_button_send_round_shadow.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xxhdpi/com_facebook_button_icon_blue.png b/facebook/src/main/res/drawable-xxhdpi/com_facebook_button_icon_blue.png
deleted file mode 100644
index 01480c9f5..000000000
Binary files a/facebook/src/main/res/drawable-xxhdpi/com_facebook_button_icon_blue.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xxhdpi/com_facebook_button_like_icon_selected.png b/facebook/src/main/res/drawable-xxhdpi/com_facebook_button_like_icon_selected.png
deleted file mode 100644
index 41137fc92..000000000
Binary files a/facebook/src/main/res/drawable-xxhdpi/com_facebook_button_like_icon_selected.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xxhdpi/com_facebook_button_send_icon_white.png b/facebook/src/main/res/drawable-xxhdpi/com_facebook_button_send_icon_white.png
deleted file mode 100644
index a30068b98..000000000
Binary files a/facebook/src/main/res/drawable-xxhdpi/com_facebook_button_send_icon_white.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xxhdpi/messenger_bubble_large_blue.png b/facebook/src/main/res/drawable-xxhdpi/messenger_bubble_large_blue.png
deleted file mode 100644
index 7f18441ff..000000000
Binary files a/facebook/src/main/res/drawable-xxhdpi/messenger_bubble_large_blue.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xxhdpi/messenger_bubble_large_white.png b/facebook/src/main/res/drawable-xxhdpi/messenger_bubble_large_white.png
deleted file mode 100644
index 39e8f4d7b..000000000
Binary files a/facebook/src/main/res/drawable-xxhdpi/messenger_bubble_large_white.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xxhdpi/messenger_bubble_small_blue.png b/facebook/src/main/res/drawable-xxhdpi/messenger_bubble_small_blue.png
deleted file mode 100644
index b5ad769bd..000000000
Binary files a/facebook/src/main/res/drawable-xxhdpi/messenger_bubble_small_blue.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xxhdpi/messenger_bubble_small_white.png b/facebook/src/main/res/drawable-xxhdpi/messenger_bubble_small_white.png
deleted file mode 100644
index 3134ed126..000000000
Binary files a/facebook/src/main/res/drawable-xxhdpi/messenger_bubble_small_white.png and /dev/null differ
diff --git a/facebook/src/main/res/drawable-xxhdpi/messenger_button_send_round_shadow.png b/facebook/src/main/res/drawable-xxhdpi/messenger_button_send_round_shadow.png
deleted file mode 100644
index 5b88c0947..000000000
Binary files a/facebook/src/main/res/drawable-xxhdpi/messenger_button_send_round_shadow.png and /dev/null differ
diff --git a/facebook/src/main/res/values-af/strings.xml b/facebook/src/main/res/values-af/strings.xml
deleted file mode 100644
index c5932dc6a..000000000
--- a/facebook/src/main/res/values-af/strings.xml
+++ /dev/null
@@ -1,41 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Hou van</string>
-    <string name="com_facebook_like_button_liked">Hou van</string>
-    <string name="com_facebook_loginview_log_out_button">Meld af</string>
-    <string name="com_facebook_loginview_log_in_button">Meld aan</string>
-    <string name="com_facebook_loginview_log_in_button_long">Meld met Facebook aan</string>
-    <string name="com_facebook_loginview_logged_in_as">Aangemeld as: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Met Facebook aangemeld</string>
-    <string name="com_facebook_loginview_log_out_action">Meld af</string>
-    <string name="com_facebook_loginview_cancel_action">Kanselleer</string>
-    <string name="com_facebook_loading">Laai tans...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest-fout</string>
-    <string name="com_facebook_internet_permission_error_message">Webaansig-aanmelding benodig INTERNET-toestemming</string>
-    <string name="com_facebook_tooltip_default">Nuut! Jy is in beheer - kies watter inligting jy met toepassings wil deel.</string>
-    <string name="com_facebook_image_download_unknown_error">Onverwagse fout met aflaai van \'n
-        prent.</string>
-    <string name="com_facebook_share_button_text">Deel</string>
-    <string name="com_facebook_send_button_text">Stuur</string>
-    <string name="com_facebook_device_auth_instructions">Besoek &lt;b&gt;facebook.com/device&lt;/b&gt; op jou slimfoon of rekenaar en voer hierdie kode in:</string>
-</resources>
diff --git a/facebook/src/main/res/values-ar/strings.xml b/facebook/src/main/res/values-ar/strings.xml
deleted file mode 100644
index 946c6c9b8..000000000
--- a/facebook/src/main/res/values-ar/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">إعجاب</string>
-    <string name="com_facebook_like_button_liked">أعجبني</string>
-    <string name="com_facebook_loginview_log_out_button">تسجيل الخروج</string>
-    <string name="com_facebook_loginview_log_in_button">تسجيل الدخول</string>
-    <string name="com_facebook_loginview_log_in_button_long">تسجيل الدخول بحساب فيسبوك</string>
-    <string name="com_facebook_loginview_logged_in_as">تم تسجيل الدخول باسم: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">تم تسجيل الدخول بحساب فيسبوك</string>
-    <string name="com_facebook_loginview_log_out_action">تسجيل الخروج</string>
-    <string name="com_facebook_loginview_cancel_action">إلغاء</string>
-    <string name="com_facebook_loading">جارٍ التحميل...</string>
-    <string name="com_facebook_internet_permission_error_title">خطأ AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">يتطلب تسجيل الدخول إلى WebView إذن الاتصال بالإنترنت</string>
-    <string name="com_facebook_tooltip_default">جديد! أنت المتحكم - اختر المعلومات التي تريد مشاركتها مع التطبيقات.</string>
-    <string name="com_facebook_image_download_unknown_error">حدث خطأ غير متوقع أثناء تنزيل صورة.</string>
-    <string name="com_facebook_share_button_text">مشاركة</string>
-    <string name="com_facebook_send_button_text">إرسال</string>
-    <string name="com_facebook_device_auth_instructions">زر &lt;b&gt;facebook.com/device&lt;/b&gt; على هاتفك الذكي أو الكمبيوتر ثم أدخل هذا الرمز:</string>
-</resources>
diff --git a/facebook/src/main/res/values-bn/strings.xml b/facebook/src/main/res/values-bn/strings.xml
deleted file mode 100644
index 1fb7ec1d1..000000000
--- a/facebook/src/main/res/values-bn/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">পছন্দ করুন</string>
-    <string name="com_facebook_like_button_liked">পছন্দ করা হয়েছে</string>
-    <string name="com_facebook_loginview_log_out_button">লগ আউট করুন</string>
-    <string name="com_facebook_loginview_log_in_button">লগ ইন করুন</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook -এর সাথে লগ ইন করুন</string>
-    <string name="com_facebook_loginview_logged_in_as">এই হিসাবে লগ ইন করা হয়েছে: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ব্যবহার করে লগ ইন করা হয়েছে</string>
-    <string name="com_facebook_loginview_log_out_action">লগ আউট করুন</string>
-    <string name="com_facebook_loginview_cancel_action">বাতিল করুন</string>
-    <string name="com_facebook_loading">লোড হচ্ছে...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest ত্রুটি</string>
-    <string name="com_facebook_internet_permission_error_message">WebView লগ ইন করার জন্য INTERNET-এর অনুমতির প্রয়োজন আছে</string>
-    <string name="com_facebook_tooltip_default">নতুন! আপনি নিয়ন্ত্রণে আছেন-অ্যাপসের সাথে আপনি কোন তথ্য ভাগ করতে চাইছেন তা চয়ন করুন৷</string>
-    <string name="com_facebook_image_download_unknown_error">একটি চিত্র ডাউনলোড করার সময়ে অপ্রত্যাশিত ত্রুটি দেখা দিচ্ছে৷</string>
-    <string name="com_facebook_share_button_text">ভাগ করুন</string>
-    <string name="com_facebook_send_button_text">পাঠান</string>
-    <string name="com_facebook_device_auth_instructions">আপনার কম্পিউটার বা স্মার্টফোন থেকে &lt;b&gt;facebook.com/device&lt;/b&gt; এ যান এবং এই কোডটিকে প্রবেশ করান:</string>
-</resources>
diff --git a/facebook/src/main/res/values-cs/strings.xml b/facebook/src/main/res/values-cs/strings.xml
deleted file mode 100644
index ff7de1b51..000000000
--- a/facebook/src/main/res/values-cs/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">To se mi líbí</string>
-    <string name="com_facebook_like_button_liked">Už se mi to líbí</string>
-    <string name="com_facebook_loginview_log_out_button">Odhlásit</string>
-    <string name="com_facebook_loginview_log_in_button">Přihlásit</string>
-    <string name="com_facebook_loginview_log_in_button_long">Přihlásit se přes Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Přihlášen(a) jako: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Přihlášen(a) přes Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Odhlásit</string>
-    <string name="com_facebook_loginview_cancel_action">Zrušit</string>
-    <string name="com_facebook_loading">Načítání…</string>
-    <string name="com_facebook_internet_permission_error_title">Chyba AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Webové přihlášení vyžaduje oprávnění použít INTERNET</string>
-    <string name="com_facebook_tooltip_default">Novinka! Je jen na vás, které informace chcete s aplikacemi sdílet.</string>
-    <string name="com_facebook_image_download_unknown_error">Při stahování obrázku došlo k nečekané chybě.</string>
-    <string name="com_facebook_share_button_text">Sdílet</string>
-    <string name="com_facebook_send_button_text">Odeslat</string>
-    <string name="com_facebook_device_auth_instructions">Přejděte ze smartphonu nebo počítače na &lt;b&gt;facebook.com/device&lt;/b&gt; a zadejte tento kód:</string>
-</resources>
diff --git a/facebook/src/main/res/values-da/strings.xml b/facebook/src/main/res/values-da/strings.xml
deleted file mode 100644
index 994356453..000000000
--- a/facebook/src/main/res/values-da/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Synes godt om</string>
-    <string name="com_facebook_like_button_liked">Synes godt om</string>
-    <string name="com_facebook_loginview_log_out_button">Log af</string>
-    <string name="com_facebook_loginview_log_in_button">Log på</string>
-    <string name="com_facebook_loginview_log_in_button_long">Log på med Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Logget på som: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Logget på med Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Log af</string>
-    <string name="com_facebook_loginview_cancel_action">Annuller</string>
-    <string name="com_facebook_loading">Indlæser ...</string>
-    <string name="com_facebook_internet_permission_error_title">Fejl i forbindelse med AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">WebView-login kræver tilladelse til INTERNET</string>
-    <string name="com_facebook_tooltip_default">Nyhed! Du har styringen – vælg de oplysninger, som du vil dele med apps.</string>
-    <string name="com_facebook_image_download_unknown_error">Der opstod en uventet fejl under download af et billede.</string>
-    <string name="com_facebook_share_button_text">Del</string>
-    <string name="com_facebook_send_button_text">Send</string>
-    <string name="com_facebook_device_auth_instructions">Gå til &lt;b&gt;facebook.com/device&lt;/b&gt; på din smartphone eller computer, og indtast denne kode:</string>
-</resources>
diff --git a/facebook/src/main/res/values-de/messenger_button_strings.xml b/facebook/src/main/res/values-de/messenger_button_strings.xml
deleted file mode 100644
index 8b125cf1a..000000000
--- a/facebook/src/main/res/values-de/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Senden</string>
-</resources>
diff --git a/facebook/src/main/res/values-de/strings.xml b/facebook/src/main/res/values-de/strings.xml
deleted file mode 100644
index 0913a44e6..000000000
--- a/facebook/src/main/res/values-de/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Gefällt mir</string>
-    <string name="com_facebook_like_button_liked">Gefällt dir</string>
-    <string name="com_facebook_loginview_log_out_button">Abmelden</string>
-    <string name="com_facebook_loginview_log_in_button">Anmelden</string>
-    <string name="com_facebook_loginview_log_in_button_long">Über Facebook anmelden</string>
-    <string name="com_facebook_loginview_logged_in_as">Angemeldet als: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Über Facebook angemeldet</string>
-    <string name="com_facebook_loginview_log_out_action">Abmelden</string>
-    <string name="com_facebook_loginview_cancel_action">Abbrechen</string>
-    <string name="com_facebook_loading">Wird geladen ...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest-Fehler</string>
-    <string name="com_facebook_internet_permission_error_message">Die WebView-Anmeldung erfordert die INTERNET-Berechtigung</string>
-    <string name="com_facebook_tooltip_default">Neu! Es liegt ganz an dir – du kannst dir aussuchen, was du mit Apps teilen möchtest.</string>
-    <string name="com_facebook_image_download_unknown_error">Unerwarteter Fehler beim Herunterladen eines Bildes.</string>
-    <string name="com_facebook_share_button_text">Teilen</string>
-    <string name="com_facebook_send_button_text">Senden</string>
-    <string name="com_facebook_device_auth_instructions">Gehe über dein Smartphone oder deinen Computer zu &lt;b&gt;facebook.com/device&lt;/b&gt; und gib diesen Code ein:</string>
-</resources>
diff --git a/facebook/src/main/res/values-el/messenger_button_strings.xml b/facebook/src/main/res/values-el/messenger_button_strings.xml
deleted file mode 100644
index 4acca25b4..000000000
--- a/facebook/src/main/res/values-el/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Αποστολή</string>
-</resources>
diff --git a/facebook/src/main/res/values-el/strings.xml b/facebook/src/main/res/values-el/strings.xml
deleted file mode 100644
index 0d4699dcb..000000000
--- a/facebook/src/main/res/values-el/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Μου αρέσει!</string>
-    <string name="com_facebook_like_button_liked">Σας αρέσει</string>
-    <string name="com_facebook_loginview_log_out_button">Αποσύνδεση</string>
-    <string name="com_facebook_loginview_log_in_button">Σύνδεση</string>
-    <string name="com_facebook_loginview_log_in_button_long">Σύνδεση μέσω Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Έχει γίνει σύνδεση ως: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Έχει γίνει σύνδεση μέσω Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Αποσύνδεση</string>
-    <string name="com_facebook_loginview_cancel_action">Άκυρο</string>
-    <string name="com_facebook_loading">Φόρτωση...</string>
-    <string name="com_facebook_internet_permission_error_title">Σφάλμα AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Για τη σύνδεση στο WebView απαιτείται σύνδεση INTERNET</string>
-    <string name="com_facebook_tooltip_default">Νέο! Έχετε τον έλεγχο - επιλέξτε ποιες πληροφορίες θέλετε να κοινοποιούνται στις εφαρμογές.</string>
-    <string name="com_facebook_image_download_unknown_error">Προέκυψε μη αναμενόμενο σφάλμα κατά τη λήψη μιας εικόνας.</string>
-    <string name="com_facebook_share_button_text">Κοινοποίηση</string>
-    <string name="com_facebook_send_button_text">Αποστολή</string>
-    <string name="com_facebook_device_auth_instructions">Επισκεφτείτε τον ιστότοπο &lt;b&gt;facebook.com/device&lt;/b&gt; από το smartphone ή τον υπολογιστή σας και πληκτρολογήστε αυτόν τον κωδικό:</string>
-</resources>
diff --git a/facebook/src/main/res/values-es-rES/messenger_button_strings.xml b/facebook/src/main/res/values-es-rES/messenger_button_strings.xml
deleted file mode 100644
index c7b157fb2..000000000
--- a/facebook/src/main/res/values-es-rES/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Enviar</string>
-</resources>
diff --git a/facebook/src/main/res/values-es-rES/strings.xml b/facebook/src/main/res/values-es-rES/strings.xml
deleted file mode 100644
index bc0b08e39..000000000
--- a/facebook/src/main/res/values-es-rES/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Me gusta</string>
-    <string name="com_facebook_like_button_liked">Te gusta</string>
-    <string name="com_facebook_loginview_log_out_button">Salir</string>
-    <string name="com_facebook_loginview_log_in_button">Inicio de sesión</string>
-    <string name="com_facebook_loginview_log_in_button_long">Iniciar sesión con Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Sesión iniciada como: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Sesión iniciada con Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Salir</string>
-    <string name="com_facebook_loginview_cancel_action">Cancelar</string>
-    <string name="com_facebook_loading">Cargando...</string>
-    <string name="com_facebook_internet_permission_error_title">Error de AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">El inicio de sesión de WebView requiere permiso para INTERNET</string>
-    <string name="com_facebook_tooltip_default">Novedad: Tú eres quien controla y elige la información que quieres compartir con las aplicaciones.</string>
-    <string name="com_facebook_image_download_unknown_error">Error inesperado al descargar una imagen.</string>
-    <string name="com_facebook_share_button_text">Compartir</string>
-    <string name="com_facebook_send_button_text">Enviar</string>
-    <string name="com_facebook_device_auth_instructions">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; en tu smartphone o computadora e ingresa este código:</string>
-</resources>
diff --git a/facebook/src/main/res/values-es/messenger_button_strings.xml b/facebook/src/main/res/values-es/messenger_button_strings.xml
deleted file mode 100644
index c7b157fb2..000000000
--- a/facebook/src/main/res/values-es/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Enviar</string>
-</resources>
diff --git a/facebook/src/main/res/values-es/strings.xml b/facebook/src/main/res/values-es/strings.xml
deleted file mode 100644
index 9a211ca6c..000000000
--- a/facebook/src/main/res/values-es/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Me gusta</string>
-    <string name="com_facebook_like_button_liked">Te gusta</string>
-    <string name="com_facebook_loginview_log_out_button">Salir</string>
-    <string name="com_facebook_loginview_log_in_button">Inicio de sesión</string>
-    <string name="com_facebook_loginview_log_in_button_long">Iniciar sesión con Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Sesión iniciada como: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Sesión iniciada con Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Salir</string>
-    <string name="com_facebook_loginview_cancel_action">Cancelar</string>
-    <string name="com_facebook_loading">Cargando…</string>
-    <string name="com_facebook_internet_permission_error_title">Error AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">El inicio de sesión a la web requiere permiso de conexión a internet</string>
-    <string name="com_facebook_tooltip_default">¡Nuevo! Tú tienes el control: elige qué información quieres compartir con las aplicaciones.</string>
-    <string name="com_facebook_image_download_unknown_error">Se produjo un error inesperado al descargar una imagen.</string>
-    <string name="com_facebook_share_button_text">Compartir</string>
-    <string name="com_facebook_send_button_text">Enviar</string>
-    <string name="com_facebook_device_auth_instructions">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; en tu smartphone u ordenador e introduce este código:</string>
-</resources>
diff --git a/facebook/src/main/res/values-fi/messenger_button_strings.xml b/facebook/src/main/res/values-fi/messenger_button_strings.xml
deleted file mode 100644
index f9864d98d..000000000
--- a/facebook/src/main/res/values-fi/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Lähetä</string>
-</resources>
diff --git a/facebook/src/main/res/values-fi/strings.xml b/facebook/src/main/res/values-fi/strings.xml
deleted file mode 100644
index 3962c6cc3..000000000
--- a/facebook/src/main/res/values-fi/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Tykkää</string>
-    <string name="com_facebook_like_button_liked">Tykätty</string>
-    <string name="com_facebook_loginview_log_out_button">Kirjaudu ulos</string>
-    <string name="com_facebook_loginview_log_in_button">Kirjaudu sisään</string>
-    <string name="com_facebook_loginview_log_in_button_long">Kirjaudu sisään Facebookin avulla</string>
-    <string name="com_facebook_loginview_logged_in_as">Sisäänkirjautunut nimellä: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Sisäänkirjautunut Facebookin avulla</string>
-    <string name="com_facebook_loginview_log_out_action">Kirjaudu ulos</string>
-    <string name="com_facebook_loginview_cancel_action">Peruuta</string>
-    <string name="com_facebook_loading">Ladataan...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest-virhe</string>
-    <string name="com_facebook_internet_permission_error_message">WebView-kirjautuminen edellyttää INTERNET-käyttöoikeutta</string>
-    <string name="com_facebook_tooltip_default">Uutta! Sinä päätät – valitse, mitä haluat jakaa sovellusten kanssa.</string>
-    <string name="com_facebook_image_download_unknown_error">Odottamaton virhe kuvan palvelimesta lataamisen aikana.</string>
-    <string name="com_facebook_share_button_text">Jaa</string>
-    <string name="com_facebook_send_button_text">Lähetä</string>
-    <string name="com_facebook_device_auth_instructions">Siirry osoitteeseen &lt;b&gt;facebook.com/device&lt;/b&gt; älypuhelimella tai tietokoneella ja anna seuraava koodi:</string>
-</resources>
diff --git a/facebook/src/main/res/values-fr/messenger_button_strings.xml b/facebook/src/main/res/values-fr/messenger_button_strings.xml
deleted file mode 100644
index 18721c291..000000000
--- a/facebook/src/main/res/values-fr/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Envoyer</string>
-</resources>
diff --git a/facebook/src/main/res/values-fr/strings.xml b/facebook/src/main/res/values-fr/strings.xml
deleted file mode 100644
index d7a686d8b..000000000
--- a/facebook/src/main/res/values-fr/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">J’aime</string>
-    <string name="com_facebook_like_button_liked">J’aime déjà</string>
-    <string name="com_facebook_loginview_log_out_button">Déconnexion</string>
-    <string name="com_facebook_loginview_log_in_button">Connexion</string>
-    <string name="com_facebook_loginview_log_in_button_long">Connexion avec Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Connexion en tant que : %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Connecté(e) à l’aide de Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Déconnexion</string>
-    <string name="com_facebook_loginview_cancel_action">Annuler</string>
-    <string name="com_facebook_loading">Chargement...</string>
-    <string name="com_facebook_internet_permission_error_title">Erreur AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">La connexion au web nécessite une autorisation d’accéder à INTERNET</string>
-    <string name="com_facebook_tooltip_default">Nouveau ! Choisissez les informations que vous souhaitez partager avec les applications.</string>
-    <string name="com_facebook_image_download_unknown_error">Une erreur inattendue s’est produite au moment de télécharger une image.</string>
-    <string name="com_facebook_share_button_text">Partager</string>
-    <string name="com_facebook_send_button_text">Envoyer</string>
-    <string name="com_facebook_device_auth_instructions">Rendez-vous sur &lt;b&gt;facebook.com/device&lt;/b&gt; sur votre smartphone ou votre ordinateur et entrez ce code :</string>
-</resources>
diff --git a/facebook/src/main/res/values-gu/messenger_button_strings.xml b/facebook/src/main/res/values-gu/messenger_button_strings.xml
deleted file mode 100644
index 012084c1b..000000000
--- a/facebook/src/main/res/values-gu/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">મોકલો</string>
-</resources>
diff --git a/facebook/src/main/res/values-gu/strings.xml b/facebook/src/main/res/values-gu/strings.xml
deleted file mode 100644
index 633e58a60..000000000
--- a/facebook/src/main/res/values-gu/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">પસંદ કરો</string>
-    <string name="com_facebook_like_button_liked">પસંદ કર્યું</string>
-    <string name="com_facebook_loginview_log_out_button">લૉગ આઉટ કરો</string>
-    <string name="com_facebook_loginview_log_in_button">લૉગ ઇન કરો</string>
-    <string name="com_facebook_loginview_log_in_button_long">ફેસબુક સાથે લૉગ ઇન કરો</string>
-    <string name="com_facebook_loginview_logged_in_as">આ તરીકે લૉગ ઇન થયાં: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">ફેસબુકનો ઉપયોગ કરીને લૉગ ઇન કરો</string>
-    <string name="com_facebook_loginview_log_out_action">લૉગ આઉટ કરો</string>
-    <string name="com_facebook_loginview_cancel_action">રદ કરો</string>
-    <string name="com_facebook_loading">લોડ કરી રહ્યાં છે...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest ભૂલ</string>
-    <string name="com_facebook_internet_permission_error_message">WebView લૉગિન માટે ઇન્ટરનેટ પરવાગની આવશ્યક છે</string>
-    <string name="com_facebook_tooltip_default">નવું! તમે નિયંત્રણ કરો છો - તમે એપ્લિકેશન્સ સાથે કઈ માહિતી શેર કરવા માંગો છો તે પસંદ કરો.</string>
-    <string name="com_facebook_image_download_unknown_error">છબી ડાઉનલોડ કરતી વખતે અનપેક્ષિત ભૂલ આવી.</string>
-    <string name="com_facebook_share_button_text">શેર કરો</string>
-    <string name="com_facebook_send_button_text">મોકલો</string>
-    <string name="com_facebook_device_auth_instructions">તમારા સ્માર્ટફોન અથવા કમ્પ્યુટર પર &lt;b&gt;facebook.com/device&lt;/b&gt; ની મુલાકાત લો અને આ કોડ દાખલ કરો:</string>
-</resources>
diff --git a/facebook/src/main/res/values-hi/messenger_button_strings.xml b/facebook/src/main/res/values-hi/messenger_button_strings.xml
deleted file mode 100644
index ad8aeabd3..000000000
--- a/facebook/src/main/res/values-hi/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">भेजें</string>
-</resources>
diff --git a/facebook/src/main/res/values-hi/strings.xml b/facebook/src/main/res/values-hi/strings.xml
deleted file mode 100644
index 1784ecf2d..000000000
--- a/facebook/src/main/res/values-hi/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">पसंद करें</string>
-    <string name="com_facebook_like_button_liked">पसंद किया</string>
-    <string name="com_facebook_loginview_log_out_button">लॉग आउट</string>
-    <string name="com_facebook_loginview_log_in_button">लॉग इन करें</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook से लॉग इन करें</string>
-    <string name="com_facebook_loginview_logged_in_as">इस रूप में लॉग इन किया: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook का उपयोग करके लॉग इन किया हुआ है</string>
-    <string name="com_facebook_loginview_log_out_action">लॉग आउट</string>
-    <string name="com_facebook_loginview_cancel_action">रद्द करें</string>
-    <string name="com_facebook_loading">लोड हो रहा है...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest गलती</string>
-    <string name="com_facebook_internet_permission_error_message">WebView लॉग इन के लिए INTERNET अनुमति की आवश्यकता है</string>
-    <string name="com_facebook_tooltip_default">नया! आप नियंत्रण में हैं - चुनें कि आप एप्लिकेशन से कौन-सी जानकारी साझा करना चाहते हैं.</string>
-    <string name="com_facebook_image_download_unknown_error">एक चित्र डाउनलोड करते समय अनपेक्षित गलती हुई.</string>
-    <string name="com_facebook_share_button_text">साझा करें</string>
-    <string name="com_facebook_send_button_text">भेजें</string>
-    <string name="com_facebook_device_auth_instructions">अपने स्मार्टफ़ोन या कंप्यूटर पर &lt;b&gt;facebook.com/device&lt;/b&gt; पर जाएँ और यह कोड डालें:</string>
-</resources>
diff --git a/facebook/src/main/res/values-hr/strings.xml b/facebook/src/main/res/values-hr/strings.xml
deleted file mode 100644
index 24cd1b72f..000000000
--- a/facebook/src/main/res/values-hr/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Sviđa mi se</string>
-    <string name="com_facebook_like_button_liked">Označeno sa "sviđa mi se"</string>
-    <string name="com_facebook_loginview_log_out_button">Odjavi se</string>
-    <string name="com_facebook_loginview_log_in_button">Prijavi se</string>
-    <string name="com_facebook_loginview_log_in_button_long">Prijava putem Facebooka</string>
-    <string name="com_facebook_loginview_logged_in_as">Prijavljen kao: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Prijavljen putem Facebooka</string>
-    <string name="com_facebook_loginview_log_out_action">Odjavi se</string>
-    <string name="com_facebook_loginview_cancel_action">Odustani</string>
-    <string name="com_facebook_loading">Učitavanje u tijeku…</string>
-    <string name="com_facebook_internet_permission_error_title">Pogreška datoteke AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Za prijavu u aplikaciju WebView potrebna je dozvola INTERNET</string>
-    <string name="com_facebook_tooltip_default">Novo! Vi odlučujete – odaberite koje informacije želite podijeliti u aplikacijama.</string>
-    <string name="com_facebook_image_download_unknown_error">Prilikom preuzimanja slike došlo je do neočekivane pogreške.</string>
-    <string name="com_facebook_share_button_text">Dijeli</string>
-    <string name="com_facebook_send_button_text">Pošalji</string>
-    <string name="com_facebook_device_auth_instructions">Posjetite &lt;b&gt;facebook.com/device&lt;/b&gt; na pametnom telefonu ili računalu i unesite ovaj kôd:</string>
-</resources>
diff --git a/facebook/src/main/res/values-hu/strings.xml b/facebook/src/main/res/values-hu/strings.xml
deleted file mode 100644
index e91c8444e..000000000
--- a/facebook/src/main/res/values-hu/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Tetszik</string>
-    <string name="com_facebook_like_button_liked">Kedveled</string>
-    <string name="com_facebook_loginview_log_out_button">Kijelentkezés</string>
-    <string name="com_facebook_loginview_log_in_button">Bejelentkezés</string>
-    <string name="com_facebook_loginview_log_in_button_long">Bejelentkezés a Facebook használatával</string>
-    <string name="com_facebook_loginview_logged_in_as">Bejelentkezve %1$s néven</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Bejelentkezve a Facebook használatával</string>
-    <string name="com_facebook_loginview_log_out_action">Kijelentkezés</string>
-    <string name="com_facebook_loginview_cancel_action">Törlés</string>
-    <string name="com_facebook_loading">Betöltés...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest-hiba</string>
-    <string name="com_facebook_internet_permission_error_message">A webes bejelentkezéshez szükséges a jogosultság az internet használatára.</string>
-    <string name="com_facebook_tooltip_default">Újdonság! A döntés a kezedben van: kiválaszthatod, hogy milyen adatokat osztasz meg az alkalmazásokkal.</string>
-    <string name="com_facebook_image_download_unknown_error">Váratlan hiba történt egy kép betöltése közben.</string>
-    <string name="com_facebook_share_button_text">Megosztás</string>
-    <string name="com_facebook_send_button_text">Küldés</string>
-    <string name="com_facebook_device_auth_instructions">Keresd fel a(z) &lt;b&gt;facebook.com/device&lt;/b&gt; oldalt a telefonodról vagy számítógépről, és írd be a következő kódot:</string>
-</resources>
diff --git a/facebook/src/main/res/values-in/messenger_button_strings.xml b/facebook/src/main/res/values-in/messenger_button_strings.xml
deleted file mode 100644
index 31bb1a62e..000000000
--- a/facebook/src/main/res/values-in/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Kirim</string>
-</resources>
diff --git a/facebook/src/main/res/values-it/messenger_button_strings.xml b/facebook/src/main/res/values-it/messenger_button_strings.xml
deleted file mode 100644
index 55473fbdc..000000000
--- a/facebook/src/main/res/values-it/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Invia</string>
-</resources>
diff --git a/facebook/src/main/res/values-it/strings.xml b/facebook/src/main/res/values-it/strings.xml
deleted file mode 100644
index 9e46b98bd..000000000
--- a/facebook/src/main/res/values-it/strings.xml
+++ /dev/null
@@ -1,42 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Mi piace</string>
-    <string name="com_facebook_like_button_liked">Ti piace</string>
-    <string name="com_facebook_loginview_log_out_button">Esci</string>
-    <string name="com_facebook_loginview_log_in_button">Accedi</string>
-    <string name="com_facebook_loginview_log_in_button_long">Accedi con Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Accesso effettuato come: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Accesso effettuato con Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Esci</string>
-    <string name="com_facebook_loginview_cancel_action">Annulla</string>
-    <string name="com_facebook_loading">Caricamento...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest Error</string>
-    <string name="com_facebook_internet_permission_error_message">L\'accesso tramite Web richiede
-        l\'autorizzazione INTERNET</string>
-    <string name="com_facebook_tooltip_default">Novità! Il controllo è nelle tue mani: scegli quali informazioni condividere con le applicazioni.</string>
-    <string name="com_facebook_image_download_unknown_error">Errore imprevisto durante il
-        caricamento di un\'immagine.</string>
-    <string name="com_facebook_share_button_text">Condividi</string>
-    <string name="com_facebook_send_button_text">Invia</string>
-    <string name="com_facebook_device_auth_instructions">Accedi a &lt;b&gt;facebook.com/device&lt;/b&gt; nel tuo smartphone o computer e inserisci questo codice:</string>
-</resources>
diff --git a/facebook/src/main/res/values-ja/messenger_button_strings.xml b/facebook/src/main/res/values-ja/messenger_button_strings.xml
deleted file mode 100644
index 029d66e5f..000000000
--- a/facebook/src/main/res/values-ja/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">送信</string>
-</resources>
diff --git a/facebook/src/main/res/values-ja/strings.xml b/facebook/src/main/res/values-ja/strings.xml
deleted file mode 100644
index 858d388e5..000000000
--- a/facebook/src/main/res/values-ja/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">いいね！</string>
-    <string name="com_facebook_like_button_liked">いいね！済み</string>
-    <string name="com_facebook_loginview_log_out_button">ログアウト</string>
-    <string name="com_facebook_loginview_log_in_button">ログイン</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebookでログイン</string>
-    <string name="com_facebook_loginview_logged_in_as">次のユーザーとしてログイン中: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebookを使用してログイン中</string>
-    <string name="com_facebook_loginview_log_out_action">ログアウト</string>
-    <string name="com_facebook_loginview_cancel_action">キャンセル</string>
-    <string name="com_facebook_loading">読み込み中...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifestエラー</string>
-    <string name="com_facebook_internet_permission_error_message">WebViewログインにはINTERNET権限が必要です</string>
-    <string name="com_facebook_tooltip_default">新機能！アプリと共有する情報をコントロールできます。</string>
-    <string name="com_facebook_image_download_unknown_error">画像のダウンロード中に予期しないエラーが発生しました。</string>
-    <string name="com_facebook_share_button_text">シェア</string>
-    <string name="com_facebook_send_button_text">送信</string>
-    <string name="com_facebook_device_auth_instructions">スマートフォンまたはコンピュータから&lt;b&gt;facebook.com/device&lt;/b&gt;にアクセスし、次のコードを入力してください。</string>
-</resources>
diff --git a/facebook/src/main/res/values-kn/messenger_button_strings.xml b/facebook/src/main/res/values-kn/messenger_button_strings.xml
deleted file mode 100644
index 1b8db435c..000000000
--- a/facebook/src/main/res/values-kn/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">ಕಳುಹಿಸು</string>
-</resources>
diff --git a/facebook/src/main/res/values-kn/strings.xml b/facebook/src/main/res/values-kn/strings.xml
deleted file mode 100644
index c3ca7a696..000000000
--- a/facebook/src/main/res/values-kn/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">ಇಷ್ಟವಾಗಿದೆ</string>
-    <string name="com_facebook_like_button_liked">ಇಷ್ಟಪಟ್ಟಿದ್ದಾರೆ</string>
-    <string name="com_facebook_loginview_log_out_button">ಲಾಗ್‌ ಔಟ್‌</string>
-    <string name="com_facebook_loginview_log_in_button">ಲಾಗ್‌ ಇನ್‌</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook ಮೂಲಕ ಲಾಗ್‌ ಇನ್‌ ಮಾಡಿ</string>
-    <string name="com_facebook_loginview_logged_in_as">ಇದರಂತೆ ಲಾಗಿನ್‌ ಮಾಡಲಾಗಿದೆ: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ಬಳಸಿಕೊಂಡು ಲಾಗಿನ್‌ ಮಾಡಲಾಗಿದೆ</string>
-    <string name="com_facebook_loginview_log_out_action">ಲಾಗ್‌ ಔಟ್‌</string>
-    <string name="com_facebook_loginview_cancel_action">ರದ್ದುಮಾಡು</string>
-    <string name="com_facebook_loading">ಲೋಡ್‌ ಆಗುತ್ತಿದೆ...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest ದೋಷ</string>
-    <string name="com_facebook_internet_permission_error_message">WebView ಲಾಗಿನ್‌ಗೆ ಇಂಟರ್ನೆಟ್ ಅನುಮತಿಯ ಅಗತ್ಯವಿದೆ</string>
-    <string name="com_facebook_tooltip_default">ಹೊಸ! ನೀವು ನಿಯಂತ್ರಣದಲ್ಲಿರುವಿರಿ - ನೀವು ಅಪ್ಲಿಕೇಶನ್‌ಗಳನ್ನು ಬಳಸಿಕೊಂಡು ಹಂಚಿಕೊಳ್ಳಲು ಬಯಸುವ ವಿಷಯವನ್ನು ಆರಿಸಿ.</string>
-    <string name="com_facebook_image_download_unknown_error">ಚಿತ್ರವನ್ನು ಡೌನ್‌ಲೋಡ್‌ ಮಾಡುವಾಗ ಅನಿರೀಕ್ಷಿತ ದೋಷ ಕಂಡುಬಂದಿದೆ.</string>
-    <string name="com_facebook_share_button_text">ಹಂಚಿಕೊಳ್ಳಿ</string>
-    <string name="com_facebook_send_button_text">ಕಳುಹಿಸಿ</string>
-    <string name="com_facebook_device_auth_instructions">ನಿಮ್ಮ ಸ್ಮಾರ್ಟ್‌ ಫೋನ್‌ ಅಥವಾ ಕಂಪ್ಯೂಟರ್‌ನಲ್ಲಿ &lt;b&gt;facebook.com/device&lt;/b&gt; ಗೆ ಭೇಟಿ ನೀಡಿ ಮತ್ತು ಈ ಕೋಡ್‌ ಅನ್ನು ನಮೂದಿಸಿ:</string>
-</resources>
diff --git a/facebook/src/main/res/values-ko/messenger_button_strings.xml b/facebook/src/main/res/values-ko/messenger_button_strings.xml
deleted file mode 100644
index 0f492315b..000000000
--- a/facebook/src/main/res/values-ko/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">보내기</string>
-</resources>
diff --git a/facebook/src/main/res/values-ko/strings.xml b/facebook/src/main/res/values-ko/strings.xml
deleted file mode 100644
index c925e6ef7..000000000
--- a/facebook/src/main/res/values-ko/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">좋아요</string>
-    <string name="com_facebook_like_button_liked">좋아요</string>
-    <string name="com_facebook_loginview_log_out_button">로그아웃</string>
-    <string name="com_facebook_loginview_log_in_button">로그인</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook으로 로그인</string>
-    <string name="com_facebook_loginview_logged_in_as">로그인할 이름: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook 계정으로 로그인함</string>
-    <string name="com_facebook_loginview_log_out_action">로그아웃</string>
-    <string name="com_facebook_loginview_cancel_action">취소</string>
-    <string name="com_facebook_loading">읽어들이는 중...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest 오류</string>
-    <string name="com_facebook_internet_permission_error_message">WebView에 로그인하려면 인터넷 권한이 필요합니다</string>
-    <string name="com_facebook_tooltip_default">새로운 기능! 이제 앱과 어떤 정보를 공유할지 자유롭게 선택할 수 있습니다.</string>
-    <string name="com_facebook_image_download_unknown_error">이미지를 다운로드하는 중 예기치 않은 오류가 발생했습니다.</string>
-    <string name="com_facebook_share_button_text">공유하기</string>
-    <string name="com_facebook_send_button_text">보내기</string>
-    <string name="com_facebook_device_auth_instructions">스마트폰이나 컴퓨터에서 &lt;b&gt;facebook.com/device&lt;/b&gt; 주소를 방문하여 다음 코드를 입력하세요.</string>
-</resources>
diff --git a/facebook/src/main/res/values-ml/messenger_button_strings.xml b/facebook/src/main/res/values-ml/messenger_button_strings.xml
deleted file mode 100644
index 4709f1178..000000000
--- a/facebook/src/main/res/values-ml/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">അയയ്ക്കുക</string>
-</resources>
diff --git a/facebook/src/main/res/values-ml/strings.xml b/facebook/src/main/res/values-ml/strings.xml
deleted file mode 100644
index ff740a8ed..000000000
--- a/facebook/src/main/res/values-ml/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">ലൈക്കുചെയ്യുക</string>
-    <string name="com_facebook_like_button_liked">ലൈക്കുചെയ്‌‌തു</string>
-    <string name="com_facebook_loginview_log_out_button">ലോഗ്ഔട്ട് ചെയ്യുക</string>
-    <string name="com_facebook_loginview_log_in_button">ലോഗിൻ ചെയ്യുക</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook ഉപയോഗിച്ച് ലോഗിൻ ചെയ്യുക</string>
-    <string name="com_facebook_loginview_logged_in_as">ഇതുപ്രകാരം ലോഗിൻ ചെയ്യുക: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ഉപയോഗിച്ച് ലോഗിൻ ചെയ്‌തു</string>
-    <string name="com_facebook_loginview_log_out_action">ലോഗ്ഔട്ട് ചെയ്യുക</string>
-    <string name="com_facebook_loginview_cancel_action">റദ്ദാക്കുക</string>
-    <string name="com_facebook_loading">ലോഡുചെയ്യുന്നു...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest പിശക്</string>
-    <string name="com_facebook_internet_permission_error_message">WebView ലോഗിന് ഇന്റർനെറ്റ് അനുമതി ആവശ്യമാണ്</string>
-    <string name="com_facebook_tooltip_default">പുതിയത്! നിങ്ങൾ നിയന്ത്രണത്തിലാണ് - നിങ്ങൾക്ക് ആപ്ലിക്കേഷനുകളുമായി പങ്കിടേണ്ടതുണ്ടെങ്കിൽ തിരഞ്ഞെടുക്കുക.</string>
-    <string name="com_facebook_image_download_unknown_error">ചിത്രം ഡൗൺലോഡുചെയ്യുന്നതിൽ അപ്രതീക്ഷിത പിശക് സംഭവിച്ചു.</string>
-    <string name="com_facebook_share_button_text">പങ്കിടുക</string>
-    <string name="com_facebook_send_button_text">അയയ്‌ക്കുക</string>
-    <string name="com_facebook_device_auth_instructions">നിങ്ങളുടെ സ്‌മാർട്ട്ഫോണിലെ അല്ലെങ്കിൽ കമ്പ്യൂട്ടറിലെ &lt;b&gt;facebook.com/device&lt;/b&gt; സന്ദർശിച്ച് ഇനിപ്പറയുന്ന കോഡ് നൽകുക:</string>
-</resources>
diff --git a/facebook/src/main/res/values-mr/messenger_button_strings.xml b/facebook/src/main/res/values-mr/messenger_button_strings.xml
deleted file mode 100644
index 15fd59880..000000000
--- a/facebook/src/main/res/values-mr/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">पाठवा</string>
-</resources>
diff --git a/facebook/src/main/res/values-mr/strings.xml b/facebook/src/main/res/values-mr/strings.xml
deleted file mode 100644
index ab6105bb9..000000000
--- a/facebook/src/main/res/values-mr/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">आवडले</string>
-    <string name="com_facebook_like_button_liked">आवडलेले</string>
-    <string name="com_facebook_loginview_log_out_button">लॉग आउट करा</string>
-    <string name="com_facebook_loginview_log_in_button">लॉग इन करा</string>
-    <string name="com_facebook_loginview_log_in_button_long">फेसबुकसह लॉग इन करा</string>
-    <string name="com_facebook_loginview_logged_in_as">म्हणून लॉग इन केले: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">फेसबुक वापरून लॉग इन केले</string>
-    <string name="com_facebook_loginview_log_out_action">लॉग आउट करा</string>
-    <string name="com_facebook_loginview_cancel_action">रद्द करा</string>
-    <string name="com_facebook_loading">लोड होत आहे...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest त्रुटी</string>
-    <string name="com_facebook_internet_permission_error_message">वेबदृश्य लॉग इन आवश्यकता इंटरनेट परवानगी</string>
-    <string name="com_facebook_tooltip_default">नवीन! आपण नियंत्रणात आहात - आपण कोणती माहिती अनुप्रयोगांसह शेअर करू इच्छिता ते निवडा.</string>
-    <string name="com_facebook_image_download_unknown_error">प्रतिमा डाउनलोड करताना अनपेक्षित त्रुटी.</string>
-    <string name="com_facebook_share_button_text">सामायिक करा</string>
-    <string name="com_facebook_send_button_text">पाठवा</string>
-    <string name="com_facebook_device_auth_instructions">आपला स्‍मार्ट फोन किंवा संगणकावर &lt;b&gt;facebook.com/device&lt;/b&gt; ला भेट द्या आणि हा कोड प्रविष्‍ट करा:</string>
-</resources>
diff --git a/facebook/src/main/res/values-ms/messenger_button_strings.xml b/facebook/src/main/res/values-ms/messenger_button_strings.xml
deleted file mode 100644
index 567fbbe2a..000000000
--- a/facebook/src/main/res/values-ms/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Hantar</string>
-</resources>
diff --git a/facebook/src/main/res/values-ms/strings.xml b/facebook/src/main/res/values-ms/strings.xml
deleted file mode 100644
index 2c5b536f2..000000000
--- a/facebook/src/main/res/values-ms/strings.xml
+++ /dev/null
@@ -1,39 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Suka</string>
-    <string name="com_facebook_like_button_liked">Disukai</string>
-    <string name="com_facebook_loginview_log_out_button">Log keluar</string>
-    <string name="com_facebook_loginview_log_in_button">Log masuk</string>
-    <string name="com_facebook_loginview_log_in_button_long">Log masuk dengan Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Dilog masuk sebagai: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Dilog masuk menggunakan Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Log keluar</string>
-    <string name="com_facebook_loginview_cancel_action">Batal</string>
-    <string name="com_facebook_loading">Memuatkan...</string>
-    <string name="com_facebook_internet_permission_error_title">Ralat AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Log masuk WebView memerlukan kebenaran INTERNET</string>
-    <string name="com_facebook_tooltip_default">Baru! Anda yang mengawal - pilih maklumat yang anda ingin kongsi dengan aplikasi.</string>
-    <string name="com_facebook_image_download_unknown_error">Ralat tidak dijangka ketika memuat turun imej.</string>
-    <string name="com_facebook_share_button_text">Kongsi</string>
-    <string name="com_facebook_send_button_text">Hantar</string>
-</resources>
diff --git a/facebook/src/main/res/values-nb/messenger_button_strings.xml b/facebook/src/main/res/values-nb/messenger_button_strings.xml
deleted file mode 100644
index d4d20fbd9..000000000
--- a/facebook/src/main/res/values-nb/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Send</string>
-</resources>
diff --git a/facebook/src/main/res/values-nb/strings.xml b/facebook/src/main/res/values-nb/strings.xml
deleted file mode 100644
index 1b909f5eb..000000000
--- a/facebook/src/main/res/values-nb/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Liker</string>
-    <string name="com_facebook_like_button_liked">Likt</string>
-    <string name="com_facebook_loginview_log_out_button">Logg ut</string>
-    <string name="com_facebook_loginview_log_in_button">Logg inn</string>
-    <string name="com_facebook_loginview_log_in_button_long">Logg inn med Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Logget inn som: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Logget inn med Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Logg ut</string>
-    <string name="com_facebook_loginview_cancel_action">Avbryt</string>
-    <string name="com_facebook_loading">Laster inn …</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest-feil</string>
-    <string name="com_facebook_internet_permission_error_message">Webvisning-innlogging krever INTERNETT-tillatelse</string>
-    <string name="com_facebook_tooltip_default">Nyhet! Du bestemmer – velg hvilke opplysninger du vil dele med appene.</string>
-    <string name="com_facebook_image_download_unknown_error">Det oppstod en uventet feil ved nedlasting av et bilde.</string>
-    <string name="com_facebook_share_button_text">Del</string>
-    <string name="com_facebook_send_button_text">Send</string>
-    <string name="com_facebook_device_auth_instructions">Gå til &lt;b&gt;facebook.com/device&lt;/b&gt; på smarttelefonen eller datamaskinen din, og oppgi denne koden:</string>
-</resources>
diff --git a/facebook/src/main/res/values-nl/messenger_button_strings.xml b/facebook/src/main/res/values-nl/messenger_button_strings.xml
deleted file mode 100644
index 293e33aa3..000000000
--- a/facebook/src/main/res/values-nl/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Verzenden</string>
-</resources>
diff --git a/facebook/src/main/res/values-nl/strings.xml b/facebook/src/main/res/values-nl/strings.xml
deleted file mode 100644
index cb9e6235d..000000000
--- a/facebook/src/main/res/values-nl/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Vind ik leuk</string>
-    <string name="com_facebook_like_button_liked">Vind ik leuk</string>
-    <string name="com_facebook_loginview_log_out_button">Afmelden</string>
-    <string name="com_facebook_loginview_log_in_button">Aanmelden</string>
-    <string name="com_facebook_loginview_log_in_button_long">Aanmelden met Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Aangemeld als: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Aangemeld via Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Afmelden</string>
-    <string name="com_facebook_loginview_cancel_action">Annuleren</string>
-    <string name="com_facebook_loading">Laden…</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest Error</string>
-    <string name="com_facebook_internet_permission_error_message">Voor aanmelding via webweergave is de toestemming INTERNET vereist</string>
-    <string name="com_facebook_tooltip_default">Nieuw! Jij hebt de controle. Kies welke informatie je met apps wilt delen.</string>
-    <string name="com_facebook_image_download_unknown_error">Onverwachte fout tijdens het downloaden van een afbeelding.</string>
-    <string name="com_facebook_share_button_text">Delen</string>
-    <string name="com_facebook_send_button_text">Verzenden</string>
-    <string name="com_facebook_device_auth_instructions">Ga op je smartphone of computer naar &lt;b&gt;facebook.com/device&lt;/b&gt; en voer deze code in:</string>
-</resources>
diff --git a/facebook/src/main/res/values-pa/strings.xml b/facebook/src/main/res/values-pa/strings.xml
deleted file mode 100644
index 391c572f4..000000000
--- a/facebook/src/main/res/values-pa/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">ਪਸੰਦ ਕਰੋ</string>
-    <string name="com_facebook_like_button_liked">ਪਸੰਦ ਕੀਤਾ ਗਿਆ</string>
-    <string name="com_facebook_loginview_log_out_button">ਲੌਗ ਆਉਟ ਕਰੋ</string>
-    <string name="com_facebook_loginview_log_in_button">ਲੌਗ ਇਨ ਕਰੋ</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook ਦੇ ਨਾਲ ਲੌਗ ਇਨ ਕਰੋ</string>
-    <string name="com_facebook_loginview_logged_in_as">ਇਸ ਵੱਜੋਂ ਲੌਗ ਇਨ ਕੀਤਾ ਗਿਆ: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ਦਾ ਉਪਯੋਗ ਕਰਕੇ ਲੌਗ ਇਨ ਕੀਤਾ ਗਿਆ</string>
-    <string name="com_facebook_loginview_log_out_action">ਲੌਗ ਆਉਟ ਕਰੋ</string>
-    <string name="com_facebook_loginview_cancel_action">ਰੱਦ ਕਰੋ</string>
-    <string name="com_facebook_loading">ਲੋਡ ਕਰ ਰਿਹਾ ਹੈ...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest ਤਰੁੱਟੀ</string>
-    <string name="com_facebook_internet_permission_error_message">WebView ਲੌਗ ਨੂੰ ਇੰਟਰਨੈੱਟ ਅਨੁਮਤੀ ਦੀ ਲੋੜ ਹੁੰਦੀ ਹੈ</string>
-    <string name="com_facebook_tooltip_default">ਨਵਾਂ! ਤੁ\ਸੀਂ ਨਿਯੰਤਰਣ ਵਿੱਚ ਹੋ - ਉਹ ਜਾਣਕਾਰੀ ਚੁਣੋ ਜੋ ਤੁਸੀਂ ਐਪਸ ਦੇ ਨਾਲ ਸਾਂਝੀ ਕਰਨੀ ਚਾਹੁੰਦੇ ਹੋ।</string>
-    <string name="com_facebook_image_download_unknown_error">ਕਿਸੇ ਤਸਵੀਰ ਨੂੰ ਡਾਉਨਲੋਡ ਕਰਨ ਵੇਲੇ ਅਗਿਆਤ ਤਰੁੱਟੀ ਹੋ ਗਈ।</string>
-    <string name="com_facebook_share_button_text">ਸਾਂਝਾ ਕਰੋ</string>
-    <string name="com_facebook_send_button_text">ਭੇਜੋ</string>
-    <string name="com_facebook_device_auth_instructions">ਆਪਣੇ ਸਮਾਰਟਫ਼ੋਨ ਜਾਂ ਕੰਪਿਊਟਰ \'ਤੇ &lt;b&gt;facebook.com/device&lt;/b&gt; ਵਿੱਚ ਜਾਓ ਅਤੇ ਇਸ ਕੋਡ ਨੂੰ ਦਾਖ਼ਲ ਕਰੋ:</string>
-</resources>
diff --git a/facebook/src/main/res/values-pl/messenger_button_strings.xml b/facebook/src/main/res/values-pl/messenger_button_strings.xml
deleted file mode 100644
index 4e0d1732a..000000000
--- a/facebook/src/main/res/values-pl/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Wyślij</string>
-</resources>
diff --git a/facebook/src/main/res/values-pl/strings.xml b/facebook/src/main/res/values-pl/strings.xml
deleted file mode 100644
index e0a49498b..000000000
--- a/facebook/src/main/res/values-pl/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Lubię to!</string>
-    <string name="com_facebook_like_button_liked">Polubione</string>
-    <string name="com_facebook_loginview_log_out_button">Wyloguj się</string>
-    <string name="com_facebook_loginview_log_in_button">Zaloguj się</string>
-    <string name="com_facebook_loginview_log_in_button_long">Zaloguj się przez Facebooka</string>
-    <string name="com_facebook_loginview_logged_in_as">Zalogowano jako: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Zalogowano przez Facebooka</string>
-    <string name="com_facebook_loginview_log_out_action">Wyloguj się</string>
-    <string name="com_facebook_loginview_cancel_action">Anuluj</string>
-    <string name="com_facebook_loading">Ładowanie...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest Error</string>
-    <string name="com_facebook_internet_permission_error_message">Logowanie się do sieci wymaga zezwolenia na dostęp do INTERNETU</string>
-    <string name="com_facebook_tooltip_default">Nowość! Masz pełną kontrolę – określ, jakie informacje chcesz udostępniać aplikacjom.</string>
-    <string name="com_facebook_image_download_unknown_error">Nieoczekiwany błąd podczas pobierania obrazu.</string>
-    <string name="com_facebook_share_button_text">Udostępnij</string>
-    <string name="com_facebook_send_button_text">Wyślij</string>
-    <string name="com_facebook_device_auth_instructions">Przejdź do &lt;b&gt;facebook.com/device&lt;/b&gt; na smartfonie lub komputerze i wprowadź ten kod:</string>
-</resources>
diff --git a/facebook/src/main/res/values-pt-rPT/messenger_button_strings.xml b/facebook/src/main/res/values-pt-rPT/messenger_button_strings.xml
deleted file mode 100644
index c7b157fb2..000000000
--- a/facebook/src/main/res/values-pt-rPT/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Enviar</string>
-</resources>
diff --git a/facebook/src/main/res/values-pt-rPT/strings.xml b/facebook/src/main/res/values-pt-rPT/strings.xml
deleted file mode 100644
index 6df0f03e5..000000000
--- a/facebook/src/main/res/values-pt-rPT/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Gosto</string>
-    <string name="com_facebook_like_button_liked">Gostei</string>
-    <string name="com_facebook_loginview_log_out_button">Terminar sessão</string>
-    <string name="com_facebook_loginview_log_in_button">Iniciar sessão</string>
-    <string name="com_facebook_loginview_log_in_button_long">Iniciar sessão com o Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Com sessão iniciada como: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Com sessão iniciada através do Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Terminar sessão</string>
-    <string name="com_facebook_loginview_cancel_action">Cancelar</string>
-    <string name="com_facebook_loading">A carregar...</string>
-    <string name="com_facebook_internet_permission_error_title">Erro AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">O início de sessão WebView necessita de permissão para aceder à INTERNET</string>
-    <string name="com_facebook_tooltip_default">Novidade! Tens o controlo: escolhe a informação que pretendes partilhar com as aplicações.</string>
-    <string name="com_facebook_image_download_unknown_error">Ocorreu um erro inesperado ao descarregar uma imagem.</string>
-    <string name="com_facebook_share_button_text">Partilhar</string>
-    <string name="com_facebook_send_button_text">Enviar</string>
-    <string name="com_facebook_device_auth_instructions">Visita &lt;b&gt;facebook.com/device&lt;/b&gt; no teu smartphone ou computador e insere este código:</string>
-</resources>
diff --git a/facebook/src/main/res/values-pt/messenger_button_strings.xml b/facebook/src/main/res/values-pt/messenger_button_strings.xml
deleted file mode 100644
index c7b157fb2..000000000
--- a/facebook/src/main/res/values-pt/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Enviar</string>
-</resources>
diff --git a/facebook/src/main/res/values-pt/strings.xml b/facebook/src/main/res/values-pt/strings.xml
deleted file mode 100644
index 9f09bbd33..000000000
--- a/facebook/src/main/res/values-pt/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Curtir</string>
-    <string name="com_facebook_like_button_liked">Curtiu</string>
-    <string name="com_facebook_loginview_log_out_button">Sair</string>
-    <string name="com_facebook_loginview_log_in_button">Entrar</string>
-    <string name="com_facebook_loginview_log_in_button_long">Entrar com o Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Conectado como: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Você entrou usando o Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Sair</string>
-    <string name="com_facebook_loginview_cancel_action">Cancelar</string>
-    <string name="com_facebook_loading">Carregando...</string>
-    <string name="com_facebook_internet_permission_error_title">Erro no AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">A permissão de INTERNET é necessária para fazer o login WebView</string>
-    <string name="com_facebook_tooltip_default">Novidade! Você está no controle - escolha quais informações quer compartilhar com os aplicativos.</string>
-    <string name="com_facebook_image_download_unknown_error">Erro inesperado ao baixar uma imagem.</string>
-    <string name="com_facebook_share_button_text">Compartilhar</string>
-    <string name="com_facebook_send_button_text">Envio</string>
-    <string name="com_facebook_device_auth_instructions">Acesse &lt;b&gt;facebook.com/device&lt;/b&gt; no seu smartphone ou computador e insira este código:</string>
-</resources>
diff --git a/facebook/src/main/res/values-ru/messenger_button_strings.xml b/facebook/src/main/res/values-ru/messenger_button_strings.xml
deleted file mode 100644
index da0987b7e..000000000
--- a/facebook/src/main/res/values-ru/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Отпр</string>
-</resources>
diff --git a/facebook/src/main/res/values-ru/strings.xml b/facebook/src/main/res/values-ru/strings.xml
deleted file mode 100644
index 8f47ce62b..000000000
--- a/facebook/src/main/res/values-ru/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Нравится</string>
-    <string name="com_facebook_like_button_liked">Понравилось</string>
-    <string name="com_facebook_loginview_log_out_button">Выход</string>
-    <string name="com_facebook_loginview_log_in_button">Вход</string>
-    <string name="com_facebook_loginview_log_in_button_long">Вход через Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Вы вошли как: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Выполнен вход с помощью Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Выход</string>
-    <string name="com_facebook_loginview_cancel_action">Отменить</string>
-    <string name="com_facebook_loading">Загрузка...</string>
-    <string name="com_facebook_internet_permission_error_title">Ошибка AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Для входа в WebView необходимо разрешение INTERNET</string>
-    <string name="com_facebook_tooltip_default">Новинка! У вас все под контролем — выбирайте, какой информацией вы хотите поделиться с приложениями.</string>
-    <string name="com_facebook_image_download_unknown_error">При загрузке изображения возникла неожиданная ошибка.</string>
-    <string name="com_facebook_share_button_text">Поделиться</string>
-    <string name="com_facebook_send_button_text">Отправить</string>
-    <string name="com_facebook_device_auth_instructions">Откройте «&lt;b&gt;facebook.com/device&lt;/b&gt;» на своем смартфофне или компьютере и введите этот код:</string>
-</resources>
diff --git a/facebook/src/main/res/values-sk/strings.xml b/facebook/src/main/res/values-sk/strings.xml
deleted file mode 100644
index c67312513..000000000
--- a/facebook/src/main/res/values-sk/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Páči sa mi to</string>
-    <string name="com_facebook_like_button_liked">Páči sa mi to</string>
-    <string name="com_facebook_loginview_log_out_button">Odhlásiť sa</string>
-    <string name="com_facebook_loginview_log_in_button">Prihlásiť sa</string>
-    <string name="com_facebook_loginview_log_in_button_long">Prihlásiť sa cez Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Prihlásený ako: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Prihlásený cez Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Odhlásiť sa</string>
-    <string name="com_facebook_loginview_cancel_action">Zrušiť</string>
-    <string name="com_facebook_loading">Načítava sa...</string>
-    <string name="com_facebook_internet_permission_error_title">Chyba súboru AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Na prihlásenie sa v rozhraní WebView sa vyžaduje povolenie pre INTERNET</string>
-    <string name="com_facebook_tooltip_default">Novinka! Máte to pod kontrolou: vyberte, ktoré informácie chcete zdieľať s aplikáciami.</string>
-    <string name="com_facebook_image_download_unknown_error">Pri sťahovaní obrázka sa vyskytla neočakávaná chyba.</string>
-    <string name="com_facebook_share_button_text">Zdieľať</string>
-    <string name="com_facebook_send_button_text">Odoslať</string>
-    <string name="com_facebook_device_auth_instructions">Navštívte &lt;b&gt;facebook.com/device&lt;/b&gt; v smartfóne alebo počítači a zadajte tento kód:</string>
-</resources>
diff --git a/facebook/src/main/res/values-sv/messenger_button_strings.xml b/facebook/src/main/res/values-sv/messenger_button_strings.xml
deleted file mode 100644
index 0cff34af8..000000000
--- a/facebook/src/main/res/values-sv/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Skicka</string>
-</resources>
diff --git a/facebook/src/main/res/values-sv/strings.xml b/facebook/src/main/res/values-sv/strings.xml
deleted file mode 100644
index af2f460e6..000000000
--- a/facebook/src/main/res/values-sv/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Gilla</string>
-    <string name="com_facebook_like_button_liked">Gillade</string>
-    <string name="com_facebook_loginview_log_out_button">Logga ut</string>
-    <string name="com_facebook_loginview_log_in_button">Logga in</string>
-    <string name="com_facebook_loginview_log_in_button_long">Logga in med Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Inloggad som: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Inloggad med Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Logga ut</string>
-    <string name="com_facebook_loginview_cancel_action">Avbryt</string>
-    <string name="com_facebook_loading">Laddar ...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest-fel</string>
-    <string name="com_facebook_internet_permission_error_message">Webbinloggning kräver internetbehörighet</string>
-    <string name="com_facebook_tooltip_default">Nyhet! Du bestämmer – välj vilken info du vill dela med appar.</string>
-    <string name="com_facebook_image_download_unknown_error">Oväntat fel vid hämtning av en bild.</string>
-    <string name="com_facebook_share_button_text">Dela</string>
-    <string name="com_facebook_send_button_text">Skicka</string>
-    <string name="com_facebook_device_auth_instructions">Besök &lt;b&gt;facebook.com/device&lt;/b&gt; på din smartphone eller dator och ange den här koden:</string>
-</resources>
diff --git a/facebook/src/main/res/values-ta/messenger_button_strings.xml b/facebook/src/main/res/values-ta/messenger_button_strings.xml
deleted file mode 100644
index cae24ff92..000000000
--- a/facebook/src/main/res/values-ta/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">அனுப்பு</string>
-</resources>
diff --git a/facebook/src/main/res/values-ta/strings.xml b/facebook/src/main/res/values-ta/strings.xml
deleted file mode 100644
index 95d878bee..000000000
--- a/facebook/src/main/res/values-ta/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">விருப்பம்</string>
-    <string name="com_facebook_like_button_liked">விரும்பப்பட்டது</string>
-    <string name="com_facebook_loginview_log_out_button">வெளியேறு</string>
-    <string name="com_facebook_loginview_log_in_button">உள்நுழைவு</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook மூலம் உள்நுழையவும்</string>
-    <string name="com_facebook_loginview_logged_in_as">உள்நுழைந்துள்ள கணக்கு: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook மூலம் உள்நுழையப்பட்டுள்ளது</string>
-    <string name="com_facebook_loginview_log_out_action">வெளியேறு</string>
-    <string name="com_facebook_loginview_cancel_action">ரத்துசெய்</string>
-    <string name="com_facebook_loading">ஏற்றுகிறது...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest பிழை</string>
-    <string name="com_facebook_internet_permission_error_message">WebView இல் உள்நுழைய இணைய அனுமதி தேவை</string>
-    <string name="com_facebook_tooltip_default">புதிது! உங்கள் கட்டுப்பாட்டில் இருப்பதால், பயன்பாடுகளுடன் பகிர வேண்டிய தகவலைத் தேர்வுசெய்யவும்.</string>
-    <string name="com_facebook_image_download_unknown_error">படத்தைப் பதிவிறக்கும் போது பிழை ஏற்பட்டது.</string>
-    <string name="com_facebook_share_button_text">பகிர்</string>
-    <string name="com_facebook_send_button_text">அனுப்பு</string>
-    <string name="com_facebook_device_auth_instructions">உங்கள் ஸ்மார்ட்ஃபோன் அல்லது கணினியில் &lt;b&gt;facebook.com/device&lt;/b&gt; ஐப் பார்வையிட்டு, பின்வரும் குறியீட்டை உள்ளிடவும்:</string>
-</resources>
diff --git a/facebook/src/main/res/values-te/strings.xml b/facebook/src/main/res/values-te/strings.xml
deleted file mode 100644
index 3421df3eb..000000000
--- a/facebook/src/main/res/values-te/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">ఇష్టంగా గుర్తు పెట్టు</string>
-    <string name="com_facebook_like_button_liked">ఇష్టంగా గుర్తు పెట్టబడింది</string>
-    <string name="com_facebook_loginview_log_out_button">లాగ్ అవుట్ చేయి</string>
-    <string name="com_facebook_loginview_log_in_button">లాగిన్ చేయి</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebookతో లాగిన్ చేయి</string>
-    <string name="com_facebook_loginview_logged_in_as">ఇలా లాగిన్ చేసారు: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ఉపయోగించి లాగిన్ చేసారు</string>
-    <string name="com_facebook_loginview_log_out_action">లాగ్ అవుట్ చేయి</string>
-    <string name="com_facebook_loginview_cancel_action">రద్దు చేయి</string>
-    <string name="com_facebook_loading">లోడ్ చేస్తోంది...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest లోపం</string>
-    <string name="com_facebook_internet_permission_error_message">వెబ్ వీక్షణ లాగిన్‌కు ఇంటర్నెట్ అనుమతి అవసరం</string>
-    <string name="com_facebook_tooltip_default">సరికొత్తది! మీకు నియంత్రణ ఉంది - మీరు అప్లికేషన్‌లతో ఏ సమాచారాన్ని భాగస్వామ్యం చేయాలనుకుంటున్నారో ఎంచుకోండి.</string>
-    <string name="com_facebook_image_download_unknown_error">చిత్రాన్ని డౌన్‌లోడ్ చేస్తున్నప్పుడు ఊహించని లోపం ఏర్పడింది.</string>
-    <string name="com_facebook_share_button_text">భాగస్వామ్యం చేయండి</string>
-    <string name="com_facebook_send_button_text">పంపు</string>
-    <string name="com_facebook_device_auth_instructions">మీ స్మార్ట్‌ఫోన్ లేదా కంప్యూటర్‌లో &lt;b&gt;facebook.com/device&lt;/b&gt; సందర్శించి, ఈ కోడ్‌ను నమోదు చేయండి:</string>
-</resources>
diff --git a/facebook/src/main/res/values-th/messenger_button_strings.xml b/facebook/src/main/res/values-th/messenger_button_strings.xml
deleted file mode 100644
index 32f559c08..000000000
--- a/facebook/src/main/res/values-th/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">ส่ง</string>
-</resources>
diff --git a/facebook/src/main/res/values-th/strings.xml b/facebook/src/main/res/values-th/strings.xml
deleted file mode 100644
index f044656db..000000000
--- a/facebook/src/main/res/values-th/strings.xml
+++ /dev/null
@@ -1,41 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">ถูกใจ</string>
-    <string name="com_facebook_like_button_liked">ถูกใจแล้ว</string>
-    <string name="com_facebook_loginview_log_out_button">ออกจากระบบ</string>
-    <string name="com_facebook_loginview_log_in_button">เข้าสู่ระบบ</string>
-    <string name="com_facebook_loginview_log_in_button_long">เข้าสู่ระบบด้วย Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">เข้าสู่ระบบในชื่อ: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">เข้าสู่ระบบโดยใช้ Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">ออกจากระบบ</string>
-    <string name="com_facebook_loginview_cancel_action">ยกเลิก</string>
-    <string name="com_facebook_loading">กำลังโหลด...</string>
-    <string name="com_facebook_internet_permission_error_title">ข้อผิดพลาดของ AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">การเข้าสู่ระบบ WebView จำเป็นต้องได้รับอนุญาตจากอินเทอร์เน็ต</string>
-    <string name="com_facebook_tooltip_default">ใหม่! คุณเป็นฝ่ายควบคุม โปรดเลือกข้อมูลที่คุณต้องการแชร์ด้วยแอพ</string>
-    <string name="com_facebook_image_download_unknown_error">เกิดข้อผิดพลาดที่ไม่คาดคิดขณะดาวน์โหลดรูปภาพ</string>
-    <string name="com_facebook_share_button_text">แชร์</string>
-    <string name="com_facebook_send_button_text">ส่ง</string>
-    <string name="com_facebook_device_auth_instructions">ไปที่ &lt;b&gt;facebook.com/device&lt;/b&gt; ในสมาร์ทโฟนหรือคอมพิวเตอร์ของคุณ แล้วป้อนรหัสนี้:</string>
-
-</resources>
diff --git a/facebook/src/main/res/values-tl/messenger_button_strings.xml b/facebook/src/main/res/values-tl/messenger_button_strings.xml
deleted file mode 100644
index 38c161156..000000000
--- a/facebook/src/main/res/values-tl/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Ipadala</string>
-</resources>
diff --git a/facebook/src/main/res/values-tl/strings.xml b/facebook/src/main/res/values-tl/strings.xml
deleted file mode 100644
index 3d8fe9009..000000000
--- a/facebook/src/main/res/values-tl/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Gustuhin</string>
-    <string name="com_facebook_like_button_liked">Nagustuhan</string>
-    <string name="com_facebook_loginview_log_out_button">Mag-log out</string>
-    <string name="com_facebook_loginview_log_in_button">Mag-log in</string>
-    <string name="com_facebook_loginview_log_in_button_long">Mag-log in sa pamamagitan ng Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Naka-log in bilang si: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Naka-log in gamit ang Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Mag-log out</string>
-    <string name="com_facebook_loginview_cancel_action">Kanselahin</string>
-    <string name="com_facebook_loading">Naglo-load...</string>
-    <string name="com_facebook_internet_permission_error_title">Error na AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Ang pag-log in sa Web ay nangangailangan ng pahintulot sa INTERNET</string>
-    <string name="com_facebook_tooltip_default">Bago! Ikaw ang may kontrol - piliin kung anong impormasyon ang gusto mong ibahagi sa mga app.</string>
-    <string name="com_facebook_image_download_unknown_error">Hindi inaasahang error habang dina-download ang imahe.</string>
-    <string name="com_facebook_share_button_text">Ibahagi</string>
-    <string name="com_facebook_send_button_text">Ipadala</string>
-    <string name="com_facebook_device_auth_instructions">Puntahan ang &lt;b&gt;facebook.com/device&lt;/b&gt; sa iyong smartphone o computer at ilagay ang code na ito:</string>
-</resources>
diff --git a/facebook/src/main/res/values-tr/messenger_button_strings.xml b/facebook/src/main/res/values-tr/messenger_button_strings.xml
deleted file mode 100644
index e0f9539b2..000000000
--- a/facebook/src/main/res/values-tr/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Gönder</string>
-</resources>
diff --git a/facebook/src/main/res/values-tr/strings.xml b/facebook/src/main/res/values-tr/strings.xml
deleted file mode 100644
index 2e9595ffd..000000000
--- a/facebook/src/main/res/values-tr/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Beğen</string>
-    <string name="com_facebook_like_button_liked">Beğendin</string>
-    <string name="com_facebook_loginview_log_out_button">Çıkış yap</string>
-    <string name="com_facebook_loginview_log_in_button">Giriş yap</string>
-    <string name="com_facebook_loginview_log_in_button_long">Facebook ile giriş yap</string>
-    <string name="com_facebook_loginview_logged_in_as">Giriş yapan: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Facebook ile giriş yapıldı</string>
-    <string name="com_facebook_loginview_log_out_action">Çıkış yap</string>
-    <string name="com_facebook_loginview_cancel_action">İptal</string>
-    <string name="com_facebook_loading">Yükleniyor...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest Hatası</string>
-    <string name="com_facebook_internet_permission_error_message">WebView girişi için İNTERNET izni gerekir</string>
-    <string name="com_facebook_tooltip_default">Yeni! Kontrol sende. Uygulamalarla paylaşmak istediğin bilgileri seç.</string>
-    <string name="com_facebook_image_download_unknown_error">Görsel indirilirken beklenmeyen hata.</string>
-    <string name="com_facebook_share_button_text">Paylaş</string>
-    <string name="com_facebook_send_button_text">Gönder</string>
-    <string name="com_facebook_device_auth_instructions">Akıllı telefonunda veya bilgisayarında &lt;b&gt;facebook.com/device&lt;/b&gt; adresine git ve bu kodu gir:</string>
-</resources>
diff --git a/facebook/src/main/res/values-vi/messenger_button_strings.xml b/facebook/src/main/res/values-vi/messenger_button_strings.xml
deleted file mode 100644
index 54840acde..000000000
--- a/facebook/src/main/res/values-vi/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Gửi</string>
-</resources>
diff --git a/facebook/src/main/res/values-vi/strings.xml b/facebook/src/main/res/values-vi/strings.xml
deleted file mode 100644
index 480478e3e..000000000
--- a/facebook/src/main/res/values-vi/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">Thích</string>
-    <string name="com_facebook_like_button_liked">Đã thích</string>
-    <string name="com_facebook_loginview_log_out_button">Đăng xuất</string>
-    <string name="com_facebook_loginview_log_in_button">Đăng nhập</string>
-    <string name="com_facebook_loginview_log_in_button_long">Đăng nhập bằng Facebook</string>
-    <string name="com_facebook_loginview_logged_in_as">Đã đăng nhập với tư cách là: %1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">Đã đăng nhập bằng Facebook</string>
-    <string name="com_facebook_loginview_log_out_action">Đăng xuất</string>
-    <string name="com_facebook_loginview_cancel_action">Hủy</string>
-    <string name="com_facebook_loading">Đang tải...</string>
-    <string name="com_facebook_internet_permission_error_title">Lỗi AndroidManifest</string>
-    <string name="com_facebook_internet_permission_error_message">Đăng nhập WebView yêu cầu INTERNET cho phép</string>
-    <string name="com_facebook_tooltip_default">Mới! Bạn đang có quyền kiểm soát - hãy chọn thông tin bạn muốn chia sẻ với các ứng dụng.</string>
-    <string name="com_facebook_image_download_unknown_error">Lỗi bất ngờ khi tải ảnh xuống.</string>
-    <string name="com_facebook_share_button_text">Chia sẻ</string>
-    <string name="com_facebook_send_button_text">Gửi</string>
-    <string name="com_facebook_device_auth_instructions">Truy cập &lt;b&gt;facebook.com/device&lt;/b&gt; trên điện thoại thông minh hoặc máy tính và nhập mã sau:</string>
-</resources>
diff --git a/facebook/src/main/res/values-zh-rCN/messenger_button_strings.xml b/facebook/src/main/res/values-zh-rCN/messenger_button_strings.xml
deleted file mode 100644
index 3bc0640da..000000000
--- a/facebook/src/main/res/values-zh-rCN/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">发送</string>
-</resources>
diff --git a/facebook/src/main/res/values-zh-rCN/strings.xml b/facebook/src/main/res/values-zh-rCN/strings.xml
deleted file mode 100644
index 868a0fa2d..000000000
--- a/facebook/src/main/res/values-zh-rCN/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">赞</string>
-    <string name="com_facebook_like_button_liked">赞了</string>
-    <string name="com_facebook_loginview_log_out_button">退出</string>
-    <string name="com_facebook_loginview_log_in_button">登录</string>
-    <string name="com_facebook_loginview_log_in_button_long">使用 Facebook 登录</string>
-    <string name="com_facebook_loginview_logged_in_as">已以%1$s 身份登录</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">已使用 Facebook 登录</string>
-    <string name="com_facebook_loginview_log_out_action">退出</string>
-    <string name="com_facebook_loginview_cancel_action">取消</string>
-    <string name="com_facebook_loading">正在加载...</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest 错误</string>
-    <string name="com_facebook_internet_permission_error_message">Web 登录需要互联网许可</string>
-    <string name="com_facebook_tooltip_default">新增功能！一切任您掌控 — 选择您想通过应用分享的信息。</string>
-    <string name="com_facebook_image_download_unknown_error">下载图片时出现意外错误。</string>
-    <string name="com_facebook_share_button_text">分享</string>
-    <string name="com_facebook_send_button_text">发送</string>
-    <string name="com_facebook_device_auth_instructions">请用智能手机或电脑访问 &lt;b&gt;facebook.com/device&lt;/b&gt;，然后输入验证码：</string>
-</resources>
diff --git a/facebook/src/main/res/values-zh-rHK/messenger_button_strings.xml b/facebook/src/main/res/values-zh-rHK/messenger_button_strings.xml
deleted file mode 100644
index 457aeeb9f..000000000
--- a/facebook/src/main/res/values-zh-rHK/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">傳送</string>
-</resources>
diff --git a/facebook/src/main/res/values-zh-rHK/strings.xml b/facebook/src/main/res/values-zh-rHK/strings.xml
deleted file mode 100644
index 3bb5b4a1d..000000000
--- a/facebook/src/main/res/values-zh-rHK/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">讚好</string>
-    <string name="com_facebook_like_button_liked">已讚好</string>
-    <string name="com_facebook_loginview_log_out_button">登出</string>
-    <string name="com_facebook_loginview_log_in_button">登入</string>
-    <string name="com_facebook_loginview_log_in_button_long">使用 Facebook 登入</string>
-    <string name="com_facebook_loginview_logged_in_as">以以下身分登入：%1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">使用 Facebook 登入</string>
-    <string name="com_facebook_loginview_log_out_action">登出</string>
-    <string name="com_facebook_loginview_cancel_action">取消</string>
-    <string name="com_facebook_loading">載入中⋯</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest 錯誤</string>
-    <string name="com_facebook_internet_permission_error_message">WebView 登入需有 INTERNET 權限</string>
-    <string name="com_facebook_tooltip_default">最新消息！控制權在您 - 選擇您要與應用程式分享的資訊。</string>
-    <string name="com_facebook_image_download_unknown_error">下載圖像時發生預期外的錯誤。</string>
-    <string name="com_facebook_share_button_text">分享</string>
-    <string name="com_facebook_send_button_text">傳送</string>
-    <string name="com_facebook_device_auth_instructions">在智能手機或電腦前往 &lt;b&gt;facebook.com/device&lt;/b&gt; 並輸入此代碼：</string>
-</resources>
diff --git a/facebook/src/main/res/values-zh-rTW/messenger_button_strings.xml b/facebook/src/main/res/values-zh-rTW/messenger_button_strings.xml
deleted file mode 100644
index 457aeeb9f..000000000
--- a/facebook/src/main/res/values-zh-rTW/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">傳送</string>
-</resources>
diff --git a/facebook/src/main/res/values-zh-rTW/strings.xml b/facebook/src/main/res/values-zh-rTW/strings.xml
deleted file mode 100644
index 914ca3023..000000000
--- a/facebook/src/main/res/values-zh-rTW/strings.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-    <string name="com_facebook_like_button_not_liked">讚</string>
-    <string name="com_facebook_like_button_liked">說讚</string>
-    <string name="com_facebook_loginview_log_out_button">登出</string>
-    <string name="com_facebook_loginview_log_in_button">登入</string>
-    <string name="com_facebook_loginview_log_in_button_long">使用 Facebook 登入</string>
-    <string name="com_facebook_loginview_logged_in_as">使用下列身分登入：%1$s</string>
-    <string name="com_facebook_loginview_logged_in_using_facebook">已使用 Facebook 登入</string>
-    <string name="com_facebook_loginview_log_out_action">登出</string>
-    <string name="com_facebook_loginview_cancel_action">取消</string>
-    <string name="com_facebook_loading">正在載入…</string>
-    <string name="com_facebook_internet_permission_error_title">AndroidManifest 錯誤</string>
-    <string name="com_facebook_internet_permission_error_message">WebView 登入需要「網際網路」授權</string>
-    <string name="com_facebook_tooltip_default">新消息！您已成功登入，請選擇要與應用程式分享的資訊。</string>
-    <string name="com_facebook_image_download_unknown_error">下載圖像時發生非預期的錯誤。</string>
-    <string name="com_facebook_share_button_text">分享</string>
-    <string name="com_facebook_send_button_text">傳送</string>
-    <string name="com_facebook_device_auth_instructions">使用您的智慧型手機或電腦前往 &lt;b&gt;facebook.com/device&lt;/b&gt;，然後輸入此代碼：</string>
-</resources>
diff --git a/facebook/src/main/res/values/messenger_button_strings.xml b/facebook/src/main/res/values/messenger_button_strings.xml
deleted file mode 100644
index d4d20fbd9..000000000
--- a/facebook/src/main/res/values/messenger_button_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources>
-  <string name="messenger_send_button_text">Send</string>
-</resources>
diff --git a/facebook/src/main/res/values/styles.xml b/facebook/src/main/res/values/styles.xml
deleted file mode 100644
index 01a9e708c..000000000
--- a/facebook/src/main/res/values/styles.xml
+++ /dev/null
@@ -1,129 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
-
-    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
-    copy, modify, and distribute this software in source code or binary form for use
-    in connection with the web services and APIs provided by Facebook.
-
-    As with any software that integrates with the Facebook platform, your use of
-    this software is subject to the Facebook Developer Principles and Policies
-    [http://developers.facebook.com/policy/]. This copyright notice shall be
-    included in all copies or substantial portions of the software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
--->
-
-<resources xmlns:android="http://schemas.android.com/apk/res/android">
-    <color name="com_facebook_blue">#3B5998</color>
-    <color name="com_facebook_messenger_blue">#0084ff</color>
-
-    <dimen name="com_facebook_likeview_text_size">11.0sp</dimen>
-    <color name="com_facebook_likeview_text_color">#6a7180</color>
-    <dimen name="com_facebook_likeview_edge_padding">2dp</dimen>
-    <dimen name="com_facebook_likeview_internal_padding">6dp</dimen>
-
-    <dimen name="com_facebook_likeboxcountview_caret_width">6dp</dimen>
-    <dimen name="com_facebook_likeboxcountview_caret_height">3dp</dimen>
-    <dimen name="com_facebook_likeboxcountview_border_radius">3dp</dimen>
-    <dimen name="com_facebook_likeboxcountview_border_width">1dp</dimen>
-    <color name="com_facebook_likeboxcountview_border_color">#6a7180</color>
-    <color name="com_facebook_likeboxcountview_text_color">#6a7180</color>
-    <dimen name="com_facebook_likeboxcountview_text_size">11.0sp</dimen>
-    <dimen name="com_facebook_likeboxcountview_text_padding">6dp</dimen>
-
-    <dimen name="com_facebook_profilepictureview_preset_size_small">50dp</dimen>
-    <dimen name="com_facebook_profilepictureview_preset_size_normal">100dp</dimen>
-    <dimen name="com_facebook_profilepictureview_preset_size_large">180dp</dimen>
-
-    <dimen name="com_facebook_share_button_compound_drawable_padding">12dp</dimen>
-    <dimen name="com_facebook_share_button_padding_bottom">12dp</dimen>
-    <dimen name="com_facebook_share_button_padding_left">12dp</dimen>
-    <dimen name="com_facebook_share_button_padding_right">16dp</dimen>
-    <dimen name="com_facebook_share_button_padding_top">12dp</dimen>
-    <color name="com_facebook_share_button_text_color">#FFFFFF</color>
-    <dimen name="com_facebook_share_button_text_size">16.0sp</dimen>
-
-    <dimen name="com_facebook_tooltip_horizontal_padding">10dp</dimen>
-
-    <color name="com_facebook_device_auth_text">#797E87</color>
-
-    <style name="tooltip_bubble_text">
-        <item name="android:textColor">@android:color/white</item>
-        <item name="android:gravity">left</item>
-        <item name="android:textSize">12sp</item>
-        <item name="android:shadowDy">-1</item>
-        <item name="android:shadowRadius">0.25</item>
-        <item name="android:shadowColor">#40000000</item>
-    </style>
-
-    <color name="com_facebook_button_background_color">#415dae</color>
-    <color name="com_facebook_button_background_color_focused">#FFFFFe</color>
-    <color name="com_facebook_button_background_color_focused_disabled">#84878c</color>
-    <color name="com_facebook_button_background_color_selected">#7c8fc8</color>
-    <color name="com_facebook_button_background_color_disabled">#bdc1c9</color>
-    <color name="com_facebook_button_background_color_pressed">#2f477a</color>
-    <color name="com_facebook_button_login_silver_background_color">#f4f6f8</color>
-    <color name="com_facebook_button_login_silver_background_color_pressed">#e9eaf0</color>
-    <color name="com_facebook_button_send_background_color">@color/com_facebook_messenger_blue</color>
-    <color name="com_facebook_button_send_background_color_pressed">#006fff</color>
-
-    <color name="com_facebook_button_border_color_focused">#dedee6</color>
-
-    <style name="com_facebook_button" parent="@android:style/Widget.Button">
-        <item name="android:background">@drawable/com_facebook_button_background</item>
-        <item name="android:drawablePadding">6dp</item>
-        <item name="android:gravity">center</item>
-        <item name="android:paddingBottom">5dp</item>
-        <item name="android:paddingLeft">8dp</item>
-        <item name="android:paddingRight">8dp</item>
-        <item name="android:paddingTop">5dp</item>
-        <item name="android:textColor">@color/com_facebook_button_text_color</item>
-        <item name="android:textSize">14.0dp</item>
-    </style>
-
-    <style name="com_facebook_button_like" parent="com_facebook_button">
-        <item name="android:background">@drawable/com_facebook_button_like_background</item>
-    </style>
-
-    <style name="com_facebook_loginview_default_style" parent="com_facebook_button">
-        <item name="android:drawableLeft">@drawable/com_facebook_button_icon</item>
-    </style>
-
-    <style name="com_facebook_loginview_silver_style" parent="com_facebook_loginview_default_style">
-        <item name="android:background">@drawable/com_facebook_button_login_silver_background</item>
-        <item name="android:drawableLeft">@null</item>
-        <item name="android:textColor">#4b5164</item>
-    </style>
-
-    <style name="com_facebook_button_send" parent="com_facebook_button">
-        <item name="android:background">@drawable/com_facebook_button_send_background</item>
-        <item name="android:drawableLeft">@drawable/com_facebook_send_button_icon</item>
-        <item name="android:text">@string/com_facebook_send_button_text</item>
-        <item name="android:textColor">@color/com_facebook_send_button_text_color</item>
-    </style>
-
-    <style name="com_facebook_button_share" parent="com_facebook_button">
-        <item name="android:drawableLeft">@drawable/com_facebook_button_icon</item>
-        <item name="android:text">@string/com_facebook_share_button_text</item>
-    </style>
-
-    <style name="com_facebook_auth_dialog" parent="@style/Theme.AppCompat.Dialog">
-        <item name="android:windowIsTranslucent">true</item>
-        <item name="android:windowBackground">@android:color/transparent</item>
-        <item name="android:windowNoTitle">true</item>
-        <item name="android:windowIsFloating">true</item>
-    </style>
-
-    <style name="com_facebook_activity_theme" parent="@style/Theme.AppCompat.NoActionBar">
-        <item name="android:windowIsTranslucent">true</item>
-        <item name="android:windowBackground">@android:color/transparent</item>
-        <item name="android:windowNoTitle">true</item>
-    </style>
-
-</resources>
diff --git a/facebook/src/test/java/com/facebook/AccessTokenCacheTest.java b/facebook/src/test/java/com/facebook/AccessTokenCacheTest.java
index caf1f87c0..16f2b8200 100644
--- a/facebook/src/test/java/com/facebook/AccessTokenCacheTest.java
+++ b/facebook/src/test/java/com/facebook/AccessTokenCacheTest.java
@@ -33,7 +33,6 @@
 import org.mockito.Mock;
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
-import org.robolectric.Robolectric;
 import org.robolectric.RuntimeEnvironment;
 
 import java.util.Arrays;
diff --git a/facebook/src/test/java/com/facebook/AccessTokenManagerTest.java b/facebook/src/test/java/com/facebook/AccessTokenManagerTest.java
index 3ae3d47a6..af1debf1e 100644
--- a/facebook/src/test/java/com/facebook/AccessTokenManagerTest.java
+++ b/facebook/src/test/java/com/facebook/AccessTokenManagerTest.java
@@ -31,18 +31,24 @@
 import org.json.JSONException;
 import org.junit.Before;
 import org.junit.Test;
-import org.mockito.Mock;
-import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
-import org.robolectric.Robolectric;
 import org.robolectric.RuntimeEnvironment;
 
 import java.util.Arrays;
 import java.util.Date;
 import java.util.List;
 
-import static org.mockito.Mockito.*;
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertNull;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
+import static org.mockito.Mockito.any;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.never;
+import static org.mockito.Mockito.times;
+import static org.mockito.Mockito.verify;
 import static org.powermock.api.mockito.PowerMockito.mockStatic;
 import static org.powermock.api.mockito.PowerMockito.when;
 import static org.powermock.api.support.membermodification.MemberMatcher.method;
@@ -139,9 +145,9 @@ public void onReceive(Context context, Intent intent) {
         assertNotNull(intent);
 
         AccessToken oldAccessToken =
-                (AccessToken) intent.getParcelableExtra(AccessTokenManager.EXTRA_OLD_ACCESS_TOKEN);
+                intent.getParcelableExtra(AccessTokenManager.EXTRA_OLD_ACCESS_TOKEN);
         AccessToken newAccessToken =
-                (AccessToken) intent.getParcelableExtra(AccessTokenManager.EXTRA_NEW_ACCESS_TOKEN);
+                intent.getParcelableExtra(AccessTokenManager.EXTRA_NEW_ACCESS_TOKEN);
 
         assertEquals(accessToken.getToken(), oldAccessToken.getToken());
         assertEquals(anotherAccessToken.getToken(), newAccessToken.getToken());
diff --git a/facebook/src/test/java/com/facebook/AccessTokenTest.java b/facebook/src/test/java/com/facebook/AccessTokenTest.java
index 8ec902bbe..48e700916 100644
--- a/facebook/src/test/java/com/facebook/AccessTokenTest.java
+++ b/facebook/src/test/java/com/facebook/AccessTokenTest.java
@@ -30,18 +30,20 @@
 import org.junit.Test;
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
-import org.robolectric.Robolectric;
 import org.robolectric.RuntimeEnvironment;
 
 import java.io.IOException;
 import java.util.Arrays;
 import java.util.Collection;
+import java.util.Collections;
 import java.util.Date;
 import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
 
-import static org.junit.Assert.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
 import static org.powermock.api.support.membermodification.MemberModifier.stub;
 
 @PrepareForTest( {Utility.class})
@@ -186,8 +188,8 @@ public void testFromCacheWithMissingApplicationId() {
         LegacyTokenHelper.putToken(bundle, token);
         // no app id
 
-        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         FacebookSdk.setApplicationId(applicationId);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
 
         AccessToken accessToken = AccessToken.createFromLegacyCache(bundle);
 
@@ -231,7 +233,7 @@ public void testCachePutGet() {
         String userId = "1000";
 
         List<String> normalList = Arrays.asList("", "Another completely random token value");
-        List<String> emptyList = Arrays.asList();
+        List<String> emptyList = Collections.emptyList();
         HashSet<String> normalArrayList = new HashSet<String>(normalList);
         HashSet<String> emptyArrayList = new HashSet<String>();
         @SuppressWarnings("unchecked")
@@ -273,7 +275,7 @@ public void testParceling() throws IOException {
         Set<String> permissions = new HashSet<String>(
                 Arrays.asList("permission_1", "permission_2"));
         Set<String> declinedPermissions = new HashSet<String>(
-                Arrays.asList("permission_3"));
+                Collections.singletonList("permission_3"));
         AccessTokenSource source = AccessTokenSource.WEB_VIEW;
         AccessToken accessToken1 = new AccessToken(
                 token,
diff --git a/facebook/src/test/java/com/facebook/ErrorClassificationTest.java b/facebook/src/test/java/com/facebook/ErrorClassificationTest.java
index 960ec3658..bc4f18a7a 100644
--- a/facebook/src/test/java/com/facebook/ErrorClassificationTest.java
+++ b/facebook/src/test/java/com/facebook/ErrorClassificationTest.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -24,7 +24,7 @@
 
 import org.junit.Test;
 
-import static org.junit.Assert.*;
+import static junit.framework.Assert.assertEquals;
 
 public class ErrorClassificationTest extends FacebookTestCase {
 
diff --git a/facebook/src/test/java/com/facebook/FacebookContentProviderTest.java b/facebook/src/test/java/com/facebook/FacebookContentProviderTest.java
index 24f1c28be..038fa4266 100644
--- a/facebook/src/test/java/com/facebook/FacebookContentProviderTest.java
+++ b/facebook/src/test/java/com/facebook/FacebookContentProviderTest.java
@@ -29,7 +29,6 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.powermock.core.classloader.annotations.PrepareForTest;
-import org.robolectric.Robolectric;
 import org.robolectric.RuntimeEnvironment;
 
 import java.io.File;
diff --git a/facebook/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java b/facebook/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java
index 7877efacd..69cdc47bc 100644
--- a/facebook/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java
+++ b/facebook/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java
@@ -171,6 +171,7 @@
 
     @Before
     public void before() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
diff --git a/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java b/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
index 3893e5c16..295d6e33d 100644
--- a/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
+++ b/facebook/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
@@ -26,7 +26,7 @@
 import android.os.Bundle;
 import android.os.ConditionVariable;
 
-import com.facebook.internal.CallbackManagerImpl;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.ServerProtocol;
 import com.facebook.internal.Utility;
 
@@ -34,7 +34,6 @@
 import org.junit.Test;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.powermock.reflect.Whitebox;
-import org.robolectric.Robolectric;
 import org.robolectric.RuntimeEnvironment;
 
 import java.util.concurrent.Executor;
@@ -48,14 +47,14 @@
 import static org.powermock.api.support.membermodification.MemberMatcher.method;
 import static org.powermock.api.support.membermodification.MemberModifier.stub;
 
-@PrepareForTest({ FacebookSdk.class, Utility.class })
+@PrepareForTest({ FacebookSdk.class, Utility.class, FetchedAppSettingsManager.class})
 public final class FacebookSdkPowerMockTest extends FacebookPowerMockTestCase {
 
     @Before
     public void before() {
         Whitebox.setInternalState(FacebookSdk.class, "callbackRequestCodeOffset", 0xface);
         Whitebox.setInternalState(FacebookSdk.class, "sdkInitialized", false);
-        stub(method(Utility.class, "loadAppSettingsAsync")).toReturn(null);
+        stub(method(FetchedAppSettingsManager.class, "loadAppSettingsAsync")).toReturn(null);
 
     }
 
@@ -117,6 +116,8 @@ public void testFacebookDomain() {
 
     @Test
     public void testLoadDefaults() throws Exception {
+        // Set to null since the value might have been set by another test
+        FacebookSdk.setApplicationId(null);
         stub(method(FacebookSdk.class, "isInitialized")).toReturn(true);
         FacebookSdk.loadDefaultsFromMetadata(mockContextWithAppIdAndClientToken());
 
@@ -148,15 +149,18 @@ public void testLoadDefaultsDoesNotOverwrite() throws Exception {
         stub(method(FacebookSdk.class, "isInitialized")).toReturn(true);
         FacebookSdk.setApplicationId("hello");
         FacebookSdk.setClientToken("world");
+        FacebookSdk.setAutoLogAppEventsEnabled(false);
 
         FacebookSdk.loadDefaultsFromMetadata(mockContextWithAppIdAndClientToken());
 
         assertEquals("hello", FacebookSdk.getApplicationId());
         assertEquals("world", FacebookSdk.getClientToken());
+        assertEquals(false, FacebookSdk.getAutoLogAppEventsEnabled());
     }
 
     @Test
     public void testRequestCodeOffsetAfterInit() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
 
         try {
@@ -169,6 +173,7 @@ public void testRequestCodeOffsetAfterInit() throws Exception {
 
     @Test
     public void testRequestCodeOffsetNegative() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         try {
             // last bit set, so negative
             FacebookSdk.sdkInitialize(RuntimeEnvironment.application, 0xFACEB00C);
@@ -180,12 +185,14 @@ public void testRequestCodeOffsetNegative() throws Exception {
 
     @Test
     public void testRequestCodeOffset() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application, 1000);
         assertEquals(1000, FacebookSdk.getCallbackRequestCodeOffset());
     }
 
     @Test
     public void testRequestCodeRange() {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application, 1000);
         assertTrue(FacebookSdk.isFacebookRequestCode(1000));
         assertTrue(FacebookSdk.isFacebookRequestCode(1099));
diff --git a/facebook/src/test/java/com/facebook/GraphErrorTest.java b/facebook/src/test/java/com/facebook/GraphErrorTest.java
index 23fcc6000..96d68b4d8 100644
--- a/facebook/src/test/java/com/facebook/GraphErrorTest.java
+++ b/facebook/src/test/java/com/facebook/GraphErrorTest.java
@@ -27,16 +27,13 @@
 import org.json.JSONObject;
 import org.junit.Before;
 import org.junit.Test;
-import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
-import org.robolectric.Robolectric;
 import org.robolectric.RuntimeEnvironment;
 
 import java.io.IOException;
 import java.net.HttpURLConnection;
 
 import static org.junit.Assert.*;
-import static org.powermock.api.mockito.PowerMockito.doNothing;
 import static org.powermock.api.mockito.PowerMockito.mock;
 import static org.powermock.api.mockito.PowerMockito.mockStatic;
 import static org.powermock.api.mockito.PowerMockito.when;
diff --git a/facebook/src/test/java/com/facebook/LegacyTokenCacheTest.java b/facebook/src/test/java/com/facebook/LegacyTokenCacheTest.java
index c7a80713b..fe4185775 100644
--- a/facebook/src/test/java/com/facebook/LegacyTokenCacheTest.java
+++ b/facebook/src/test/java/com/facebook/LegacyTokenCacheTest.java
@@ -29,7 +29,6 @@
 import org.junit.Test;
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
-import org.robolectric.Robolectric;
 import org.robolectric.RuntimeEnvironment;
 
 import java.lang.reflect.Array;
@@ -71,7 +70,7 @@
     @Override
     public void setUp() {
         super.setUp();
-
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
diff --git a/facebook/src/test/java/com/facebook/ProfileCacheTest.java b/facebook/src/test/java/com/facebook/ProfileCacheTest.java
index e77179d7e..6743c1436 100644
--- a/facebook/src/test/java/com/facebook/ProfileCacheTest.java
+++ b/facebook/src/test/java/com/facebook/ProfileCacheTest.java
@@ -32,6 +32,7 @@
 public final class ProfileCacheTest extends FacebookTestCase {
     @Before
     public void before() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         RuntimeEnvironment.application.getSharedPreferences(
                 ProfileCache.SHARED_PREFERENCES_NAME,
diff --git a/facebook/src/test/java/com/facebook/ProfileManagerTest.java b/facebook/src/test/java/com/facebook/ProfileManagerTest.java
index 1747f5af4..6fad03570 100644
--- a/facebook/src/test/java/com/facebook/ProfileManagerTest.java
+++ b/facebook/src/test/java/com/facebook/ProfileManagerTest.java
@@ -45,6 +45,7 @@
 
     @Before
     public void before() {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
diff --git a/facebook/src/test/java/com/facebook/ProfileTest.java b/facebook/src/test/java/com/facebook/ProfileTest.java
index 980986d80..3b1eed2a1 100644
--- a/facebook/src/test/java/com/facebook/ProfileTest.java
+++ b/facebook/src/test/java/com/facebook/ProfileTest.java
@@ -135,6 +135,7 @@ public void testParcelSerialization() {
 
     @Test
     public void testGetSetCurrentProfile() {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         Profile profile1 = createDefaultProfile();
         Profile.setCurrentProfile(profile1);
diff --git a/facebook/src/test/java/com/facebook/ProfileTrackerTest.java b/facebook/src/test/java/com/facebook/ProfileTrackerTest.java
index 0c8a60890..2d36d2fa0 100644
--- a/facebook/src/test/java/com/facebook/ProfileTrackerTest.java
+++ b/facebook/src/test/java/com/facebook/ProfileTrackerTest.java
@@ -32,6 +32,7 @@
 public class ProfileTrackerTest extends FacebookPowerMockTestCase {
     @Test
     public void testStartStopTrackingAndBroadcast() {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         LocalBroadcastManager localBroadcastManager =
                 LocalBroadcastManager.getInstance(RuntimeEnvironment.application);
diff --git a/facebook/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java b/facebook/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java
index 7296683fe..103e7f87b 100644
--- a/facebook/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java
+++ b/facebook/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java
@@ -34,6 +34,7 @@
 
     @Before
     public void before() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         stream = new ProgressNoopOutputStream(null);
     }
diff --git a/facebook/src/test/java/com/facebook/ProgressOutputStreamTest.java b/facebook/src/test/java/com/facebook/ProgressOutputStreamTest.java
index dfc408638..e4011b3ef 100644
--- a/facebook/src/test/java/com/facebook/ProgressOutputStreamTest.java
+++ b/facebook/src/test/java/com/facebook/ProgressOutputStreamTest.java
@@ -42,6 +42,7 @@
 
     @Before
     public void before() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         r1 = new GraphRequest(null, "4");
         r2 = new GraphRequest(null, "4");
diff --git a/facebook/src/test/java/com/facebook/appevents/AnalyticsUserIDTest.java b/facebook/src/test/java/com/facebook/appevents/AnalyticsUserIDTest.java
new file mode 100644
index 000000000..f56aad65c
--- /dev/null
+++ b/facebook/src/test/java/com/facebook/appevents/AnalyticsUserIDTest.java
@@ -0,0 +1,62 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.appevents;
+
+import com.facebook.FacebookPowerMockTestCase;
+import com.facebook.FacebookSdk;
+
+import org.json.JSONObject;
+import org.junit.Assert;
+import org.junit.Before;
+import org.junit.Test;
+import org.robolectric.RuntimeEnvironment;
+
+public class AnalyticsUserIDTest extends FacebookPowerMockTestCase {
+    @Before
+    public void init() {
+        FacebookSdk.setApplicationId("123456789");
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
+        AnalyticsUserIDStore.initStore();
+    }
+
+    @Test
+    public void testUserIDPersistence() throws Exception {
+        String userID = "123456789";
+
+        AppEventsLogger.setUserID(userID);
+        // The userID is saved async so we must wait before checking for the value
+        Thread.sleep(10);
+        Assert.assertEquals(userID, AppEventsLogger.getUserID());
+        AppEventsLogger.clearUserID();
+        Thread.sleep(10);
+        Assert.assertNull(AppEventsLogger.getUserID());
+    }
+
+    @Test
+    public void testUserIDAddedToAppEvent() throws Exception {
+        String userID = "123456789";
+        AppEventsLogger.setUserID(userID);
+        AppEvent appEvent = AppEventTestUtilities.getTestAppEvent();
+        JSONObject jsonObject = appEvent.getJSONObject();
+        Assert.assertEquals(jsonObject.getString("_app_user_id"), userID);
+    }
+
+}
diff --git a/facebook/src/test/java/com/facebook/appevents/AppEventTest.java b/facebook/src/test/java/com/facebook/appevents/AppEventTest.java
index a1ee11601..8f8352f7c 100644
--- a/facebook/src/test/java/com/facebook/appevents/AppEventTest.java
+++ b/facebook/src/test/java/com/facebook/appevents/AppEventTest.java
@@ -23,6 +23,8 @@
 import com.facebook.FacebookSdk;
 import com.facebook.FacebookTestCase;
 
+import com.facebook.appevents.internal.Constants;
+
 import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
@@ -36,9 +38,17 @@
 public class AppEventTest extends FacebookTestCase {
     @Before
     public void init() {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
+    @Test
+    public void testChecksumOfAppEventName() throws Exception {
+        AppEvent appEvent = AppEventTestUtilities.getTestAppEvent();
+        String eventNameMd5 = appEvent.getJSONObject().getString(Constants.EVENT_NAME_MD5_EVENT_KEY);
+        Assert.assertEquals("e0cf6877da9df873a85a2137fb5d2e26", eventNameMd5);
+    }
+
     @Test
     public void testChecksumOfAppEvent() throws Exception {
         AppEvent appEvent = AppEventTestUtilities.getTestAppEvent();
diff --git a/facebook/src/test/java/com/facebook/appevents/AutomaticAnalyticsTest.java b/facebook/src/test/java/com/facebook/appevents/AutomaticAnalyticsTest.java
index 8613d120a..addc86951 100644
--- a/facebook/src/test/java/com/facebook/appevents/AutomaticAnalyticsTest.java
+++ b/facebook/src/test/java/com/facebook/appevents/AutomaticAnalyticsTest.java
@@ -20,8 +20,8 @@
 
 package com.facebook.appevents;
 
-import com.facebook.internal.Utility;
-import com.facebook.internal.Utility.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
+import com.facebook.internal.FetchedAppSettings;
 import com.facebook.FacebookTestCase;
 
 import org.json.JSONObject;
@@ -36,27 +36,32 @@ public void testAutomaticLoggingEnabledServerConfiguration() throws Exception {
         JSONObject settingsJSON = new JSONObject();
         settingsJSON.put("app_events_feature_bitmask", "0");
         FetchedAppSettings settings = Whitebox.invokeMethod(
-                Utility.class, "parseAppSettingsFromJSON", "123", settingsJSON);
+                FetchedAppSettingsManager.class, "parseAppSettingsFromJSON", "123", settingsJSON);
         assertEquals(settings.getAutomaticLoggingEnabled(),false);
 
         settingsJSON.put("app_events_feature_bitmask", "7");
         settings = Whitebox.invokeMethod(
-                Utility.class, "parseAppSettingsFromJSON", "123", settingsJSON);
+                FetchedAppSettingsManager.class, "parseAppSettingsFromJSON", "123", settingsJSON);
         assertEquals(settings.getAutomaticLoggingEnabled(),false);
 
         settingsJSON.put("app_events_feature_bitmask", "23");
         settings = Whitebox.invokeMethod(
-                Utility.class, "parseAppSettingsFromJSON", "123", settingsJSON);
+                FetchedAppSettingsManager.class, "parseAppSettingsFromJSON", "123", settingsJSON);
         assertEquals(settings.getAutomaticLoggingEnabled(),false);
 
         settingsJSON.put("app_events_feature_bitmask", "8");
         settings = Whitebox.invokeMethod(
-                Utility.class, "parseAppSettingsFromJSON", "123", settingsJSON);
+                FetchedAppSettingsManager.class, "parseAppSettingsFromJSON", "123", settingsJSON);
+        assertEquals(settings.getAutomaticLoggingEnabled(),true);
+
+        settingsJSON.put("app_events_feature_bitmask", "9");
+        settings = Whitebox.invokeMethod(
+                FetchedAppSettingsManager.class, "parseAppSettingsFromJSON", "123", settingsJSON);
         assertEquals(settings.getAutomaticLoggingEnabled(),true);
 
         JSONObject noBitmaskFieldSettings = new JSONObject();
         settings = Whitebox.invokeMethod(
-                Utility.class, "parseAppSettingsFromJSON", "123", noBitmaskFieldSettings);
+                FetchedAppSettingsManager.class, "parseAppSettingsFromJSON", "123", noBitmaskFieldSettings);
         assertEquals(settings.getAutomaticLoggingEnabled(),false);
     }
 
diff --git a/facebook/src/test/java/com/facebook/internal/BundleJSONConverterTest.java b/facebook/src/test/java/com/facebook/internal/BundleJSONConverterTest.java
index 986acd464..43fe37411 100644
--- a/facebook/src/test/java/com/facebook/internal/BundleJSONConverterTest.java
+++ b/facebook/src/test/java/com/facebook/internal/BundleJSONConverterTest.java
@@ -34,7 +34,9 @@
 import java.util.ArrayList;
 import java.util.List;
 
-import static org.junit.Assert.*;
+import static junit.framework.Assert.assertEquals;
+import static junit.framework.Assert.assertNotNull;
+import static junit.framework.Assert.assertTrue;
 
 public class BundleJSONConverterTest extends FacebookTestCase {
 
diff --git a/facebook/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java b/facebook/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java
index 27dcb3125..b083216c5 100644
--- a/facebook/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java
+++ b/facebook/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java
@@ -29,7 +29,6 @@
 import org.junit.Test;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.powermock.reflect.Whitebox;
-import org.robolectric.Robolectric;
 import org.robolectric.RuntimeEnvironment;
 
 import java.util.HashMap;
@@ -43,6 +42,7 @@
 
     @Before
     public void before() {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         // Reset the static state every time so tests don't interfere with each other.
         Whitebox.setInternalState(
diff --git a/facebook/src/test/java/com/facebook/internal/FacebookRequestErrorClassificationTest.java b/facebook/src/test/java/com/facebook/internal/FacebookRequestErrorClassificationTest.java
index d6ec8b7c3..01c0d23b7 100644
--- a/facebook/src/test/java/com/facebook/internal/FacebookRequestErrorClassificationTest.java
+++ b/facebook/src/test/java/com/facebook/internal/FacebookRequestErrorClassificationTest.java
@@ -27,7 +27,9 @@
 import org.json.JSONObject;
 import org.junit.Test;
 
-import static org.junit.Assert.*;
+import static junit.framework.Assert.assertEquals;
+import static junit.framework.Assert.assertNotNull;
+import static junit.framework.Assert.assertNull;
 
 public class FacebookRequestErrorClassificationTest extends FacebookTestCase {
     private final String errorClassificationJSON =
diff --git a/facebook/src/test/java/com/facebook/internal/FacebookSignatureValidatorTest.java b/facebook/src/test/java/com/facebook/internal/FacebookSignatureValidatorTest.java
new file mode 100644
index 000000000..ecedfa87c
--- /dev/null
+++ b/facebook/src/test/java/com/facebook/internal/FacebookSignatureValidatorTest.java
@@ -0,0 +1,99 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.internal;
+
+import android.app.Activity;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.Signature;
+
+import com.facebook.FacebookPowerMockTestCase;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.powermock.core.classloader.annotations.PrepareForTest;
+
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
+import static org.powermock.api.mockito.PowerMockito.mock;
+import static org.powermock.api.mockito.PowerMockito.mockStatic;
+import static org.powermock.api.mockito.PowerMockito.when;
+
+/**
+ * Tests for {@link com.facebook.internal.FacebookSignatureValidator}.
+ */
+@PrepareForTest({Utility.class})
+public class FacebookSignatureValidatorTest extends FacebookPowerMockTestCase {
+
+  private static final String PACKAGE_NAME = "com.facebook.orca";
+  private static final String APP_HASH = "8a3c4b262d721acd49a4bf97d5213199c86fa2b9";
+
+  private Activity mMockActivity;
+  private PackageManager mMockPackageManager;
+
+  @Before
+  public void setup() {
+    mockStatic(Utility.class);
+    mMockActivity = mock(Activity.class);
+    mMockPackageManager = mock(PackageManager.class);
+    when(mMockActivity.getPackageManager()).thenReturn(mMockPackageManager);
+  }
+
+  @Test
+  public void testInvalidWhenAppNotInstalled() throws Exception {
+    setupPackageManagerForApp(false, false);
+    assertFalse(FacebookSignatureValidator.validateSignature(mMockActivity, PACKAGE_NAME));
+  }
+
+  @Test
+  public void testInvalidWhenInstalledWithIncorrectSignature() throws Exception {
+    setupPackageManagerForApp(true, false);
+    assertFalse(FacebookSignatureValidator.validateSignature(mMockActivity, PACKAGE_NAME));
+  }
+
+  @Test
+  public void testValidWhenInstalledWithCorrectSignature() throws Exception {
+    setupPackageManagerForApp(true, true);
+    assertTrue(FacebookSignatureValidator.validateSignature(mMockActivity, PACKAGE_NAME));
+  }
+
+  /**
+   * Sets up the PackageManager to return what we expect depending on whether app is installed.
+   * @param isInstalled true to simulate that app is installed
+   */
+  private void setupPackageManagerForApp(boolean isInstalled, boolean hasValidSignature)
+      throws Exception {
+    if (isInstalled) {
+      PackageInfo packageInfo = new PackageInfo();
+      when(mMockPackageManager.getPackageInfo(PACKAGE_NAME, PackageManager.GET_SIGNATURES))
+              .thenReturn(packageInfo);
+      Signature signature = mock(Signature.class);
+      packageInfo.signatures = new Signature[]{signature};
+
+      if (hasValidSignature) {
+        when(Utility.sha1hash(signature.toByteArray())).thenReturn(APP_HASH);
+      }
+    } else {
+      when(mMockPackageManager.getPackageInfo(PACKAGE_NAME, PackageManager.GET_SIGNATURES))
+          .thenThrow(new PackageManager.NameNotFoundException());
+    }
+  }
+}
diff --git a/facebook/src/test/java/com/facebook/internal/FileLruCacheTest.java b/facebook/src/test/java/com/facebook/internal/FileLruCacheTest.java
index e4a6e00e2..e51639fff 100644
--- a/facebook/src/test/java/com/facebook/internal/FileLruCacheTest.java
+++ b/facebook/src/test/java/com/facebook/internal/FileLruCacheTest.java
@@ -27,7 +27,6 @@
 
 import org.junit.Before;
 import org.junit.Test;
-import org.robolectric.Robolectric;
 import org.robolectric.RuntimeEnvironment;
 
 import java.io.ByteArrayInputStream;
@@ -36,13 +35,17 @@
 import java.io.OutputStream;
 import java.util.Random;
 
-import static org.junit.Assert.*;
+import static junit.framework.Assert.assertEquals;
+import static junit.framework.Assert.assertNotNull;
+import static junit.framework.Assert.assertNull;
+import static junit.framework.TestCase.assertTrue;
 
 public final class FileLruCacheTest extends FacebookTestCase {
     private static final Random random = new Random();
 
     @Before
     public void before() {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
diff --git a/facebook/src/main/java/com/facebook/internal/JsonUtil.java b/facebook/src/test/java/com/facebook/internal/JsonUtil.java
similarity index 92%
rename from facebook/src/main/java/com/facebook/internal/JsonUtil.java
rename to facebook/src/test/java/com/facebook/internal/JsonUtil.java
index 021f9a7ef..4c27fbf83 100644
--- a/facebook/src/main/java/com/facebook/internal/JsonUtil.java
+++ b/facebook/src/test/java/com/facebook/internal/JsonUtil.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -34,7 +34,7 @@
 class JsonUtil {
     static void jsonObjectClear(JSONObject jsonObject) {
         @SuppressWarnings("unchecked")
-        Iterator<String> keys = (Iterator<String>) jsonObject.keys();
+        Iterator<String> keys = jsonObject.keys();
         while (keys.hasNext()) {
             keys.next();
             keys.remove();
@@ -43,7 +43,7 @@ static void jsonObjectClear(JSONObject jsonObject) {
 
     static boolean jsonObjectContainsValue(JSONObject jsonObject, Object value) {
         @SuppressWarnings("unchecked")
-        Iterator<String> keys = (Iterator<String>) jsonObject.keys();
+        Iterator<String> keys = jsonObject.keys();
         while (keys.hasNext()) {
             Object thisValue = jsonObject.opt(keys.next());
             if (thisValue != null && thisValue.equals(value)) {
@@ -84,7 +84,7 @@ public Object setValue(Object object) {
         HashSet<Map.Entry<String, Object>> result = new HashSet<Map.Entry<String, Object>>();
 
         @SuppressWarnings("unchecked")
-        Iterator<String> keys = (Iterator<String>) jsonObject.keys();
+        Iterator<String> keys = jsonObject.keys();
         while (keys.hasNext()) {
             String key = keys.next();
             Object value = jsonObject.opt(key);
@@ -98,7 +98,7 @@ public Object setValue(Object object) {
         HashSet<String> result = new HashSet<String>();
 
         @SuppressWarnings("unchecked")
-        Iterator<String> keys = (Iterator<String>) jsonObject.keys();
+        Iterator<String> keys = jsonObject.keys();
         while (keys.hasNext()) {
             result.add(keys.next());
         }
@@ -121,7 +121,7 @@ static void jsonObjectPutAll(JSONObject jsonObject, Map<String, Object> map) {
         ArrayList<Object> result = new ArrayList<Object>();
 
         @SuppressWarnings("unchecked")
-        Iterator<String> keys = (Iterator<String>) jsonObject.keys();
+        Iterator<String> keys = jsonObject.keys();
         while (keys.hasNext()) {
             result.add(jsonObject.opt(keys.next()));
         }
diff --git a/facebook/src/test/java/com/facebook/internal/JsonUtilTest.java b/facebook/src/test/java/com/facebook/internal/JsonUtilTest.java
index c3cf07344..e56dad0a3 100644
--- a/facebook/src/test/java/com/facebook/internal/JsonUtilTest.java
+++ b/facebook/src/test/java/com/facebook/internal/JsonUtilTest.java
@@ -31,7 +31,9 @@
 import org.json.JSONObject;
 import org.junit.Test;
 
-import static org.junit.Assert.*;
+import static junit.framework.Assert.assertEquals;
+import static junit.framework.Assert.assertFalse;
+import static junit.framework.Assert.assertTrue;
 
 
 public final class JsonUtilTest extends FacebookTestCase {
diff --git a/facebook/src/test/java/com/facebook/internal/NativeAppCallAttachmentStoreTest.java b/facebook/src/test/java/com/facebook/internal/NativeAppCallAttachmentStoreTest.java
index e4aff2a8d..16eb2be30 100644
--- a/facebook/src/test/java/com/facebook/internal/NativeAppCallAttachmentStoreTest.java
+++ b/facebook/src/test/java/com/facebook/internal/NativeAppCallAttachmentStoreTest.java
@@ -25,14 +25,15 @@
 import com.facebook.FacebookTestCase;
 
 import org.junit.Test;
-import org.robolectric.Robolectric;
 
 import java.io.File;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.UUID;
 
-import static org.junit.Assert.*;
+import static junit.framework.Assert.assertNotNull;
+import static junit.framework.Assert.assertTrue;
+import static junit.framework.Assert.fail;
 
 
 public class NativeAppCallAttachmentStoreTest extends FacebookTestCase {
diff --git a/facebook/src/test/java/com/facebook/internal/NativeProtocolVersionTest.java b/facebook/src/test/java/com/facebook/internal/NativeProtocolVersionTest.java
index 58f330a41..f9425bd25 100644
--- a/facebook/src/test/java/com/facebook/internal/NativeProtocolVersionTest.java
+++ b/facebook/src/test/java/com/facebook/internal/NativeProtocolVersionTest.java
@@ -20,15 +20,13 @@
 
 package com.facebook.internal;
 
-import android.test.suitebuilder.annotation.SmallTest;
-
 import com.facebook.FacebookTestCase;
 
 import org.junit.Test;
 
 import java.util.TreeSet;
 
-import static org.junit.Assert.*;
+import static junit.framework.Assert.assertEquals;
 
 
 public class NativeProtocolVersionTest extends FacebookTestCase {
diff --git a/facebook/src/test/java/com/facebook/internal/ShareInternalUtilityTest.java b/facebook/src/test/java/com/facebook/internal/ShareInternalUtilityTest.java
index 78249805b..efa4d443c 100644
--- a/facebook/src/test/java/com/facebook/internal/ShareInternalUtilityTest.java
+++ b/facebook/src/test/java/com/facebook/internal/ShareInternalUtilityTest.java
@@ -35,7 +35,6 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Locale;
-import java.util.UUID;
 
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertNotNull;
@@ -93,7 +92,7 @@ public void testJsonSerializationOfOpenGraph() {
             List<String> peopleIds = Utility.jsonArrayToStringList(object.getJSONArray("tags"));
             assertEquals(4, peopleIds.size());
             for (int i = 1; i < 5; ++i) {
-                assertTrue(peopleIds.contains(new Integer(i).toString()));
+                assertTrue(peopleIds.contains(Integer.valueOf(i).toString()));
             }
 
             assertEquals(placeId, object.getString("place"));
diff --git a/facebook/src/test/java/com/facebook/internal/UtilityIntersectRangeTest.java b/facebook/src/test/java/com/facebook/internal/UtilityIntersectRangeTest.java
index d134cffc7..0e490e032 100644
--- a/facebook/src/test/java/com/facebook/internal/UtilityIntersectRangeTest.java
+++ b/facebook/src/test/java/com/facebook/internal/UtilityIntersectRangeTest.java
@@ -26,7 +26,7 @@
 
 import java.util.Arrays;
 
-import static org.junit.Assert.*;
+import static junit.framework.Assert.assertTrue;
 
 
 public class UtilityIntersectRangeTest extends FacebookTestCase {
diff --git a/facebook/src/test/java/com/facebook/internal/UtilityTest.java b/facebook/src/test/java/com/facebook/internal/UtilityTest.java
index 205e3107f..54b1aeecf 100644
--- a/facebook/src/test/java/com/facebook/internal/UtilityTest.java
+++ b/facebook/src/test/java/com/facebook/internal/UtilityTest.java
@@ -29,7 +29,8 @@
 import java.util.HashMap;
 import java.util.Map;
 
-import static org.junit.Assert.*;
+import static junit.framework.Assert.assertEquals;
+import static junit.framework.Assert.assertNull;
 
 public class UtilityTest extends FacebookTestCase {
 
diff --git a/facebook/src/test/java/com/facebook/internal/ValidateTest.java b/facebook/src/test/java/com/facebook/internal/ValidateTest.java
index 60c1fde4a..990a19840 100644
--- a/facebook/src/test/java/com/facebook/internal/ValidateTest.java
+++ b/facebook/src/test/java/com/facebook/internal/ValidateTest.java
@@ -26,7 +26,7 @@
 
 import org.junit.Test;
 
-import static org.junit.Assert.*;
+import static junit.framework.Assert.fail;
 
 
 public class ValidateTest extends FacebookTestCase {
diff --git a/facebook/src/test/java/com/facebook/internal/WorkQueueTest.java b/facebook/src/test/java/com/facebook/internal/WorkQueueTest.java
index 983410c58..5a0b0b724 100644
--- a/facebook/src/test/java/com/facebook/internal/WorkQueueTest.java
+++ b/facebook/src/test/java/com/facebook/internal/WorkQueueTest.java
@@ -28,7 +28,8 @@
 import java.util.ArrayList;
 import java.util.concurrent.Executor;
 
-import static org.junit.Assert.*;
+import static junit.framework.Assert.assertEquals;
+import static junit.framework.Assert.assertTrue;
 
 public class WorkQueueTest extends FacebookTestCase {
 
diff --git a/facebook/src/test/java/com/facebook/login/CustomTabLoginMethodHandlerTest.java b/facebook/src/test/java/com/facebook/login/CustomTabLoginMethodHandlerTest.java
index 4e50fc641..49fe01d71 100644
--- a/facebook/src/test/java/com/facebook/login/CustomTabLoginMethodHandlerTest.java
+++ b/facebook/src/test/java/com/facebook/login/CustomTabLoginMethodHandlerTest.java
@@ -27,7 +27,6 @@
 import android.content.pm.ServiceInfo;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentActivity;
 
 import com.facebook.AccessToken;
 import com.facebook.FacebookActivity;
@@ -35,6 +34,8 @@
 import com.facebook.FacebookOperationCanceledException;
 import com.facebook.FacebookSdk;
 import com.facebook.TestUtils;
+import com.facebook.internal.FetchedAppSettings;
+import com.facebook.internal.FetchedAppSettingsManager;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
 
@@ -66,7 +67,10 @@
         Validate.class,
         Utility.class,
         FacebookSdk.class,
-        AccessToken.class })
+        AccessToken.class,
+        FetchedAppSettings.class,
+        FetchedAppSettingsManager.class
+})
 public class CustomTabLoginMethodHandlerTest extends LoginHandlerTestCase {
     private final static String SIGNED_REQUEST_STR = "ggarbage.eyJhbGdvcml0aG0iOiJITUFDSEEyNTYiLCJ"
             + "jb2RlIjoid2h5bm90IiwiaXNzdWVkX2F0IjoxNDIyNTAyMDkyLCJ1c2VyX2lkIjoiMTIzIn0";
@@ -223,10 +227,10 @@ private void mockCustomTabRedirectActivity(final boolean hasActivity) {
     }
 
     private void mockCustomTabsAllowed(final boolean allowed) {
-        final Utility.FetchedAppSettings settings = mock(Utility.FetchedAppSettings.class);
+        final FetchedAppSettings settings = mock(FetchedAppSettings.class);
         when(settings.getCustomTabsEnabled()).thenReturn(allowed);
-        mockStatic(Utility.class);
-        when(Utility.getAppSettingsWithoutQuery(anyString())).thenReturn(settings);
+        mockStatic(FetchedAppSettingsManager.class);
+        when(FetchedAppSettingsManager.getAppSettingsWithoutQuery(anyString())).thenReturn(settings);
     }
 
 }
diff --git a/facebook/src/test/java/com/facebook/login/FacebookLiteLoginMethodHandlerTest.java b/facebook/src/test/java/com/facebook/login/FacebookLiteLoginMethodHandlerTest.java
index d8ee20708..0d25ed978 100644
--- a/facebook/src/test/java/com/facebook/login/FacebookLiteLoginMethodHandlerTest.java
+++ b/facebook/src/test/java/com/facebook/login/FacebookLiteLoginMethodHandlerTest.java
@@ -56,6 +56,7 @@
     @Override
     public void before() throws Exception {
         super.before();
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
diff --git a/facebook/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java b/facebook/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java
index c57831876..7281ffcec 100644
--- a/facebook/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java
+++ b/facebook/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java
@@ -32,7 +32,6 @@
 import org.junit.Test;
 import org.mockito.ArgumentCaptor;
 import org.powermock.core.classloader.annotations.PrepareForTest;
-import org.robolectric.Robolectric;
 import org.robolectric.RuntimeEnvironment;
 
 import java.util.Date;
@@ -56,6 +55,7 @@
     @Override
     public void before() throws Exception {
         super.before();
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
diff --git a/facebook/src/test/java/com/facebook/login/LoginClientTest.java b/facebook/src/test/java/com/facebook/login/LoginClientTest.java
index 61076cbb8..e64b937b8 100644
--- a/facebook/src/test/java/com/facebook/login/LoginClientTest.java
+++ b/facebook/src/test/java/com/facebook/login/LoginClientTest.java
@@ -68,6 +68,7 @@ public void before() throws Exception {
 
     @Test
     public void testReauthorizationWithSameFbidSucceeds() throws Exception {
+        FacebookSdk.setApplicationId("123456789");
         FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         LoginClient.Request request = createRequest(ACCESS_TOKEN);
 
diff --git a/facebook/src/test/java/com/facebook/login/LoginManagerTest.java b/facebook/src/test/java/com/facebook/login/LoginManagerTest.java
index c3b14805e..84c33468b 100644
--- a/facebook/src/test/java/com/facebook/login/LoginManagerTest.java
+++ b/facebook/src/test/java/com/facebook/login/LoginManagerTest.java
@@ -25,6 +25,7 @@
 import android.content.ComponentName;
 import android.content.Context;
 import android.content.Intent;
+import android.content.SharedPreferences;
 import android.content.pm.PackageManager;
 import android.content.pm.ResolveInfo;
 import android.os.Bundle;
@@ -53,14 +54,15 @@
 import java.util.Arrays;
 import java.util.Collection;
 import java.util.Date;
-import java.util.HashSet;
 import java.util.List;
 import java.util.Set;
 import java.util.concurrent.ThreadPoolExecutor;
 
 import static org.junit.Assert.*;
 import static org.mockito.Matchers.any;
+import static org.mockito.Matchers.anyBoolean;
 import static org.mockito.Matchers.anyInt;
+import static org.mockito.Matchers.anyString;
 import static org.mockito.Matchers.argThat;
 import static org.mockito.Matchers.eq;
 import static org.mockito.Matchers.isA;
@@ -87,6 +89,8 @@
     @Mock private FacebookCallback<LoginResult> mockCallback;
     @Mock private ThreadPoolExecutor threadExecutor;
     @Mock private FragmentActivity mockFragmentActivity;
+    @Mock private SharedPreferences mockSharedPreferences;
+    @Mock private SharedPreferences.Editor mockEditor;
 
     @Before
     public void before() throws Exception {
@@ -101,6 +105,10 @@ public void before() throws Exception {
         when(FacebookSdk.getExecutor()).thenReturn(threadExecutor);
         when(mockFragment.getActivity()).thenReturn(mockFragmentActivity);
         when(mockActivity.getApplicationContext()).thenReturn(mockApplicationContext);
+        when(FacebookSdk.getApplicationContext()
+                .getSharedPreferences(anyString(), anyInt())).thenReturn(mockSharedPreferences);
+        when(mockSharedPreferences.edit()).thenReturn(mockEditor);
+        when(mockEditor.putBoolean(anyString(), anyBoolean())).thenReturn(mockEditor);
 
         // We use mocks rather than RobolectricPackageManager because it's simpler to not
         // have to specify Intents. Default to resolving all intents to something.
diff --git a/facebook/src/test/java/com/facebook/messenger/MessengerUtilsTest.java b/facebook/src/test/java/com/facebook/messenger/MessengerUtilsTest.java
index f102ec1a5..70062b2d1 100644
--- a/facebook/src/test/java/com/facebook/messenger/MessengerUtilsTest.java
+++ b/facebook/src/test/java/com/facebook/messenger/MessengerUtilsTest.java
@@ -23,49 +23,55 @@
 import android.app.Activity;
 import android.content.ContentResolver;
 import android.content.Intent;
-import android.content.pm.PackageInfo;
-import android.content.pm.PackageManager;
 import android.database.MatrixCursor;
 import android.net.Uri;
 import android.os.Bundle;
 
+import com.facebook.FacebookPowerMockTestCase;
 import com.facebook.FacebookSdk;
+import com.facebook.internal.FacebookSignatureValidator;
 
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.mockito.ArgumentCaptor;
-import org.robolectric.Robolectric;
+import org.powermock.api.mockito.PowerMockito;
+import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.RobolectricTestRunner;
 import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
 import java.util.Arrays;
 
-import static org.junit.Assert.*;
 import static org.junit.Assert.assertEquals;
-import static org.mockito.Mockito.*;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertNull;
+import static org.junit.Assert.assertTrue;
+import static org.mockito.Mockito.eq;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
 
 /**
  * Tests for {@link com.facebook.messenger.MessengerUtils}
  */
 @RunWith(RobolectricTestRunner.class)
 @Config(sdk = 18, manifest = Config.NONE)
-public class MessengerUtilsTest {
+@PrepareForTest({FacebookSignatureValidator.class})
+public class MessengerUtilsTest extends FacebookPowerMockTestCase {
 
   private Activity mMockActivity;
-  private PackageManager mMockPackageManager;
   private ContentResolver mMockContentResolver;
 
   @Before
   public void setup() {
     mMockActivity = mock(Activity.class);
-    mMockPackageManager = mock(PackageManager.class);
     mMockContentResolver = mock(ContentResolver.class);
-    when(mMockActivity.getPackageManager()).thenReturn(mMockPackageManager);
     when(mMockActivity.getContentResolver()).thenReturn(mMockContentResolver);
-    FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     FacebookSdk.setApplicationId("200");
+    FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
+    PowerMockito.mockStatic(FacebookSignatureValidator.class);
   }
 
   @Test
@@ -226,14 +232,9 @@ public void testFinishShareToMessengerWithUnexpectedIntent() throws Exception {
    *
    * @param isInstalled true to simulate that messenger is installed
    */
-  private void setupPackageManagerForMessenger(boolean isInstalled) throws Exception {
-    if (isInstalled) {
-      when(mMockPackageManager.getPackageInfo("com.facebook.orca", 0))
-          .thenReturn(new PackageInfo());
-    } else {
-      when(mMockPackageManager.getPackageInfo("com.facebook.orca", 0))
-          .thenThrow(new PackageManager.NameNotFoundException());
-    }
+  private void setupPackageManagerForMessenger(boolean isInstalled) {
+    when(FacebookSignatureValidator.validateSignature(mMockActivity, "com.facebook.orca"))
+            .thenReturn(isInstalled);
   }
 
   /**
diff --git a/facebook/src/test/java/com/facebook/places/PlaceManagerTest.java b/facebook/src/test/java/com/facebook/places/PlaceManagerTest.java
new file mode 100644
index 000000000..20ea002f6
--- /dev/null
+++ b/facebook/src/test/java/com/facebook/places/PlaceManagerTest.java
@@ -0,0 +1,123 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places;
+
+import android.location.Location;
+import android.os.Bundle;
+
+import com.facebook.AccessToken;
+import com.facebook.FacebookPowerMockTestCase;
+import com.facebook.GraphRequest;
+import com.facebook.HttpMethod;
+import com.facebook.places.model.CurrentPlaceFeedbackRequestParams;
+import com.facebook.places.model.PlaceInfoRequestParams;
+import com.facebook.places.model.PlaceSearchRequestParams;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.powermock.api.mockito.PowerMockito;
+
+import static org.junit.Assert.assertEquals;
+
+import org.powermock.core.classloader.annotations.PrepareForTest;
+
+import static org.powermock.api.mockito.PowerMockito.mockStatic;
+
+@PrepareForTest({
+        AccessToken.class})
+public class PlaceManagerTest extends FacebookPowerMockTestCase {
+
+    @Before
+    public void setup() {
+        mockStatic(AccessToken.class);
+        PowerMockito.when(AccessToken.getCurrentAccessToken()).thenReturn(null);
+    }
+
+    @Test
+    public void testSearchPlaceForLocationRequest() {
+        PlaceSearchRequestParams.Builder builder = new PlaceSearchRequestParams.Builder();
+        builder.setSearchText("search text");
+        builder.setLimit(5);
+        builder.addCategory("category1");
+        builder.addCategory("category2");
+        builder.addField("field1");
+        builder.addField("field2");
+        builder.setDistance(500);
+
+        PlaceSearchRequestParams params = builder.build();
+        Location location = new Location("dummy");
+        location.setLatitude(1);
+        location.setLongitude(2);
+
+        GraphRequest request =
+                PlaceManager.newPlaceSearchRequestForLocation(params, location);
+
+        assertEquals("search", request.getGraphPath());
+        assertEquals(HttpMethod.GET, request.getHttpMethod());
+
+        Bundle requestParams = request.getParameters();
+
+        assertEquals("search text", requestParams.get("q"));
+        assertEquals(500, requestParams.get("distance"));
+        assertEquals(5, requestParams.get("limit"));
+        assertEquals("1.000000,2.000000", requestParams.get("center"));
+        assertEquals("field1,field2", requestParams.get("fields"));
+        assertEquals("place", requestParams.get("type"));
+        assertEquals("[\"category2\",\"category1\"]", requestParams.get("categories"));
+    }
+
+    @Test
+    public void testPlaceInfoRequest() {
+        PlaceInfoRequestParams.Builder builder = new PlaceInfoRequestParams.Builder();
+        builder.setPlaceId("12345");
+        builder.addField("field1");
+        builder.addFields(new String[]{"field2", "field3"});
+        PlaceInfoRequestParams params = builder.build();
+
+        GraphRequest request = PlaceManager.newPlaceInfoRequest(params);
+
+        assertEquals("12345", request.getGraphPath());
+        assertEquals(HttpMethod.GET, request.getHttpMethod());
+
+        Bundle requestParams = request.getParameters();
+        assertEquals("field1,field3,field2", requestParams.get("fields"));
+    }
+
+    @Test
+    public void testCurrentPlaceFeedbackRequest() {
+        CurrentPlaceFeedbackRequestParams.Builder builder =
+                new CurrentPlaceFeedbackRequestParams.Builder();
+        builder.setPlaceId("12345");
+        builder.setTracking("trackingid");
+        builder.setWasHere(true);
+        CurrentPlaceFeedbackRequestParams params = builder.build();
+
+        GraphRequest request = PlaceManager.newCurrentPlaceFeedbackRequest(params);
+
+        assertEquals("current_place/feedback", request.getGraphPath());
+        assertEquals(HttpMethod.POST, request.getHttpMethod());
+
+        Bundle requestParams = request.getParameters();
+        assertEquals("12345", requestParams.get("place_id"));
+        assertEquals("trackingid", requestParams.get("tracking"));
+        assertEquals(true, requestParams.get("was_here"));
+    }
+}
diff --git a/facebook/src/test/java/com/facebook/places/model/CurrentPlaceFeedbackRequestParamsTest.java b/facebook/src/test/java/com/facebook/places/model/CurrentPlaceFeedbackRequestParamsTest.java
new file mode 100644
index 000000000..c0c4a2711
--- /dev/null
+++ b/facebook/src/test/java/com/facebook/places/model/CurrentPlaceFeedbackRequestParamsTest.java
@@ -0,0 +1,43 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+import com.facebook.FacebookTestCase;
+
+import org.junit.Test;
+
+import static org.junit.Assert.assertEquals;
+
+public class CurrentPlaceFeedbackRequestParamsTest extends FacebookTestCase {
+    @Test
+    public void testBuilder() {
+        CurrentPlaceFeedbackRequestParams.Builder builder =
+                new CurrentPlaceFeedbackRequestParams.Builder();
+        builder.setPlaceId("place id");
+        builder.setTracking("tracking id");
+        builder.setWasHere(true);
+        CurrentPlaceFeedbackRequestParams params = builder.build();
+
+        assertEquals("place id", params.getPlaceId());
+        assertEquals("tracking id", params.getTracking());
+        assertEquals(true, params.wasHere());
+    }
+}
diff --git a/facebook/src/test/java/com/facebook/places/model/CurrentPlaceRequestParamsTest.java b/facebook/src/test/java/com/facebook/places/model/CurrentPlaceRequestParamsTest.java
new file mode 100644
index 000000000..57d8add12
--- /dev/null
+++ b/facebook/src/test/java/com/facebook/places/model/CurrentPlaceRequestParamsTest.java
@@ -0,0 +1,64 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+import android.location.Location;
+
+import com.facebook.FacebookTestCase;
+
+import org.junit.Test;
+
+import java.util.Set;
+
+import static org.junit.Assert.assertEquals;
+
+public class CurrentPlaceRequestParamsTest extends FacebookTestCase {
+    @Test
+    public void testBuilder() {
+        Location location = new Location("dummy");
+        location.setLatitude(1.0);
+        location.setLongitude(2.0);
+
+        CurrentPlaceRequestParams.Builder builder = new CurrentPlaceRequestParams.Builder();
+        builder.setMinConfidenceLevel(CurrentPlaceRequestParams.ConfidenceLevel.MEDIUM);
+        builder.setLimit(22);
+        builder.setScanMode(CurrentPlaceRequestParams.ScanMode.LOW_LATENCY);
+        builder.setLocation(location);
+        builder.addField("field1");
+        builder.addField("field2");
+        CurrentPlaceRequestParams params = builder.build();
+
+        assertEquals(22, params.getLimit());
+        assertEquals(location, params.getLocation());
+        assertEquals(
+                CurrentPlaceRequestParams.ConfidenceLevel.MEDIUM,
+                params.getMinConfidenceLevel());
+        assertEquals(CurrentPlaceRequestParams.ScanMode.LOW_LATENCY, params.getScanMode());
+        assertSetEqual(new String[]{"field1", "field2"}, params.getFields());
+    }
+
+    private void assertSetEqual(String[] expectedValues, Set<String> actualValues) {
+        assertEquals(expectedValues.length, actualValues.size());
+        for (String expectedValue : expectedValues) {
+            assertEquals(true, actualValues.contains(expectedValue));
+        }
+    }
+}
diff --git a/facebook/src/test/java/com/facebook/places/model/PlaceInfoRequestParamsTest.java b/facebook/src/test/java/com/facebook/places/model/PlaceInfoRequestParamsTest.java
new file mode 100644
index 000000000..456da8a8a
--- /dev/null
+++ b/facebook/src/test/java/com/facebook/places/model/PlaceInfoRequestParamsTest.java
@@ -0,0 +1,47 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+import com.facebook.FacebookTestCase;
+
+import org.junit.Test;
+
+import java.util.Set;
+
+import static org.junit.Assert.assertEquals;
+
+public class PlaceInfoRequestParamsTest extends FacebookTestCase {
+    @Test
+    public void testBuilder() {
+        PlaceInfoRequestParams.Builder builder = new PlaceInfoRequestParams.Builder();
+        builder.setPlaceId("place id");
+        builder.addFields(new String[]{"field1", "field2"});
+        builder.addField("field3");
+        PlaceInfoRequestParams params = builder.build();
+
+        assertEquals("place id", params.getPlaceId());
+        Set<String> fields  = params.getFields();
+        assertEquals(3, fields.size());
+        assertEquals(true, fields.contains("field1"));
+        assertEquals(true, fields.contains("field2"));
+        assertEquals(true, fields.contains("field3"));
+    }
+}
diff --git a/facebook/src/test/java/com/facebook/places/model/PlaceSearchRequestParamsTest.java b/facebook/src/test/java/com/facebook/places/model/PlaceSearchRequestParamsTest.java
new file mode 100644
index 000000000..2ceae576c
--- /dev/null
+++ b/facebook/src/test/java/com/facebook/places/model/PlaceSearchRequestParamsTest.java
@@ -0,0 +1,57 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.places.model;
+
+import com.facebook.FacebookTestCase;
+
+import org.junit.Test;
+
+import java.util.Set;
+
+import static org.junit.Assert.assertEquals;
+
+public class PlaceSearchRequestParamsTest extends FacebookTestCase {
+    @Test
+    public void testBuilder() {
+        PlaceSearchRequestParams.Builder builder = new PlaceSearchRequestParams.Builder();
+        builder.setDistance(123);
+        builder.setLimit(22);
+        builder.setSearchText("search query");
+        builder.addCategory("category1");
+        builder.addCategory("category2");
+        builder.addField("field1");
+        builder.addField("field2");
+        PlaceSearchRequestParams params = builder.build();
+
+        assertEquals(123, params.getDistance());
+        assertEquals(22, params.getLimit());
+        assertEquals("search query", params.getSearchText());
+        assertSetEqual(new String[]{"category1", "category2"}, params.getCategories());
+        assertSetEqual(new String[]{"field1", "field2"}, params.getFields());
+    }
+
+    private void assertSetEqual(String[] expectedValues, Set<String> actualValues) {
+        assertEquals(expectedValues.length, actualValues.size());
+        for (String expectedValue : expectedValues) {
+            assertEquals(true, actualValues.contains(expectedValue));
+        }
+    }
+}
diff --git a/facebook/src/test/java/com/facebook/share/internal/ShareContentValidationTest.java b/facebook/src/test/java/com/facebook/share/internal/ShareContentValidationTest.java
index 0e80ebf01..e89c40128 100644
--- a/facebook/src/test/java/com/facebook/share/internal/ShareContentValidationTest.java
+++ b/facebook/src/test/java/com/facebook/share/internal/ShareContentValidationTest.java
@@ -19,29 +19,21 @@
  */
 package com.facebook.share.internal;
 
-import android.content.Context;
 import android.graphics.Bitmap;
 import android.net.Uri;
 
 import com.facebook.FacebookException;
 import com.facebook.FacebookPowerMockTestCase;
-import com.facebook.FacebookSdk;
 import com.facebook.internal.Validate;
 import com.facebook.share.model.ShareLinkContent;
 import com.facebook.share.model.ShareOpenGraphAction;
 import com.facebook.share.model.ShareOpenGraphContent;
 import com.facebook.share.model.SharePhoto;
 import com.facebook.share.model.SharePhotoContent;
-import com.facebook.share.model.ShareVideo;
 import com.facebook.share.model.ShareVideoContent;
 
 import org.junit.Test;
-import org.mockito.Mockito;
-import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
-import org.robolectric.RuntimeEnvironment;
-
-import static org.powermock.api.mockito.PowerMockito.doNothing;
 
 
 /**
diff --git a/gradle.properties b/gradle.properties
index 475b38ce6..48ed711a5 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,4 +1,5 @@
 ANDROID_BUILD_MIN_SDK_VERSION=15
-ANDROID_BUILD_TARGET_SDK_VERSION=23
-ANDROID_BUILD_TOOLS_VERSION=23.0.1
-ANDROID_BUILD_SDK_VERSION=23
+ANDROID_BUILD_TARGET_SDK_VERSION=25
+ANDROID_BUILD_TOOLS_VERSION=25.0.3
+ANDROID_BUILD_SDK_VERSION=25
+org.gradle.jvmargs=-Xmx1536M
\ No newline at end of file
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 9c0bad963..8733a5efc 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.14.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-3.5-all.zip
diff --git a/keystores/BUCK b/keystores/BUCK
deleted file mode 100644
index 15da20e6b..000000000
--- a/keystores/BUCK
+++ /dev/null
@@ -1,8 +0,0 @@
-keystore(
-  name = 'debug',
-  store = 'debug.keystore',
-  properties = 'debug.keystore.properties',
-  visibility = [
-    'PUBLIC',
-  ],
-)
diff --git a/keystores/debug.keystore b/keystores/debug.keystore
deleted file mode 100644
index 364e105ed..000000000
Binary files a/keystores/debug.keystore and /dev/null differ
diff --git a/keystores/debug.keystore.properties b/keystores/debug.keystore.properties
deleted file mode 100644
index 121bfb49f..000000000
--- a/keystores/debug.keystore.properties
+++ /dev/null
@@ -1,4 +0,0 @@
-key.store=debug.keystore
-key.alias=androiddebugkey
-key.store.password=android
-key.alias.password=android
diff --git a/libs/BUCK b/libs/BUCK
deleted file mode 100644
index 9d476d1d5..000000000
--- a/libs/BUCK
+++ /dev/null
@@ -1,15 +0,0 @@
-prebuilt_jar(
-  name = 'android-support-v4',
-  binary_jar = 'android-support-v4.jar',
-  visibility = [
-    'PUBLIC',
-  ],
-)
-
-prebuilt_jar(
-  name = 'bolts',
-  binary_jar = 'bolts-android-1.1.2.jar',
-  visibility = [
-    'PUBLIC',
-  ],
-)
diff --git a/libs/android-support-v4.jar b/libs/android-support-v4.jar
deleted file mode 100644
index ab68dfa0f..000000000
Binary files a/libs/android-support-v4.jar and /dev/null differ
diff --git a/libs/bolts-android-1.1.2.jar b/libs/bolts-android-1.1.2.jar
deleted file mode 100644
index 88a01a30b..000000000
Binary files a/libs/bolts-android-1.1.2.jar and /dev/null differ
diff --git a/maven.gradle b/maven.gradle
new file mode 100644
index 000000000..c675605d7
--- /dev/null
+++ b/maven.gradle
@@ -0,0 +1,100 @@
+apply plugin: 'maven'
+apply plugin: 'signing'
+
+def isSnapshot = version.endsWith('-SNAPSHOT')
+def ossrhUsername = hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
+def ossrhPassword = hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
+
+task setVersion {
+    // The version will be derived from source
+    project.version = null
+    def sdkVersionFile = file("${rootDir}/facebook-core/src/main/java/com/facebook/FacebookSdkVersion.java")
+    sdkVersionFile.eachLine{
+        def matcher = (it =~ /(?:.*BUILD = \")(.*)(?:\".*)/)
+        if (matcher.matches()) {
+            project.version = matcher[0][1]
+            return
+        }
+    }
+    if (project.version.is('unspecified')) {
+        throw new GradleScriptException('Version could not be found.', null)
+    }
+}
+
+uploadArchives {
+    repositories.mavenDeployer {
+        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
+
+        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
+            authentication(userName: ossrhUsername, password: ossrhPassword)
+        }
+
+        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
+            authentication(userName: ossrhUsername, password: ossrhPassword)
+        }
+
+        pom.project {
+            name project.ext.name
+            artifactId project.ext.artifactId
+            packaging 'aar'
+            description project.ext.description
+            url project.ext.url
+
+            scm {
+                connection 'scm:git@github.com:facebook/facebook-android-sdk.git'
+                developerConnection 'scm:git@github.com:facebook/facebook-android-sdk.git'
+                url 'https://github.com/facebook/facebook-android-sdk'
+            }
+
+            licenses {
+                license {
+                    name 'Facebook Platform License'
+                    url 'https://github.com/facebook/facebook-android-sdk/blob/master/LICENSE.txt'
+                    distribution 'repo'
+                }
+            }
+
+            developers {
+                developer {
+                    id 'facebook'
+                    name 'Facebook'
+                }
+            }
+        }
+    }
+}
+
+uploadArchives.dependsOn(setVersion)
+
+signing {
+    required { !isSnapshot && gradle.taskGraph.hasTask("uploadArchives") }
+    sign configurations.archives
+}
+
+task androidJavadocs(type: Javadoc) {
+    source = android.sourceSets.main.java.srcDirs
+    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
+    // JDK 1.8 is more strict then 1.7. Have JDK 1.8 behave like 1.7 for javadoc generation
+    if (org.gradle.internal.jvm.Jvm.current().getJavaVersion() == JavaVersion.VERSION_1_8) {
+        options.addStringOption('Xdoclint:none', '-quiet')
+    }
+}
+
+task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
+    classifier = 'javadoc'
+    from androidJavadocs.destinationDir
+}
+
+task androidSourcesJar(type: Jar) {
+    classifier = 'sources'
+    from android.sourceSets.main.java.sourceFiles
+}
+
+artifacts {
+    archives androidSourcesJar
+    archives androidJavadocsJar
+}
+
+afterEvaluate {
+    androidJavadocs.classpath += project.android.libraryVariants.toList().first().javaCompile.classpath
+}
diff --git a/plugin/FacebookSDKPlugin/resources/META-INF/plugin.xml b/plugin/FacebookSDKPlugin/resources/META-INF/plugin.xml
new file mode 100644
index 000000000..5ac08bc60
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/resources/META-INF/plugin.xml
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<idea-plugin version="2">
+  <id>com.facebook.plugin</id>
+  <name>Facebook SDK Plugin</name>
+  <version>0.1</version>
+  <vendor email="support@facebook.com"
+          url="https://developers.facebook.com/">
+    Facebook SDK
+  </vendor>
+
+  <description>
+    Description of Facebook SDK etc etc.
+  </description>
+
+  <change-notes>
+    Initial experiment version
+  </change-notes>
+
+  <idea-version since-build="141.0"/>
+
+  <depends>com.intellij.modules.lang</depends>
+  <depends>com.intellij.modules.platform</depends>
+  <depends>org.jetbrains.android</depends>
+  <depends>org.jetbrains.plugins.gradle</depends>
+
+  <extensions defaultExtensionNs="com.intellij">
+  </extensions>
+
+  <actions>
+    <group id="FacebookSDK.ToolMenu"
+           class="com.intellij.openapi.actionSystem.DefaultActionGroup"
+           text="Facebook SDK"
+           description="Facebook SDK Actions"
+           popup="true"
+           icon="/icons/facebook-ldpi.png">
+      <add-to-group group-id="ToolsMenu" anchor="last" />
+    </group>
+    <action id="FacebookSDK.InstallAccountKit"
+            class="com.facebook.plugin.actions.AccountKitInstallerAction"
+            text="Install Account Kit"
+            description="Install Account Kit"
+            icon="/icons/accountkit-ldpi.png">
+      <add-to-group group-id="FacebookSDK.ToolMenu" anchor="first" />
+    </action>
+  </actions>
+</idea-plugin>
diff --git a/plugin/FacebookSDKPlugin/resources/icons/accountkit-ldpi.png b/plugin/FacebookSDKPlugin/resources/icons/accountkit-ldpi.png
new file mode 100644
index 000000000..f4d788adf
Binary files /dev/null and b/plugin/FacebookSDKPlugin/resources/icons/accountkit-ldpi.png differ
diff --git a/plugin/FacebookSDKPlugin/resources/icons/facebook-ldpi.png b/plugin/FacebookSDKPlugin/resources/icons/facebook-ldpi.png
new file mode 100644
index 000000000..d1178eff1
Binary files /dev/null and b/plugin/FacebookSDKPlugin/resources/icons/facebook-ldpi.png differ
diff --git a/plugin/FacebookSDKPlugin/resources/values/code.properties b/plugin/FacebookSDKPlugin/resources/values/code.properties
new file mode 100644
index 000000000..99e36bf89
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/resources/values/code.properties
@@ -0,0 +1,82 @@
+importsList = \
+  android.os.Bundle,\
+  android.content.Intent,\
+  com.facebook.accountkit.AccessToken,\
+  com.facebook.accountkit.AccountKit,\
+  com.facebook.accountkit.AccountKitLoginResult,\
+  com.facebook.accountkit.ui.AccountKitActivity,\
+  com.facebook.accountkit.ui.AccountKitConfiguration,\
+  com.facebook.accountkit.ui.LoginType
+
+codeBlockFrameworkRequestField = \
+  private static final int AK_FRAMEWORK_REQUEST_CODE = 42;
+
+codeBlockOnCreateMethod = \
+  @Override protected void onCreate(Bundle savedInstanceState) {\
+    super.onCreate(savedInstanceState);\
+  }
+
+codeBlockOnCreate = \
+  if (AccountKit.getCurrentAccessToken() != null) {\
+    onSuccessfulLogin(AccountKit.getCurrentAccessToken());\
+  }
+
+codeBlockOnActivityResultMethod = \
+  @Override protected void onActivityResult(int requestCode, int resultCode, Intent data) {\
+    super.onActivityResult(requestCode, resultCode, data);\
+  }
+
+codeBlockOnActivityResult = \
+  if (requestCode == AK_FRAMEWORK_REQUEST_CODE) {\
+    final AccountKitLoginResult loginResult = AccountKit.loginResultWithIntent(data);\
+    if (loginResult != null && loginResult.getAccessToken() != null) {\
+      onSuccessfulLogin(loginResult.getAccessToken());\
+    } else {\
+      onUnsuccessfulLogin(loginResult);\
+    }\
+  }
+
+codeBlockOnSuccessfulLogin = \
+  /**\n\
+    * This method is called back when login was successful.\n\
+    * @param accessToken AccountKit AccessToken to use\n\
+    */\n\
+  protected void onSuccessfulLogin(final AccessToken accessToken) {\
+\n    // Do your login logic here!\n\
+  }
+
+codeBlockOnUnsuccessfulLogin = \
+  /**\n\
+    * This method is called back when login failed.\n\
+    * @param loginResult Information about the result of login attempt\n\
+    */\n\
+  protected void onUnsuccessfulLogin(final AccountKitLoginResult loginResult) {\
+\n    // Do your error handing here! For ex:\n\
+    if (loginResult == null || loginResult.wasCancelled()) {\
+\n      // Login was cancelled by user\n\
+    } else if (loginResult.getError() != null) {\
+\n      // There was a login error. Check loginResult.getError()\n\
+    } else {\
+\n      // An unknown error has occurred!\n\
+    }\
+  }
+
+codeBlockDoLogin = \
+  /**\n\
+    * Call this method to initiate a login attempt and pop up AccountKit dialog\n\
+    * @param loginType either LoginType.PHONE for phone login or LoginType.EMAIL for email\n\
+    */\n\
+  protected void doLogin(final LoginType loginType) {\
+    if (AccountKit.getCurrentAccessToken() != null) {\
+      onSuccessfulLogin(AccountKit.getCurrentAccessToken());\
+    }\
+    final AccountKitConfiguration.AccountKitConfigurationBuilder configurationBuilder =\n\
+      new AccountKitConfiguration.AccountKitConfigurationBuilder(\
+        loginType,\
+        AccountKitActivity.ResponseType.TOKEN);\
+    final Intent intent = new Intent(this, AccountKitActivity.class);\
+    intent.putExtra(\
+      AccountKitActivity.ACCOUNT_KIT_ACTIVITY_CONFIGURATION,\
+      configurationBuilder.build());\
+    startActivityForResult(intent, AK_FRAMEWORK_REQUEST_CODE);\
+  }
diff --git a/plugin/FacebookSDKPlugin/resources/values/strings.properties b/plugin/FacebookSDKPlugin/resources/values/strings.properties
new file mode 100644
index 000000000..6cb626345
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/resources/values/strings.properties
@@ -0,0 +1,58 @@
+prereqsText = \
+  <html>\
+  <h2>Prerequisites</h2>\
+  Before you begin integrating Account Kit into your app, make sure you have completed the following prerequisites\
+  <p/>\
+  If you already have a Facebook App configured, you can skip to the next page.\
+  <p/>\
+  <h3>A. Create a Developer Account</h3>\
+  If you don't have a Facebook developer account, create one by going to<br/>\
+  <a href="https://www.facebook.com/login">https://www.facebook.com/login</a>.\
+  <p/>\
+  Your Facebook developer account gives you access to developer tools and allows you to create Facebook apps.\
+  <p/>\
+  <h3>B. Get a Facebook App ID</h3>\
+  Account Kit for Android requires a Facebook app ID. Follow the steps in the Getting Started, or to use Quick Start by going to<br/>\
+  <a href="https://developers.facebook.com/quickstarts">https://developers.facebook.com/quickstarts</a>.\
+  <p/>\
+  <h3>C. Choose Your App Settings</h3>\
+  Choose whether to allow email and SMS login, and choose security settings for your app by going to<br/>\
+  <a href="https://developers.facebook.com/apps">https://developers.facebook.com/apps</a>.\
+  </html>
+
+completedText = \
+  <html>\
+  <h2>All Done</h2>\
+  You're all done! AccountKit has been installed and configured for your project.\
+  <p/>\
+  For more information, tips and tricks, please visit the official documentation at<br/>\
+  <a href="https://developers.facebook.com/docs/accountkit/android">https://developers.facebook.com/docs/accountkit/android</a>\
+  <p/>\
+  You may close the installation wizard now. Or go back and install AccountKit on more modules or activities.\
+  </html>
+
+configureSDKText = \
+  <html>\
+  <h2>Configure the SDK</h2>\
+  Select the module that you would like to install Account Kit SDK on; \
+  this should be the module that contains your login buttons and logic.\
+  </html>
+
+configureParamsText = \
+  <html>\
+  Facebook app ID and name are shown at the top of your application dashboard;<br/>\
+  The client token is found in the Account Kit tab in the App Dashboard.\
+  </html>
+
+configureActivityText = \
+  <html>\
+  <h2>Configure Login Activity</h2>\
+  Select an Activity from your application that will have the AccountKit login buttons.<br/>\
+  This activity will be configured to receive the intent callbacks and have the logic for retrieving the \
+  AccountKit login tokens inside.\
+  </html>
+
+configureActivityDesc = \
+  <html>\
+  Click next to copy the setup and retrieval code to this activity.\
+  </html>
\ No newline at end of file
diff --git a/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleApplication.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/actions/AccountKitInstallerAction.java
similarity index 56%
rename from samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleApplication.java
rename to plugin/FacebookSDKPlugin/src/com/facebook/plugin/actions/AccountKitInstallerAction.java
index a3e2d1eb3..54baebdb2 100644
--- a/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleApplication.java
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/actions/AccountKitInstallerAction.java
@@ -1,5 +1,5 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
  * copy, modify, and distribute this software in source code or binary form for use
@@ -12,24 +12,27 @@
  *
  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.example.hellofacebook;
+package com.facebook.plugin.actions;
 
-import android.app.Application;
+import com.facebook.plugin.ui.AccountKitInstallerWizard;
+import com.intellij.openapi.actionSystem.AnAction;
+import com.intellij.openapi.actionSystem.AnActionEvent;
+import com.intellij.openapi.actionSystem.PlatformDataKeys;
+import com.intellij.openapi.project.Project;
 
-import com.facebook.FacebookSdk;
-import com.facebook.appevents.AppEventsLogger;
+public class AccountKitInstallerAction extends AnAction {
 
-public class HelloFacebookSampleApplication extends Application {
     @Override
-    public void onCreate() {
-        super.onCreate();
-        FacebookSdk.sdkInitialize(getApplicationContext());
-        AppEventsLogger.activateApp(this);
+    public void actionPerformed(final AnActionEvent event) {
+        Project project = event.getData(PlatformDataKeys.PROJECT);
+
+        AccountKitInstallerWizard dialog = new AccountKitInstallerWizard(project);
+        dialog.show();
     }
 }
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitActivityConfigurator.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitActivityConfigurator.java
new file mode 100644
index 000000000..df898db04
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitActivityConfigurator.java
@@ -0,0 +1,252 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.intellij.codeInsight.CodeInsightUtilCore;
+import com.intellij.ide.actions.OpenFileAction;
+import com.intellij.openapi.application.Result;
+import com.intellij.openapi.command.WriteCommandAction;
+import com.intellij.openapi.module.Module;
+import com.intellij.openapi.module.ModuleManager;
+import com.intellij.openapi.project.Project;
+import com.intellij.psi.PsiClass;
+import com.intellij.psi.PsiElement;
+import com.intellij.psi.PsiElementFactory;
+import com.intellij.psi.PsiField;
+import com.intellij.psi.PsiFile;
+import com.intellij.psi.PsiImportList;
+import com.intellij.psi.PsiImportStatement;
+import com.intellij.psi.PsiJavaFile;
+import com.intellij.psi.PsiMethod;
+import com.intellij.psi.PsiStatement;
+import com.intellij.psi.codeStyle.CodeStyleManager;
+import org.jetbrains.android.dom.manifest.Activity;
+import org.jetbrains.android.facet.AndroidFacet;
+import org.jetbrains.annotations.NotNull;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Properties;
+
+public class AccountKitActivityConfigurator {
+    private static final String codePropertiesFile = "values/code.properties";
+
+    private final Properties codeProperties;
+    private final String requestCode;
+
+    private PsiElementFactory elementFactory;
+
+    public AccountKitActivityConfigurator(final String requestCode)
+            throws IOException {
+        this.requestCode = requestCode;
+        codeProperties = new Properties();
+
+        InputStream inputStream = getClass().getClassLoader()
+                .getResourceAsStream(codePropertiesFile);
+        if (inputStream != null) {
+            codeProperties.load(inputStream);
+        }
+    }
+
+    public boolean isConfigured(final PsiClass psiClass) {
+        // TODO: add later
+        return false;
+    }
+
+    public void doConfigure(final PsiClass psiClass) {
+        new WriteCommandAction(psiClass.getProject()) {
+            @Override
+            protected void run(@NotNull Result result) {
+                configureClass(psiClass);
+
+                CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(psiClass);
+            }
+        }.execute();
+
+        OpenFileAction.openFile(
+                psiClass.getContainingFile().getVirtualFile().getPath(),
+                psiClass.getProject());
+    }
+
+    private void configureClass(final PsiClass psiClass) {
+        elementFactory = PsiElementFactory.SERVICE.getInstance(psiClass.getProject());
+
+        PsiFile psiFile = psiClass.getContainingFile();
+        if (!(psiFile instanceof PsiJavaFile)) {
+            return;
+        }
+
+        final PsiImportList importList = ((PsiJavaFile) psiFile).getImportList();
+        for (String packageName : codeProperties.getProperty("importsList").split(",")) {
+            packageName = packageName.trim();
+            if (!importList.getText().contains(packageName)) {
+                PsiImportStatement importStatement =
+                        elementFactory.createImportStatementOnDemand(packageName);
+                for (PsiElement element : importStatement.getChildren()) {
+                    // Sometimes, IntelliJ tries to be "helpful" and imports className.* for us
+                    // We actually don't want this to happen
+                    if (element.getText().equals("*")) {
+                        element.getPrevSibling().delete();
+                        element.delete();
+                    }
+                }
+                importList.add(importStatement);
+            }
+        }
+
+        PsiField frameworkRequestCode = findOrCreateField(
+                psiClass,
+                "AK_FRAMEWORK_REQUEST_CODE",
+                "codeBlockFrameworkRequestField");
+        frameworkRequestCode.setInitializer(
+                elementFactory.createExpressionFromText(requestCode, psiClass));
+
+        PsiMethod onCreateMethod = findOrCreateMethod(
+                psiClass,
+                "onCreate",
+                "codeBlockOnCreateMethod");
+        addStatement(onCreateMethod, "codeBlockOnCreate");
+
+        PsiMethod onActivityResult = findOrCreateMethod(
+                psiClass,
+                "onActivityResult",
+                "codeBlockOnActivityResultMethod");
+        addStatement(onActivityResult, "codeBlockOnActivityResult");
+
+        findOrCreateMethod(psiClass, "onSuccessfulLogin", "codeBlockOnSuccessfulLogin");
+        findOrCreateMethod(psiClass, "onUnsuccessfulLogin", "codeBlockOnUnsuccessfulLogin");
+        findOrCreateMethod(psiClass, "doLogin", "codeBlockDoLogin");
+    }
+
+    private PsiMethod findOrCreateMethod(
+            final PsiClass psiClass,
+            final String methodName,
+            final String methodBodyPropKey) {
+        PsiMethod[] methods = psiClass.findMethodsByName(methodName, false);
+        if (methods.length > 0) {
+            return methods[0];
+        }
+
+        PsiMethod method = elementFactory.createMethodFromText(
+                codeProperties.getProperty(methodBodyPropKey),
+                psiClass);
+
+        PsiMethod[] allMethods = psiClass.getMethods();
+        if (allMethods.length > 0) {
+            psiClass.addAfter(method, allMethods[allMethods.length - 1]);
+        } else {
+            psiClass.addAfter(method, psiClass.getLastChild());
+        }
+
+        CodeStyleManager.getInstance(psiClass.getProject()).reformat(method);
+
+        methods = psiClass.findMethodsByName(methodName, false);
+        if (methods.length > 0) {
+            return methods[0];
+        } else {
+            return method;
+        }
+    }
+
+    private PsiField findOrCreateField(
+            final PsiClass psiClass,
+            final String fieldName,
+            final String fieldBodyPropKey) {
+        PsiField field = psiClass.findFieldByName(fieldName, false);
+        if (field != null) {
+            return field;
+        }
+
+        field = elementFactory.createFieldFromText(
+                codeProperties.getProperty(fieldBodyPropKey),
+                psiClass);
+
+        PsiField[] allFields = psiClass.getAllFields();
+        if (allFields.length > 0) {
+            psiClass.addAfter(field, allFields[allFields.length - 1]);
+        } else {
+            psiClass.addAfter(field, psiClass.getFirstChild());
+        }
+
+        CodeStyleManager.getInstance(psiClass.getProject()).reformat(field);
+        return field;
+    }
+
+    private void addStatement(final PsiMethod method, final String statementPropKey) {
+        PsiStatement statement = elementFactory.createStatementFromText(
+                codeProperties.getProperty(statementPropKey),
+                method);
+        method.getBody().add(statement);
+    }
+
+    public static final class AvailableActivity {
+        private final Module module;
+        private final PsiClass psiClass;
+
+        AvailableActivity(final Module module, final PsiClass psiClass) {
+            this.module = module;
+            this.psiClass = psiClass;
+        }
+
+        public Module getModule() {
+            return module;
+        }
+
+        public PsiClass getPsiClass() {
+            return psiClass;
+        }
+
+        @Override
+        public String toString() {
+            return psiClass.getQualifiedName() + " (" + module.getName() + ")";
+        }
+    }
+
+    public static AvailableActivity[] getActivityClasses(final Project project) {
+        Module[] allModules = ModuleManager.getInstance(project).getModules();
+        List<AvailableActivity> res = new ArrayList<>();
+
+        for (Module module : allModules) {
+            List<Activity> activities;
+            try {
+                activities = AndroidFacet.getInstance(module)
+                        .getManifest()
+                        .getApplication()
+                        .getActivities();
+            } catch (Exception e) {
+                // Module doesn't have a valid Android facet. Skip it
+                continue;
+            }
+
+            for (Activity activity : activities) {
+                if ((activity != null) &&
+                        (activity.getActivityClass() != null) &&
+                        (activity.getActivityClass().getValue() != null)) {
+                    res.add(new AvailableActivity(module, activity.getActivityClass().getValue()));
+                }
+            }
+        }
+
+        return res.toArray(new AvailableActivity[res.size()]);
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitModuleConfigurator.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitModuleConfigurator.java
new file mode 100644
index 000000000..89d8cc46d
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AccountKitModuleConfigurator.java
@@ -0,0 +1,151 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.facebook.plugin.utils.PsiHelper;
+import com.intellij.openapi.module.Module;
+import com.intellij.openapi.module.ModuleManager;
+import com.intellij.openapi.project.Project;
+import org.jetbrains.plugins.gradle.util.GradleConstants;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class AccountKitModuleConfigurator implements Configurator {
+    private final Configurator[] configurators;
+
+    public AccountKitModuleConfigurator(final String appName,
+                                        final String appId,
+                                        final String clientToken) {
+        this.configurators = createConfigurators(appName, appId, clientToken);
+    }
+
+    @Override
+    public boolean isConfigured(final Module module) {
+        for (Configurator configurator : configurators) {
+            if (!configurator.isConfigured(module)) {
+                return false;
+            }
+        }
+
+        return true;
+    }
+
+    @Override
+    public void doConfigure(final Module module) {
+        for (Configurator configurator : configurators) {
+            configurator.doConfigure(module);
+        }
+    }
+
+    private static Configurator[] createConfigurators(
+            final String appName,
+            final String appId,
+            final String clientToken) {
+
+        return new Configurator[]{
+                new GradleBuildConfigurator(
+                        "jcenter",
+                        "com.facebook.android:account-kit-sdk",
+                        "4.+"),
+                new AndroidManifestConfigurator(
+                        "com.facebook.accountkit.ui.AccountKitActivity")
+                        .addMetadata(
+                                "com.facebook.accountkit.ApplicationName",
+                                "@string/fb_app_name")
+                        .addMetadata(
+                                "com.facebook.sdk.ApplicationId",
+                                "@string/fb_app_id")
+                        .addMetadata(
+                                "com.facebook.accountkit.ClientToken",
+                                "@string/ak_client_token")
+                        .addPermission("android.permission.INTERNET")
+                        .addPermission("android.permission.READ_PHONE_STATE")
+                        .addPermission("android.permission.RECEIVE_SMS")
+                        .addPermission("android.permission.GET_ACCOUNTS"),
+                new AndroidResourcesConfigurator()
+                        .addResourceString("fb_app_id", appId)
+                        .addResourceString("fb_app_name", appName)
+                        .addResourceString("ak_client_token", clientToken)
+        };
+    }
+
+    public enum InstallationType {
+        CannotInstall,
+        AlreadyInstalled,
+        Available
+    }
+
+    public static final class AvailableModule {
+        private final Module module;
+        private final InstallationType installationType;
+
+        AvailableModule(final Module module, final InstallationType installationType) {
+            this.module = module;
+            this.installationType = installationType;
+        }
+
+        public Module getModule() {
+            return module;
+        }
+
+        public InstallationType getInstallationType() {
+            return installationType;
+        }
+
+        @Override
+        public String toString() {
+            String title = module.getName();
+            if (installationType == InstallationType.CannotInstall) {
+                title += " (unavailable)";
+            } else if (installationType == InstallationType.AlreadyInstalled) {
+                title += " (already installed)";
+            }
+
+            return title;
+        }
+    }
+
+    public static AvailableModule[] getModuleAvailabilities(final Project project) {
+        Configurator[] checkConfigurators = createConfigurators("", "", "");
+        Module[] allModules = ModuleManager.getInstance(project).getModules();
+        List<AvailableModule> res = new ArrayList<>();
+
+        for (Module module : allModules) {
+            InstallationType moduleType = InstallationType.CannotInstall;
+
+            if (PsiHelper.findAllFiles(module, GradleConstants.DEFAULT_SCRIPT_NAME).size() > 0) {
+                moduleType = InstallationType.AlreadyInstalled;
+
+                for (Configurator configurator : checkConfigurators) {
+                    if (!configurator.isConfigured(module)) {
+                        moduleType = InstallationType.Available;
+                        break;
+                    }
+                }
+            }
+
+            res.add(new AvailableModule(module, moduleType));
+        }
+
+        return res.toArray(new AvailableModule[res.size()]);
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidManifestConfigurator.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidManifestConfigurator.java
new file mode 100644
index 000000000..0d6eb9984
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidManifestConfigurator.java
@@ -0,0 +1,164 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.intellij.codeInsight.CodeInsightUtilCore;
+import com.intellij.ide.actions.OpenFileAction;
+import com.intellij.openapi.application.Result;
+import com.intellij.openapi.command.WriteCommandAction;
+import com.intellij.openapi.module.Module;
+import com.intellij.openapi.ui.Messages;
+import com.intellij.openapi.vfs.WritingAccessProvider;
+import com.intellij.psi.PsiFile;
+import com.intellij.psi.XmlElementFactory;
+import com.intellij.psi.xml.XmlElement;
+import com.intellij.psi.xml.XmlTag;
+import org.jetbrains.android.dom.manifest.Activity;
+import org.jetbrains.android.dom.manifest.Application;
+import org.jetbrains.android.dom.manifest.Manifest;
+import org.jetbrains.android.facet.AndroidFacet;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.ArrayList;
+import java.util.LinkedHashMap;
+import java.util.List;
+import java.util.Map;
+
+public class AndroidManifestConfigurator implements Configurator {
+
+    private static final String METADATA_TAG = "<meta-data/>";
+    private static final String PERMISSION_TAG = "<uses-permission/>";
+    private static final String NAME_ATTR = "android:name";
+    private static final String VALUE_ATTR = "android:value";
+
+    private final Map<String, String> metadata;
+    private final List<String> permissions;
+    private final String activityName;
+
+    AndroidManifestConfigurator(final String activityName) {
+        this.activityName = activityName;
+        this.metadata = new LinkedHashMap<>();
+        this.permissions = new ArrayList<>();
+    }
+
+    AndroidManifestConfigurator addMetadata(final String name, final String value) {
+        metadata.put(name, value);
+        return this;
+    }
+
+    AndroidManifestConfigurator addPermission(final String permission) {
+        permissions.add(permission);
+        return this;
+    }
+
+    @Override
+    public boolean isConfigured(final Module module) {
+        final Manifest androidManifest = getAndroidManifest(module);
+        if (androidManifest == null) {
+            return false;
+        }
+
+        if (!androidManifest.getXmlElement().getText().contains(activityName)) {
+            return false;
+        }
+
+        for (String metadataName : metadata.keySet()) {
+            if (!androidManifest.getXmlElement().getText().contains(metadataName)) {
+                return false;
+            }
+        }
+
+        for (String permission : permissions) {
+            if (!androidManifest.getXmlElement().getText().contains(permission)) {
+                return false;
+            }
+        }
+
+        return true;
+    }
+
+    @Override
+    public void doConfigure(final Module module) {
+        final Manifest androidManifest = getAndroidManifest(module);
+        if ((androidManifest == null) ||
+                (androidManifest.getApplication() == null) ||
+                !WritingAccessProvider.isPotentiallyWritable(
+                        androidManifest.getXmlElement().getContainingFile().getVirtualFile(),
+                        null)) {
+            Messages.showErrorDialog(
+                module.getProject(),
+                "Cannot find or modify Android manifest file for module " + module.getName(),
+                "Facebook SDK Plugin");
+            return;
+        }
+
+        final PsiFile manifestFile = androidManifest.getXmlElement().getContainingFile();
+        final Application application = androidManifest.getApplication();
+        final XmlElement applicationTag = application.getXmlElement();
+        final XmlElementFactory elementFactory = XmlElementFactory.getInstance(module.getProject());
+
+        new WriteCommandAction(manifestFile.getProject()) {
+            @Override
+            protected void run(@NotNull Result result) {
+
+                for (String permission : permissions) {
+                    if (!androidManifest.getXmlElement().getText().contains(permission)) {
+                        XmlTag permTag = elementFactory.createTagFromText(PERMISSION_TAG);
+                        permTag.setAttribute(NAME_ATTR, permission);
+                        androidManifest.getXmlElement().addBefore(permTag, applicationTag);
+                    }
+                }
+
+                for (Map.Entry<String, String> metadata : metadata.entrySet()) {
+                    if (!applicationTag.getText().contains(metadata.getKey())) {
+                        XmlTag mdTag = elementFactory.createTagFromText(METADATA_TAG);
+                        mdTag.setAttribute(NAME_ATTR, metadata.getKey());
+                        mdTag.setAttribute(VALUE_ATTR, metadata.getValue());
+                        application.getXmlElement().add(mdTag);
+                    }
+                }
+
+                if (!applicationTag.getText().contains(activityName)) {
+                    final Activity newActivity = application.addActivity();
+                    newActivity.getActivityClass().setStringValue(activityName);
+                }
+
+                CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(manifestFile);
+            }
+        }.execute();
+
+        OpenFileAction.openFile(manifestFile.getVirtualFile().getPath(), module.getProject());
+    }
+
+    private static Manifest getAndroidManifest(final Module module) {
+        final AndroidFacet facet = AndroidFacet.getInstance(module);
+        if (facet == null) {
+            return null;
+        }
+
+        final Manifest manifest = facet.getManifest();
+        if (manifest == null) {
+            return null;
+        }
+
+        return manifest;
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidResourcesConfigurator.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidResourcesConfigurator.java
new file mode 100644
index 000000000..4fd8efd6d
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/AndroidResourcesConfigurator.java
@@ -0,0 +1,125 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.android.ide.common.res2.ResourceItem;
+import com.android.resources.ResourceType;
+import com.android.tools.idea.res.LocalResourceRepository;
+import com.android.tools.idea.res.ModuleResourceRepository;
+import com.google.common.collect.ListMultimap;
+import com.intellij.codeInsight.CodeInsightUtilCore;
+import com.intellij.ide.actions.OpenFileAction;
+import com.intellij.openapi.application.Result;
+import com.intellij.openapi.command.WriteCommandAction;
+import com.intellij.openapi.module.Module;
+import com.intellij.psi.PsiFile;
+import com.intellij.psi.XmlElementFactory;
+import com.intellij.psi.xml.XmlTag;
+import org.apache.commons.lang.StringUtils;
+import org.jetbrains.annotations.NotNull;
+
+import java.util.LinkedHashMap;
+import java.util.List;
+import java.util.Map;
+
+public class AndroidResourcesConfigurator implements Configurator {
+
+    private static final String STRING_TAG = "<string/>";
+    private static final String NAME_ATTR = "name";
+
+    private final Map<String, String> resourceStrings = new LinkedHashMap<>();
+
+    AndroidResourcesConfigurator addResourceString(final String name, final String value) {
+        if (!StringUtils.isBlank(name) && !StringUtils.isBlank(value)) {
+            resourceStrings.put(name, value);
+        }
+        return this;
+    }
+
+    @Override
+    public boolean isConfigured(final Module module) {
+        LocalResourceRepository resourceRepository =
+                ModuleResourceRepository.getModuleResources(module, false);
+        if (resourceRepository == null) {
+            return false;
+        }
+
+        for (String resourceName : resourceStrings.keySet()) {
+            List<ResourceItem> resourceItems =
+                    resourceRepository.getResourceItem(ResourceType.STRING, resourceName);
+            if (resourceItems.size() == 0) {
+                return false;
+            }
+        }
+
+        return true;
+    }
+
+    @Override
+    public void doConfigure(final Module module) {
+        LocalResourceRepository resourceRepository =
+                ModuleResourceRepository.getModuleResources(module, true);
+        if (resourceRepository == null) {
+            return;
+        }
+
+        ListMultimap<String, ResourceItem> stringResources =
+                resourceRepository.getItems().get(ResourceType.STRING);
+        if (stringResources.size() == 0) {
+            return;
+        }
+
+        ResourceItem firstStringResource = stringResources.values().iterator().next();
+        XmlTag resourceTag = ModuleResourceRepository.getItemTag(
+                module.getProject(),
+                firstStringResource);
+        PsiFile resourceFile = ModuleResourceRepository.getItemPsiFile(
+                module.getProject(),
+                firstStringResource);
+        final XmlElementFactory elementFactory =
+                XmlElementFactory.getInstance(module.getProject());
+
+        new WriteCommandAction(resourceFile.getProject()) {
+            @Override
+            protected void run(@NotNull Result result) {
+
+                for (String resourceName : resourceStrings.keySet()) {
+                    List<ResourceItem> resourceItems =
+                            resourceRepository.getResourceItem(ResourceType.STRING, resourceName);
+                    if (resourceItems.size() == 0) {
+                        XmlTag newResourceTag = elementFactory.createTagFromText(STRING_TAG);
+                        newResourceTag.setAttribute(NAME_ATTR, resourceName);
+                        newResourceTag.add(elementFactory.createDisplayText(
+                                resourceStrings.get(resourceName)));
+
+                        resourceFile.addAfter(newResourceTag, resourceTag);
+                    }
+                }
+
+                CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(resourceFile);
+                resourceRepository.invalidateResourceDirs();
+                resourceRepository.sync();
+            }
+        }.execute();
+
+        OpenFileAction.openFile(resourceFile.getVirtualFile().getPath(), module.getProject());
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/Configurator.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/Configurator.java
new file mode 100644
index 000000000..384939767
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/Configurator.java
@@ -0,0 +1,30 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.intellij.openapi.module.Module;
+
+public interface Configurator {
+
+    boolean isConfigured(final Module module);
+
+    void doConfigure(final Module module);
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/GradleBuildConfigurator.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/GradleBuildConfigurator.java
new file mode 100644
index 000000000..2b84fa332
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/config/GradleBuildConfigurator.java
@@ -0,0 +1,195 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.config;
+
+import com.intellij.codeInsight.CodeInsightUtilCore;
+import com.intellij.ide.actions.OpenFileAction;
+import com.intellij.openapi.application.Result;
+import com.intellij.openapi.command.WriteCommandAction;
+import com.intellij.openapi.module.Module;
+import com.intellij.openapi.project.Project;
+import com.intellij.openapi.ui.Messages;
+import com.intellij.openapi.vfs.VfsUtil;
+import com.intellij.openapi.vfs.VirtualFile;
+import com.intellij.openapi.vfs.WritingAccessProvider;
+import com.intellij.psi.PsiElement;
+import com.intellij.psi.PsiFile;
+import com.intellij.psi.PsiManager;
+import com.intellij.psi.codeStyle.CodeStyleManager;
+import com.intellij.psi.util.PsiTreeUtil;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.plugins.gradle.util.GradleConstants;
+import org.jetbrains.plugins.groovy.lang.psi.GroovyFile;
+import org.jetbrains.plugins.groovy.lang.psi.GroovyPsiElementFactory;
+import org.jetbrains.plugins.groovy.lang.psi.api.statements.GrStatement;
+import org.jetbrains.plugins.groovy.lang.psi.api.statements.blocks.GrClosableBlock;
+import org.jetbrains.plugins.groovy.lang.psi.api.statements.expressions.GrExpression;
+import org.jetbrains.plugins.groovy.lang.psi.api.statements.expressions.path.GrMethodCallExpression;
+import org.jetbrains.plugins.groovy.lang.psi.api.util.GrStatementOwner;
+
+import java.io.File;
+
+public class GradleBuildConfigurator implements Configurator {
+
+    private static final String BLOCK_REPOSITORIES = "repositories";
+    private static final String BLOCK_DEPENDENCIES = "dependencies";
+    private static final String GRADLE_SCRIPT_NAME = GradleConstants.DEFAULT_SCRIPT_NAME;
+    private static final String FORMAT_REPOSITORY = "{repository}()";
+    private static final String FORMAT_DEPENDENCY = "compile '{library}:{version}'";
+
+    private final String repository;
+    private final String library;
+    private final String version;
+
+    GradleBuildConfigurator(final String repository,
+                                   final String library,
+                                   final String version) {
+        this.repository = repository;
+        this.library = library;
+        this.version = version;
+    }
+
+    @Override
+    public boolean isConfigured(final Module module) {
+        // First, check if the module has the dependency present
+        GroovyFile moduleGradleFile = getBuildGradleFile(module.getProject(), module);
+        if ((moduleGradleFile != null) &&
+                moduleGradleFile.getText().contains(library)) {
+            return true;
+        }
+
+        // If not, it might still be configured at a project level, so check that too
+        GroovyFile projectGradleFile = getBuildGradleFile(module.getProject(), null);
+        return ((projectGradleFile != null) &&
+                projectGradleFile.getText().contains(library));
+    }
+
+    @Override
+    public void doConfigure(final Module module) {
+        final GroovyFile gradleFile = getBuildGradleFile(module.getProject(), module);
+        if ((gradleFile != null) &&
+                WritingAccessProvider.isPotentiallyWritable(gradleFile.getVirtualFile(), null)) {
+
+            new WriteCommandAction(gradleFile.getProject()) {
+                @Override
+                protected void run(@NotNull Result result) {
+
+                    final GrClosableBlock repositoriesBlock =
+                            findOrCreateBlock(gradleFile, BLOCK_REPOSITORIES);
+                    if (!repositoriesBlock.getText().contains(repository)) {
+                        addChildExpression(
+                            repositoriesBlock,
+                            FORMAT_REPOSITORY.replace("{repository}", repository));
+                    }
+
+                    final GrClosableBlock dependenciesBlock =
+                            findOrCreateBlock(gradleFile, BLOCK_DEPENDENCIES);
+                    if (!repositoriesBlock.getText().contains(library)) {
+                        addChildExpression(
+                            dependenciesBlock,
+                            FORMAT_DEPENDENCY.replace("{library}", library)
+                                        .replace("{version}", version));
+                    }
+
+                    CodeInsightUtilCore.forcePsiPostprocessAndRestoreElement(gradleFile);
+                }
+            }.execute();
+
+            OpenFileAction.openFile(gradleFile.getVirtualFile().getPath(), module.getProject());
+        } else {
+            Messages.showErrorDialog(
+                module.getProject(),
+                "Cannot find or modify build.gradle file for module " + module.getName(),
+                "Facebook SDK Plugin");
+        }
+    }
+
+    private static GroovyFile getBuildGradleFile(final Project project, final Module module) {
+        final String basePath = (module == null)
+                ? project.getBasePath()
+                : new File(module.getModuleFilePath()).getParent();
+
+        final VirtualFile file = VfsUtil.findFileByIoFile(
+                new File(basePath + File.separator + GRADLE_SCRIPT_NAME),
+                true);
+        if (file == null) {
+            return null;
+        }
+
+        final PsiFile psiFile = PsiManager.getInstance(project).findFile(file);
+        if (psiFile instanceof GroovyFile) {
+            return (GroovyFile) psiFile;
+        } else {
+            return null;
+        }
+    }
+
+    private static GrClosableBlock getBlockByName(final PsiElement parent, final String name) {
+        final GrMethodCallExpression[] allExpressions =
+                PsiTreeUtil.getChildrenOfType(parent, GrMethodCallExpression.class);
+        if (allExpressions == null) {
+            return null;
+        }
+
+        for (GrMethodCallExpression expression : allExpressions) {
+            final GrExpression invokedExpression = expression.getInvokedExpression();
+
+            if ((expression.getClosureArguments().length > 0) &&
+                    (invokedExpression.getText().equalsIgnoreCase(name))) {
+                return expression.getClosureArguments()[0];
+            }
+        }
+
+        return null;
+    }
+
+    private static GrClosableBlock findOrCreateBlock(
+            final GrStatementOwner parent,
+            final String name) {
+        final GrClosableBlock block = getBlockByName(parent, name);
+        if (block != null) {
+            return block;
+        }
+
+        addChildExpression(parent, name + "{\n}\n");
+
+        return getBlockByName(parent, name);
+    }
+
+    private static GrExpression addChildExpression(
+            final GrStatementOwner parent,
+            final String exprText) {
+        final GroovyPsiElementFactory factory =
+                GroovyPsiElementFactory.getInstance(parent.getProject());
+        final GrExpression child = factory.createExpressionFromText(exprText);
+
+        CodeStyleManager.getInstance(parent.getProject()).reformat(child);
+
+        final GrStatement[] statements = parent.getStatements();
+        if (statements.length > 0) {
+            parent.addAfter(child, statements[statements.length - 1]);
+        } else {
+            parent.addAfter(child, parent.getFirstChild());
+        }
+
+        return child;
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompleted.form b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompleted.form
new file mode 100644
index 000000000..615760e18
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompleted.form
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.AccountKitCompletedForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="2" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="1069" height="369"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="34af8" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalTextPosition value="10"/>
+          <text resource-bundle="values/strings" key="completedText"/>
+          <verticalAlignment value="1"/>
+          <verticalTextPosition value="1"/>
+        </properties>
+      </component>
+      <vspacer id="66a18">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
+        </constraints>
+      </vspacer>
+    </children>
+  </grid>
+</form>
diff --git a/samples/RPSSample/src/com/example/rps/RpsApplication.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompletedForm.java
similarity index 62%
rename from samples/RPSSample/src/com/example/rps/RpsApplication.java
rename to plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompletedForm.java
index f6443f830..a9d223e1a 100644
--- a/samples/RPSSample/src/com/example/rps/RpsApplication.java
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitCompletedForm.java
@@ -1,5 +1,5 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
  * copy, modify, and distribute this software in source code or binary form for use
@@ -12,24 +12,33 @@
  *
  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.example.rps;
+package com.facebook.plugin.ui;
 
-import android.app.Application;
+import javax.swing.JComponent;
+import javax.swing.JPanel;
 
-import com.facebook.FacebookSdk;
-import com.facebook.appevents.AppEventsLogger;
+public class AccountKitCompletedForm implements WizardStep {
+    private JPanel mainPanel;
 
-public class RpsApplication extends Application {
     @Override
-    public void onCreate() {
-        super.onCreate();
-        FacebookSdk.sdkInitialize(getApplicationContext());
-        AppEventsLogger.activateApp(this);
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+
+    @Override
+    public void fillForm() {
+        // Nothing to fill
+    }
+
+    @Override
+    public boolean commitForm() {
+        // Nothing to commit
+        return true;
     }
 }
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivity.form b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivity.form
new file mode 100644
index 000000000..4d6951a66
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivity.form
@@ -0,0 +1,74 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.AccountKitInstallActivityForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="5" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="1154" height="263"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="8c970" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="2" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalTextPosition value="10"/>
+          <text resource-bundle="values/strings" key="configureActivityText"/>
+          <verticalAlignment value="1"/>
+          <verticalTextPosition value="1"/>
+        </properties>
+      </component>
+      <vspacer id="b1924">
+        <constraints>
+          <grid row="4" column="0" row-span="1" col-span="2" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
+        </constraints>
+      </vspacer>
+      <component id="ad7eb" class="javax.swing.JComboBox" binding="activitySelector">
+        <constraints>
+          <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="2" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+      </component>
+      <component id="d2f86" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <labelFor value="ad7eb"/>
+          <text value="Activity:"/>
+        </properties>
+      </component>
+      <component id="e5a56" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="2" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="Framework Request Code:"/>
+        </properties>
+      </component>
+      <component id="fea2c" class="javax.swing.JTextField" binding="requestCodeField">
+        <constraints>
+          <grid row="2" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="2" anchor="8" fill="0" indent="0" use-parent-layout="false">
+            <preferred-size width="300" height="-1"/>
+          </grid>
+        </constraints>
+        <properties>
+          <columns value="0"/>
+          <text value="42"/>
+        </properties>
+      </component>
+      <component id="ade2c" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="3" column="0" row-span="1" col-span="2" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalTextPosition value="10"/>
+          <text resource-bundle="values/strings" key="configureActivityDesc"/>
+          <verticalAlignment value="1"/>
+          <verticalTextPosition value="1"/>
+        </properties>
+      </component>
+    </children>
+  </grid>
+</form>
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivityForm.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivityForm.java
new file mode 100644
index 000000000..16d36550d
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallActivityForm.java
@@ -0,0 +1,95 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.facebook.plugin.config.AccountKitActivityConfigurator;
+import com.intellij.openapi.project.Project;
+import com.intellij.openapi.ui.Messages;
+import org.apache.commons.lang.StringUtils;
+
+import javax.swing.DefaultComboBoxModel;
+import javax.swing.JComboBox;
+import javax.swing.JComponent;
+import javax.swing.JPanel;
+import javax.swing.JTextField;
+
+public class AccountKitInstallActivityForm implements WizardStep {
+    private final Project project;
+
+    private JPanel mainPanel;
+    private JComboBox activitySelector;
+    private JTextField requestCodeField;
+
+    AccountKitInstallActivityForm(final Project project) {
+        this.project = project;
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+
+    @Override
+    public void fillForm() {
+        activitySelector.setModel(new DefaultComboBoxModel<>(
+                AccountKitActivityConfigurator.getActivityClasses(project)));
+    }
+
+    @Override
+    public boolean commitForm() {
+        AccountKitActivityConfigurator.AvailableActivity activity =
+                (AccountKitActivityConfigurator.AvailableActivity
+                        ) activitySelector.getSelectedItem();
+
+        if ((activity == null) || (activity.getPsiClass() == null)) {
+            Messages.showErrorDialog(
+                project,
+                "Please select a valid activity to continue.",
+                "Install Failed");
+            return false;
+        }
+
+        if (StringUtils.isBlank(requestCodeField.getText())) {
+            Messages.showErrorDialog(
+                project,
+                "Request Code cannot be blank.",
+                "Install Failed");
+            return false;
+        }
+
+        AccountKitActivityConfigurator activityConfigurator;
+        try {
+            activityConfigurator = new AccountKitActivityConfigurator(requestCodeField.getText());
+        } catch (Exception e) {
+            Messages.showErrorDialog(
+                project,
+                "Failed to load the activity configurator code.",
+                "Install Failed");
+            return false;
+        }
+
+        if (!activityConfigurator.isConfigured(activity.getPsiClass())) {
+            activityConfigurator.doConfigure(activity.getPsiClass());
+        }
+
+        return true;
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependencies.form b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependencies.form
new file mode 100644
index 000000000..f2d3f0571
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependencies.form
@@ -0,0 +1,109 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.AccountKitInstallDependenciesForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="7" column-count="2" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="1154" height="263"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="8c970" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="2" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalTextPosition value="10"/>
+          <text resource-bundle="values/strings" key="configureSDKText"/>
+          <verticalAlignment value="1"/>
+          <verticalTextPosition value="1"/>
+        </properties>
+      </component>
+      <vspacer id="b1924">
+        <constraints>
+          <grid row="6" column="0" row-span="1" col-span="2" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
+        </constraints>
+      </vspacer>
+      <component id="ad7eb" class="javax.swing.JComboBox" binding="moduleSelector">
+        <constraints>
+          <grid row="1" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="2" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties/>
+      </component>
+      <component id="d2f86" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <labelFor value="ad7eb"/>
+          <text value="Module:"/>
+        </properties>
+      </component>
+      <component id="e5a56" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="2" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="App Name:"/>
+        </properties>
+      </component>
+      <component id="fea2c" class="javax.swing.JTextField" binding="appNameField">
+        <constraints>
+          <grid row="2" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="2" anchor="8" fill="0" indent="0" use-parent-layout="false">
+            <preferred-size width="300" height="-1"/>
+          </grid>
+        </constraints>
+        <properties>
+          <columns value="0"/>
+        </properties>
+      </component>
+      <component id="4ee59" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="3" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="App Id:"/>
+        </properties>
+      </component>
+      <component id="6b35e" class="javax.swing.JTextField" binding="appIdField">
+        <constraints>
+          <grid row="3" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="2" anchor="8" fill="0" indent="0" use-parent-layout="false">
+            <preferred-size width="300" height="-1"/>
+          </grid>
+        </constraints>
+        <properties>
+          <columns value="0"/>
+        </properties>
+      </component>
+      <component id="a33e6" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="4" column="0" row-span="1" col-span="1" vsize-policy="0" hsize-policy="0" anchor="8" fill="0" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <text value="Client Token:"/>
+        </properties>
+      </component>
+      <component id="f22ed" class="javax.swing.JTextField" binding="clientTokenField">
+        <constraints>
+          <grid row="4" column="1" row-span="1" col-span="1" vsize-policy="0" hsize-policy="2" anchor="8" fill="0" indent="0" use-parent-layout="false">
+            <preferred-size width="300" height="-1"/>
+          </grid>
+        </constraints>
+        <properties>
+          <columns value="0"/>
+        </properties>
+      </component>
+      <component id="ade2c" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="5" column="0" row-span="1" col-span="2" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalTextPosition value="10"/>
+          <text resource-bundle="values/strings" key="configureParamsText"/>
+          <verticalAlignment value="1"/>
+          <verticalTextPosition value="1"/>
+        </properties>
+      </component>
+    </children>
+  </grid>
+</form>
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependenciesForm.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependenciesForm.java
new file mode 100644
index 000000000..2a312a350
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallDependenciesForm.java
@@ -0,0 +1,134 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.facebook.plugin.config.AccountKitModuleConfigurator;
+import com.intellij.openapi.project.Project;
+import com.intellij.openapi.ui.Messages;
+import org.apache.commons.lang.StringUtils;
+
+import javax.swing.DefaultComboBoxModel;
+import javax.swing.JComboBox;
+import javax.swing.JComponent;
+import javax.swing.JPanel;
+import javax.swing.JTextField;
+
+public class AccountKitInstallDependenciesForm implements WizardStep {
+    private final Project project;
+
+    private JPanel mainPanel;
+    private JComboBox moduleSelector;
+    private JTextField appNameField;
+    private JTextField appIdField;
+    private JTextField clientTokenField;
+
+    AccountKitInstallDependenciesForm(final Project project) {
+        this.project = project;
+    }
+
+    @Override
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+
+    @Override
+    public void fillForm() {
+        moduleSelector.setModel(new DefaultComboBoxModel<>(
+                AccountKitModuleConfigurator.getModuleAvailabilities(project)));
+    }
+
+    @Override
+    public boolean commitForm() {
+        AccountKitModuleConfigurator.AvailableModule selectedModule =
+                (AccountKitModuleConfigurator.AvailableModule) moduleSelector.getSelectedItem();
+
+        if (selectedModule == null) {
+            Messages.showErrorDialog(
+                project,
+                "Please select a module to continue.",
+                "Install Failed");
+            return false;
+        }
+
+        if (selectedModule.getInstallationType() ==
+                AccountKitModuleConfigurator.InstallationType.CannotInstall) {
+            Messages.showErrorDialog(
+                project,
+                "Cannot install AccountKit on module " +
+                  selectedModule.getModule().getName() +
+                  " because it either is not an Android module " +
+                  "or is not built using Gradle.",
+                "Install Failed");
+            return false;
+        }
+
+        if (selectedModule.getInstallationType() ==
+                AccountKitModuleConfigurator.InstallationType.AlreadyInstalled) {
+            return true;
+        }
+
+        if (StringUtils.isBlank(appNameField.getText())) {
+            Messages.showErrorDialog(
+                project,
+                "App Name cannot be blank.",
+                "Install Failed");
+            return false;
+        }
+
+        if (StringUtils.isBlank(appIdField.getText()) ||
+                !StringUtils.isNumeric(appIdField.getText())) {
+            Messages.showErrorDialog(
+                project,
+                "App Id must be a valid number.",
+                "Install Failed");
+            return false;
+        }
+
+        if (StringUtils.isBlank(clientTokenField.getText())) {
+            Messages.showErrorDialog(
+                project,
+                "Client Token cannot be blank.",
+                "Install Failed");
+            return false;
+        }
+
+        AccountKitModuleConfigurator accountKitModuleConfigurator =
+                new AccountKitModuleConfigurator(
+                        appNameField.getText(),
+                        appIdField.getText(),
+                        clientTokenField.getText());
+
+        if (!accountKitModuleConfigurator.isConfigured(selectedModule.getModule())) {
+            try {
+                accountKitModuleConfigurator.doConfigure(selectedModule.getModule());
+            } catch (Exception e) {
+                Messages.showErrorDialog(
+                    project,
+                    "Something went wrong while installing module " +
+                      selectedModule.getModule().getName() +
+                      ": \n" + e.getMessage(),
+                    "Install Failed");
+            }
+        }
+
+        return true;
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallerWizard.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallerWizard.java
new file mode 100644
index 000000000..22a5538ef
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitInstallerWizard.java
@@ -0,0 +1,133 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import com.intellij.openapi.project.Project;
+import com.intellij.openapi.ui.DialogWrapper;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+import javax.swing.Action;
+import javax.swing.JComponent;
+import javax.swing.JPanel;
+import java.awt.Dimension;
+import java.awt.GridLayout;
+import java.awt.event.ActionEvent;
+
+public class AccountKitInstallerWizard extends DialogWrapper {
+
+    private static final Dimension defaultMinSize = new Dimension(800, 400);
+    private static final Dimension defaultMaxSize = new Dimension(800, 600);
+
+    private JPanel mainPanel;
+
+    private WizardStep[] wizardSteps;
+    private WizardAction previousAction;
+    private WizardAction nextAction;
+    private int currentStep = 0;
+
+    public AccountKitInstallerWizard(final Project project) {
+        super(project);
+
+        wizardSteps = new WizardStep[]{
+                new AccountKitPrerequisitesForm(),
+                new AccountKitInstallDependenciesForm(project),
+                new AccountKitInstallActivityForm(project),
+                new AccountKitCompletedForm()
+        };
+
+        setTitle("Install AccountKit SDK");
+        init();
+        setStep(0, false);
+    }
+
+    @NotNull
+    @Override
+    protected Action[] createLeftSideActions() {
+        return new Action[]{
+                new DialogWrapperExitAction("Close", CLOSE_EXIT_CODE)
+        };
+    }
+
+    @NotNull
+    @Override
+    protected Action[] createActions() {
+        previousAction = new WizardAction("< Previous", -1);
+        nextAction = new WizardAction("Next >", 1);
+        return new Action[]{
+                previousAction,
+                nextAction
+        };
+    }
+
+    @Nullable
+    @Override
+    protected JComponent createCenterPanel() {
+        mainPanel = new JPanel(true);
+        mainPanel.setMinimumSize(defaultMinSize);
+        mainPanel.setMaximumSize(defaultMaxSize);
+        mainPanel.setLayout(new GridLayout(0, 1));
+        return mainPanel;
+    }
+
+    private void setStep(final int newStep, final boolean shouldCommit) {
+        if ((newStep < 0) || (newStep >= wizardSteps.length) || (mainPanel == null)) {
+            return;
+        }
+
+        if (shouldCommit) {
+            if (!wizardSteps[currentStep].commitForm()) {
+                return;
+            }
+        }
+
+        currentStep = newStep;
+        wizardSteps[newStep].fillForm();
+
+        JComponent centerPanel = wizardSteps[newStep].getComponent();
+        centerPanel.setMinimumSize(defaultMinSize);
+        centerPanel.setMaximumSize(defaultMaxSize);
+        centerPanel.invalidate();
+        centerPanel.updateUI();
+
+        mainPanel.removeAll();
+        mainPanel.add(centerPanel);
+        mainPanel.invalidate();
+        mainPanel.updateUI();
+
+        previousAction.setEnabled(currentStep > 0);
+        nextAction.setEnabled(currentStep < wizardSteps.length - 1);
+    }
+
+    protected final class WizardAction extends DialogWrapperAction {
+        final int delta;
+
+        private WizardAction(@NotNull final String name, final int delta) {
+            super(name);
+            this.delta = delta;
+        }
+
+        @Override
+        protected void doAction(ActionEvent actionEvent) {
+            setStep(currentStep + delta, delta > 0);
+        }
+    }
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisites.form b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisites.form
new file mode 100644
index 000000000..93e0bc31a
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisites.form
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<form xmlns="http://www.intellij.com/uidesigner/form/" version="1" bind-to-class="com.facebook.plugin.ui.AccountKitPrerequisitesForm">
+  <grid id="27dc6" binding="mainPanel" layout-manager="GridLayoutManager" row-count="2" column-count="1" same-size-horizontally="false" same-size-vertically="false" hgap="-1" vgap="-1">
+    <margin top="0" left="0" bottom="0" right="0"/>
+    <constraints>
+      <xy x="20" y="20" width="1069" height="369"/>
+    </constraints>
+    <properties/>
+    <border type="none"/>
+    <children>
+      <component id="34af8" class="javax.swing.JLabel">
+        <constraints>
+          <grid row="0" column="0" row-span="1" col-span="1" vsize-policy="3" hsize-policy="7" anchor="1" fill="1" indent="0" use-parent-layout="false"/>
+        </constraints>
+        <properties>
+          <horizontalTextPosition value="10"/>
+          <text resource-bundle="values/strings" key="prereqsText"/>
+          <verticalAlignment value="1"/>
+          <verticalTextPosition value="1"/>
+        </properties>
+      </component>
+      <vspacer id="66a18">
+        <constraints>
+          <grid row="1" column="0" row-span="1" col-span="1" vsize-policy="6" hsize-policy="1" anchor="0" fill="2" indent="0" use-parent-layout="false"/>
+        </constraints>
+      </vspacer>
+    </children>
+  </grid>
+</form>
diff --git a/samples/Iconicus/src/com/example/iconicus/IconicusApplication.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisitesForm.java
similarity index 62%
rename from samples/Iconicus/src/com/example/iconicus/IconicusApplication.java
rename to plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisitesForm.java
index 3b21b9f4e..b7e9f4e29 100644
--- a/samples/Iconicus/src/com/example/iconicus/IconicusApplication.java
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/AccountKitPrerequisitesForm.java
@@ -1,5 +1,5 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
  * copy, modify, and distribute this software in source code or binary form for use
@@ -12,24 +12,33 @@
  *
  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.example.iconicus;
+package com.facebook.plugin.ui;
 
-import android.app.Application;
+import javax.swing.JComponent;
+import javax.swing.JPanel;
 
-import com.facebook.FacebookSdk;
-import com.facebook.appevents.AppEventsLogger;
+public class AccountKitPrerequisitesForm implements WizardStep {
+    private JPanel mainPanel;
 
-public class IconicusApplication extends Application {
     @Override
-    public void onCreate() {
-        super.onCreate();
-        FacebookSdk.sdkInitialize(getApplicationContext());
-        AppEventsLogger.activateApp(this);
+    public JComponent getComponent() {
+        return mainPanel;
+    }
+
+    @Override
+    public void fillForm() {
+        // Nothing to fill
+    }
+
+    @Override
+    public boolean commitForm() {
+        // Nothing to commit
+        return true;
     }
 }
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/WizardStep.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/WizardStep.java
new file mode 100644
index 000000000..95cf1f482
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/ui/WizardStep.java
@@ -0,0 +1,31 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.ui;
+
+import javax.swing.JComponent;
+
+public interface WizardStep {
+    JComponent getComponent();
+
+    void fillForm();
+
+    boolean commitForm();
+}
diff --git a/plugin/FacebookSDKPlugin/src/com/facebook/plugin/utils/PsiHelper.java b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/utils/PsiHelper.java
new file mode 100644
index 000000000..e14a32037
--- /dev/null
+++ b/plugin/FacebookSDKPlugin/src/com/facebook/plugin/utils/PsiHelper.java
@@ -0,0 +1,145 @@
+/*
+ * Copyright (c) 2017-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.plugin.utils;
+
+import com.intellij.openapi.module.Module;
+import com.intellij.openapi.project.Project;
+import com.intellij.openapi.roots.ProjectFileIndex;
+import com.intellij.openapi.roots.ProjectRootManager;
+import com.intellij.openapi.ui.Messages;
+import com.intellij.openapi.vfs.VirtualFile;
+import com.intellij.psi.PsiElement;
+import com.intellij.psi.PsiFile;
+import com.intellij.psi.search.FilenameIndex;
+import com.intellij.psi.search.GlobalSearchScope;
+import org.apache.commons.lang.StringUtils;
+
+import java.io.FileOutputStream;
+import java.io.PrintStream;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+public final class PsiHelper {
+
+    public static Map<Module, PsiFile> findAllFiles(
+            final Project project,
+            final String fileName) {
+        ProjectFileIndex fileIndex = ProjectRootManager.getInstance(project).getFileIndex();
+        String projectFilePath = project.getBasePath();
+
+        PsiFile[] psiFiles = FilenameIndex.getFilesByName(
+                project,
+                fileName,
+                GlobalSearchScope.projectScope(project));
+
+        Map<Module, PsiFile> moduleFiles = new HashMap<>();
+        for (PsiFile psiFile : psiFiles) {
+            try {
+                VirtualFile virtualFile = psiFile.getVirtualFile();
+                Module module = fileIndex.getModuleForFile(virtualFile);
+                String modulePath = module.getModuleFile().getParent().getPath();
+
+                if (!modulePath.equals(projectFilePath)) {
+                    moduleFiles.put(module, psiFile);
+                }
+            } catch (Exception e) {
+                // Swallow
+            }
+        }
+
+        return moduleFiles;
+    }
+
+    public static List<PsiFile> findAllFiles(final Module module, final String fileName) {
+        ProjectFileIndex fileIndex =
+                ProjectRootManager.getInstance(module.getProject()).getFileIndex();
+
+        PsiFile[] psiFiles = FilenameIndex.getFilesByName(
+                module.getProject(),
+                fileName,
+                module.getModuleContentScope());
+
+        List<PsiFile> moduleFiles = new ArrayList<>();
+        for (PsiFile psiFile : psiFiles) {
+            try {
+                VirtualFile virtualFile = psiFile.getVirtualFile();
+                Module fileModule = fileIndex.getModuleForFile(virtualFile);
+
+                if (fileModule == module) {
+                    moduleFiles.add(psiFile);
+                }
+            } catch (Exception e) {
+                // Swallow
+            }
+        }
+
+        return moduleFiles;
+    }
+
+    /**
+     * This class should not be present in the final release.
+     * I'm just using it here for my own sanity because digging down the Psi tree inside
+     * the debugger is really unpleasant
+     */
+    public static class Printer {
+        private static PrintStream out = null;
+        private static final String fileName = "/Users/plj/printedElements";
+
+        public static void printElement(final PsiElement element) {
+            try {
+                if (out == null) {
+                    out = new PrintStream(new FileOutputStream(fileName));
+                }
+                out.println(element.getContainingFile().getName());
+                out.println("===============================================================");
+                printElement(out, "", element);
+                out.println("===============================================================\n\n");
+            } catch (Exception e) {
+                Messages.showErrorDialog(e.toString(), "Error in Printer");
+            }
+        }
+
+        private static void printElement(
+                final PrintStream out,
+                final String indent,
+                final PsiElement element)
+                throws Exception {
+            String contents = element.getText();
+            int i = contents.indexOf('\n');
+            if (i >= 0) {
+                contents = contents.substring(0, i) + "\\n...";
+            }
+
+            out.printf(StringUtils.rightPad(indent + element.getClass().getSimpleName(), 40));
+            out.print(StringUtils.rightPad(element.toString(), 40));
+            out.print("| ");
+            out.print(indent.replace("+", " "));
+            out.print(contents);
+            out.println();
+
+            for (PsiElement child : element.getChildren()) {
+                printElement(out, indent + "+ ", child);
+            }
+        }
+    }
+}
diff --git a/samples/HelloFacebookSample/AndroidManifest.xml b/samples/HelloFacebookSample/AndroidManifest.xml
index 525cd8323..cb9bd5e9d 100644
--- a/samples/HelloFacebookSample/AndroidManifest.xml
+++ b/samples/HelloFacebookSample/AndroidManifest.xml
@@ -28,7 +28,6 @@
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
 
     <application
-        android:name=".HelloFacebookSampleApplication"
         android:icon="@drawable/icon"
         android:label="@string/app_name"
         android:theme="@android:style/Theme.NoTitleBar">
diff --git a/samples/HelloFacebookSample/BUCK b/samples/HelloFacebookSample/BUCK
deleted file mode 100644
index 9796c61d9..000000000
--- a/samples/HelloFacebookSample/BUCK
+++ /dev/null
@@ -1,35 +0,0 @@
-android_resource(
-  name = 'res',
-  res = 'res',
-  package = 'com.example.hellofacebook',
-  deps = [
-    '//facebook:android-sdk',
-  ],
-)
-
-android_library(
-  name = 'lib',
-  srcs = glob(['src/**/*.java']),
-  deps = [
-    ':res',
-    '//facebook:android-sdk',
-    '//libs:android-support-v4',
-  ],
-)
-
-android_binary(
-  name = 'app',
-  manifest = 'AndroidManifest.xml',
-  keystore = '//keystores:debug',
-  package_type = 'debug',
-  deps = [
-    ':lib',
-    '//facebook:android-sdk',
-    '//libs:android-support-v4',
-  ],
-)
-
-project_config(
-  src_target = ':app',
-  src_roots = ['src'],
-)
diff --git a/samples/HelloFacebookSample/build.gradle b/samples/HelloFacebookSample/build.gradle
index 8ba946d53..6449d9482 100644
--- a/samples/HelloFacebookSample/build.gradle
+++ b/samples/HelloFacebookSample/build.gradle
@@ -1,7 +1,8 @@
 apply plugin: 'com.android.application'
 
 dependencies {
-    compile project(':facebook')
+    compile project(':facebook-login')
+    compile project(':facebook-share')
 }
 
 android {
@@ -9,6 +10,7 @@ android {
     buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
 
     defaultConfig {
+        applicationId 'com.example.hellofacebook'
         minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
         targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
     }
diff --git a/samples/HelloFacebookSample/res/drawable-hdpi/icon.png b/samples/HelloFacebookSample/res/drawable-hdpi/icon.png
index 0a0d7cc73..c9d6b7c29 100644
Binary files a/samples/HelloFacebookSample/res/drawable-hdpi/icon.png and b/samples/HelloFacebookSample/res/drawable-hdpi/icon.png differ
diff --git a/samples/HelloFacebookSample/res/drawable-mdpi/icon.png b/samples/HelloFacebookSample/res/drawable-mdpi/icon.png
index b4507c0e7..1b1ebfac0 100644
Binary files a/samples/HelloFacebookSample/res/drawable-mdpi/icon.png and b/samples/HelloFacebookSample/res/drawable-mdpi/icon.png differ
diff --git a/samples/HelloFacebookSample/res/drawable-xhdpi/icon.png b/samples/HelloFacebookSample/res/drawable-xhdpi/icon.png
index 6e8424602..6dfcfd003 100644
Binary files a/samples/HelloFacebookSample/res/drawable-xhdpi/icon.png and b/samples/HelloFacebookSample/res/drawable-xhdpi/icon.png differ
diff --git a/samples/HelloFacebookSample/res/drawable/icon.png b/samples/HelloFacebookSample/res/drawable/icon.png
index b4507c0e7..1b1ebfac0 100644
Binary files a/samples/HelloFacebookSample/res/drawable/icon.png and b/samples/HelloFacebookSample/res/drawable/icon.png differ
diff --git a/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java b/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java
index 328e6e9d1..6dce0c7d0 100644
--- a/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java
+++ b/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java
@@ -34,7 +34,9 @@
 import android.widget.TextView;
 
 import com.facebook.*;
-import com.facebook.appevents.AppEventsLogger;
+import com.facebook.AccessToken;
+import com.facebook.FacebookException;
+import com.facebook.Profile;
 import com.facebook.login.LoginManager;
 import com.facebook.login.LoginResult;
 import com.facebook.login.widget.ProfilePictureView;
@@ -114,7 +116,6 @@ private void showResult(String title, String alertMessage) {
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        FacebookSdk.sdkInitialize(this.getApplicationContext());
 
         callbackManager = CallbackManager.Factory.create();
 
@@ -225,6 +226,7 @@ protected void onActivityResult(int requestCode, int resultCode, Intent data) {
     protected void onDestroy() {
         super.onDestroy();
         profileTracker.stopTracking();
+        LoginManager.getInstance().unregisterCallback(callbackManager);
     }
 
     private void updateUI() {
diff --git a/samples/Iconicus/AndroidManifest.xml b/samples/Iconicus/AndroidManifest.xml
index 40b0a1059..f82f3e846 100644
--- a/samples/Iconicus/AndroidManifest.xml
+++ b/samples/Iconicus/AndroidManifest.xml
@@ -23,7 +23,6 @@
     package="com.example.iconicus">
     <uses-permission android:name="android.permission.INTERNET" />
     <application
-        android:name=".IconicusApplication"
         android:allowBackup="true"
         android:icon="@drawable/ic_launcher"
         android:label="@string/app_name"
diff --git a/samples/Iconicus/BUCK b/samples/Iconicus/BUCK
deleted file mode 100644
index 7d7dfd9fb..000000000
--- a/samples/Iconicus/BUCK
+++ /dev/null
@@ -1,35 +0,0 @@
-android_resource(
-  name = 'res',
-  res = 'res',
-  package = 'com.example.iconicus',
-  deps = [
-    '//facebook:android-sdk',
-  ],
-)
-
-android_library(
-  name = 'lib',
-  srcs = glob(['src/**/*.java']),
-  deps = [
-    ':res',
-    '//facebook:android-sdk',
-    '//libs:android-support-v4',
-  ],
-)
-
-android_binary(
-  name = 'app',
-  manifest = 'AndroidManifest.xml',
-  keystore = '//keystores:debug',
-  package_type = 'debug',
-  deps = [
-    ':lib',
-    '//facebook:android-sdk',
-    '//libs:android-support-v4',
-  ],
-)
-
-project_config(
-  src_target = ':app',
-  src_roots = ['src'],
-)
diff --git a/samples/Iconicus/build.gradle b/samples/Iconicus/build.gradle
index 2c95ebc24..c064c9a24 100644
--- a/samples/Iconicus/build.gradle
+++ b/samples/Iconicus/build.gradle
@@ -5,7 +5,7 @@ repositories {
 }
 
 dependencies {
-    compile project(':facebook')
+    compile project(':facebook-share')
     // In order to test a specific version published on maven, comment out the project compile
     // directive and and comment this line and update to the specific version.
     // compile 'com.facebook.android:facebook-android-sdk:4.0.1'
diff --git a/samples/Iconicus/src/com/example/iconicus/MainActivity.java b/samples/Iconicus/src/com/example/iconicus/MainActivity.java
index b071453c9..ba6fe0386 100644
--- a/samples/Iconicus/src/com/example/iconicus/MainActivity.java
+++ b/samples/Iconicus/src/com/example/iconicus/MainActivity.java
@@ -29,7 +29,6 @@
 import android.widget.GridView;
 import android.widget.Toast;
 
-import com.facebook.FacebookSdk;
 import com.facebook.share.model.ShareLinkContent;
 import com.facebook.share.widget.SendButton;
 import com.facebook.share.widget.ShareButton;
diff --git a/samples/LoginSample/build.gradle b/samples/LoginSample/build.gradle
index eb806cb5e..673fa4d90 100644
--- a/samples/LoginSample/build.gradle
+++ b/samples/LoginSample/build.gradle
@@ -13,8 +13,12 @@ android {
     }
 
     buildTypes {
+        debug {
+            minifyEnabled true
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
         release {
-            minifyEnabled false
+            minifyEnabled true
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
@@ -35,7 +39,7 @@ android {
 
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
-    compile project(':facebook')
+    compile project(':facebook-login')
     compile 'com.android.support:appcompat-v7:24.1.1'
     compile 'com.facebook.android:account-kit-sdk:4.+'
     testCompile 'junit:junit:4.12'
diff --git a/samples/LoginSample/src/main/AndroidManifest.xml b/samples/LoginSample/src/main/AndroidManifest.xml
index 4028e1e9f..b590a02d5 100644
--- a/samples/LoginSample/src/main/AndroidManifest.xml
+++ b/samples/LoginSample/src/main/AndroidManifest.xml
@@ -29,7 +29,6 @@
     <uses-permission android:name="android.permission.GET_ACCOUNTS" />
 
     <application
-        android:name=".LoginSampleApplication"
         android:allowBackup="true"
         android:icon="@mipmap/ic_launcher"
         android:label="@string/app_name"
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/MainActivity.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/MainActivity.java
index 4c31f324a..d229254c6 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/MainActivity.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/MainActivity.java
@@ -21,12 +21,11 @@
 package com.facebook.samples.loginsample;
 
 import android.content.Intent;
-import android.support.v7.app.AppCompatActivity;
 import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
 import android.view.View;
 import android.widget.Button;
-import com.facebook.FacebookSdk;
-import com.facebook.accountkit.AccountKit;
+
 import com.facebook.samples.loginsample.accountkit.AccountKitLoginActivity;
 import com.facebook.samples.loginsample.facebook.FacebookLoginActivity;
 
@@ -42,8 +41,6 @@ protected void onCreate(final Bundle savedInstanceState) {
     }
 
     private void initFacebookLogin() {
-        FacebookSdk.sdkInitialize(getApplicationContext());
-
         final Button fbLoginButton = (Button) findViewById(R.id.fb_login_button);
         fbLoginButton.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -54,8 +51,6 @@ public void onClick(View v) {
     }
 
     private void initAccountKitLogin() {
-        AccountKit.initialize(getApplicationContext());
-
         final Button akLoginButton = (Button) findViewById(R.id.ak_login_button);
         akLoginButton.setOnClickListener(new View.OnClickListener() {
             @Override
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitLoginActivity.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitLoginActivity.java
index 836b90a36..eb2994572 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitLoginActivity.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitLoginActivity.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.loginsample.accountkit;
+ package com.facebook.samples.loginsample.accountkit;
 
 import android.Manifest;
 import android.annotation.TargetApi;
@@ -31,44 +31,61 @@
 import android.content.pm.PackageManager;
 import android.os.Build;
 import android.os.Bundle;
+import android.support.annotation.ColorInt;
+import android.support.annotation.DrawableRes;
 import android.support.annotation.NonNull;
+import android.support.annotation.StyleRes;
+import android.support.v4.content.ContextCompat;
 import android.support.v4.content.LocalBroadcastManager;
 import android.support.v7.app.AppCompatActivity;
+import android.util.SparseArray;
 import android.view.View;
 import android.widget.AdapterView;
 import android.widget.ArrayAdapter;
 import android.widget.CompoundButton;
-import android.widget.LinearLayout;
+import android.widget.SeekBar;
 import android.widget.Spinner;
 import android.widget.Switch;
+import android.widget.TextView;
 import android.widget.Toast;
 
 import com.facebook.accountkit.AccessToken;
 import com.facebook.accountkit.AccountKit;
 import com.facebook.accountkit.AccountKitError;
 import com.facebook.accountkit.AccountKitLoginResult;
+import com.facebook.accountkit.ui.AccountKitActivity;
 import com.facebook.accountkit.ui.AccountKitConfiguration;
+import com.facebook.accountkit.ui.SkinManager;
 import com.facebook.accountkit.ui.ButtonType;
 import com.facebook.accountkit.ui.LoginType;
 import com.facebook.accountkit.ui.TextPosition;
+import com.facebook.accountkit.ui.ThemeUIManager;
+import com.facebook.accountkit.ui.UIManager;
 import com.facebook.samples.loginsample.R;
 
 import java.util.ArrayList;
-import java.util.HashMap;
 import java.util.List;
-import java.util.Map;
 import java.util.UUID;
 
 public class AccountKitLoginActivity extends AppCompatActivity {
     private static final int FRAMEWORK_REQUEST_CODE = 1;
 
+    private static final @DrawableRes int DEFAULT_SKIN_BACKGROUND_IMAGE = R.drawable.dog;
+    private static final int TINT_SEEKBAR_ADJUSTMENT = 55;
+
     private Switch advancedUISwitch;
+    private SkinManager.Skin skin;
+    private Switch skinBackgroundImage;
+    private TextView skinBackgroundTintIntensityTitle;
+    private SeekBar skinBackgroundTintIntensity;
+    private Spinner skinTintSpinner;
     private ButtonType confirmButton;
     private ButtonType entryButton;
     private String initialStateParam;
     private int nextPermissionsRequestCode = 4000;
-    private final Map<Integer, OnCompleteListener> permissionsListeners = new HashMap<>();
-    private int selectedThemeId = -1;
+    private final SparseArray<OnCompleteListener> permissionsListeners = new SparseArray<>();
+    private @StyleRes int selectedThemeId = -1;
+    private @DrawableRes int selectedBackgroundId = -1;
     private BroadcastReceiver switchLoginTypeReceiver;
     private TextPosition textPosition;
 
@@ -79,12 +96,47 @@
     @Override
     protected void onCreate(final Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.account_kit_activity);
+        setContentView(R.layout.accountkit_activity_main);
 
         if (AccountKit.getCurrentAccessToken() != null) {
             showHelloActivity(null);
         }
 
+        final View skinUIOptionsLayout = setupSkinUIOptions();
+        skinBackgroundTintIntensityTitle =
+                (TextView) skinUIOptionsLayout.findViewById(R.id.tint_intensity_title);
+        skinBackgroundTintIntensity =
+                (SeekBar) skinUIOptionsLayout.findViewById(R.id.tint_intensity_field);
+        skinBackgroundTintIntensity.setOnSeekBarChangeListener(
+                new SeekBar.OnSeekBarChangeListener() {
+                    @Override
+                    public void onProgressChanged(
+                            final SeekBar seekBar,
+                            final int progress,
+                            final boolean fromUser) {
+                        skinBackgroundTintIntensityTitle.setText(getString(
+                                R.string.config_tint_intensity_label,
+                                progress + TINT_SEEKBAR_ADJUSTMENT));
+                    }
+
+                    @Override
+                    public void onStartTrackingTouch(SeekBar seekBar) { /* no op */ }
+
+                    @Override
+                    public void onStopTrackingTouch(SeekBar seekBar) { /* no op */ }
+                });
+        skinBackgroundTintIntensity.setProgress(75 - TINT_SEEKBAR_ADJUSTMENT);
+
+        skinBackgroundImage = (Switch) findViewById(R.id.background_image);
+        skinBackgroundImage.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+            @Override
+            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
+                skinUIOptionsLayout.setVisibility(
+                        (isSkinSelected() && getBackgroundImage() >= 0) ?
+                                View.VISIBLE :
+                                View.GONE);
+            }
+        });
         final Spinner themeSpinner = (Spinner) findViewById(R.id.theme_spinner);
         if (themeSpinner != null) {
             final ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(
@@ -99,55 +151,86 @@ public void onItemSelected(
                         final View view,
                         final int position,
                         final long id) {
+
+                    // init defaults
+                    skin = SkinManager.Skin.NONE;
+                    selectedThemeId = -1;
+                    selectedBackgroundId = -1;
+
                     switch (position) {
                         case 0:
-                            selectedThemeId = R.style.AppLoginTheme;
+                            skin = SkinManager.Skin.CLASSIC;
+                            advancedUISwitch.setChecked(false);
                             break;
                         case 1:
-                            selectedThemeId = R.style.AppLoginTheme_Salmon;
+                            skin = SkinManager.Skin.CONTEMPORARY;
+                            advancedUISwitch.setChecked(false);
                             break;
                         case 2:
-                            selectedThemeId = R.style.AppLoginTheme_Yellow;
+                            selectedThemeId = -1;
+                            skin = SkinManager.Skin.TRANSLUCENT;
+                            advancedUISwitch.setChecked(false);
                             break;
                         case 3:
-                            selectedThemeId = R.style.AppLoginTheme_Red;
+                            selectedThemeId = R.style.AppLoginTheme_Salmon;
                             break;
                         case 4:
-                            selectedThemeId = R.style.AppLoginTheme_Dog;
+                            selectedThemeId = R.style.AppLoginTheme_Yellow;
                             break;
                         case 5:
-                            selectedThemeId = R.style.AppLoginTheme_Bicycle;
+                            selectedThemeId = R.style.AppLoginTheme_Red;
                             break;
                         case 6:
+                            skin = SkinManager.Skin.CLASSIC;
+                            advancedUISwitch.setChecked(false);
+                            selectedBackgroundId = R.drawable.dog;
+                            break;
+                        case 7:
+                            selectedThemeId = R.style.AppLoginTheme_Bicycle;
+                            break;
+                        case 8:
                             selectedThemeId = R.style.AppLoginTheme_Reverb_A;
                             advancedUISwitch.setChecked(true);
                             break;
-                        case 7:
+                        case 9:
                             selectedThemeId = R.style.AppLoginTheme_Reverb_B;
                             advancedUISwitch.setChecked(true);
                             break;
-                        case 8:
+                        case 10:
                             selectedThemeId = R.style.AppLoginTheme_Reverb_C;
                             advancedUISwitch.setChecked(true);
                             break;
                         default:
-                            selectedThemeId = -1;
+                            advancedUISwitch.setChecked(false);
                             break;
                     }
+
+                    skinBackgroundImage.setVisibility(isSkinSelected() ? View.VISIBLE : View.GONE);
+                    skinUIOptionsLayout.setVisibility(
+                            (isSkinSelected() && getBackgroundImage() >= 0) ?
+                                    View.VISIBLE :
+                                    View.GONE);
                 }
 
                 @Override
                 public void onNothingSelected(final AdapterView<?> parent) {
                     selectedThemeId = -1;
+                    selectedBackgroundId = -1;
+                    skin = SkinManager.Skin.NONE;
+                    advancedUISwitch.setChecked(false);
+                    skinUIOptionsLayout.setVisibility(View.GONE);
+                    skinBackgroundImage.setVisibility(View.GONE);
                 }
             });
         }
+        setupAdvancedUIOptions();
+    }
+
+    private void setupAdvancedUIOptions() {
 
         advancedUISwitch = (Switch) findViewById(R.id.advanced_ui_switch);
 
-        final AccountKitLoginActivity thisActivity = this;
-        final LinearLayout advancedUIOptionsLayout =
-                (LinearLayout) findViewById(R.id.advanced_ui_options);
+        final View advancedUIOptionsLayout = findViewById(R.id.advanced_ui_options);
 
         final List<CharSequence> buttonNames = new ArrayList<>();
         buttonNames.add("Default");
@@ -156,13 +239,23 @@ public void onNothingSelected(final AdapterView<?> parent) {
         }
         final ArrayAdapter<CharSequence> buttonNameAdapter
                 = new ArrayAdapter<>(
-                thisActivity,
+                AccountKitLoginActivity.this,
                 android.R.layout.simple_spinner_dropdown_item,
                 buttonNames);
 
         advancedUISwitch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
             public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                 if (isChecked) {
+                    if (isSkinSelected()) {
+                        advancedUISwitch.setChecked(false);
+                        Toast.makeText(
+                                AccountKitLoginActivity.this,
+                                R.string.skin_ui_required,
+                                Toast.LENGTH_LONG)
+                                .show();
+                        return;
+                    }
+
                     advancedUIOptionsLayout.setVisibility(View.VISIBLE);
 
                     final Spinner entryButtonSpinner =
@@ -237,7 +330,7 @@ public void onNothingSelected(
                         }
                         final ArrayAdapter<CharSequence> textPositionAdapter
                                 = new ArrayAdapter<>(
-                                thisActivity,
+                                AccountKitLoginActivity.this,
                                 android.R.layout.simple_spinner_dropdown_item,
                                 textPositions);
 
@@ -283,6 +376,24 @@ public void onNothingSelected(
         });
     }
 
+    private View setupSkinUIOptions() {
+        final View skinLayout = findViewById(R.id.skin_ui_options);
+        skinTintSpinner = (Spinner) skinLayout.findViewById(R.id.skin_tint_spinner);
+
+        final List<CharSequence> tints = new ArrayList<>();
+        for (SkinManager.Tint tint : SkinManager.Tint.values()) {
+            tints.add(tint.toString());
+        }
+
+        final ArrayAdapter<CharSequence> skinTintAdapter = new ArrayAdapter<>(
+                AccountKitLoginActivity.this,
+                android.R.layout.simple_spinner_dropdown_item,
+                tints);
+        skinTintSpinner.setAdapter(skinTintAdapter);
+
+        return skinLayout;
+    }
+
     @Override
     protected void onDestroy() {
         LocalBroadcastManager.getInstance(getApplicationContext())
@@ -343,12 +454,12 @@ protected void onActivityResult(
                 .show();
     }
 
-    private com.facebook.accountkit.ui.AccountKitActivity.ResponseType getResponseType() {
+    private AccountKitActivity.ResponseType getResponseType() {
         final Switch responseTypeSwitch = (Switch) findViewById(R.id.response_type_switch);
         if (responseTypeSwitch != null && responseTypeSwitch.isChecked()) {
-            return com.facebook.accountkit.ui.AccountKitActivity.ResponseType.TOKEN;
+            return AccountKitActivity.ResponseType.TOKEN;
         } else {
-            return com.facebook.accountkit.ui.AccountKitActivity.ResponseType.CODE;
+            return AccountKitActivity.ResponseType.CODE;
         }
     }
 
@@ -358,10 +469,11 @@ protected void onActivityResult(
                 = new AccountKitConfiguration.AccountKitConfigurationBuilder(
                 loginType,
                 getResponseType());
-        final Switch titleTypeSwitch = (Switch) findViewById(R.id.title_type_switch);
         final Switch stateParamSwitch = (Switch) findViewById(R.id.state_param_switch);
         final Switch facebookNotificationsSwitch =
                 (Switch) findViewById(R.id.facebook_notification_switch);
+        final Switch voiceCallSwitch =
+                (Switch) findViewById(R.id.voice_call_switch);
         final Switch useManualWhiteListBlacklist =
                 (Switch) findViewById(R.id.whitelist_blacklist_switch);
         final Switch readPhoneStateSwitch =
@@ -369,10 +481,7 @@ protected void onActivityResult(
         final Switch receiveSMS =
                 (Switch) findViewById(R.id.receive_sms_switch);
 
-        if (titleTypeSwitch != null && titleTypeSwitch.isChecked()) {
-            configurationBuilder
-                    .setTitleType(com.facebook.accountkit.ui.AccountKitActivity.TitleType.APP_NAME);
-        }
+        final UIManager uiManager;
         if (advancedUISwitch != null && advancedUISwitch.isChecked()) {
             if (isReverbThemeSelected()) {
                 if (switchLoginTypeReceiver == null) {
@@ -385,9 +494,6 @@ public void onReceive(final Context context, final Intent intent) {
                                 return;
                             }
                             final LoginType loginType = LoginType.valueOf(loginTypeString);
-                            if (loginType == null) {
-                                return;
-                            }
                             onLogin(loginType);
                         }
                     };
@@ -396,30 +502,49 @@ public void onReceive(final Context context, final Intent intent) {
                                     switchLoginTypeReceiver,
                                     new IntentFilter(ReverbUIManager.SWITCH_LOGIN_TYPE_EVENT));
                 }
-                configurationBuilder.setAdvancedUIManager(new ReverbUIManager(
+                uiManager = new ReverbUIManager(
                         confirmButton,
                         entryButton,
                         loginType,
                         textPosition,
-                        selectedThemeId));
+                        selectedThemeId);
             } else {
-                configurationBuilder.setAdvancedUIManager(new AccountKitSampleAdvancedUIManager(
+                uiManager = new AccountKitSampleAdvancedUIManager(
                         confirmButton,
                         entryButton,
                         textPosition,
-                        loginType));
+                        loginType);
+            }
+        } else if (isSkinSelected()) {
+            final @ColorInt int primaryColor = ContextCompat.getColor(this, R.color.default_color);
+            if (getBackgroundImage() >= 0) {
+                uiManager = new SkinManager(
+                        skin,
+                        primaryColor,
+                        getBackgroundImage(),
+                        getSkinTintOption(),
+                        getSkinBackgroundTintIntensity());
+            } else {
+                uiManager = new SkinManager(skin, primaryColor);
             }
+        } else {
+            uiManager = new ThemeUIManager(selectedThemeId);
         }
+
+        configurationBuilder.setUIManager(uiManager);
+
         if (stateParamSwitch != null && stateParamSwitch.isChecked()) {
             initialStateParam = UUID.randomUUID().toString();
             configurationBuilder.setInitialAuthState(initialStateParam);
         }
+
         if (facebookNotificationsSwitch != null && !facebookNotificationsSwitch.isChecked()) {
             configurationBuilder.setFacebookNotificationsEnabled(false);
         }
-        if (selectedThemeId > 0) {
-            configurationBuilder.setTheme(selectedThemeId);
+        if (voiceCallSwitch != null && !voiceCallSwitch.isChecked()) {
+            configurationBuilder.setVoiceCallbackNotificationsEnabled(false);
         }
+
         if (useManualWhiteListBlacklist != null && useManualWhiteListBlacklist.isChecked()) {
             final String[] blackList
                     = getResources().getStringArray(R.array.blacklistedSmsCountryCodes);
@@ -428,9 +553,11 @@ public void onReceive(final Context context, final Intent intent) {
             configurationBuilder.setSMSBlacklist(blackList);
             configurationBuilder.setSMSWhitelist(whiteList);
         }
+
         if (readPhoneStateSwitch != null && !(readPhoneStateSwitch.isChecked())) {
             configurationBuilder.setReadPhoneStateEnabled(false);
         }
+
         if (receiveSMS != null && !receiveSMS.isChecked()) {
             configurationBuilder.setReceiveSMS(false);
         }
@@ -438,19 +565,39 @@ public void onReceive(final Context context, final Intent intent) {
         return configurationBuilder;
     }
 
+    private double getSkinBackgroundTintIntensity() {
+        return (double) (skinBackgroundTintIntensity.getProgress() + TINT_SEEKBAR_ADJUSTMENT) / 100;
+    }
+
+    private SkinManager.Tint getSkinTintOption() {
+        return SkinManager.Tint.valueOf((String) skinTintSpinner.getSelectedItem());
+    }
+
+    private @DrawableRes int getBackgroundImage() {
+        @DrawableRes int bgId = selectedBackgroundId;
+        if (bgId < 0) {
+            bgId = DEFAULT_SKIN_BACKGROUND_IMAGE;
+        }
+        return skinBackgroundImage.isChecked() ? bgId : -1;
+    }
+
     private boolean isReverbThemeSelected() {
         return selectedThemeId == R.style.AppLoginTheme_Reverb_A
                 || selectedThemeId == R.style.AppLoginTheme_Reverb_B
                 || selectedThemeId == R.style.AppLoginTheme_Reverb_C;
     }
 
+    private boolean isSkinSelected() {
+        return skin != SkinManager.Skin.NONE;
+    }
+
     private void onLogin(final LoginType loginType) {
-        final Intent intent = new Intent(this, com.facebook.accountkit.ui.AccountKitActivity.class);
+        final Intent intent = new Intent(this, AccountKitActivity.class);
         final AccountKitConfiguration.AccountKitConfigurationBuilder configurationBuilder
                 = createAccountKitConfiguration(loginType);
         final AccountKitConfiguration configuration = configurationBuilder.build();
         intent.putExtra(
-                com.facebook.accountkit.ui.AccountKitActivity.ACCOUNT_KIT_ACTIVITY_CONFIGURATION,
+                AccountKitActivity.ACCOUNT_KIT_ACTIVITY_CONFIGURATION,
                 configuration);
         OnCompleteListener completeListener = new OnCompleteListener() {
             @Override
@@ -591,12 +738,13 @@ public void onClick(final DialogInterface dialog, final int which) {
     }
 
     @TargetApi(23)
-    @SuppressWarnings("unused")
     @Override
-    public void onRequestPermissionsResult(final int requestCode,
-                                           final @NonNull String permissions[],
-                                           final @NonNull int[] grantResults) {
-        final OnCompleteListener permissionsListener = permissionsListeners.remove(requestCode);
+    public void onRequestPermissionsResult(
+            final int requestCode,
+            final @NonNull String[] permissions,
+            final @NonNull int[] grantResults) {
+        final OnCompleteListener permissionsListener = permissionsListeners.get(requestCode);
+        permissionsListeners.remove(requestCode);
         if (permissionsListener != null
                 && grantResults.length > 0
                 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitSampleAdvancedUIManager.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitSampleAdvancedUIManager.java
index 669acdd8f..13f2a37f4 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitSampleAdvancedUIManager.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/AccountKitSampleAdvancedUIManager.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -22,20 +22,17 @@
 
 import android.app.Fragment;
 import android.os.Parcel;
-import android.os.Parcelable;
 import android.support.annotation.Nullable;
-import android.view.View;
 
 import com.facebook.accountkit.AccountKitError;
-import com.facebook.accountkit.ui.AdvancedUIManager;
+import com.facebook.accountkit.ui.BaseUIManager;
 import com.facebook.accountkit.ui.ButtonType;
 import com.facebook.accountkit.ui.LoginFlowState;
 import com.facebook.accountkit.ui.LoginType;
 import com.facebook.accountkit.ui.TextPosition;
 import com.facebook.samples.loginsample.R;
 
-public class AccountKitSampleAdvancedUIManager implements AdvancedUIManager, Parcelable {
-    private static final int ACTION_BAR_HEIGHT = 40;
+public class AccountKitSampleAdvancedUIManager extends BaseUIManager {
     private static final int BODY_HEIGHT = 80;
     private static final int FOOTER_HEIGHT = 120;
     private static final int HEADER_HEIGHT = 80;
@@ -44,36 +41,33 @@
     private final ButtonType entryButton;
     private AccountKitError error;
     private LoginType loginType;
-    private AdvancedUIManagerListener listener;
     private final TextPosition textPosition;
 
+    @Deprecated
     public AccountKitSampleAdvancedUIManager(
             final ButtonType confirmButton,
             final ButtonType entryButton,
             final TextPosition textPosition,
             final LoginType loginType) {
+        super(-1);
         this.confirmButton = confirmButton;
         this.entryButton = entryButton;
         this.textPosition = textPosition;
         this.loginType = loginType;
     }
 
-    @Override
-    @Nullable
-    public Fragment getActionBarFragment(final LoginFlowState state) {
-        final PlaceholderFragment fragment = getPlaceholderFragment(
-                state,
-                ACTION_BAR_HEIGHT,
-                "Action Bar");
-        if (fragment != null) {
-            fragment.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(final View v) {
-                    listener.onBack();
-                }
-            });
-        }
-        return fragment;
+    private AccountKitSampleAdvancedUIManager(final Parcel source) {
+        super(source);
+        this.loginType = LoginType.values()[source.readInt()];
+        String s = source.readString();
+        final ButtonType confirmButton = s == null ? null : ButtonType.valueOf(s);
+        s = source.readString();
+        final ButtonType entryButton = s == null ? null : ButtonType.valueOf(s);
+        s = source.readString();
+        final TextPosition textPosition = s == null ? null : TextPosition.valueOf(s);
+        this.confirmButton = confirmButton;
+        this.entryButton = entryButton;
+        this.textPosition = textPosition;
     }
 
     @Override
@@ -90,6 +84,7 @@ public ButtonType getButtonType(final LoginFlowState state) {
             case EMAIL_INPUT:
                 return entryButton;
             case CODE_INPUT:
+            case CONFIRM_ACCOUNT_VERIFIED:
                 return confirmButton;
             default:
                 return null;
@@ -122,11 +117,6 @@ public TextPosition getTextPosition(final LoginFlowState state) {
         return textPosition;
     }
 
-    @Override
-    public void setAdvancedUIManagerListener(final AdvancedUIManagerListener listener) {
-        this.listener = listener;
-    }
-
     @Override
     public void onError(final AccountKitError error) {
         this.error = error;
@@ -158,6 +148,15 @@ private PlaceholderFragment getPlaceholderFragment(
             case EMAIL_INPUT:
                 prefix = "Custom Email ";
                 break;
+            case ACCOUNT_VERIFIED:
+                prefix = "Custom Account Verified ";
+                break;
+            case CONFIRM_ACCOUNT_VERIFIED:
+                prefix = "Custom Confirm Account Verified ";
+                break;
+            case CONFIRM_INSTANT_VERIFICATION_LOGIN:
+                prefix = "Custom Confirm Instant Verification Login ";
+                break;
             case EMAIL_VERIFY:
                 prefix = "Custom Email Verify ";
                 break;
@@ -206,35 +205,20 @@ private PlaceholderFragment getPlaceholderFragment(
         return PlaceholderFragment.create(height, prefix.concat(suffix));
     }
 
-    @Override
-    public int describeContents() {
-        return 0;
-    }
-
     @Override
     public void writeToParcel(final Parcel dest, final int flags) {
+        super.writeToParcel(dest, flags);
+        dest.writeInt(loginType.ordinal());
         dest.writeString(confirmButton != null ? confirmButton.name() : null);
         dest.writeString(entryButton != null ? entryButton.name() : null);
         dest.writeString(textPosition != null ? textPosition.name() : null);
-        dest.writeString(loginType.name());
     }
 
     public static final Creator<AccountKitSampleAdvancedUIManager> CREATOR
             = new Creator<AccountKitSampleAdvancedUIManager>() {
         @Override
         public AccountKitSampleAdvancedUIManager createFromParcel(final Parcel source) {
-            String s = source.readString();
-            final ButtonType confirmButton = s == null ? null : ButtonType.valueOf(s);
-            s = source.readString();
-            final ButtonType entryButton = s == null ? null : ButtonType.valueOf(s);
-            s = source.readString();
-            final TextPosition textPosition = s == null ? null : TextPosition.valueOf(s);
-            final LoginType loginType = LoginType.valueOf(source.readString());
-            return new AccountKitSampleAdvancedUIManager(
-                    confirmButton,
-                    entryButton,
-                    textPosition,
-                    loginType);
+            return new AccountKitSampleAdvancedUIManager(source);
         }
 
         @Override
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbActionBarFragment.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbActionBarFragment.java
deleted file mode 100644
index 13dfa8adb..000000000
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbActionBarFragment.java
+++ /dev/null
@@ -1,116 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.samples.loginsample.accountkit;
-
-import android.app.Fragment;
-import android.os.Bundle;
-import android.support.annotation.Nullable;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-
-import com.facebook.accountkit.ui.LoginFlowState;
-import com.facebook.samples.loginsample.R;
-
-public class ReverbActionBarFragment extends Fragment {
-    private static final String STATE_KEY = "state";
-
-    private LoginFlowState state = LoginFlowState.NONE;
-
-    public void setState(final LoginFlowState state) {
-        if (state == null) {
-            return;
-        }
-        this.state = state;
-        updateTitleView(getView());
-    }
-
-    @Nullable
-    @Override
-    public View onCreateView(
-            final LayoutInflater inflater,
-            final ViewGroup container,
-            final Bundle savedInstanceState) {
-        if (savedInstanceState != null) {
-            final String stateString = savedInstanceState.getString(STATE_KEY);
-            state = stateString == null ? state : LoginFlowState.valueOf(stateString);
-        }
-
-        View view = super.onCreateView(inflater, container, savedInstanceState);
-        if (view == null) {
-            view = inflater.inflate(R.layout.fragment_reverb_action_bar, container, false);
-        }
-        if (view == null) {
-            return null;
-        }
-        updateTitleView(view);
-        return view;
-    }
-
-    @Override
-    public void onSaveInstanceState(final Bundle outState) {
-        super.onSaveInstanceState(outState);
-
-        outState.putString(STATE_KEY, state.name());
-    }
-
-    private void updateTitleView(@Nullable final View view) {
-        if (view == null || state == null) {
-            return;
-        }
-        final TextView titleView = (TextView) view.findViewById(R.id.title_view);
-        if (titleView != null) {
-            switch (state) {
-                case PHONE_NUMBER_INPUT:
-                    titleView.setText(R.string.reverb_title_phone_number_input);
-                    break;
-                case EMAIL_INPUT:
-                    titleView.setText(R.string.reverb_title_email_input);
-                    break;
-                case SENDING_CODE:
-                    titleView.setText(R.string.reverb_title_sending_code);
-                    break;
-                case SENT_CODE:
-                    titleView.setText(R.string.reverb_title_sent_code);
-                    break;
-                case CODE_INPUT:
-                    titleView.setText(R.string.reverb_title_code_input);
-                    break;
-                case EMAIL_VERIFY:
-                    titleView.setText(R.string.reverb_title_email_verify);
-                    break;
-                case VERIFYING_CODE:
-                    titleView.setText(R.string.reverb_title_verifying_code);
-                    break;
-                case VERIFIED:
-                    titleView.setText(R.string.reverb_title_verified);
-                    break;
-                case RESEND:
-                    titleView.setText(R.string.reverb_title_resend);
-                    break;
-                case ERROR:
-                    titleView.setText(R.string.reverb_title_error);
-                    break;
-            }
-        }
-    }
-}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbFooterFragment.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbFooterFragment.java
index e85f85f36..e6ea9402b 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbFooterFragment.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbFooterFragment.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -135,10 +135,10 @@ private void updateButtonText(@Nullable final View view) {
         }
         switch (loginType) {
             case EMAIL:
-                switchLoginTypeButton.setText(R.string.reverb_switch_login_type_email);
+                switchLoginTypeButton.setText(R.string.reverb_switch_login_type_phone);
                 break;
             case PHONE:
-                switchLoginTypeButton.setText(R.string.reverb_switch_login_type_phone);
+                switchLoginTypeButton.setText(R.string.reverb_switch_login_type_email);
                 break;
         }
         switchLoginTypeButton.setVisibility(View.VISIBLE);
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java
index 47171a24b..6c16f42e0 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/ReverbUIManager.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
@@ -25,28 +25,24 @@
 import android.content.Context;
 import android.content.Intent;
 import android.os.Parcel;
-import android.os.Parcelable;
 import android.support.annotation.Nullable;
 import android.support.v4.content.LocalBroadcastManager;
 
-import com.facebook.accountkit.AccountKitError;
-import com.facebook.accountkit.ui.AdvancedUIManager;
+import com.facebook.accountkit.ui.BaseUIManager;
 import com.facebook.accountkit.ui.ButtonType;
 import com.facebook.accountkit.ui.LoginFlowState;
 import com.facebook.accountkit.ui.LoginType;
 import com.facebook.accountkit.ui.TextPosition;
 import com.facebook.samples.loginsample.R;
 
-public class ReverbUIManager implements AdvancedUIManager, Parcelable {
+public class ReverbUIManager extends BaseUIManager {
     public static final String LOGIN_TYPE_EXTRA = "loginType";
     public static final String SWITCH_LOGIN_TYPE_EVENT = "switch-login-type";
 
     private final ButtonType confirmButton;
     private final ButtonType entryButton;
-    private AdvancedUIManagerListener listener;
     private final LoginType loginType;
     private final TextPosition textPosition;
-    private final int themeResourceId;
 
     public ReverbUIManager(
             final ButtonType confirmButton,
@@ -54,19 +50,25 @@ public ReverbUIManager(
             final LoginType loginType,
             final TextPosition textPosition,
             final int themeResourceId) {
+        super(themeResourceId);
         this.confirmButton = confirmButton;
         this.entryButton = entryButton;
         this.loginType = loginType;
         this.textPosition = textPosition;
-        this.themeResourceId = themeResourceId;
     }
 
-    @Override
-    @Nullable
-    public  Fragment getActionBarFragment(final LoginFlowState state) {
-        final ReverbActionBarFragment fragment = new ReverbActionBarFragment();
-        fragment.setState(state);
-        return fragment;
+    private ReverbUIManager(final Parcel source) {
+        super(source);
+        this.loginType = LoginType.values()[source.readInt()];
+        String s = source.readString();
+        final ButtonType confirmButton = s == null ? null : ButtonType.valueOf(s);
+        s = source.readString();
+        final ButtonType entryButton = s == null ? null : ButtonType.valueOf(s);
+        s = source.readString();
+        final TextPosition textPosition = s == null ? null : TextPosition.valueOf(s);
+        this.confirmButton = confirmButton;
+        this.entryButton = entryButton;
+        this.textPosition = textPosition;
     }
 
     @Override
@@ -92,6 +94,7 @@ public Fragment getBodyFragment(final LoginFlowState state) {
                 iconResourceId = R.drawable.reverb_email_sent;
                 break;
             case VERIFYING_CODE:
+            case CONFIRM_INSTANT_VERIFICATION_LOGIN:
                 showProgressSpinner = true;
                 break;
             case VERIFIED:
@@ -103,6 +106,7 @@ public Fragment getBodyFragment(final LoginFlowState state) {
             case PHONE_NUMBER_INPUT:
             case EMAIL_INPUT:
             case CODE_INPUT:
+            case CONFIRM_ACCOUNT_VERIFIED:
             case RESEND:
             case NONE:
             default:
@@ -122,6 +126,7 @@ public ButtonType getButtonType(final LoginFlowState state) {
             case EMAIL_INPUT:
                 return entryButton;
             case CODE_INPUT:
+            case CONFIRM_ACCOUNT_VERIFIED:
                 return confirmButton;
             default:
                 return null;
@@ -143,9 +148,11 @@ public Fragment getFooterFragment(final LoginFlowState state) {
                 break;
             case CODE_INPUT:
             case EMAIL_VERIFY:
+            case CONFIRM_ACCOUNT_VERIFIED:
                 progress = 3;
                 break;
             case VERIFYING_CODE:
+            case CONFIRM_INSTANT_VERIFICATION_LOGIN:
                 progress = 4;
                 break;
             case VERIFIED:
@@ -193,10 +200,10 @@ public void onSwitchLoginType() {
                         }
                     });
         }
-        if (themeResourceId == R.style.AppLoginTheme_Reverb_A) {
+        if (getThemeId() == R.style.AppLoginTheme_Reverb_A) {
             fragment.setProgressType(ReverbFooterFragment.ProgressType.BAR);
-        } else if (themeResourceId == R.style.AppLoginTheme_Reverb_B
-                || themeResourceId == R.style.AppLoginTheme_Reverb_C) {
+        } else if (getThemeId() == R.style.AppLoginTheme_Reverb_B
+                || getThemeId() == R.style.AppLoginTheme_Reverb_C) {
             fragment.setProgressType(ReverbFooterFragment.ProgressType.DOTS);
         }
         fragment.setProgress(progress);
@@ -220,48 +227,20 @@ public TextPosition getTextPosition(final LoginFlowState state) {
         return textPosition == null ? TextPosition.ABOVE_BODY : textPosition;
     }
 
-    @Override
-    public void setAdvancedUIManagerListener(final AdvancedUIManagerListener listener) {
-        this.listener = listener;
-    }
-
-    @Override
-    public void onError(final AccountKitError error) {
-    }
-
-    @Override
-    public int describeContents() {
-        return 0;
-    }
-
     @Override
     public void writeToParcel(final Parcel dest, final int flags) {
+        super.writeToParcel(dest, flags);
+        dest.writeInt(loginType.ordinal());
         dest.writeString(confirmButton != null ? confirmButton.name() : null);
         dest.writeString(entryButton != null ? entryButton.name() : null);
-        dest.writeString(loginType != null ? loginType.name() : null);
         dest.writeString(textPosition != null ? textPosition.name() : null);
-        dest.writeInt(themeResourceId);
     }
 
     public static final Creator<ReverbUIManager> CREATOR
             = new Creator<ReverbUIManager>() {
         @Override
         public ReverbUIManager createFromParcel(final Parcel source) {
-            String s = source.readString();
-            final ButtonType confirmButton = s == null ? null : ButtonType.valueOf(s);
-            s = source.readString();
-            final ButtonType entryButton = s == null ? null : ButtonType.valueOf(s);
-            s = source.readString();
-            final LoginType loginType = s == null ? null : LoginType.valueOf(s);
-            s = source.readString();
-            final TextPosition textPosition = s == null ? null : TextPosition.valueOf(s);
-            final int themeResourceId = source.readInt();
-            return new ReverbUIManager(
-                    confirmButton,
-                    entryButton,
-                    loginType,
-                    textPosition,
-                    themeResourceId);
+            return new ReverbUIManager(source);
         }
 
         @Override
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/TokenActivity.java b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/TokenActivity.java
index 5b89baad1..908b8a457 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/TokenActivity.java
+++ b/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/accountkit/TokenActivity.java
@@ -1,4 +1,4 @@
-/**
+/*
  * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
  *
  * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
diff --git a/samples/LoginSample/src/main/res/layout/account_kit_activity.xml b/samples/LoginSample/src/main/res/layout/accountkit_activity_main.xml
similarity index 76%
rename from samples/LoginSample/src/main/res/layout/account_kit_activity.xml
rename to samples/LoginSample/src/main/res/layout/accountkit_activity_main.xml
index 01c5ada7c..85d90e742 100644
--- a/samples/LoginSample/src/main/res/layout/account_kit_activity.xml
+++ b/samples/LoginSample/src/main/res/layout/accountkit_activity_main.xml
@@ -33,14 +33,6 @@
             android:minWidth="300dp"
             tools:ignore="UselessParent"
             >
-            <Switch
-                android:id="@+id/title_type_switch"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:lines="1"
-                android:text="@string/config_title_type_label"
-                android:textColor="@android:color/black"
-                />
             <Switch
                 android:id="@+id/advanced_ui_switch"
                 android:layout_width="match_parent"
@@ -75,6 +67,15 @@
                 android:text="@string/confirm_facebook_notification_label"
                 android:textColor="@android:color/black"
                 />
+            <Switch
+                android:id="@+id/voice_call_switch"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:lines="1"
+                android:checked="true"
+                android:text="@string/confirm_voice_call_label"
+                android:textColor="@android:color/black"
+                />
             <Switch
                 android:id="@+id/whitelist_blacklist_switch"
                 android:layout_width="match_parent"
@@ -130,6 +131,7 @@
                 android:gravity="center"
                 android:orientation="vertical"
                 android:visibility="gone"
+                tools:visibility="visible"
                 >
                 <LinearLayout
                     android:layout_width="match_parent"
@@ -198,6 +200,66 @@
                         />
                 </LinearLayout>
             </LinearLayout>
+            <Switch
+                android:id="@+id/background_image"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:lines="1"
+                android:checked="true"
+                android:text="@string/config_background_image_label"
+                android:textColor="@android:color/black"
+                />
+            <LinearLayout
+                android:id="@+id/skin_ui_options"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:gravity="center"
+                android:orientation="vertical"
+                android:visibility="gone"
+                tools:visibility="visible"
+                >
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:gravity="center"
+                    android:orientation="horizontal"
+                    >
+                    <TextView
+                        android:layout_width="0dp"
+                        android:layout_height="wrap_content"
+                        android:layout_weight="1"
+                        android:text="@string/config_tint_label"
+                        android:textColor="@android:color/black"
+                        />
+                    <Spinner
+                        android:id="@+id/skin_tint_spinner"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:gravity="end"
+                        android:textAlignment="center"
+                        />
+                </LinearLayout>
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:gravity="center"
+                    android:orientation="horizontal"
+                    >
+                    <TextView
+                        android:id="@+id/tint_intensity_title"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="@string/config_tint_intensity_label"
+                        android:textColor="@android:color/black"
+                        />
+                    <SeekBar
+                        android:id="@+id/tint_intensity_field"
+                        android:layout_width="0dp"
+                        android:layout_weight="1"
+                        android:layout_height="wrap_content"
+                        android:max="30"/>
+                </LinearLayout>
+            </LinearLayout>
             <Button
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content"
diff --git a/samples/LoginSample/src/main/res/values/accountkit_colors.xml b/samples/LoginSample/src/main/res/values/accountkit_colors.xml
index c32c0a5e5..e5510c02d 100644
--- a/samples/LoginSample/src/main/res/values/accountkit_colors.xml
+++ b/samples/LoginSample/src/main/res/values/accountkit_colors.xml
@@ -20,6 +20,7 @@
 -->
 
 <resources>
+    <color name="default_color">#0099E1</color>
     <color name="reverb_dark">#262261</color>
     <color name="reverb_light">#e9e8ef</color>
     <color name="reverb_text">#1d2129</color>
diff --git a/samples/LoginSample/src/main/res/values/accountkit_strings.xml b/samples/LoginSample/src/main/res/values/accountkit_strings.xml
index 51c76ef59..26be9b020 100644
--- a/samples/LoginSample/src/main/res/values/accountkit_strings.xml
+++ b/samples/LoginSample/src/main/res/values/accountkit_strings.xml
@@ -28,8 +28,11 @@
     <string name="config_response_type_label">Enable Client Access Token Flow</string>
     <string name="config_text_position_label">Text Position</string>
     <string name="config_theme_label">Theme</string>
-    <string name="config_title_type_label">App Name only for title</string>
+    <string name="config_background_image_label">Background image</string>
+    <string name="config_tint_label">Background Image Tint</string>
+    <string name="config_tint_intensity_label">Tint Intensity (%1$d%%)</string>
     <string name="confirm_facebook_notification_label">Facebook Notifications Fallback</string>
+    <string name="confirm_voice_call_label">Allow Voice Call Fallback</string>
     <string name="confirm_state_param_label">Is State Param passed?</string>
     <string name="email_label">Email</string>
     <string name="error_label">Error</string>
@@ -61,8 +64,11 @@
     <string name="reverb_advanced_ui_required">
         Advanced UI theming is required for Reverb themes. Select a different theme to disable.
     </string>
-    <string name="reverb_switch_login_type_email">SIGN IN WITH PHONE</string>
-    <string name="reverb_switch_login_type_phone">SIGN IN WITH EMAIL</string>
+    <string name="skin_ui_required">
+        Advanced UI theming is not allowed for Skin themes. Select a different theme to enable.
+    </string>
+    <string name="reverb_switch_login_type_phone">SIGN IN WITH PHONE</string>
+    <string name="reverb_switch_login_type_email">SIGN IN WITH EMAIL</string>
     <string name="reverb_title_code_input">Enter your code</string>
     <string name="reverb_title_email_input">Enter your email address</string>
     <string name="reverb_title_email_verify">Open the email and confirm your address</string>
@@ -71,10 +77,14 @@
     <string name="reverb_title_resend">We\'re sorry. Try these options to continue.</string>
     <string name="reverb_title_sending_code">Sending your code…</string>
     <string name="reverb_title_sent_code">Sent!</string>
+    <string name="reverb_title_account_verified">Account verified!</string>
+    <string name="reverb_title_logging_in">Logging in…</string>
     <string name="reverb_title_verified">Done!</string>
     <string name="reverb_title_verifying_code">Verifying your code…</string>
     <string-array name="theme_options">
-        <item>Default</item>
+        <item>Classic</item>
+        <item>Contemporary</item>
+        <item>Translucent</item>
         <item>Salmon</item>
         <item>Yellow</item>
         <item>Red</item>
diff --git a/samples/LoginSample/src/main/res/values/accountkit_themes.xml b/samples/LoginSample/src/main/res/values/accountkit_themes.xml
index f28bc7c42..304f3049c 100644
--- a/samples/LoginSample/src/main/res/values/accountkit_themes.xml
+++ b/samples/LoginSample/src/main/res/values/accountkit_themes.xml
@@ -54,12 +54,11 @@
         </item>
         <item name="com_accountkit_input_border_color">#bbbbbb</item>
     </style>
-    <style name="AppLoginTheme.Dog" parent="Theme.AccountKit">
-        <item name="com_accountkit_primary_color">@android:color/white</item>
-        <item name="com_accountkit_primary_text_color">#44566b</item>
-        <item name="com_accountkit_secondary_color">#ccffffff</item>
-        <item name="com_accountkit_secondary_text_color">@android:color/white</item>
-        <item name="com_accountkit_background">@drawable/dog</item>
+    <style name="AppLoginTheme_Contemporary" parent="Theme.AccountKit">
+        <item name="com_accountkit_primary_color">#ff5a5f</item>
+        <item name="com_accountkit_primary_text_color">#387c1f</item>
+        <item name="com_accountkit_secondary_color">#cc1c2f97</item>
+        <item name="com_accountkit_secondary_text_color">#cc97971c</item>
         <item name="com_accountkit_background_color">#994e7e24</item>
         <item name="com_accountkit_input_text_color">?attr/com_accountkit_primary_text_color</item>
     </style>
diff --git a/samples/MessengerSendSample/build.gradle b/samples/MessengerSendSample/build.gradle
index b1a0545e9..be26ca271 100644
--- a/samples/MessengerSendSample/build.gradle
+++ b/samples/MessengerSendSample/build.gradle
@@ -28,15 +28,6 @@ android {
         exclude 'META-INF/NOTICE.txt'    
     }
 
-    signingConfigs {
-        debug {
-            storeFile file("../../keystores/debug.keystore")
-            storePassword "android"
-            keyAlias "androiddebugkey"
-            keyPassword "android"
-        }
-    }
-
     splits {
         abi {
             enable true
@@ -48,6 +39,6 @@ android {
 }
 
 dependencies {
-    compile project(':facebook')
-    compile('com.android.support:appcompat-v7:21.0.3')
+    compile project(':facebook-messenger')
+    compile('com.android.support:appcompat-v7:25.3.1')
 }
diff --git a/samples/MessengerSendSample/src/main/AndroidManifest.xml b/samples/MessengerSendSample/src/main/AndroidManifest.xml
index e7dd459ff..f2aef47fd 100644
--- a/samples/MessengerSendSample/src/main/AndroidManifest.xml
+++ b/samples/MessengerSendSample/src/main/AndroidManifest.xml
@@ -26,7 +26,6 @@
     <uses-permission android:name="android.permission.INTERNET" />
 
     <application
-        android:name='MessengerSendSampleApplication'
         android:icon='@null'
         android:label='@string/app_name'
         android:theme='@style/Theme.AppCompat.NoActionBar'>
diff --git a/samples/PlacesGraphSample/AndroidManifest.xml b/samples/PlacesGraphSample/AndroidManifest.xml
new file mode 100644
index 000000000..2f75e5a63
--- /dev/null
+++ b/samples/PlacesGraphSample/AndroidManifest.xml
@@ -0,0 +1,92 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.example.places"
+    android:versionCode="1"
+    android:versionName="1.0">
+
+    <!-- The SDK uses the location permissions to retrieve the current device location
+     from the platform. The locations permissions are also used to scan for nearby wifi access
+     points and bluetooth beacons if the corresponding wifi and bluetooth permissions are
+      available -->
+    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
+
+    <!-- This permission is optional. If present, the SDK will get the currently connected
+     wifi access point to improve the accuracy of the current place request. -->
+    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
+    <!-- This permission is optional. If present, the SDK will scan for nearby wifi access points
+     in order to improve the accuracy of the current place request. -->
+    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
+
+    <!-- These two bluetooth permissions are optional. If present, the SDK will scan nearby
+    Bluetooth Low Energy beacons in order to improve the accuracy of the current place request. -->
+    <uses-permission android:name="android.permission.BLUETOOTH" />
+    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />
+
+
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.CALL_PHONE" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+
+    <application
+        android:icon="@drawable/icon"
+        android:label="@string/app_name"
+        android:theme="@style/AppTheme">
+
+        <!-- This sample app illustrates how to display places on map. Enter your Google Maps Api
+        key below in order to enable the map. -->
+        <meta-data
+            android:name="com.google.android.geo.API_KEY"
+            android:value="@string/google_maps_key" />
+
+        <activity
+            android:name=".MainActivity"
+            android:label="@string/app_name"
+            android:screenOrientation="portrait"
+            android:windowSoftInputMode="stateHidden">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name="com.facebook.CustomTabActivity">
+            <intent-filter>
+                <action android:name="android.intent.action.VIEW" />
+
+                <category android:name="android.intent.category.DEFAULT" />
+                <category android:name="android.intent.category.BROWSABLE" />
+
+                <data android:scheme="@string/fb_login_protocol_scheme" />
+            </intent-filter>
+        </activity>
+
+        <meta-data
+            android:name="com.facebook.sdk.ApplicationId"
+            android:value="@string/app_id" />
+        <meta-data
+            android:name="com.facebook.sdk.ApplicationName"
+            android:value="@string/facebook_app_name" />
+
+    </application>
+</manifest>
diff --git a/samples/PlacesGraphSample/build.gradle b/samples/PlacesGraphSample/build.gradle
new file mode 100644
index 000000000..801cd5afc
--- /dev/null
+++ b/samples/PlacesGraphSample/build.gradle
@@ -0,0 +1,43 @@
+apply plugin: 'com.android.application'
+
+dependencies {
+    compile project(':facebook-login')
+    compile project(':facebook-places')
+    compile 'com.android.support:appcompat-v7:24.2.1'
+    compile 'com.android.support:cardview-v7:24.2.1'
+    compile 'com.android.support:design:24.2.1'
+    compile 'com.android.support:recyclerview-v7:24.2.1'
+    compile 'com.google.android.gms:play-services-maps:10.2.0'
+}
+
+android {
+    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
+    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
+
+    defaultConfig {
+        applicationId 'com.example.places'
+        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
+        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
+    }
+
+    lintOptions {
+        abortOnError false
+    }
+
+    sourceSets {
+        main {
+            manifest.srcFile 'AndroidManifest.xml'
+            java.srcDirs = ['src']
+            res.srcDirs = ['res']
+        }
+    }
+
+    splits {
+        abi {
+            enable true
+            reset()
+            include 'armeabi', 'armeabi-v7a', 'x86'
+            universalApk true
+        }
+    }
+}
diff --git a/samples/PlacesGraphSample/proguard-project.txt b/samples/PlacesGraphSample/proguard-project.txt
new file mode 100644
index 000000000..f2fe1559a
--- /dev/null
+++ b/samples/PlacesGraphSample/proguard-project.txt
@@ -0,0 +1,20 @@
+# To enable ProGuard in your project, edit project.properties
+# to define the proguard.config property as described in that file.
+#
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in ${sdk.dir}/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the ProGuard
+# include property in project.properties.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/samples/PlacesGraphSample/res/drawable-hdpi/icon.png b/samples/PlacesGraphSample/res/drawable-hdpi/icon.png
new file mode 100644
index 000000000..0a0d7cc73
Binary files /dev/null and b/samples/PlacesGraphSample/res/drawable-hdpi/icon.png differ
diff --git a/samples/PlacesGraphSample/res/drawable-mdpi/icon.png b/samples/PlacesGraphSample/res/drawable-mdpi/icon.png
new file mode 100644
index 000000000..b4507c0e7
Binary files /dev/null and b/samples/PlacesGraphSample/res/drawable-mdpi/icon.png differ
diff --git a/samples/PlacesGraphSample/res/drawable-xhdpi/icon.png b/samples/PlacesGraphSample/res/drawable-xhdpi/icon.png
new file mode 100644
index 000000000..6e8424602
Binary files /dev/null and b/samples/PlacesGraphSample/res/drawable-xhdpi/icon.png differ
diff --git a/samples/PlacesGraphSample/res/drawable/icon.png b/samples/PlacesGraphSample/res/drawable/icon.png
new file mode 100644
index 000000000..b4507c0e7
Binary files /dev/null and b/samples/PlacesGraphSample/res/drawable/icon.png differ
diff --git a/samples/PlacesGraphSample/res/layout/current_place_fragment.xml b/samples/PlacesGraphSample/res/layout/current_place_fragment.xml
new file mode 100644
index 000000000..70a316784
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/current_place_fragment.xml
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <LinearLayout
+        android:id="@+id/current_place_loading_container"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:padding="@dimen/cards_margin"
+        android:orientation="horizontal"
+        android:background="@color/white">
+        <ProgressBar
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content" />
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_vertical|left"
+            android:layout_margin="@dimen/cardview_padding"
+            android:text="@string/loading"
+            android:textSize="@dimen/body_text_size"/>
+    </LinearLayout>
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/current_place_recyclerview"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:background="@color/white"
+        android:visibility="invisible"/>
+
+</FrameLayout>
diff --git a/samples/PlacesGraphSample/res/layout/current_place_list_item.xml b/samples/PlacesGraphSample/res/layout/current_place_list_item.xml
new file mode 100644
index 000000000..d2c6a2861
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/current_place_list_item.xml
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/place_container"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_gravity="center"
+    android:orientation="vertical"
+    android:clickable="true"
+    android:padding="@dimen/cardview_padding"
+    android:foreground="?attr/selectableItemBackground">
+
+    <TextView
+        android:id="@+id/place_name"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:ellipsize="end"
+        android:maxLines="1"
+        android:textAppearance="@style/TextAppearance.AppCompat.Title"
+        android:textColor="@color/dark_text_color"/>
+
+    <TextView
+        android:id="@+id/place_address"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/place_name"
+        android:ellipsize="end"
+        android:maxLines="1"
+        android:textSize="@dimen/body_text_size" />
+
+</LinearLayout>
diff --git a/samples/PlacesGraphSample/res/layout/login_fragment.xml b/samples/PlacesGraphSample/res/layout/login_fragment.xml
new file mode 100644
index 000000000..0f01f8760
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/login_fragment.xml
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:facebook="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <com.facebook.login.widget.LoginButton
+        android:id="@+id/login_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        facebook:com_facebook_confirm_logout="false"
+        facebook:com_facebook_tooltip_mode="never_display"
+        />
+
+</FrameLayout>
diff --git a/samples/PlacesGraphSample/res/layout/main_activity.xml b/samples/PlacesGraphSample/res/layout/main_activity.xml
new file mode 100644
index 000000000..115c2d605
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/main_activity.xml
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <FrameLayout
+        android:id="@+id/fragment_placeholder"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"/>
+
+</RelativeLayout>
diff --git a/samples/PlacesGraphSample/res/layout/place_info_fragment.xml b/samples/PlacesGraphSample/res/layout/place_info_fragment.xml
new file mode 100644
index 000000000..fdfc5fdb1
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/place_info_fragment.xml
@@ -0,0 +1,88 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<android.support.design.widget.CoordinatorLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <android.support.design.widget.AppBarLayout
+        android:id="@+id/place_details_appbarlayout"
+        android:layout_width="match_parent"
+        android:layout_height="@dimen/toolbar_height"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+        android:background="@color/primary">
+
+        <android.support.design.widget.CollapsingToolbarLayout
+            android:id="@+id/place_details_toolbarlayout"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            app:layout_scrollFlags="scroll|exitUntilCollapsed"
+            app:contentScrim="@color/primary"
+            app:expandedTitleMarginStart="@dimen/toolbar_margin_start"
+            app:expandedTitleMarginEnd="@dimen/toolbar_margin_end">
+
+            <ImageView
+                android:id="@+id/place_details_cover"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:scaleType="centerCrop"
+                app:layout_collapseMode="parallax" />
+
+            <android.support.v7.widget.Toolbar
+                android:id="@+id/place_details_toolbar"
+                android:layout_height="?attr/actionBarSize"
+                android:layout_width="match_parent"
+                android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+                app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
+                app:layout_collapseMode="pin"/>
+
+        </android.support.design.widget.CollapsingToolbarLayout>
+
+    </android.support.design.widget.AppBarLayout>
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/place_details_recyclerview"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        app:layout_behavior="@string/appbar_scrolling_view_behavior"
+        android:background="@color/white"/>
+
+    <android.support.design.widget.FloatingActionButton
+        android:id="@+id/place_details_actionbutton"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_margin="@dimen/action_button_margin"
+        android:src="@android:drawable/ic_menu_call"
+        app:borderWidth="0dp"
+        app:layout_anchor="@id/place_details_appbarlayout"
+        app:layout_anchorGravity="bottom|right|end" />
+
+    <ProgressBar
+        android:id="@+id/place_details_progress"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:indeterminate="true"
+        android:visibility="invisible"
+        />
+
+</android.support.design.widget.CoordinatorLayout>
diff --git a/samples/PlacesGraphSample/res/layout/place_info_item.xml b/samples/PlacesGraphSample/res/layout/place_info_item.xml
new file mode 100644
index 000000000..65f66058a
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/place_info_item.xml
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/place_detail_container"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:paddingLeft="@dimen/cards_margin"
+    android:paddingRight="@dimen/cards_margin"
+    android:paddingTop="@dimen/place_detail_item_margin_vertical"
+    android:paddingBottom="@dimen/place_detail_item_margin_vertical"
+    android:background="?attr/selectableItemBackground" >
+
+    <TextView
+        android:id="@+id/place_detail_title"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="left|top"
+        android:ellipsize="end"
+        android:maxLines="1"
+        android:textColor="@color/primary"/>
+
+    <TextView
+        android:id="@+id/place_detail_text"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="left|top"
+        android:textSize="@dimen/place_detail_text_size"
+        android:textColor="@color/dark_text_color"/>
+
+</LinearLayout>
diff --git a/samples/PlacesGraphSample/res/layout/place_list_item.xml b/samples/PlacesGraphSample/res/layout/place_list_item.xml
new file mode 100644
index 000000000..e8772a01c
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/place_list_item.xml
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<android.support.v7.widget.CardView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/place_container"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_gravity="center"
+    android:layout_marginBottom="@dimen/cards_margin"
+    android:layout_marginLeft="@dimen/cards_margin"
+    android:layout_marginRight="@dimen/cards_margin"
+    android:foreground="?attr/selectableItemBackground">
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="@dimen/cardview_padding">
+
+        <TextView
+            android:id="@+id/place_name"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:ellipsize="end"
+            android:maxLines="1"
+            android:textAppearance="@style/TextAppearance.AppCompat.Title"
+            android:textColor="@color/dark_text_color" />
+
+        <TextView
+            android:id="@+id/place_address"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_below="@+id/place_name"
+            android:ellipsize="end"
+            android:maxLines="1"
+            android:textColor="@color/dark_text_color"
+            android:textSize="@dimen/body_text_size" />
+
+    </RelativeLayout>
+</android.support.v7.widget.CardView>
diff --git a/samples/PlacesGraphSample/res/layout/place_search_fragment.xml b/samples/PlacesGraphSample/res/layout/place_search_fragment.xml
new file mode 100644
index 000000000..41c6a7908
--- /dev/null
+++ b/samples/PlacesGraphSample/res/layout/place_search_fragment.xml
@@ -0,0 +1,119 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <FrameLayout
+        android:id="@+id/place_search_map_placeholder"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"/>
+
+    <android.support.v7.widget.CardView
+        android:id="@+id/place_search_cardview"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_margin="@dimen/cards_margin">
+        <EditText
+            android:id="@+id/place_search_edittext"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:hint="@string/place_search_hint"
+            android:maxLines="1"
+            android:background="@android:color/transparent"
+            android:inputType="text"
+            android:imeOptions="actionSearch"
+            android:padding="@dimen/cardview_padding"/>
+    </android.support.v7.widget.CardView>
+
+    <android.support.v7.widget.CardView
+        android:id="@+id/current_place_cardview"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/place_search_cardview"
+        android:layout_marginLeft="@dimen/cards_margin"
+        android:layout_marginRight="@dimen/cards_margin"
+        android:clickable="true"
+        android:foreground="?attr/selectableItemBackground">
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:padding="@dimen/cardview_padding"
+            android:orientation="vertical">
+            <TextView
+                android:id="@+id/current_place_title"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="@string/add_my_location"
+                android:textAppearance="@style/TextAppearance.AppCompat.Title"
+                android:textColor="@color/dark_text_color"/>
+            <TextView
+                android:id="@+id/current_place_name"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginTop="@dimen/cardview_padding"
+                android:maxLines="1"
+                android:textAppearance="@style/TextAppearance.AppCompat.Title"
+                android:textColor="@color/dark_text_color"
+                android:visibility="gone"/>
+            <TextView
+                android:id="@+id/current_place_address"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:maxLines="1"
+                android:textSize="@dimen/body_text_size"
+                android:visibility="gone"/>
+        </LinearLayout>
+
+    </android.support.v7.widget.CardView>
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/place_search_recyclerview"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@id/current_place_cardview"
+        android:layout_marginTop="@dimen/place_list_margin_top"
+        android:overScrollMode="never"/>
+
+    <android.support.design.widget.FloatingActionButton
+        xmlns:app="http://schemas.android.com/apk/res-auto"
+        android:id="@+id/place_search_toggle_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_alignParentRight="true"
+        android:layout_margin="@dimen/action_button_margin"
+        android:src="@android:drawable/ic_dialog_map"
+        app:backgroundTint="@color/primary"
+        app:borderWidth="0dp"
+        app:elevation="@dimen/action_button_elevation"
+        app:fabSize="normal"/>
+
+    <ProgressBar
+        android:id="@+id/place_search_progressbar"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerInParent="true"
+        android:indeterminate="true"
+        android:visibility="invisible" />
+
+</RelativeLayout>
diff --git a/samples/PlacesGraphSample/res/values/arrays.xml b/samples/PlacesGraphSample/res/values/arrays.xml
new file mode 100644
index 000000000..677a3f609
--- /dev/null
+++ b/samples/PlacesGraphSample/res/values/arrays.xml
@@ -0,0 +1,91 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<resources>
+
+    <string-array name="parking_keys">
+        <item>lot</item>
+        <item>street</item>
+        <item>valet</item>
+    </string-array>
+
+    <string-array name="parking_labels">
+        <item>Lot</item>
+        <item>Street</item>
+        <item>Valet</item>
+    </string-array>
+
+    <string-array name="restaurant_specialties_keys">
+        <item>breakfast</item>
+        <item>coffee</item>
+        <item>dinner</item>
+        <item>drinks</item>
+        <item>lunch</item>
+    </string-array>
+
+    <string-array name="restaurant_specialties_labels">
+        <item>Breakfast</item>
+        <item>Coffee</item>
+        <item>Dinner</item>
+        <item>Drinks</item>
+        <item>Lunch</item>
+    </string-array>
+
+    <string-array name="payment_options_keys">
+        <item>mastercard</item>
+        <item>visa</item>
+        <item>discover</item>
+        <item>amex</item>
+        <item>cash_only</item>
+    </string-array>
+
+    <string-array name="payment_options_labels">
+        <item>Mastercard</item>
+        <item>Visa</item>
+        <item>Discover</item>
+        <item>Amex</item>
+        <item>Cash only</item>
+    </string-array>
+
+    <string-array name="restaurant_services_keys">
+        <item>delivery</item>
+        <item>takeout</item>
+        <item>catering</item>
+        <item>reserve</item>
+        <item>groups</item>
+        <item>kids</item>
+        <item>outdoor</item>
+        <item>waiter</item>
+        <item>walkins</item>
+    </string-array>
+
+    <string-array name="restaurant_services_labels">
+        <item>Delivery</item>
+        <item>Takeout</item>
+        <item>Catering</item>
+        <item>Reservations</item>
+        <item>Groups</item>
+        <item>Kid friendly</item>
+        <item>Outdoor seating</item>
+        <item>Waiter</item>
+        <item>Walkins</item>
+    </string-array>
+
+</resources>
diff --git a/samples/PlacesGraphSample/res/values/colors.xml b/samples/PlacesGraphSample/res/values/colors.xml
new file mode 100644
index 000000000..05c4dd159
--- /dev/null
+++ b/samples/PlacesGraphSample/res/values/colors.xml
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+<resources>
+    <color name="primary">#3F51B5</color>
+    <color name="primary_dark">#303F9F</color>
+    <color name="accent">#FF4081</color>
+    <color name="white">#FFFFFF</color>
+    <color name="dark_text_color">#515151</color>
+</resources>
diff --git a/facebook/src/main/res/values-te/messenger_button_strings.xml b/samples/PlacesGraphSample/res/values/dimens.xml
similarity index 59%
rename from facebook/src/main/res/values-te/messenger_button_strings.xml
rename to samples/PlacesGraphSample/res/values/dimens.xml
index d709da3d1..3b0acbaf2 100644
--- a/facebook/src/main/res/values-te/messenger_button_strings.xml
+++ b/samples/PlacesGraphSample/res/values/dimens.xml
@@ -18,7 +18,20 @@
     IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 -->
-
 <resources>
-  <string name="messenger_send_button_text">పంపు</string>
+    <dimen name="cards_margin">16dp</dimen>
+    <dimen name="search_resting_elevation">2dp</dimen>
+    <dimen name="search_scrolling_elevation">16dp</dimen>
+    <dimen name="cardview_padding">10dp</dimen>
+    <dimen name="action_button_margin">24dp</dimen>
+    <dimen name="toolbar_margin_start">16dp</dimen>
+    <dimen name="toolbar_margin_end">64dp</dimen>
+    <dimen name="toolbar_height">192dp</dimen>
+    <dimen name="place_list_margin_top">-16dp</dimen>
+    <dimen name="body_text_size">16sp</dimen>
+    <dimen name="current_place_confidence_text_size">12sp</dimen>
+    <dimen name="place_search_list_header_height">32dp</dimen>
+    <dimen name="place_detail_text_size">18sp</dimen>
+    <dimen name="place_detail_item_margin_vertical">5dp</dimen>
+    <dimen name="action_button_elevation">6dp</dimen>
 </resources>
diff --git a/samples/PlacesGraphSample/res/values/strings.xml b/samples/PlacesGraphSample/res/values/strings.xml
new file mode 100644
index 000000000..73deb10b3
--- /dev/null
+++ b/samples/PlacesGraphSample/res/values/strings.xml
@@ -0,0 +1,94 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+
+<resources>
+
+    <!-- Enter your Google Map Api Key here -->
+    <string name="google_maps_key"></string>
+
+    <!-- When using a client token to authenticate, also changes the app_id to your own -->
+    <string name="app_id">1839650616300326</string>
+    <string name="fb_login_protocol_scheme">fb1839650616300326</string>
+
+    <string name="app_name">PlacesGraphSample</string>
+    <string name="facebook_app_name">PlacesGraphAndroidSample</string>
+    <string name="cancelled">Cancelled</string>
+    <string name="permission_not_granted">Unable to perform selected action because permissions were not granted.</string>
+    <string name="ok">OK</string>
+    <string name="yes">Yes</string>
+    <string name="no">No</string>
+    <string name="error">Error</string>
+    <string name="exception">Exception: %1$s</string>
+    <string name="loading">Loading</string>
+    <string name="permission_prompt_location">This sample app requires location access to search for nearby places.</string>
+    <string name="permission_prompt_call_phone">This sample app requires permission to place a phone call.</string>
+    <string name="current_place">Current place</string>
+    <string name="add_my_location">Add my location</string>
+    <string name="place_search_hint">Search for nearby places…</string>
+
+    <string name="location_error_disabled">Location services are disabled. Enable location services to use this application.</string>
+    <string name="location_error_unknown">An error has occurred retrieving the current location.</string>
+
+    <string name="place_info_checkins">%1$d checkins</string>
+    <string name="place_info_is_permanently_closed">Permanently closed</string>
+    <string name="place_info_parking_lot">Parking lot</string>
+    <string name="place_info_parking_street">Street</string>
+    <string name="place_info_parking_valet">Valet</string>
+    <string name="place_info_rating">%1$s stars (%2$d ratings)</string>
+    <string name="place_info_fan_count">%1$d fans</string>
+
+    <string name="place_field_about">About</string>
+    <string name="place_field_address">Address</string>
+    <string name="place_field_app_link">App Link</string>
+    <string name="place_field_categories">Categories</string>
+    <string name="place_field_checkins">Checkins</string>
+    <string name="place_field_description">Description</string>
+    <string name="place_field_engagement">Engagement</string>
+    <string name="place_field_hours">Business hours</string>
+    <string name="place_field_link">Link</string>
+    <string name="place_field_parking">Parking</string>
+    <string name="place_field_payment_options">Payment options</string>
+    <string name="place_field_phone">Phone</string>
+    <string name="place_field_price_range">Price range</string>
+    <string name="place_field_rating">Rating</string>
+    <string name="place_field_rating_count">Rating count</string>
+    <string name="place_field_specialties">Specialties</string>
+    <string name="place_field_services">Services</string>
+    <string name="place_field_website">Website</string>
+
+    <string name="parking_lot">Lot</string>
+    <string name="parking_street">Street</string>
+    <string name="parking_valet">Valet</string>
+
+    <string name="monday">Monday</string>
+    <string name="tuesday">Tuesday</string>
+    <string name="wednesday">Wednesday</string>
+    <string name="thursday">Thursday</string>
+    <string name="friday">Friday</string>
+    <string name="saturday">Saturday</string>
+    <string name="sunday">Sunday</string>
+
+    <string name="place_always_open">This place is open 24H</string>
+    <string name="place_permanently_closed">This place is permanently closed</string>
+
+    <string name="place_app_link">Open this place in Facebook</string>
+
+</resources>
diff --git a/samples/PlacesGraphSample/res/values/styles.xml b/samples/PlacesGraphSample/res/values/styles.xml
new file mode 100644
index 000000000..5b85747b9
--- /dev/null
+++ b/samples/PlacesGraphSample/res/values/styles.xml
@@ -0,0 +1,26 @@
+<resources>
+    <!--
+    Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+
+    You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+    copy, modify, and distribute this software in source code or binary form for use
+    in connection with the web services and APIs provided by Facebook.
+
+    As with any software that integrates with the Facebook platform, your use of
+    this software is subject to the Facebook Developer Principles and Policies
+    [http://developers.facebook.com/policy/]. This copyright notice shall be
+    included in all copies or substantial portions of the software.
+
+    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+    FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+    COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+    IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+    CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+-->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
+        <item name="colorPrimary">@color/primary</item>
+        <item name="colorPrimaryDark">@color/primary_dark</item>
+        <item name="colorAccent">@color/accent</item>
+    </style>
+</resources>
diff --git a/samples/PlacesGraphSample/src/com/example/places/MainActivity.java b/samples/PlacesGraphSample/src/com/example/places/MainActivity.java
new file mode 100644
index 000000000..983c31d3b
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/MainActivity.java
@@ -0,0 +1,282 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places;
+
+import android.Manifest;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.os.Bundle;
+import android.support.v4.app.ActivityCompat;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v7.app.AlertDialog;
+import android.support.v7.app.AppCompatActivity;
+
+import com.example.places.fragments.PlaceInfoFragment;
+import com.example.places.fragments.PlaceSearchFragment;
+import com.example.places.fragments.LoginFragment;
+import com.example.places.model.Place;
+import com.facebook.AccessToken;
+import com.facebook.FacebookSdk;
+
+/**
+ * This sample application illustrates how to use the Places Graph SDK to:
+ * <ul>
+ *   <li>Retrieve a collection of place candidates along with confidence level estimates, that the
+ * user is at those places.</li>
+ *   <li>Allow the user to provide feedback on the accuracy of the current place estimate.</li>
+ *   <li>Search for nearby places.</li>
+ *   <li>Retrieve detailed place information.</li>
+ *   <li>Retrieve a cover photo associated with a particular place.</li>
+ *   <li>Display places on a map.</li>
+ *</ul>
+ * <p>
+ * {@link PlacesGraphSDKHelper} demonstrates how to create requests with the Places Graph SDK.
+ *
+ * {@link com.example.places.model.Place} and {@link com.example.places.model.PlaceTextUtils}
+ * demonstrates how to parse place information.
+ */
+public class MainActivity extends AppCompatActivity implements LoginFragment.Listener,
+        PlaceSearchFragment.Listener, PlaceInfoFragment.Listener {
+
+    private static final int REQUEST_LOCATION = 0;
+    private static final int REQUEST_CALL_PHONE = 1;
+
+    /**
+     * The Places Graph SDK can be accessed using either a User Access Token or a Client Token.
+     * A User Access Token will require users to login to Facebook, but a Client Token won't.
+     *
+     * This sample app demonstrates how to use both User Access Tokens and Client Tokens.
+     * To use either one, just change the value of {@code authenticationType}
+     * to USER_TOKEN or CLIENT_TOKEN.
+     */
+    private enum AuthenticationType {
+        USER_TOKEN,
+        CLIENT_TOKEN,
+    };
+
+    /**
+     * This variable specifies whether the sample app uses a User Access Token or a Client Token.
+     *
+     * Change it to AuthenticationType.CLIENT_TOKEN to use a Client Token.
+     *
+     * To use a client token, you will also need to: update "app_id" in strings.xml to
+     * the application ID of your app, and then update the CLIENT_TOKEN constant in this class to
+     * the value of your app client token. You can find the client token value on the Developer
+     * Portal page of your app, under the Advanced Settings section.
+     */
+    private final AuthenticationType authenticationType = AuthenticationType.USER_TOKEN;
+
+    /**
+     * To use client token authentication, get your app client token from the developer
+     * portal, and enter it below. The client token is available under your application page in the
+     * Developer Portal, under the Advanced Settings section. Note that you must also change
+     * the app_id to your own Application ID in the file "strings.xml".
+     */
+    private static final String CLIENT_TOKEN = "";
+
+    private Intent callPhoneIntent;
+
+    public void onCreate(Bundle bundle) {
+        super.onCreate(bundle);
+
+        setContentView(R.layout.main_activity);
+
+        /**
+         * You can use the Places Graph SDK with either a User Access Token, or a Client Token.
+         * By default, this code sample is configured to use a User Access Token.
+         */
+        if (authenticationType == AuthenticationType.USER_TOKEN) {
+            AccessToken accessToken = AccessToken.getCurrentAccessToken();
+            if (accessToken == null) {
+                /**
+                 * When a User Access Token is used, and if the token is not present,
+                 * then prompt the user to log into Facebook.
+                 */
+                displayLoginFragment();
+            } else {
+                displayPlaceListFragment();
+            }
+        } else {
+            /**
+             * When a Client Token is used, set the client token to the Facebook SDK class
+             * as illustrated below. Users do not need to log into Facebook. PlaceManager requests
+             * can be placed once the client token has been set.
+             */
+            FacebookSdk.setClientToken(CLIENT_TOKEN);
+            displayPlaceListFragment();
+        }
+    }
+
+    public void onStart() {
+        super.onStart();
+        if (!hasLocationPermission()) {
+            requestLocationPermission();
+        }
+    }
+
+    private void requestLocationPermission() {
+        /*
+         * Prompts the user to grant location permissions. This sample app uses the
+         * device's' location to get the current place from the Place Graph SDK,
+         * and to perform local place searches.
+         */
+        if (ActivityCompat.shouldShowRequestPermissionRationale(
+            this,
+            Manifest.permission.ACCESS_FINE_LOCATION)) {
+
+            AlertDialog.Builder builder = new AlertDialog.Builder(this);
+            builder.setMessage(R.string.permission_prompt_location);
+            builder.setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    ActivityCompat.requestPermissions(
+                            MainActivity.this,
+                            new String[]{Manifest.permission.ACCESS_FINE_LOCATION,
+                                    Manifest.permission.ACCESS_COARSE_LOCATION},
+                            REQUEST_LOCATION);
+                }
+            });
+            builder.create().show();
+        } else {
+            ActivityCompat.requestPermissions(
+                    this,
+                    new String[]{Manifest.permission.ACCESS_FINE_LOCATION,
+                            Manifest.permission.ACCESS_COARSE_LOCATION},
+                    REQUEST_LOCATION);
+        }
+    }
+
+    @Override
+    public void onRequestPermissionsResult(
+            int requestCode,
+            String[] permissions,
+            int[] grantResults) {
+        if (requestCode == REQUEST_CALL_PHONE) {
+            try {
+                if (callPhoneIntent != null) {
+                    startActivity(callPhoneIntent);
+                    callPhoneIntent = null;
+                }
+            } catch (SecurityException e) {
+                callPhoneIntent = null;
+                // ignore
+            }
+        } else {
+            super.onRequestPermissionsResult(requestCode, permissions, grantResults);
+        }
+    }
+
+    @Override
+    public void onLoginComplete() {
+        // Event invoked by the LoginFragment when login completes.
+        displayPlaceListFragment();
+    }
+
+    @Override
+    public void onPlaceSelected(Place place) {
+        // Event invoked by the PlaceSearchFragment when a place is selected.
+        displayPlaceInfoFragment(place);
+    }
+
+    @Override
+    public void onLocationPermissionsError() {
+        // Event invoked by the PlaceSearchFragment when the Places Graph SDK fails to retrieve
+        // the current device location due to missing location permissions.
+        requestLocationPermission();
+    }
+
+    private void displayPlaceListFragment() {
+        PlaceSearchFragment placeListFragment = PlaceSearchFragment.newInstance();
+        FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
+        transaction.replace(R.id.fragment_placeholder, placeListFragment);
+        transaction.commit();
+    }
+
+    private void displayLoginFragment() {
+        LoginFragment loginFragment = LoginFragment.newInstance();
+        FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();
+        transaction.replace(R.id.fragment_placeholder, loginFragment);
+        transaction.commit();
+    }
+
+    private void displayPlaceInfoFragment(Place place) {
+        PlaceInfoFragment placeInfoFragment = PlaceInfoFragment.newInstance();
+        Bundle bundle = new Bundle();
+        bundle.putParcelable(PlaceInfoFragment.EXTRA_PLACE, place);
+        placeInfoFragment.setArguments(bundle);
+        getSupportFragmentManager()
+                .beginTransaction()
+                .add(R.id.fragment_placeholder, placeInfoFragment, "details")
+                .addToBackStack(place.get(Place.NAME))
+                .commit();
+    }
+
+    @Override
+    public void onCallPhone(final Intent intent) {
+        /*
+         * Prompts the user for permission to place a phone call, and then places the call.
+         */
+        if (hasPermission(Manifest.permission.CALL_PHONE)) {
+            startActivity(intent);
+        } else if (ActivityCompat.shouldShowRequestPermissionRationale(
+            this,
+            Manifest.permission.CALL_PHONE)) {
+
+            AlertDialog.Builder builder = new AlertDialog.Builder(this);
+            builder.setMessage(R.string.permission_prompt_call_phone);
+            builder.setPositiveButton(R.string.ok, new DialogInterface.OnClickListener() {
+                @Override
+                public void onClick(DialogInterface dialog, int which) {
+                    callPhoneIntent = intent;
+                    ActivityCompat.requestPermissions(
+                            MainActivity.this,
+                            new String[]{Manifest.permission.CALL_PHONE},
+                            REQUEST_CALL_PHONE);
+                }
+            });
+            builder.create().show();
+        } else {
+            callPhoneIntent = intent;
+            ActivityCompat.requestPermissions(
+                    this,
+                    new String[]{Manifest.permission.CALL_PHONE},
+                    REQUEST_CALL_PHONE);
+        }
+    }
+
+    private boolean hasPermission(String permission) {
+        return ActivityCompat.checkSelfPermission(this, permission)
+                == PackageManager.PERMISSION_GRANTED;
+    }
+
+    @Override
+    public boolean hasLocationPermission() {
+        return hasPermission(Manifest.permission.ACCESS_FINE_LOCATION)
+                || hasPermission(Manifest.permission.ACCESS_COARSE_LOCATION);
+    }
+
+    @Override
+    public boolean onSupportNavigateUp() {
+        onBackPressed();
+        return true;
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/PlacesGraphSDKHelper.java b/samples/PlacesGraphSample/src/com/example/places/PlacesGraphSDKHelper.java
new file mode 100644
index 000000000..d5dade6e2
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/PlacesGraphSDKHelper.java
@@ -0,0 +1,491 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places;
+
+import android.support.annotation.Nullable;
+import android.util.Log;
+
+import com.example.places.model.CurrentPlaceResult;
+import com.example.places.model.Place;
+import com.example.places.utils.BitmapDownloadTask;
+import com.facebook.FacebookRequestError;
+import com.facebook.FacebookSdk;
+import com.facebook.GraphRequest;
+import com.facebook.GraphResponse;
+import com.facebook.places.PlaceManager;
+import com.facebook.places.model.CurrentPlaceFeedbackRequestParams;
+import com.facebook.places.model.CurrentPlaceRequestParams;
+import com.facebook.places.model.PlaceFields;
+import com.facebook.places.model.PlaceInfoRequestParams;
+import com.facebook.places.model.PlaceSearchRequestParams;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.lang.ref.WeakReference;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * This class illustrates how to use the Places Graph SDK to:
+ * <ul>
+ *   <li>Get the current place.</li>
+ *   <li>Provide feedback on the current place response.</li>
+ *   <li>Search places.</li>
+ *   <li>Fetch detailed place info.</li>
+ *</ul>
+ * This class also illustrates how to parse the responses of the Places Graph SDK.
+ */
+public class PlacesGraphSDKHelper {
+
+    private static final String TAG = "PlacesGraphSDKHelper";
+    private static final String PARAM_DATA = "data";
+
+    /**
+     * These are the place fields that are fetched in the place info request.
+     */
+    private static final String[] PLACE_INFO_REQUEST_FIELDS = new String[]{
+            Place.ID,
+            Place.NAME,
+            Place.DESCRIPTION,
+            Place.CHECKINS,
+            Place.ABOUT,
+            Place.ENGAGEMENT,
+            Place.HOURS,
+            Place.COVER,
+            Place.IS_ALWAYS_OPEN,
+            Place.IS_PERMANENTLY_CLOSED,
+            Place.IS_VERIFIED,
+            Place.LINK,
+            Place.APP_LINKS,
+            Place.OVERALL_STAR_RATING,
+            Place.PARKING,
+            Place.RESTAURANT_SPECIALTIES,
+            Place.WEBSITE,
+            Place.LOCATION,
+            Place.PHONE,
+            Place.PRICE_RANGE,
+            Place.RATING_COUNT,
+            Place.CATEGORY_LIST,
+            Place.RESTAURANT_SERVICES,
+            Place.PAYMENT_OPTIONS,
+            Place.WORKFLOWS,
+            Place.SINGLE_LINE_ADDRESS,
+    };
+
+    /**
+     * Defines the listener invoked when the current place response is received.
+     */
+    public interface CurrentPlaceRequestListener {
+
+        /**
+         * Invoked when the current place response is received.
+         *
+         * @param result This object contains the list of places, and the tracking ID parsed
+         *  from the current place response; or it contains null if the request fails.
+         * @param response The Places Graph response.
+         */
+        void onCurrentPlaceResult(
+                @Nullable CurrentPlaceResult result,
+                GraphResponse response);
+
+        /**
+         * Invoked when the Places Graph SDK fails to retrieve the current location.
+         * @param error Contains a message that explains why retrieving the location failed.
+         */
+        void onLocationError(PlaceManager.LocationError error);
+    }
+
+    /**
+     * Defines the listener invoked when the place search response is received.
+     */
+    public interface PlaceSearchRequestListener {
+
+        /**
+         * Invoked when the place search response has been received.
+         *
+         * @param places The list of places parsed from the response,
+         *               or contains null if the request fails.
+         * @param response The Places Graph response.
+         */
+        void onPlaceSearchResult(@Nullable List<Place> places, GraphResponse response);
+
+        /**
+         * Invoked when the Places Graph SDK fails to retrieve the current location.
+         * @param error Contains the reason why retrieving the location failed.
+         */
+        void onLocationError(PlaceManager.LocationError error);
+    }
+
+    /**
+     * Defines the listener invoked when the place info response is received.
+     */
+    public interface PlaceInfoRequestListener {
+
+        /**
+         * Invoked when the place info response is received.
+         *
+         * @param place The place instance parsed from the response,
+         *              or contains null if the request fails.
+         * @param response The Places Graph response.
+         */
+        void onPlaceInfoResult(@Nullable Place place, GraphResponse response);
+    }
+
+    /**
+     * Creates and executes a place search request.
+     * @param searchQuery The text search term. This can be null to let the Places Graph SDK
+     *                    return nearby places.
+     * @param listener Invoked when the place search response is received,
+     *                 and when the place search request fails.
+     */
+    public static void searchPlace(String searchQuery, PlaceSearchRequestListener listener) {
+
+        // Creates the place search request builder.
+        PlaceSearchRequestParams.Builder builder = new PlaceSearchRequestParams.Builder();
+        // Specifies the text search query. This field is optional. If you don't specify it,
+        // then places of importance within the maximum distance radius will be returned.
+        builder.setSearchText(searchQuery);
+        // The maximum search radius in meters.
+        builder.setDistance(1000);
+        // The maximum number of places to return.
+        builder.setLimit(10);
+        // The place fields to be returned.
+        builder.addField(Place.NAME);
+        builder.addField(Place.LOCATION);
+        builder.addField(Place.PHONE);
+
+        // Creates the callback invoked when the request is ready.
+        OnPlaceSearchRequestReadyCallback onRequestReadyCallback =
+                new OnPlaceSearchRequestReadyCallback(listener);
+
+        // The Places Graph SDK starts retrieving the current device location, and constructs
+        // the GraphRequest. The callback is invoked once the request is ready.
+        PlaceManager.newPlaceSearchRequest(builder.build(), onRequestReadyCallback);
+    }
+
+    private static class OnPlaceSearchRequestReadyCallback
+            implements PlaceManager.OnRequestReadyCallback, GraphRequest.Callback {
+
+        private final WeakReference<PlaceSearchRequestListener> listenerRef;
+
+        OnPlaceSearchRequestReadyCallback(PlaceSearchRequestListener listener) {
+            listenerRef = new WeakReference<>(listener);
+        }
+
+        @Override
+        public void onLocationError(PlaceManager.LocationError error) {
+            // Invoked if the Places Graph SDK fails to retrieve the device location.
+            PlaceSearchRequestListener listener = listenerRef.get();
+            if (listener == null) {
+                Log.d(TAG, "listener is null!");
+            } else {
+                listener.onLocationError(error);
+            }
+        }
+
+        @Override
+        public void onRequestReady(GraphRequest graphRequest) {
+
+            // The place search request is ready to be executed.
+            // The request can be customized here if needed.
+
+            // Sets the callback, and executes the request.
+            graphRequest.setCallback(this);
+            graphRequest.executeAsync();
+        }
+
+        @Override
+        public void onCompleted(GraphResponse response) {
+            // Event invoked when the place search response is received.
+
+            List<Place> places = null;
+
+            FacebookRequestError error = response.getError();
+            if (error == null) {
+                // Parses the place search response.
+                try {
+                    JSONObject jsonObject = response.getJSONObject();
+                    if (jsonObject != null) {
+                        JSONArray jsonArray = jsonObject.optJSONArray(PARAM_DATA);
+                        if (jsonArray != null) {
+                            int length = jsonArray.length();
+                            places = new ArrayList<>(length);
+                            for (int i = 0; i < length; i++) {
+                                places.add(new Place(jsonArray.getJSONObject(i)));
+                            }
+                        }
+                    }
+                } catch (JSONException e) {
+                    Log.e(TAG, "failed to parse place the place search response", e);
+                }
+            } else {
+                // The error object contains more information on the error.
+                Log.d(TAG, "response error: " + error);
+            }
+
+            PlaceSearchRequestListener listener = listenerRef.get();
+            if (listener == null) {
+                Log.d(TAG, "no listener!");
+            } else {
+                listener.onPlaceSearchResult(places, response);
+            }
+        }
+    }
+
+    /**
+     * Creates and executes a current place request.
+     * This request is used to determine the place where the user is currently located.
+     *
+     * @param listener Listener invoked when the current place response is received.
+     */
+    public static void getCurrentPlace(CurrentPlaceRequestListener listener) {
+
+        // Creates the current place request builder.
+        CurrentPlaceRequestParams.Builder builder =
+                new CurrentPlaceRequestParams.Builder();
+
+        // Specifies the minimum confidence level of the results.
+        builder.setMinConfidenceLevel(CurrentPlaceRequestParams.ConfidenceLevel.LOW);
+        // Specifies the maximum number of places returned.
+        builder.setLimit(10);
+        // Specifies the place fields returned.
+        builder.addField(PlaceFields.NAME);
+        builder.addField(PlaceFields.CONFIDENCE_LEVEL);
+        builder.addField(PlaceFields.LOCATION);
+        builder.addField(PlaceFields.PHONE);
+
+        OnCurrentPlaceRequestReadyCallback callback =
+                new OnCurrentPlaceRequestReadyCallback(listener);
+
+        PlaceManager.newCurrentPlaceRequest(builder.build(), callback);
+    }
+
+    private static class OnCurrentPlaceRequestReadyCallback
+            implements PlaceManager.OnRequestReadyCallback, GraphRequest.Callback {
+
+        private final WeakReference<CurrentPlaceRequestListener> listenerRef;
+
+        private OnCurrentPlaceRequestReadyCallback(CurrentPlaceRequestListener listener) {
+            listenerRef = new WeakReference<>(listener);
+        }
+
+        @Override
+        public void onRequestReady(GraphRequest graphRequest) {
+
+            // The current place request is ready. The request can be customized here.
+            // Define the callback that will handle and parse the response,
+            // and then execute the request.
+            graphRequest.setCallback(this);
+            graphRequest.executeAsync();
+        }
+
+        @Override
+        public void onCompleted(GraphResponse response) {
+
+            FacebookRequestError error = response.getError();
+
+            // Parses the current place response. CurrentPlaceResult is used in
+            // the sample app to illustrate how to parse the list of places, and
+            // how to parse the tracking ID from the current place response.
+
+            CurrentPlaceResult result = null;
+            if (error == null) {
+                try {
+                    JSONObject jsonObject = response.getJSONObject();
+                    if (jsonObject != null) {
+                        result = CurrentPlaceResult.fromJson(jsonObject);
+                    }
+                } catch (JSONException e) {
+                    Log.e(TAG, "error while parsing current place response", e);
+                }
+            } else {
+                Log.d(TAG, "response error: " + error);
+            }
+
+            CurrentPlaceRequestListener listener = listenerRef.get();
+            if (listener == null) {
+                Log.d(TAG, "no listener");
+            } else {
+                listener.onCurrentPlaceResult(result, response);
+            }
+        }
+
+        @Override
+        public void onLocationError(PlaceManager.LocationError error) {
+            CurrentPlaceRequestListener listener = listenerRef.get();
+            if (listener == null) {
+                Log.d(TAG, "listener is null!");
+            } else {
+                listener.onLocationError(error);
+            }
+        }
+    }
+
+    /**
+     * Creates and executes a current place feedback request. This request is used to provide
+     * feedback on the accuracy of the current place response.
+     *
+     * @param currentPlaceResult The result of the current place request.
+     * @param place The place where the user is (or isn't') located.
+     * @param wasHere true to indicate that the user is located at the place, and
+     * false to indicate that the user is not located at the place.
+     */
+    public static void provideCurrentPlaceFeedback(
+            final CurrentPlaceResult currentPlaceResult,
+            final Place place,
+            final boolean wasHere) {
+
+        // Creates the builder of the current place feedback request.
+        CurrentPlaceFeedbackRequestParams.Builder builder =
+                new CurrentPlaceFeedbackRequestParams.Builder();
+
+        /**
+         * Sets the tracking ID, which is used as a correlator to the current place response.
+         * The tracking ID is retrieved from the current place response.
+          */
+        builder.setTracking(currentPlaceResult.getTracking());
+
+        // The place at which the user is (or is not) located.
+        String placeId = place.get(Place.ID);
+        builder.setPlaceId(placeId);
+
+        // Indicates if the user is or is not at the place.
+        builder.setWasHere(wasHere);
+
+        GraphRequest request = PlaceManager.newCurrentPlaceFeedbackRequest(builder.build());
+
+        GraphRequest.Callback callback = new GraphRequest.Callback() {
+            @Override
+            public void onCompleted(GraphResponse response) {
+                boolean success = false;
+                FacebookRequestError error = response.getError();
+                if (error == null) {
+                    JSONObject jsonObject = response.getJSONObject();
+                    success = jsonObject.optBoolean("success");
+                } else {
+                    Log.d(TAG, "response error: " + error);
+                }
+                Log.d(
+                        TAG,
+                        "provideCurrentPlaceFeedback: onCompleted: response: success=" + success);
+            }
+        };
+        request.setCallback(callback);
+
+        request.executeAsync();
+    }
+
+    /**
+     * Creates and executes a Place Info request on the Places Graph SDK.
+     *
+     * @param place Specifies the place for retrieving additional fields.
+     * @param listener The listener invoked when the place details have been fetched.
+     */
+    public static void fetchPlaceInfo(Place place, PlaceInfoRequestListener listener) {
+
+        // Creates the builder for the place info request.
+        PlaceInfoRequestParams.Builder builder = new PlaceInfoRequestParams.Builder();
+
+        // Specifies the ID of the place to fetch information about.
+        String placeId = place.get(Place.ID);
+        builder.setPlaceId(placeId);
+        /**
+         * Specifies the fields to be fetched. Note the fields are defined in {@link PlaceFields}
+         * as String constants. Refer to the Places Graph online documentation to see the
+         * complete list of fields.
+         */
+        builder.addFields(PLACE_INFO_REQUEST_FIELDS);
+
+        // Create the place information request.
+        final GraphRequest request = PlaceManager.newPlaceInfoRequest(builder.build());
+
+        // Define the callback that will parse the response.
+        request.setCallback(new OnPlaceInfoResponseCallback(listener));
+        request.executeAsync();
+    }
+
+    /**
+     * Callback used to parse the place information response.
+     */
+    private static class OnPlaceInfoResponseCallback implements GraphRequest.Callback {
+
+        private final WeakReference<PlaceInfoRequestListener> listenerRef;
+
+        private OnPlaceInfoResponseCallback(PlaceInfoRequestListener listener) {
+            listenerRef = new WeakReference<>(listener);
+        }
+
+        @Override
+        public void onCompleted(GraphResponse response) {
+
+            Place place = null;
+
+            // The place object is used in the sample app to parse the JSON response
+            // from the Places Graph.
+            FacebookRequestError error = response.getError();
+            if (error == null) {
+                try {
+                    JSONObject jsonObject = response.getJSONObject();
+                    if (jsonObject != null) {
+                        place = new Place(jsonObject);
+                    }
+                } catch (Exception e) {
+                    Log.e(TAG, "failed to parse place info", e);
+                }
+            } else {
+                Log.d(TAG, "response error: " + error);
+            }
+
+            PlaceInfoRequestListener listener = listenerRef.get();
+            if (listener == null) {
+                Log.d(TAG, "no listener");
+            } else {
+                listener.onPlaceInfoResult(place, response);
+            }
+        }
+    }
+
+    /**
+     * Illustrates how to download the cover photo of a given place.
+     *
+     * @param place Specifies the place associated with the cover photo.
+     *              The place must have a COVER field. See {@link PlaceFields}.
+     * @param listener The listener invoked when the cover photo is downloaded.
+     * @return true if the download is initiated. false if the place does not have a COVER field.
+     */
+    public static boolean downloadPlaceCoverPhoto(
+            Place place,
+            BitmapDownloadTask.Listener listener) {
+        /**
+         * In your applications, use Fresco to download, load, cache, and display images.
+         * https://github.com/facebook/fresco
+         */
+        String coverPhotoUrl = place.getCoverPhotoUrl();
+        if (coverPhotoUrl == null) {
+            return false;
+        }
+        BitmapDownloadTask bitmapDownloadTask = new BitmapDownloadTask(coverPhotoUrl, listener);
+        FacebookSdk.getExecutor().execute(bitmapDownloadTask);
+        return true;
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceDetailsAdapter.java b/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceDetailsAdapter.java
new file mode 100644
index 000000000..3808161db
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceDetailsAdapter.java
@@ -0,0 +1,101 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.adapters;
+
+import android.content.Context;
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.example.places.R;
+import com.example.places.utils.PlaceFieldData;
+
+import java.util.List;
+
+public class PlaceDetailsAdapter extends
+        RecyclerView.Adapter<PlaceDetailsAdapter.PlaceDetailViewHolder> {
+
+    private List<PlaceFieldData> fields;
+    private Listener listener;
+
+    public interface Listener {
+        void onPlaceFieldSelected(PlaceFieldData placeFieldData);
+    }
+
+    public class PlaceDetailViewHolder extends RecyclerView.ViewHolder
+            implements View.OnClickListener {
+
+        private View container;
+        private TextView title;
+        private TextView text;
+        private PlaceFieldData currentPlaceFieldData;
+
+        public PlaceDetailViewHolder(View itemView) {
+            super(itemView);
+            container = itemView.findViewById(R.id.place_detail_container);
+            title = (TextView) itemView.findViewById(R.id.place_detail_title);
+            text = (TextView) itemView.findViewById(R.id.place_detail_text);
+        }
+
+        void update(PlaceFieldData placeFieldData) {
+            currentPlaceFieldData = placeFieldData;
+            title.setText(placeFieldData.getTitle());
+            text.setText(placeFieldData.getText());
+            if (placeFieldData.isClickable()) {
+                container.setOnClickListener(this);
+            } else {
+                container.setOnClickListener(null);
+            }
+        }
+
+        @Override
+        public void onClick(View v) {
+            listener.onPlaceFieldSelected(currentPlaceFieldData);
+        }
+    }
+
+    public PlaceDetailsAdapter(Listener listener, List<PlaceFieldData> fields) {
+        this.listener = listener;
+        this.fields = fields;
+    }
+
+    @Override
+    public PlaceDetailViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        Context context = parent.getContext();
+        LayoutInflater inflater = LayoutInflater.from(context);
+        View view = inflater.inflate(R.layout.place_info_item, parent, false);
+        PlaceDetailViewHolder viewHolder = new PlaceDetailViewHolder(view);
+        return viewHolder;
+    }
+
+    @Override
+    public int getItemCount() {
+        return fields.size();
+    }
+
+    @Override
+    public void onBindViewHolder(PlaceDetailViewHolder holder, int position) {
+        PlaceFieldData field = fields.get(position);
+        holder.update(field);
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceListAdapter.java b/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceListAdapter.java
new file mode 100644
index 000000000..9d6904aa6
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/adapters/PlaceListAdapter.java
@@ -0,0 +1,99 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.adapters;
+
+import android.content.Context;
+import android.support.v7.widget.CardView;
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.example.places.R;
+import com.example.places.model.Place;
+import com.example.places.model.PlaceTextUtils;
+
+import java.util.List;
+
+public class PlaceListAdapter extends RecyclerView.Adapter<PlaceListAdapter.PlaceViewHolder> {
+
+    private List<Place> places;
+    private Listener listener;
+    private int layoutId;
+
+    public interface Listener {
+        void onPlaceSelected(Place place);
+    }
+
+    public class PlaceViewHolder extends RecyclerView.ViewHolder {
+        private View container;
+        private TextView placeNameTextView;
+        private TextView placeAddressTextView;
+        private Place currentPlace;
+
+        public PlaceViewHolder(View itemView) {
+            super(itemView);
+            container = itemView.findViewById(R.id.place_container);
+            placeNameTextView = (TextView) itemView.findViewById(R.id.place_name);
+            placeAddressTextView =
+                    (TextView) itemView.findViewById(R.id.place_address);
+            container.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    listener.onPlaceSelected(currentPlace);
+                }
+            });
+        }
+
+        void refresh(Place place) {
+            this.currentPlace = place;
+            placeNameTextView.setText(place.get(Place.NAME));
+            placeAddressTextView.setText(PlaceTextUtils.getAddress(place));
+        }
+    }
+
+    public PlaceListAdapter(int laoyutId, List<Place> places, Listener listener) {
+        this.layoutId = laoyutId;
+        this.places = places;
+        this.listener = listener;
+    }
+
+    @Override
+    public PlaceViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        Context context = parent.getContext();
+        LayoutInflater inflater = LayoutInflater.from(context);
+        View view = inflater.inflate(layoutId, parent, false);
+        PlaceViewHolder viewHolder = new PlaceViewHolder(view);
+        return viewHolder;
+    }
+
+    @Override
+    public void onBindViewHolder(PlaceViewHolder holder, int position) {
+        Place place = places.get(position);
+        holder.refresh(place);
+    }
+
+    @Override
+    public int getItemCount() {
+        return places.size();
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/fragments/CurrentPlaceDialogFragment.java b/samples/PlacesGraphSample/src/com/example/places/fragments/CurrentPlaceDialogFragment.java
new file mode 100644
index 000000000..7d1f1dfdb
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/fragments/CurrentPlaceDialogFragment.java
@@ -0,0 +1,171 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.fragments;
+
+import android.app.Activity;
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.DialogFragment;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Toast;
+
+import com.example.places.PlacesGraphSDKHelper;
+import com.example.places.R;
+import com.example.places.adapters.PlaceListAdapter;
+import com.example.places.model.CurrentPlaceResult;
+import com.example.places.model.Place;
+import com.facebook.GraphResponse;
+import com.facebook.places.PlaceManager;
+
+/**
+ * This dialog fragment illustrates how to:
+ * <ul>
+ *   <li>Fetch a collection of current place candidates where the user might be located.</li>
+ *   <li>Display a list of current place candidates.</li>
+ *   <li>Provide feedback about the current place estimate.</li>
+ * </ul>
+ */
+public class CurrentPlaceDialogFragment extends DialogFragment implements
+        PlaceListAdapter.Listener {
+
+    public static final String EXTRA_CURRENT_PLACE = "current_place";
+
+    private RecyclerView recyclerView;
+    private View loadingView;
+    private CurrentPlaceResult currentPlaceResult;
+    private CurrentPlaceRequestListener currentPlaceRequestListener
+            = new CurrentPlaceRequestListener();
+
+    public static CurrentPlaceDialogFragment newInstance() {
+        return new CurrentPlaceDialogFragment();
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+        currentPlaceRequestListener = null;
+    }
+
+    public View onCreateView(
+            LayoutInflater inflater,
+            @Nullable ViewGroup container,
+            Bundle savedInstanceState) {
+        getDialog().setTitle(getString(R.string.current_place));
+        return inflater.inflate(R.layout.current_place_fragment, container, false);
+    }
+
+    @Override
+    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+
+        recyclerView = (RecyclerView) view.findViewById(R.id.current_place_recyclerview);
+        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
+        loadingView = view.findViewById(R.id.current_place_loading_container);
+
+        getCurrentPlace();
+    }
+
+    private void getCurrentPlace() {
+        PlacesGraphSDKHelper.getCurrentPlace(currentPlaceRequestListener);
+    }
+
+    @Override
+    public void onPlaceSelected(Place place) {
+
+        // Provides feedback to the Places Graph once the user confirms presence at
+        // a place. This feedback helps Facebook improve the accuracy of current place estimates.
+        PlacesGraphSDKHelper.provideCurrentPlaceFeedback(
+                currentPlaceResult,
+                place,
+                true);
+
+        Intent data = new Intent();
+        data.putExtra(EXTRA_CURRENT_PLACE, place);
+
+        getTargetFragment().onActivityResult(
+                getTargetRequestCode(),
+                Activity.RESULT_OK,
+                data);
+
+        dismiss();
+    }
+
+    private void refreshCurrentPlaceList(CurrentPlaceResult result) {
+        currentPlaceResult = result;
+
+        PlaceListAdapter adapter = new PlaceListAdapter(
+                R.layout.current_place_list_item,
+                result.getPlaces(),
+                this);
+
+        recyclerView.setAdapter(adapter);
+        recyclerView.setVisibility(View.VISIBLE);
+        loadingView.setVisibility(View.GONE);
+    }
+
+    private class CurrentPlaceRequestListener
+            implements PlacesGraphSDKHelper.CurrentPlaceRequestListener {
+
+        @Override
+        public void onCurrentPlaceResult(
+                @Nullable final CurrentPlaceResult result,
+                final GraphResponse response) {
+
+            if (isAdded()) {
+                getActivity().runOnUiThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        if (result == null) {
+                            Toast.makeText(
+                                    getActivity(),
+                                    R.string.error,
+                                    Toast.LENGTH_SHORT).show();
+                            dismiss();
+                        } else {
+                            refreshCurrentPlaceList(result);
+                        }
+                    }
+                });
+            }
+        }
+
+        @Override
+        public void onLocationError(PlaceManager.LocationError error) {
+            if (isAdded()) {
+                getActivity().runOnUiThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        Toast.makeText(
+                                getActivity(),
+                                R.string.location_error_unknown,
+                                Toast.LENGTH_SHORT).show();
+                        dismiss();
+                    }
+                });
+            }
+        }
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/fragments/LoginFragment.java b/samples/PlacesGraphSample/src/com/example/places/fragments/LoginFragment.java
new file mode 100644
index 000000000..fc81046e8
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/fragments/LoginFragment.java
@@ -0,0 +1,141 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.fragments;
+
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.example.places.R;
+import com.facebook.CallbackManager;
+import com.facebook.FacebookCallback;
+import com.facebook.FacebookException;
+import com.facebook.login.LoginResult;
+import com.facebook.login.widget.LoginButton;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * This fragment implements login to Facebook. This step is optional when
+ * using the Places Graph SDK.
+ *
+ * The Places Graph SDK supports two types of authentication tokens:
+ * <ul>
+ *     <li>Client Token: these do NOT require users to log in Facebook.
+ * Refer to {@link com.example.places.MainActivity} to see how to use a Client Token.</li>
+ *     <li>User Access Token: these are the tokens obtained when a user logs into Facebook.
+ *     This fragment illustrates how to login to Facebook and get a user token.
+ *     For more information about Facebook login, see the "HelloFacebookSample".</li>
+ * </ul>
+ */
+public class LoginFragment extends Fragment {
+
+    private static final String TAG = "LoginFragment";
+    private static final String PUBLIC_PERMISSION = "public_profile";
+
+    private Listener listener;
+    private CallbackManager callbackManager;
+
+    public interface Listener {
+        void onLoginComplete();
+    }
+
+    public static LoginFragment newInstance() {
+        return new LoginFragment();
+    }
+
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof Activity) {
+            listener = (Listener) context;
+        }
+    }
+
+    public void onDestroy() {
+        super.onDestroy();
+        listener = null;
+    }
+
+    @Nullable
+    @Override
+    public View onCreateView(
+            LayoutInflater inflater,
+            @Nullable ViewGroup container,
+            Bundle savedInstanceState) {
+        return inflater.inflate(R.layout.login_fragment, container, false);
+    }
+
+    @Override
+    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+
+        LoginButton loginButton = (LoginButton) view.findViewById(R.id.login_button);
+        loginButton.setFragment(this);
+        List<String> permissions = new ArrayList<>();
+        permissions.add(PUBLIC_PERMISSION);
+        loginButton.setReadPermissions(permissions);
+        callbackManager = CallbackManager.Factory.create();
+
+        loginButton.registerCallback(
+            callbackManager,
+            new FacebookCallback<LoginResult>() {
+                    @Override
+                    public void onSuccess(LoginResult loginResult) {
+                        listener.onLoginComplete();
+                    }
+
+                    @Override
+                    public void onCancel() {
+                        Log.d(TAG, "onCancel");
+                        showAlert();
+                    }
+
+                    @Override
+                    public void onError(FacebookException exception) {
+                        Log.d(TAG, "onError: " + exception);
+                        showAlert();
+                    }
+                });
+    }
+
+    private void showAlert() {
+        new AlertDialog.Builder(getActivity())
+                .setTitle(R.string.cancelled)
+                .setMessage(R.string.permission_not_granted)
+                .setPositiveButton(R.string.ok, null)
+                .show();
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        callbackManager.onActivityResult(requestCode, resultCode, data);
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceInfoFragment.java b/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceInfoFragment.java
new file mode 100644
index 000000000..e1d91ced9
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceInfoFragment.java
@@ -0,0 +1,276 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.fragments;
+
+import android.app.Activity;
+import android.content.ActivityNotFoundException;
+import android.content.Context;
+import android.content.Intent;
+import android.graphics.Bitmap;
+import android.net.Uri;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.design.widget.FloatingActionButton;
+import android.support.v4.app.Fragment;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.support.v7.widget.Toolbar;
+import android.telephony.PhoneNumberUtils;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.ProgressBar;
+import android.widget.Toast;
+
+import com.example.places.R;
+import com.example.places.adapters.PlaceDetailsAdapter;
+import com.example.places.PlacesGraphSDKHelper;
+import com.example.places.utils.PlaceFieldData;
+import com.example.places.utils.PlaceFieldDataFactory;
+import com.example.places.model.Place;
+import com.example.places.model.PlaceTextUtils;
+import com.example.places.utils.BitmapDownloadTask;
+import com.facebook.GraphResponse;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * This fragment illustrates how to get detailed place information from the Places Graph SDK.
+ *
+ * Refer to {@link PlacesGraphSDKHelper}, {@link Place}, and {@link PlaceTextUtils} to see how
+ * the place info request is created, and to see how the place info is parsed and displayed.
+ */
+public class PlaceInfoFragment extends Fragment implements
+        PlacesGraphSDKHelper.PlaceInfoRequestListener,
+        PlaceDetailsAdapter.Listener,
+        BitmapDownloadTask.Listener {
+
+    private static final String TAG = PlaceInfoFragment.class.getSimpleName();
+
+    public static final String EXTRA_PLACE = "place";
+
+    /**
+     *
+     * These are the place fields that will be displayed in the recycler view.
+     */
+    private static final String[] PLACE_FIELDS_TO_DISPLAY_IN_RECYCLERVIEW = new String[]{
+            Place.CATEGORY_LIST,
+            Place.ABOUT,
+            Place.LOCATION,
+            Place.PHONE,
+            Place.WEBSITE,
+            Place.HOURS,
+            Place.IS_ALWAYS_OPEN,
+            Place.IS_PERMANENTLY_CLOSED,
+            Place.DESCRIPTION,
+            Place.CHECKINS,
+            Place.OVERALL_STAR_RATING,
+            Place.ENGAGEMENT,
+            Place.RESTAURANT_SPECIALTIES,
+            Place.RESTAURANT_SERVICES,
+            Place.PRICE_RANGE,
+            Place.PAYMENT_OPTIONS,
+            Place.IS_VERIFIED,
+            Place.APP_LINKS,
+            Place.PARKING,
+            Place.LINK,
+    };
+
+    public interface Listener {
+        void onCallPhone(Intent intent);
+    }
+
+    private Listener listener;
+    private Place place;
+    private RecyclerView recyclerView;
+    private ImageView coverView;
+    private Toolbar toolbar;
+    private FloatingActionButton floatingActionButton;
+    private ProgressBar progressBar;
+
+    public static PlaceInfoFragment newInstance() {
+        return new PlaceInfoFragment();
+    }
+
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof Activity) {
+            listener = (Listener) context;
+        }
+    }
+
+    public void onDestroy() {
+        super.onDestroy();
+        listener = null;
+    }
+
+    public View onCreateView(
+            LayoutInflater inflater,
+            @Nullable ViewGroup container,
+            Bundle savedInstanceState) {
+        if (savedInstanceState == null) {
+            final Bundle args = getArguments();
+            place = args.getParcelable(EXTRA_PLACE);
+        } else {
+            place = savedInstanceState.getParcelable(EXTRA_PLACE);
+        }
+        return inflater.inflate(R.layout.place_info_fragment, container, false);
+    }
+
+    @Override
+    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+
+        toolbar = (Toolbar) view.findViewById(R.id.place_details_toolbar);
+        ((AppCompatActivity) getActivity()).setSupportActionBar(toolbar);
+        ((AppCompatActivity) getActivity()).getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+        ((AppCompatActivity) getActivity()).getSupportActionBar().setDisplayShowHomeEnabled(true);
+
+        progressBar = (ProgressBar) view.findViewById(R.id.place_details_progress);
+        coverView = (ImageView) view.findViewById(R.id.place_details_cover);
+        recyclerView = (RecyclerView) view.findViewById(R.id.place_details_recyclerview);
+        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
+        floatingActionButton =
+                (FloatingActionButton) view.findViewById(R.id.place_details_actionbutton);
+        floatingActionButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                String phoneNumber = place.get(Place.PHONE);
+                if (phoneNumber != null) {
+                    String strippedNumber = PhoneNumberUtils.stripSeparators(phoneNumber);
+                    Intent intent =
+                            new Intent(Intent.ACTION_CALL, Uri.parse("tel:" + strippedNumber));
+                    listener.onCallPhone(intent);
+                }
+            }
+        });
+
+        toolbar.setTitle(place.get(Place.NAME));
+        int actionButtonVisibility = place.has(Place.PHONE) ? View.VISIBLE : View.GONE;
+        floatingActionButton.setVisibility(actionButtonVisibility);
+
+        fetchPlaceInfo();
+    }
+
+    @Override
+    public void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
+        outState.putParcelable(EXTRA_PLACE, place);
+    }
+
+    public void onDestroyView() {
+        toolbar = null;
+        coverView = null;
+        recyclerView = null;
+        floatingActionButton = null;
+        super.onDestroyView();
+    }
+
+    private void fetchPlaceInfo() {
+        // Creates and executes a Place Info request on the Places Graph SDK
+        PlacesGraphSDKHelper.fetchPlaceInfo(place, this);
+        progressBar.setVisibility(View.VISIBLE);
+    }
+
+    private void updateList() {
+        List<PlaceFieldData> fields = new ArrayList<>();
+        for (String fieldName : PLACE_FIELDS_TO_DISPLAY_IN_RECYCLERVIEW) {
+            PlaceFieldData fieldData =
+                    PlaceFieldDataFactory.newPlaceField(getActivity(), fieldName, place);
+            if (fieldData != null) {
+                fields.add(fieldData);
+            }
+        }
+        PlaceDetailsAdapter adapter = new PlaceDetailsAdapter(this, fields);
+        recyclerView.setAdapter(adapter);
+    }
+
+    @Override
+    public void onPlaceInfoResult(final Place place, final GraphResponse response) {
+        if (isAdded()) {
+            getActivity().runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+                    progressBar.setVisibility(View.INVISIBLE);
+                    if (place == null) {
+                        // The response object contains additional information on the error.
+                        Toast.makeText(getActivity(), R.string.error, Toast.LENGTH_SHORT).show();
+                    } else {
+                        // Refresh the UI with the new place information.
+                        PlaceInfoFragment.this.place = place;
+                        updateList();
+                        downloadCoverPhoto();
+                    }
+                }
+            });
+        }
+    }
+
+    private void downloadCoverPhoto() {
+        // Downloads the place cover photo.
+        PlacesGraphSDKHelper.downloadPlaceCoverPhoto(place, PlaceInfoFragment.this);
+    }
+
+    @Override
+    public void onPlaceFieldSelected(PlaceFieldData placeFieldData) {
+        try {
+            Intent intent = placeFieldData.getActionIntent();
+            if (Intent.ACTION_CALL.equals(intent.getAction())) {
+                listener.onCallPhone(intent);
+            } else {
+                getActivity().startActivity(intent);
+            }
+        } catch (ActivityNotFoundException e) {
+            Log.e(TAG, "failed to start activity", e);
+        }
+    }
+
+    @Override
+    public void onBitmapDownloadSuccess(final String url, final Bitmap bitmap) {
+        if (isAdded()) {
+            getActivity().runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+                    coverView.setImageBitmap(bitmap);
+                }
+            });
+        }
+    }
+
+    @Override
+    public void onBitmapDownloadFailure(final String url) {
+        if (isAdded()) {
+            getActivity().runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+                    Toast.makeText(
+                            getActivity(),
+                            R.string.error,
+                            Toast.LENGTH_SHORT).show();
+                }
+            });
+        }
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceSearchFragment.java b/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceSearchFragment.java
new file mode 100644
index 000000000..0e4544f3a
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/fragments/PlaceSearchFragment.java
@@ -0,0 +1,404 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.fragments;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.graphics.Rect;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.design.widget.FloatingActionButton;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v4.view.ViewCompat;
+import android.support.v7.widget.CardView;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.view.KeyEvent;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.inputmethod.EditorInfo;
+import android.view.inputmethod.InputMethodManager;
+import android.widget.EditText;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.example.places.R;
+import com.example.places.adapters.PlaceListAdapter;
+import com.example.places.model.Place;
+import com.example.places.PlacesGraphSDKHelper;
+import com.example.places.model.PlaceTextUtils;
+import com.facebook.GraphResponse;
+import com.facebook.places.PlaceManager;
+import com.google.android.gms.maps.CameraUpdate;
+import com.google.android.gms.maps.CameraUpdateFactory;
+import com.google.android.gms.maps.GoogleMap;
+import com.google.android.gms.maps.OnMapReadyCallback;
+import com.google.android.gms.maps.SupportMapFragment;
+import com.google.android.gms.maps.model.LatLng;
+import com.google.android.gms.maps.model.LatLngBounds;
+import com.google.android.gms.maps.model.Marker;
+import com.google.android.gms.maps.model.MarkerOptions;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * This fragment illustrates how to use the Places Graph SDK to:
+ * <ul>
+ *     <li>Search for nearby places.</li>
+ *     <li>Display places on a map.</li>
+ * </ul>
+ */
+public class PlaceSearchFragment extends Fragment implements
+        PlacesGraphSDKHelper.PlaceSearchRequestListener,
+        PlaceListAdapter.Listener,
+        OnMapReadyCallback {
+
+    private static final int SCROLL_DIRECTION_UP = -1;
+    private static final int REQUEST_CODE_GET_CURRENT_PLACE = 1;
+
+    private Listener listener;
+    private ProgressBar progressBar;
+    private RecyclerView recyclerView;
+    private PlaceListAdapter placeListAdapter;
+    private TextView currentPlaceNameTextView;
+    private TextView currentPlaceAddressTextView;
+    private CardView searchCardView;
+    private CardView currentPlaceCardView;
+    private EditText searchEditText;
+    private FloatingActionButton actionButton;
+    private SupportMapFragment mapFragment;
+    private GoogleMap map;
+    private State state = State.LIST;
+
+    private List<Place> placesToDisplay = new ArrayList<>(0);
+
+    public enum State {
+        LIST,
+        MAP
+    };
+
+    public interface Listener {
+        void onPlaceSelected(Place place);
+        void onLocationPermissionsError();
+        boolean hasLocationPermission();
+    }
+
+    public static PlaceSearchFragment newInstance() {
+        return new PlaceSearchFragment();
+    }
+
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof Activity) {
+            listener = (Listener) context;
+        }
+    }
+
+    @Override
+    public void onDetach() {
+        super.onDetach();
+    }
+
+    public View onCreateView(
+            LayoutInflater inflater,
+            @Nullable ViewGroup container,
+            Bundle savedInstanceState) {
+        return inflater.inflate(R.layout.place_search_fragment, container, false);
+    }
+
+    @Override
+    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+
+        progressBar = (ProgressBar) view.findViewById(R.id.place_search_progressbar);
+        recyclerView = (RecyclerView) view.findViewById(R.id.place_search_recyclerview);
+        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
+
+        actionButton = (FloatingActionButton) view.findViewById(R.id.place_search_toggle_button);
+        actionButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                onActionButtonClicked();
+            }
+        });
+
+        currentPlaceCardView = (CardView) view.findViewById(R.id.current_place_cardview);
+        currentPlaceCardView.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                openCurrentPlaceDialog();
+            }
+        });
+
+        currentPlaceNameTextView = (TextView) view.findViewById(R.id.current_place_name);
+        currentPlaceAddressTextView = (TextView) view.findViewById(R.id.current_place_address);
+        searchCardView = (CardView) view.findViewById(R.id.place_search_cardview);
+        searchEditText = (EditText) view.findViewById(R.id.place_search_edittext);
+        searchEditText.setOnEditorActionListener(new TextView.OnEditorActionListener() {
+            @Override
+            public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {
+                // When the search soft input key is clicked,
+                // hide soft input and search nearby places
+                if (actionId == EditorInfo.IME_ACTION_SEARCH) {
+                    InputMethodManager imm = (InputMethodManager) getActivity()
+                            .getSystemService(Context.INPUT_METHOD_SERVICE);
+                    imm.hideSoftInputFromWindow(searchEditText.getWindowToken(), 0);
+                    searchPlace(searchEditText.getText().toString());
+                }
+                return true;
+            }
+        });
+
+        RecyclerView.ItemDecoration itemDecoration = new RecyclerView.ItemDecoration() {
+            @Override
+            public void getItemOffsets(
+                    Rect outRect,
+                    View view,
+                    RecyclerView parent,
+                    RecyclerView.State state) {
+                if (parent.getChildAdapterPosition(view) == 0) {
+                    outRect.top = getResources()
+                            .getDimensionPixelOffset(R.dimen.place_search_list_header_height);
+                }
+            }
+        };
+        recyclerView.addItemDecoration(itemDecoration);
+
+        recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {
+            @Override
+            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {
+                super.onScrolled(recyclerView, dx, dy);
+                float elevation;
+                if (recyclerView.canScrollVertically(SCROLL_DIRECTION_UP)) {
+                    elevation = getResources().getDimension(R.dimen.search_scrolling_elevation);
+                } else {
+                    elevation = getResources().getDimension(R.dimen.search_resting_elevation);
+                }
+                ViewCompat.setElevation(currentPlaceCardView, elevation);
+                ViewCompat.setElevation(searchCardView, elevation);
+            }
+        });
+    }
+
+    public void onDestroyView() {
+        recyclerView = null;
+        searchEditText = null;
+        searchCardView = null;
+        actionButton = null;
+        progressBar = null;
+        mapFragment = null;
+        map = null;
+        super.onDestroyView();
+    }
+
+    private void setLoading(boolean isLoading) {
+        progressBar.setVisibility(isLoading ? View.VISIBLE : View.INVISIBLE);
+    }
+
+    private void searchPlace(String searchQuery) {
+        setLoading(true);
+        PlacesGraphSDKHelper.searchPlace(searchQuery, this);
+    }
+
+    private void onActionButtonClicked() {
+        toggleMapAndList();
+        // Hide soft input
+        InputMethodManager imm = (InputMethodManager) getActivity()
+                .getSystemService(Context.INPUT_METHOD_SERVICE);
+        imm.hideSoftInputFromWindow(searchEditText.getWindowToken(), 0);
+    }
+
+    private void toggleMapAndList() {
+        state = state == State.MAP ? State.LIST : State.MAP;
+
+        if (state == State.LIST) {
+            if (mapFragment != null) {
+                FragmentTransaction ft = getChildFragmentManager().beginTransaction();
+                ft.hide(mapFragment).commit();
+            }
+            recyclerView.setVisibility(View.VISIBLE);
+            currentPlaceCardView.setVisibility(View.VISIBLE);
+        }
+        if (state == State.MAP) {
+            if (mapFragment == null) {
+                mapFragment = SupportMapFragment.newInstance();
+                FragmentTransaction transaction = getChildFragmentManager().beginTransaction();
+                transaction.replace(R.id.place_search_map_placeholder, mapFragment);
+                transaction.commit();
+                mapFragment.getMapAsync(this);
+            } else {
+                FragmentTransaction ft = getChildFragmentManager().beginTransaction();
+                ft.show(mapFragment).commit();
+            }
+            recyclerView.setVisibility(View.INVISIBLE);
+            currentPlaceCardView.setVisibility(View.INVISIBLE);
+        }
+        displayPlaces(placesToDisplay);
+    }
+
+    private void openCurrentPlaceDialog() {
+
+        CurrentPlaceDialogFragment currentPlaceDialogFragment =
+                CurrentPlaceDialogFragment.newInstance();
+
+        FragmentTransaction transaction = getChildFragmentManager().beginTransaction();
+        Fragment prev = getFragmentManager().findFragmentByTag("dialog");
+        if (prev != null) {
+            transaction.remove(prev);
+        }
+        transaction.addToBackStack(null);
+
+        currentPlaceDialogFragment.setTargetFragment(this, REQUEST_CODE_GET_CURRENT_PLACE);
+        currentPlaceDialogFragment.show(transaction, "dialog");
+    }
+
+    @Override
+    public void onPlaceSearchResult(final List<Place> places, GraphResponse response) {
+        if (isAdded()) {
+            getActivity().runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+
+                    setLoading(false);
+
+                    if (places == null) {
+                        // The response object does contain more information on the error
+                        Toast.makeText(getActivity(), R.string.error, Toast.LENGTH_SHORT).show();
+                    } else {
+                        placesToDisplay = places;
+                        displayPlaces(placesToDisplay);
+                    }
+                }
+            });
+        }
+    }
+
+    @Override
+    public void onLocationError(final PlaceManager.LocationError error) {
+
+        // This event is invoked when the Places Graph SDK fails to retrieve the device location.
+
+        if (isAdded()) {
+            getActivity().runOnUiThread(new Runnable() {
+                @Override
+                public void run() {
+                    if (error == PlaceManager.LocationError.LOCATION_PERMISSION_DENIED) {
+                        // Trigger the activity to prompt the user for location permissions.
+                        listener.onLocationPermissionsError();
+                    } else if (error == PlaceManager.LocationError.LOCATION_SERVICES_DISABLED) {
+                        String message = getString(R.string.location_error_disabled);
+                        Toast.makeText(getActivity(), message, Toast.LENGTH_SHORT).show();
+                    } else {
+                        String message = getString(R.string.location_error_unknown);
+                        Toast.makeText(getActivity(), message, Toast.LENGTH_SHORT).show();
+                    }
+                }
+            });
+        }
+    }
+
+    private void displayPlaces(List<Place> places) {
+        if (state == State.LIST) {
+            placeListAdapter = new PlaceListAdapter(R.layout.place_list_item, places, this);
+            recyclerView.setAdapter(placeListAdapter);
+            placeListAdapter.notifyDataSetChanged();
+        } else if (state == State.MAP) {
+            displayPlacesOnMap(places);
+        }
+    }
+
+    private void displayPlacesOnMap(List<Place> places) {
+        if (map != null) {
+            map.clear();
+            if (!places.isEmpty()) {
+                LatLngBounds.Builder boundsBuilder = new LatLngBounds.Builder();
+                for (Place place : places) {
+                    // Creates a marker at the place location and with the place name
+                    LatLng position = place.getPosition();
+                    String placeName = place.get(Place.NAME);
+                    if (position != null) {
+                        MarkerOptions markerOptions = new MarkerOptions()
+                                .position(position)
+                                .title(placeName);
+                        Marker marker = map.addMarker(markerOptions);
+                        marker.setTag(place);
+                        boundsBuilder.include(position);
+                    }
+                }
+
+                CameraUpdate cameraUpdate =
+                        CameraUpdateFactory.newLatLngBounds(boundsBuilder.build(), 100);
+                map.moveCamera(cameraUpdate);
+            }
+        }
+    }
+
+    @Override
+    @SuppressWarnings("MissingPermission")
+    public void onMapReady(GoogleMap googleMap) {
+        map = googleMap;
+        map.getUiSettings().setMapToolbarEnabled(false);
+        if (listener.hasLocationPermission()) {
+            map.setMyLocationEnabled(true);
+            map.getUiSettings().setMyLocationButtonEnabled(false);
+        }
+        map.setOnInfoWindowClickListener(new GoogleMap.OnInfoWindowClickListener() {
+            @Override
+            public void onInfoWindowClick(Marker marker) {
+                if (marker.getTag() instanceof Place) {
+                    Place place = (Place) marker.getTag();
+                    listener.onPlaceSelected(place);
+                }
+            }
+        });
+        if (state == State.MAP) {
+            displayPlaces(placesToDisplay);
+        }
+    }
+
+    @Override
+    public void onPlaceSelected(Place place) {
+        listener.onPlaceSelected(place);
+    }
+
+    private void onCurrentPlaceSelected(Place place) {
+        currentPlaceNameTextView.setText(place.get(Place.NAME));
+        currentPlaceNameTextView.setVisibility(View.VISIBLE);
+        currentPlaceAddressTextView.setText(PlaceTextUtils.getAddress(place));
+        currentPlaceAddressTextView.setVisibility(View.VISIBLE);
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        if (requestCode == REQUEST_CODE_GET_CURRENT_PLACE) {
+            if (resultCode == Activity.RESULT_OK) {
+                Place place = (Place) data.getParcelableExtra(
+                        CurrentPlaceDialogFragment.EXTRA_CURRENT_PLACE);
+                onCurrentPlaceSelected(place);
+            }
+        }
+    }
+}
diff --git a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/LoginSampleApplication.java b/samples/PlacesGraphSample/src/com/example/places/model/AppLink.java
similarity index 74%
rename from samples/LoginSample/src/main/java/com/facebook/samples/loginsample/LoginSampleApplication.java
rename to samples/PlacesGraphSample/src/com/example/places/model/AppLink.java
index fc3647bfa..05b74cec9 100644
--- a/samples/LoginSample/src/main/java/com/facebook/samples/loginsample/LoginSampleApplication.java
+++ b/samples/PlacesGraphSample/src/com/example/places/model/AppLink.java
@@ -18,19 +18,25 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.loginsample;
+package com.example.places.model;
 
-import android.app.Application;
+import android.content.Intent;
 
-import com.facebook.FacebookSdk;
-import com.facebook.appevents.AppEventsLogger;
+public class AppLink {
 
-public class LoginSampleApplication extends Application {
+    private String appName;
+    private Intent intent;
 
-    @Override
-    public void onCreate() {
-        super.onCreate();
-        FacebookSdk.sdkInitialize(getApplicationContext());
-        AppEventsLogger.activateApp(this);
+    public AppLink(String appName, Intent intent) {
+        this.appName = appName;
+        this.intent = intent;
+    }
+
+    public String getAppName() {
+        return appName;
+    }
+
+    public Intent getIntent() {
+        return intent;
     }
 }
diff --git a/samples/PlacesGraphSample/src/com/example/places/model/CurrentPlaceResult.java b/samples/PlacesGraphSample/src/com/example/places/model/CurrentPlaceResult.java
new file mode 100644
index 000000000..ad13b7a78
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/model/CurrentPlaceResult.java
@@ -0,0 +1,67 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.model;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class CurrentPlaceResult {
+
+    private static final String PARAM_DATA = "data";
+    private static final String PARAM_SUMMARY = "summary";
+    private static final String PARAM_TRACKING = "tracking";
+
+    private List<Place> places;
+    private String tracking;
+
+    public List<Place> getPlaces() {
+        return places;
+    }
+
+    public String getTracking() {
+        return tracking;
+    }
+
+    public static CurrentPlaceResult fromJson(JSONObject json) throws JSONException {
+
+        CurrentPlaceResult response = new CurrentPlaceResult();
+
+        if (json.has(PARAM_DATA)) {
+            JSONArray array = json.getJSONArray(PARAM_DATA);
+            int length = array.length();
+            response.places = new ArrayList<>(length);
+            for (int i=0; i<length; i++) {
+                JSONObject placeJson = array.getJSONObject(i);
+                response.places.add(new Place(placeJson));
+            }
+        }
+        if (json.has(PARAM_SUMMARY)) {
+            JSONObject summaryJson = json.getJSONObject(PARAM_SUMMARY);
+            response.tracking = summaryJson.getString(PARAM_TRACKING);
+        }
+
+        return response;
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/model/OpeningHours.java b/samples/PlacesGraphSample/src/com/example/places/model/OpeningHours.java
new file mode 100644
index 000000000..8b51d4dba
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/model/OpeningHours.java
@@ -0,0 +1,85 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.model;
+
+import android.text.TextUtils;
+import android.util.SparseArray;
+
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class OpeningHours {
+
+    public static final int MONDAY = 0;
+    public static final int TUESDAY = 1;
+    public static final int WEDNESDAY = 2;
+    public static final int THURSDAY = 3;
+    public static final int FRIDAY = 4;
+    public static final int SATURDAY = 5;
+    public static final int SUNDAY = 6;
+
+    private static final String[] DAY_PREFIX =
+            new String[] {"mon", "tue", "wed","thu", "fri", "sat","sun"};
+
+    private final SparseArray<List<String>> openingHours = new SparseArray<>();
+
+    public List<String> getHoursInterval(int day) {
+        return openingHours.get(day);
+    }
+
+    public static OpeningHours parse(Place place) {
+        JSONObject jsonHours = place.getJson(Place.HOURS);
+        if (jsonHours != null) {
+            OpeningHours instance = new OpeningHours();
+            for (int i = MONDAY; i <= SUNDAY; i++) {
+                List<String> hoursIntervals = getOpeningHoursOfADay(jsonHours, DAY_PREFIX[i]);
+                if (hoursIntervals != null) {
+                    instance.openingHours.put(i, hoursIntervals);
+                }
+            }
+            return instance;
+        }
+        return null;
+    }
+
+    private static List<String> getOpeningHoursOfADay(JSONObject jsonHours, String dayPrefix) {
+        List<String> hoursIntervals = null;
+        String open1 = jsonHours.optString(dayPrefix + "_1_open");
+        String close1 = jsonHours.optString(dayPrefix + "_1_close");
+
+        if (!TextUtils.isEmpty(open1) && !TextUtils.isEmpty(close1)) {
+            hoursIntervals = new ArrayList<>(4);
+            hoursIntervals.add(open1);
+            hoursIntervals.add(close1);
+
+            String open2 = jsonHours.optString(dayPrefix + "_2_open");
+            String close2 = jsonHours.optString(dayPrefix + "_2_close");
+
+            if (!TextUtils.isEmpty(open2) && !TextUtils.isEmpty(close2)) {
+                hoursIntervals.add(open2);
+                hoursIntervals.add(close2);
+            }
+        }
+        return hoursIntervals;
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/model/Place.java b/samples/PlacesGraphSample/src/com/example/places/model/Place.java
new file mode 100644
index 000000000..2269375a1
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/model/Place.java
@@ -0,0 +1,183 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.model;
+
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Parcel;
+import android.os.Parcelable;
+import android.text.TextUtils;
+import android.util.Log;
+
+import com.facebook.places.model.CurrentPlaceRequestParams;
+import com.facebook.places.model.PlaceFields;
+import com.google.android.gms.maps.model.LatLng;
+
+import org.json.JSONArray;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class Place implements PlaceFields, Parcelable {
+
+    private static final String TAG = Place.class.getSimpleName();
+
+    private JSONObject jsonData;
+
+    public Place(JSONObject jsonData) {
+        this.jsonData = jsonData;
+    }
+
+    public JSONObject getJson() {
+        return jsonData;
+    }
+
+    public String get(String field) {
+        return jsonData.optString(field);
+    }
+
+    public JSONObject getJson(String field) {
+        return jsonData.optJSONObject(field);
+    }
+
+    public JSONArray getJsonArray(String field) {
+        return jsonData.optJSONArray(field);
+    }
+
+    public int getInt(String field) {
+        return jsonData.optInt(field);
+    }
+
+    public boolean getBoolean(String field) {
+        return jsonData.optBoolean(field);
+    }
+
+    public boolean has(String field) {
+        return jsonData.has(field);
+    }
+
+    public LatLng getPosition() {
+        JSONObject location = jsonData.optJSONObject(LOCATION);
+        if (location != null) {
+            if (location.has("latitude") && location.has("longitude")) {
+                double latitude = location.optDouble("latitude");
+                double longitude = location.optDouble("longitude");
+                return new LatLng(latitude, longitude);
+            }
+        }
+        return null;
+    }
+
+    public CurrentPlaceRequestParams.ConfidenceLevel getConfidenceLevel() {
+        if (jsonData.has(CONFIDENCE_LEVEL)) {
+            String confidenceLevel = jsonData.optString(CONFIDENCE_LEVEL);
+            if ("high".equalsIgnoreCase(confidenceLevel)) {
+                return CurrentPlaceRequestParams.ConfidenceLevel.HIGH;
+            } else if ("medium".equalsIgnoreCase(confidenceLevel)) {
+                return CurrentPlaceRequestParams.ConfidenceLevel.MEDIUM;
+            } else if ("low".equalsIgnoreCase(confidenceLevel)) {
+                return CurrentPlaceRequestParams.ConfidenceLevel.LOW;
+            }
+        }
+        return null;
+    }
+
+    public String getCoverPhotoUrl() {
+        JSONObject coverPhotoJson = jsonData.optJSONObject("cover");
+        if (coverPhotoJson != null) {
+            return coverPhotoJson.optString("source");
+        }
+        return null;
+    }
+
+    public Intent getAppLinkIntent(String appName) {
+        List<AppLink> appLinks = getAppLinks();
+        if (appLinks != null) {
+            for (AppLink appLink : appLinks) {
+                if (appName.equals(appLink.getAppName())) {
+                    return appLink.getIntent();
+                }
+            }
+        }
+        return null;
+    }
+
+    public List<AppLink> getAppLinks() {
+        List<AppLink> appLinks = new ArrayList<>();
+        JSONObject appLinkJson = jsonData.optJSONObject(APP_LINKS);
+        if (appLinkJson != null) {
+            JSONArray appArray = appLinkJson.optJSONArray("android");
+            if (appArray != null) {
+                int length = appArray.length();
+                for (int i = 0; i < length; i++) {
+                    JSONObject linkJson = appArray.optJSONObject(i);
+                    if (linkJson != null) {
+                        String appName = linkJson.optString("app_name");
+                        Intent intent = new Intent(Intent.ACTION_VIEW);
+                        String packageName = linkJson.optString("package");
+                        String className = linkJson.optString("class");
+                        if (!TextUtils.isEmpty(packageName) && !TextUtils.isEmpty(className)) {
+                            intent.setClassName(packageName, className);
+                        }
+                        String url = linkJson.optString("url");
+                        if (url != null) {
+                            intent.setData(Uri.parse(url));
+                        }
+                        appLinks.add(new AppLink(appName, intent));
+                    }
+                }
+            }
+        }
+        return appLinks;
+    }
+
+    public OpeningHours getOpeningHours() {
+        return OpeningHours.parse(this);
+    }
+
+    @Override
+    public int describeContents() {
+        return 0;
+    }
+
+    @Override
+    public void writeToParcel(Parcel dest, int flags) {
+        dest.writeString(jsonData.toString());
+    }
+
+    public static final Parcelable.Creator<Place> CREATOR = new Parcelable.Creator<Place>() {
+
+        public Place createFromParcel(Parcel in) {
+            try {
+                String json = in.readString();
+                return new Place(new JSONObject(json));
+            } catch (Exception e) {
+                Log.e(TAG, "Failed to parse place", e);
+            }
+            return null;
+        }
+
+        public Place[] newArray(int size) {
+            return new Place[size];
+        }
+    };
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/model/PlaceTextUtils.java b/samples/PlacesGraphSample/src/com/example/places/model/PlaceTextUtils.java
new file mode 100644
index 000000000..5442980ec
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/model/PlaceTextUtils.java
@@ -0,0 +1,310 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.model;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.text.TextUtils;
+
+import com.example.places.R;
+
+import org.json.JSONArray;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class PlaceTextUtils {
+
+    private static final int[] DAY_OF_WEEK_STRINGID =  new int[]{
+            R.string.monday,
+            R.string.tuesday,
+            R.string.wednesday,
+            R.string.thursday,
+            R.string.friday,
+            R.string.saturday,
+            R.string.sunday,
+    };
+
+    public static String getFieldName(Context context, String placeField) {
+        Resources resources = context.getResources();
+        if (Place.ABOUT.equals(placeField)) {
+            return resources.getString(R.string.place_field_about);
+        } else if (Place.APP_LINKS.equals(placeField)) {
+            return resources.getString(R.string.place_field_app_link);
+        } else if (Place.CATEGORY_LIST.equals(placeField)) {
+            return resources.getString(R.string.place_field_categories);
+        } else if (Place.CHECKINS.equals(placeField)) {
+            return resources.getString(R.string.place_field_checkins);
+        } else if (Place.DESCRIPTION.equals(placeField)) {
+            return resources.getString(R.string.place_field_description);
+        } else if (Place.ENGAGEMENT.equals(placeField)) {
+            return resources.getString(R.string.place_field_engagement);
+        } else if (Place.HOURS.equals(placeField)) {
+            return resources.getString(R.string.place_field_hours);
+        } else if (Place.LOCATION.equals(placeField)) {
+            return resources.getString(R.string.place_field_address);
+        } else if (Place.LINK.equals(placeField)) {
+            return resources.getString(R.string.place_field_link);
+        } else if (Place.OVERALL_STAR_RATING.equals(placeField)) {
+            return resources.getString(R.string.place_field_rating);
+        } else if (Place.PARKING.equals(placeField)) {
+            return resources.getString(R.string.place_field_parking);
+        } else if (Place.PAYMENT_OPTIONS.equals(placeField)) {
+            return resources.getString(R.string.place_field_payment_options);
+        } else if (Place.PHONE.equals(placeField)) {
+            return resources.getString(R.string.place_field_phone);
+        } else if (Place.PRICE_RANGE.equals(placeField)) {
+            return resources.getString(R.string.place_field_price_range);
+        } else if (Place.RATING_COUNT.equals(placeField)) {
+            return resources.getString(R.string.place_field_rating_count);
+        } else if (Place.RESTAURANT_SPECIALTIES.equals(placeField)) {
+            return resources.getString(R.string.place_field_specialties);
+        } else if (Place.RESTAURANT_SERVICES.equals(placeField)) {
+            return resources.getString(R.string.place_field_services);
+        } else if (Place.WEBSITE.equals(placeField)) {
+            return resources.getString(R.string.place_field_website);
+        }
+        return null;
+    }
+
+    public static String getFieldValue(Context context, Place place, String field) {
+        Resources resources = context.getResources();
+        if (Place.CATEGORY_LIST.equals(field)) {
+            List<String> categories = getCategories(place);
+            return TextUtils.join(", ", categories);
+        } else if (Place.LOCATION.equals(field)) {
+            return getAddress(place);
+        } else if (Place.PHONE.equals(field)) {
+            return place.get(field);
+        } else if (Place.WEBSITE.equals(field)) {
+            return place.get(field);
+        } else if (Place.LINK.equals(field)) {
+            return place.get(field);
+        } else if (Place.HOURS.equals(field)) {
+            return getOpeningHours(context, place);
+        } else if (Place.DESCRIPTION.equals(field)) {
+            return place.get(field);
+        } else if (Place.ABOUT.equals(field)) {
+            return place.get(field);
+        } else if (Place.CHECKINS.equals(field)) {
+            int checkins = place.getInt(field);
+            return resources.getString(R.string.place_info_checkins, checkins);
+        } else if (Place.OVERALL_STAR_RATING.equals(field)) {
+            String rating = place.get(Place.OVERALL_STAR_RATING);
+            int ratingCount = place.getInt(Place.RATING_COUNT);
+            if (!TextUtils.isEmpty(rating) && ratingCount > 0) {
+                return resources.getString(R.string.place_info_rating, rating, ratingCount);
+            }
+        } else if (Place.ENGAGEMENT.equals(field)) {
+            JSONObject jsonObject = place.getJson(Place.ENGAGEMENT);
+            if (jsonObject != null) {
+                return jsonObject.optString("social_sentence");
+            }
+        } else if (Place.RESTAURANT_SPECIALTIES.equals(field)) {
+            List<String> specialties = getRestaurantSpecialties(context, place);
+            if (!specialties.isEmpty()) {
+                return TextUtils.join(", ", specialties);
+            }
+        } else if (Place.PRICE_RANGE.equals(field)) {
+            return place.get(Place.PRICE_RANGE);
+        } else if (Place.IS_ALWAYS_OPEN.equals(field)) {
+            boolean isAlwaysOpen = place.getBoolean(field);
+            if (isAlwaysOpen) {
+                return resources.getString(R.string.place_always_open);
+            }
+        } else if (Place.IS_PERMANENTLY_CLOSED.equals(field)) {
+            boolean isPermanentlyClosed = place.getBoolean(field);
+            if (isPermanentlyClosed) {
+                return resources.getString(R.string.place_permanently_closed);
+            }
+        } else if (Place.APP_LINKS.equals(field)) {
+           if (hasFacebookAppLink(place)) {
+                return resources.getString(R.string.place_app_link);
+            }
+        } else if (Place.PARKING.equals(field)) {
+            List<String> parking = getParking(context, place);
+            if (!parking.isEmpty()) {
+                return TextUtils.join(", ", parking);
+            }
+        } else if (Place.RESTAURANT_SERVICES.equals(field)) {
+            List<String> services = getRestaurantServices(context, place);
+            if (!services.isEmpty()) {
+                return TextUtils.join(", ", services);
+            }
+        } else if (Place.PAYMENT_OPTIONS.equals(field)) {
+            List<String> paymentOptions = getPaymentOptions(context, place);
+            if (!paymentOptions.isEmpty()) {
+                return TextUtils.join(", ", paymentOptions);
+            }
+        }
+        return null;
+    }
+
+    public static String getAddress(Place place) {
+        if (place.has(Place.SINGLE_LINE_ADDRESS)) {
+            return place.get(Place.SINGLE_LINE_ADDRESS);
+        } else if (place.has(Place.LOCATION)) {
+            JSONObject location = place.getJson(Place.LOCATION);
+            List<String> address = new ArrayList<>(5);
+            String street = location.optString("street");
+            if (!TextUtils.isEmpty(street)) {
+                address.add(street);
+            }
+            String city = location.optString("city");
+            if (!TextUtils.isEmpty(city)) {
+                address.add(city);
+            }
+            String state = location.optString("state");
+            if (!TextUtils.isEmpty(state)) {
+                address.add(state);
+            }
+            String country = location.optString("city");
+            if (!TextUtils.isEmpty(country)) {
+                address.add(country);
+            }
+            return TextUtils.join(", ", address);
+        }
+        return null;
+    }
+
+    public static List<String> getCategories(Place place) {
+        JSONObject jsonData = place.getJson();
+        List<String> categories = new ArrayList<>();
+        JSONArray jsonCategories = jsonData.optJSONArray(Place.CATEGORY_LIST);
+        if (jsonCategories != null) {
+            int length = jsonCategories.length();
+            for (int i=0; i<length; i++) {
+                JSONObject jsonCategory = jsonCategories.optJSONObject(i);
+                if (jsonCategory != null) {
+                    String category = jsonCategory.optString("name");
+                    categories.add(category);
+                }
+            }
+        }
+        return categories;
+    }
+
+    public static String getOpeningHours(Context context, Place place) {
+        OpeningHours hours = place.getOpeningHours();
+        if (hours != null) {
+            StringBuilder openingHours = new StringBuilder();
+            for (int day = OpeningHours.MONDAY; day < OpeningHours.SUNDAY; day++) {
+                String hourIntervalText = getOpeningHourText(context.getResources(), hours, day);
+                if (hourIntervalText != null) {
+                    if (openingHours.length() > 0) {
+                        openingHours.append("\n");
+                    }
+                    openingHours.append(hourIntervalText);
+                }
+            }
+            if (openingHours.length() > 0) {
+                return openingHours.toString();
+            }
+        }
+        return null;
+    }
+
+    private static String getOpeningHourText(Resources resources, OpeningHours hours, int day) {
+        List<String> hourInterval = hours.getHoursInterval(day);
+        if (hourInterval != null) {
+            StringBuilder builder = new StringBuilder();
+            if (hourInterval.size() >= 2) {
+                builder.append(hourInterval.get(0));
+                builder.append(' ');
+                builder.append(hourInterval.get(1));
+            }
+            if (hourInterval.size() == 4) {
+                builder.append(", ");
+                builder.append(hourInterval.get(2));
+                builder.append(' ');
+                builder.append(hourInterval.get(3));
+            }
+            if (hourInterval.size() > 0) {
+                builder.append(" - ");
+                builder.append(resources.getString(DAY_OF_WEEK_STRINGID[day]));
+                return builder.toString();
+            }
+        }
+        return null;
+    }
+
+    public static List<String> getPaymentOptions(Context context, Place place) {
+        return extractValidValues(
+                context,
+                place.getJson(Place.PAYMENT_OPTIONS),
+                R.array.payment_options_keys,
+                R.array.payment_options_labels);
+    }
+
+    public static List<String> getParking(Context context, Place place) {
+        return extractValidValues(
+                context,
+                place.getJson(Place.PARKING),
+                R.array.parking_keys,
+                R.array.parking_labels);
+    }
+
+    public static List<String> getRestaurantSpecialties(Context context, Place place) {
+        return extractValidValues(
+                context,
+                place.getJson(Place.RESTAURANT_SPECIALTIES),
+                R.array.restaurant_specialties_keys,
+                R.array.restaurant_specialties_labels);
+    }
+
+    public static List<String> getRestaurantServices(Context context, Place place) {
+        return extractValidValues(
+                context,
+                place.getJson(Place.RESTAURANT_SERVICES),
+                R.array.restaurant_services_keys,
+                R.array.restaurant_services_labels);
+    }
+
+    private static List<String> extractValidValues(
+            Context context,
+            JSONObject jsonObject,
+            int keysId,
+            int labelsId) {
+        List<String> labels = new ArrayList<>();
+        if (jsonObject != null) {
+            String[] keys = context.getResources().getStringArray(keysId);
+            String[] labelArray = context.getResources().getStringArray(labelsId);
+            for (int i=0; i<keys.length; i++) {
+                int value = jsonObject.optInt(keys[i]);
+                if (value == 1) {
+                    labels.add(labelArray[i]);
+                }
+            }
+        }
+        return labels;
+    }
+
+    private static boolean hasFacebookAppLink(Place place) {
+        List<AppLink> appLinks = place.getAppLinks();
+        for (AppLink appLink : appLinks) {
+            if ("Facebook".equals(appLink.getAppName())) {
+                return true;
+            }
+        }
+        return false;
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/utils/BitmapDownloadTask.java b/samples/PlacesGraphSample/src/com/example/places/utils/BitmapDownloadTask.java
new file mode 100644
index 000000000..980331846
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/utils/BitmapDownloadTask.java
@@ -0,0 +1,71 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.utils;
+
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.util.Log;
+
+import java.io.InputStream;
+import java.lang.ref.WeakReference;
+import java.net.HttpURLConnection;
+
+/**
+ * In your applications, use Fresco for image download, caching and display.
+ * https://github.com/facebook/fresco
+ */
+public class BitmapDownloadTask implements Runnable {
+
+    private final String url;
+    private final WeakReference<Listener> listenerWeakReference;
+
+    public interface Listener {
+        void onBitmapDownloadSuccess(String url, Bitmap bitmap);
+        void onBitmapDownloadFailure(String url);
+    }
+
+    public BitmapDownloadTask(String url, Listener listener) {
+        this.url = url;
+        listenerWeakReference = new WeakReference<>(listener);
+    }
+
+    @Override
+    public void run() {
+        try {
+            HttpURLConnection connection =
+                    (HttpURLConnection) new java.net.URL(url).openConnection();
+            connection.setDoInput(true);
+            connection.connect();
+            InputStream input = connection.getInputStream();
+            Bitmap bitmap = BitmapFactory.decodeStream(input);
+            Listener listener = listenerWeakReference.get();
+            if (listener != null) {
+                listener.onBitmapDownloadSuccess(url, bitmap);
+            }
+        } catch (Throwable t) {
+            t.printStackTrace();
+            Listener listener = listenerWeakReference.get();
+            if (listener != null) {
+                listener.onBitmapDownloadFailure(url);
+            }
+        }
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldData.java b/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldData.java
new file mode 100644
index 000000000..c58d1eec0
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldData.java
@@ -0,0 +1,94 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.utils;
+
+import android.content.Intent;
+import android.net.Uri;
+import android.telephony.PhoneNumberUtils;
+
+import com.example.places.model.Place;
+
+public class PlaceFieldData {
+
+    public enum Type {
+        TEXT,
+        LINK,
+        PHONE,
+        MAP,
+        APP_LINK,
+    }
+
+    private Place place;
+    private String field;
+    private String title;
+    private String text;
+    private Type type;
+
+    public PlaceFieldData(Place place, String field, String title, String text, Type type) {
+        this.place = place;
+        this.field = field;
+        this.title = title;
+        this.text = text;
+        this.type = type;
+    }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public String getText() {
+        return text;
+    }
+
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    public void setText(String text) {
+        this.text = text;
+    }
+
+    public boolean isClickable() {
+        return type != Type.TEXT;
+    }
+
+    public Intent getActionIntent() {
+        Intent intent = null;
+        if (type == Type.LINK) {
+            intent = new Intent(Intent.ACTION_VIEW);
+            String url = text;
+            if (!url.startsWith("http")) {
+                url = "http://" + url;
+            }
+            intent.setData(Uri.parse(url));
+        } else if (type == Type.MAP) {
+            intent = new Intent(
+                    android.content.Intent.ACTION_VIEW,
+                    Uri.parse("google.navigation:q=" + text));
+        } else if (type == Type.PHONE) {
+            String number = PhoneNumberUtils.stripSeparators(text);
+            intent = new Intent(Intent.ACTION_CALL, Uri.parse("tel:" + number));
+        } else if (type == Type.APP_LINK) {
+            intent = place.getAppLinkIntent("Facebook");
+        }
+        return intent;
+    }
+}
diff --git a/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldDataFactory.java b/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldDataFactory.java
new file mode 100644
index 000000000..a7f36d881
--- /dev/null
+++ b/samples/PlacesGraphSample/src/com/example/places/utils/PlaceFieldDataFactory.java
@@ -0,0 +1,70 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.example.places.utils;
+
+import android.content.Context;
+
+import com.example.places.model.Place;
+import com.example.places.model.PlaceTextUtils;
+
+public class PlaceFieldDataFactory {
+
+    public static PlaceFieldData newPlaceField(
+            Context context,
+            String field,
+            Place place) {
+
+        if (!place.has(field)) {
+            return null;
+        }
+
+        String text = PlaceTextUtils.getFieldValue(context, place, field);
+
+        if (text == null) {
+            return null;
+        }
+        PlaceFieldData.Type type = getPlaceFieldType(field);
+        String title = PlaceTextUtils.getFieldName(context, field);
+
+        return new PlaceFieldData(
+                place,
+                field,
+                title,
+                text,
+                type);
+    }
+
+    private static PlaceFieldData.Type getPlaceFieldType(String field) {
+        switch (field) {
+            case Place.LOCATION:
+                return PlaceFieldData.Type.MAP;
+            case Place.APP_LINKS:
+                return PlaceFieldData.Type.APP_LINK;
+            case Place.PHONE:
+                return PlaceFieldData.Type.PHONE;
+            case Place.LINK:
+            case Place.WEBSITE:
+                return PlaceFieldData.Type.LINK;
+            default:
+                return PlaceFieldData.Type.TEXT;
+        }
+    }
+}
diff --git a/samples/RPSSample/AndroidManifest.xml b/samples/RPSSample/AndroidManifest.xml
index fd2b98cbe..bf78b7072 100644
--- a/samples/RPSSample/AndroidManifest.xml
+++ b/samples/RPSSample/AndroidManifest.xml
@@ -26,9 +26,9 @@
 
     <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="com.android.vending.BILLING" />
 
     <application
-        android:name=".RpsApplication"
         android:icon="@drawable/icon"
         android:label="@string/app_name"
         android:theme="@android:style/Theme.NoTitleBar">
diff --git a/samples/RPSSample/BUCK b/samples/RPSSample/BUCK
deleted file mode 100644
index f2e6f55ec..000000000
--- a/samples/RPSSample/BUCK
+++ /dev/null
@@ -1,35 +0,0 @@
-android_resource(
-  name = 'res',
-  res = 'res',
-  package = 'com.example.rps',
-  deps = [
-    '//facebook:android-sdk',
-  ],
-)
-
-android_library(
-  name = 'lib',
-  srcs = glob(['src/**/*.java']),
-  deps = [
-    ':res',
-    '//facebook:android-sdk',
-    '//libs:android-support-v4',
-  ],
-)
-
-android_binary(
-  name = 'app',
-  manifest = 'AndroidManifest.xml',
-  keystore = '//keystores:debug',
-  package_type = 'debug',
-  deps = [
-    ':lib',
-    '//facebook:android-sdk',
-    '//libs:android-support-v4',
-  ],
-)
-
-project_config(
-  src_target = ':app',
-  src_roots = ['src'],
-)
diff --git a/samples/RPSSample/build.gradle b/samples/RPSSample/build.gradle
index 8ba946d53..f23e23455 100644
--- a/samples/RPSSample/build.gradle
+++ b/samples/RPSSample/build.gradle
@@ -1,7 +1,8 @@
 apply plugin: 'com.android.application'
 
 dependencies {
-    compile project(':facebook')
+    compile project(':facebook-login')
+    compile project(':facebook-share')
 }
 
 android {
@@ -9,6 +10,7 @@ android {
     buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
 
     defaultConfig {
+        applicationId 'com.example.rps'
         minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
         targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
     }
@@ -22,6 +24,7 @@ android {
             manifest.srcFile 'AndroidManifest.xml'
             java.srcDirs = ['src']
             res.srcDirs = ['res']
+            aidl.srcDirs = ['src']
         }
     }
 
diff --git a/samples/RPSSample/res/drawable-hdpi/icon.png b/samples/RPSSample/res/drawable-hdpi/icon.png
index 9e70a87f3..e3336f6bf 100644
Binary files a/samples/RPSSample/res/drawable-hdpi/icon.png and b/samples/RPSSample/res/drawable-hdpi/icon.png differ
diff --git a/samples/RPSSample/res/layout/rps_fragment.xml b/samples/RPSSample/res/layout/rps_fragment.xml
index 42bde19b6..1e4cb0397 100644
--- a/samples/RPSSample/res/layout/rps_fragment.xml
+++ b/samples/RPSSample/res/layout/rps_fragment.xml
@@ -26,38 +26,68 @@
               android:layout_width="match_parent"
               android:background="@drawable/app_background">
 
-    <LinearLayout android:layout_height="wrap_content"
-                  android:layout_width="wrap_content"
-                  android:layout_gravity="center"
-                  android:orientation="vertical">
-        <TextView android:layout_height="wrap_content"
-                  android:layout_width="wrap_content"
-                  android:id="@+id/text_rock"
-                  android:textColor="@color/text_color"
-                  android:textSize="@dimen/text_size"
-                  android:layout_gravity="left"
-                  android:layout_marginTop="20dp"
-                  android:text="@string/rock" />
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:orientation="vertical"
+        >
 
-        <TextView android:layout_height="wrap_content"
-                  android:layout_width="wrap_content"
-                  android:id="@+id/text_paper"
-                  android:textColor="@color/text_color"
-                  android:textSize="@dimen/text_size"
-                  android:layout_gravity="left"
-                  android:layout_marginLeft="30dp"
-                  android:text="@string/paper"/>
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="70dp"
+            android:layout_gravity="center_vertical"
+            android:layout_marginTop="20dp"
+            android:orientation="horizontal"
+            >
 
-        <TextView android:layout_height="wrap_content"
-                  android:layout_width="wrap_content"
-                  android:id="@+id/text_scissors"
-                  android:textColor="@color/text_color"
-                  android:textSize="@dimen/text_size"
-                  android:layout_gravity="left"
-                  android:layout_marginLeft="60dp"
-                  android:layout_marginBottom="20dp"
-                  android:text="@string/scissors"/>
+            <TextView
+                android:id="@+id/text_rock"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="left"
+                android:text="@string/rock"
+                android:textColor="@color/text_color"
+                android:textSize="@dimen/text_size"
+                />
+
+            <Button
+                android:id="@+id/buy_button"
+                android:layout_width="80dp"
+                android:layout_height="55dp"
+                android:layout_gravity="center_horizontal"
+                android:layout_marginLeft="40dp"
+                android:background="@drawable/icon_border"
+                android:text="@string/buy_token"
+                android:textColor="@color/text_color"
+                android:textSize="20sp"
+                style="@style/again_button_style"
+                />
+            />
+        </LinearLayout>
+
+        <TextView
+            android:id="@+id/text_paper"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="left"
+            android:layout_marginLeft="30dp"
+            android:text="@string/paper"
+            android:textColor="@color/text_color"
+            android:textSize="@dimen/text_size" />
+
+        <TextView
+            android:id="@+id/text_scissors"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="left"
+            android:layout_marginBottom="20dp"
+            android:layout_marginLeft="60dp"
+            android:text="@string/scissors"
+            android:textColor="@color/text_color"
+            android:textSize="@dimen/text_size" />
     </LinearLayout>
+
     <FrameLayout
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
diff --git a/samples/RPSSample/res/values/strings.xml b/samples/RPSSample/res/values/strings.xml
index 51acce981..0572a4f6f 100644
--- a/samples/RPSSample/res/values/strings.xml
+++ b/samples/RPSSample/res/values/strings.xml
@@ -27,6 +27,7 @@
     <string name="rock">Rock</string>
     <string name="paper">Paper</string>
     <string name="scissors">Scissors</string>
+    <string name="buy_token">Buy Token</string>
     <string name="shoot">Shoot!</string>
     <string name="win">Win!</string>
     <string name="loss">Loss</string>
diff --git a/samples/RPSSample/src/com/android/vending/billing/IInAppBillingService.aidl b/samples/RPSSample/src/com/android/vending/billing/IInAppBillingService.aidl
new file mode 100644
index 000000000..2a492f784
--- /dev/null
+++ b/samples/RPSSample/src/com/android/vending/billing/IInAppBillingService.aidl
@@ -0,0 +1,144 @@
+/*
+ * Copyright (C) 2012 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.vending.billing;
+
+import android.os.Bundle;
+
+/**
+ * InAppBillingService is the service that provides in-app billing version 3 and beyond.
+ * This service provides the following features:
+ * 1. Provides a new API to get details of in-app items published for the app including
+ *    price, type, title and description.
+ * 2. The purchase flow is synchronous and purchase information is available immediately
+ *    after it completes.
+ * 3. Purchase information of in-app purchases is maintained within the Google Play system
+ *    till the purchase is consumed.
+ * 4. An API to consume a purchase of an inapp item. All purchases of one-time
+ *    in-app items are consumable and thereafter can be purchased again.
+ * 5. An API to get current purchases of the user immediately. This will not contain any
+ *    consumed purchases.
+ *
+ * All calls will give a response code with the following possible values
+ * RESULT_OK = 0 - success
+ * RESULT_USER_CANCELED = 1 - user pressed back or canceled a dialog
+ * RESULT_BILLING_UNAVAILABLE = 3 - this billing API version is not supported for the type requested
+ * RESULT_ITEM_UNAVAILABLE = 4 - requested SKU is not available for purchase
+ * RESULT_DEVELOPER_ERROR = 5 - invalid arguments provided to the API
+ * RESULT_ERROR = 6 - Fatal error during the API action
+ * RESULT_ITEM_ALREADY_OWNED = 7 - Failure to purchase since item is already owned
+ * RESULT_ITEM_NOT_OWNED = 8 - Failure to consume since item is not owned
+ */
+interface IInAppBillingService {
+    /**
+     * Checks support for the requested billing API version, package and in-app type.
+     * Minimum API version supported by this interface is 3.
+     * @param apiVersion the billing version which the app is using
+     * @param packageName the package name of the calling app
+     * @param type type of the in-app item being purchased "inapp" for one-time purchases
+     *        and "subs" for subscription.
+     * @return RESULT_OK(0) on success, corresponding result code on failures
+     */
+    int isBillingSupported(int apiVersion, String packageName, String type);
+
+    /**
+     * Provides details of a list of SKUs
+     * Given a list of SKUs of a valid type in the skusBundle, this returns a bundle
+     * with a list JSON strings containing the productId, price, title and description.
+     * This API can be called with a maximum of 20 SKUs.
+     * @param apiVersion billing API version that the Third-party is using
+     * @param packageName the package name of the calling app
+     * @param skusBundle bundle containing a StringArrayList of SKUs with key "ITEM_ID_LIST"
+     * @return Bundle containing the following key-value pairs
+     *         "RESPONSE_CODE" with int value, RESULT_OK(0) if success, other response codes on
+     *              failure as listed above.
+     *         "DETAILS_LIST" with a StringArrayList containing purchase information
+     *              in JSON format similar to:
+     *              '{ "productId" : "exampleSku", "type" : "inapp", "price" : "$5.00",
+     *                 "title : "Example Title", "description" : "This is an example description" }'
+     */
+    Bundle getSkuDetails(int apiVersion, String packageName, String type, in Bundle skusBundle);
+
+    /**
+     * Returns a pending intent to launch the purchase flow for an in-app item by providing a SKU,
+     * the type, a unique purchase token and an optional developer payload.
+     * @param apiVersion billing API version that the app is using
+     * @param packageName package name of the calling app
+     * @param sku the SKU of the in-app item as published in the developer console
+     * @param type the type of the in-app item ("inapp" for one-time purchases
+     *        and "subs" for subscription).
+     * @param developerPayload optional argument to be sent back with the purchase information
+     * @return Bundle containing the following key-value pairs
+     *         "RESPONSE_CODE" with int value, RESULT_OK(0) if success, other response codes on
+     *              failure as listed above.
+     *         "BUY_INTENT" - PendingIntent to start the purchase flow
+     *
+     * The Pending intent should be launched with startIntentSenderForResult. When purchase flow
+     * has completed, the onActivityResult() will give a resultCode of OK or CANCELED.
+     * If the purchase is successful, the result data will contain the following key-value pairs
+     *         "RESPONSE_CODE" with int value, RESULT_OK(0) if success, other response codes on
+     *              failure as listed above.
+     *         "INAPP_PURCHASE_DATA" - String in JSON format similar to
+     *              '{"orderId":"12999763169054705758.1371079406387615",
+     *                "packageName":"com.example.app",
+     *                "productId":"exampleSku",
+     *                "purchaseTime":1345678900000,
+     *                "purchaseToken" : "122333444455555",
+     *                "developerPayload":"example developer payload" }'
+     *         "INAPP_DATA_SIGNATURE" - String containing the signature of the purchase data that
+     *                                  was signed with the private key of the developer
+     *                                  TODO: change this to app-specific keys.
+     */
+    Bundle getBuyIntent(int apiVersion, String packageName, String sku, String type,
+        String developerPayload);
+
+    /**
+     * Returns the current SKUs owned by the user of the type and package name specified along with
+     * purchase information and a signature of the data to be validated.
+     * This will return all SKUs that have been purchased in V3 and managed items purchased using
+     * V1 and V2 that have not been consumed.
+     * @param apiVersion billing API version that the app is using
+     * @param packageName package name of the calling app
+     * @param type the type of the in-app items being requested
+     *        ("inapp" for one-time purchases and "subs" for subscription).
+     * @param continuationToken to be set as null for the first call, if the number of owned
+     *        skus are too many, a continuationToken is returned in the response bundle.
+     *        This method can be called again with the continuation token to get the next set of
+     *        owned skus.
+     * @return Bundle containing the following key-value pairs
+     *         "RESPONSE_CODE" with int value, RESULT_OK(0) if success, other response codes on
+     *              failure as listed above.
+     *         "INAPP_PURCHASE_ITEM_LIST" - StringArrayList containing the list of SKUs
+     *         "INAPP_PURCHASE_DATA_LIST" - StringArrayList containing the purchase information
+     *         "INAPP_DATA_SIGNATURE_LIST"- StringArrayList containing the signatures
+     *                                      of the purchase information
+     *         "INAPP_CONTINUATION_TOKEN" - String containing a continuation token for the
+     *                                      next set of in-app purchases. Only set if the
+     *                                      user has more owned skus than the current list.
+     */
+    Bundle getPurchases(int apiVersion, String packageName, String type, String continuationToken);
+
+    /**
+     * Consume the last purchase of the given SKU. This will result in this item being removed
+     * from all subsequent responses to getPurchases() and allow re-purchase of this item.
+     * @param apiVersion billing API version that the app is using
+     * @param packageName package name of the calling app
+     * @param purchaseToken token in the purchase information JSON that identifies the purchase
+     *        to be consumed
+     * @return 0 if consumption succeeded. Appropriate error values for failures.
+     */
+    int consumePurchase(int apiVersion, String packageName, String purchaseToken);
+}
diff --git a/samples/RPSSample/src/com/example/rps/MainActivity.java b/samples/RPSSample/src/com/example/rps/MainActivity.java
index d87c786e5..f3bad16b1 100644
--- a/samples/RPSSample/src/com/example/rps/MainActivity.java
+++ b/samples/RPSSample/src/com/example/rps/MainActivity.java
@@ -33,7 +33,9 @@
 
 import bolts.AppLinks;
 import com.facebook.*;
-import com.facebook.appevents.AppEventsLogger;
+import com.facebook.AccessToken;
+import com.facebook.FacebookException;
+import com.facebook.FacebookSdk;
 import com.facebook.share.model.GameRequestContent;
 import com.facebook.share.widget.GameRequestDialog;
 
diff --git a/samples/RPSSample/src/com/example/rps/RpsFragment.java b/samples/RPSSample/src/com/example/rps/RpsFragment.java
index 7fe141832..675df413f 100644
--- a/samples/RPSSample/src/com/example/rps/RpsFragment.java
+++ b/samples/RPSSample/src/com/example/rps/RpsFragment.java
@@ -21,15 +21,22 @@
 package com.example.rps;
 
 import android.app.AlertDialog;
+import android.app.PendingIntent;
+import android.content.ComponentName;
+import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
+import android.content.IntentSender;
+import android.content.ServiceConnection;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.graphics.drawable.BitmapDrawable;
 import android.net.Uri;
 import android.os.Bundle;
 import android.os.Handler;
+import android.os.IBinder;
 import android.os.Message;
+import android.os.RemoteException;
 import android.support.v4.app.Fragment;
 import android.util.Log;
 import android.view.LayoutInflater;
@@ -37,7 +44,11 @@
 import android.view.ViewGroup;
 import android.widget.*;
 
+import com.android.vending.billing.IInAppBillingService;
 import com.facebook.*;
+import com.facebook.AccessToken;
+import com.facebook.FacebookException;
+import com.facebook.internal.Utility;
 import com.facebook.login.DefaultAudience;
 import com.facebook.login.LoginManager;
 import com.facebook.login.LoginResult;
@@ -54,6 +65,9 @@
 import com.facebook.share.widget.MessageDialog;
 import com.facebook.share.widget.ShareDialog;
 
+import org.json.JSONException;
+import org.json.JSONObject;
+
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Random;
@@ -79,6 +93,18 @@
     private static final int INITIAL_DELAY_MILLIS = 500;
     private static final int DEFAULT_DELAY_MILLIS = 1000;
     private static final String TAG = RpsFragment.class.getName();
+    private static final String TEST_SKU = "android.test.purchased";
+    // TOKEN_SKU should only be used for licensed test users to purchase in-app products set by
+    // developers. Please follow Google's guide for reference
+    // https://developer.android.com/google/play/billing/billing_testing.html#testing-purchases
+    private static final String TOKEN_SKU = "com.rpssample.token";
+    private static final String INAPP_PURCHASE_ITEM_LIST = "INAPP_PURCHASE_ITEM_LIST";
+    private static final String INAPP_PURCHASE_DATA_LIST = "INAPP_PURCHASE_DATA_LIST";
+    private static final String INAPP_DATA_SIGNATURE_LIST = "INAPP_DATA_SIGNATURE_LIST";
+    private static final String BUY_INTENT = "BUY_INTENT";
+    private static final String RESPONSE_CODE = "RESPONSE_CODE";
+
+    public static final int BILLING_RESPONSE_RESULT_OK = 0;
 
     private static String[] PHOTO_URIS = {null, null, null};
 
@@ -95,6 +121,7 @@
     private ImageButton fbButton;
     private TextView statsTextView;
     private ViewFlipper rpsFlipper;
+    private Button buyButton;
 
     private int wins = 0;
     private int losses = 0;
@@ -111,6 +138,9 @@
     private ShareDialog shareDialog;
     private MessageDialog messageDialog;
     private AppInviteDialog appInviteDialog;
+    private IInAppBillingService inAppBillingService;
+    private ServiceConnection serviceConnection;
+    private Context context;
 
     private DialogInterface.OnClickListener canPublishClickListener = new DialogInterface.OnClickListener() {
         @Override
@@ -399,6 +429,54 @@ private ShareLinkContent getLinkContent() {
                 .build();
     }
 
+    // Workaround to bug where sometimes response codes come as Long instead of Integer
+    private int getResponseCodeFromBundle(Bundle b) {
+        Object o = b.get(RESPONSE_CODE);
+        if (o == null) {
+            Log.e(TAG, "Bundle with null response code, assuming OK (known issue)");
+            return BILLING_RESPONSE_RESULT_OK;
+        }
+        else if (o instanceof Integer) return ((Integer) o).intValue();
+        else if (o instanceof Long) return (int) ((Long)o).longValue();
+        else {
+            Log.e(TAG, "Unexpected type for bundle response code.");
+            Log.e(TAG, o.getClass().getName());
+            throw new RuntimeException("Unexpected type for bundle response code: " + o.getClass().getName());
+        }
+    }
+
+    private void makePurchase() {
+        try {
+            Bundle buyIntentBundle = inAppBillingService.getBuyIntent(
+                3,
+                getActivity().getPackageName(),
+                TEST_SKU,
+                "inapp",
+                "this is a test");
+
+            int response = getResponseCodeFromBundle(buyIntentBundle);
+            if (response != BILLING_RESPONSE_RESULT_OK) {
+                Log.e(TAG, "Unable to buy item, Error response: " + response);
+                return;
+            }
+
+            PendingIntent pendingIntent = buyIntentBundle.getParcelable(BUY_INTENT);
+            getActivity().startIntentSenderForResult(
+                pendingIntent.getIntentSender(),
+                1001,
+                new Intent(),
+                Integer.valueOf(0),
+                Integer.valueOf(0),
+                Integer.valueOf(0));
+        }
+        catch (IntentSender.SendIntentException e) {
+            Log.e(TAG, "In app purchase send intent exception.", e);
+        }
+        catch (RemoteException e) {
+            Log.e(TAG, "In app purchase remote exception.", e);
+        }
+    }
+
     public void shareUsingNativeDialog() {
         if (playerChoice == INVALID_CHOICE || computerChoice == INVALID_CHOICE) {
             ShareContent content = getLinkContent();
@@ -439,8 +517,8 @@ public void shareUsingMessengerDialog() {
 
     public void presentAppInviteDialog() {
         AppInviteContent content = new AppInviteContent.Builder()
-                .setApplinkUrl("http://hosting-rps.parseapp.com/applink.html")
-                .setPreviewImageUrl("http://hosting-rps.parseapp.com/rps-preview-image.png")
+                .setApplinkUrl("https://d3uu10x6fsg06w.cloudfront.net/hosting-rps/applink.html")
+                .setPreviewImageUrl("https://d3uu10x6fsg06w.cloudfront.net/hosting-rps/rps-preview-image.jpg")
                 .build();
         if (AppInviteDialog.canShow()) {
             appInviteDialog.show(this, content);
@@ -473,6 +551,7 @@ public View onCreateView(LayoutInflater inflater,
         fbButton = (ImageButton) view.findViewById(R.id.facebook_button);
         statsTextView = (TextView) view.findViewById(R.id.stats);
         rpsFlipper = (ViewFlipper) view.findViewById(R.id.rps_flipper);
+        buyButton = (Button) view.findViewById(R.id.buy_button);
 
         gestureImages[ROCK].setOnClickListener(new View.OnClickListener() {
             @Override
@@ -509,6 +588,13 @@ public void onClick(View view) {
             }
         });
 
+        buyButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                makePurchase();
+            }
+        });
+
         return view;
     }
 
@@ -600,6 +686,74 @@ public void onError(FacebookException error) {
                 };
         appInviteDialog = new AppInviteDialog(this);
         appInviteDialog.registerCallback(callbackManager, appInviteCallback);
+
+        // Initialize in-app billing service
+        serviceConnection = new ServiceConnection() {
+            @Override
+            public void onServiceDisconnected(ComponentName name) {
+                inAppBillingService = null;
+                Utility.logd(TAG, "In-app billing service disconnected");
+            }
+
+            @Override
+            public void onServiceConnected(
+                ComponentName name,
+                IBinder service) {
+                inAppBillingService = IInAppBillingService.Stub.asInterface(service);
+                Utility.logd(TAG, "In app billing service connected");
+                try {
+                    Bundle ownedItems = inAppBillingService.getPurchases(
+                        3,
+                        context.getPackageName(),
+                        "inapp",
+                        null);
+                    int response = ownedItems.getInt("RESPONSE_CODE");
+                    if (response == 0) {
+                        ArrayList<String> ownedSkus =
+                                ownedItems.getStringArrayList(INAPP_PURCHASE_ITEM_LIST);
+                        ArrayList<String>  purchaseDataList =
+                                ownedItems.getStringArrayList(INAPP_PURCHASE_DATA_LIST);
+                        ArrayList<String>  signatureList =
+                                ownedItems.getStringArrayList(INAPP_DATA_SIGNATURE_LIST);
+
+                        for (int i = 0; i < purchaseDataList.size(); ++i) {
+                            String purchaseData = purchaseDataList.get(i);
+                            String signature = signatureList.get(i);
+                            String sku = ownedSkus.get(i);
+
+                            try {
+                                JSONObject jo = new JSONObject(purchaseData);
+                                String token = jo.getString("purchaseToken");
+                                int consumeResponse = inAppBillingService.consumePurchase(
+                                    3,
+                                    context.getPackageName(),
+                                    token);
+                                if (response == 0) {
+                                    Log.d(TAG, "Successfully consumed sku: " + sku);
+                                } else {
+                                    Log.d(
+                                        TAG,
+                                        "Error consuming consuming sku " + sku + ". "
+                                            + consumeResponse);
+                                }
+                            }
+                            catch (JSONException e) {
+                                Log.e(TAG, "Error parsing purchase data.", e);
+                            }
+                        }
+                    }
+                }
+                catch (RemoteException e) {
+                    Log.e(TAG, "Consuming purchase remote exception.", e);
+                }
+            }
+        };
+
+        context = this.getActivity().getApplicationContext();
+        Intent serviceIntent =
+                new Intent("com.android.vending.billing.InAppBillingService.BIND");
+        serviceIntent.setPackage("com.android.vending");
+        context.bindService(serviceIntent, serviceConnection, Context.BIND_AUTO_CREATE);
     }
 
     @Override
@@ -626,4 +780,12 @@ public void onSaveInstanceState(Bundle bundle) {
         bundle.putBoolean(PENDING_PUBLISH_KEY, pendingPublish);
         bundle.putBoolean(IMPLICIT_PUBLISH_KEY, shouldImplicitlyPublish);
     }
+
+    @Override
+    public void onDestroy() {
+        super.onDestroy();
+        if (inAppBillingService != null) {
+            context.unbindService(serviceConnection);
+        }
+    }
 }
diff --git a/samples/Scrumptious/BUCK b/samples/Scrumptious/BUCK
deleted file mode 100644
index 61f0ab4c0..000000000
--- a/samples/Scrumptious/BUCK
+++ /dev/null
@@ -1,35 +0,0 @@
-android_resource(
-  name = 'res',
-  res = 'res',
-  package = 'com.example.scrumptious',
-  deps = [
-    '//facebook:android-sdk',
-  ],
-)
-
-android_library(
-  name = 'lib',
-  srcs = glob(['src/**/*.java']),
-  deps = [
-    ':res',
-    '//facebook:android-sdk',
-    '//libs:android-support-v4',
-  ],
-)
-
-android_binary(
-  name = 'app',
-  manifest = 'AndroidManifest.xml',
-  keystore = '//keystores:debug',
-  package_type = 'debug',
-  deps = [
-    ':lib',
-    '//facebook:android-sdk',
-    '//libs:android-support-v4',
-  ],
-)
-
-project_config(
-  src_target = ':app',
-  src_roots = ['src'],
-)
diff --git a/samples/Scrumptious/build.gradle b/samples/Scrumptious/build.gradle
index 8ba946d53..64d74b8ad 100644
--- a/samples/Scrumptious/build.gradle
+++ b/samples/Scrumptious/build.gradle
@@ -1,7 +1,8 @@
 apply plugin: 'com.android.application'
 
 dependencies {
-    compile project(':facebook')
+    compile project(':facebook-login')
+    compile project(':facebook-share')
 }
 
 android {
@@ -9,6 +10,7 @@ android {
     buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
 
     defaultConfig {
+        applicationId 'com.example.scrumptious'
         minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
         targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
     }
diff --git a/samples/Scrumptious/res/drawable-hdpi/icon.png b/samples/Scrumptious/res/drawable-hdpi/icon.png
index 383503ce9..d5b4ef6cb 100644
Binary files a/samples/Scrumptious/res/drawable-hdpi/icon.png and b/samples/Scrumptious/res/drawable-hdpi/icon.png differ
diff --git a/samples/Scrumptious/res/drawable-mdpi/icon.png b/samples/Scrumptious/res/drawable-mdpi/icon.png
index b14f00b4d..895d70f2e 100644
Binary files a/samples/Scrumptious/res/drawable-mdpi/icon.png and b/samples/Scrumptious/res/drawable-mdpi/icon.png differ
diff --git a/samples/Scrumptious/res/drawable-xhdpi/icon.png b/samples/Scrumptious/res/drawable-xhdpi/icon.png
index c86c5f0f3..7e7a5ce77 100644
Binary files a/samples/Scrumptious/res/drawable-xhdpi/icon.png and b/samples/Scrumptious/res/drawable-xhdpi/icon.png differ
diff --git a/samples/Scrumptious/res/drawable/icon.png b/samples/Scrumptious/res/drawable/icon.png
index 739392fc0..895d70f2e 100644
Binary files a/samples/Scrumptious/res/drawable/icon.png and b/samples/Scrumptious/res/drawable/icon.png differ
diff --git a/samples/Scrumptious/res/values/strings.xml b/samples/Scrumptious/res/values/strings.xml
index 25580b998..080012bbf 100644
--- a/samples/Scrumptious/res/values/strings.xml
+++ b/samples/Scrumptious/res/values/strings.xml
@@ -87,14 +87,14 @@
     </string-array>
 
     <string-array name="food_og_urls">
-        <item>https://scrumptious-facebook.parseapp.com/meals/cheeseburger/</item> <!-- Cheeseburger -->
-        <item>https://scrumptious-facebook.parseapp.com/meals/pizza/</item> <!-- Pizza -->
-        <item>https://scrumptious-facebook.parseapp.com/meals/hotdog/</item> <!-- Hotdog -->
-        <item>https://scrumptious-facebook.parseapp.com/meals/italian/</item> <!-- Italian -->
-        <item>https://scrumptious-facebook.parseapp.com/meals/french/</item> <!-- French -->
-        <item>https://scrumptious-facebook.parseapp.com/meals/chinese/</item> <!-- Chinese -->
-        <item>https://scrumptious-facebook.parseapp.com/meals/thai/</item> <!-- Thai -->
-        <item>https://scrumptious-facebook.parseapp.com/meals/indian/</item> <!-- Indian -->
+        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/cheeseburger.html</item> <!-- Cheeseburger -->
+        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/pizza.html</item> <!-- Pizza -->
+        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/hotdog.html</item> <!-- Hotdog -->
+        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/italian.html</item> <!-- Italian -->
+        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/french.html</item> <!-- French -->
+        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/chinese.html</item> <!-- Chinese -->
+        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/thai.html</item> <!-- Thai -->
+        <item>https://d3uu10x6fsg06w.cloudfront.net/scrumptious-facebook/indian.html</item> <!-- Indian -->
         <item></item>
     </string-array>
 </resources>
diff --git a/samples/Scrumptious/src/com/example/scrumptious/MainActivity.java b/samples/Scrumptious/src/com/example/scrumptious/MainActivity.java
index 92e833d22..9afe82eca 100644
--- a/samples/Scrumptious/src/com/example/scrumptious/MainActivity.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/MainActivity.java
@@ -29,7 +29,6 @@
 
 import com.facebook.AccessToken;
 import com.facebook.AccessTokenTracker;
-import com.facebook.appevents.AppEventsLogger;
 import com.facebook.CallbackManager;
 
 public class MainActivity extends Activity {
diff --git a/samples/Scrumptious/src/com/example/scrumptious/ScrumptiousApplication.java b/samples/Scrumptious/src/com/example/scrumptious/ScrumptiousApplication.java
index ddae0a182..27df704da 100644
--- a/samples/Scrumptious/src/com/example/scrumptious/ScrumptiousApplication.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/ScrumptiousApplication.java
@@ -22,8 +22,6 @@
 
 import android.app.Application;
 
-import com.facebook.FacebookSdk;
-import com.facebook.appevents.AppEventsLogger;
 
 import org.json.JSONObject;
 
@@ -33,14 +31,6 @@
  * Use a custom Application class to pass state data between Activities.
  */
 public class ScrumptiousApplication extends Application {
-
-    @Override
-    public void onCreate() {
-        super.onCreate();
-        FacebookSdk.sdkInitialize(getApplicationContext());
-        AppEventsLogger.activateApp(this);
-    }
-
     private List<JSONObject> selectedUsers;
     private JSONObject selectedPlace;
 
diff --git a/samples/Scrumptious/src/com/example/scrumptious/SelectionFragment.java b/samples/Scrumptious/src/com/example/scrumptious/SelectionFragment.java
index bc3f54f0a..b86688c60 100644
--- a/samples/Scrumptious/src/com/example/scrumptious/SelectionFragment.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/SelectionFragment.java
@@ -45,6 +45,12 @@
 import android.widget.*;
 
 import com.facebook.*;
+import com.facebook.AccessToken;
+import com.facebook.FacebookException;
+import com.facebook.FacebookGraphResponseException;
+import com.facebook.FacebookRequestError;
+import com.facebook.FacebookSdk;
+import com.facebook.GraphResponse;
 import com.facebook.internal.Utility;
 import com.facebook.login.DefaultAudience;
 import com.facebook.login.LoginManager;
diff --git a/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectPagingLoader.java b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectPagingLoader.java
index 01aa6304a..a767628b5 100644
--- a/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectPagingLoader.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectPagingLoader.java
@@ -24,6 +24,12 @@
 import android.content.Loader;
 
 import com.facebook.*;
+import com.facebook.FacebookException;
+import com.facebook.FacebookRequestError;
+import com.facebook.GraphRequest;
+import com.facebook.GraphRequestBatch;
+import com.facebook.GraphResponse;
+
 import org.json.JSONArray;
 
 class GraphObjectPagingLoader extends Loader<GraphObjectCursor> {
diff --git a/samples/Scrumptious/src/com/example/scrumptious/picker/PlacePickerFragment.java b/samples/Scrumptious/src/com/example/scrumptious/picker/PlacePickerFragment.java
index ce9188d49..97e53d4e9 100644
--- a/samples/Scrumptious/src/com/example/scrumptious/picker/PlacePickerFragment.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/picker/PlacePickerFragment.java
@@ -36,7 +36,10 @@
 import android.view.inputmethod.InputMethodManager;
 import android.widget.EditText;
 import android.widget.ListView;
-import com.facebook.*;
+import com.facebook.AccessToken;
+import com.facebook.FacebookException;
+import com.facebook.GraphRequest;
+import com.facebook.LoggingBehavior;
 import com.facebook.appevents.AppEventsLogger;
 import com.example.scrumptious.R;
 import com.facebook.internal.AnalyticsEvents;
diff --git a/samples/ShareIt/AndroidManifest.xml b/samples/ShareIt/AndroidManifest.xml
index 57088a445..2c8f2fbf1 100644
--- a/samples/ShareIt/AndroidManifest.xml
+++ b/samples/ShareIt/AndroidManifest.xml
@@ -25,7 +25,6 @@
     <uses-permission android:name="android.permission.INTERNET" />
 
     <application
-        android:name="com.example.shareit.ShareItApplication"
         android:allowBackup="true"
         android:icon="@drawable/icon"
         android:label="@string/app_name"
diff --git a/samples/ShareIt/build.gradle b/samples/ShareIt/build.gradle
index 3288f92db..ae460b7af 100644
--- a/samples/ShareIt/build.gradle
+++ b/samples/ShareIt/build.gradle
@@ -5,7 +5,8 @@ repositories {
 }
 
 dependencies {
-    compile project(':facebook')
+    compile project(':facebook-share')
+    compile project(':facebook-login')
     // In order to test a specific version published on maven, comment out the project compile
     // directive and and comment this line and update to the specific version.
     // compile 'com.facebook.android:facebook-android-sdk:4.0.1'
@@ -17,7 +18,7 @@ android {
     buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
 
     defaultConfig {
-        applicationId "com.example.shareit"
+        applicationId 'com.example.shareit'
         minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
         targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
     }
diff --git a/samples/ShareIt/res/drawable-hdpi/icon.png b/samples/ShareIt/res/drawable-hdpi/icon.png
index 66186b7d9..ae01da1ea 100644
Binary files a/samples/ShareIt/res/drawable-hdpi/icon.png and b/samples/ShareIt/res/drawable-hdpi/icon.png differ
diff --git a/samples/ShareIt/res/drawable-mdpi/icon.png b/samples/ShareIt/res/drawable-mdpi/icon.png
index 85917270a..50cdca5ee 100644
Binary files a/samples/ShareIt/res/drawable-mdpi/icon.png and b/samples/ShareIt/res/drawable-mdpi/icon.png differ
diff --git a/samples/ShareIt/res/drawable-xhdpi/icon.png b/samples/ShareIt/res/drawable-xhdpi/icon.png
index 73d2a23ed..3775b0c2d 100644
Binary files a/samples/ShareIt/res/drawable-xhdpi/icon.png and b/samples/ShareIt/res/drawable-xhdpi/icon.png differ
diff --git a/samples/ShareIt/src/com/example/shareit/ShareFragment.java b/samples/ShareIt/src/com/example/shareit/ShareFragment.java
index c8be2417d..dc115430a 100644
--- a/samples/ShareIt/src/com/example/shareit/ShareFragment.java
+++ b/samples/ShareIt/src/com/example/shareit/ShareFragment.java
@@ -46,10 +46,13 @@
 
     // The resource to url mapping
     private static final ArrayList<Pair<Integer, String>> IMAGE_IDS =
-            new ArrayList<Pair<Integer, String>>() {{
-                add(new Pair<>(R.drawable.goofy, "http://shareitexampleapp.parseapp.com/goofy/"));
-                add(new Pair<>(R.drawable.liking, "http://shareitexampleapp.parseapp.com/liking/"));
-                add(new Pair<>(R.drawable.viking, "http://shareitexampleapp.parseapp.com/viking/"));
+            new ArrayList<Pair<Integer, String>>() { {
+                add(new Pair<>(R.drawable.goofy,
+                  "https://d3uu10x6fsg06w.cloudfront.net/shareitexampleapp/goofy/index.html"));
+                add(new Pair<>(R.drawable.liking,
+                  "https://d3uu10x6fsg06w.cloudfront.net/shareitexampleapp/liking/index.html"));
+                add(new Pair<>(R.drawable.viking,
+                  "https://d3uu10x6fsg06w.cloudfront.net/shareitexampleapp/viking/index.html"));
             }};
 
     @Override
diff --git a/samples/ShareIt/src/com/example/shareit/ShareItApplication.java b/samples/ShareIt/src/com/example/shareit/ShareItApplication.java
deleted file mode 100644
index ce2d494f1..000000000
--- a/samples/ShareIt/src/com/example/shareit/ShareItApplication.java
+++ /dev/null
@@ -1,35 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.shareit;
-
-import android.app.Application;
-
-import com.facebook.FacebookSdk;
-import com.facebook.appevents.AppEventsLogger;
-
-public class ShareItApplication extends Application {
-    @Override
-    public void onCreate() {
-        super.onCreate();
-        FacebookSdk.sdkInitialize(getApplicationContext());
-        AppEventsLogger.activateApp(this);
-    }
-}
diff --git a/samples/SwitchUserSample/AndroidManifest.xml b/samples/SwitchUserSample/AndroidManifest.xml
index 96887a41f..d13d8a46c 100644
--- a/samples/SwitchUserSample/AndroidManifest.xml
+++ b/samples/SwitchUserSample/AndroidManifest.xml
@@ -25,7 +25,6 @@
 
     <uses-permission android:name="android.permission.INTERNET" />
     <application
-        android:name=".SwitchUserApplication"
         android:allowBackup="false"
         android:icon="@drawable/icon"
         android:label="@string/app_name">
diff --git a/samples/SwitchUserSample/build.gradle b/samples/SwitchUserSample/build.gradle
index a34022f03..26cbaddc7 100644
--- a/samples/SwitchUserSample/build.gradle
+++ b/samples/SwitchUserSample/build.gradle
@@ -1,7 +1,7 @@
 apply plugin: 'com.android.application'
 
 dependencies {
-    compile project(':facebook')
+    compile project(':facebook-login')
     compile 'com.android.support:appcompat-v7:21.0.3'
 }
 
@@ -10,6 +10,7 @@ android {
     buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
 
     defaultConfig {
+        applicationId 'com.example.switchuser'
         minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
         targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
     }
diff --git a/samples/SwitchUserSample/res/drawable-hdpi/icon.png b/samples/SwitchUserSample/res/drawable-hdpi/icon.png
index 8e4f7040c..dd6f7d77e 100644
Binary files a/samples/SwitchUserSample/res/drawable-hdpi/icon.png and b/samples/SwitchUserSample/res/drawable-hdpi/icon.png differ
diff --git a/samples/SwitchUserSample/res/drawable-xhdpi/icon.png b/samples/SwitchUserSample/res/drawable-xhdpi/icon.png
index e49838d03..25270e1a9 100644
Binary files a/samples/SwitchUserSample/res/drawable-xhdpi/icon.png and b/samples/SwitchUserSample/res/drawable-xhdpi/icon.png differ
diff --git a/samples/SwitchUserSample/src/com/example/switchuser/MainActivity.java b/samples/SwitchUserSample/src/com/example/switchuser/MainActivity.java
index 2a83f33d6..89b5a46fc 100644
--- a/samples/SwitchUserSample/src/com/example/switchuser/MainActivity.java
+++ b/samples/SwitchUserSample/src/com/example/switchuser/MainActivity.java
@@ -26,9 +26,6 @@
 import android.support.v7.app.ActionBarActivity;
 import android.view.MenuItem;
 
-import com.facebook.*;
-import com.facebook.appevents.AppEventsLogger;
-
 public class MainActivity extends ActionBarActivity {
 
     private static final String SHOWING_SETTINGS_KEY = "Showing settings";
diff --git a/samples/SwitchUserSample/src/com/example/switchuser/SwitchUserApplication.java b/samples/SwitchUserSample/src/com/example/switchuser/SwitchUserApplication.java
deleted file mode 100644
index a53cecc5b..000000000
--- a/samples/SwitchUserSample/src/com/example/switchuser/SwitchUserApplication.java
+++ /dev/null
@@ -1,35 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.example.switchuser;
-
-import android.app.Application;
-
-import com.facebook.FacebookSdk;
-import com.facebook.appevents.AppEventsLogger;
-
-public class SwitchUserApplication extends Application {
-    @Override
-    public void onCreate() {
-        super.onCreate();
-        FacebookSdk.sdkInitialize(getApplicationContext());
-        AppEventsLogger.activateApp(this);
-    }
-}
diff --git a/scripts/build_documentation.sh b/scripts/build_documentation.sh
new file mode 100755
index 000000000..49b58cf04
--- /dev/null
+++ b/scripts/build_documentation.sh
@@ -0,0 +1,82 @@
+#!/bin/sh
+# Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+#
+# You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+# copy, modify, and distribute this software in source code or binary form for use
+# in connection with the web services and APIs provided by Facebook.
+#
+# As with any software that integrates with the Facebook platform, your use of
+# this software is subject to the Facebook Developer Principles and Policies
+# [http://developers.facebook.com/policy/]. This copyright notice shall be
+# included in all copies or substantial portions of the software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+
+# This script builds the API documentation from source-level comments.
+
+# Utility functions.
+function die() {
+  echo ""
+  echo "FATAL: $*" >&2
+  exit 1
+}
+
+# Make sure javadoc is installed.
+hash javadoc >/dev/null || die 'Javadoc is not installed!'
+
+# The directory containing this script
+# We need to go there and use pwd so these are all absolute paths
+pushd "$(dirname $BASH_SOURCE[0])" > /dev/null
+FB_SDK_SCRIPT=$(pwd)
+popd >/dev/null
+
+# The root directory where the Facebook SDK for android is cloned
+FB_SDK_ROOT=$(dirname "$FB_SDK_SCRIPT")
+
+# Source folders of each kit
+KIT_SRC_FOLDERS=(
+  'facebook'
+  'accountkit/accountkitsdk'
+  'ads/ads'
+)
+
+# Output doc folders for each kit
+KIT_DOC_FOLDERS=(
+  'facebook'
+  'accountkit'
+  'audiencenetwork'
+)
+
+# Path to java source file under each kit folder
+PATH_TO_SRC='src/main/java'
+
+mkdir -p $FB_SDK_ROOT/docs
+
+for (( i = 0; i < ${#KIT_SRC_FOLDERS[@]}; i++ ))
+do
+  KIT_SRC=${KIT_SRC_FOLDERS[$i]}
+  KIT_DOC=${KIT_DOC_FOLDERS[$i]}
+
+  SRC_FOLDER=$FB_SDK_ROOT/$KIT_SRC/$PATH_TO_SRC
+  DOC_FOLDER=$FB_SDK_ROOT/docs/$KIT_DOC
+  LOG_FILE=$FB_SDK_ROOT/docs/$KIT_DOC.log
+
+  # Find all the facebook packages except internal ones
+  # Then use javadoc to generate docs for those packages
+  grep --recursive --no-filename -Po '(?<=package )com\.facebook.*?(?=;)' $SRC_FOLDER | sort | uniq | grep -v internal \
+    | xargs javadoc -quiet -d $DOC_FOLDER -sourcepath $SRC_FOLDER &> $LOG_FILE
+
+  cd $FB_SDK_ROOT/docs
+  zip --quiet --recurse-paths $DOC_FOLDER.zip $KIT_DOC
+
+  echo ""
+  echo "Generated docs in $DOC_FOLDER"
+  echo "... zip as $DOC_FOLDER.zip"
+  echo "... see log file at $LOG_FILE"
+done
+
diff --git a/settings.gradle b/settings.gradle
index 23c413f6a..21e4c0a3b 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1,4 +1,6 @@
 // Facebook SDK
+include ':facebook-core'
+include ':facebook-common', ':facebook-login', ':facebook-share', ':facebook-places', ':facebook-applinks', ':facebook-messenger'
 include ':facebook'
 
 // Samples
@@ -7,6 +9,7 @@ include ':samples:Iconicus'
 include ':samples:LoginSample'
 include ':samples:RPSSample'
 include ':samples:MessengerSendSample'
+include ':samples:PlacesGraphSample'
 include ':samples:Scrumptious'
 include ':samples:SwitchUserSample'
 include ':samples:ShareIt'
