diff --git a/facebook/TestApp/build.gradle b/facebook/TestApp/build.gradle
index 024c5b289..88bdbbed3 100644
--- a/facebook/TestApp/build.gradle
+++ b/facebook/TestApp/build.gradle
@@ -1,4 +1,4 @@
-apply plugin: 'android-library'
+apply plugin: 'com.android.library'
 
 dependencies {
     compile project(':facebook')
diff --git a/facebook/build.gradle b/facebook/build.gradle
index d5ebb7b2e..422b0b524 100644
--- a/facebook/build.gradle
+++ b/facebook/build.gradle
@@ -1,4 +1,8 @@
-apply plugin: 'android-library'
+apply plugin: 'com.android.library'
+
+repositories {
+  mavenCentral()
+}
 
 dependencies {
     compile 'com.android.support:support-v4:+'
@@ -40,4 +44,4 @@ android {
         debug.setRoot('build-types/debug')
         release.setRoot('build-types/release')
     }
-}
\ No newline at end of file
+}
diff --git a/facebook/res/values-es/strings.xml b/facebook/res/values-es/strings.xml
index 556a7a4f9..7f1558718 100644
--- a/facebook/res/values-es/strings.xml
+++ b/facebook/res/values-es/strings.xml
@@ -41,4 +41,5 @@
     <string name="com_facebook_requesterror_password_changed">Su contraseña de Facebook ha cambiado, por favor vuelva a conectar la aplicación con Facebook.</string>
     <string name="com_facebook_requesterror_reconnect">Se produjo un error al conectar con Facebook, por favor vuelva a conectar la aplicación con Facebook.</string>
     <string name="com_facebook_requesterror_permissions">Una conexión de aplicación con Facebook falló debido a permisos insuficientes, por favor, conceda los permisos de aplicaciones para realizar la operación.</string>
+    <string name="com_facebook_image_download_unknown_error">Error al descargar la imagen.</string>
 </resources>
diff --git a/facebook/res/values-he/strings.xml b/facebook/res/values-he/strings.xml
index 4ab34a3e2..48f29e328 100644
--- a/facebook/res/values-he/strings.xml
+++ b/facebook/res/values-he/strings.xml
@@ -41,4 +41,5 @@
     <string name="com_facebook_requesterror_reconnect">.ארעה שגיאה בעת החיבור עם פייסבוק, חבר בבקשה מחדש את האפליקציה עם פייסבוק</string>
     <string name="com_facebook_requesterror_permissions">.חיבור האפליקציה עם פייסבוק נכשל בשל הרשאות לא מספקות, אנא הענק הרשאות לאפליקציה בכדי שהפעולה תוכל להתבצע</string>
     <string name="com_facebook_dialogloginactivity_ok_button">אישור</string>
+    <string name="com_facebook_image_download_unknown_error">שגיאה בעת הורדת תמונה</string>
 </resources>
diff --git a/facebook/res/values-iw/strings.xml b/facebook/res/values-iw/strings.xml
index 4ab34a3e2..48f29e328 100644
--- a/facebook/res/values-iw/strings.xml
+++ b/facebook/res/values-iw/strings.xml
@@ -41,4 +41,5 @@
     <string name="com_facebook_requesterror_reconnect">.ארעה שגיאה בעת החיבור עם פייסבוק, חבר בבקשה מחדש את האפליקציה עם פייסבוק</string>
     <string name="com_facebook_requesterror_permissions">.חיבור האפליקציה עם פייסבוק נכשל בשל הרשאות לא מספקות, אנא הענק הרשאות לאפליקציה בכדי שהפעולה תוכל להתבצע</string>
     <string name="com_facebook_dialogloginactivity_ok_button">אישור</string>
+    <string name="com_facebook_image_download_unknown_error">שגיאה בעת הורדת תמונה</string>
 </resources>
diff --git a/facebook/res/values/strings.xml b/facebook/res/values/strings.xml
index ee6445ebf..efa3b79b4 100644
--- a/facebook/res/values/strings.xml
+++ b/facebook/res/values/strings.xml
@@ -44,4 +44,5 @@
     <string name="com_facebook_requesterror_reconnect">Please log into this app again to reconnect your Facebook account.</string>
     <string name="com_facebook_requesterror_permissions">This app doesn’t have permission to do this. To change permissions, try logging into the app again.</string>
     <string name="com_facebook_tooltip_default">New! You\'re in control - choose what info you want to share with apps.</string>
+    <string name="com_facebook_image_download_unknown_error">Unexpected error while downloading an image.</string>
 </resources>
diff --git a/facebook/src/com/facebook/AuthorizationClient.java b/facebook/src/com/facebook/AuthorizationClient.java
index 8b05e00fa..3e8e56222 100644
--- a/facebook/src/com/facebook/AuthorizationClient.java
+++ b/facebook/src/com/facebook/AuthorizationClient.java
@@ -175,7 +175,7 @@ void cancelCurrentHandler() {
     }
 
     boolean onActivityResult(int requestCode, int resultCode, Intent data) {
-        if (requestCode == pendingRequest.getRequestCode()) {
+        if (pendingRequest != null && requestCode == pendingRequest.getRequestCode()) {
             return currentHandler.onActivityResult(requestCode, resultCode, data);
         }
         return false;
@@ -681,14 +681,12 @@ void onWebDialogComplete(AuthorizationRequest request, Bundle values,
 
         private void saveCookieToken(String token) {
             Context context = getStartActivityDelegate().getActivityContext();
-            SharedPreferences sharedPreferences = context.getSharedPreferences(
+            context.getSharedPreferences(
                     WEB_VIEW_AUTH_HANDLER_STORE,
-                    Context.MODE_PRIVATE);
-            SharedPreferences.Editor editor = sharedPreferences.edit();
-            editor.putString(WEB_VIEW_AUTH_HANDLER_TOKEN_KEY, token);
-            if (!editor.commit()) {
-                Utility.logd(TAG, "Could not update saved web view auth handler token.");
-            }
+                    Context.MODE_PRIVATE)
+                .edit()
+                .putString(WEB_VIEW_AUTH_HANDLER_TOKEN_KEY, token)
+                .apply();
         }
 
         private String loadCookieToken() {
diff --git a/facebook/src/com/facebook/FacebookSdkVersion.java b/facebook/src/com/facebook/FacebookSdkVersion.java
index 9b9671ece..20d25d7ef 100644
--- a/facebook/src/com/facebook/FacebookSdkVersion.java
+++ b/facebook/src/com/facebook/FacebookSdkVersion.java
@@ -17,5 +17,5 @@
 package com.facebook;
 
 final class FacebookSdkVersion {
-    public static final String BUILD = "3.19.1";
+    public static final String BUILD = "3.20.0";
 }
diff --git a/facebook/src/com/facebook/RequestAsyncTask.java b/facebook/src/com/facebook/RequestAsyncTask.java
index db60a18f9..62a2cf158 100644
--- a/facebook/src/com/facebook/RequestAsyncTask.java
+++ b/facebook/src/com/facebook/RequestAsyncTask.java
@@ -32,7 +32,6 @@
  * Defines an AsyncTask suitable for executing a Request in the background. May be subclassed
  * by applications having unique threading model needs.
  */
-@TargetApi(3)
 public class RequestAsyncTask extends AsyncTask<Void, Void, List<Response>> {
     private static final String TAG = RequestAsyncTask.class.getCanonicalName();
     private static Method executeOnExecutorMethod;
@@ -172,18 +171,18 @@ protected void onPostExecute(List<Response> result) {
     }
 
     RequestAsyncTask executeOnSettingsExecutor() {
-        try {
-            if (executeOnExecutorMethod != null) {
+        if (executeOnExecutorMethod != null) {
+            try {
                 executeOnExecutorMethod.invoke(this, Settings.getExecutor(), null);
-                return this;
+            } catch (InvocationTargetException e) {
+                // fall-through
+            } catch (IllegalAccessException e) {
+                // fall-through
             }
-        } catch (InvocationTargetException e) {
-            // fall-through
-        } catch (IllegalAccessException e) {
-            // fall-through
+        } else {
+          this.execute();
         }
 
-        this.execute();
         return this;
     }
 }
diff --git a/facebook/src/com/facebook/Session.java b/facebook/src/com/facebook/Session.java
index 4fe231168..6711b8837 100644
--- a/facebook/src/com/facebook/Session.java
+++ b/facebook/src/com/facebook/Session.java
@@ -1672,9 +1672,13 @@ public void onServiceConnected(ComponentName className, IBinder service) {
         public void onServiceDisconnected(ComponentName arg) {
             cleanup();
 
-            // We returned an error so there's no point in
-            // keeping the binding open.
-            staticContext.unbindService(TokenRefreshRequest.this);
+            try {
+                // We returned an error so there's no point in
+                // keeping the binding open.
+                staticContext.unbindService(TokenRefreshRequest.this);
+            } catch (IllegalArgumentException ex) {
+                // Do nothing, the connection was already unbound
+            }
         }
 
         private void cleanup() {
diff --git a/facebook/src/com/facebook/Settings.java b/facebook/src/com/facebook/Settings.java
index 7a2d943c5..7ab55b2f5 100644
--- a/facebook/src/com/facebook/Settings.java
+++ b/facebook/src/com/facebook/Settings.java
@@ -430,7 +430,7 @@ static Response publishInstallAndWaitForResponse(
                     publishResponse.getGraphObject().getInnerJSONObject() != null) {
                     editor.putString(jsonKey, publishResponse.getGraphObject().getInnerJSONObject().toString());
                 }
-                editor.commit();
+                editor.apply();
 
                 return publishResponse;
             }
@@ -510,10 +510,10 @@ public static boolean getLimitEventAndDataUsage(Context context) {
      * @param context   Used to persist this value across app runs.
      */
     public static void setLimitEventAndDataUsage(Context context, boolean limitEventUsage) {
-        SharedPreferences preferences = context.getSharedPreferences(APP_EVENT_PREFERENCES, Context.MODE_PRIVATE);
-        SharedPreferences.Editor editor = preferences.edit();
-        editor.putBoolean("limitEventUsage", limitEventUsage);
-        editor.commit();
+        context.getSharedPreferences(APP_EVENT_PREFERENCES, Context.MODE_PRIVATE)
+            .edit()
+            .putBoolean("limitEventUsage", limitEventUsage)
+            .apply();
     }
 
     /**
diff --git a/facebook/src/com/facebook/SharedPreferencesTokenCachingStrategy.java b/facebook/src/com/facebook/SharedPreferencesTokenCachingStrategy.java
index 0286d3c1f..10eca8b80 100644
--- a/facebook/src/com/facebook/SharedPreferencesTokenCachingStrategy.java
+++ b/facebook/src/com/facebook/SharedPreferencesTokenCachingStrategy.java
@@ -163,18 +163,14 @@ public void save(Bundle bundle) {
                 return;
             }
         }
-
-        boolean successfulCommit = editor.commit();
-        if (!successfulCommit) {
-            Logger.log(LoggingBehavior.CACHE, Log.WARN, TAG, "SharedPreferences.Editor.commit() was not successful");
-        }
+        editor.apply();
     }
 
     /**
      * Clears out all token information stored in this cache.
      */
     public void clear() {
-        cache.edit().clear().commit();
+        cache.edit().clear().apply();
     }
 
     private void serializeKey(String key, Bundle bundle, SharedPreferences.Editor editor)
diff --git a/facebook/src/com/facebook/internal/AttributionIdentifiers.java b/facebook/src/com/facebook/internal/AttributionIdentifiers.java
index 4efe7a3e6..c20682526 100644
--- a/facebook/src/com/facebook/internal/AttributionIdentifiers.java
+++ b/facebook/src/com/facebook/internal/AttributionIdentifiers.java
@@ -113,7 +113,7 @@ public static AttributionIdentifiers getAttributionIdentifiers(Context context)
             String [] projection = {ATTRIBUTION_ID_COLUMN_NAME, ANDROID_ID_COLUMN_NAME, LIMIT_TRACKING_COLUMN_NAME};
             Cursor c = context.getContentResolver().query(ATTRIBUTION_ID_CONTENT_URI, projection, null, null, null);
             if (c == null || !c.moveToFirst()) {
-                return null;
+                return identifiers;
             }
             int attributionColumnIndex = c.getColumnIndex(ATTRIBUTION_ID_COLUMN_NAME);
             int androidIdColumnIndex = c.getColumnIndex(ANDROID_ID_COLUMN_NAME);
@@ -149,4 +149,4 @@ public String getAndroidAdvertiserId() {
     public boolean isTrackingLimited() {
         return limitTracking;
     }
-}
\ No newline at end of file
+}
diff --git a/facebook/src/com/facebook/internal/FacebookWebFallbackDialog.java b/facebook/src/com/facebook/internal/FacebookWebFallbackDialog.java
index 5333187dc..2a2f4b603 100644
--- a/facebook/src/com/facebook/internal/FacebookWebFallbackDialog.java
+++ b/facebook/src/com/facebook/internal/FacebookWebFallbackDialog.java
@@ -20,6 +20,9 @@
 import android.content.Intent;
 import android.net.Uri;
 import android.os.Bundle;
+import android.os.Handler;
+import android.os.Looper;
+import android.webkit.WebView;
 import com.facebook.FacebookException;
 import com.facebook.android.Util;
 import com.facebook.widget.FacebookDialog;
@@ -39,6 +42,9 @@
  */
 public class FacebookWebFallbackDialog extends WebDialog {
     private static final String TAG = FacebookWebFallbackDialog.class.getName();
+    private static final int OS_BACK_BUTTON_RESPONSE_TIMEOUT_MILLISECONDS = 1500;
+
+    private boolean waitingForDialogToClose;
 
     public static boolean presentWebFallback(final Context context,
                                              String dialogUrl,
@@ -121,4 +127,48 @@ protected Bundle parseResponseUri(String url) {
 
         return queryParams;
     }
+
+    @Override
+    public void dismiss() {
+        WebView webView = getWebView();
+
+        if (isListenerCalled() || webView == null || !webView.isShown()) {
+            // If the listener has been called, or if the WebView isn't visible, we cannot give the dialog a chance
+            // to respond. So defer to the parent implementation.
+            super.dismiss();
+            return;
+        }
+
+        // If we have already notified the dialog to close, then ignore this request to dismiss. The timer will
+        // honor the request.
+        if (waitingForDialogToClose) {
+            return;
+        }
+        waitingForDialogToClose = true;
+
+        // Now fire off the event that will tell the dialog to wind down.
+        String eventJS =
+                "(function() {" +
+                "  var event = document.createEvent('Event');" +
+                "  event.initEvent('fbPlatformDialogMustClose',true,true);" +
+                "  document.dispatchEvent(event);" +
+                "})();";
+        webView.loadUrl("javascript:" + eventJS);
+
+        // Set up a timeout for the dialog to respond. If the timer expires, we need to honor the user's desire to
+        // dismiss the dialog.
+        Handler handler = new Handler(Looper.getMainLooper());
+        handler.postDelayed(
+                new Runnable() {
+                    @Override
+                    public void run() {
+                        if (!isListenerCalled()) {
+                            // If we get here, then the dialog did not close quickly enough. So we need to honor the user's
+                            // wish to cancel.
+                            sendCancelToListener();
+                        }
+                    }
+                },
+                OS_BACK_BUTTON_RESPONSE_TIMEOUT_MILLISECONDS);
+    }
 }
diff --git a/facebook/src/com/facebook/internal/ImageDownloader.java b/facebook/src/com/facebook/internal/ImageDownloader.java
index 69bea7f4a..058c55bc8 100644
--- a/facebook/src/com/facebook/internal/ImageDownloader.java
+++ b/facebook/src/com/facebook/internal/ImageDownloader.java
@@ -22,6 +22,7 @@
 import android.os.Handler;
 import android.os.Looper;
 import com.facebook.FacebookException;
+import com.facebook.android.R;
 
 import java.io.IOException;
 import java.io.InputStream;
@@ -246,15 +247,19 @@ private static void download(RequestKey key, Context context) {
 
                 default:
                     stream = connection.getErrorStream();
-                    InputStreamReader reader = new InputStreamReader(stream);
-                    char[] buffer = new char[128];
-                    int bufferLength;
                     StringBuilder errorMessageBuilder = new StringBuilder();
-                    while ((bufferLength = reader.read(buffer, 0, buffer.length)) > 0) {
-                        errorMessageBuilder.append(buffer, 0, bufferLength);
+                    if (stream != null) {
+                        InputStreamReader reader = new InputStreamReader(stream);
+                        char[] buffer = new char[128];
+                        int bufferLength;
+                        while ((bufferLength = reader.read(buffer, 0, buffer.length)) > 0) {
+                            errorMessageBuilder.append(buffer, 0, bufferLength);
+                        }
+                        Utility.closeQuietly(reader);
+                    } else {
+                        errorMessageBuilder.append(
+                            context.getString(R.string.com_facebook_image_download_unknown_error));
                     }
-                    Utility.closeQuietly(reader);
-
                     error = new FacebookException(errorMessageBuilder.toString());
                     break;
             }
diff --git a/facebook/src/com/facebook/internal/NativeProtocol.java b/facebook/src/com/facebook/internal/NativeProtocol.java
index 50ca6f88a..aae17e894 100644
--- a/facebook/src/com/facebook/internal/NativeProtocol.java
+++ b/facebook/src/com/facebook/internal/NativeProtocol.java
@@ -634,6 +634,15 @@ private static int getLatestAvailableProtocolVersionForAppInfo(
             Context context,
             NativeAppInfo appInfo,
             int[] versionSpec) {
+        TreeSet<Integer> fbAppVersions = getAllAvailableProtocolVersionsForAppInfo(context, appInfo);
+        return computeLatestAvailableVersionFromVersionSpec(fbAppVersions, getLatestKnownVersion(), versionSpec);
+    }
+
+    private static TreeSet<Integer> getAllAvailableProtocolVersionsForAppInfo(
+            Context context,
+            NativeAppInfo appInfo) {
+        TreeSet<Integer> allAvailableVersions = new TreeSet<Integer>();
+
         ContentResolver contentResolver = context.getContentResolver();
 
         String [] projection = new String[]{ PLATFORM_PROVIDER_VERSION_COLUMN };
@@ -641,50 +650,62 @@ private static int getLatestAvailableProtocolVersionForAppInfo(
         Cursor c = null;
         try {
             c = contentResolver.query(uri, projection, null, null, null);
-            if (c == null) {
-                return NO_PROTOCOL_AVAILABLE;
+            if (c != null) {
+                while (c.moveToNext()) {
+                    int version = c.getInt(c.getColumnIndex(PLATFORM_PROVIDER_VERSION_COLUMN));
+                    allAvailableVersions.add(version);
+                }
             }
-
-            TreeSet<Integer> fbAppVersions = new TreeSet<Integer>();
-            while (c.moveToNext()) {
-                int version = c.getInt(c.getColumnIndex(PLATFORM_PROVIDER_VERSION_COLUMN));
-                fbAppVersions.add(version);
+        } finally {
+            if (c != null) {
+                c.close();
             }
+        }
 
-            // Remember that these ranges are sorted in ascending order and can be unbounded. So we are starting
-            // from the end of the version-spec array and working backwards, to try get the newest possible version
-            int versionSpecIndex = versionSpec.length - 1;
-            Iterator<Integer> fbAppVersionsIterator = fbAppVersions.descendingIterator();
-            int latestAllowedVersion = getLatestKnownVersion();
-            while (fbAppVersionsIterator.hasNext()) {
-                int fbAppVersion = fbAppVersionsIterator.next();
-
-                // If there is a newer version in the versionSpec, throw it away, we don't have it
-                while (versionSpecIndex >= 0 && versionSpec[versionSpecIndex] > fbAppVersion) {
-                    versionSpecIndex--;
-                }
+        return allAvailableVersions;
+    }
 
-                if (versionSpecIndex < 0) {
-                    // There was no fb app version that fell into any range in the versionSpec - or - the
-                    // versionSpec was empty, which means that this action is not supported.
-                    return NO_PROTOCOL_AVAILABLE;
-                }
+    /**
+     * This is public to allow for testing. Developers are discouraged from using this method, since it may change without
+     * notice.
+     */
+    public static int computeLatestAvailableVersionFromVersionSpec(
+            TreeSet<Integer> allAvailableFacebookAppVersions,
+            int latestSdkVersion,
+            int[] versionSpec) {
+        // Remember that these ranges are sorted in ascending order and can be unbounded. So we are starting
+        // from the end of the version-spec array and working backwards, to try get the newest possible version
+        int versionSpecIndex = versionSpec.length - 1;
+        Iterator<Integer> fbAppVersionsIterator = allAvailableFacebookAppVersions.descendingIterator();
+        int latestFacebookAppVersion = -1;
 
-                // If we are here, we know we are within a range specified in the versionSpec. We should see if it is
-                // a disabled or enabled range.
+        while (fbAppVersionsIterator.hasNext()) {
+            int fbAppVersion = fbAppVersionsIterator.next();
 
-                if (versionSpec[versionSpecIndex] == fbAppVersion) {
-                    // if the versionSpecIndex is even, it is enabled; if odd, disabled
-                    return (
-                            versionSpecIndex % 2 == 0 ?
-                                    Math.min(fbAppVersion, latestAllowedVersion) :
-                                    NO_PROTOCOL_AVAILABLE
-                    );
-                }
+            // We're holding on to the greatest fb-app version available.
+            latestFacebookAppVersion = Math.max(latestFacebookAppVersion, fbAppVersion);
+
+            // If there is a newer version in the versionSpec, throw it away, we don't have it
+            while (versionSpecIndex >= 0 && versionSpec[versionSpecIndex] > fbAppVersion) {
+                versionSpecIndex--;
             }
-        } finally {
-            if (c != null) {
-                c.close();
+
+            if (versionSpecIndex < 0) {
+                // There was no fb app version that fell into any range in the versionSpec - or - the
+                // versionSpec was empty, which means that this action is not supported.
+                return NO_PROTOCOL_AVAILABLE;
+            }
+
+            // If we are here, we know we are within a range specified in the versionSpec. We should see if it is
+            // a disabled or enabled range.
+
+            if (versionSpec[versionSpecIndex] == fbAppVersion) {
+                // if the versionSpecIndex is even, it is enabled; if odd, disabled
+                return (
+                        versionSpecIndex % 2 == 0 ?
+                                Math.min(latestFacebookAppVersion, latestSdkVersion) :
+                                NO_PROTOCOL_AVAILABLE
+                );
             }
         }
 
diff --git a/facebook/src/com/facebook/internal/PlatformServiceClient.java b/facebook/src/com/facebook/internal/PlatformServiceClient.java
index 16d619c3b..df75fc5e5 100644
--- a/facebook/src/com/facebook/internal/PlatformServiceClient.java
+++ b/facebook/src/com/facebook/internal/PlatformServiceClient.java
@@ -96,7 +96,11 @@ public void onServiceConnected(ComponentName name, IBinder service) {
 
     public void onServiceDisconnected(ComponentName name) {
         sender = null;
-        context.unbindService(this);
+        try {
+            context.unbindService(this);
+        } catch (IllegalArgumentException ex) {
+            // Do nothing, the connection was already unbound
+        }
         callback(null);
     }
 
diff --git a/facebook/src/com/facebook/internal/ServerProtocol.java b/facebook/src/com/facebook/internal/ServerProtocol.java
index 46931353d..7583f015d 100644
--- a/facebook/src/com/facebook/internal/ServerProtocol.java
+++ b/facebook/src/com/facebook/internal/ServerProtocol.java
@@ -64,7 +64,7 @@
     // URL components
     private static final String GRAPH_VIDEO_URL_FORMAT = "https://graph-video.%s";
     private static final String GRAPH_URL_FORMAT = "https://graph.%s";
-    public static final String GRAPH_API_VERSION = "v2.1";
+    public static final String GRAPH_API_VERSION = "v2.2";
 
     private static final String LEGACY_API_VERSION = "v1.0";
 
diff --git a/facebook/src/com/facebook/internal/Utility.java b/facebook/src/com/facebook/internal/Utility.java
index 91f627b02..3735e0cce 100644
--- a/facebook/src/com/facebook/internal/Utility.java
+++ b/facebook/src/com/facebook/internal/Utility.java
@@ -639,7 +639,9 @@ protected void onPostExecute(GraphObject result) {
                     SharedPreferences sharedPrefs = context.getSharedPreferences(
                             APP_SETTINGS_PREFS_STORE,
                             Context.MODE_PRIVATE);
-                    sharedPrefs.edit().putString(settingsKey, resultJSON.toString()).apply();
+                    sharedPrefs.edit()
+                        .putString(settingsKey, resultJSON.toString())
+                        .apply();
                 }
 
                 initialAppSettingsLoadTask = null;
diff --git a/facebook/src/com/facebook/widget/FacebookDialog.java b/facebook/src/com/facebook/widget/FacebookDialog.java
index 44ef2ceec..5e17e1b4c 100644
--- a/facebook/src/com/facebook/widget/FacebookDialog.java
+++ b/facebook/src/com/facebook/widget/FacebookDialog.java
@@ -807,9 +807,9 @@ public ShareDialogBuilderBase(Activity activity) {
         }
 
         /**
-         * Sets the title of the item to be shared.
+         * Sets the name of the URL to be shared. This method only has effect if setLink is called.
          *
-         * @param name the title
+         * @param name the name
          * @return this instance of the builder
          */
         public CONCRETE setName(String name) {
@@ -820,9 +820,9 @@ public CONCRETE setName(String name) {
         }
 
         /**
-         * Sets the subtitle of the item to be shared.
+         * Sets the caption of the URL to be shared. This method only has effect if setLink is called.
          *
-         * @param caption the subtitle
+         * @param caption the caption
          * @return this instance of the builder
          */
         public CONCRETE setCaption(String caption) {
@@ -833,7 +833,7 @@ public CONCRETE setCaption(String caption) {
         }
 
         /**
-         * Sets the description of the item to be shared.
+         * Sets the description of the URL to be shared. This method only has effect if setLink is called.
          *
          * @param description the description
          * @return this instance of the builder
@@ -859,7 +859,7 @@ public CONCRETE setLink(String link) {
         }
 
         /**
-         * Sets the URL of the image of the item to be shared.
+         * Sets the URL of the image of the URL to be shared. This method only has effect if setLink is called.
          *
          * @param picture the URL of the image
          * @return this instance of the builder
diff --git a/facebook/src/com/facebook/widget/LoginButton.java b/facebook/src/com/facebook/widget/LoginButton.java
index 6f548f4dc..8b82e2d21 100644
--- a/facebook/src/com/facebook/widget/LoginButton.java
+++ b/facebook/src/com/facebook/widget/LoginButton.java
@@ -381,7 +381,7 @@ public void setReadPermissions(String... permissions) {
      * manage the setting of permissions outside of the LoginButton class altogether
      * (by managing the session explicitly).
      *
-     * @param permissions the read permissions to use
+     * @param permissions the publish permissions to use
      *
      * @throws UnsupportedOperationException if setReadPermissions has been called
      * @throws IllegalArgumentException if permissions is null or empty
@@ -407,7 +407,7 @@ public void setPublishPermissions(List<String> permissions) {
      * manage the setting of permissions outside of the LoginButton class altogether
      * (by managing the session explicitly).
      *
-     * @param permissions the read permissions to use
+     * @param permissions the publish permissions to use
      *
      * @throws UnsupportedOperationException if setReadPermissions has been called
      * @throws IllegalArgumentException if permissions is null or empty
diff --git a/facebook/src/com/facebook/widget/PickerFragment.java b/facebook/src/com/facebook/widget/PickerFragment.java
index 4ef6cbd23..536c0c783 100644
--- a/facebook/src/com/facebook/widget/PickerFragment.java
+++ b/facebook/src/com/facebook/widget/PickerFragment.java
@@ -97,6 +97,7 @@
     private final Class<T> graphObjectClass;
     private LoadingStrategy loadingStrategy;
     private SelectionStrategy selectionStrategy;
+    private Set<String> selectionHint;
     private ProgressBar activityCircle;
     private SessionTracker sessionTracker;
     private String titleText;
@@ -487,9 +488,21 @@ public String getDoneButtonText() {
      *                    if false, data will not be re-loaded if it is already displayed (or loading)
      */
     public void loadData(boolean forceReload) {
+        loadData(forceReload, null);
+    }
+
+    /**
+     * Causes the picker to load data from the service and display it to the user.
+     *
+     * @param forceReload if true, data will be loaded even if there is already data being displayed (or loading);
+     *                    if false, data will not be re-loaded if it is already displayed (or loading)
+     * @param selectIds ids to select, if they are present in the loaded data
+     */
+    public void loadData(boolean forceReload, Set<String> selectIds) {
         if (!forceReload && loadingStrategy.isDataPresentOrLoading()) {
             return;
         }
+        selectionHint = selectIds;
         loadDataSkippingRoundTripIfCached();
     }
 
@@ -751,6 +764,32 @@ void updateAdapter(SimpleGraphObjectCursor<T> data) {
             if (dataChanged && onDataChangedListener != null) {
                 onDataChangedListener.onDataChanged(PickerFragment.this);
             }
+            if (selectionHint != null && !selectionHint.isEmpty() && data != null) {
+                data.moveToFirst();
+                boolean changed = false;
+                for (int i = 0; i < data.getCount(); i++) {
+                    data.moveToPosition(i);
+                    T graphObject = data.getGraphObject();
+                    if (!graphObject.asMap().containsKey("id"))
+                        continue;
+                    Object obj = graphObject.getProperty("id");
+                    if (!(obj instanceof String)) {
+                        continue;
+                    }
+                    String id = (String) obj;
+                    if (selectionHint.contains(id)) {
+                        selectionStrategy.toggleSelection(id);
+                        selectionHint.remove(id);
+                        changed = true;
+                    }
+                    if (selectionHint.isEmpty()) {
+                        break;
+                    }
+                }
+                if (onSelectionChangedListener != null && changed) {
+                    onSelectionChangedListener.onSelectionChanged(PickerFragment.this);
+                }
+            }
         }
     }
 
diff --git a/facebook/src/com/facebook/widget/WebDialog.java b/facebook/src/com/facebook/widget/WebDialog.java
index bdfb3811c..cf54a850a 100644
--- a/facebook/src/com/facebook/widget/WebDialog.java
+++ b/facebook/src/com/facebook/widget/WebDialog.java
@@ -785,7 +785,7 @@ public FeedDialogBuilder setSource(String source) {
         }
 
         /**
-         * Sets the name of the item being shared.
+         * Sets the name of the URL being shared. This method only has effect if setLink is called.
          *
          * @param name the name
          * @return the builder
@@ -796,7 +796,7 @@ public FeedDialogBuilder setName(String name) {
         }
 
         /**
-         * Sets the caption to be displayed.
+         * Sets the caption of the URL being shared. This method only has effect if setLink is called.
          *
          * @param caption the caption
          * @return the builder
@@ -807,7 +807,7 @@ public FeedDialogBuilder setCaption(String caption) {
         }
 
         /**
-         * Sets the description to be displayed.
+         * Sets the description of the URL being shared. This method only has effect if setLink is called.
          *
          * @param description the description
          * @return the builder
diff --git a/facebook/tests/build.gradle b/facebook/tests/build.gradle
index 97494f6b4..df41829e9 100644
--- a/facebook/tests/build.gradle
+++ b/facebook/tests/build.gradle
@@ -1,4 +1,4 @@
-apply plugin: 'android'
+apply plugin: 'com.android.application'
 
 dependencies {
     compile project(':facebook')
diff --git a/facebook/tests/src/com/facebook/internal/NativeProtocolVersionTests.java b/facebook/tests/src/com/facebook/internal/NativeProtocolVersionTests.java
new file mode 100644
index 000000000..e08245ab3
--- /dev/null
+++ b/facebook/tests/src/com/facebook/internal/NativeProtocolVersionTests.java
@@ -0,0 +1,157 @@
+/**
+ * Copyright 2010-present Facebook.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *    http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.facebook.internal;
+
+import android.test.AndroidTestCase;
+import android.test.suitebuilder.annotation.SmallTest;
+
+import java.util.TreeSet;
+
+public class NativeProtocolVersionTests extends AndroidTestCase {
+    @SmallTest
+    public void testSdkOlderThanApp_versionSpecOpen() {
+        // Base case where a feature was enabled a while ago and the SDK and Native app have been updated
+        // since then.
+        int[] versionSpec = new int[] {3};
+        int latestSdkVersion = 7;
+        int[] availableFbAppVersions = new int[] {1,2,3,4,5,6,7,8};
+
+        int resultVersion = NativeProtocol.computeLatestAvailableVersionFromVersionSpec(
+                getTreeSetFromIntArray(availableFbAppVersions),
+                latestSdkVersion,
+                versionSpec);
+
+        assertEquals(resultVersion, 7);
+    }
+
+    @SmallTest
+    public void testSdkNewerThanApp_versionSpecOpen() {
+        // Base case where a feature was enabled a while ago and the SDK and Native app have been updated
+        // since then.
+        int[] versionSpec = new int[] {3};
+        int latestSdkVersion = 8;
+        int[] availableFbAppVersions = new int[] {1,2,3,4,5,6,7};
+
+        int resultVersion = NativeProtocol.computeLatestAvailableVersionFromVersionSpec(
+                getTreeSetFromIntArray(availableFbAppVersions),
+                latestSdkVersion,
+                versionSpec);
+
+        assertEquals(resultVersion, 7);
+    }
+
+    @SmallTest
+    public void testSdkOlderThanApp_versionSpecDisabled() {
+        // Case where a feature was enabled AND disabled a while ago and the SDK and Native app have been
+        // updated since then.
+        int[] versionSpec = new int[] {1,3,7,8};
+        int latestSdkVersion = 7;
+        int[] availableFbAppVersions = new int[] {1,2,3,4,5,6,7,8};
+
+        int resultVersion = NativeProtocol.computeLatestAvailableVersionFromVersionSpec(
+                getTreeSetFromIntArray(availableFbAppVersions),
+                latestSdkVersion,
+                versionSpec);
+
+        assertEquals(resultVersion, NativeProtocol.NO_PROTOCOL_AVAILABLE);
+    }
+
+    @SmallTest
+    public void testSdkNewerThanApp_versionSpecDisabled() {
+        // Case where a feature was enabled AND disabled a while ago and the SDK and Native app have been
+        // updated since then.
+        int[] versionSpec = new int[] {1,3,6,7};
+        int latestSdkVersion = 8;
+        int[] availableFbAppVersions = new int[] {1,2,3,4,5,6,7};
+
+        int resultVersion = NativeProtocol.computeLatestAvailableVersionFromVersionSpec(
+                getTreeSetFromIntArray(availableFbAppVersions),
+                latestSdkVersion,
+                versionSpec);
+
+        assertEquals(resultVersion, NativeProtocol.NO_PROTOCOL_AVAILABLE);
+    }
+
+    @SmallTest
+    public void testSdkOlderThanApp_versionSpecNewerAndEnabled() {
+        // Case where the sdk and app are older, but the app is still enabled
+        int[] versionSpec = new int[] {1,3,7,9,10,11,12,13};
+        int latestSdkVersion = 7;
+        int[] availableFbAppVersions = new int[] {1,2,3,4,5,6,7,8};
+
+        int resultVersion = NativeProtocol.computeLatestAvailableVersionFromVersionSpec(
+                getTreeSetFromIntArray(availableFbAppVersions),
+                latestSdkVersion,
+                versionSpec);
+
+        assertEquals(resultVersion, 7);
+    }
+
+    @SmallTest
+    public void testSdkNewerThanApp_versionSpecNewerAndEnabled() {
+        // Case where the sdk and app are older, but the app is still enabled
+        int[] versionSpec = new int[] {1,3,7,9,10,11,12,13};
+        int latestSdkVersion = 8;
+        int[] availableFbAppVersions = new int[] {1,2,3,4,5,6,7};
+
+        int resultVersion = NativeProtocol.computeLatestAvailableVersionFromVersionSpec(
+                getTreeSetFromIntArray(availableFbAppVersions),
+                latestSdkVersion,
+                versionSpec);
+
+        assertEquals(resultVersion, 7);
+    }
+
+    @SmallTest
+    public void testSdkOlderThanApp_versionSpecNewerAndDisabled() {
+        // Case where the sdk and app are older, and the app is a disabled version
+        int[] versionSpec = new int[] {1,3,7,8,10,11,12,13};
+        int latestSdkVersion = 7;
+        int[] availableFbAppVersions = new int[] {1,2,3,4,5,6,7,8};
+
+        int resultVersion = NativeProtocol.computeLatestAvailableVersionFromVersionSpec(
+                getTreeSetFromIntArray(availableFbAppVersions),
+                latestSdkVersion,
+                versionSpec);
+
+        assertEquals(resultVersion, NativeProtocol.NO_PROTOCOL_AVAILABLE);
+    }
+
+    @SmallTest
+    public void testSdkNewerThanApp_versionSpecNewerAndDisabled() {
+        // Case where the sdk and app are older, and the app is a disabled version
+        int[] versionSpec = new int[] {1,3,6,7,10,11,12,13};
+        int latestSdkVersion = 8;
+        int[] availableFbAppVersions = new int[] {1,2,3,4,5,6,7};
+
+        int resultVersion = NativeProtocol.computeLatestAvailableVersionFromVersionSpec(
+                getTreeSetFromIntArray(availableFbAppVersions),
+                latestSdkVersion,
+                versionSpec);
+
+        assertEquals(resultVersion, NativeProtocol.NO_PROTOCOL_AVAILABLE);
+    }
+
+    private TreeSet<Integer> getTreeSetFromIntArray(int[] array) {
+        TreeSet<Integer> treeSet = new TreeSet<Integer>();
+        for (int a : array) {
+            treeSet.add(a);
+        }
+
+        return treeSet;
+    }
+}
diff --git a/samples/FriendPickerSample/build.gradle b/samples/FriendPickerSample/build.gradle
index b76fed903..41125c44d 100644
--- a/samples/FriendPickerSample/build.gradle
+++ b/samples/FriendPickerSample/build.gradle
@@ -1,4 +1,4 @@
-apply plugin: 'android'
+apply plugin: 'com.android.application'
 
 dependencies {
     compile project(':facebook')
diff --git a/samples/HelloFacebookSample/build.gradle b/samples/HelloFacebookSample/build.gradle
index b76fed903..41125c44d 100644
--- a/samples/HelloFacebookSample/build.gradle
+++ b/samples/HelloFacebookSample/build.gradle
@@ -1,4 +1,4 @@
-apply plugin: 'android'
+apply plugin: 'com.android.application'
 
 dependencies {
     compile project(':facebook')
diff --git a/samples/PlacePickerSample/build.gradle b/samples/PlacePickerSample/build.gradle
index b76fed903..41125c44d 100644
--- a/samples/PlacePickerSample/build.gradle
+++ b/samples/PlacePickerSample/build.gradle
@@ -1,4 +1,4 @@
-apply plugin: 'android'
+apply plugin: 'com.android.application'
 
 dependencies {
     compile project(':facebook')
diff --git a/samples/RPSSample/build.gradle b/samples/RPSSample/build.gradle
index b76fed903..41125c44d 100644
--- a/samples/RPSSample/build.gradle
+++ b/samples/RPSSample/build.gradle
@@ -1,4 +1,4 @@
-apply plugin: 'android'
+apply plugin: 'com.android.application'
 
 dependencies {
     compile project(':facebook')
diff --git a/samples/Scrumptious/build.gradle b/samples/Scrumptious/build.gradle
index b76fed903..41125c44d 100644
--- a/samples/Scrumptious/build.gradle
+++ b/samples/Scrumptious/build.gradle
@@ -1,4 +1,4 @@
-apply plugin: 'android'
+apply plugin: 'com.android.application'
 
 dependencies {
     compile project(':facebook')
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/SplashFragment.java b/samples/Scrumptious/src/com/facebook/scrumptious/SplashFragment.java
index 2eaaede2a..ba1b6442b 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/SplashFragment.java
+++ b/samples/Scrumptious/src/com/facebook/scrumptious/SplashFragment.java
@@ -22,9 +22,11 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
+import com.facebook.widget.LoginButton;
 
 public class SplashFragment extends Fragment {
 
+    private LoginButton loginButton;
     private TextView skipLoginButton;
     private SkipLoginCallback skipLoginCallback;
 
@@ -37,6 +39,9 @@
     public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
         View view = inflater.inflate(R.layout.splash, container, false);
 
+        loginButton = (LoginButton) view.findViewById(R.id.login_button);
+        loginButton.setReadPermissions("user_friends");
+
         skipLoginButton = (TextView) view.findViewById(R.id.skip_login_button);
         skipLoginButton.setOnClickListener(new View.OnClickListener() {
             @Override
diff --git a/samples/SwitchUserSample/build.gradle b/samples/SwitchUserSample/build.gradle
index b76fed903..41125c44d 100644
--- a/samples/SwitchUserSample/build.gradle
+++ b/samples/SwitchUserSample/build.gradle
@@ -1,4 +1,4 @@
-apply plugin: 'android'
+apply plugin: 'com.android.application'
 
 dependencies {
     compile project(':facebook')
diff --git a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/SettingsFragment.java b/samples/SwitchUserSample/src/com/facebook/samples/switchuser/SettingsFragment.java
index 0dab22ade..125a649c2 100644
--- a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/SettingsFragment.java
+++ b/samples/SwitchUserSample/src/com/facebook/samples/switchuser/SettingsFragment.java
@@ -269,7 +269,7 @@ Slot getSlot(int slot) {
 
         private void setSelectedSlotNumber(int slot) {
             // Store the selected slot number for when the app is closed and restarted
-            settings.edit().putInt(SETTINGS_CURRENT_SLOT_KEY, slot).commit();
+            settings.edit().putInt(SETTINGS_CURRENT_SLOT_KEY, slot).apply();
             selectedSlotNumber = slot;
         }
 
