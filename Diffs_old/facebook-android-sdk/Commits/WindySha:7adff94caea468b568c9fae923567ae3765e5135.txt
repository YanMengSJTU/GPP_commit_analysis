diff --git a/facebook-common/src/main/java/com/facebook/internal/LoginAuthorizationType.java b/facebook-common/src/main/java/com/facebook/internal/LoginAuthorizationType.java
deleted file mode 100644
index 278a8c739..000000000
--- a/facebook-common/src/main/java/com/facebook/internal/LoginAuthorizationType.java
+++ /dev/null
@@ -1,31 +0,0 @@
-/**
- * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
- *
- * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
- * copy, modify, and distribute this software in source code or binary form for use
- * in connection with the web services and APIs provided by Facebook.
- *
- * As with any software that integrates with the Facebook platform, your use of
- * this software is subject to the Facebook Developer Principles and Policies
- * [http://developers.facebook.com/policy/]. This copyright notice shall be
- * included in all copies or substantial portions of the software.
- *
- * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
- * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
- * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
- * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- */
-
-package com.facebook.internal;
-
-/**
- * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
- * Android. Use of any of the classes in this package is unsupported, and they may be modified or
- * removed without warning at any time.
- */
-public enum LoginAuthorizationType {
-    READ,
-    PUBLISH
-}
diff --git a/facebook-common/src/main/java/com/facebook/login/LoginManager.java b/facebook-common/src/main/java/com/facebook/login/LoginManager.java
index dab4184d9..d1c2ce154 100644
--- a/facebook-common/src/main/java/com/facebook/login/LoginManager.java
+++ b/facebook-common/src/main/java/com/facebook/login/LoginManager.java
@@ -386,8 +386,7 @@ private void logInWithReadPermissions(
             Collection<String> permissions) {
         validateReadPermissions(permissions);
 
-        LoginClient.Request loginRequest = createLoginRequest(permissions);
-        startLogin(new FragmentStartActivityDelegate(fragment), loginRequest);
+        logIn(fragment, permissions);
     }
 
     /**
@@ -398,8 +397,7 @@ private void logInWithReadPermissions(
     public void logInWithReadPermissions(Activity activity, Collection<String> permissions) {
         validateReadPermissions(permissions);
 
-        LoginClient.Request loginRequest = createLoginRequest(permissions);
-        startLogin(new ActivityStartActivityDelegate(activity), loginRequest);
+        logIn(activity, permissions);
     }
 
     /**
@@ -460,8 +458,7 @@ private void logInWithPublishPermissions(
             Collection<String> permissions) {
         validatePublishPermissions(permissions);
 
-        LoginClient.Request loginRequest = createLoginRequest(permissions);
-        startLogin(new FragmentStartActivityDelegate(fragment), loginRequest);
+        logIn(fragment, permissions);
     }
 
     /**
@@ -472,6 +469,43 @@ private void logInWithPublishPermissions(
     public void logInWithPublishPermissions(Activity activity, Collection<String> permissions) {
         validatePublishPermissions(permissions);
 
+        logIn(activity, permissions);
+    }
+
+    /**
+     * Logs the user in with the requested permissions.
+     * @param fragment    The android.support.v4.app.Fragment which is starting the login process.
+     * @param permissions The requested permissions.
+     */
+    public void logIn(Fragment fragment, Collection<String> permissions) {
+        logIn(new FragmentWrapper(fragment), permissions);
+    }
+
+    /**
+     * Logs the user in with the requested permissions.
+     * @param fragment    The android.app.Fragment which is starting the login process.
+     * @param permissions The requested permissions.
+     */
+    public void logIn(android.app.Fragment fragment, Collection<String> permissions) {
+        logIn(new FragmentWrapper(fragment), permissions);
+    }
+
+    /**
+     * Logs the user in with the requested permissions.
+     * @param fragment    The fragment which is starting the login process.
+     * @param permissions The requested permissions.
+     */
+    public void logIn(FragmentWrapper fragment, Collection<String> permissions) {
+        LoginClient.Request loginRequest = createLoginRequest(permissions);
+        startLogin(new FragmentStartActivityDelegate(fragment), loginRequest);
+    }
+
+    /**
+     * Logs the user in with the requested permissions.
+     * @param activity    The activity which is starting the login process.
+     * @param permissions The requested permissions.
+     */
+    public void logIn(Activity activity, Collection<String> permissions) {
         LoginClient.Request loginRequest = createLoginRequest(permissions);
         startLogin(new ActivityStartActivityDelegate(activity), loginRequest);
     }
diff --git a/facebook-login/src/main/java/com/facebook/login/widget/LoginButton.java b/facebook-login/src/main/java/com/facebook/login/widget/LoginButton.java
index f37261d0b..9c3e6656c 100644
--- a/facebook-login/src/main/java/com/facebook/login/widget/LoginButton.java
+++ b/facebook-login/src/main/java/com/facebook/login/widget/LoginButton.java
@@ -39,13 +39,11 @@
 import com.facebook.FacebookCallback;
 import com.facebook.FacebookSdk;
 import com.facebook.Profile;
-import com.facebook.appevents.AppEventsLogger;
 import com.facebook.appevents.InternalAppEventsLogger;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.CallbackManagerImpl;
 import com.facebook.internal.FetchedAppSettings;
 import com.facebook.internal.FetchedAppSettingsManager;
-import com.facebook.internal.LoginAuthorizationType;
 import com.facebook.internal.ServerProtocol;
 import com.facebook.internal.Utility;
 import com.facebook.login.DefaultAudience;
@@ -135,7 +133,6 @@ public int getValue() {
     static class LoginButtonProperties {
         private DefaultAudience defaultAudience = DefaultAudience.FRIENDS;
         private List<String> permissions = Collections.emptyList();
-        private LoginAuthorizationType authorizationType = null;
         private LoginBehavior loginBehavior = LoginBehavior.NATIVE_WITH_FALLBACK;
         private String authType = ServerProtocol.DIALOG_REREQUEST_AUTH_TYPE;
 
@@ -148,27 +145,11 @@ public DefaultAudience getDefaultAudience() {
         }
 
         public void setReadPermissions(List<String> permissions) {
-
-            if (LoginAuthorizationType.PUBLISH.equals(authorizationType)) {
-                throw new UnsupportedOperationException("Cannot call setReadPermissions after " +
-                        "setPublishPermissions has been called.");
-            }
             this.permissions = permissions;
-            authorizationType = LoginAuthorizationType.READ;
         }
 
         public void setPublishPermissions(List<String> permissions) {
-
-            if (LoginAuthorizationType.READ.equals(authorizationType)) {
-                throw new UnsupportedOperationException("Cannot call setPublishPermissions after " +
-                        "setReadPermissions has been called.");
-            }
-            if (Utility.isNullOrEmpty(permissions)) {
-                throw new IllegalArgumentException(
-                        "Permissions for publish actions cannot be null or empty.");
-            }
             this.permissions = permissions;
-            authorizationType = LoginAuthorizationType.PUBLISH;
         }
 
         List<String> getPermissions() {
@@ -177,7 +158,6 @@ public void setPublishPermissions(List<String> permissions) {
 
         public void clearPermissions() {
             permissions = null;
-            authorizationType = null;
         }
 
         public void setLoginBehavior(LoginBehavior loginBehavior) {
@@ -777,34 +757,12 @@ public void onClick(View v) {
 
         protected void performLogin() {
             final LoginManager loginManager = getLoginManager();
-            if (LoginAuthorizationType.PUBLISH.equals(properties.authorizationType)) {
-                if (LoginButton.this.getFragment() != null) {
-                    loginManager.logInWithPublishPermissions(
-                            LoginButton.this.getFragment(),
-                            properties.permissions);
-                } else if (LoginButton.this.getNativeFragment() != null) {
-                    loginManager.logInWithPublishPermissions(
-                            LoginButton.this.getNativeFragment(),
-                            properties.permissions);
-                } else {
-                    loginManager.logInWithPublishPermissions(
-                            LoginButton.this.getActivity(),
-                            properties.permissions);
-                }
+            if (LoginButton.this.getFragment() != null) {
+                loginManager.logIn(LoginButton.this.getFragment(), properties.permissions);
+            } else if (LoginButton.this.getNativeFragment() != null) {
+                loginManager.logIn(LoginButton.this.getNativeFragment(), properties.permissions);
             } else {
-                if (LoginButton.this.getFragment() != null) {
-                    loginManager.logInWithReadPermissions(
-                            LoginButton.this.getFragment(),
-                            properties.permissions);
-                } else if (LoginButton.this.getNativeFragment() != null) {
-                    loginManager.logInWithReadPermissions(
-                            LoginButton.this.getNativeFragment(),
-                            properties.permissions);
-                } else {
-                    loginManager.logInWithReadPermissions(
-                            LoginButton.this.getActivity(),
-                            properties.permissions);
-                }
+                loginManager.logIn(LoginButton.this.getActivity(), properties.permissions);
             }
         }
 
