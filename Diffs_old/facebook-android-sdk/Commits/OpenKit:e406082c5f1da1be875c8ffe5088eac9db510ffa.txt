diff --git a/facebook/src/com/facebook/LoginActivity.java b/facebook/src/com/facebook/LoginActivity.java
index 2b45eeb08..c95ed5cbd 100644
--- a/facebook/src/com/facebook/LoginActivity.java
+++ b/facebook/src/com/facebook/LoginActivity.java
@@ -20,7 +20,6 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.view.View;
-import com.facebook.android.R;
 
 /**
  * This Activity is a necessary part of the overall Facebook login process
@@ -52,8 +51,12 @@
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        setContentView(R.layout.com_facebook_login_activity_layout);
+        
+        int viewID = getResources().getIdentifier("com_facebook_login_activity_layout", "layout", getPackageName());
+        //setContentView(R.layout.com_facebook_login_activity_layout);
+        setContentView(viewID);
 
+        
         if (savedInstanceState != null) {
             callingPackage = savedInstanceState.getString(SAVED_CALLING_PKG_KEY);
             authorizationClient = (AuthorizationClient) savedInstanceState.getSerializable(SAVED_AUTH_CLIENT);
@@ -73,12 +76,17 @@ public void onCompleted(AuthorizationClient.Result outcome) {
         authorizationClient.setBackgroundProcessingListener(new AuthorizationClient.BackgroundProcessingListener() {
             @Override
             public void onBackgroundProcessingStarted() {
-                findViewById(R.id.com_facebook_login_activity_progress_bar).setVisibility(View.VISIBLE);
+                //findViewById(R.id.com_facebook_login_activity_progress_bar).setVisibility(View.VISIBLE);
+                int viewID = getResources().getIdentifier("com_facebook_login_activity_progress_bar", "id", getPackageName());
+                findViewById(viewID).setVisibility(View.VISIBLE);
             }
 
             @Override
             public void onBackgroundProcessingStopped() {
-                findViewById(R.id.com_facebook_login_activity_progress_bar).setVisibility(View.GONE);
+                //findViewById(R.id.com_facebook_login_activity_progress_bar).setVisibility(View.GONE);
+                int viewID = getResources().getIdentifier("com_facebook_login_activity_progress_bar", "id", getPackageName());
+                findViewById(viewID).setVisibility(View.GONE);
+                
             }
         });
     }
@@ -118,7 +126,9 @@ public void onPause() {
         super.onPause();
 
         authorizationClient.cancelCurrentHandler();
-        findViewById(R.id.com_facebook_login_activity_progress_bar).setVisibility(View.GONE);
+        int viewID = getResources().getIdentifier("com_facebook_login_activity_progress_bar", "id", getPackageName());
+        //findViewById(R.id.com_facebook_login_activity_progress_bar).setVisibility(View.GONE);
+        findViewById(viewID).setVisibility(View.GONE);
     }
 
     @Override
diff --git a/facebook/src/com/facebook/widget/ProfilePictureView.java b/facebook/src/com/facebook/widget/ProfilePictureView.java
index d599f5d7b..136fb0716 100644
--- a/facebook/src/com/facebook/widget/ProfilePictureView.java
+++ b/facebook/src/com/facebook/widget/ProfilePictureView.java
@@ -29,7 +29,6 @@
 import android.widget.ImageView;
 import com.facebook.FacebookException;
 import com.facebook.LoggingBehavior;
-import com.facebook.android.R;
 import com.facebook.internal.Logger;
 import com.facebook.internal.Utility;
 
@@ -372,10 +371,24 @@ private void initialize(Context context) {
     }
 
     private void parseAttributes(AttributeSet attrs) {
-        TypedArray a = getContext().obtainStyledAttributes(attrs, R.styleable.com_facebook_profile_picture_view);
-        setPresetSize(a.getInt(R.styleable.com_facebook_profile_picture_view_preset_size, CUSTOM));
-        isCropped = a.getBoolean(R.styleable.com_facebook_profile_picture_view_is_cropped, IS_CROPPED_DEFAULT_VALUE);
-        a.recycle();
+    	
+    	//IF the Resources class is defined, load the stylable attributes
+    	if(StyleableHelper.isRClassDefined(getContext())) {
+	    	int attrArray[] = StyleableHelper.getResourceDeclareStyleableIntArray(getContext(), "com_facebook_profile_picture_view");
+	        //TypedArray a = getContext().obtainStyledAttributes(attrs, R.styleable.com_facebook_profile_picture_view);
+	    	TypedArray a = getContext().obtainStyledAttributes(attrs, attrArray);
+	    	setPresetSize(a.getInt(0, CUSTOM));
+	    	isCropped = a.getBoolean(1, IS_CROPPED_DEFAULT_VALUE);
+	    	//setPresetSize(a.getInt(R.styleable.com_facebook_profile_picture_view_preset_size, CUSTOM));
+	        //isCropped = a.getBoolean(R.styleable.com_facebook_profile_picture_view_is_cropped, IS_CROPPED_DEFAULT_VALUE);
+	        a.recycle();
+    	}
+    	else
+    	{
+    		//There is no R class available so just set some defaults
+    		setPresetSize(NORMAL);
+    		isCropped = true;
+    	}
     }
 
     private void refreshImage(boolean force) {
@@ -392,9 +405,16 @@ private void refreshImage(boolean force) {
     }
 
     private void setBlankProfilePicture() {
+    	
+    	int blankSquareID = getResources().getIdentifier("com_facebook_profile_picture_blank_square", "drawable", getContext().getPackageName());
+    	int blankPortraitID = getResources().getIdentifier("com_facebook_profile_picture_blank_portrait", "drawable", getContext().getPackageName());
+    	/*
         int blankImageResource = isCropped() ?
                 R.drawable.com_facebook_profile_picture_blank_square :
-                R.drawable.com_facebook_profile_picture_blank_portrait;
+                R.drawable.com_facebook_profile_picture_blank_portrait;*/
+    	int blankImageResource = isCropped() ?
+                blankSquareID :
+                blankPortraitID;
         setImageBitmap( BitmapFactory.decodeResource(getResources(), blankImageResource));
     }
 
@@ -496,19 +516,26 @@ private int getPresetSizeInPixels(boolean forcePreset) {
         int dimensionId;
         switch (presetSizeType) {
             case SMALL:
-                dimensionId = R.dimen.com_facebook_profilepictureview_preset_size_small;
+                //dimensionId = R.dimen.com_facebook_profilepictureview_preset_size_small;
+            	dimensionId = getResources().getIdentifier("com_facebook_profilepictureview_preset_size_small", "dimen", getContext().getPackageName());
                 break;
             case NORMAL:
-                dimensionId = R.dimen.com_facebook_profilepictureview_preset_size_normal;
+                //dimensionId = R.dimen.com_facebook_profilepictureview_preset_size_normal;
+                dimensionId =  getResources().getIdentifier("com_facebook_profilepictureview_preset_size_normal", "dimen", getContext().getPackageName());
+                
                 break;
             case LARGE:
-                dimensionId = R.dimen.com_facebook_profilepictureview_preset_size_large;
+                //dimensionId = R.dimen.com_facebook_profilepictureview_preset_size_large;
+                dimensionId =  getResources().getIdentifier("com_facebook_profilepictureview_preset_size_large", "dimen", getContext().getPackageName());
+                
                 break;
             case CUSTOM:
                 if (!forcePreset) {
                     return ImageRequest.UNSPECIFIED_DIMENSION;
                 } else {
-                    dimensionId = R.dimen.com_facebook_profilepictureview_preset_size_normal;
+                    //dimensionId = R.dimen.com_facebook_profilepictureview_preset_size_normal;
+                    dimensionId =  getResources().getIdentifier("com_facebook_profilepictureview_preset_size_normal", "dimen", getContext().getPackageName());
+                    
                     break;
                 }
             default:
diff --git a/facebook/src/com/facebook/widget/StyleableHelper.java b/facebook/src/com/facebook/widget/StyleableHelper.java
new file mode 100644
index 000000000..32faf2266
--- /dev/null
+++ b/facebook/src/com/facebook/widget/StyleableHelper.java
@@ -0,0 +1,60 @@
+package com.facebook.widget;
+
+import java.lang.reflect.Field;
+import android.content.Context;
+import android.util.Log;
+
+public class StyleableHelper {
+	
+	/*********************************************************************************
+	*   Returns the resource-IDs for all attributes specified in the
+	*   given <declare-styleable>-resource tag as an int array.
+	*
+	*   @param  context     The current application context.
+	*   @param  name        The name of the <declare-styleable>-resource-tag to pick.
+	*   @return             All resource-IDs of the child-attributes for the given
+	*                       <declare-styleable>-resource or <code>null</code> if
+	*                       this tag could not be found or an error occured.
+	*********************************************************************************/
+	public static final int[] getResourceDeclareStyleableIntArray( Context context, String name )
+	{
+	    try
+	    {
+	        //use reflection to access the resource class
+	        Field[] fields2 = Class.forName( context.getPackageName() + ".R$styleable" ).getFields();
+
+	        //browse all fields
+	        for ( Field f : fields2 )
+	        {
+	            //pick matching field
+	            if ( f.getName().equals( name ) )
+	            {
+	                //return as int array
+	                int[] ret = (int[])f.get( null );
+	                Log.d("FBMOD", "Found resource properly!");
+	                return ret;
+	            }
+	        }
+	    }
+	    catch ( Throwable t )
+	    {
+	    	Log.e("FBMOD","Exception thrown while trying to find resource: " + t);
+	    	Log.e("FBMOD","Tried to load class name: " + context.getPackageName() + ".R$styleable");
+	    }
+	    
+	    Log.e("FBMOD","Could not load resource properly!");
+	    
+	    return null;
+	}
+	
+	public static Boolean isRClassDefined(Context context)
+	{
+		try {
+			Class.forName(context.getPackageName() + ".R" );
+			return true;
+		} catch (Exception e) {
+			return false;
+		}
+	}
+
+}
