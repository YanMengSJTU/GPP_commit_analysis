diff --git a/facebook-core/src/main/java/com/facebook/appevents/codeless/ViewIndexer.java b/facebook-core/src/main/java/com/facebook/appevents/codeless/ViewIndexer.java
index a9b42a2d4..cc909a73b 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/codeless/ViewIndexer.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/codeless/ViewIndexer.java
@@ -85,7 +85,6 @@ public void schedule() {
             return;
         }
         final String activityName = activity.getClass().getSimpleName();
-        final String appId = FacebookSdk.getApplicationId();
 
         final TimerTask indexingTask = new TimerTask() {
             @Override
@@ -94,10 +93,7 @@ public void run() {
                     final View rootView =
                             activity.getWindow().getDecorView().getRootView();
 
-                    boolean shouldStartIndexing =
-                            ActivityLifecycleTracker.getIsAppIndexingEnabled();
-
-                    if (!shouldStartIndexing) {
+                    if (!ActivityLifecycleTracker.getIsAppIndexingEnabled()) {
                         return;
                     }
 
@@ -132,7 +128,7 @@ public void run() {
                     }
 
                     String tree = viewTree.toString();
-                    sendToServer(tree, activityName);
+                    sendToServer(tree);
                 } catch (Exception e) {
                     Log.e(TAG, "UI Component tree indexing failure!", e);
                 }
@@ -185,26 +181,20 @@ public static void sendToServerUnityInstance(final String tree) {
 
     @Deprecated
     public void sendToServerUnity(final String tree) {
-        final Activity activity = activityReference.get();
-        String activityName = "";
-        if (null != activity) {
-            activityName = activity.getClass().getSimpleName();
-        }
-        instance.sendToServer(tree, activityName);
+        instance.sendToServer(tree);
     }
 
-    private void sendToServer(final String tree, final String activityName) {
+    private void sendToServer(final String tree) {
         FacebookSdk.getExecutor().execute(new Runnable() {
             @Override
             public void run() {
-                final String appId = FacebookSdk.getApplicationId();
                 final String currentDigest = Utility.md5hash(tree);
                 final AccessToken accessToken = AccessToken.getCurrentAccessToken();
                 if (currentDigest != null && currentDigest.equals(previousDigest)) {
                     return;
                 }
                 GraphRequest request = buildAppIndexingRequest(
-                        tree, accessToken, appId, Constants.APP_INDEXING);
+                        tree, accessToken, FacebookSdk.getApplicationId(), Constants.APP_INDEXING);
                 if (request != null) {
                     GraphResponse res = request.executeAndWait();
                     try {
