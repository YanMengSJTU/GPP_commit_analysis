diff --git a/facebook-core/src/main/java/com/facebook/appevents/AppEvent.java b/facebook-core/src/main/java/com/facebook/appevents/AppEvent.java
index 88d82316b..eed4e44bb 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/AppEvent.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/AppEvent.java
@@ -52,6 +52,7 @@
 
     private final JSONObject jsonObject;
     private final boolean isImplicit;
+    private final boolean inBackground;
     private final String name;
     private final String checksum;
 
@@ -61,6 +62,7 @@ public AppEvent(
             Double valueToSum,
             Bundle parameters,
             boolean isImplicitlyLogged,
+            boolean isInBackground,
             @Nullable final UUID currentSessionId
     ) throws JSONException, FacebookException {
         jsonObject = getJSONObjectForAppEvent(
@@ -69,8 +71,10 @@ public AppEvent(
                 valueToSum,
                 parameters,
                 isImplicitlyLogged,
+                isInBackground,
                 currentSessionId);
         isImplicit = isImplicitlyLogged;
+        inBackground = isInBackground;
         name = eventName;
         checksum = calculateChecksum();
     }
@@ -82,11 +86,13 @@ public String getName() {
     private AppEvent(
             String jsonString,
             boolean isImplicit,
+            boolean inBackground,
             String checksum) throws JSONException {
         jsonObject = new JSONObject(jsonString);
         this.isImplicit = isImplicit;
         this.name = jsonObject.optString(Constants.EVENT_NAME_EVENT_KEY);
         this.checksum = checksum;
+        this.inBackground = inBackground;
     }
 
     public boolean getIsImplicit() {
@@ -158,6 +164,7 @@ private static JSONObject getJSONObjectForAppEvent(
             Double valueToSum,
             Bundle parameters,
             boolean isImplicitlyLogged,
+            boolean isInBackground,
             @Nullable final UUID currentSessionId
     ) throws FacebookException, JSONException{
         validateIdentifier(eventName);
@@ -180,6 +187,10 @@ private static JSONObject getJSONObjectForAppEvent(
             eventObject.put("_implicitlyLogged", "1");
         }
 
+        if (isInBackground) {
+            eventObject.put("_inBackground", "1");
+        }
+
         if (parameters != null) {
             for (String key : parameters.keySet()) {
 
@@ -213,14 +224,16 @@ private static JSONObject getJSONObjectForAppEvent(
         private static final long serialVersionUID = -2488473066578201069L;
         private final String jsonString;
         private final boolean isImplicit;
+        private final boolean inBackground;
 
-        private SerializationProxyV1(String jsonString, boolean isImplicit) {
+        private SerializationProxyV1(String jsonString, boolean isImplicit, boolean inBackground) {
             this.jsonString = jsonString;
             this.isImplicit = isImplicit;
+            this.inBackground = inBackground;
         }
 
         private Object readResolve() throws JSONException {
-            return new AppEvent(jsonString, isImplicit, null);
+            return new AppEvent(jsonString, isImplicit, inBackground, null);
         }
     }
 
@@ -228,21 +241,27 @@ private Object readResolve() throws JSONException {
         private static final long serialVersionUID = 2016_08_03_001L;
         private final String jsonString;
         private final boolean isImplicit;
+        private final boolean inBackground;
         private final String checksum;
 
-        private SerializationProxyV2(String jsonString, boolean isImplicit, String checksum) {
+        private SerializationProxyV2(
+                String jsonString,
+                boolean isImplicit,
+                boolean inBackground,
+                String checksum) {
             this.jsonString = jsonString;
             this.isImplicit = isImplicit;
+            this.inBackground = inBackground;
             this.checksum = checksum;
         }
 
         private Object readResolve() throws JSONException {
-            return new AppEvent(jsonString, isImplicit, checksum);
+            return new AppEvent(jsonString, isImplicit, inBackground, checksum);
         }
     }
 
     private Object writeReplace() {
-        return new SerializationProxyV2(jsonObject.toString(), isImplicit, checksum);
+        return new SerializationProxyV2(jsonObject.toString(), isImplicit, inBackground, checksum);
     }
 
     @Override
diff --git a/facebook-core/src/main/java/com/facebook/appevents/AppEventsLoggerImpl.java b/facebook-core/src/main/java/com/facebook/appevents/AppEventsLoggerImpl.java
index e730829c7..d21900e6f 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/AppEventsLoggerImpl.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/AppEventsLoggerImpl.java
@@ -717,6 +717,7 @@ void logEvent(
                     valueToSum,
                     parameters,
                     isImplicitlyLogged,
+                    ActivityLifecycleTracker.isInBackground(),
                     currentSessionId);
             logEvent(event, accessTokenAppId);
         } catch (JSONException jsonException) {
diff --git a/facebook-core/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java b/facebook-core/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java
index 5052fc717..ac262a00f 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/internal/ActivityLifecycleTracker.java
@@ -28,6 +28,7 @@
 import android.os.Build;
 import android.os.Bundle;
 import android.support.annotation.Nullable;
+import android.support.annotation.RestrictTo;
 import android.util.Log;
 
 import com.facebook.FacebookSdk;
@@ -82,6 +83,7 @@
     private static String deviceSessionID = null;
     private static Boolean isAppIndexingEnabled = false;
     private static volatile Boolean isCheckingSession = false;
+    private static int activityReferences = 0;
 
     public static void startTracking(Application application, final String appId) {
         if (!tracking.compareAndSet(false, true)) {
@@ -103,6 +105,7 @@ public void onActivityCreated(
 
                     @Override
                     public void onActivityStarted(Activity activity) {
+                        ActivityLifecycleTracker.activityReferences++;
                         Logger.log(LoggingBehavior.APP_EVENTS, TAG, "onActivityStarted");
                     }
 
@@ -124,6 +127,7 @@ public void onActivityPaused(final Activity activity) {
                     public void onActivityStopped(Activity activity) {
                         Logger.log(LoggingBehavior.APP_EVENTS, TAG, "onActivityStopped");
                         AppEventsLogger.onContextStop();
+                        ActivityLifecycleTracker.activityReferences--;
                     }
 
                     @Override
@@ -138,6 +142,11 @@ public void onActivityDestroyed(Activity activity) {
                 });
     }
 
+    @RestrictTo(RestrictTo.Scope.LIBRARY_GROUP)
+    public static boolean isInBackground() {
+        return 0 == activityReferences;
+    }
+
     public static boolean isTracking() {
         return tracking.get();
     }
diff --git a/facebook/src/test/java/com/facebook/appevents/AppEventTestUtilities.java b/facebook/src/test/java/com/facebook/appevents/AppEventTestUtilities.java
index 8272100bf..dc5590c6c 100644
--- a/facebook/src/test/java/com/facebook/appevents/AppEventTestUtilities.java
+++ b/facebook/src/test/java/com/facebook/appevents/AppEventTestUtilities.java
@@ -46,6 +46,7 @@ public static AppEvent getTestAppEvent() throws Exception {
                 1.0,
                 customParams,
                 false,
+                false,
                 UUID.fromString("65565271-1ace-4580-bd13-b2bc6d0df035"));
         appEvent.isChecksumValid();
         return appEvent;
diff --git a/facebook/src/test/java/com/facebook/appevents/AppEventsLoggerTest.java b/facebook/src/test/java/com/facebook/appevents/AppEventsLoggerTest.java
index 3cba3a814..9055c0b28 100644
--- a/facebook/src/test/java/com/facebook/appevents/AppEventsLoggerTest.java
+++ b/facebook/src/test/java/com/facebook/appevents/AppEventsLoggerTest.java
@@ -145,6 +145,7 @@ public void testLogEvent() throws Exception {
                 Matchers.anyDouble(),
                 Matchers.any(Bundle.class),
                 Matchers.anyBoolean(),
+                Matchers.anyBoolean(),
                 Matchers.any(UUID.class));
     }
 
@@ -162,6 +163,7 @@ public void testLogPurchase() throws Exception {
                 Matchers.eq(1.0),
                 Matchers.eq(parameters),
                 Matchers.anyBoolean(),
+                Matchers.anyBoolean(),
                 Matchers.any(UUID.class));
     }
 
@@ -210,6 +212,7 @@ public void testLogProductItem() throws Exception {
                 Matchers.anyDouble(),
                 Matchers.eq(parameters),
                 Matchers.anyBoolean(),
+                Matchers.anyBoolean(),
                 Matchers.any(UUID.class));
     }
 
@@ -227,6 +230,7 @@ public void testLogPushNotificationOpen() throws Exception {
                 Matchers.anyDouble(),
                 Matchers.eq(parameters),
                 Matchers.anyBoolean(),
+                Matchers.anyBoolean(),
                 Matchers.any(UUID.class));
     }
 
@@ -240,6 +244,7 @@ public void testSetPushNotificationsRegistrationId()  throws Exception {
                 Matchers.anyDouble(),
                 Matchers.any(Bundle.class),
                 Matchers.anyBoolean(),
+                Matchers.anyBoolean(),
                 Matchers.any(UUID.class));
         assertEquals(mockNotificationId, InternalAppEventsLogger.getPushNotificationsRegistrationId());
     }
