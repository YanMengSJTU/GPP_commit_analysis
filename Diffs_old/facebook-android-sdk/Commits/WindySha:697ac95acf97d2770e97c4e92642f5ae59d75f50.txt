diff --git a/facebook-core/src/main/java/com/facebook/appevents/AppEventsLogger.java b/facebook-core/src/main/java/com/facebook/appevents/AppEventsLogger.java
index e3c04790a..692df3299 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/AppEventsLogger.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/AppEventsLogger.java
@@ -393,7 +393,7 @@ public static void setFlushBehavior(FlushBehavior flushBehavior) {
      *                  given app should have no more than 1000 distinct event names.
      */
     public void logEvent(String eventName) {
-        logEvent(eventName, null);
+        loggerImpl.logEvent(eventName);
     }
 
     /**
@@ -433,9 +433,7 @@ public void logEvent(String eventName, double valueToSum) {
      *                   should be Strings or numeric values.
      */
     public void logEvent(String eventName, Bundle parameters) {
-        loggerImpl.logEvent(
-                eventName,
-                parameters);
+        loggerImpl.logEvent(eventName, parameters);
     }
 
     /**
@@ -460,12 +458,7 @@ public void logEvent(String eventName, Bundle parameters) {
      *                   should be Strings or numeric values.
      */
     public void logEvent(String eventName, double valueToSum, Bundle parameters) {
-        loggerImpl.logEvent(
-                eventName,
-                valueToSum,
-                parameters,
-                false,
-                ActivityLifecycleTracker.getCurrentSessionGuid());
+        loggerImpl.logEvent(eventName, valueToSum, parameters);
     }
 
     /**
@@ -478,7 +471,7 @@ public void logEvent(String eventName, double valueToSum, Bundle parameters) {
      * @param currency       Currency used to specify the amount.
      */
     public void logPurchase(BigDecimal purchaseAmount, Currency currency) {
-        logPurchase(purchaseAmount, currency, null);
+        loggerImpl.logPurchase(purchaseAmount, currency);
     }
 
     /**
diff --git a/facebook-core/src/main/java/com/facebook/appevents/AppEventsLoggerImpl.java b/facebook-core/src/main/java/com/facebook/appevents/AppEventsLoggerImpl.java
index 6072eae4d..e730829c7 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/AppEventsLoggerImpl.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/AppEventsLoggerImpl.java
@@ -301,6 +301,10 @@ static void setFlushBehavior(FlushBehavior flushBehavior) {
         }
     }
 
+    void logEvent(String eventName) {
+        logEvent(eventName, null);
+    }
+
     void logEvent(String eventName, double valueToSum) {
         logEvent(eventName, valueToSum, null);
     }
@@ -323,6 +327,11 @@ void logEvent(String eventName, double valueToSum, Bundle parameters) {
                 ActivityLifecycleTracker.getCurrentSessionGuid());
     }
 
+    void logPurchase(
+            BigDecimal purchaseAmount, Currency currency) {
+        logPurchase(purchaseAmount, currency, null);
+    }
+
     void logPurchase(
             BigDecimal purchaseAmount, Currency currency, Bundle parameters) {
         if (AutomaticAnalyticsLogger.isImplicitPurchaseLoggingEnabled()) {
@@ -332,7 +341,7 @@ void logPurchase(
         logPurchase(purchaseAmount, currency, parameters, false);
     }
 
-    void logPurchaseImplicitlyInternal(
+    void logPurchaseImplicitly(
             BigDecimal purchaseAmount, Currency currency, Bundle parameters) {
         logPurchase(purchaseAmount, currency, parameters, true);
     }
@@ -492,7 +501,7 @@ static void setPushNotificationsRegistrationId(String registrationId) {
                 AppEventsLoggerImpl logger = new AppEventsLoggerImpl(
                         FacebookSdk.getApplicationContext(), null, null);
                 // Log implicit push token event and flush logger immediately
-                logger.logEvent(AppEventsConstants.EVENT_NAME_PUSH_TOKEN_OBTAINED, null);
+                logger.logEvent(AppEventsConstants.EVENT_NAME_PUSH_TOKEN_OBTAINED);
                 if (AppEventsLoggerImpl.getFlushBehavior() !=
                         FlushBehavior.EXPLICIT_ONLY) {
                     logger.flush();
@@ -665,10 +674,28 @@ public void run() {
         );
     }
 
+    void logEventImplicitly(String eventName, Double valueToSum, Bundle parameters) {
+        logEvent(
+                eventName,
+                valueToSum,
+                parameters,
+                true,
+                ActivityLifecycleTracker.getCurrentSessionGuid());
+    }
+
     void logEventImplicitly(String eventName,
                             BigDecimal purchaseAmount,
                             Currency currency,
                             Bundle parameters) {
+        if (purchaseAmount == null || currency == null) {
+            Utility.logd(TAG, "purchaseAmount and currency cannot be null");
+            return;
+        }
+
+        if (parameters == null) {
+            parameters = new Bundle();
+        }
+        parameters.putString(AppEventsConstants.EVENT_PARAM_CURRENCY, currency.getCurrencyCode());
         logEvent(
                 eventName,
                 purchaseAmount.doubleValue(),
diff --git a/facebook-core/src/main/java/com/facebook/appevents/InternalAppEventsLogger.java b/facebook-core/src/main/java/com/facebook/appevents/InternalAppEventsLogger.java
index 02be9a7da..255e89c4c 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/InternalAppEventsLogger.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/InternalAppEventsLogger.java
@@ -53,19 +53,19 @@ public InternalAppEventsLogger(
         loggerImpl = new AppEventsLoggerImpl(activityName, applicationId, accessToken);
     }
 
-    public void logPurchaseImplicitlyInternal(
+    public void logPurchase(
             BigDecimal purchaseAmount, Currency currency, Bundle parameters) {
-        loggerImpl.logPurchaseImplicitlyInternal(
+        loggerImpl.logPurchaseImplicitly(
                 purchaseAmount,
                 currency,
                 parameters
         );
     }
 
-    public void logEventImplicitly(String eventName,
-                                   BigDecimal purchaseAmount,
-                                   Currency currency,
-                                   Bundle parameters) {
+    public void logEvent(String eventName,
+                         BigDecimal purchaseAmount,
+                         Currency currency,
+                         Bundle parameters) {
         loggerImpl.logEventImplicitly(
                 eventName,
                 purchaseAmount,
@@ -73,22 +73,20 @@ public void logEventImplicitly(String eventName,
                 parameters);
     }
 
-    public static FlushBehavior getFlushBehavior() {
-        return AppEventsLoggerImpl.getFlushBehavior();
+    public void logEvent(String eventName, Double valueToSum, Bundle parameters) {
+        loggerImpl.logEventImplicitly(eventName, valueToSum, parameters);
     }
 
-    public void flush() {
-        loggerImpl.flush();
+    public void logEvent(String eventName, Bundle parameters) {
+        loggerImpl.logEventImplicitly(eventName, null, parameters);
     }
 
-    // TODO (T41629092) remove function after migration
-    public void logEvent(String eventName, double valueToSum, Bundle parameters) {
-        loggerImpl.logEvent(eventName, valueToSum, parameters);
+    public static FlushBehavior getFlushBehavior() {
+        return AppEventsLoggerImpl.getFlushBehavior();
     }
 
-    // TODO (T41629092) remove function after migration
-    public void logEvent(String eventName, Bundle parameters) {
-        loggerImpl.logEvent(eventName, parameters);
+    public void flush() {
+        loggerImpl.flush();
     }
 
     static String getSourceApplication() {
diff --git a/facebook-core/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java b/facebook-core/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java
index d347cdf7e..c06d04605 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/internal/AutomaticAnalyticsLogger.java
@@ -99,7 +99,7 @@ public static void logPurchaseInapp(
                 getPurchaseLoggingParameters(purchase, skuDetails);
 
         if (loggingParameters != null) {
-            internalAppEventsLogger.logPurchaseImplicitlyInternal(
+            internalAppEventsLogger.logPurchase(
                     loggingParameters.purchaseAmount,
                     loggingParameters.currency,
                     loggingParameters.param);
@@ -142,7 +142,7 @@ public static void logPurchaseSubs(
                 getPurchaseLoggingParameters(purchase, skuDetails);
 
         if (loggingParameters != null) {
-            internalAppEventsLogger.logEventImplicitly(
+            internalAppEventsLogger.logEvent(
                     eventName,
                     loggingParameters.purchaseAmount,
                     loggingParameters.currency,
diff --git a/facebook-core/src/main/java/com/facebook/appevents/internal/SessionLogger.java b/facebook-core/src/main/java/com/facebook/appevents/internal/SessionLogger.java
index ef0dee600..7c480b87a 100644
--- a/facebook-core/src/main/java/com/facebook/appevents/internal/SessionLogger.java
+++ b/facebook-core/src/main/java/com/facebook/appevents/internal/SessionLogger.java
@@ -125,7 +125,7 @@ public static void logDeactivateApp(
                 null)
                 .logEvent(
                     AppEventsConstants.EVENT_NAME_DEACTIVATED_APP,
-                        (sessionLength / DateUtils.SECOND_IN_MILLIS),
+                        (double) sessionLength / DateUtils.SECOND_IN_MILLIS,
                     eventParams);
     }
 
