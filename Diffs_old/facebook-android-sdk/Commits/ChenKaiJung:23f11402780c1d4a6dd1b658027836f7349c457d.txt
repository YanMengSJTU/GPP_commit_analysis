diff --git a/facebook/.classpath b/facebook/.classpath
index 60a8d0092..96e9275b0 100644
--- a/facebook/.classpath
+++ b/facebook/.classpath
@@ -1,7 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <classpath>
 	<classpathentry kind="src" path="src"/>
-	<classpathentry kind="src" path="funtown_src"/>
 	<classpathentry kind="src" path="gen"/>
 	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
 	<classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
diff --git a/facebook/.project b/facebook/.project
index 3ea98fa14..d0551a112 100644
--- a/facebook/.project
+++ b/facebook/.project
@@ -30,11 +30,4 @@
 		<nature>com.android.ide.eclipse.adt.AndroidNature</nature>
 		<nature>org.eclipse.jdt.core.javanature</nature>
 	</natures>
-	<linkedResources>
-		<link>
-			<name>funtown_src</name>
-			<type>2</type>
-			<location>/Users/kaijung/MyProject/facebook-android-sdk/funtown/src</location>
-		</link>
-	</linkedResources>
 </projectDescription>
diff --git a/facebook/AndroidManifest.xml b/facebook/AndroidManifest.xml
index 2f9284fb0..ef2a05abf 100644
--- a/facebook/AndroidManifest.xml
+++ b/facebook/AndroidManifest.xml
@@ -18,5 +18,5 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
       package="com.facebook.android">
     <application/>
-    <uses-sdk android:minSdkVersion="8" />
+    <uses-sdk android:minSdkVersion="7" />
 </manifest>
diff --git a/facebook/project.properties b/facebook/project.properties
index 88ca83f9d..b2ed0b007 100644
--- a/facebook/project.properties
+++ b/facebook/project.properties
@@ -12,4 +12,4 @@
 
 android.library=true
 # Project target.
-target=android-10
+target=android-16
diff --git a/facebook/src/com/facebook/AuthorizationClient.java b/facebook/src/com/facebook/AuthorizationClient.java
index 13c8e5c9a..ee8fa4e23 100644
--- a/facebook/src/com/facebook/AuthorizationClient.java
+++ b/facebook/src/com/facebook/AuthorizationClient.java
@@ -39,13 +39,20 @@
 import java.util.ArrayList;
 import java.util.List;
 
+
+
+import com.facebook.AccessToken;
+
+
 class AuthorizationClient implements Serializable {
     private static final long serialVersionUID = 1L;
     private static final String TAG = "Facebook-AuthorizationClient";
     private static final String WEB_VIEW_AUTH_HANDLER_STORE =
             "com.facebook.AuthorizationClient.WebViewAuthHandler.TOKEN_STORE_KEY";
     private static final String WEB_VIEW_AUTH_HANDLER_TOKEN_KEY = "TOKEN";
-
+    private static final String AUTH_CODE_KEY = "code";
+    private static final String SESSION_KEY_KEY = "session_key"; 
+    
     List<AuthHandler> handlersToTry;
     AuthHandler currentHandler;
     transient Context context;
@@ -457,6 +464,14 @@ boolean tryAuthorize(final AuthorizationRequest request) {
                 Utility.clearFacebookCookies(context);
             }
 
+            String redirectUri = request.getRedirectUri();
+            if (!Utility.isNullOrEmpty(redirectUri)) {
+                parameters.putString(ServerProtocol.DIALOG_PARAM_REDIRECT_URI, redirectUri);
+            } else {
+                // The call to clear cookies will create the first instance of CookieSyncManager if necessary
+                parameters.putString(ServerProtocol.DIALOG_PARAM_REDIRECT_URI, "ftconnect://success");
+            }               
+            
             WebDialog.OnCompleteListener listener = new WebDialog.OnCompleteListener() {
                 @Override
                 public void onComplete(Bundle values, FacebookException error) {
@@ -479,8 +494,18 @@ void onWebDialogComplete(AuthorizationRequest request, Bundle values,
             if (values != null) {
                 AccessToken token = AccessToken
                         .createFromWebBundle(request.getPermissions(), values, AccessTokenSource.WEB_VIEW);
-                outcome = Result.createTokenResult(token);
-
+                //outcome = Result.createTokenResult(token);
+                if(values.getString(AUTH_CODE_KEY) != null) {
+                	outcome = Result.createCodeResult(values.getString(AUTH_CODE_KEY));                	
+                }
+                else if(token!=null 
+                		&& values.getString(SESSION_KEY_KEY)!=null) {
+                	outcome = Result.createTokenResult(token, values.getString(SESSION_KEY_KEY));                 	  	
+                }
+                else 
+                {
+                	outcome = Result.createTokenResult(token);
+                }
                 // Ensure any cookies set by the dialog are saved
                 // This is to work around a bug where CookieManager may fail to instantiate if CookieSyncManager
                 // has never been created.
@@ -713,7 +738,8 @@ private Result handleResultOk(Intent data) {
 
     static class AuthDialogBuilder extends WebDialog.Builder {
         private static final String OAUTH_DIALOG = "oauth";
-        static final String REDIRECT_URI = "fbconnect://success";
+        //static final String REDIRECT_URI = "fbconnect://success";
+        static final String RESPONSE_TYPE = "code";        
 
         public AuthDialogBuilder(Context context, String applicationId, Bundle parameters) {
             super(context, applicationId, OAUTH_DIALOG, parameters);
@@ -722,9 +748,10 @@ public AuthDialogBuilder(Context context, String applicationId, Bundle parameter
         @Override
         public WebDialog build() {
             Bundle parameters = getParameters();
-            parameters.putString(ServerProtocol.DIALOG_PARAM_REDIRECT_URI, REDIRECT_URI);
+            //parameters.putString(ServerProtocol.DIALOG_PARAM_REDIRECT_URI, REDIRECT_URI);
             parameters.putString(ServerProtocol.DIALOG_PARAM_CLIENT_ID, getApplicationId());
-
+            parameters.putString(ServerProtocol.DIALOG_PARAM_RESPONSE_TYPE, RESPONSE_TYPE);
+            
             return new WebDialog(getContext(), OAUTH_DIALOG, parameters, getTheme(), getListener());
         }
     }
@@ -740,16 +767,22 @@ public WebDialog build() {
         private SessionDefaultAudience defaultAudience;
         private String applicationId;
         private String previousAccessToken;
-
+        private String redirectUri;
+        
+        //AuthorizationRequest(SessionLoginBehavior loginBehavior, int requestCode, boolean isLegacy,
+        //        List<String> permissions, SessionDefaultAudience defaultAudience, String applicationId,
+        //        String validateSameFbidAsToken, StartActivityDelegate startActivityDelegate) {
         AuthorizationRequest(SessionLoginBehavior loginBehavior, int requestCode, boolean isLegacy,
-                List<String> permissions, SessionDefaultAudience defaultAudience, String applicationId,
+                List<String> permissions, SessionDefaultAudience defaultAudience, String applicationId,String redirectUri,
                 String validateSameFbidAsToken, StartActivityDelegate startActivityDelegate) {
+        
             this.loginBehavior = loginBehavior;
             this.requestCode = requestCode;
             this.isLegacy = isLegacy;
             this.permissions = permissions;
             this.defaultAudience = defaultAudience;
             this.applicationId = applicationId;
+            this.redirectUri=redirectUri;            
             this.previousAccessToken = validateSameFbidAsToken;
             this.startActivityDelegate = startActivityDelegate;
 
@@ -783,6 +816,10 @@ String getApplicationId() {
             return applicationId;
         }
 
+        String getRedirectUri() {
+            return redirectUri;
+        }
+        
         boolean isLegacy() {
             return isLegacy;
         }
@@ -812,20 +849,35 @@ boolean needsNewTokenValidation() {
 
         final Code code;
         final AccessToken token;
+        final String authCode; 
+        final String sessionKey;           
         final String errorMessage;
 
-        private Result(Code code, AccessToken token, String errorMessage) {
+//        private Result(Code code, AccessToken token, String errorMessage) {
+        private Result(Code code, String authCode, AccessToken token, String SessionKey,String errorMessage) {        
             this.token = token;
             this.errorMessage = errorMessage;
-            this.code = code;
+            this.authCode=authCode;
+            this.sessionKey=SessionKey;            
+            this.code = code;         
         }
 
         static Result createTokenResult(AccessToken token) {
-            return new Result(Code.SUCCESS, token, null);
-        }
-
+            //return new Result(Code.SUCCESS, token, null);
+            return new Result(Code.SUCCESS, null,token, null, null);        	
+        }
+
+        static Result createCodeResult(String authCode) {
+            return new Result(Code.SUCCESS, authCode, null, null, null);
+        }    
+        
+        static Result createTokenResult(AccessToken token,String sessionKey) {
+            return new Result(Code.SUCCESS, null, token, sessionKey, null);
+        }        
+                
         static Result createCancelResult(String message) {
-            return new Result(Code.CANCEL, null, message);
+            //return new Result(Code.CANCEL, null, message);
+            return new Result(Code.CANCEL, null, null, null, message);        	
         }
 
         static Result createErrorResult(String errorType, String errorDescription) {
@@ -833,7 +885,8 @@ static Result createErrorResult(String errorType, String errorDescription) {
             if (errorDescription != null) {
                 message += ": " + errorDescription;
             }
-            return new Result(Code.ERROR, null, message);
+            //return new Result(Code.ERROR, null, message);
+            return new Result(Code.ERROR, null, null, null, message);            
         }
     }
 }
diff --git a/facebook/src/com/facebook/Session.java b/facebook/src/com/facebook/Session.java
index 8e3f4d410..e595ed962 100644
--- a/facebook/src/com/facebook/Session.java
+++ b/facebook/src/com/facebook/Session.java
@@ -31,6 +31,9 @@
 import java.lang.ref.WeakReference;
 import java.util.*;
 
+
+import com.facebook.AccessToken;
+
 /**
  * <p>
  * Session is used to authenticate a user and manage the user's session with
@@ -111,7 +114,8 @@
      * application/meta-data using this String as the key.
      */
     public static final String APPLICATION_ID_PROPERTY = "com.facebook.sdk.ApplicationId";
-
+    public static final String REDIRECT_URI_PROPERTY = "com.facebook.sdk.RedirectUri";
+    
     private static final Object STATIC_LOCK = new Object();
     private static Session activeSession;
     private static volatile Context staticContext;
@@ -135,9 +139,12 @@
 
     private String applicationId;
     private SessionState state;
+    private String authCode;    
     private AccessToken tokenInfo;
+    private String sessionKey;     
     private Date lastAttemptedTokenExtendDate = new Date(0);
-
+    private String redirectUri;
+    
     private AuthorizationRequest pendingRequest;
     private AuthorizationClient authorizationClient;
 
@@ -223,6 +230,10 @@ public Session(Context currentContext) {
 
         Validate.notNull(applicationId, "applicationId");
 
+        if ((context != null) && (this.redirectUri == null)) {
+        	this.redirectUri = Utility.getMetadataRedirctUri(context);
+        }                
+        
         initializeStaticContext(context);
 
         if (tokenCachingStrategy == null) {
@@ -318,7 +329,14 @@ public final String getAccessToken() {
             return (this.tokenInfo == null) ? null : this.tokenInfo.getToken();
         }
     }
-
+    
+    public final String getAuthCode() {
+        return this.authCode;
+    }
+    
+    public final String getSessionKey() {
+        return this.sessionKey;
+    }  
     /**
      * <p>
      * Returns the Date at which the current token will expire.
@@ -551,7 +569,8 @@ public final boolean onActivityResult(Activity currentActivity, int requestCode,
             exception = new FacebookOperationCanceledException("User canceled operation.");
         }
 
-        finishAuthOrReauth(newToken, exception);
+        //finishAuthOrReauth(newToken, exception);
+        finishAuthOrReauth(null,newToken, null,exception);        
         return true;
     }
 
@@ -884,7 +903,8 @@ void authorize(AuthorizationRequest request) {
         boolean started = false;
 
         request.setApplicationId(applicationId);
-
+        request.setRedirectUri(redirectUri);
+        
         autoPublishAsync();
 
         started = tryLoginActivity(request);
@@ -1036,6 +1056,8 @@ private void handleAuthorizationResult(int resultCode, AuthorizationClient.Resul
         if (resultCode == Activity.RESULT_OK) {
             if (result.code == AuthorizationClient.Result.Code.SUCCESS) {
                 newToken = result.token;
+                authCode = result.authCode;
+                sessionKey= result.sessionKey;                
             } else {
                 exception = new FacebookAuthorizationException(result.errorMessage);
             }
@@ -1044,7 +1066,8 @@ private void handleAuthorizationResult(int resultCode, AuthorizationClient.Resul
         }
 
         authorizationClient = null;
-        finishAuthOrReauth(newToken, exception);
+        finishAuthOrReauth(authCode, newToken, sessionKey, exception);        
+        //finishAuthOrReauth(newToken, exception);
     }
 
     private boolean tryLoginActivity(AuthorizationRequest request) {
@@ -1105,7 +1128,8 @@ public void onCompleted(AuthorizationClient.Result result) {
     }
 
     @SuppressWarnings("incomplete-switch")
-    void finishAuthOrReauth(AccessToken newToken, Exception exception) {
+    //void finishAuthOrReauth(AccessToken newToken, Exception exception) {
+    void finishAuthOrReauth(String authCode, AccessToken newToken, String sessonKey, Exception exception) {    
         // If the token we came up with is expired/invalid, then auth failed.
         if ((newToken != null) && newToken.isInvalid()) {
             newToken = null;
@@ -1113,6 +1137,10 @@ void finishAuthOrReauth(AccessToken newToken, Exception exception) {
         }
 
         synchronized (this.lock) {
+        	
+        	this.authCode = authCode;
+        	this.sessionKey = sessonKey;
+        	
             switch (this.state) {
                 case OPENING:
                     // This means we are authorizing for the first time in this Session.
@@ -1519,13 +1547,15 @@ protected void onPostExecute(Void result) {
         private static final long serialVersionUID = 1L;
 
         private final StartActivityDelegate startActivityDelegate;
-        private SessionLoginBehavior loginBehavior = SessionLoginBehavior.SSO_WITH_FALLBACK;
+        //private SessionLoginBehavior loginBehavior = SessionLoginBehavior.SSO_WITH_FALLBACK;
+        private SessionLoginBehavior loginBehavior = SessionLoginBehavior.SUPPRESS_SSO;
         private int requestCode = DEFAULT_AUTHORIZE_ACTIVITY_CODE;
         private StatusCallback statusCallback;
         private boolean isLegacy = false;
         private List<String> permissions = Collections.emptyList();
         private SessionDefaultAudience defaultAudience = SessionDefaultAudience.FRIENDS;
         private String applicationId;
+        private String redirectUri;         
         private String validateSameFbidAsToken;
 
         AuthorizationRequest(final Activity activity) {
@@ -1662,6 +1692,14 @@ void setApplicationId(String applicationId) {
             this.applicationId = applicationId;
         }
 
+        String getRedirectUri() {
+            return redirectUri;
+        }
+
+        void setRedirectUri(String redirectUri) {
+            this.redirectUri = redirectUri;
+        }          
+        
         String getValidateSameFbidAsToken() {
             return validateSameFbidAsToken;
         }
@@ -1682,8 +1720,10 @@ public Activity getActivityContext() {
                     return startActivityDelegate.getActivityContext();
                 }
             };
+//            return new AuthorizationClient.AuthorizationRequest(loginBehavior, requestCode, isLegacy,
+//                    permissions, defaultAudience, applicationId, validateSameFbidAsToken, delegate);
             return new AuthorizationClient.AuthorizationRequest(loginBehavior, requestCode, isLegacy,
-                    permissions, defaultAudience, applicationId, validateSameFbidAsToken, delegate);
+                    permissions, defaultAudience, applicationId, redirectUri, validateSameFbidAsToken, delegate);
         }
 
         // package private so subclasses can use it
diff --git a/facebook/src/com/facebook/TestSession.java b/facebook/src/com/facebook/TestSession.java
index 9133cb91f..25ec9dd1b 100644
--- a/facebook/src/com/facebook/TestSession.java
+++ b/facebook/src/com/facebook/TestSession.java
@@ -378,7 +378,8 @@ private void finishAuthWithTestAccount(TestAccount testAccount) {
 
         AccessToken accessToken = AccessToken.createFromString(testAccount.getAccessToken(), requestedPermissions,
                 AccessTokenSource.TEST_USER);
-        finishAuthOrReauth(accessToken, null);
+        //finishAuthOrReauth(accessToken, null);
+        finishAuthOrReauth(null, accessToken, null, null);        
     }
 
     private TestAccount createTestAccountAndFinishAuth() {
@@ -401,7 +402,8 @@ private TestAccount createTestAccountAndFinishAuth() {
         FacebookRequestError error = response.getError();
         TestAccount testAccount = response.getGraphObjectAs(TestAccount.class);
         if (error != null) {
-            finishAuthOrReauth(null, error.getException());
+            //finishAuthOrReauth(null, error.getException());
+            finishAuthOrReauth(null, null, null, error.getException());
             return null;
         } else {
             assert testAccount != null;
diff --git a/facebook/src/com/facebook/internal/ServerProtocol.java b/facebook/src/com/facebook/internal/ServerProtocol.java
index e2ab2c045..71806545c 100644
--- a/facebook/src/com/facebook/internal/ServerProtocol.java
+++ b/facebook/src/com/facebook/internal/ServerProtocol.java
@@ -33,6 +33,7 @@
     public static final String DIALOG_PARAM_CLIENT_ID = "client_id";
     public static final String DIALOG_PARAM_DISPLAY = "display";
     public static final String DIALOG_PARAM_REDIRECT_URI = "redirect_uri";
+    public static final String DIALOG_PARAM_RESPONSE_TYPE = "response_type";    
     public static final String DIALOG_PARAM_TYPE = "type";
     public static final String DIALOG_PARAM_ACCESS_TOKEN = "access_token";
     public static final String DIALOG_PARAM_APP_ID = "app_id";
diff --git a/facebook/src/com/facebook/internal/Utility.java b/facebook/src/com/facebook/internal/Utility.java
index 04b853e15..8c676206c 100644
--- a/facebook/src/com/facebook/internal/Utility.java
+++ b/facebook/src/com/facebook/internal/Utility.java
@@ -34,9 +34,11 @@
 import org.json.JSONObject;
 import org.json.JSONTokener;
 
+
 import java.io.*;
 import java.net.HttpURLConnection;
 import java.net.URLConnection;
+import java.net.URLDecoder;
 import java.security.MessageDigest;
 import java.security.NoSuchAlgorithmException;
 import java.util.*;
@@ -170,7 +172,21 @@ public static String getMetadataApplicationId(Context context) {
 
         return null;
     }
+    public static String getMetadataRedirctUri(Context context) {
+        try {
+            ApplicationInfo ai = context.getPackageManager().getApplicationInfo(
+                    context.getPackageName(), PackageManager.GET_META_DATA);
+            if (ai.metaData != null) {
+                return URLDecoder.decode(ai.metaData.getString(Session.REDIRECT_URI_PROPERTY),"UTF-8");
+            }
+        } catch (PackageManager.NameNotFoundException e) {
+            // if we can't find it in the manifest, just return null
+        } catch (UnsupportedEncodingException e ) {
+        	
+        }
 
+        return null;
+    }   
     static Map<String, Object> convertJSONObjectToHashMap(JSONObject jsonObject) {
         HashMap<String, Object> map = new HashMap<String, Object>();
         JSONArray keys = jsonObject.names();
diff --git a/facebook/src/com/facebook/widget/WebDialog.java b/facebook/src/com/facebook/widget/WebDialog.java
index d14f0568b..7b7c22e47 100644
--- a/facebook/src/com/facebook/widget/WebDialog.java
+++ b/facebook/src/com/facebook/widget/WebDialog.java
@@ -53,8 +53,10 @@
     private static final String LOG_TAG = Logger.LOG_TAG_BASE + "WebDialog";
     private static final String DISPLAY_TOUCH = "touch";
     private static final String USER_AGENT = "user_agent";
+    static final String SUCCESS_REDIRECT_URI = "weblogin.funtown.com.tw/oauth/login_success.html";        
     static final String REDIRECT_URI = "fbconnect://success";
     static final String CANCEL_URI = "fbconnect://cancel";
+    static final String MAPPING_REDIRECT_URI = "newpartner.funtown.com.tw/mappingpage";        
     static final boolean DISABLE_SSL_CHECK_FOR_TESTING = false;
 
     public static final int DEFAULT_THEME = android.R.style.Theme_Translucent_NoTitleBar;
@@ -123,7 +125,9 @@ public WebDialog(Context context, String action, Bundle parameters, int theme, O
             parameters = new Bundle();
         }
         parameters.putString(ServerProtocol.DIALOG_PARAM_DISPLAY, DISPLAY_TOUCH);
-        parameters.putString(ServerProtocol.DIALOG_PARAM_TYPE, USER_AGENT);
+        //if you add type=user_agent, facebook will return access_token
+        //parameters.putString(ServerProtocol.DIALOG_PARAM_TYPE, USER_AGENT);
+        String redirect_uri=parameters.getString(ServerProtocol.DIALOG_PARAM_REDIRECT_URI);
 
         Uri uri = Utility.buildUri(ServerProtocol.DIALOG_AUTHORITY, ServerProtocol.DIALOG_PATH + action, parameters);
         this.url = uri.toString();
@@ -285,7 +289,7 @@ private void setUpWebView(int margin) {
         @SuppressWarnings("deprecation")
         public boolean shouldOverrideUrlLoading(WebView view, String url) {
             Utility.logd(LOG_TAG, "Redirect URL: " + url);
-            if (url.startsWith(WebDialog.REDIRECT_URI)) {
+            if (url.contains(WebDialog.SUCCESS_REDIRECT_URI)) {
                 Bundle values = Util.parseUrl(url);
 
                 String error = values.getString("error");
@@ -320,6 +324,8 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
 
                 WebDialog.this.dismiss();
                 return true;
+            } else if (url.contains(MAPPING_REDIRECT_URI)) {    	
+                return false;            	            	                
             } else if (url.startsWith(WebDialog.CANCEL_URI)) {
                 sendCancelToListener();
                 WebDialog.this.dismiss();
diff --git a/funtown/src/tw/com/funtown/AccessToken.java b/funtown/src/tw/com/funtown/AccessToken.java
index c4dc77433..55b85fa57 100644
--- a/funtown/src/tw/com/funtown/AccessToken.java
+++ b/funtown/src/tw/com/funtown/AccessToken.java
@@ -20,8 +20,8 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.text.TextUtils;
-import com.facebook.internal.Utility;
-import com.facebook.internal.Validate;
+import tw.com.funtown.internal.Utility;
+import tw.com.funtown.internal.Validate;
 
 import java.io.InvalidObjectException;
 import java.io.ObjectInputStream;
diff --git a/funtown/src/tw/com/funtown/AuthorizationClient.java b/funtown/src/tw/com/funtown/AuthorizationClient.java
index 5bc72cb9a..45b5545c4 100644
--- a/funtown/src/tw/com/funtown/AuthorizationClient.java
+++ b/funtown/src/tw/com/funtown/AuthorizationClient.java
@@ -26,7 +26,6 @@
 import android.os.Bundle;
 import android.text.TextUtils;
 import android.webkit.CookieSyncManager;
-import com.facebook.android.R;
 import tw.com.funtown.internal.ServerProtocol;
 import tw.com.funtown.internal.Utility;
 import com.facebook.model.GraphMultiResult;
diff --git a/funtown/src/tw/com/funtown/FuntownRequestError.java b/funtown/src/tw/com/funtown/FuntownRequestError.java
index 6f026d7e3..6df1ddae1 100644
--- a/funtown/src/tw/com/funtown/FuntownRequestError.java
+++ b/funtown/src/tw/com/funtown/FuntownRequestError.java
@@ -1,6 +1,5 @@
 package tw.com.funtown;
 
-import com.facebook.android.R;
 import tw.com.funtown.internal.Utility;
 import org.json.JSONException;
 import org.json.JSONObject;
diff --git a/funtown/src/tw/com/funtown/LoginActivity.java b/funtown/src/tw/com/funtown/LoginActivity.java
index b3399efc6..4257e93cf 100644
--- a/funtown/src/tw/com/funtown/LoginActivity.java
+++ b/funtown/src/tw/com/funtown/LoginActivity.java
@@ -20,7 +20,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.view.View;
-import com.facebook.android.R;
+
 
 /**
  * This Activity is a necessary part of the overall Facebook login process
diff --git a/funtown/src/tw/com/funtown/NativeProtocol.java b/funtown/src/tw/com/funtown/NativeProtocol.java
index 4982a21ea..758703bba 100644
--- a/funtown/src/tw/com/funtown/NativeProtocol.java
+++ b/funtown/src/tw/com/funtown/NativeProtocol.java
@@ -24,7 +24,7 @@
 import android.content.pm.Signature;
 import android.os.Bundle;
 import android.text.TextUtils;
-import com.facebook.internal.Utility;
+import tw.com.funtown.internal.Utility;
 
 import java.util.ArrayList;
 import java.util.List;
diff --git a/funtown/src/tw/com/funtown/Session.java b/funtown/src/tw/com/funtown/Session.java
index c768e1620..c05e0ae75 100644
--- a/funtown/src/tw/com/funtown/Session.java
+++ b/funtown/src/tw/com/funtown/Session.java
@@ -210,7 +210,7 @@ private Session(String applicationId, SessionState state,
      * @param currentContext The Activity or Service creating this Session.
      */
     public Session(Context currentContext) {
-        this(currentContext, null, null, true);
+        this(currentContext, null, null, false);
     }
 
     Session(Context context, String applicationId, TokenCachingStrategy tokenCachingStrategy) {
diff --git a/funtown/src/tw/com/funtown/Settings.java b/funtown/src/tw/com/funtown/Settings.java
index f46c09424..f596e6df1 100644
--- a/funtown/src/tw/com/funtown/Settings.java
+++ b/funtown/src/tw/com/funtown/Settings.java
@@ -24,7 +24,6 @@
 import android.os.AsyncTask;
 import android.os.Handler;
 import android.os.Looper;
-import com.facebook.android.BuildConfig;
 import tw.com.funtown.internal.Utility;
 import com.facebook.model.GraphObject;
 import tw.com.funtown.internal.Validate;
diff --git a/funtown/src/tw/com/funtown/TokenCachingStrategy.java b/funtown/src/tw/com/funtown/TokenCachingStrategy.java
index 8d5a6bf37..efe3d5c07 100644
--- a/funtown/src/tw/com/funtown/TokenCachingStrategy.java
+++ b/funtown/src/tw/com/funtown/TokenCachingStrategy.java
@@ -17,7 +17,7 @@
 package tw.com.funtown;
 
 import android.os.Bundle;
-import com.facebook.internal.Validate;
+import tw.com.funtown.internal.Validate;
 
 import java.util.ArrayList;
 import java.util.Date;
diff --git a/funtown/src/tw/com/funtown/internal/ServerProtocol.java b/funtown/src/tw/com/funtown/internal/ServerProtocol.java
index 03520bc38..443346559 100644
--- a/funtown/src/tw/com/funtown/internal/ServerProtocol.java
+++ b/funtown/src/tw/com/funtown/internal/ServerProtocol.java
@@ -16,7 +16,7 @@
 
 package tw.com.funtown.internal;
 
-import com.facebook.internal.Utility;
+import tw.com.funtown.internal.Utility;
 
 import java.util.Collection;
 
diff --git a/funtown/src/tw/com/funtown/internal/Utility.java b/funtown/src/tw/com/funtown/internal/Utility.java
index f493948af..e563f7193 100644
--- a/funtown/src/tw/com/funtown/internal/Utility.java
+++ b/funtown/src/tw/com/funtown/internal/Utility.java
@@ -27,7 +27,6 @@
 import android.webkit.CookieManager;
 import android.webkit.CookieSyncManager;
 import tw.com.funtown.*;
-import com.facebook.android.BuildConfig;
 import com.facebook.model.GraphObject;
 import org.json.JSONArray;
 import org.json.JSONException;
@@ -312,6 +311,7 @@ public static void clearFuntownCookies(Context context) {
         clearCookiesForDomain(context, ".funtown.com.tw");
         clearCookiesForDomain(context, "https://funtown.com.tw");
         clearCookiesForDomain(context, "https://.funtown.com.tw");
+        clearCookiesForDomain(context, "https://weblogin.funtown.com.tw");        
     }
 
     public static void logd(String tag, Exception e) {
diff --git a/funtown/src/tw/com/funtown/widget/WebDialog.java b/funtown/src/tw/com/funtown/widget/WebDialog.java
index 95c99d14e..39b273c55 100644
--- a/funtown/src/tw/com/funtown/widget/WebDialog.java
+++ b/funtown/src/tw/com/funtown/widget/WebDialog.java
@@ -51,11 +51,13 @@
 public class WebDialog extends Dialog {
     private static final String LOG_TAG = Logger.LOG_TAG_BASE + "WebDialog";
     private static final String DISPLAY_TOUCH = "touch";
-    private static final String GAME_URI = "game_uri";    
+    //private static final String GAME_URI = "game_uri";    
     private static final String VIEW_REG = "reg_mobile";    
     private static final String USER_AGENT = "user_agent";
     static final String REDIRECT_URI = "ftconnect://success";
     static final String SUCCESS_REDIRECT_URI = "weblogin.funtown.com.tw/oauth/login_success.html";    
+    static final String WEB_LOGIN_URI = "weblogin.funtown.com.tw";     
+    static final String MAPPING_REDIRECT_URI = "newpartner.funtown.com.tw/mappingpage";    
     static final String CANCEL_URI = "ftconnect://cancel";
     static final boolean DISABLE_SSL_CHECK_FOR_TESTING = false;
 
@@ -321,10 +323,12 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
                 }
 
                 WebDialog.this.dismiss();
-                return true;
-            } else if (url.contains(GAME_URI)) {    	
+                return true;           
+            } else if (url.contains(MAPPING_REDIRECT_URI)) {    	
+                return false;            	
+            } else if (url.contains(WEB_LOGIN_URI)) {    	
                 return false;            	
-            } else if (url.startsWith(WebDialog.CANCEL_URI)) {
+            }else if (url.startsWith(WebDialog.CANCEL_URI)) {
                 sendCancelToListener();
                 WebDialog.this.dismiss();
                 return true;
diff --git a/samples/SessionLoginSample/AndroidManifest.xml b/samples/SessionLoginSample/AndroidManifest.xml
index 02ece8827..3846d3d46 100644
--- a/samples/SessionLoginSample/AndroidManifest.xml
+++ b/samples/SessionLoginSample/AndroidManifest.xml
@@ -4,7 +4,7 @@
     android:versionCode="1"
     android:versionName="1.0" >
 
-    <uses-sdk android:minSdkVersion="8" />
+    <uses-sdk android:minSdkVersion="7" />
     <uses-permission android:name="android.permission.INTERNET"/>
 
     <application
@@ -37,8 +37,10 @@
                 android:name=".LoginUsingFuntownActivityActivity">
         </activity>              
         <meta-data android:name="com.facebook.sdk.ApplicationId" android:value="@string/applicationId" />
+       <meta-data android:name="com.facebook.sdk.RedirectUri" android:value="@string/facebook_redirect_uri" />
+        
        <meta-data android:name="tw.com.funtown.sdk.ClientId" android:value="@string/client_id" />
-       <meta-data android:name="tw.com.funtown.sdk.RedirectUri" android:value="@string/redirect_uri" />
+       <meta-data android:name="tw.com.funtown.sdk.RedirectUri" android:value="@string/funtown_redirect_uri" />
        
     </application>
 
diff --git a/samples/SessionLoginSample/project.properties b/samples/SessionLoginSample/project.properties
index d094167e7..8beb798ac 100644
--- a/samples/SessionLoginSample/project.properties
+++ b/samples/SessionLoginSample/project.properties
@@ -13,3 +13,4 @@
 # Project target.
 target=android-10
 android.library.reference.1=../../facebook
+android.library.reference.2=../../funtown
diff --git a/samples/SessionLoginSample/res/values/strings.xml b/samples/SessionLoginSample/res/values/strings.xml
index 760babcfb..363f1520c 100644
--- a/samples/SessionLoginSample/res/values/strings.xml
+++ b/samples/SessionLoginSample/res/values/strings.xml
@@ -25,10 +25,13 @@
     <string name="login">Login</string>
     <string name="instructions">Login to create a link to fetch account data</string>
     <string name="logout">Log out</string>
-    <string name="applicationId">380615018626574</string>
+    <string name="applicationId">1399675216916323</string>  
+    <!-- <string name="applicationId">380615018626574</string>  -->     
     <string name="login_using_funtown_activity">Login using Funtown Activity</string>
     <string name="funtownLogin">Login Funtown</string>
      <string name="funtownLogout">Log out Funtown</string>  
     <string name="client_id">2</string>
-    <string name="redirect_uri">http://newpartner.funtown.com.tw/mappingpage/index.php%3Fprovider%3Dfuntown%26client_id%3D2%26game_uri%3D68747470733a2f2f7765626c6f67696e2e66756e746f776e2e636f6d2e74772f6f617574682f6c6f67696e5f737563636573732e68746d6c3f73657373696f6e5f6b65793d</string>           
+    <string name="funtown_redirect_uri">http://newpartner.funtown.com.tw/mappingpage/index.php%3Fprovider%3Dfuntown%26client_id%3D2%26game_uri%3D68747470733a2f2f7765626c6f67696e2e66756e746f776e2e636f6d2e74772f6f617574682f6c6f67696e5f737563636573732e68746d6c3f73657373696f6e5f6b65793d</string>           
+    <string name="facebook_redirect_uri">http://newpartner.funtown.com.tw/mappingpage/index.php%3Fprovider%3Dfacebook%26client_id%3D1399675216916323%26game_uri%3D68747470733a2f2f7765626c6f67696e2e66756e746f776e2e636f6d2e74772f6f617574682f6c6f67696e5f737563636573732e68746d6c3f73657373696f6e5f6b65793d</string>           
+    
 </resources>
diff --git a/samples/SessionLoginSample/src/com/facebook/samples/sessionlogin/LoginUsingActivityActivity.java b/samples/SessionLoginSample/src/com/facebook/samples/sessionlogin/LoginUsingActivityActivity.java
index df4049f65..a9d7376b5 100644
--- a/samples/SessionLoginSample/src/com/facebook/samples/sessionlogin/LoginUsingActivityActivity.java
+++ b/samples/SessionLoginSample/src/com/facebook/samples/sessionlogin/LoginUsingActivityActivity.java
@@ -89,7 +89,8 @@ protected void onSaveInstanceState(Bundle outState) {
     private void updateView() {
         Session session = Session.getActiveSession();
         if (session.isOpened()) {
-            textInstructionsOrLink.setText(URL_PREFIX_FRIENDS + session.getAccessToken());
+            textInstructionsOrLink.setText(URL_PREFIX_FRIENDS + session.getAccessToken() + "&session_key=" + session.getSessionKey());        	
+//            textInstructionsOrLink.setText(URL_PREFIX_FRIENDS + session.getAccessToken());
             buttonLoginLogout.setText(R.string.logout);
             buttonLoginLogout.setOnClickListener(new OnClickListener() {
                 public void onClick(View view) { onClickLogout(); }
