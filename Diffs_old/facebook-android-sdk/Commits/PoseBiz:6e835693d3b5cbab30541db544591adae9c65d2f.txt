diff --git a/.arcconfig b/.arcconfig
new file mode 100644
index 000000000..72b0ebff7
--- /dev/null
+++ b/.arcconfig
@@ -0,0 +1,5 @@
+{
+  "project_id" : "facebook-android-sdk",
+  "conduit_uri" : "https://phabricator.fb.com/api/",
+  "copyright_holder" : "Facebook"
+}
diff --git a/.gitignore b/.gitignore
index 47acd648f..afd03db53 100644
--- a/.gitignore
+++ b/.gitignore
@@ -5,11 +5,15 @@
 *.classpath
 *.project
 *.settings
+facebook/local.properties
 facebook/bin/
 facebook/gen/
+examples/Hackbook/bin/
+examples/Hackbook/gen/
+examples/Hackbook/local.properties
 examples/stream/bin/
 examples/simple/bin/
 examples/stream/gen/
 examples/simple/gen/
 tests/bin
-tests/gen
\ No newline at end of file
+tests/gen
diff --git a/README.md b/README.md
index fcfc937a5..3a9fc9cd5 100644
--- a/README.md
+++ b/README.md
@@ -16,6 +16,15 @@ This library includes three sample applications to guide you in development.
 
 * __Hackbook__: This includes Single Sign On implementation (SSO), sample API calls, and advanced features like Get new Permissions, Run sample FQL Query and Graph API Explorer. Check out [Hackbook for Android](https://developers.facebook.com/docs/mobile/android/hackbook/)
 
+Developer Terms
+===============
+* By enabling Facebook integrations, including through this SDK, you can share information with Facebook, including information about peopleâ€™s use of your app. Facebook will use information received in accordance with our Data Use Policy [https://www.facebook.com/about/privacy/], including to provide you with insights about the effectiveness of your ads and the use of your app.  These integrations also enable us and our partners to serve ads on and off Facebook.
+
+* You may limit your sharing of information with us by updating the Insights control in the developer tool [https://developers.facebook.com/apps/YOUR_APP_ID/advanced].
+
+* If you use a Facebook integration, including to share information with us, you agree and confirm that you have provided appropriate and sufficiently prominent notice to and obtained the appropriate consent from your users regarding such collection, use, and disclosure (including, at a minimum, through your privacy policy). You further agree that you will not share information with us about children under the age of 13.
+
+* You agree to comply with all applicable laws and regulations and also agree to our Terms <https://www.facebook.com/policies/>, including our Platform Policies <https://developers.facebook.com/policy/>.and Advertising Guidelines, as applicable <https://www.facebook.com/ad_guidelines.php>.
 
 Report Issues/Bugs
 ===============
diff --git a/examples/Hackbook/AndroidManifest.xml b/examples/Hackbook/AndroidManifest.xml
index afd4c5307..bc3ea853b 100644
--- a/examples/Hackbook/AndroidManifest.xml
+++ b/examples/Hackbook/AndroidManifest.xml
@@ -21,8 +21,7 @@
         </activity>
         <activity android:name=".Hackbook"
             android:label="@string/app_name"
-            android:configChanges="keyboardHidden"
-            android:screenOrientation="portrait">
+            android:configChanges="keyboardHidden|orientation">
         </activity>
         <activity
             android:name=".GraphExplorer"
@@ -45,5 +44,5 @@
     <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
     <uses-permission android:name="android.permission.MANAGE_ACCOUNTS" />
-    <uses-sdk android:minSdkVersion="3" />
+    <uses-sdk android:minSdkVersion="8" />
 </manifest>
diff --git a/examples/Hackbook/build.xml b/examples/Hackbook/build.xml
new file mode 100644
index 000000000..6c4e58004
--- /dev/null
+++ b/examples/Hackbook/build.xml
@@ -0,0 +1,83 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project name="Hackbook" default="help">
+
+    <!-- The local.properties file is created and updated by the 'android' tool.
+         It contains the path to the SDK. It should *NOT* be checked into
+         Version Control Systems. -->
+    <property file="local.properties" />
+
+    <!-- The ant.properties file can be created by you. It is only edited by the
+         'android' tool to add properties to it.
+         This is the place to change some Ant specific build properties.
+         Here are some properties you may want to change/update:
+
+         source.dir
+             The name of the source directory. Default is 'src'.
+         out.dir
+             The name of the output directory. Default is 'bin'.
+
+         For other overridable properties, look at the beginning of the rules
+         files in the SDK, at tools/ant/build.xml
+
+         Properties related to the SDK location or the project target should
+         be updated using the 'android' tool with the 'update' action.
+
+         This file is an integral part of the build system for your
+         application and should be checked into Version Control Systems.
+
+         -->
+    <property file="ant.properties" />
+
+    <!-- The project.properties file is created and updated by the 'android'
+         tool, as well as ADT.
+
+         This contains project specific properties such as project target, and library
+         dependencies. Lower level build properties are stored in ant.properties
+         (or in .classpath for Eclipse projects).
+
+         This file is an integral part of the build system for your
+         application and should be checked into Version Control Systems. -->
+    <loadproperties srcFile="project.properties" />
+
+    <!-- quick check on sdk.dir -->
+    <fail
+            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through an env var"
+            unless="sdk.dir"
+    />
+
+    <!--
+        Import per project custom build rules if present at the root of the project.
+        This is the place to put custom intermediary targets such as:
+            -pre-build
+            -pre-compile
+            -post-compile (This is typically used for code obfuscation.
+                           Compiled code location: ${out.classes.absolute.dir}
+                           If this is not done in place, override ${out.dex.input.absolute.dir})
+            -post-package
+            -post-build
+            -pre-clean
+    -->
+    <import file="custom_rules.xml" optional="true" />
+
+    <!-- Import the actual build file.
+
+         To customize existing targets, there are two options:
+         - Customize only one target:
+             - copy/paste the target into this file, *before* the
+               <import> task.
+             - customize it to your needs.
+         - Customize the whole content of build.xml
+             - copy/paste the content of the rules files (minus the top node)
+               into this file, replacing the <import> task.
+             - customize to your needs.
+
+         ***********************
+         ****** IMPORTANT ******
+         ***********************
+         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,
+         in order to avoid having your file be overridden by tools such as "android update project"
+    -->
+    <!-- version-tag: 1 -->
+    <import file="${sdk.dir}/tools/ant/build.xml" />
+
+</project>
diff --git a/examples/Hackbook/default.properties b/examples/Hackbook/default.properties
index 6805fb9fe..74d10005d 100644
--- a/examples/Hackbook/default.properties
+++ b/examples/Hackbook/default.properties
@@ -11,4 +11,4 @@
 split.density=false
 # Project target.
 target=android-8
-android.library.reference.1=../../../newdialog/facebook-android-sdk/facebook
+android.library.reference.1=../../facebook
diff --git a/examples/Hackbook/proguard-project.txt b/examples/Hackbook/proguard-project.txt
new file mode 100644
index 000000000..f2fe1559a
--- /dev/null
+++ b/examples/Hackbook/proguard-project.txt
@@ -0,0 +1,20 @@
+# To enable ProGuard in your project, edit project.properties
+# to define the proguard.config property as described in that file.
+#
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in ${sdk.dir}/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the ProGuard
+# include property in project.properties.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/examples/Hackbook/project.properties b/examples/Hackbook/project.properties
new file mode 100644
index 000000000..1998897e5
--- /dev/null
+++ b/examples/Hackbook/project.properties
@@ -0,0 +1,17 @@
+# This file is automatically generated by Android Tools.
+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
+#
+# This file must be checked in Version Control Systems.
+#
+# To customize properties used by the Ant build system edit
+# "ant.properties", and override values to adapt the script to your
+# project structure.
+#
+# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):
+#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
+
+# Indicates whether an apk should be generated for each density.
+split.density=false
+android.library.reference.1=../../facebook
+# Project target.
+target=android-8
diff --git a/examples/Hackbook/res/layout/main.xml b/examples/Hackbook/res/layout-land/main.xml
similarity index 100%
rename from examples/Hackbook/res/layout/main.xml
rename to examples/Hackbook/res/layout-land/main.xml
diff --git a/examples/Hackbook/res/layout-port/main.xml b/examples/Hackbook/res/layout-port/main.xml
new file mode 100644
index 000000000..2dc8e244a
--- /dev/null
+++ b/examples/Hackbook/res/layout-port/main.xml
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:gravity="center_horizontal">
+    <RelativeLayout
+        android:layout_width="fill_parent"
+        android:padding="6dip"
+        android:layout_height="?android:attr/listPreferredItemHeight">
+        <ImageView
+            android:id="@+id/user_pic"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_alignParentTop="true"
+            android:layout_alignParentBottom="true"
+            android:layout_marginRight="6dip" />
+        <TextView
+            android:id="@+id/txt"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_toRightOf="@id/user_pic" />
+        <com.facebook.android.LoginButton
+            android:id="@+id/login"
+            android:src="@drawable/login_button"
+            android:layout_toRightOf="@id/user_pic"
+            android:layout_below="@id/txt"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content" />
+    </RelativeLayout>
+    <View
+         android:layout_width="fill_parent"
+         android:layout_height="1dip"
+         android:background="@color/grey" />
+    <ListView
+        android:id="@+id/main_list"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content" />
+    <View
+        android:layout_width="fill_parent"
+        android:layout_height="1dip"
+        android:background="@color/grey" />
+</LinearLayout>
diff --git a/examples/Hackbook/src/com/facebook/android/SessionStore.java b/examples/Hackbook/src/com/facebook/android/SessionStore.java
index 1b97a53a6..db2438b01 100644
--- a/examples/Hackbook/src/com/facebook/android/SessionStore.java
+++ b/examples/Hackbook/src/com/facebook/android/SessionStore.java
@@ -24,17 +24,18 @@
 
     private static final String TOKEN = "access_token";
     private static final String EXPIRES = "expires_in";
+    private static final String LAST_UPDATE = "last_update";
     private static final String KEY = "facebook-session";
 
     /*
      * Save the access token and expiry date so you don't have to fetch it each
      * time
      */
-
     public static boolean save(Facebook session, Context context) {
         Editor editor = context.getSharedPreferences(KEY, Context.MODE_PRIVATE).edit();
         editor.putString(TOKEN, session.getAccessToken());
         editor.putLong(EXPIRES, session.getAccessExpires());
+        editor.putLong(LAST_UPDATE, session.getLastAccessUpdate());
         return editor.commit();
     }
 
@@ -43,8 +44,10 @@ public static boolean save(Facebook session, Context context) {
      */
     public static boolean restore(Facebook session, Context context) {
         SharedPreferences savedSession = context.getSharedPreferences(KEY, Context.MODE_PRIVATE);
-        session.setAccessToken(savedSession.getString(TOKEN, null));
-        session.setAccessExpires(savedSession.getLong(EXPIRES, 0));
+        session.setTokenFromCache(
+                savedSession.getString(TOKEN, null),
+                savedSession.getLong(EXPIRES, 0),
+                savedSession.getLong(LAST_UPDATE, 0));
         return session.isSessionValid();
     }
 
diff --git a/facebook/build.xml b/facebook/build.xml
index 645e788c0..d85ad3e64 100644
--- a/facebook/build.xml
+++ b/facebook/build.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<project name="Facebook" default="help">
+<project name="facebook" default="help">
 
     <!-- The local.properties file is created and updated by the 'android' tool.
          It contains the path to the SDK. It should *NOT* be checked into
@@ -45,21 +45,19 @@
             unless="sdk.dir"
     />
 
-
-<!-- extension targets. Uncomment the ones where you want to do custom work
-     in between standard targets -->
-<!--
-    <target name="-pre-build">
-    </target>
-    <target name="-pre-compile">
-    </target>
-
-    /* This is typically used for code obfuscation.
-       Compiled code location: ${out.classes.absolute.dir}
-       If this is not done in place, override ${out.dex.input.absolute.dir} */
-    <target name="-post-compile">
-    </target>
--->
+    <!--
+        Import per project custom build rules if present at the root of the project.
+        This is the place to put custom intermediary targets such as:
+            -pre-build
+            -pre-compile
+            -post-compile (This is typically used for code obfuscation.
+                           Compiled code location: ${out.classes.absolute.dir}
+                           If this is not done in place, override ${out.dex.input.absolute.dir})
+            -post-package
+            -post-build
+            -pre-clean
+    -->
+    <import file="custom_rules.xml" optional="true" />
 
     <!-- Import the actual build file.
 
diff --git a/facebook/proguard-project.txt b/facebook/proguard-project.txt
new file mode 100644
index 000000000..f2fe1559a
--- /dev/null
+++ b/facebook/proguard-project.txt
@@ -0,0 +1,20 @@
+# To enable ProGuard in your project, edit project.properties
+# to define the proguard.config property as described in that file.
+#
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in ${sdk.dir}/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the ProGuard
+# include property in project.properties.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/facebook/src/com/facebook/android/Facebook.java b/facebook/src/com/facebook/android/Facebook.java
index aa92877dd..509f20bcf 100644
--- a/facebook/src/com/facebook/android/Facebook.java
+++ b/facebook/src/com/facebook/android/Facebook.java
@@ -24,14 +24,19 @@
 import android.app.Activity;
 import android.content.ActivityNotFoundException;
 import android.content.ComponentName;
+import android.content.ContentResolver;
 import android.content.Context;
 import android.content.Intent;
 import android.content.ServiceConnection;
+import android.content.SharedPreferences;
 import android.content.pm.PackageInfo;
 import android.content.pm.PackageManager;
 import android.content.pm.PackageManager.NameNotFoundException;
 import android.content.pm.ResolveInfo;
 import android.content.pm.Signature;
+import android.database.Cursor;
+import android.net.Uri;
+import android.os.AsyncTask;
 import android.os.Bundle;
 import android.os.Handler;
 import android.os.IBinder;
@@ -40,6 +45,8 @@
 import android.os.RemoteException;
 import android.text.TextUtils;
 import android.webkit.CookieSyncManager;
+import org.json.JSONException;
+import org.json.JSONObject;
 
 /**
  * Main Facebook object for interacting with the Facebook developer API.
@@ -60,6 +67,18 @@
     public static final String EXPIRES = "expires_in";
     public static final String SINGLE_SIGN_ON_DISABLED = "service_disabled";
 
+    public static final Uri ATTRIBUTION_ID_CONTENT_URI =
+        Uri.parse("content://com.facebook.katana.provider.AttributionIdProvider");
+    public static final String ATTRIBUTION_ID_COLUMN_NAME = "aid";
+
+    private static final String ATTRIBUTION_PREFERENCES = "com.facebook.sdk.attributionTracking";
+    private static final String PUBLISH_ACTIVITY_PATH = "%s/activities";
+    private static final String MOBILE_INSTALL_EVENT = "MOBILE_APP_INSTALL";
+    private static final String SUPPORTS_ATTRIBUTION = "supports_attribution";
+    private static final String APPLICATION_FIELDS = "fields";
+    private static final String ANALYTICS_EVENT = "event";
+    private static final String ATTRIBUTION_KEY = "attribution";
+
     public static final int FORCE_DIALOG_AUTH = -1;
 
     private static final String LOGIN = "oauth";
@@ -89,6 +108,9 @@
     // we try to refresh the access token again.
     final private long REFRESH_TOKEN_BARRIER = 24L * 60L * 60L * 1000L;
 
+    private boolean shouldAutoPublishInstall = true;
+    private AutoPublishAsyncTask mAutoPublishAsyncTask = null;
+
     /**
      * Constructor for Facebook object.
      *
@@ -196,6 +218,9 @@ public void authorize(Activity activity, String[] permissions,
 
         mAuthDialogListener = listener;
 
+        // fire off an auto-attribution publish if appropriate.
+        autoPublishAsync(activity.getApplicationContext());
+
         // Prefer single sign-on, where available.
         if (activityCode >= 0) {
             singleSignOnStarted = startSingleSignOn(activity, mAppId,
@@ -844,6 +869,31 @@ public long getAccessExpires() {
         return mAccessExpires;
     }
 
+    /**
+     * Retrieve the last time the token was updated (in milliseconds since
+     * the Unix epoch), or 0 if the token has not been set.
+     *
+     * @return long - timestamp of the last token update.
+     */
+    public long getLastAccessUpdate() {
+        return mLastAccessUpdate;
+    }
+
+    /**
+     * Restore the token, expiration time, and last update time from cached values.
+     * These should be values obtained from getAccessToken(), getAccessExpires, and
+     * getLastAccessUpdate() respectively.
+     *
+     * @param accessToken - access token
+     * @param accessExpires - access token expiration time
+     * @param lastAccessUpdate - timestamp of the last token update
+     */
+    public void setTokenFromCache(String accessToken, long accessExpires, long lastAccessUpdate) {
+        mAccessToken = accessToken;
+        mAccessExpires = accessExpires;
+        mLastAccessUpdate = lastAccessUpdate;
+    }
+
     /**
      * Set the OAuth 2.0 access token for API access.
      *
@@ -888,6 +938,155 @@ public void setAppId(String appId) {
         mAppId = appId;
     }
 
+    /**
+     * Get Attribution ID for app install conversion tracking.
+     * @param contentResolver
+     * @return Attribution ID that will be used for conversion tracking. It will be null only if
+     *         the user has not installed or logged in to the Facebook app.
+     */
+    public static String getAttributionId(ContentResolver contentResolver) {
+        String [] projection = {ATTRIBUTION_ID_COLUMN_NAME};
+        Cursor c = contentResolver.query(ATTRIBUTION_ID_CONTENT_URI, projection, null, null, null);
+        if (c == null || !c.moveToFirst()) {
+            return null;
+        }
+        String attributionId = c.getString(c.getColumnIndex(ATTRIBUTION_ID_COLUMN_NAME));
+
+        return attributionId;
+    }
+
+    /**
+     * Get the auto install publish setting.  If true, an install event will be published during authorize(), unless
+     * it has occurred previously or the app does not have install attribution enabled on the application's developer
+     * config page.
+     * @return
+     */
+    public boolean getShouldAutoPublishInstall() {
+        return shouldAutoPublishInstall;
+    }
+
+    /**
+     * Sets whether auto publishing of installs will occur.
+     * @param value
+     */
+    public void setShouldAutoPublishInstall(boolean value) {
+        shouldAutoPublishInstall = value;
+    }
+
+    /**
+     * Manually publish install attribution to the facebook graph.  Internally handles tracking repeat calls to prevent
+     * multiple installs being published to the graph.
+     * @param context
+     * @return returns false on error.  Applications should retry until true is returned.  Safe to call again after
+     * true is returned.
+     */
+    public boolean publishInstall(final Context context) {
+        try {
+            // copy the application id to guarantee thread safety..
+            String applicationId = mAppId;
+            if (applicationId != null) {
+                publishInstall(this, applicationId, context);
+                return true;
+            }
+        } catch (Exception e) {
+            // if there was an error, fall through to the failure case.
+            Util.logd("Facebook-publish", e.getMessage());
+        }
+        return false;
+    }
+
+    /**
+     * This function does the heavy lifting of publishing an install.
+     * @param fb
+     * @param applicationId
+     * @param context
+     * @throws Exception
+     */
+    private static void publishInstall(final Facebook fb, final String applicationId, final Context context)
+            throws JSONException, FacebookError, MalformedURLException, IOException {
+
+        String attributionId = Facebook.getAttributionId(context.getContentResolver());
+        SharedPreferences preferences = context.getSharedPreferences(ATTRIBUTION_PREFERENCES, Context.MODE_PRIVATE);
+        String pingKey = applicationId+"ping";
+        long lastPing = preferences.getLong(pingKey, 0);
+        if (lastPing == 0 && attributionId != null) {
+            Bundle supportsAttributionParams = new Bundle();
+            supportsAttributionParams.putString(APPLICATION_FIELDS, SUPPORTS_ATTRIBUTION);
+            JSONObject supportResponse = Util.parseJson(fb.request(applicationId, supportsAttributionParams));
+            Object doesSupportAttribution = (Boolean)supportResponse.get(SUPPORTS_ATTRIBUTION);
+
+            if (!(doesSupportAttribution instanceof Boolean)) {
+                throw new JSONException(String.format(
+                    "%s contains %s instead of a Boolean", SUPPORTS_ATTRIBUTION, doesSupportAttribution));
+            }
+
+            if ((Boolean)doesSupportAttribution) {
+                Bundle publishParams = new Bundle();
+                publishParams.putString(ANALYTICS_EVENT, MOBILE_INSTALL_EVENT);
+                publishParams.putString(ATTRIBUTION_KEY, attributionId);
+
+                String publishUrl = String.format(PUBLISH_ACTIVITY_PATH, applicationId);
+
+                fb.request(publishUrl, publishParams, "POST");
+
+                // denote success since no error threw from the post.
+                SharedPreferences.Editor editor = preferences.edit();
+                editor.putLong(pingKey, System.currentTimeMillis());
+                editor.commit();
+            }
+        }
+    }
+
+    void autoPublishAsync(final Context context) {
+        AutoPublishAsyncTask asyncTask = null;
+        synchronized (this) {
+            if (mAutoPublishAsyncTask == null) {
+                // copy the application id to guarantee thread safety against our container.
+                String applicationId = Facebook.this.mAppId;
+
+                // skip publish if we don't have an application id.
+                if (applicationId != null) {
+                    asyncTask = mAutoPublishAsyncTask = new AutoPublishAsyncTask(applicationId, context);
+                }
+            }
+        }
+
+        if (asyncTask != null) {
+            asyncTask.execute();
+        }
+    }
+
+    /**
+     * Async implementation to allow auto publishing to not block the ui thread.
+     */
+    private class AutoPublishAsyncTask extends AsyncTask<Void, Void, Void> {
+        private final String mApplicationId;
+        private final Context mApplicationContext;
+
+        public AutoPublishAsyncTask(String applicationId, Context context) {
+            mApplicationId = applicationId;
+            mApplicationContext = context.getApplicationContext();
+        }
+
+        @Override
+        protected Void doInBackground(Void... voids) {
+            try {
+                Facebook.publishInstall(Facebook.this, mApplicationId, mApplicationContext);
+            } catch (Exception e) {
+                Util.logd("Facebook-publish", e.getMessage());
+            }
+            return null;
+        }
+
+        @Override
+        protected void onPostExecute(Void result) {
+            // always clear out the publisher to allow other invocations.
+            synchronized (Facebook.this) {
+                mAutoPublishAsyncTask = null;
+            }
+        }
+    }
+
     /**
      * Callback interface for dialog requests.
      *
diff --git a/facebook/src/com/facebook/android/FacebookError.java b/facebook/src/com/facebook/android/FacebookError.java
index 16836dbd7..3a2c6cd43 100644
--- a/facebook/src/com/facebook/android/FacebookError.java
+++ b/facebook/src/com/facebook/android/FacebookError.java
@@ -22,7 +22,7 @@
  *
  * @author ssoneff@facebook.com
  */
-public class FacebookError extends Throwable {
+public class FacebookError extends RuntimeException {
 
     private static final long serialVersionUID = 1L;
 
diff --git a/facebook/src/com/facebook/android/FbDialog.java b/facebook/src/com/facebook/android/FbDialog.java
index 423ce9cde..9622f816d 100644
--- a/facebook/src/com/facebook/android/FbDialog.java
+++ b/facebook/src/com/facebook/android/FbDialog.java
@@ -121,6 +121,7 @@ private void setUpWebView(int margin) {
         mWebView.loadUrl(mUrl);
         mWebView.setLayoutParams(FILL);
         mWebView.setVisibility(View.INVISIBLE);
+        mWebView.getSettings().setSavePassword(false);
         
         webViewContainer.setPadding(margin, margin, margin, margin);
         webViewContainer.addView(mWebView);
diff --git a/facebook/src/com/facebook/android/Util.java b/facebook/src/com/facebook/android/Util.java
index 787b678ff..52cf4d87b 100644
--- a/facebook/src/com/facebook/android/Util.java
+++ b/facebook/src/com/facebook/android/Util.java
@@ -66,12 +66,13 @@ public static String encodePostBody(Bundle parameters, String boundary) {
         StringBuilder sb = new StringBuilder();
 
         for (String key : parameters.keySet()) {
-            if (parameters.getByteArray(key) != null) {
+            Object parameter = parameters.get(key);
+            if (!(parameter instanceof String)) {
                 continue;
             }
 
             sb.append("Content-Disposition: form-data; name=\"" + key +
-                    "\"\r\n\r\n" + parameters.getString(key));
+                    "\"\r\n\r\n" + (String)parameter);
             sb.append("\r\n" + "--" + boundary + "\r\n");
         }
 
@@ -86,6 +87,11 @@ public static String encodeUrl(Bundle parameters) {
         StringBuilder sb = new StringBuilder();
         boolean first = true;
         for (String key : parameters.keySet()) {
+            Object parameter = parameters.get(key);
+            if (!(parameter instanceof String)) {
+                continue;
+            }
+
             if (first) first = false; else sb.append("&");
             sb.append(URLEncoder.encode(key) + "=" +
                       URLEncoder.encode(parameters.getString(key)));
@@ -99,8 +105,10 @@ public static Bundle decodeUrl(String s) {
             String array[] = s.split("&");
             for (String parameter : array) {
                 String v[] = parameter.split("=");
-                params.putString(URLDecoder.decode(v[0]),
-                                 URLDecoder.decode(v[1]));
+                if (v.length == 2) {
+                    params.putString(URLDecoder.decode(v[0]),
+                                     URLDecoder.decode(v[1]));
+                }
             }
         }
         return params;
@@ -158,8 +166,9 @@ public static String openUrl(String url, String method, Bundle params)
         if (!method.equals("GET")) {
             Bundle dataparams = new Bundle();
             for (String key : params.keySet()) {
-                if (params.getByteArray(key) != null) {
-                        dataparams.putByteArray(key, params.getByteArray(key));
+                Object parameter = params.get(key);
+                if (parameter instanceof byte[]) {
+                    dataparams.putByteArray(key, (byte[])parameter);
                 }
             }
 
