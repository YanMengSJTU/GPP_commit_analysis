diff --git a/facebook/src/com/explodingbarrel/FacebookIAPMainActivity.java b/facebook/src/com/explodingbarrel/FacebookIAPMainActivity.java
index e35a52218..f1bb12af6 100644
--- a/facebook/src/com/explodingbarrel/FacebookIAPMainActivity.java
+++ b/facebook/src/com/explodingbarrel/FacebookIAPMainActivity.java
@@ -116,28 +116,43 @@ else if( session.isClosed() == true )
         }
     };
 
-    boolean FacebookLogin( String scope, boolean allowUI, String messageHandler, String authorizeSuccess, String authorizeFail )
+    boolean FacebookLogin( final String scope, final boolean allowUI, final String messageHandler, final String authorizeSuccess, final String authorizeFail )
     {
         Log.d( TAG, "Facebook Login : scope = " + scope + " allowUI = " + allowUI );
 
         boolean success = false;
-        
+    
         if( this.CurrentSession != null )
         {
-            Session.OpenRequest openRequest = new Session.OpenRequest( this );
-            if( openRequest != null )
-            {
-                List<String> permissions = Arrays.asList( scope.split( "," ) );
-                openRequest.setPermissions( permissions );
-                openRequest.setCallback( new OpenForReadSessionStateCallback( messageHandler, authorizeSuccess, authorizeFail ) );
-                this.CurrentSession.openForRead( openRequest );
-                success = true;
-                Log.d(TAG, "Facebook Login : Pending" );
-            }
-            else
+            this.runOnUiThread( new Runnable()
             {
-                Log.d(TAG, "Facebook Login : Failed - Could not construct an OpenRequest" );
-            }
+                public void run()
+                {
+                    Session.OpenRequest openRequest = new Session.OpenRequest( FacebookIAPMainActivity.this );
+                    if( openRequest != null )
+                    {
+                        List<String> permissions = Arrays.asList( scope.split( "," ) );
+                        openRequest.setPermissions( permissions );
+                        if( allowUI == true )
+                        {
+                            openRequest.setLoginBehavior( SessionLoginBehavior.SSO_WITH_FALLBACK );
+                        }
+                        else
+                        {
+                            openRequest.setLoginBehavior( SessionLoginBehavior.SSO_ONLY );
+                        }
+                        openRequest.setCallback( new OpenForReadSessionStateCallback( messageHandler, authorizeSuccess, authorizeFail ) );
+                        FacebookIAPMainActivity.this.CurrentSession.openForRead( openRequest );
+                        
+                        Log.d(TAG, "Facebook Login : Pending" );
+                    }
+                    else
+                    {
+                        Log.d(TAG, "Facebook Login : Failed - Could not construct an OpenRequest" );
+                    }
+                }
+            } );
+            success = true;
         }
         else
         {
@@ -182,16 +197,30 @@ public void run()
                     Bundle parameters = ConvertJSONToBundle( params );
                     if( action.equalsIgnoreCase( "feed" ) )
                     {
-                        FeedDialogCompletionListener listener = new FeedDialogCompletionListener( messageHandler, successMsg, failMsg );
-                        WebDialog feedDialog = new WebDialog.FeedDialogBuilder( FacebookIAPMainActivity.this, CurrentSession, parameters ).setOnCompleteListener( listener ).build();
+                        UIDialogCompletionListener listener = new UIDialogCompletionListener( action, messageHandler, successMsg, failMsg );
+                        WebDialog feedDialog = new WebDialog.FeedDialogBuilder( FacebookIAPMainActivity.this, FacebookIAPMainActivity.this.CurrentSession, parameters ).setOnCompleteListener( listener ).build();
                         if( feedDialog != null )
                         {
                             feedDialog.show();
-                            Log.d(TAG, "Facebook UI : Pending" );
+                            Log.d(TAG, "Facebook UI : Pending - " + action );
+                        }
+                        else
+                        {
+                            Log.d(TAG, "Facebook UI : Failed - " + action + " - Couldn't crate WebDialog using WebDialog.FeedDialogBuilder" );
+                        }
+                    }
+                    else if( action.equalsIgnoreCase( "apprequests" ) )
+                    {
+                        UIDialogCompletionListener listener = new UIDialogCompletionListener( action, messageHandler, successMsg, failMsg );
+                        WebDialog requestDialog = new WebDialog.RequestsDialogBuilder( FacebookIAPMainActivity.this, FacebookIAPMainActivity.this.CurrentSession, parameters ).setOnCompleteListener( listener ).build();
+                        if( requestDialog != null )
+                        {
+                            requestDialog.show();
+                            Log.d(TAG, "Facebook UI : Pending - " + action );
                         }
                         else
                         {
-                            Log.d(TAG, "Facebook UI : Failed - Couldn't crate WebDialog using WebDialog.FeedDialogBuilder" );
+                            Log.d(TAG, "Facebook UI : Failed - " + action + " - Couldn't crate WebDialog using WebDialog.RequestsDialogBuilder" );
                         }
                     }
                     else
@@ -210,14 +239,16 @@ public void run()
         return success;
     }
 
-    private class FeedDialogCompletionListener implements WebDialog.OnCompleteListener
+    private class UIDialogCompletionListener implements WebDialog.OnCompleteListener
     {
+        private String Action;
         private String MessageHandler;
         private String SuccessMsg;
         private String FailMsg;
     
-        public FeedDialogCompletionListener( String messageHandler, String successMsg, String failMsg )
+        public UIDialogCompletionListener( String action, String messageHandler, String successMsg, String failMsg )
         {
+            this.Action = action;
             this.MessageHandler = messageHandler;
             this.SuccessMsg = successMsg;
             this.FailMsg = failMsg;
@@ -229,12 +260,12 @@ public void onComplete(Bundle values, FacebookException error)
             if( error == null )
             {
                 UnityPlayer.UnitySendMessage( this.MessageHandler, this.SuccessMsg, values.toString() );
-                Log.d(TAG, "Facebook UI : Success - values = " + values );
+                Log.d(TAG, "Facebook UI : Success - " + this.Action + " - values = " + values );
             }
             else
             {
                 UnityPlayer.UnitySendMessage( this.MessageHandler, this.FailMsg, error.getMessage() );
-                Log.d(TAG, "Facebook UI : Failed - values = " + values + " error = " + error.getMessage() );
+                Log.d(TAG, "Facebook UI : Failed - " + this.Action + " - values = " + values + " error = " + error.getMessage() );
             }
         }
     };
