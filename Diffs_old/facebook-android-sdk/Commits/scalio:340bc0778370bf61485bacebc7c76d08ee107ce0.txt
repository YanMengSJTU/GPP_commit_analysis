diff --git a/facebook/classpath b/facebook/classpath
new file mode 100644
index 000000000..6d04916ea
--- /dev/null
+++ b/facebook/classpath
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<classpath>
+       <classpathentry kind="src" path="src"/>
+       <classpathentry kind="src" path="gen"/>
+       <classpathentry kind="con" path="com.android.ide.eclipse.adt.ANDROID_FRAMEWORK"/>
+       <classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.LIBRARIES"/>
+       <classpathentry exported="true" kind="con" path="com.android.ide.eclipse.adt.DEPENDENCIES"/>
+       <classpathentry kind="output" path="bin/classes"/>
+</classpath>
diff --git a/facebook/src/com/facebook/Request.java b/facebook/src/com/facebook/Request.java
index ca97ff294..660a39385 100644
--- a/facebook/src/com/facebook/Request.java
+++ b/facebook/src/com/facebook/Request.java
@@ -23,15 +23,20 @@
 import android.os.*;
 import android.text.TextUtils;
 import android.util.Pair;
+
 import com.facebook.internal.ServerProtocol;
 import com.facebook.model.*;
 import com.facebook.internal.Logger;
 import com.facebook.internal.Utility;
 import com.facebook.internal.Validate;
+
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
+import info.guardianproject.onionkit.ui.OrbotHelper;
+import info.guardianproject.onionkit.web.WebkitProxy;
+
 import java.io.*;
 import java.net.HttpURLConnection;
 import java.net.InetSocketAddress;
@@ -113,6 +118,8 @@
     private static final int ORBOT_HTTP_PORT = 8118;
     private static final int ORBOT_SOCKS_PORT = 9050;
     
+    private static final String LOG_TAG = Logger.LOG_TAG_BASE + "Request";
+    private static Context mContext;
     private static String defaultBatchApplicationId;
 
     private Session session;
@@ -194,6 +201,7 @@ public Request(Session session, String graphPath, Bundle parameters, HttpMethod
      */
     public Request(Session session, String graphPath, Bundle parameters, HttpMethod httpMethod, Callback callback) {
         this.session = session;
+        mContext = Session.getStaticContext();
         this.graphPath = graphPath;
         this.callback = callback;
 
@@ -1698,13 +1706,25 @@ static HttpURLConnection createConnection(URL url) throws IOException {
     	Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(ORBOT_HOST, ORBOT_HTTP_PORT));
     	//Proxy proxy = new Proxy(Proxy.Type.SOCKS, new InetSocketAddress(ORBOT_HOST, ORBOT_SOCKS_PORT));	
     	
-        HttpURLConnection connection;
-        connection = (HttpURLConnection) url.openConnection(proxy);
-
+        HttpURLConnection connection = (HttpURLConnection) url.openConnection();
+        
+        if(null != mContext) {
+        	OrbotHelper orbotHelper = new OrbotHelper(mContext);
+            
+            if(orbotHelper.isOrbotRunning()) {    
+                try {
+                	connection = (HttpURLConnection) url.openConnection(proxy);
+        		} catch (Exception e) {
+        			Utility.logd(LOG_TAG, "Request: Error setting Proxy");
+        			e.printStackTrace();
+        		}
+            }
+        }
+    	
         connection.setRequestProperty(USER_AGENT_HEADER, getUserAgent());
         connection.setRequestProperty(CONTENT_TYPE_HEADER, getMimeContentType());
-
         connection.setChunkedStreamingMode(0);
+        
         return connection;
     }
 
