diff --git a/.arcconfig b/.arcconfig
new file mode 100644
index 000000000..72b0ebff7
--- /dev/null
+++ b/.arcconfig
@@ -0,0 +1,5 @@
+{
+  "project_id" : "facebook-android-sdk",
+  "conduit_uri" : "https://phabricator.fb.com/api/",
+  "copyright_holder" : "Facebook"
+}
diff --git a/.gitignore b/.gitignore
index 47acd648f..afd03db53 100644
--- a/.gitignore
+++ b/.gitignore
@@ -5,11 +5,15 @@
 *.classpath
 *.project
 *.settings
+facebook/local.properties
 facebook/bin/
 facebook/gen/
+examples/Hackbook/bin/
+examples/Hackbook/gen/
+examples/Hackbook/local.properties
 examples/stream/bin/
 examples/simple/bin/
 examples/stream/gen/
 examples/simple/gen/
 tests/bin
-tests/gen
\ No newline at end of file
+tests/gen
diff --git a/examples/Hackbook/AndroidManifest.xml b/examples/Hackbook/AndroidManifest.xml
index afd4c5307..bc3ea853b 100644
--- a/examples/Hackbook/AndroidManifest.xml
+++ b/examples/Hackbook/AndroidManifest.xml
@@ -21,8 +21,7 @@
         </activity>
         <activity android:name=".Hackbook"
             android:label="@string/app_name"
-            android:configChanges="keyboardHidden"
-            android:screenOrientation="portrait">
+            android:configChanges="keyboardHidden|orientation">
         </activity>
         <activity
             android:name=".GraphExplorer"
@@ -45,5 +44,5 @@
     <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
     <uses-permission android:name="android.permission.MANAGE_ACCOUNTS" />
-    <uses-sdk android:minSdkVersion="3" />
+    <uses-sdk android:minSdkVersion="8" />
 </manifest>
diff --git a/examples/Hackbook/build.xml b/examples/Hackbook/build.xml
new file mode 100644
index 000000000..6c4e58004
--- /dev/null
+++ b/examples/Hackbook/build.xml
@@ -0,0 +1,83 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project name="Hackbook" default="help">
+
+    <!-- The local.properties file is created and updated by the 'android' tool.
+         It contains the path to the SDK. It should *NOT* be checked into
+         Version Control Systems. -->
+    <property file="local.properties" />
+
+    <!-- The ant.properties file can be created by you. It is only edited by the
+         'android' tool to add properties to it.
+         This is the place to change some Ant specific build properties.
+         Here are some properties you may want to change/update:
+
+         source.dir
+             The name of the source directory. Default is 'src'.
+         out.dir
+             The name of the output directory. Default is 'bin'.
+
+         For other overridable properties, look at the beginning of the rules
+         files in the SDK, at tools/ant/build.xml
+
+         Properties related to the SDK location or the project target should
+         be updated using the 'android' tool with the 'update' action.
+
+         This file is an integral part of the build system for your
+         application and should be checked into Version Control Systems.
+
+         -->
+    <property file="ant.properties" />
+
+    <!-- The project.properties file is created and updated by the 'android'
+         tool, as well as ADT.
+
+         This contains project specific properties such as project target, and library
+         dependencies. Lower level build properties are stored in ant.properties
+         (or in .classpath for Eclipse projects).
+
+         This file is an integral part of the build system for your
+         application and should be checked into Version Control Systems. -->
+    <loadproperties srcFile="project.properties" />
+
+    <!-- quick check on sdk.dir -->
+    <fail
+            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through an env var"
+            unless="sdk.dir"
+    />
+
+    <!--
+        Import per project custom build rules if present at the root of the project.
+        This is the place to put custom intermediary targets such as:
+            -pre-build
+            -pre-compile
+            -post-compile (This is typically used for code obfuscation.
+                           Compiled code location: ${out.classes.absolute.dir}
+                           If this is not done in place, override ${out.dex.input.absolute.dir})
+            -post-package
+            -post-build
+            -pre-clean
+    -->
+    <import file="custom_rules.xml" optional="true" />
+
+    <!-- Import the actual build file.
+
+         To customize existing targets, there are two options:
+         - Customize only one target:
+             - copy/paste the target into this file, *before* the
+               <import> task.
+             - customize it to your needs.
+         - Customize the whole content of build.xml
+             - copy/paste the content of the rules files (minus the top node)
+               into this file, replacing the <import> task.
+             - customize to your needs.
+
+         ***********************
+         ****** IMPORTANT ******
+         ***********************
+         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,
+         in order to avoid having your file be overridden by tools such as "android update project"
+    -->
+    <!-- version-tag: 1 -->
+    <import file="${sdk.dir}/tools/ant/build.xml" />
+
+</project>
diff --git a/examples/Hackbook/default.properties b/examples/Hackbook/default.properties
index 6805fb9fe..74d10005d 100644
--- a/examples/Hackbook/default.properties
+++ b/examples/Hackbook/default.properties
@@ -11,4 +11,4 @@
 split.density=false
 # Project target.
 target=android-8
-android.library.reference.1=../../../newdialog/facebook-android-sdk/facebook
+android.library.reference.1=../../facebook
diff --git a/examples/Hackbook/proguard-project.txt b/examples/Hackbook/proguard-project.txt
new file mode 100644
index 000000000..f2fe1559a
--- /dev/null
+++ b/examples/Hackbook/proguard-project.txt
@@ -0,0 +1,20 @@
+# To enable ProGuard in your project, edit project.properties
+# to define the proguard.config property as described in that file.
+#
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in ${sdk.dir}/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the ProGuard
+# include property in project.properties.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/examples/Hackbook/project.properties b/examples/Hackbook/project.properties
new file mode 100644
index 000000000..1998897e5
--- /dev/null
+++ b/examples/Hackbook/project.properties
@@ -0,0 +1,17 @@
+# This file is automatically generated by Android Tools.
+# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
+#
+# This file must be checked in Version Control Systems.
+#
+# To customize properties used by the Ant build system edit
+# "ant.properties", and override values to adapt the script to your
+# project structure.
+#
+# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):
+#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
+
+# Indicates whether an apk should be generated for each density.
+split.density=false
+android.library.reference.1=../../facebook
+# Project target.
+target=android-8
diff --git a/examples/Hackbook/res/layout/main.xml b/examples/Hackbook/res/layout-land/main.xml
similarity index 100%
rename from examples/Hackbook/res/layout/main.xml
rename to examples/Hackbook/res/layout-land/main.xml
diff --git a/examples/Hackbook/res/layout-port/main.xml b/examples/Hackbook/res/layout-port/main.xml
new file mode 100644
index 000000000..2dc8e244a
--- /dev/null
+++ b/examples/Hackbook/res/layout-port/main.xml
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:gravity="center_horizontal">
+    <RelativeLayout
+        android:layout_width="fill_parent"
+        android:padding="6dip"
+        android:layout_height="?android:attr/listPreferredItemHeight">
+        <ImageView
+            android:id="@+id/user_pic"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_alignParentTop="true"
+            android:layout_alignParentBottom="true"
+            android:layout_marginRight="6dip" />
+        <TextView
+            android:id="@+id/txt"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_toRightOf="@id/user_pic" />
+        <com.facebook.android.LoginButton
+            android:id="@+id/login"
+            android:src="@drawable/login_button"
+            android:layout_toRightOf="@id/user_pic"
+            android:layout_below="@id/txt"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content" />
+    </RelativeLayout>
+    <View
+         android:layout_width="fill_parent"
+         android:layout_height="1dip"
+         android:background="@color/grey" />
+    <ListView
+        android:id="@+id/main_list"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content" />
+    <View
+        android:layout_width="fill_parent"
+        android:layout_height="1dip"
+        android:background="@color/grey" />
+</LinearLayout>
diff --git a/examples/Hackbook/src/com/facebook/android/SessionStore.java b/examples/Hackbook/src/com/facebook/android/SessionStore.java
index 1b97a53a6..db2438b01 100644
--- a/examples/Hackbook/src/com/facebook/android/SessionStore.java
+++ b/examples/Hackbook/src/com/facebook/android/SessionStore.java
@@ -24,17 +24,18 @@
 
     private static final String TOKEN = "access_token";
     private static final String EXPIRES = "expires_in";
+    private static final String LAST_UPDATE = "last_update";
     private static final String KEY = "facebook-session";
 
     /*
      * Save the access token and expiry date so you don't have to fetch it each
      * time
      */
-
     public static boolean save(Facebook session, Context context) {
         Editor editor = context.getSharedPreferences(KEY, Context.MODE_PRIVATE).edit();
         editor.putString(TOKEN, session.getAccessToken());
         editor.putLong(EXPIRES, session.getAccessExpires());
+        editor.putLong(LAST_UPDATE, session.getLastAccessUpdate());
         return editor.commit();
     }
 
@@ -43,8 +44,10 @@ public static boolean save(Facebook session, Context context) {
      */
     public static boolean restore(Facebook session, Context context) {
         SharedPreferences savedSession = context.getSharedPreferences(KEY, Context.MODE_PRIVATE);
-        session.setAccessToken(savedSession.getString(TOKEN, null));
-        session.setAccessExpires(savedSession.getLong(EXPIRES, 0));
+        session.setTokenFromCache(
+                savedSession.getString(TOKEN, null),
+                savedSession.getLong(EXPIRES, 0),
+                savedSession.getLong(LAST_UPDATE, 0));
         return session.isSessionValid();
     }
 
diff --git a/facebook/build.xml b/facebook/build.xml
index f5238e48f..d85ad3e64 100644
--- a/facebook/build.xml
+++ b/facebook/build.xml
@@ -4,7 +4,7 @@
     <!-- The local.properties file is created and updated by the 'android' tool.
          It contains the path to the SDK. It should *NOT* be checked into
          Version Control Systems. -->
-    <loadproperties srcFile="local.properties" />
+    <property file="local.properties" />
 
     <!-- The ant.properties file can be created by you. It is only edited by the
          'android' tool to add properties to it.
@@ -41,25 +41,23 @@
 
     <!-- quick check on sdk.dir -->
     <fail
-            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project'"
+            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through an env var"
             unless="sdk.dir"
     />
 
-
-<!-- extension targets. Uncomment the ones where you want to do custom work
-     in between standard targets -->
-<!--
-    <target name="-pre-build">
-    </target>
-    <target name="-pre-compile">
-    </target>
-
-    /* This is typically used for code obfuscation.
-       Compiled code location: ${out.classes.absolute.dir}
-       If this is not done in place, override ${out.dex.input.absolute.dir} */
-    <target name="-post-compile">
-    </target>
--->
+    <!--
+        Import per project custom build rules if present at the root of the project.
+        This is the place to put custom intermediary targets such as:
+            -pre-build
+            -pre-compile
+            -post-compile (This is typically used for code obfuscation.
+                           Compiled code location: ${out.classes.absolute.dir}
+                           If this is not done in place, override ${out.dex.input.absolute.dir})
+            -post-package
+            -post-build
+            -pre-clean
+    -->
+    <import file="custom_rules.xml" optional="true" />
 
     <!-- Import the actual build file.
 
diff --git a/facebook/default.properties b/facebook/default.properties
deleted file mode 100644
index 2262a388e..000000000
--- a/facebook/default.properties
+++ /dev/null
@@ -1,12 +0,0 @@
-# This file is automatically generated by Android Tools.
-# Do not modify this file -- YOUR CHANGES WILL BE ERASED!
-# 
-# This file must be checked in Version Control Systems.
-# 
-# To customize properties used by the Ant build system use,
-# "build.properties", and override values to adapt the script to your
-# project structure.
-
-android.library=true
-# Project target.
-target=android-3
diff --git a/facebook/proguard-project.txt b/facebook/proguard-project.txt
new file mode 100644
index 000000000..f2fe1559a
--- /dev/null
+++ b/facebook/proguard-project.txt
@@ -0,0 +1,20 @@
+# To enable ProGuard in your project, edit project.properties
+# to define the proguard.config property as described in that file.
+#
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in ${sdk.dir}/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the ProGuard
+# include property in project.properties.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/facebook/project.properties b/facebook/project.properties
index 870504770..ea36ac54a 100644
--- a/facebook/project.properties
+++ b/facebook/project.properties
@@ -3,10 +3,13 @@
 #
 # This file must be checked in Version Control Systems.
 #
-# To customize properties used by the Ant build system use,
+# To customize properties used by the Ant build system edit
 # "ant.properties", and override values to adapt the script to your
 # project structure.
+#
+# To enable ProGuard to shrink and obfuscate your code, uncomment this (available properties: sdk.dir, user.home):
+#proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
 
 android.library=true
 # Project target.
-target=android-7
+target=android-3
diff --git a/facebook/src/com/facebook/android/Facebook.java b/facebook/src/com/facebook/android/Facebook.java
index cfb6e1260..80083a6e1 100644
--- a/facebook/src/com/facebook/android/Facebook.java
+++ b/facebook/src/com/facebook/android/Facebook.java
@@ -39,7 +39,6 @@
 import android.os.Messenger;
 import android.os.RemoteException;
 import android.text.TextUtils;
-import android.util.Log;
 import android.webkit.CookieSyncManager;
 
 /**
@@ -237,7 +236,7 @@ private boolean startSingleSignOn(Activity activity, String applicationId,
         // Verify that the application whose package name is
         // com.facebook.katana.ProxyAuth
         // has the expected FB app signature.
-        if (!validateAppSignatureForIntent(activity, intent)) {
+        if (!validateActivityIntent(activity, intent)) {
             return false;
         }
 
@@ -254,24 +253,59 @@ private boolean startSingleSignOn(Activity activity, String applicationId,
     }
 
     /**
-     * Query the signature for the application that would be invoked by the
-     * given intent and verify that it matches the FB application's signature.
+     * Helper to validate an activity intent by resolving and checking the
+     * provider's package signature.
      *
      * @param context
      * @param intent
-     * @param validSignature
-     * @return true if the app's signature matches the expected signature.
+     * @return true if the service intent resolution happens successfully and the
+     * 	signatures match.
      */
-    private boolean validateAppSignatureForIntent(Context context,
-            Intent intent) {
+    private boolean validateActivityIntent(Context context, Intent intent) {
+        ResolveInfo resolveInfo =
+            context.getPackageManager().resolveActivity(intent, 0);
+        if (resolveInfo == null) {
+            return false;
+        }
+
+        return validateAppSignatureForPackage(
+            context,
+            resolveInfo.activityInfo.packageName);
+    }
 
+
+    /**
+     * Helper to validate a service intent by resolving and checking the
+     * provider's package signature.
+     *
+     * @param context
+     * @param intent
+     * @return true if the service intent resolution happens successfully and the
+     * 	signatures match.
+     */
+    private boolean validateServiceIntent(Context context, Intent intent) {
         ResolveInfo resolveInfo =
-                context.getPackageManager().resolveActivity(intent, 0);
+            context.getPackageManager().resolveService(intent, 0);
         if (resolveInfo == null) {
             return false;
         }
 
-        String packageName = resolveInfo.activityInfo.packageName;
+        return validateAppSignatureForPackage(
+            context,
+            resolveInfo.serviceInfo.packageName);
+    }
+
+    /**
+     * Query the signature for the application that would be invoked by the
+     * given intent and verify that it matches the FB application's signature.
+     *
+     * @param context
+     * @param packageName
+     * @return true if the app's signature matches the expected signature.
+     */
+    private boolean validateAppSignatureForPackage(Context context,
+        String packageName) {
+
         PackageInfo packageInfo;
         try {
             packageInfo = context.getPackageManager().getPackageInfo(
@@ -314,7 +348,7 @@ public void onComplete(Bundle values) {
                 setAccessToken(values.getString(TOKEN));
                 setAccessExpiresIn(values.getString(EXPIRES));
                 if (isSessionValid()) {
-                    Log.d("Facebook-authorize", "Login Success! access_token="
+                    Util.logd("Facebook-authorize", "Login Success! access_token="
                             + getAccessToken() + " expires="
                             + getAccessExpires());
                     mAuthDialogListener.onComplete(values);
@@ -325,17 +359,17 @@ public void onComplete(Bundle values) {
             }
 
             public void onError(DialogError error) {
-                Log.d("Facebook-authorize", "Login failed: " + error);
+                Util.logd("Facebook-authorize", "Login failed: " + error);
                 mAuthDialogListener.onError(error);
             }
 
             public void onFacebookError(FacebookError error) {
-                Log.d("Facebook-authorize", "Login failed: " + error);
+                Util.logd("Facebook-authorize", "Login failed: " + error);
                 mAuthDialogListener.onFacebookError(error);
             }
 
             public void onCancel() {
-                Log.d("Facebook-authorize", "Login canceled");
+                Util.logd("Facebook-authorize", "Login canceled");
                 mAuthDialogListener.onCancel();
             }
         });
@@ -370,19 +404,19 @@ public void authorizeCallback(int requestCode, int resultCode, Intent data) {
                 if (error != null) {
                     if (error.equals(SINGLE_SIGN_ON_DISABLED)
                             || error.equals("AndroidAuthKillSwitchException")) {
-                        Log.d("Facebook-authorize", "Hosted auth currently "
+                        Util.logd("Facebook-authorize", "Hosted auth currently "
                             + "disabled. Retrying dialog auth...");
                         startDialogAuth(mAuthActivity, mAuthPermissions);
                     } else if (error.equals("access_denied")
                             || error.equals("OAuthAccessDeniedException")) {
-                        Log.d("Facebook-authorize", "Login canceled by user.");
+                        Util.logd("Facebook-authorize", "Login canceled by user.");
                         mAuthDialogListener.onCancel();
                     } else {
                         String description = data.getStringExtra("error_description");
                         if (description != null) {
                             error = error + ":" + description;
                         }
-                    	Log.d("Facebook-authorize", "Login failed: " + error);
+                        Util.logd("Facebook-authorize", "Login failed: " + error);
                         mAuthDialogListener.onFacebookError(
                           new FacebookError(error));
                     }
@@ -392,7 +426,7 @@ public void authorizeCallback(int requestCode, int resultCode, Intent data) {
                     setAccessToken(data.getStringExtra(TOKEN));
                     setAccessExpiresIn(data.getStringExtra(EXPIRES));
                     if (isSessionValid()) {
-                        Log.d("Facebook-authorize",
+                        Util.logd("Facebook-authorize",
                                 "Login Success! access_token="
                                         + getAccessToken() + " expires="
                                         + getAccessExpires());
@@ -408,7 +442,7 @@ public void authorizeCallback(int requestCode, int resultCode, Intent data) {
 
                 // An Android error occured.
                 if (data != null) {
-                    Log.d("Facebook-authorize",
+                    Util.logd("Facebook-authorize",
                             "Login failed: " + data.getStringExtra("error"));
                     mAuthDialogListener.onError(
                             new DialogError(
@@ -418,7 +452,7 @@ public void authorizeCallback(int requestCode, int resultCode, Intent data) {
 
                 // User pressed the 'back' button.
                 } else {
-                    Log.d("Facebook-authorize", "Login canceled by user.");
+                    Util.logd("Facebook-authorize", "Login canceled by user.");
                     mAuthDialogListener.onCancel();
                 }
             }
@@ -453,7 +487,7 @@ public boolean extendAccessToken(Context context, ServiceListener serviceListene
         // Verify that the application whose package name is
         // com.facebook.katana
         // has the expected FB app signature.
-        if (!validateAppSignatureForIntent(context, intent)) {
+        if (!validateServiceIntent(context, intent)) {
             return false;
         }
 
@@ -548,7 +582,7 @@ public void onServiceDisconnected(ComponentName arg) {
             serviceListener.onError(new Error("Service disconnected"));
             // We returned an error so there's no point in
             // keeping the binding open.
-            mAuthActivity.unbindService(TokenRefreshServiceConnection.this);
+            applicationsContext.unbindService(TokenRefreshServiceConnection.this);
         }
 
         private void refreshToken() {
@@ -810,6 +844,31 @@ public long getAccessExpires() {
         return mAccessExpires;
     }
 
+    /**
+     * Retrieve the last time the token was updated (in milliseconds since
+     * the Unix epoch), or 0 if the token has not been set.
+     *
+     * @return long - timestamp of the last token update.
+     */
+    public long getLastAccessUpdate() {
+        return mLastAccessUpdate;
+    }
+
+    /**
+     * Restore the token, expiration time, and last update time from cached values.
+     * These should be values obtained from getAccessToken(), getAccessExpires, and
+     * getLastAccessUpdate() respectively.
+     *
+     * @param accessToken - access token
+     * @param accessExpires - access token expiration time
+     * @param lastAccessUpdate - timestamp of the last token update
+     */
+    public void setTokenFromCache(String accessToken, long accessExpires, long lastAccessUpdate) {
+        mAccessToken = accessToken;
+        mAccessExpires = accessExpires;
+        mLastAccessUpdate = lastAccessUpdate;
+    }
+
     /**
      * Set the OAuth 2.0 access token for API access.
      *
diff --git a/facebook/src/com/facebook/android/FacebookError.java b/facebook/src/com/facebook/android/FacebookError.java
index 16836dbd7..3a2c6cd43 100644
--- a/facebook/src/com/facebook/android/FacebookError.java
+++ b/facebook/src/com/facebook/android/FacebookError.java
@@ -22,7 +22,7 @@
  *
  * @author ssoneff@facebook.com
  */
-public class FacebookError extends Throwable {
+public class FacebookError extends RuntimeException {
 
     private static final long serialVersionUID = 1L;
 
diff --git a/facebook/src/com/facebook/android/FbDialog.java b/facebook/src/com/facebook/android/FbDialog.java
index 335c92a94..3c259db87 100644
--- a/facebook/src/com/facebook/android/FbDialog.java
+++ b/facebook/src/com/facebook/android/FbDialog.java
@@ -135,6 +135,7 @@ private void setUpWebView(int margin) {
         mWebView.loadUrl(mUrl);
         mWebView.setLayoutParams(FILL);
         mWebView.setVisibility(View.INVISIBLE);
+        mWebView.getSettings().setSavePassword(false);
         
         webViewContainer.setPadding(margin, margin, margin, margin);
         webViewContainer.addView(mWebView);
@@ -145,7 +146,7 @@ private void setUpWebView(int margin) {
 
         @Override
         public boolean shouldOverrideUrlLoading(WebView view, String url) {
-            Log.d("Facebook-WebView", "Redirect URL: " + url);
+            Util.logd("Facebook-WebView", "Redirect URL: " + url);
             if (url.startsWith(Facebook.REDIRECT_URI)) {
                 Bundle values = Util.parseUrl(url);
 
@@ -189,7 +190,7 @@ public void onReceivedError(WebView view, int errorCode,
 
         @Override
         public void onPageStarted(WebView view, String url, Bitmap favicon) {
-            Log.d("Facebook-WebView", "Webview loading URL: " + url);
+            Util.logd("Facebook-WebView", "Webview loading URL: " + url);
             super.onPageStarted(view, url, favicon);
             if (!detached) {
                 mSpinner.show();
diff --git a/facebook/src/com/facebook/android/Util.java b/facebook/src/com/facebook/android/Util.java
index cf5e97b96..52cf4d87b 100644
--- a/facebook/src/com/facebook/android/Util.java
+++ b/facebook/src/com/facebook/android/Util.java
@@ -47,6 +47,12 @@
  */
 public final class Util {
 
+    /**
+     * Set this to true to enable log output.  Remember to turn this back off
+     * before releasing.  Sending sensitive data to log is a security risk.
+     */
+    private static boolean ENABLE_LOG = false;
+
     /**
      * Generate the multi-part post body providing the parameters and boundary
      * string
@@ -60,12 +66,13 @@ public static String encodePostBody(Bundle parameters, String boundary) {
         StringBuilder sb = new StringBuilder();
 
         for (String key : parameters.keySet()) {
-            if (parameters.getByteArray(key) != null) {
+            Object parameter = parameters.get(key);
+            if (!(parameter instanceof String)) {
                 continue;
             }
 
             sb.append("Content-Disposition: form-data; name=\"" + key +
-                    "\"\r\n\r\n" + parameters.getString(key));
+                    "\"\r\n\r\n" + (String)parameter);
             sb.append("\r\n" + "--" + boundary + "\r\n");
         }
 
@@ -80,6 +87,11 @@ public static String encodeUrl(Bundle parameters) {
         StringBuilder sb = new StringBuilder();
         boolean first = true;
         for (String key : parameters.keySet()) {
+            Object parameter = parameters.get(key);
+            if (!(parameter instanceof String)) {
+                continue;
+            }
+
             if (first) first = false; else sb.append("&");
             sb.append(URLEncoder.encode(key) + "=" +
                       URLEncoder.encode(parameters.getString(key)));
@@ -93,8 +105,10 @@ public static Bundle decodeUrl(String s) {
             String array[] = s.split("&");
             for (String parameter : array) {
                 String v[] = parameter.split("=");
-                params.putString(URLDecoder.decode(v[0]),
-                                 URLDecoder.decode(v[1]));
+                if (v.length == 2) {
+                    params.putString(URLDecoder.decode(v[0]),
+                                     URLDecoder.decode(v[1]));
+                }
             }
         }
         return params;
@@ -144,7 +158,7 @@ public static String openUrl(String url, String method, Bundle params)
         if (method.equals("GET")) {
             url = url + "?" + encodeUrl(params);
         }
-        Log.d("Facebook-Util", method + " URL: " + url);
+        Util.logd("Facebook-Util", method + " URL: " + url);
         HttpURLConnection conn =
             (HttpURLConnection) new URL(url).openConnection();
         conn.setRequestProperty("User-Agent", System.getProperties().
@@ -152,8 +166,9 @@ public static String openUrl(String url, String method, Bundle params)
         if (!method.equals("GET")) {
             Bundle dataparams = new Bundle();
             for (String key : params.keySet()) {
-                if (params.getByteArray(key) != null) {
-                        dataparams.putByteArray(key, params.getByteArray(key));
+                Object parameter = params.get(key);
+                if (parameter instanceof byte[]) {
+                    dataparams.putByteArray(key, (byte[])parameter);
                 }
             }
 
@@ -298,4 +313,17 @@ public static void showAlert(Context context, String title, String text) {
         alertBuilder.create().show();
     }
 
+    /**
+     * A proxy for Log.d api that kills log messages in release build. It
+     * not recommended to send sensitive information to log output in
+     * shipping apps.
+     *
+     * @param tag
+     * @param msg
+     */
+    public static void logd(String tag, String msg) {
+        if (ENABLE_LOG) {
+            Log.d(tag, msg);
+        }
+    }
 }
