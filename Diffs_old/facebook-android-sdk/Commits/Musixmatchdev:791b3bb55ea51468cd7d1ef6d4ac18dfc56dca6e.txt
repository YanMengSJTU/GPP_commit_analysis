diff --git a/.buckconfig b/.buckconfig
index cfa58a9e4..ed8b51685 100644
--- a/.buckconfig
+++ b/.buckconfig
@@ -7,8 +7,8 @@
     src_roots = /facebook/src/, /samples/HelloFacebookSample/src/
 
     # We target gingerbread. Ensure that libraries target that.
-    source_level = 6
-    target_level = 6
+    source_level = 7
+    target_level = 7
 
 [build]
     build_dependencies = FIRST_ORDER_ONLY
@@ -16,3 +16,7 @@
 [alias]
     sdk = //facebook:android-sdk
     hello-facebook = //samples/HelloFacebookSample:app
+    iconicus = //samples/Iconicus:app
+    rps = //samples/RPSSample:app
+    scrumptious = //samples/Scrumptious:app
+    switch-user = //samples/SwitchUserSample:app
diff --git a/.buckversion b/.buckversion
index f2e2f6494..33b8b7e09 100644
--- a/.buckversion
+++ b/.buckversion
@@ -1 +1 @@
-62a21e0436bc4b72db9aa7fc2237d9cdf162b29f
+edff8b2b8818bb64982837158dd546a66b6ef6c2
diff --git a/facebook/BUCK b/facebook/BUCK
index d6a6dfcfe..b7d6df31e 100644
--- a/facebook/BUCK
+++ b/facebook/BUCK
@@ -1,7 +1,6 @@
-build_config(
-  name = 'config-debug',
+android_build_config(
+  name = 'build_config',
   package = 'com.facebook',
-  debug = True,
 )
 
 android_resource(
@@ -14,8 +13,9 @@ android_resource(
 
 android_library(
   name = 'android-sdk',
-  srcs = glob(['src/**/*.java']) + [':config-debug'],
+  srcs = glob(['src/**/*.java']),
   deps = [
+    ':build_config',
     ':res',
     '//libs:android-support-v4',
     '//libs:bolts',
@@ -24,3 +24,8 @@ android_library(
     'PUBLIC',
   ],
 )
+
+project_config(
+  src_target = ':android-sdk',
+  src_roots = ['src'],
+)
diff --git a/facebook/junitTests/build.gradle b/facebook/junitTests/build.gradle
index 51d78f64f..b7aabf4b7 100644
--- a/facebook/junitTests/build.gradle
+++ b/facebook/junitTests/build.gradle
@@ -11,15 +11,15 @@ apply plugin: 'com.android.application'
 apply plugin: 'org.robolectric'
 
 android {
-    // roboelectric doesn't support v21
-    compileSdkVersion 18
+    // roboelectric v21 is currently broken for some of our tests
+    compileSdkVersion 19
     buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
 
     defaultConfig {
         applicationId "com.facebook.junittests"
         minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
-        // roboelectric doesn't support v21
-        targetSdkVersion 18
+        // roboelectric v21 is currently broken for some of our tests
+        targetSdkVersion 19
         versionCode 1
         versionName "1.0"
     }
@@ -39,11 +39,12 @@ dependencies {
     def powerMockVersion = '1.6.1'
 
     compile fileTree(dir: 'libs', include: ['*.jar'])
-    compile 'com.android.support:appcompat-v7:18.+'
+    compile 'com.android.support:appcompat-v7:19.+'
     compile project(':facebook')
 
     testCompile 'junit:junit:4.12'
-    testCompile 'org.robolectric:robolectric:2.4'
+    testCompile 'org.robolectric:robolectric:3.0-rc3'
+    testCompile 'org.robolectric:shadows-support-v4:3.0-rc3'
 
     // PowerMock brings in the mockito dependency
     testCompile "org.powermock:powermock-module-junit4:$powerMockVersion"
diff --git a/facebook/junitTests/src/main/AndroidManifest.xml b/facebook/junitTests/src/main/AndroidManifest.xml
index f1eecc854..0e71c34e3 100644
--- a/facebook/junitTests/src/main/AndroidManifest.xml
+++ b/facebook/junitTests/src/main/AndroidManifest.xml
@@ -25,11 +25,11 @@
     <application
         android:allowBackup="true"
         android:icon="@drawable/ic_launcher"
-        android:label="@string/app_name"
-        android:theme="@style/AppTheme" >
+        android:label="junitTests"
+        android:theme="@style/Theme.AppCompat.Light.DarkActionBar" >
         <activity
             android:name=".MainActivity"
-            android:label="@string/app_name" >
+            android:label="junitTests" >
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
diff --git a/facebook/junitTests/src/main/java/com/facebook/junittests/MainActivity.java b/facebook/junitTests/src/main/java/com/facebook/junittests/MainActivity.java
index da299bbe4..bc8e3c97e 100644
--- a/facebook/junitTests/src/main/java/com/facebook/junittests/MainActivity.java
+++ b/facebook/junitTests/src/main/java/com/facebook/junittests/MainActivity.java
@@ -20,6 +20,7 @@
 
 package com.facebook.junittests;
 
+import android.support.v4.app.FragmentActivity;
 import android.support.v7.app.ActionBarActivity;
 import android.os.Bundle;
 import android.view.Menu;
@@ -28,7 +29,7 @@
 import com.facebook.FacebookSdk;
 
 
-public class MainActivity extends ActionBarActivity {
+public class MainActivity extends FragmentActivity {
     private static String APP_ID = "1234";
     @Override
     protected void onCreate(Bundle savedInstanceState) {
diff --git a/facebook/junitTests/src/main/res/values/styles.xml b/facebook/junitTests/src/main/res/values/styles.xml
index a7a50cfc1..f4968fccf 100644
--- a/facebook/junitTests/src/main/res/values/styles.xml
+++ b/facebook/junitTests/src/main/res/values/styles.xml
@@ -19,9 +19,4 @@
 -->
 
 <resources>
-    <!-- Base application theme. -->
-    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
-        <!-- Customize your theme here. -->
-    </style>
-
 </resources>
diff --git a/facebook/junitTests/src/test/java/com/facebook/AccessTokenCacheTest.java b/facebook/junitTests/src/test/java/com/facebook/AccessTokenCacheTest.java
index c0f3b723c..caf1f87c0 100644
--- a/facebook/junitTests/src/test/java/com/facebook/AccessTokenCacheTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/AccessTokenCacheTest.java
@@ -34,6 +34,7 @@
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.Arrays;
 import java.util.Date;
@@ -77,7 +78,7 @@
     @Before
     public void before() throws Exception {
         mockStatic(FacebookSdk.class);
-        sharedPreferences = Robolectric.application.getSharedPreferences(
+        sharedPreferences = RuntimeEnvironment.application.getSharedPreferences(
                 AccessTokenManager.SHARED_PREFERENCES_NAME, Context.MODE_PRIVATE);
         sharedPreferences.edit().clear().commit();
         cachingStrategyFactory = mock(
diff --git a/facebook/junitTests/src/test/java/com/facebook/AccessTokenManagerTest.java b/facebook/junitTests/src/test/java/com/facebook/AccessTokenManagerTest.java
index 796c329e4..3ae3d47a6 100644
--- a/facebook/junitTests/src/test/java/com/facebook/AccessTokenManagerTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/AccessTokenManagerTest.java
@@ -35,6 +35,7 @@
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.Arrays;
 import java.util.Date;
@@ -64,10 +65,10 @@
     public void before() throws Exception {
         mockStatic(FacebookSdk.class);
         when(FacebookSdk.isInitialized()).thenReturn(true);
-        when(FacebookSdk.getApplicationContext()).thenReturn(Robolectric.application);
+        when(FacebookSdk.getApplicationContext()).thenReturn(RuntimeEnvironment.application);
         suppress(method(Utility.class, "clearFacebookCookies"));
 
-        localBroadcastManager = LocalBroadcastManager.getInstance(Robolectric.application);
+        localBroadcastManager = LocalBroadcastManager.getInstance(RuntimeEnvironment.application);
         accessTokenCache = mock(AccessTokenCache.class);
     }
 
diff --git a/facebook/junitTests/src/test/java/com/facebook/AccessTokenTest.java b/facebook/junitTests/src/test/java/com/facebook/AccessTokenTest.java
index d10a60f58..8ec902bbe 100644
--- a/facebook/junitTests/src/test/java/com/facebook/AccessTokenTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/AccessTokenTest.java
@@ -31,6 +31,7 @@
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.io.IOException;
 import java.util.Arrays;
@@ -185,7 +186,7 @@ public void testFromCacheWithMissingApplicationId() {
         LegacyTokenHelper.putToken(bundle, token);
         // no app id
 
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         FacebookSdk.setApplicationId(applicationId);
 
         AccessToken accessToken = AccessToken.createFromLegacyCache(bundle);
diff --git a/facebook/junitTests/src/test/java/com/facebook/AccessTokenTrackerTest.java b/facebook/junitTests/src/test/java/com/facebook/AccessTokenTrackerTest.java
index 3bbfa5910..670ecfaac 100644
--- a/facebook/junitTests/src/test/java/com/facebook/AccessTokenTrackerTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/AccessTokenTrackerTest.java
@@ -28,6 +28,7 @@
 import org.junit.Test;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.Arrays;
 import java.util.Date;
@@ -52,9 +53,9 @@
     public void before() throws Exception {
         mockStatic(FacebookSdk.class);
         when(FacebookSdk.isInitialized()).thenReturn(true);
-        when(FacebookSdk.getApplicationContext()).thenReturn(Robolectric.application);
+        when(FacebookSdk.getApplicationContext()).thenReturn(RuntimeEnvironment.application);
 
-        localBroadcastManager = LocalBroadcastManager.getInstance(Robolectric.application);
+        localBroadcastManager = LocalBroadcastManager.getInstance(RuntimeEnvironment.application);
     }
 
     @After
diff --git a/facebook/junitTests/src/test/java/com/facebook/FacebookContentProviderTest.java b/facebook/junitTests/src/test/java/com/facebook/FacebookContentProviderTest.java
index 7818efc8f..24f1c28be 100644
--- a/facebook/junitTests/src/test/java/com/facebook/FacebookContentProviderTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/FacebookContentProviderTest.java
@@ -30,6 +30,7 @@
 import org.junit.Test;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.io.File;
 import java.io.FileNotFoundException;
@@ -176,7 +177,7 @@ public static void addAttachment(UUID callId, String attachmentName) {
         public static File openAttachment(UUID callId, String attachmentName)
                 throws FileNotFoundException {
             if (attachments.contains(new Pair<>(callId, attachmentName))) {
-                File cacheDir = Robolectric.application.getCacheDir();
+                File cacheDir = RuntimeEnvironment.application.getCacheDir();
                 File dummyFile = new File(cacheDir, DUMMY_FILE_NAME);
                 if (!dummyFile.exists()) {
                     try {
diff --git a/facebook/junitTests/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java b/facebook/junitTests/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java
index 3b03fbf66..5ef42b907 100644
--- a/facebook/junitTests/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/FacebookGraphRequestErrorTest.java
@@ -25,7 +25,10 @@
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
+import org.junit.Before;
 import org.junit.Test;
+import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import static org.junit.Assert.*;
 
@@ -166,6 +169,11 @@
             "  }\n" +
             "}";
 
+    @Before
+    public void before() throws Exception {
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
+    }
+
     @Test
     public void testClientException() {
         final String errorMsg = "some error happened";
diff --git a/facebook/junitTests/src/test/java/com/facebook/FacebookSdkPowerMockTest.java b/facebook/junitTests/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
index cc8d157d5..3893e5c16 100644
--- a/facebook/junitTests/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/FacebookSdkPowerMockTest.java
@@ -35,6 +35,7 @@
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.powermock.reflect.Whitebox;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.concurrent.Executor;
 
@@ -156,10 +157,10 @@ public void testLoadDefaultsDoesNotOverwrite() throws Exception {
 
     @Test
     public void testRequestCodeOffsetAfterInit() throws Exception {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
 
         try {
-            FacebookSdk.sdkInitialize(Robolectric.application, 1000);
+            FacebookSdk.sdkInitialize(RuntimeEnvironment.application, 1000);
             fail();
         } catch (FacebookException exception) {
             assertEquals(FacebookSdk.CALLBACK_OFFSET_CHANGED_AFTER_INIT, exception.getMessage());
@@ -170,7 +171,7 @@ public void testRequestCodeOffsetAfterInit() throws Exception {
     public void testRequestCodeOffsetNegative() throws Exception {
         try {
             // last bit set, so negative
-            FacebookSdk.sdkInitialize(Robolectric.application, 0xFACEB00C);
+            FacebookSdk.sdkInitialize(RuntimeEnvironment.application, 0xFACEB00C);
             fail();
         } catch (FacebookException exception) {
             assertEquals(FacebookSdk.CALLBACK_OFFSET_NEGATIVE, exception.getMessage());
@@ -179,13 +180,13 @@ public void testRequestCodeOffsetNegative() throws Exception {
 
     @Test
     public void testRequestCodeOffset() throws Exception {
-        FacebookSdk.sdkInitialize(Robolectric.application, 1000);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application, 1000);
         assertEquals(1000, FacebookSdk.getCallbackRequestCodeOffset());
     }
 
     @Test
     public void testRequestCodeRange() {
-        FacebookSdk.sdkInitialize(Robolectric.application, 1000);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application, 1000);
         assertTrue(FacebookSdk.isFacebookRequestCode(1000));
         assertTrue(FacebookSdk.isFacebookRequestCode(1099));
         assertFalse(FacebookSdk.isFacebookRequestCode(999));
diff --git a/facebook/junitTests/src/test/java/com/facebook/GraphErrorTest.java b/facebook/junitTests/src/test/java/com/facebook/GraphErrorTest.java
index ad84cdbf5..23fcc6000 100644
--- a/facebook/junitTests/src/test/java/com/facebook/GraphErrorTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/GraphErrorTest.java
@@ -30,6 +30,7 @@
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.io.IOException;
 import java.net.HttpURLConnection;
@@ -57,7 +58,7 @@ public void before() throws Exception {
         mockStatic(FacebookSdk.class);
         suppress(method(Utility.class, "clearFacebookCookies"));
         when(FacebookSdk.isInitialized()).thenReturn(true);
-        when(FacebookSdk.getApplicationContext()).thenReturn(Robolectric.application);
+        when(FacebookSdk.getApplicationContext()).thenReturn(RuntimeEnvironment.application);
         stub(method(AccessTokenCache.class, "save")).toReturn(null);
     }
 
diff --git a/facebook/junitTests/src/test/java/com/facebook/LegacyTokenCacheTest.java b/facebook/junitTests/src/test/java/com/facebook/LegacyTokenCacheTest.java
index 898292d01..c7a80713b 100644
--- a/facebook/junitTests/src/test/java/com/facebook/LegacyTokenCacheTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/LegacyTokenCacheTest.java
@@ -30,6 +30,7 @@
 import org.powermock.api.mockito.PowerMockito;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.lang.reflect.Array;
 import java.util.ArrayList;
@@ -71,7 +72,7 @@
     public void setUp() {
         super.setUp();
 
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
     @Before
@@ -106,10 +107,10 @@ public void testAllTypes() {
 
         ensureApplicationContext();
 
-        LegacyTokenHelper cache = new LegacyTokenHelper(Robolectric.application);
+        LegacyTokenHelper cache = new LegacyTokenHelper(RuntimeEnvironment.application);
         cache.save(originalBundle);
 
-        LegacyTokenHelper cache2 = new LegacyTokenHelper(Robolectric.application);
+        LegacyTokenHelper cache2 = new LegacyTokenHelper(RuntimeEnvironment.application);
         Bundle cachedBundle = cache2.load();
 
         assertEquals(originalBundle.getBoolean(BOOLEAN_KEY), cachedBundle.getBoolean(BOOLEAN_KEY));
@@ -146,16 +147,18 @@ public void testMultipleCaches() {
 
         ensureApplicationContext();
 
-        LegacyTokenHelper cache1 = new LegacyTokenHelper(Robolectric.application);
-        LegacyTokenHelper cache2 = new LegacyTokenHelper(Robolectric.application, "CustomCache");
+        LegacyTokenHelper cache1 = new LegacyTokenHelper(RuntimeEnvironment.application);
+        LegacyTokenHelper cache2 = new LegacyTokenHelper(
+                RuntimeEnvironment.application,
+                "CustomCache");
 
         cache1.save(bundle1);
         cache2.save(bundle2);
 
         // Get new references to make sure we are getting persisted data.
         // Reverse the cache references for fun.
-        cache1 = new LegacyTokenHelper(Robolectric.application, "CustomCache");
-        cache2 = new LegacyTokenHelper(Robolectric.application);
+        cache1 = new LegacyTokenHelper(RuntimeEnvironment.application, "CustomCache");
+        cache2 = new LegacyTokenHelper(RuntimeEnvironment.application);
 
         Bundle newBundle1 = cache1.load(), newBundle2 = cache2.load();
 
@@ -174,7 +177,7 @@ public void testCacheRoundtrip() {
         String applicationId = "1234";
 
         LegacyTokenHelper cache =
-                new LegacyTokenHelper(Robolectric.application);
+                new LegacyTokenHelper(RuntimeEnvironment.application);
         cache.clear();
 
         Bundle bundle = new Bundle();
@@ -367,7 +370,8 @@ private void ensureApplicationContext() {
         long waitedFor = 0;
         try {
             // Don't hold up execution for too long.
-            while (Robolectric.application.getApplicationContext() == null && waitedFor <= 2000) {
+            while (RuntimeEnvironment.application.getApplicationContext() == null
+                    && waitedFor <= 2000) {
                 Thread.sleep(50);
                 waitedFor += 50;
             }
diff --git a/facebook/junitTests/src/test/java/com/facebook/ProfileCacheTest.java b/facebook/junitTests/src/test/java/com/facebook/ProfileCacheTest.java
index f9c122793..e77179d7e 100644
--- a/facebook/junitTests/src/test/java/com/facebook/ProfileCacheTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/ProfileCacheTest.java
@@ -25,14 +25,15 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import static org.junit.Assert.*;
 
 public final class ProfileCacheTest extends FacebookTestCase {
     @Before
     public void before() throws Exception {
-        FacebookSdk.sdkInitialize(Robolectric.application);
-        Robolectric.application.getSharedPreferences(
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
+        RuntimeEnvironment.application.getSharedPreferences(
                 ProfileCache.SHARED_PREFERENCES_NAME,
                 Context.MODE_PRIVATE)
                 .edit().
diff --git a/facebook/junitTests/src/test/java/com/facebook/ProfileManagerTest.java b/facebook/junitTests/src/test/java/com/facebook/ProfileManagerTest.java
index 921ade1a6..1747f5af4 100644
--- a/facebook/junitTests/src/test/java/com/facebook/ProfileManagerTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/ProfileManagerTest.java
@@ -28,6 +28,7 @@
 import org.junit.Test;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.InputMismatchException;
 
@@ -44,7 +45,7 @@
 
     @Before
     public void before() {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
     @Test
diff --git a/facebook/junitTests/src/test/java/com/facebook/ProfileTest.java b/facebook/junitTests/src/test/java/com/facebook/ProfileTest.java
index 7ff282054..980986d80 100644
--- a/facebook/junitTests/src/test/java/com/facebook/ProfileTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/ProfileTest.java
@@ -26,6 +26,7 @@
 import org.json.JSONObject;
 import org.junit.Test;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import static org.junit.Assert.*;
 
@@ -134,7 +135,7 @@ public void testParcelSerialization() {
 
     @Test
     public void testGetSetCurrentProfile() {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         Profile profile1 = createDefaultProfile();
         Profile.setCurrentProfile(profile1);
         assertEquals(ProfileManager.getInstance().getCurrentProfile(), profile1);
diff --git a/facebook/junitTests/src/test/java/com/facebook/ProfileTrackerTest.java b/facebook/junitTests/src/test/java/com/facebook/ProfileTrackerTest.java
index ede333d17..0c8a60890 100644
--- a/facebook/junitTests/src/test/java/com/facebook/ProfileTrackerTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/ProfileTrackerTest.java
@@ -25,15 +25,16 @@
 
 import org.junit.Test;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import static org.junit.Assert.*;
 
 public class ProfileTrackerTest extends FacebookPowerMockTestCase {
     @Test
     public void testStartStopTrackingAndBroadcast() {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         LocalBroadcastManager localBroadcastManager =
-                LocalBroadcastManager.getInstance(Robolectric.application);
+                LocalBroadcastManager.getInstance(RuntimeEnvironment.application);
         TestProfileTracker testProfileTracker = new TestProfileTracker();
         // Starts tracking
         assertTrue(testProfileTracker.isTracking());
diff --git a/facebook/junitTests/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java b/facebook/junitTests/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java
index 99c8fa237..7296683fe 100644
--- a/facebook/junitTests/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/ProgressNoopOutputStreamTest.java
@@ -24,6 +24,7 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import static org.junit.Assert.*;
 
@@ -33,7 +34,7 @@
 
     @Before
     public void before() throws Exception {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         stream = new ProgressNoopOutputStream(null);
     }
 
diff --git a/facebook/junitTests/src/test/java/com/facebook/ProgressOutputStreamTest.java b/facebook/junitTests/src/test/java/com/facebook/ProgressOutputStreamTest.java
index 6d5fa2053..dfc408638 100644
--- a/facebook/junitTests/src/test/java/com/facebook/ProgressOutputStreamTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/ProgressOutputStreamTest.java
@@ -24,6 +24,7 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.io.ByteArrayOutputStream;
 import java.util.HashMap;
@@ -41,7 +42,7 @@
 
     @Before
     public void before() throws Exception {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         r1 = new GraphRequest(null, "4");
         r2 = new GraphRequest(null, "4");
 
diff --git a/facebook/junitTests/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java b/facebook/junitTests/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java
index cd599c259..27dcb3125 100644
--- a/facebook/junitTests/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/internal/CallbackManagerImplPowerMockTest.java
@@ -30,6 +30,7 @@
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.powermock.reflect.Whitebox;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.HashMap;
 
@@ -42,7 +43,7 @@
 
     @Before
     public void before() {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         // Reset the static state every time so tests don't interfere with each other.
         Whitebox.setInternalState(
                 CallbackManagerImpl.class,
diff --git a/facebook/junitTests/src/test/java/com/facebook/internal/FileLruCacheTest.java b/facebook/junitTests/src/test/java/com/facebook/internal/FileLruCacheTest.java
index cc57d2e0b..e4a6e00e2 100644
--- a/facebook/junitTests/src/test/java/com/facebook/internal/FileLruCacheTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/internal/FileLruCacheTest.java
@@ -28,6 +28,7 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.io.ByteArrayInputStream;
 import java.io.IOException;
@@ -42,7 +43,7 @@
 
     @Before
     public void before() {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
     @Test
diff --git a/facebook/junitTests/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java b/facebook/junitTests/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java
index c0b044900..c57831876 100644
--- a/facebook/junitTests/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/login/KatanaProxyLoginMethodHandlerTest.java
@@ -33,6 +33,7 @@
 import org.mockito.ArgumentCaptor;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.Date;
 
@@ -55,7 +56,7 @@
     @Override
     public void before() throws Exception {
         super.before();
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
     @Test
diff --git a/facebook/junitTests/src/test/java/com/facebook/login/LoginClientTest.java b/facebook/junitTests/src/test/java/com/facebook/login/LoginClientTest.java
index cd2919827..f333fbeb2 100644
--- a/facebook/junitTests/src/test/java/com/facebook/login/LoginClientTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/login/LoginClientTest.java
@@ -34,6 +34,7 @@
 import org.mockito.Mock;
 import org.powermock.core.classloader.annotations.PrepareForTest;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.Arrays;
 import java.util.HashSet;
@@ -67,7 +68,7 @@ public void before() throws Exception {
 
     @Test
     public void testReauthorizationWithSameFbidSucceeds() throws Exception {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
         LoginClient.Request request = createRequest(ACCESS_TOKEN);
 
         AccessToken token = new AccessToken(
diff --git a/facebook/junitTests/src/test/java/com/facebook/login/LoginResultTest.java b/facebook/junitTests/src/test/java/com/facebook/login/LoginResultTest.java
index ba985e7ba..e3e1e3866 100644
--- a/facebook/junitTests/src/test/java/com/facebook/login/LoginResultTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/login/LoginResultTest.java
@@ -27,6 +27,7 @@
 import org.junit.Before;
 import org.junit.Test;
 import org.robolectric.Robolectric;
+import org.robolectric.RuntimeEnvironment;
 
 import java.util.HashSet;
 import java.util.Set;
@@ -47,7 +48,7 @@
 
     @Before
     public void before() throws Exception {
-        FacebookSdk.sdkInitialize(Robolectric.application);
+        FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     }
 
     @Test
diff --git a/facebook/junitTests/src/test/java/com/facebook/login/widget/LoginButtonTest.java b/facebook/junitTests/src/test/java/com/facebook/login/widget/LoginButtonTest.java
index 9cf532c7f..cd842c176 100644
--- a/facebook/junitTests/src/test/java/com/facebook/login/widget/LoginButtonTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/login/widget/LoginButtonTest.java
@@ -22,6 +22,7 @@
 
 import android.app.Activity;
 
+import com.facebook.BuildConfig;
 import com.facebook.FacebookTestCase;
 import com.facebook.junittests.MainActivity;
 import com.facebook.junittests.R;
@@ -29,7 +30,10 @@
 import com.facebook.login.LoginManager;
 
 import org.junit.Test;
+import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
+import org.robolectric.RobolectricGradleTestRunner;
+import org.robolectric.annotation.Config;
 
 import java.util.ArrayList;
 
diff --git a/facebook/junitTests/src/test/java/com/facebook/messenger/MessengerUtilsTest.java b/facebook/junitTests/src/test/java/com/facebook/messenger/MessengerUtilsTest.java
index 5012a5f37..f102ec1a5 100644
--- a/facebook/junitTests/src/test/java/com/facebook/messenger/MessengerUtilsTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/messenger/MessengerUtilsTest.java
@@ -37,6 +37,7 @@
 import org.mockito.ArgumentCaptor;
 import org.robolectric.Robolectric;
 import org.robolectric.RobolectricTestRunner;
+import org.robolectric.RuntimeEnvironment;
 import org.robolectric.annotation.Config;
 
 import java.util.Arrays;
@@ -49,7 +50,7 @@
  * Tests for {@link com.facebook.messenger.MessengerUtils}
  */
 @RunWith(RobolectricTestRunner.class)
-@Config(emulateSdk = 18, manifest = Config.NONE)
+@Config(sdk = 18, manifest = Config.NONE)
 public class MessengerUtilsTest {
 
   private Activity mMockActivity;
@@ -63,7 +64,7 @@ public void setup() {
     mMockContentResolver = mock(ContentResolver.class);
     when(mMockActivity.getPackageManager()).thenReturn(mMockPackageManager);
     when(mMockActivity.getContentResolver()).thenReturn(mMockContentResolver);
-    FacebookSdk.sdkInitialize(Robolectric.application);
+    FacebookSdk.sdkInitialize(RuntimeEnvironment.application);
     FacebookSdk.setApplicationId("200");
   }
 
diff --git a/facebook/junitTests/src/test/java/com/facebook/share/internal/ShareOpenGraphUtilityTest.java b/facebook/junitTests/src/test/java/com/facebook/share/internal/ShareOpenGraphUtilityTest.java
index 0654be83e..7c2a7a05c 100644
--- a/facebook/junitTests/src/test/java/com/facebook/share/internal/ShareOpenGraphUtilityTest.java
+++ b/facebook/junitTests/src/test/java/com/facebook/share/internal/ShareOpenGraphUtilityTest.java
@@ -25,19 +25,14 @@
 import com.facebook.share.model.ShareOpenGraphAction;
 import com.facebook.share.model.ShareOpenGraphObject;
 
-import org.apache.maven.artifact.ant.shaded.IOUtil;
 import org.json.JSONException;
 import org.json.JSONObject;
 import org.junit.Test;
-import org.robolectric.Robolectric;
-import org.robolectric.util.RobolectricBackgroundExecutorService;
+import org.robolectric.shadows.ShadowApplication;
 
 import java.io.IOException;
-import java.net.URL;
 import java.util.ArrayList;
 
-import static junit.framework.Assert.assertNotNull;
-
 public class ShareOpenGraphUtilityTest extends FacebookTestCase {
     private static final String TYPE_KEY = "type";
 
@@ -87,7 +82,7 @@ private JSONObject getActionJSONObject() throws IOException, JSONException {
 
     private String getActionJSONString() throws IOException {
         return TestUtils.getAssetFileStringContents(
-                Robolectric.getShadowApplication().getApplicationContext(),
+                ShadowApplication.getInstance().getApplicationContext(),
                 "ShareOpenGraphUtilityTests_actionJSON.json"
         );
     }
diff --git a/facebook/libs b/facebook/libs
deleted file mode 120000
index d4bda9b46..000000000
--- a/facebook/libs
+++ /dev/null
@@ -1 +0,0 @@
-../libs
\ No newline at end of file
diff --git a/facebook/src/com/facebook/FacebookSdk.java b/facebook/src/com/facebook/FacebookSdk.java
index 0905bbc56..b338f99e2 100644
--- a/facebook/src/com/facebook/FacebookSdk.java
+++ b/facebook/src/com/facebook/FacebookSdk.java
@@ -508,7 +508,6 @@ static GraphResponse publishInstallAndWaitForResponse(
      * @return the current version of the SDK
      */
     public static String getSdkVersion() {
-        Validate.sdkInitialized();
         return FacebookSdkVersion.BUILD;
     }
 
diff --git a/facebook/src/com/facebook/FacebookSdkVersion.java b/facebook/src/com/facebook/FacebookSdkVersion.java
index d87d88dec..385f1ea69 100644
--- a/facebook/src/com/facebook/FacebookSdkVersion.java
+++ b/facebook/src/com/facebook/FacebookSdkVersion.java
@@ -21,5 +21,5 @@
 package com.facebook;
 
 final class FacebookSdkVersion {
-    public static final String BUILD = "4.2.0";
+    public static final String BUILD = "4.3.0";
 }
diff --git a/facebook/src/com/facebook/GraphRequest.java b/facebook/src/com/facebook/GraphRequest.java
index f1cf751c6..b8e426f4b 100644
--- a/facebook/src/com/facebook/GraphRequest.java
+++ b/facebook/src/com/facebook/GraphRequest.java
@@ -1763,6 +1763,16 @@ private static String getMimeContentType() {
     private static String getUserAgent() {
         if (userAgent == null) {
             userAgent = String.format("%s.%s", USER_AGENT_BASE, FacebookSdkVersion.BUILD);
+
+            // For the unity sdk we need to append the unity user agent
+            String customUserAgent = InternalSettings.getCustomUserAgent();
+            if (!Utility.isNullOrEmpty(customUserAgent)) {
+                userAgent = String.format(
+                        Locale.ROOT,
+                        "%s/%s",
+                        userAgent,
+                        customUserAgent);
+            }
         }
 
         return userAgent;
diff --git a/facebook/src/com/facebook/appevents/AppEventsLogger.java b/facebook/src/com/facebook/appevents/AppEventsLogger.java
index 04a209fc3..2e9907c1d 100644
--- a/facebook/src/com/facebook/appevents/AppEventsLogger.java
+++ b/facebook/src/com/facebook/appevents/AppEventsLogger.java
@@ -177,7 +177,7 @@
             "_fbSourceApplicationHasBeenSet";
 
     // Instance member variables
-    private final Context context;
+    private final String contextName;
     private final AccessTokenAppIdPair accessTokenAppId;
 
     private static Map<AccessTokenAppIdPair, SessionEventsState> stateMap =
@@ -650,7 +650,7 @@ public String getApplicationId() {
      */
     private AppEventsLogger(Context context, String applicationId, AccessToken accessToken) {
         Validate.notNull(context, "context");
-        this.context = context;
+        this.contextName = Utility.getActivityName(context);
 
         if (accessToken == null) {
             accessToken = AccessToken.getCurrentAccessToken();
@@ -732,12 +732,12 @@ private void logEvent(
             Bundle parameters,
             boolean isImplicitlyLogged) {
         AppEvent event = new AppEvent(
-                this.context,
+                this.contextName,
                 eventName,
                 valueToSum,
                 parameters,
                 isImplicitlyLogged);
-        logEvent(context, event, accessTokenAppId);
+        logEvent(applicationContext, event, accessTokenAppId);
     }
 
     private static void logEvent(final Context context,
@@ -1290,7 +1290,7 @@ private void populateRequest(GraphRequest request, int numSkipped, JSONArray eve
         private String name;
 
         public AppEvent(
-                Context context,
+                String contextName,
                 String eventName,
                 Double valueToSum,
                 Bundle parameters,
@@ -1305,7 +1305,7 @@ public AppEvent(
 
                 jsonObject.put("_eventName", eventName);
                 jsonObject.put("_logTime", System.currentTimeMillis() / 1000);
-                jsonObject.put("_ui", Utility.getActivityName(context));
+                jsonObject.put("_ui", contextName);
 
                 if (valueToSum != null) {
                     jsonObject.put("_valueToSum", valueToSum.doubleValue());
diff --git a/facebook/src/com/facebook/internal/AttributionIdentifiers.java b/facebook/src/com/facebook/internal/AttributionIdentifiers.java
index d45074f08..d8e3b7023 100644
--- a/facebook/src/com/facebook/internal/AttributionIdentifiers.java
+++ b/facebook/src/com/facebook/internal/AttributionIdentifiers.java
@@ -20,15 +20,26 @@
 
 package com.facebook.internal;
 
+import android.content.ComponentName;
 import android.content.Context;
+import android.content.Intent;
+import android.content.ServiceConnection;
 import android.database.Cursor;
 import android.net.Uri;
+import android.os.Binder;
+import android.os.IBinder;
+import android.os.IInterface;
 import android.os.Looper;
+import android.os.Parcel;
+import android.os.RemoteException;
 import android.util.Log;
 
 import com.facebook.FacebookException;
 
 import java.lang.reflect.Method;
+import java.util.concurrent.BlockingQueue;
+import java.util.concurrent.LinkedBlockingDeque;
+import java.util.concurrent.atomic.AtomicBoolean;
 
 /**
  * com.facebook.internal is solely for the use of other packages within the Facebook SDK for
@@ -58,7 +69,17 @@
     private static AttributionIdentifiers recentlyFetchedIdentifiers;
 
     private static AttributionIdentifiers getAndroidId(Context context) {
-        AttributionIdentifiers identifiers = new AttributionIdentifiers();
+        AttributionIdentifiers identifiers = getAndroidIdViaReflection(context);
+        if (identifiers == null) {
+            identifiers = getAndroidIdViaService(context);
+            if (identifiers == null) {
+                identifiers = new AttributionIdentifiers();
+            }
+        }
+        return identifiers;
+    }
+
+    private static AttributionIdentifiers getAndroidIdViaReflection(Context context) {
         try {
             // We can't call getAdvertisingIdInfo on the main thread or the app will potentially
             // freeze, if this is the case throw:
@@ -72,14 +93,14 @@ private static AttributionIdentifiers getAndroidId(Context context) {
             );
 
             if (isGooglePlayServicesAvailable == null) {
-                return identifiers;
+                return null;
             }
 
             Object connectionResult = Utility.invokeMethodQuietly(
                     null, isGooglePlayServicesAvailable, context);
             if (!(connectionResult instanceof Integer)
                     || (Integer) connectionResult != CONNECTION_RESULT_SUCCESS) {
-                return identifiers;
+                return null;
             }
 
             Method getAdvertisingIdInfo = Utility.getMethodQuietly(
@@ -88,12 +109,12 @@ private static AttributionIdentifiers getAndroidId(Context context) {
                     Context.class
             );
             if (getAdvertisingIdInfo == null) {
-                return identifiers;
+                return null;
             }
             Object advertisingInfo = Utility.invokeMethodQuietly(
                     null, getAdvertisingIdInfo, context);
             if (advertisingInfo == null) {
-                return identifiers;
+                return null;
             }
 
             Method getId = Utility.getMethodQuietly(advertisingInfo.getClass(), "getId");
@@ -101,9 +122,10 @@ private static AttributionIdentifiers getAndroidId(Context context) {
                     advertisingInfo.getClass(),
                     "isLimitAdTrackingEnabled");
             if (getId == null || isLimitAdTrackingEnabled == null) {
-                return identifiers;
+                return null;
             }
 
+            AttributionIdentifiers identifiers = new AttributionIdentifiers();
             identifiers.androidAdvertiserId =
                     (String) Utility.invokeMethodQuietly(advertisingInfo, getId);
             identifiers.limitTracking = (Boolean) Utility.invokeMethodQuietly(
@@ -112,7 +134,27 @@ private static AttributionIdentifiers getAndroidId(Context context) {
         } catch (Exception e) {
             Utility.logd("android_id", e);
         }
-        return identifiers;
+        return null;
+    }
+
+    private static AttributionIdentifiers getAndroidIdViaService(Context context) {
+        GoogleAdServiceConnection connection = new GoogleAdServiceConnection();
+        Intent intent = new Intent("com.google.android.gms.ads.identifier.service.START");
+        intent.setPackage("com.google.android.gms");
+        if(context.bindService(intent, connection, Context.BIND_AUTO_CREATE)) {
+            try {
+                GoogleAdInfo adInfo = new GoogleAdInfo(connection.getBinder());
+                AttributionIdentifiers identifiers = new AttributionIdentifiers();
+                identifiers.androidAdvertiserId = adInfo.getAdvertiserId();
+                identifiers.limitTracking = adInfo.isTrackingLimited();
+                return identifiers;
+            } catch (Exception exception) {
+                Utility.logd("android_id", exception);
+            } finally {
+                context.unbindService(connection);
+            }
+        }
+        return null;
     }
 
     public static AttributionIdentifiers getAttributionIdentifiers(Context context) {
@@ -183,4 +225,79 @@ public String getAndroidAdvertiserId() {
     public boolean isTrackingLimited() {
         return limitTracking;
     }
+
+    private static final class GoogleAdServiceConnection implements ServiceConnection {
+        private AtomicBoolean consumed = new AtomicBoolean(false);
+        private final BlockingQueue<IBinder> queue = new LinkedBlockingDeque<>();
+
+        @Override
+        public void onServiceConnected(ComponentName name, IBinder service) {
+            try {
+                queue.put(service);
+            } catch (InterruptedException e) {
+            }
+        }
+
+        @Override
+        public void onServiceDisconnected(ComponentName name) {
+        }
+
+        public IBinder getBinder() throws InterruptedException {
+            if (consumed.compareAndSet(true, true)) {
+                throw new IllegalStateException("Binder already consumed");
+            }
+            return queue.take();
+        }
+    }
+
+    private static final class GoogleAdInfo implements IInterface {
+        private static final int FIRST_TRANSACTION_CODE = Binder.FIRST_CALL_TRANSACTION;
+        private static final int SECOND_TRANSACTION_CODE = FIRST_TRANSACTION_CODE + 1;
+
+        private IBinder binder;
+
+        GoogleAdInfo(IBinder binder) {
+            this.binder = binder;
+        }
+
+        @Override
+        public IBinder asBinder() {
+            return binder;
+        }
+
+        public String getAdvertiserId() throws RemoteException {
+            Parcel data = Parcel.obtain();
+            Parcel reply = Parcel.obtain();
+            String id;
+            try {
+                data.writeInterfaceToken(
+                        "com.google.android.gms.ads.identifier.internal.IAdvertisingIdService");
+                binder.transact(FIRST_TRANSACTION_CODE, data, reply, 0);
+                reply.readException();
+                id = reply.readString();
+            } finally {
+                reply.recycle();
+                data.recycle();
+            }
+            return id;
+        }
+
+        public boolean isTrackingLimited() throws RemoteException {
+            Parcel data = Parcel.obtain();
+            Parcel reply = Parcel.obtain();
+            boolean limitAdTracking;
+            try {
+                data.writeInterfaceToken(
+                        "com.google.android.gms.ads.identifier.internal.IAdvertisingIdService");
+                data.writeInt(1);
+                binder.transact(SECOND_TRANSACTION_CODE, data, reply, 0);
+                reply.readException();
+                limitAdTracking = 0 != reply.readInt();
+            } finally {
+                reply.recycle();
+                data.recycle();
+            }
+            return limitAdTracking;
+        }
+    }
 }
diff --git a/facebook/src/com/facebook/internal/InternalSettings.java b/facebook/src/com/facebook/internal/InternalSettings.java
new file mode 100644
index 000000000..16a2d2929
--- /dev/null
+++ b/facebook/src/com/facebook/internal/InternalSettings.java
@@ -0,0 +1,39 @@
+/**
+ * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.
+ *
+ * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
+ * copy, modify, and distribute this software in source code or binary form for use
+ * in connection with the web services and APIs provided by Facebook.
+ *
+ * As with any software that integrates with the Facebook platform, your use of
+ * this software is subject to the Facebook Developer Principles and Policies
+ * [http://developers.facebook.com/policy/]. This copyright notice shall be
+ * included in all copies or substantial portions of the software.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
+ * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
+ * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
+ * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
+ * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+package com.facebook.internal;
+
+public class InternalSettings {
+    /**
+     * This value is used by the unity sdk to set the custom version. The user agent format is
+     * sdk_version/custom_user_agent
+     * For example
+     * FBAndroidSDK.4.2.0/Unity.7.0.1
+     */
+    private static volatile String mCustomUserAgent;
+
+    public static void setCustomUserAgent(String customUserAgent) {
+        mCustomUserAgent = customUserAgent;
+    }
+
+    public static String getCustomUserAgent() {
+        return mCustomUserAgent;
+    }
+}
diff --git a/facebook/src/com/facebook/login/LoginManager.java b/facebook/src/com/facebook/login/LoginManager.java
index 5c71a6cc5..a97b8a769 100644
--- a/facebook/src/com/facebook/login/LoginManager.java
+++ b/facebook/src/com/facebook/login/LoginManager.java
@@ -63,7 +63,6 @@
     private DefaultAudience defaultAudience = DefaultAudience.FRIENDS;
     private LoginClient.Request pendingLoginRequest;
     private HashMap<String, String> pendingLoggingExtras;
-    private Context context;
     private LoginLogger loginLogger;
 
     LoginManager() {
@@ -355,7 +354,7 @@ private void startLogin(
 
         this.pendingLoginRequest = request;
         this.pendingLoggingExtras = new HashMap<>();
-        this.context = startActivityDelegate.getActivityContext();
+        this.loginLogger = getLoggerForContext(startActivityDelegate.getActivityContext());
 
         logStartLogin();
 
@@ -388,31 +387,38 @@ public boolean onActivityResult(int resultCode, Intent data) {
         }
     }
 
-    private LoginLogger getLogger() {
-        if (loginLogger == null ||
-                !loginLogger.getApplicationId().equals(
-                        pendingLoginRequest.getApplicationId())) {
-            loginLogger = new LoginLogger(
-                    context,
-                    pendingLoginRequest.getApplicationId());
+    private LoginLogger getLoggerForContext(Context context) {
+        if (context == null || pendingLoginRequest == null) {
+            return null;
         }
-        return loginLogger;
+
+        LoginLogger logger = this.loginLogger;
+        if (logger == null ||
+                !logger.getApplicationId().equals(pendingLoginRequest.getApplicationId())) {
+            logger = new LoginLogger(context, pendingLoginRequest.getApplicationId());
+        }
+        return logger;
     }
 
     private void logStartLogin() {
-        getLogger().logStartLogin(pendingLoginRequest);
+        if (loginLogger != null && pendingLoginRequest != null) {
+            loginLogger.logStartLogin(pendingLoginRequest);
+        }
     }
 
     private void logCompleteLogin(LoginClient.Result.Code result, Map<String, String> resultExtras,
                                   Exception exception) {
+        if (loginLogger == null) {
+            return;
+        }
         if (pendingLoginRequest == null) {
             // We don't expect this to happen, but if it does, log an event for diagnostic purposes.
-            getLogger().logUnexpectedError(
-                LoginLogger.EVENT_NAME_LOGIN_COMPLETE,
-                "Unexpected call to logCompleteLogin with null pendingAuthorizationRequest."
+            loginLogger.logUnexpectedError(
+                    LoginLogger.EVENT_NAME_LOGIN_COMPLETE,
+                    "Unexpected call to logCompleteLogin with null pendingAuthorizationRequest."
             );
         } else {
-            getLogger().logCompleteLogin(
+            loginLogger.logCompleteLogin(
                     pendingLoginRequest.getAuthId(),
                     pendingLoggingExtras,
                     result,
@@ -501,17 +507,14 @@ private void finishLogin(
                     || (loginResult != null
                            && loginResult.getRecentlyGrantedPermissions().size() == 0)) {
                 callback.onCancel();
-                return;
-            }
-            if (exception != null) {
+            } else if (exception != null) {
                 callback.onError(exception);
             } else if (newToken != null) {
                 callback.onSuccess(loginResult);
             }
         }
 
-        // Cleanup saved context to avoid leaking
-        this.context = null;
+        this.pendingLoginRequest = null;
         this.loginLogger = null;
     }
 
diff --git a/facebook/src/com/facebook/share/model/ShareMedia.java b/facebook/src/com/facebook/share/model/ShareMedia.java
index 34e2d4db7..fe7c59ba7 100644
--- a/facebook/src/com/facebook/share/model/ShareMedia.java
+++ b/facebook/src/com/facebook/share/model/ShareMedia.java
@@ -39,10 +39,9 @@ protected ShareMedia(final Builder builder) {
     }
 
     /**
-     * Returns the parameters associated with the shared media.
-     *
-     * @return the parameters of the share.
+     * @deprecated This method is deprecated. Use GraphRequest directly to set parameters.
      */
+    @Deprecated
     public Bundle getParameters() {
         return new Bundle(params);
     }
@@ -65,21 +64,18 @@ public void writeToParcel(Parcel dest, int flags) {
         private Bundle params = new Bundle();
 
         /**
-         * Set a parameter for the shared media.
-         * @param key the key.
-         * @param value the value.
-         * @return the builder.
+         * @deprecated This method is deprecated. Use GraphRequest directly to set parameters.
          */
+        @Deprecated
         public B setParameter(final String key, final String value) {
             params.putString(key, value);
             return (B) this;
         }
 
         /**
-         * Set the parameters for the shared media.
-         * @param parameters a bundle containing the parameters for the share.
-         * @return the builder.
+         * @deprecated This method is deprecated. Use GraphRequest directly to set parameters.
          */
+        @Deprecated
         public B setParameters(final Bundle parameters) {
             params.putAll(parameters);
             return (B) this;
diff --git a/facebook/tests/src/com/facebook/appevents/AppEventsLoggerTests.java b/facebook/tests/src/com/facebook/appevents/AppEventsLoggerTests.java
index 2b427bdfe..e3bf4d6c7 100644
--- a/facebook/tests/src/com/facebook/appevents/AppEventsLoggerTests.java
+++ b/facebook/tests/src/com/facebook/appevents/AppEventsLoggerTests.java
@@ -82,62 +82,4 @@ public void run() {
             broadcastManager.unregisterReceiver(waitForBroadcastReceiver);
         }
     }
-
-    public void testPersistedEvents() throws IOException, ClassNotFoundException {
-        AppEventsLogger.setFlushBehavior(AppEventsLogger.FlushBehavior.EXPLICIT_ONLY);
-
-        final WaitForBroadcastReceiver waitForBroadcastReceiver = new WaitForBroadcastReceiver();
-        final LocalBroadcastManager broadcastManager =
-                LocalBroadcastManager.getInstance(getActivity());
-
-        try {
-            broadcastManager.registerReceiver(waitForBroadcastReceiver,
-                    new IntentFilter(AppEventsLogger.ACTION_APP_EVENTS_FLUSHED));
-
-            getActivity().getFileStreamPath(
-                    AppEventsLogger.PersistedEvents.PERSISTED_EVENTS_FILENAME).delete();
-
-            AccessToken accessToken = getAccessTokenForSharedUser();
-            AppEventsLogger logger1 = AppEventsLogger.newLogger(getActivity(), accessToken);
-
-            logger1.logEvent("an_event");
-
-            AppEventsLogger.onContextStop();
-
-            FileInputStream fis = getActivity().openFileInput(
-                    AppEventsLogger.PersistedEvents.PERSISTED_EVENTS_FILENAME);
-            assertNotNull(fis);
-
-            ObjectInputStream ois = new ObjectInputStream(fis);
-            Object obj = ois.readObject();
-            ois.close();
-
-            assertTrue(obj instanceof HashMap);
-
-            logger1.logEvent("another_event");
-
-            waitForBroadcastReceiver.incrementExpectCount();
-
-            // Events are added async if we flush right away the event might not have made it to the
-            // queue to be flushed. As a workaround give the other thread time to add it.
-            try {
-                Thread.sleep(100l);
-            } catch (Exception ex) {
-                // Ignore
-            }
-            logger1.flush();
-
-            waitForBroadcastReceiver.waitForExpectedCalls();
-            List<Intent> receivedIntents = waitForBroadcastReceiver.getReceivedIntents();
-            assertEquals(1, receivedIntents.size());
-
-            Intent intent = receivedIntents.get(0);
-            assertNotNull(intent);
-
-            assertEquals(2, intent.getIntExtra(
-                    AppEventsLogger.APP_EVENTS_EXTRA_NUM_EVENTS_FLUSHED, 0));
-        } finally {
-            broadcastManager.unregisterReceiver(waitForBroadcastReceiver);
-        }
-    }
 }
diff --git a/libs/BUCK b/libs/BUCK
index 1a2a7548a..9d476d1d5 100644
--- a/libs/BUCK
+++ b/libs/BUCK
@@ -8,7 +8,7 @@ prebuilt_jar(
 
 prebuilt_jar(
   name = 'bolts',
-  binary_jar = 'bolts.jar',
+  binary_jar = 'bolts-android-1.1.2.jar',
   visibility = [
     'PUBLIC',
   ],
diff --git a/samples/HelloFacebookSample/AndroidManifest.xml b/samples/HelloFacebookSample/AndroidManifest.xml
index 053b3593e..6fcb77c70 100644
--- a/samples/HelloFacebookSample/AndroidManifest.xml
+++ b/samples/HelloFacebookSample/AndroidManifest.xml
@@ -20,7 +20,7 @@
 -->
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.facebook.samples.hellofacebook"
+          package="com.example.hellofacebook"
           android:versionCode="1"
           android:versionName="1.0">
     <uses-sdk android:minSdkVersion="9"/>
@@ -48,7 +48,7 @@
         <provider android:authorities="com.facebook.app.FacebookContentProvider355198514515820"
                   android:name="com.facebook.FacebookContentProvider"
                   android:exported="true"/>
-        <receiver android:name="com.facebook.samples.hellofacebook.HelloFacebookBroadcastReceiver">
+        <receiver android:name="com.example.hellofacebook.HelloFacebookBroadcastReceiver">
             <intent-filter>
                 <action android:name="com.facebook.platform.AppCallResultBroadcast" />
             </intent-filter>
diff --git a/samples/HelloFacebookSample/BUCK b/samples/HelloFacebookSample/BUCK
index 27198e91c..9796c61d9 100644
--- a/samples/HelloFacebookSample/BUCK
+++ b/samples/HelloFacebookSample/BUCK
@@ -1,7 +1,7 @@
 android_resource(
   name = 'res',
   res = 'res',
-  package = 'com.facebook',
+  package = 'com.example.hellofacebook',
   deps = [
     '//facebook:android-sdk',
   ],
@@ -20,7 +20,6 @@ android_library(
 android_binary(
   name = 'app',
   manifest = 'AndroidManifest.xml',
-  target = 'android-16',
   keystore = '//keystores:debug',
   package_type = 'debug',
   deps = [
@@ -29,3 +28,8 @@ android_binary(
     '//libs:android-support-v4',
   ],
 )
+
+project_config(
+  src_target = ':app',
+  src_roots = ['src'],
+)
diff --git a/samples/HelloFacebookSample/src/com/facebook/samples/hellofacebook/HelloFacebookBroadcastReceiver.java b/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookBroadcastReceiver.java
similarity index 97%
rename from samples/HelloFacebookSample/src/com/facebook/samples/hellofacebook/HelloFacebookBroadcastReceiver.java
rename to samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookBroadcastReceiver.java
index d3f926d9d..a8278bc92 100644
--- a/samples/HelloFacebookSample/src/com/facebook/samples/hellofacebook/HelloFacebookBroadcastReceiver.java
+++ b/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookBroadcastReceiver.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.hellofacebook;
+package com.example.hellofacebook;
 
 import android.os.Bundle;
 import android.util.Log;
diff --git a/samples/HelloFacebookSample/src/com/facebook/samples/hellofacebook/HelloFacebookSampleActivity.java b/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java
similarity index 93%
rename from samples/HelloFacebookSample/src/com/facebook/samples/hellofacebook/HelloFacebookSampleActivity.java
rename to samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java
index ac9c97e1b..749c6d59a 100644
--- a/samples/HelloFacebookSample/src/com/facebook/samples/hellofacebook/HelloFacebookSampleActivity.java
+++ b/samples/HelloFacebookSample/src/com/example/hellofacebook/HelloFacebookSampleActivity.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.hellofacebook;
+package com.example.hellofacebook;
 
 import android.app.AlertDialog;
 import android.content.Intent;
@@ -40,17 +40,13 @@
 import com.facebook.login.widget.ProfilePictureView;
 import com.facebook.share.ShareApi;
 import com.facebook.share.Sharer;
-import com.facebook.share.internal.ShareInternalUtility;
 import com.facebook.share.model.SharePhoto;
 import com.facebook.share.model.SharePhotoContent;
 import com.facebook.share.model.ShareLinkContent;
 import com.facebook.share.widget.ShareDialog;
 
-import org.json.JSONObject;
-
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.Date;
 
 public class HelloFacebookSampleActivity extends FragmentActivity {
 
@@ -63,7 +59,7 @@
     };
 
     private final String PENDING_ACTION_BUNDLE_KEY =
-            "com.facebook.samples.hellofacebook:PendingAction";
+            "com.example.hellofacebook:PendingAction";
 
     private Button postStatusUpdateButton;
     private Button postPhotoButton;
@@ -320,6 +316,10 @@ private void postPhoto() {
             ShareApi.share(sharePhotoContent, shareCallback);
         } else {
             pendingAction = PendingAction.POST_PHOTO;
+            // We need to get new permissions, then complete the action when we get called back.
+            LoginManager.getInstance().logInWithPublishPermissions(
+                    this,
+                    Arrays.asList(PERMISSION));
         }
     }
 
@@ -330,22 +330,7 @@ private boolean hasPublishPermission() {
 
     private void performPublish(PendingAction action, boolean allowNoToken) {
         AccessToken accessToken = AccessToken.getCurrentAccessToken();
-        if (accessToken != null) {
-            pendingAction = action;
-            if (hasPublishPermission()) {
-                // We can do the action right away.
-                handlePendingAction();
-                return;
-            } else {
-                // We need to get new permissions, then complete the action when we get called back.
-                LoginManager.getInstance().logInWithPublishPermissions(
-                        this,
-                        Arrays.asList(PERMISSION));
-                return;
-            }
-        }
-
-        if (allowNoToken) {
+        if (accessToken != null || allowNoToken) {
             pendingAction = action;
             handlePendingAction();
         }
diff --git a/samples/Iconicus/AndroidManifest.xml b/samples/Iconicus/AndroidManifest.xml
index ba544a0c1..7a6f18198 100644
--- a/samples/Iconicus/AndroidManifest.xml
+++ b/samples/Iconicus/AndroidManifest.xml
@@ -20,7 +20,7 @@
 -->
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.facebook.iconicus" >
+    package="com.example.iconicus" >
 
     <uses-permission android:name="android.permission.INTERNET"/>
 
diff --git a/samples/Iconicus/BUCK b/samples/Iconicus/BUCK
new file mode 100644
index 000000000..7d7dfd9fb
--- /dev/null
+++ b/samples/Iconicus/BUCK
@@ -0,0 +1,35 @@
+android_resource(
+  name = 'res',
+  res = 'res',
+  package = 'com.example.iconicus',
+  deps = [
+    '//facebook:android-sdk',
+  ],
+)
+
+android_library(
+  name = 'lib',
+  srcs = glob(['src/**/*.java']),
+  deps = [
+    ':res',
+    '//facebook:android-sdk',
+    '//libs:android-support-v4',
+  ],
+)
+
+android_binary(
+  name = 'app',
+  manifest = 'AndroidManifest.xml',
+  keystore = '//keystores:debug',
+  package_type = 'debug',
+  deps = [
+    ':lib',
+    '//facebook:android-sdk',
+    '//libs:android-support-v4',
+  ],
+)
+
+project_config(
+  src_target = ':app',
+  src_roots = ['src'],
+)
diff --git a/samples/Iconicus/build.gradle b/samples/Iconicus/build.gradle
index 7f7525e2f..8d3727919 100644
--- a/samples/Iconicus/build.gradle
+++ b/samples/Iconicus/build.gradle
@@ -16,7 +16,7 @@ android {
     buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
 
     defaultConfig {
-        applicationId "com.facebook.iconicus"
+        applicationId "com.example.iconicus"
         minSdkVersion 11
         targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
     }
diff --git a/samples/Iconicus/src/com/facebook/iconicus/GameBoard.java b/samples/Iconicus/src/com/example/iconicus/GameBoard.java
similarity index 99%
rename from samples/Iconicus/src/com/facebook/iconicus/GameBoard.java
rename to samples/Iconicus/src/com/example/iconicus/GameBoard.java
index e891bdcdc..6624bf4dd 100644
--- a/samples/Iconicus/src/com/facebook/iconicus/GameBoard.java
+++ b/samples/Iconicus/src/com/example/iconicus/GameBoard.java
@@ -18,10 +18,9 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.iconicus;
+package com.example.iconicus;
 
 import android.net.Uri;
-import android.util.Log;
 
 import java.util.ArrayList;
 import java.util.Arrays;
diff --git a/samples/Iconicus/src/com/facebook/iconicus/GameController.java b/samples/Iconicus/src/com/example/iconicus/GameController.java
similarity index 98%
rename from samples/Iconicus/src/com/facebook/iconicus/GameController.java
rename to samples/Iconicus/src/com/example/iconicus/GameController.java
index 73e8782ff..033d9ad26 100644
--- a/samples/Iconicus/src/com/facebook/iconicus/GameController.java
+++ b/samples/Iconicus/src/com/example/iconicus/GameController.java
@@ -18,12 +18,11 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.iconicus;
+package com.example.iconicus;
 
 import android.content.Context;
 import android.content.Intent;
 import android.graphics.drawable.Drawable;
-import android.media.Image;
 import android.net.Uri;
 import android.view.View;
 import android.view.ViewGroup;
@@ -31,7 +30,6 @@
 import android.widget.BaseAdapter;
 import android.widget.GridView;
 import android.widget.ImageView;
-import android.widget.TextView;
 import android.widget.Toast;
 
 import bolts.AppLinks;
diff --git a/samples/Iconicus/src/com/facebook/iconicus/MainActivity.java b/samples/Iconicus/src/com/example/iconicus/MainActivity.java
similarity index 98%
rename from samples/Iconicus/src/com/facebook/iconicus/MainActivity.java
rename to samples/Iconicus/src/com/example/iconicus/MainActivity.java
index a5ae03574..1a2e6e681 100644
--- a/samples/Iconicus/src/com/facebook/iconicus/MainActivity.java
+++ b/samples/Iconicus/src/com/example/iconicus/MainActivity.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.iconicus;
+package com.example.iconicus;
 
 import android.app.Activity;
 import android.content.ClipData;
@@ -39,9 +39,6 @@
     private GridView board;
     private GridView validNumbers;
 
-    private String[] numbers = new String[81];
-
-
     private GameController gameController;
 
     @Override
diff --git a/samples/RPSSample/AndroidManifest.xml b/samples/RPSSample/AndroidManifest.xml
index 1abdc0eee..81aaddb3d 100644
--- a/samples/RPSSample/AndroidManifest.xml
+++ b/samples/RPSSample/AndroidManifest.xml
@@ -20,7 +20,7 @@
 -->
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.facebook.samples.rps"
+          package="com.example.rps"
           android:versionCode="1"
           android:versionName="1.0">
     <uses-sdk android:minSdkVersion="9"/>
@@ -30,7 +30,7 @@
                  android:icon="@drawable/icon"
                  android:theme="@android:style/Theme.NoTitleBar"
             >
-        <activity android:name="MainActivity"
+        <activity android:name="com.example.rps.MainActivity"
                   android:label="@string/app_name"
                   android:screenOrientation="portrait"
                   android:windowSoftInputMode="adjustResize">
diff --git a/samples/RPSSample/BUCK b/samples/RPSSample/BUCK
new file mode 100644
index 000000000..f2e6f55ec
--- /dev/null
+++ b/samples/RPSSample/BUCK
@@ -0,0 +1,35 @@
+android_resource(
+  name = 'res',
+  res = 'res',
+  package = 'com.example.rps',
+  deps = [
+    '//facebook:android-sdk',
+  ],
+)
+
+android_library(
+  name = 'lib',
+  srcs = glob(['src/**/*.java']),
+  deps = [
+    ':res',
+    '//facebook:android-sdk',
+    '//libs:android-support-v4',
+  ],
+)
+
+android_binary(
+  name = 'app',
+  manifest = 'AndroidManifest.xml',
+  keystore = '//keystores:debug',
+  package_type = 'debug',
+  deps = [
+    ':lib',
+    '//facebook:android-sdk',
+    '//libs:android-support-v4',
+  ],
+)
+
+project_config(
+  src_target = ':app',
+  src_roots = ['src'],
+)
diff --git a/samples/RPSSample/post_app_objects.sh b/samples/RPSSample/post_app_objects.sh
index ba4533438..37b56b9ea 100755
--- a/samples/RPSSample/post_app_objects.sh
+++ b/samples/RPSSample/post_app_objects.sh
@@ -72,7 +72,7 @@ curl https://graph.facebook.com/app/app_link_hosts -F access_token="$APPID|$APPS
   ]' \
 -F android=' [
     {
-      "package" : "com.facebook.samples.rps",
+      "package" : "com.example.rps",
       "app_name" : "RPS Sample",
     },
   ]' \
@@ -120,7 +120,7 @@ echo "  scissors=$SCISSORS_OBJID"
 # step 6 - write .java file for common objects
 #
 
-MFILE=src/com/facebook/samples/rps/CommonObjects.java
+MFILE=src/com/example/rps/CommonObjects.java
 
 cat > $MFILE << EOF
 /*
@@ -139,7 +139,7 @@ cat > $MFILE << EOF
  * limitations under the License.
  */
 
-package com.facebook.samples.rps;
+package com.example.rps;
 
 public class CommonObjects {
     public static final String BUILT_IN_OPEN_GRAPH_OBJECTS[] = {
diff --git a/samples/RPSSample/res/layout/main.xml b/samples/RPSSample/res/layout/main.xml
index 980d6217a..f982323d4 100644
--- a/samples/RPSSample/res/layout/main.xml
+++ b/samples/RPSSample/res/layout/main.xml
@@ -25,15 +25,15 @@
         android:layout_width="match_parent"
         android:layout_height="match_parent">
 
-    <fragment android:name="com.facebook.samples.rps.RpsFragment"
+    <fragment android:name="com.example.rps.RpsFragment"
               android:id="@+id/rps_fragment"
               android:layout_width="match_parent"
               android:layout_height="match_parent" />
-    <fragment android:name="com.facebook.samples.rps.usersettings.UserSettingsFragment"
+    <fragment android:name="com.example.rps.usersettings.UserSettingsFragment"
               android:id="@+id/settings_fragment"
               android:layout_width="match_parent"
               android:layout_height="match_parent" />
-    <fragment android:name="com.facebook.samples.rps.ContentFragment"
+    <fragment android:name="com.example.rps.ContentFragment"
               android:id="@+id/content_fragment"
               android:layout_width="match_parent"
               android:layout_height="match_parent" />
diff --git a/samples/RPSSample/src/com/facebook/samples/rps/CommonObjects.java b/samples/RPSSample/src/com/example/rps/CommonObjects.java
similarity index 97%
rename from samples/RPSSample/src/com/facebook/samples/rps/CommonObjects.java
rename to samples/RPSSample/src/com/example/rps/CommonObjects.java
index d1f1fe965..d78770cd8 100644
--- a/samples/RPSSample/src/com/facebook/samples/rps/CommonObjects.java
+++ b/samples/RPSSample/src/com/example/rps/CommonObjects.java
@@ -19,7 +19,7 @@
  */
 
 
-package com.facebook.samples.rps;
+package com.example.rps;
 
 public class CommonObjects {
     public static final String BUILT_IN_OPEN_GRAPH_OBJECTS[] = {
diff --git a/samples/RPSSample/src/com/facebook/samples/rps/ContentFragment.java b/samples/RPSSample/src/com/example/rps/ContentFragment.java
similarity index 98%
rename from samples/RPSSample/src/com/facebook/samples/rps/ContentFragment.java
rename to samples/RPSSample/src/com/example/rps/ContentFragment.java
index d923efe82..9dac9d898 100644
--- a/samples/RPSSample/src/com/facebook/samples/rps/ContentFragment.java
+++ b/samples/RPSSample/src/com/example/rps/ContentFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.rps;
+package com.example.rps;
 
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
diff --git a/samples/RPSSample/src/com/facebook/samples/rps/MainActivity.java b/samples/RPSSample/src/com/example/rps/MainActivity.java
similarity index 99%
rename from samples/RPSSample/src/com/facebook/samples/rps/MainActivity.java
rename to samples/RPSSample/src/com/example/rps/MainActivity.java
index 50a08fef8..0c63b0e2f 100644
--- a/samples/RPSSample/src/com/facebook/samples/rps/MainActivity.java
+++ b/samples/RPSSample/src/com/example/rps/MainActivity.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.rps;
+package com.example.rps;
 
 import android.content.Intent;
 import android.net.Uri;
@@ -37,7 +37,7 @@
 import com.facebook.share.model.GameRequestContent;
 import com.facebook.share.widget.GameRequestDialog;
 
-import static com.facebook.samples.rps.RpsGameUtils.INVALID_CHOICE;
+import static com.example.rps.RpsGameUtils.INVALID_CHOICE;
 
 public class MainActivity extends FragmentActivity {
     private static final String TAG = "MainActivity";
diff --git a/samples/RPSSample/src/com/facebook/samples/rps/OpenGraphConsts.java b/samples/RPSSample/src/com/example/rps/OpenGraphConsts.java
similarity index 97%
rename from samples/RPSSample/src/com/facebook/samples/rps/OpenGraphConsts.java
rename to samples/RPSSample/src/com/example/rps/OpenGraphConsts.java
index ac8914151..ba30e5ce3 100644
--- a/samples/RPSSample/src/com/facebook/samples/rps/OpenGraphConsts.java
+++ b/samples/RPSSample/src/com/example/rps/OpenGraphConsts.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.rps;
+package com.example.rps;
 
 public class OpenGraphConsts {
     public static final String THROW_ACTION_TYPE = "fb_sample_rps:throw";
diff --git a/samples/RPSSample/src/com/facebook/samples/rps/RpsFragment.java b/samples/RPSSample/src/com/example/rps/RpsFragment.java
similarity index 99%
rename from samples/RPSSample/src/com/facebook/samples/rps/RpsFragment.java
rename to samples/RPSSample/src/com/example/rps/RpsFragment.java
index ad903d6e8..7fe141832 100644
--- a/samples/RPSSample/src/com/facebook/samples/rps/RpsFragment.java
+++ b/samples/RPSSample/src/com/example/rps/RpsFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.rps;
+package com.example.rps;
 
 import android.app.AlertDialog;
 import android.content.DialogInterface;
@@ -58,7 +58,7 @@
 import java.util.Arrays;
 import java.util.Random;
 
-import static com.facebook.samples.rps.RpsGameUtils.*;
+import static com.example.rps.RpsGameUtils.*;
 
 public class RpsFragment extends Fragment {
 
diff --git a/samples/RPSSample/src/com/facebook/samples/rps/RpsGameUtils.java b/samples/RPSSample/src/com/example/rps/RpsGameUtils.java
similarity index 98%
rename from samples/RPSSample/src/com/facebook/samples/rps/RpsGameUtils.java
rename to samples/RPSSample/src/com/example/rps/RpsGameUtils.java
index b7f07f6c8..db87462a1 100644
--- a/samples/RPSSample/src/com/facebook/samples/rps/RpsGameUtils.java
+++ b/samples/RPSSample/src/com/example/rps/RpsGameUtils.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.rps;
+package com.example.rps;
 
 public class RpsGameUtils {
     public enum RpsState {
diff --git a/samples/RPSSample/src/com/facebook/samples/rps/usersettings/UserSettingsFragment.java b/samples/RPSSample/src/com/example/rps/usersettings/UserSettingsFragment.java
similarity index 99%
rename from samples/RPSSample/src/com/facebook/samples/rps/usersettings/UserSettingsFragment.java
rename to samples/RPSSample/src/com/example/rps/usersettings/UserSettingsFragment.java
index a15c6181b..4b1bab031 100644
--- a/samples/RPSSample/src/com/facebook/samples/rps/usersettings/UserSettingsFragment.java
+++ b/samples/RPSSample/src/com/example/rps/usersettings/UserSettingsFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.rps.usersettings;
+package com.example.rps.usersettings;
 
 import android.content.Intent;
 import android.graphics.Bitmap;
@@ -41,7 +41,7 @@
 import com.facebook.internal.ImageDownloader;
 import com.facebook.internal.ImageRequest;
 import com.facebook.internal.ImageResponse;
-import com.facebook.samples.rps.R;
+import com.example.rps.R;
 import com.facebook.login.widget.LoginButton;
 
 import org.json.JSONObject;
diff --git a/samples/Scrumptious/AndroidManifest.xml b/samples/Scrumptious/AndroidManifest.xml
index 871461133..aff593587 100644
--- a/samples/Scrumptious/AndroidManifest.xml
+++ b/samples/Scrumptious/AndroidManifest.xml
@@ -20,7 +20,7 @@
 -->
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.facebook.scrumptious"
+    package="com.example.scrumptious"
     android:versionCode="1"
     android:versionName="1.0">
 
@@ -33,11 +33,11 @@
     <uses-feature android:name="android.hardware.camera.autofocus" />
 
     <application
-        android:name=".ScrumptiousApplication"
+        android:name="com.example.scrumptious.ScrumptiousApplication"
         android:icon="@drawable/add_food"
         android:label="@string/app_name">
         <activity
-            android:name="MainActivity"
+            android:name="com.example.scrumptious.MainActivity"
             android:label="@string/app_name"
             android:theme="@style/Theme.Scrumptious"
             android:windowSoftInputMode="adjustResize">
@@ -47,7 +47,7 @@
             </intent-filter>
         </activity>
         <activity
-            android:name="PickerActivity"
+            android:name="com.example.scrumptious.PickerActivity"
             android:label="@string/app_name" />
         <activity
             android:name="com.facebook.FacebookActivity"
diff --git a/samples/Scrumptious/BUCK b/samples/Scrumptious/BUCK
new file mode 100644
index 000000000..61f0ab4c0
--- /dev/null
+++ b/samples/Scrumptious/BUCK
@@ -0,0 +1,35 @@
+android_resource(
+  name = 'res',
+  res = 'res',
+  package = 'com.example.scrumptious',
+  deps = [
+    '//facebook:android-sdk',
+  ],
+)
+
+android_library(
+  name = 'lib',
+  srcs = glob(['src/**/*.java']),
+  deps = [
+    ':res',
+    '//facebook:android-sdk',
+    '//libs:android-support-v4',
+  ],
+)
+
+android_binary(
+  name = 'app',
+  manifest = 'AndroidManifest.xml',
+  keystore = '//keystores:debug',
+  package_type = 'debug',
+  deps = [
+    ':lib',
+    '//facebook:android-sdk',
+    '//libs:android-support-v4',
+  ],
+)
+
+project_config(
+  src_target = ':app',
+  src_roots = ['src'],
+)
diff --git a/samples/Scrumptious/res/layout-land/selection.xml b/samples/Scrumptious/res/layout-land/selection.xml
index 447bc9b6f..7309b4130 100644
--- a/samples/Scrumptious/res/layout-land/selection.xml
+++ b/samples/Scrumptious/res/layout-land/selection.xml
@@ -36,7 +36,7 @@
             android:layout_height="wrap_content"
             android:orientation="horizontal">
 
-            <com.facebook.scrumptious.FullListView
+            <com.example.scrumptious.FullListView
                 android:id="@+id/selection_list"
                 android:layout_width="fill_parent"
                 android:layout_height="wrap_content"
diff --git a/samples/Scrumptious/res/layout/main.xml b/samples/Scrumptious/res/layout/main.xml
index 511aacf58..61fbe89dd 100644
--- a/samples/Scrumptious/res/layout/main.xml
+++ b/samples/Scrumptious/res/layout/main.xml
@@ -25,15 +25,15 @@
         android:layout_width="fill_parent"
         android:layout_height="fill_parent">
 
-    <fragment android:name="com.facebook.scrumptious.SelectionFragment"
+    <fragment android:name="com.example.scrumptious.SelectionFragment"
               android:id="@+id/selectionFragment"
               android:layout_width="match_parent"
               android:layout_height="match_parent" />
-    <fragment android:name="com.facebook.scrumptious.SplashFragment"
+    <fragment android:name="com.example.scrumptious.SplashFragment"
               android:id="@+id/splashFragment"
               android:layout_width="match_parent"
               android:layout_height="match_parent" />
-    <fragment android:name="com.facebook.scrumptious.usersettings.UserSettingsFragment"
+    <fragment android:name="com.example.scrumptious.usersettings.UserSettingsFragment"
               android:id="@+id/userSettingsFragment"
               android:layout_width="match_parent"
               android:layout_height="match_parent" />
diff --git a/samples/Scrumptious/res/layout/selection.xml b/samples/Scrumptious/res/layout/selection.xml
index 57333d479..ed5b2606b 100644
--- a/samples/Scrumptious/res/layout/selection.xml
+++ b/samples/Scrumptious/res/layout/selection.xml
@@ -36,7 +36,7 @@
             android:layout_height="wrap_content"
             android:orientation="vertical">
 
-            <com.facebook.scrumptious.FullListView
+            <com.example.scrumptious.FullListView
                 android:id="@+id/selection_list"
                 android:layout_width="fill_parent"
                 android:layout_height="wrap_content"
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/BaseListElement.java b/samples/Scrumptious/src/com/example/scrumptious/BaseListElement.java
similarity index 98%
rename from samples/Scrumptious/src/com/facebook/scrumptious/BaseListElement.java
rename to samples/Scrumptious/src/com/example/scrumptious/BaseListElement.java
index bc7b60612..5cd8cff35 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/BaseListElement.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/BaseListElement.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious;
+package com.example.scrumptious;
 
 import android.content.Intent;
 import android.graphics.drawable.Drawable;
@@ -28,8 +28,6 @@
 
 import com.facebook.share.model.ShareOpenGraphAction;
 
-import org.json.JSONObject;
-
 /**
  * Base class for a list element in the Scrumptious main display, consisting of an
  * icon to the left, and a two line display to the right.
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/FullListView.java b/samples/Scrumptious/src/com/example/scrumptious/FullListView.java
similarity index 98%
rename from samples/Scrumptious/src/com/facebook/scrumptious/FullListView.java
rename to samples/Scrumptious/src/com/example/scrumptious/FullListView.java
index 57f93da92..0d6f84c80 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/FullListView.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/FullListView.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious;
+package com.example.scrumptious;
 
 import android.content.Context;
 import android.util.AttributeSet;
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/MainActivity.java b/samples/Scrumptious/src/com/example/scrumptious/MainActivity.java
similarity index 99%
rename from samples/Scrumptious/src/com/facebook/scrumptious/MainActivity.java
rename to samples/Scrumptious/src/com/example/scrumptious/MainActivity.java
index 973b0a65e..c12fe0342 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/MainActivity.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/MainActivity.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious;
+package com.example.scrumptious;
 
 import android.content.Intent;
 import android.os.Bundle;
@@ -29,7 +29,6 @@
 
 import com.facebook.AccessToken;
 import com.facebook.AccessTokenTracker;
-import com.facebook.FacebookSdk;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.CallbackManager;
 
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/PickerActivity.java b/samples/Scrumptious/src/com/example/scrumptious/PickerActivity.java
similarity index 97%
rename from samples/Scrumptious/src/com/facebook/scrumptious/PickerActivity.java
rename to samples/Scrumptious/src/com/example/scrumptious/PickerActivity.java
index b03592757..f4bfb1fec 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/PickerActivity.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/PickerActivity.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious;
+package com.example.scrumptious;
 
 import android.app.AlertDialog;
 import android.content.Context;
@@ -28,7 +28,6 @@
 import android.location.LocationListener;
 import android.location.LocationManager;
 import android.net.Uri;
-import android.os.Build;
 import android.os.Bundle;
 import android.os.Looper;
 import android.support.v4.app.Fragment;
@@ -36,9 +35,9 @@
 import android.support.v4.app.FragmentManager;
 import android.widget.Toast;
 import com.facebook.FacebookException;
-import com.facebook.scrumptious.picker.FriendPickerFragment;
-import com.facebook.scrumptious.picker.PickerFragment;
-import com.facebook.scrumptious.picker.PlacePickerFragment;
+import com.example.scrumptious.picker.FriendPickerFragment;
+import com.example.scrumptious.picker.PickerFragment;
+import com.example.scrumptious.picker.PlacePickerFragment;
 
 /**
  * The PickerActivity enhances the Friend or Place Picker by adding a title
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/ScrumptiousApplication.java b/samples/Scrumptious/src/com/example/scrumptious/ScrumptiousApplication.java
similarity index 98%
rename from samples/Scrumptious/src/com/facebook/scrumptious/ScrumptiousApplication.java
rename to samples/Scrumptious/src/com/example/scrumptious/ScrumptiousApplication.java
index 18d0bfcab..7027b4834 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/ScrumptiousApplication.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/ScrumptiousApplication.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious;
+package com.example.scrumptious;
 
 import android.app.Application;
 
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/SelectionFragment.java b/samples/Scrumptious/src/com/example/scrumptious/SelectionFragment.java
similarity index 99%
rename from samples/Scrumptious/src/com/facebook/scrumptious/SelectionFragment.java
rename to samples/Scrumptious/src/com/example/scrumptious/SelectionFragment.java
index ccb72dcd4..93d167c7a 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/SelectionFragment.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/SelectionFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious;
+package com.example.scrumptious;
 
 import android.app.Activity;
 import android.app.AlertDialog;
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/SplashFragment.java b/samples/Scrumptious/src/com/example/scrumptious/SplashFragment.java
similarity index 99%
rename from samples/Scrumptious/src/com/facebook/scrumptious/SplashFragment.java
rename to samples/Scrumptious/src/com/example/scrumptious/SplashFragment.java
index 839bcaa89..0663905c7 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/SplashFragment.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/SplashFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious;
+package com.example.scrumptious;
 
 import android.content.Intent;
 import android.os.Bundle;
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/picker/FriendPickerFragment.java b/samples/Scrumptious/src/com/example/scrumptious/picker/FriendPickerFragment.java
similarity index 96%
rename from samples/Scrumptious/src/com/facebook/scrumptious/picker/FriendPickerFragment.java
rename to samples/Scrumptious/src/com/example/scrumptious/picker/FriendPickerFragment.java
index 4bba11572..bc47b6e3a 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/picker/FriendPickerFragment.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/picker/FriendPickerFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious.picker;
+package com.example.scrumptious.picker;
 
 import android.app.Activity;
 import android.content.res.TypedArray;
@@ -30,7 +30,7 @@
 import com.facebook.GraphRequest;
 import com.facebook.appevents.AppEventsLogger;
 import com.facebook.FacebookException;
-import com.facebook.scrumptious.R;
+import com.example.scrumptious.R;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.Validate;
 
@@ -47,17 +47,17 @@
      * The key for a String parameter in the fragment's Intent bundle to indicate what user's
      * friends should be shown. The default is to display the currently authenticated user's friends.
      */
-    public static final String USER_ID_BUNDLE_KEY = "com.facebook.scrumptious.widget.FriendPickerFragment.UserId";
+    public static final String USER_ID_BUNDLE_KEY = "com.example.scrumptious.widget.FriendPickerFragment.UserId";
     /**
      * The key for a boolean parameter in the fragment's Intent bundle to indicate whether the
      * picker should allow more than one friend to be selected or not.
      */
-    public static final String MULTI_SELECT_BUNDLE_KEY = "com.facebook.scrumptious.widget.FriendPickerFragment.MultiSelect";
+    public static final String MULTI_SELECT_BUNDLE_KEY = "com.example.scrumptious.widget.FriendPickerFragment.MultiSelect";
     /**
      * The key for a String parameter in the fragment's Intent bundle to indicate the type of friend picker to use.
      * This value is case sensitive, and must match the enum @{link FriendPickerType}
      */
-    public static final String FRIEND_PICKER_TYPE_KEY = "com.facebook.scrumptious.widget.FriendPickerFragment.FriendPickerType";
+    public static final String FRIEND_PICKER_TYPE_KEY = "com.example.scrumptious.widget.FriendPickerFragment.FriendPickerType";
 
     public enum FriendPickerType {
         FRIENDS("/friends"),
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectAdapter.java b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectAdapter.java
similarity index 99%
rename from samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectAdapter.java
rename to samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectAdapter.java
index d79ce65e9..235b4b6b6 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectAdapter.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectAdapter.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious.picker;
+package com.example.scrumptious.picker;
 
 import android.content.Context;
 import android.graphics.Bitmap;
@@ -29,7 +29,7 @@
 import android.view.ViewStub;
 import android.widget.*;
 import com.facebook.FacebookException;
-import com.facebook.scrumptious.R;
+import com.example.scrumptious.R;
 import com.facebook.internal.ImageDownloader;
 import com.facebook.internal.ImageRequest;
 import com.facebook.internal.ImageResponse;
@@ -37,8 +37,6 @@
 
 import org.json.JSONObject;
 
-import java.net.URI;
-import java.net.URISyntaxException;
 import java.text.Collator;
 import java.util.*;
 
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectCursor.java b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectCursor.java
similarity index 98%
rename from samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectCursor.java
rename to samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectCursor.java
index 2ec4a73d1..4a8ee404d 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectCursor.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectCursor.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious.picker;
+package com.example.scrumptious.picker;
 
 import android.database.CursorIndexOutOfBoundsException;
 import org.json.JSONArray;
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectPagingLoader.java b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectPagingLoader.java
similarity index 99%
rename from samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectPagingLoader.java
rename to samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectPagingLoader.java
index 10640a257..ce12bba19 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/picker/GraphObjectPagingLoader.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/picker/GraphObjectPagingLoader.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious.picker;
+package com.example.scrumptious.picker;
 
 import android.content.Context;
 import android.support.v4.content.Loader;
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/picker/PickerFragment.java b/samples/Scrumptious/src/com/example/scrumptious/picker/PickerFragment.java
similarity index 98%
rename from samples/Scrumptious/src/com/facebook/scrumptious/picker/PickerFragment.java
rename to samples/Scrumptious/src/com/example/scrumptious/picker/PickerFragment.java
index 5214b5e92..7f1f3e7ae 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/picker/PickerFragment.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/picker/PickerFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious.picker;
+package com.example.scrumptious.picker;
 
 import android.app.Activity;
 import android.content.Context;
@@ -41,7 +41,7 @@
 import com.facebook.AccessTokenTracker;
 import com.facebook.FacebookException;
 import com.facebook.GraphRequest;
-import com.facebook.scrumptious.R;
+import com.example.scrumptious.R;
 
 import org.json.JSONObject;
 
@@ -62,27 +62,27 @@
      * The key for a boolean parameter in the fragment's Intent bundle to indicate whether the
      * picker should show pictures (if available) for the graph objects.
      */
-    public static final String SHOW_PICTURES_BUNDLE_KEY = "com.facebook.scrumptious.widget.PickerFragment.ShowPictures";
+    public static final String SHOW_PICTURES_BUNDLE_KEY = "com.example.scrumptious.widget.PickerFragment.ShowPictures";
     /**
      * The key for a String parameter in the fragment's Intent bundle to indicate which extra fields
      * beyond the default fields should be retrieved for any graph objects in the results.
      */
-    public static final String EXTRA_FIELDS_BUNDLE_KEY = "com.facebook.scrumptious.widget.PickerFragment.ExtraFields";
+    public static final String EXTRA_FIELDS_BUNDLE_KEY = "com.example.scrumptious.widget.PickerFragment.ExtraFields";
     /**
      * The key for a boolean parameter in the fragment's Intent bundle to indicate whether the
      * picker should display a title bar with a Done button.
      */
-    public static final String SHOW_TITLE_BAR_BUNDLE_KEY = "com.facebook.scrumptious.widget.PickerFragment.ShowTitleBar";
+    public static final String SHOW_TITLE_BAR_BUNDLE_KEY = "com.example.scrumptious.widget.PickerFragment.ShowTitleBar";
     /**
      * The key for a String parameter in the fragment's Intent bundle to indicate the text to
      * display in the title bar.
      */
-    public static final String TITLE_TEXT_BUNDLE_KEY = "com.facebook.scrumptious.widget.PickerFragment.TitleText";
+    public static final String TITLE_TEXT_BUNDLE_KEY = "com.example.scrumptious.widget.PickerFragment.TitleText";
     /**
      * The key for a String parameter in the fragment's Intent bundle to indicate the text to
      * display in the Done button.
      */
-    public static final String DONE_BUTTON_TEXT_BUNDLE_KEY = "com.facebook.scrumptious.widget.PickerFragment.DoneButtonText";
+    public static final String DONE_BUTTON_TEXT_BUNDLE_KEY = "com.example.scrumptious.widget.PickerFragment.DoneButtonText";
 
     private static final String SELECTION_BUNDLE_KEY = "com.facebook.android.PickerFragment.Selection";
     private static final String ACTIVITY_CIRCLE_SHOW_KEY = "com.facebook.android.PickerFragment.ActivityCircleShown";
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/picker/PlacePickerFragment.java b/samples/Scrumptious/src/com/example/scrumptious/picker/PlacePickerFragment.java
similarity index 97%
rename from samples/Scrumptious/src/com/facebook/scrumptious/picker/PlacePickerFragment.java
rename to samples/Scrumptious/src/com/example/scrumptious/picker/PlacePickerFragment.java
index 5e196f8a1..ce9188d49 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/picker/PlacePickerFragment.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/picker/PlacePickerFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious.picker;
+package com.example.scrumptious.picker;
 
 import android.app.Activity;
 import android.content.Context;
@@ -38,7 +38,7 @@
 import android.widget.ListView;
 import com.facebook.*;
 import com.facebook.appevents.AppEventsLogger;
-import com.facebook.scrumptious.R;
+import com.example.scrumptious.R;
 import com.facebook.internal.AnalyticsEvents;
 import com.facebook.internal.Logger;
 import com.facebook.internal.Utility;
@@ -52,27 +52,27 @@
      * The key for an int parameter in the fragment's Intent bundle to indicate the radius in meters around
      * the center point to search. The default is 1000 meters.
      */
-    public static final String RADIUS_IN_METERS_BUNDLE_KEY = "com.facebook.scrumptious.widget.PlacePickerFragment.RadiusInMeters";
+    public static final String RADIUS_IN_METERS_BUNDLE_KEY = "com.example.scrumptious.widget.PlacePickerFragment.RadiusInMeters";
     /**
      * The key for an int parameter in the fragment's Intent bundle to indicate what how many results to
      * return at a time. The default is 100 results.
      */
-    public static final String RESULTS_LIMIT_BUNDLE_KEY = "com.facebook.scrumptious.widget.PlacePickerFragment.ResultsLimit";
+    public static final String RESULTS_LIMIT_BUNDLE_KEY = "com.example.scrumptious.widget.PlacePickerFragment.ResultsLimit";
     /**
      * The key for a String parameter in the fragment's Intent bundle to indicate what search text should
      * be sent to the service. The default is to have no search text.
      */
-    public static final String SEARCH_TEXT_BUNDLE_KEY = "com.facebook.scrumptious.widget.PlacePickerFragment.SearchText";
+    public static final String SEARCH_TEXT_BUNDLE_KEY = "com.example.scrumptious.widget.PlacePickerFragment.SearchText";
     /**
      * The key for a Location parameter in the fragment's Intent bundle to indicate what geographical
      * location should be the center of the search.
      */
-    public static final String LOCATION_BUNDLE_KEY = "com.facebook.scrumptious.widget.PlacePickerFragment.Location";
+    public static final String LOCATION_BUNDLE_KEY = "com.example.scrumptious.widget.PlacePickerFragment.Location";
     /**
      * The key for a boolean parameter in the fragment's Intent bundle to indicate that the fragment
      * should display a search box and automatically update the search text as it changes.
      */
-    public static final String SHOW_SEARCH_BOX_BUNDLE_KEY = "com.facebook.scrumptious.widget.PlacePickerFragment.ShowSearchBox";
+    public static final String SHOW_SEARCH_BOX_BUNDLE_KEY = "com.example.scrumptious.widget.PlacePickerFragment.ShowSearchBox";
 
     /**
      * The default radius around the center point to search.
diff --git a/samples/Scrumptious/src/com/facebook/scrumptious/usersettings/UserSettingsFragment.java b/samples/Scrumptious/src/com/example/scrumptious/usersettings/UserSettingsFragment.java
similarity index 99%
rename from samples/Scrumptious/src/com/facebook/scrumptious/usersettings/UserSettingsFragment.java
rename to samples/Scrumptious/src/com/example/scrumptious/usersettings/UserSettingsFragment.java
index 097fbd010..e8d7924e0 100644
--- a/samples/Scrumptious/src/com/facebook/scrumptious/usersettings/UserSettingsFragment.java
+++ b/samples/Scrumptious/src/com/example/scrumptious/usersettings/UserSettingsFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.scrumptious.usersettings;
+package com.example.scrumptious.usersettings;
 
 import android.content.Intent;
 import android.graphics.Bitmap;
@@ -41,7 +41,7 @@
 import com.facebook.internal.ImageDownloader;
 import com.facebook.internal.ImageRequest;
 import com.facebook.internal.ImageResponse;
-import com.facebook.scrumptious.R;
+import com.example.scrumptious.R;
 import com.facebook.login.widget.LoginButton;
 
 import org.json.JSONObject;
diff --git a/samples/SwitchUserSample/AndroidManifest.xml b/samples/SwitchUserSample/AndroidManifest.xml
index 4ee5fb18e..7cfc69164 100644
--- a/samples/SwitchUserSample/AndroidManifest.xml
+++ b/samples/SwitchUserSample/AndroidManifest.xml
@@ -19,7 +19,7 @@
     CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 -->
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.facebook.samples.switchuser"
+    package="com.example.switchuser"
     android:versionCode="1"
     android:versionName="1.0">
 
@@ -29,7 +29,7 @@
         android:icon="@drawable/icon"
         android:label="@string/app_name">
         <activity
-            android:name=".MainActivity"
+            android:name="com.example.switchuser.MainActivity"
             android:label="@string/app_name"
             android:theme="@style/Theme.AppCompat"
             android:windowSoftInputMode="adjustResize">
diff --git a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/MainActivity.java b/samples/SwitchUserSample/src/com/example/switchuser/MainActivity.java
similarity index 96%
rename from samples/SwitchUserSample/src/com/facebook/samples/switchuser/MainActivity.java
rename to samples/SwitchUserSample/src/com/example/switchuser/MainActivity.java
index f0a5c9134..d7c705266 100644
--- a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/MainActivity.java
+++ b/samples/SwitchUserSample/src/com/example/switchuser/MainActivity.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.switchuser;
+package com.example.switchuser;
 
 import android.os.Bundle;
 import android.support.v4.app.FragmentManager;
@@ -155,12 +155,11 @@ private void showProfile() {
     }
 
     private boolean handleOptionsItemSelected(MenuItem item) {
-        switch (item.getItemId()) {
-            case R.id.menu_item_switch:
-                showSettings();
-                return true;
-            default:
-                return false;
+        if (item.getItemId() == R.id.menu_item_switch) {
+            showSettings();
+            return true;
+        } else {
+            return false;
         }
     }
 }
diff --git a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/ProfileFragment.java b/samples/SwitchUserSample/src/com/example/switchuser/ProfileFragment.java
similarity index 99%
rename from samples/SwitchUserSample/src/com/facebook/samples/switchuser/ProfileFragment.java
rename to samples/SwitchUserSample/src/com/example/switchuser/ProfileFragment.java
index a3b55ba39..cca057952 100644
--- a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/ProfileFragment.java
+++ b/samples/SwitchUserSample/src/com/example/switchuser/ProfileFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.switchuser;
+package com.example.switchuser;
 
 import android.content.Intent;
 import android.os.Bundle;
diff --git a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/SettingsFragment.java b/samples/SwitchUserSample/src/com/example/switchuser/SettingsFragment.java
similarity index 94%
rename from samples/SwitchUserSample/src/com/facebook/samples/switchuser/SettingsFragment.java
rename to samples/SwitchUserSample/src/com/example/switchuser/SettingsFragment.java
index 51299ac9b..c273f5cb4 100644
--- a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/SettingsFragment.java
+++ b/samples/SwitchUserSample/src/com/example/switchuser/SettingsFragment.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.switchuser;
+package com.example.switchuser;
 
 import android.content.Context;
 import android.content.Intent;
@@ -138,20 +138,19 @@ public void onListItemClick(ListView l, View view, int position, long id) {
     public boolean onOptionsItemSelected(MenuItem item) {
         Slot slot = slotManager.getSelectedSlot();
 
-        switch (item.getItemId()) {
-            case R.id.menu_item_clear_slot:
-                if (slot.getUserId() != null) {
-                    // Clear out data that this app stored in the cache
-                    // Not calling Session.closeAndClearTokenInformation() because we have
-                    // additional data stored in the cache.
-                    slot.clear();
-                    if (slot == slotManager.getSelectedSlot()) {
-                        slotManager.setCurrentUserSlot(SlotManager.NO_SLOT);
-                    }
-
-                    currentUserChanged();
+        if (item.getItemId() == R.id.menu_item_clear_slot) {
+            if (slot.getUserId() != null) {
+                // Clear out data that this app stored in the cache
+                // Not calling Session.closeAndClearTokenInformation() because we have
+                // additional data stored in the cache.
+                slot.clear();
+                if (slot == slotManager.getSelectedSlot()) {
+                    slotManager.setCurrentUserSlot(SlotManager.NO_SLOT);
                 }
-                return true;
+
+                currentUserChanged();
+            }
+            return true;
         }
 
         return super.onContextItemSelected(item);
diff --git a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/Slot.java b/samples/SwitchUserSample/src/com/example/switchuser/Slot.java
similarity index 98%
rename from samples/SwitchUserSample/src/com/facebook/samples/switchuser/Slot.java
rename to samples/SwitchUserSample/src/com/example/switchuser/Slot.java
index fcf68b68d..2b1d549db 100644
--- a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/Slot.java
+++ b/samples/SwitchUserSample/src/com/example/switchuser/Slot.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.switchuser;
+package com.example.switchuser;
 
 import com.facebook.AccessToken;
 import com.facebook.login.LoginBehavior;
diff --git a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/UserInfo.java b/samples/SwitchUserSample/src/com/example/switchuser/UserInfo.java
similarity index 98%
rename from samples/SwitchUserSample/src/com/facebook/samples/switchuser/UserInfo.java
rename to samples/SwitchUserSample/src/com/example/switchuser/UserInfo.java
index 9f0e74cce..f81aa9949 100644
--- a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/UserInfo.java
+++ b/samples/SwitchUserSample/src/com/example/switchuser/UserInfo.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.switchuser;
+package com.example.switchuser;
 
 import android.os.Parcel;
 import android.os.Parcelable;
diff --git a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/UserInfoCache.java b/samples/SwitchUserSample/src/com/example/switchuser/UserInfoCache.java
similarity index 98%
rename from samples/SwitchUserSample/src/com/facebook/samples/switchuser/UserInfoCache.java
rename to samples/SwitchUserSample/src/com/example/switchuser/UserInfoCache.java
index 7ff45ce19..c65e9fedd 100644
--- a/samples/SwitchUserSample/src/com/facebook/samples/switchuser/UserInfoCache.java
+++ b/samples/SwitchUserSample/src/com/example/switchuser/UserInfoCache.java
@@ -18,7 +18,7 @@
  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  */
 
-package com.facebook.samples.switchuser;
+package com.example.switchuser;
 
 import android.content.Context;
 import android.content.SharedPreferences;
