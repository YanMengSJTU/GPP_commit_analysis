diff --git a/facebook/libs/android-support-v4.jar b/facebook/libs/android-support-v4.jar
new file mode 100644
index 000000000..1fbeba093
Binary files /dev/null and b/facebook/libs/android-support-v4.jar differ
diff --git a/facebook/src/com/facebook/android/Facebook.java b/facebook/src/com/facebook/android/Facebook.java
index aa92877dd..8baa01848 100644
--- a/facebook/src/com/facebook/android/Facebook.java
+++ b/facebook/src/com/facebook/android/Facebook.java
@@ -38,6 +38,7 @@
 import android.os.Message;
 import android.os.Messenger;
 import android.os.RemoteException;
+import android.support.v4.app.Fragment;
 import android.text.TextUtils;
 import android.webkit.CookieSyncManager;
 
@@ -124,6 +125,10 @@ public void authorize(Activity activity, String[] permissions,
             final DialogListener listener) {
         authorize(activity, permissions, DEFAULT_AUTH_ACTIVITY_CODE, listener);
     }
+    
+    public void authorize(Fragment fragment, String[] permissions, final DialogListener listener) {
+    	authorize(fragment, permissions, DEFAULT_AUTH_ACTIVITY_CODE, listener);
+    }
 
     /**
      * Full authorize method.
@@ -206,6 +211,25 @@ public void authorize(Activity activity, String[] permissions,
             startDialogAuth(activity, permissions);
         }
     }
+    
+    public void authorize(Fragment fragment, String[] permissions,
+            int activityCode, final DialogListener listener) {
+    	
+    	boolean singleSignOnStarted = false;
+
+        mAuthDialogListener = listener;
+
+        // Prefer single sign-on, where available.
+        if (activityCode >= 0) {
+            singleSignOnStarted = startSingleSignOn(fragment, mAppId,
+                    permissions, activityCode);
+        }
+        // Otherwise fall back to traditional dialog.
+        if (!singleSignOnStarted) {
+            startDialogAuth(fragment.getActivity(), permissions);
+        }
+    	
+    }
 
     /**
      * Internal method to handle single sign-on backend for authorize().
@@ -251,6 +275,37 @@ private boolean startSingleSignOn(Activity activity, String applicationId,
 
         return didSucceed;
     }
+    
+    private boolean startSingleSignOn(Fragment fragment, String applicationId,
+            String[] permissions, int activityCode) {
+        boolean didSucceed = true;
+        Intent intent = new Intent();
+
+        intent.setClassName("com.facebook.katana",
+                "com.facebook.katana.ProxyAuth");
+        intent.putExtra("client_id", applicationId);
+        if (permissions.length > 0) {
+            intent.putExtra("scope", TextUtils.join(",", permissions));
+        }
+
+        // Verify that the application whose package name is
+        // com.facebook.katana.ProxyAuth
+        // has the expected FB app signature.
+        if (!validateActivityIntent(fragment.getActivity(), intent)) {
+            return false;
+        }
+
+        mAuthActivity = fragment.getActivity();
+        mAuthPermissions = permissions;
+        mAuthActivityCode = activityCode;
+        try {
+        	fragment.startActivityForResult(intent, activityCode);
+        } catch (ActivityNotFoundException e) {
+            didSucceed = false;
+        }
+
+        return didSucceed;
+    }
 
     /**
      * Helper to validate an activity intent by resolving and checking the
