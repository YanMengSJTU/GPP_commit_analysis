diff --git a/facebook/build.gradle b/facebook/build.gradle
index 7b1cb5d2a..b752ff763 100644
--- a/facebook/build.gradle
+++ b/facebook/build.gradle
@@ -9,7 +9,7 @@ project.group = 'com.facebook.android'
 dependencies {
     // Facbook Dependancies
     compile 'com.android.support:support-v4:(23,24]'
-    compile 'com.android.support:cardview-v7:23.1.+'
+    compile 'com.android.support:cardview-v7:(23,24]'
     compile 'com.parse.bolts:bolts-tasks:1.3.0'
     compile 'com.parse.bolts:bolts-applinks:1.3.0'
 
diff --git a/facebook/src/main/java/com/facebook/FacebookSdkVersion.java b/facebook/src/main/java/com/facebook/FacebookSdkVersion.java
index 75f791533..e07120ccd 100644
--- a/facebook/src/main/java/com/facebook/FacebookSdkVersion.java
+++ b/facebook/src/main/java/com/facebook/FacebookSdkVersion.java
@@ -21,5 +21,5 @@
 package com.facebook;
 
 final class FacebookSdkVersion {
-    public static final String BUILD = "4.9.0";
+    public static final String BUILD = "4.10.0";
 }
diff --git a/facebook/src/main/java/com/facebook/GraphRequest.java b/facebook/src/main/java/com/facebook/GraphRequest.java
index a0ade44e4..7552030a7 100644
--- a/facebook/src/main/java/com/facebook/GraphRequest.java
+++ b/facebook/src/main/java/com/facebook/GraphRequest.java
@@ -1433,7 +1433,6 @@ private void addCommonParameters() {
         }
         this.parameters.putString(SDK_PARAM, SDK_ANDROID);
         this.parameters.putString(FORMAT_PARAM, FORMAT_JSON);
-        this.parameters.putString("locale", Locale.getDefault().toString());
 
         if (FacebookSdk.isLoggingBehaviorEnabled(LoggingBehavior.GRAPH_API_DEBUG_INFO)) {
             this.parameters.putString(DEBUG_PARAM, DEBUG_SEVERITY_INFO);
diff --git a/facebook/src/main/java/com/facebook/appevents/AppEventsLogger.java b/facebook/src/main/java/com/facebook/appevents/AppEventsLogger.java
index 4a4768b90..5b9d2aa4a 100644
--- a/facebook/src/main/java/com/facebook/appevents/AppEventsLogger.java
+++ b/facebook/src/main/java/com/facebook/appevents/AppEventsLogger.java
@@ -1160,7 +1160,7 @@ public static String getAnonymousAppDeviceGUID(Context context) {
     //
 
 
-    static class SessionEventsState {
+    private static class SessionEventsState {
         private List<AppEvent> accumulatedEvents = new ArrayList<AppEvent>();
         private List<AppEvent> inFlightEvents = new ArrayList<AppEvent>();
         private int numSkippedEventsDueToFullBuffer;
diff --git a/facebook/src/main/java/com/facebook/internal/NativeProtocol.java b/facebook/src/main/java/com/facebook/internal/NativeProtocol.java
index f6aa30434..fd0dd13eb 100644
--- a/facebook/src/main/java/com/facebook/internal/NativeProtocol.java
+++ b/facebook/src/main/java/com/facebook/internal/NativeProtocol.java
@@ -384,7 +384,8 @@ public static Intent createProxyAuthIntent(
             String e2e,
             boolean isRerequest,
             boolean isForPublish,
-            DefaultAudience defaultAudience) {
+            DefaultAudience defaultAudience,
+            String clientState) {
         for (NativeAppInfo appInfo : facebookAppInfoList) {
             Intent intent = new Intent()
                     .setClassName(appInfo.getPackage(), FACEBOOK_PROXY_AUTH_ACTIVITY)
@@ -398,6 +399,7 @@ public static Intent createProxyAuthIntent(
                 intent.putExtra(FACEBOOK_PROXY_AUTH_E2E_KEY, e2e);
             }
 
+            intent.putExtra(ServerProtocol.DIALOG_PARAM_STATE, clientState);
             intent.putExtra(
                     ServerProtocol.DIALOG_PARAM_RESPONSE_TYPE,
                     ServerProtocol.DIALOG_RESPONSE_TYPE_TOKEN_AND_SIGNED_REQUEST);
diff --git a/facebook/src/main/java/com/facebook/internal/ServerProtocol.java b/facebook/src/main/java/com/facebook/internal/ServerProtocol.java
index b8fa2622a..15ae6a657 100644
--- a/facebook/src/main/java/com/facebook/internal/ServerProtocol.java
+++ b/facebook/src/main/java/com/facebook/internal/ServerProtocol.java
@@ -56,6 +56,7 @@
     public static final String DIALOG_PARAM_SCOPE = "scope";
     public static final String DIALOG_PARAM_DEFAULT_AUDIENCE = "default_audience";
     public static final String DIALOG_PARAM_SDK_VERSION = "sdk";
+    public static final String DIALOG_PARAM_STATE = "state";
     public static final String DIALOG_REREQUEST_AUTH_TYPE = "rerequest";
     public static final String DIALOG_RESPONSE_TYPE_TOKEN_AND_SIGNED_REQUEST
             = "token,signed_request";
diff --git a/facebook/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java b/facebook/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java
index 2385e9f40..9fb8c5b7d 100644
--- a/facebook/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java
+++ b/facebook/src/main/java/com/facebook/login/KatanaProxyLoginMethodHandler.java
@@ -56,7 +56,8 @@ boolean tryAuthorize(LoginClient.Request request) {
                 e2e,
                 request.isRerequest(),
                 request.hasPublishPermission(),
-                request.getDefaultAudience());
+                request.getDefaultAudience(),
+                getClientState(request.getAuthId()));
 
         addLoggingExtra(ServerProtocol.DIALOG_PARAM_E2E, e2e);
 
diff --git a/facebook/src/main/java/com/facebook/login/LoginMethodHandler.java b/facebook/src/main/java/com/facebook/login/LoginMethodHandler.java
index 4412561b9..95ad49009 100644
--- a/facebook/src/main/java/com/facebook/login/LoginMethodHandler.java
+++ b/facebook/src/main/java/com/facebook/login/LoginMethodHandler.java
@@ -25,6 +25,7 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 import android.util.Base64;
+import android.util.Log;
 
 import com.facebook.AccessToken;
 import com.facebook.AccessTokenSource;
@@ -83,6 +84,17 @@ boolean needsInternetPermission() {
     void cancel() {
     }
 
+    protected String getClientState(String authId) {
+        JSONObject param = new JSONObject();
+        try {
+            param.put(LoginLogger.EVENT_PARAM_AUTH_LOGGER_ID, authId);
+            param.put(LoginLogger.EVENT_PARAM_METHOD, getNameForLogging());
+        } catch (JSONException e) {
+            Log.w("LoginMethodHandler", "Error creating client state json: " + e.getMessage());
+        }
+        return param.toString();
+    }
+
     protected void addLoggingExtra(String key, Object value) {
         if (methodLoggingExtras == null) {
             methodLoggingExtras = new HashMap<String, String>();
diff --git a/facebook/src/main/java/com/facebook/login/WebViewLoginMethodHandler.java b/facebook/src/main/java/com/facebook/login/WebViewLoginMethodHandler.java
index 635860db9..772fbf7ed 100644
--- a/facebook/src/main/java/com/facebook/login/WebViewLoginMethodHandler.java
+++ b/facebook/src/main/java/com/facebook/login/WebViewLoginMethodHandler.java
@@ -116,6 +116,8 @@ public void onComplete(Bundle values, FacebookException error) {
 
         e2e = LoginClient.getE2E();
         addLoggingExtra(ServerProtocol.DIALOG_PARAM_E2E, e2e);
+        parameters.putString(
+                ServerProtocol.DIALOG_PARAM_STATE, getClientState(request.getAuthId()));
 
         FragmentActivity fragmentActivity = loginClient.getActivity();
         WebDialog.Builder builder = new AuthDialogBuilder(
diff --git a/facebook/src/main/java/com/facebook/share/internal/LikeActionController.java b/facebook/src/main/java/com/facebook/share/internal/LikeActionController.java
index 9c5e741fd..04caec8ef 100644
--- a/facebook/src/main/java/com/facebook/share/internal/LikeActionController.java
+++ b/facebook/src/main/java/com/facebook/share/internal/LikeActionController.java
@@ -1577,8 +1577,6 @@ public String getUnlikeToken() {
         }
     }
 
-
-
     private class GetEngagementRequestWrapper extends AbstractRequestWrapper {
         // Initialize the like status to what we currently have. This way, empty/error responses
         // don't end up clearing out the state.
@@ -1600,6 +1598,9 @@ public String getUnlikeToken() {
                             "social_sentence_with_like," +
                             "social_sentence_without_like)");
 
+            // Ensure that the social sentence returned is localized
+            requestParams.putString("locale", Locale.getDefault().toString());
+
             setRequest(new GraphRequest(
                     AccessToken.getCurrentAccessToken(),
                     objectId,
