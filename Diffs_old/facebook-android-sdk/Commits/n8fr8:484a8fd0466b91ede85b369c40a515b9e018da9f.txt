diff --git a/facebook/src/com/facebook/Request.java b/facebook/src/com/facebook/Request.java
index 7965e3cd2..d08b3e5c5 100644
--- a/facebook/src/com/facebook/Request.java
+++ b/facebook/src/com/facebook/Request.java
@@ -114,9 +114,7 @@
     private static final String MIME_BOUNDARY = "3i2ndDfv2rTHiSisAbouNdArYfORhtTPEefj3q2f";
 
     //netcipher
-    private static final String ORBOT_HOST = "127.0.0.1";
-    private static final int ORBOT_HTTP_PORT = 8118;
-    private static final int ORBOT_SOCKS_PORT = 9050;
+    private Proxy proxy = null;
     
     private static final String LOG_TAG = Logger.LOG_TAG_BASE + "Request";
     private static Context mContext;
@@ -1403,8 +1401,14 @@ public static HttpURLConnection toHttpConnection(Collection<Request> requests) {
      */
     public static HttpURLConnection toHttpConnection(RequestBatch requests) {
 
+        Request checkRequest = null;
+        
         for (Request request : requests) {
             request.validate();
+            
+            // set aside a single request to check for a proxy
+            if (checkRequest == null)
+                checkRequest = request;
         }
 
         URL url = null;
@@ -1424,8 +1428,14 @@ public static HttpURLConnection toHttpConnection(RequestBatch requests) {
         }
 
         HttpURLConnection connection;
+        
+        // this code assumes that we are either working with single requests, or that
+        // all requests in a batch are intended to be handled by the same proxy
         try {
-            connection = createConnection(url);
+            if (checkRequest.checkProxy())
+                connection = createConnection(url, checkRequest.getProxy());
+            else
+                connection = createConnection(url);
 
             serializeToUrlConnection(requests, connection);
         } catch (IOException e) {
@@ -1436,6 +1446,21 @@ public static HttpURLConnection toHttpConnection(RequestBatch requests) {
 
         return connection;
     }
+    
+    public void setProxy(Proxy proxy)
+    {
+        this.proxy = proxy;
+    }
+    
+    public Proxy getProxy()
+    {
+        return proxy;
+    }
+    
+    public boolean checkProxy()
+    {
+        return (proxy != null);
+    }
 
     /**
      * Executes a single request on the current thread and returns the response.
@@ -1756,24 +1781,22 @@ public void run() {
     }
 
     static HttpURLConnection createConnection(URL url) throws IOException {
-    	Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(ORBOT_HOST, ORBOT_HTTP_PORT));
-    	//Proxy proxy = new Proxy(Proxy.Type.SOCKS, new InetSocketAddress(ORBOT_HOST, ORBOT_SOCKS_PORT));	
-    	
+    	HttpURLConnection connection = (HttpURLConnection) url.openConnection();
+
+        connection.setRequestProperty(USER_AGENT_HEADER, getUserAgent());
+        connection.setRequestProperty(CONTENT_TYPE_HEADER, getMimeContentType());
+        connection.setRequestProperty(ACCEPT_LANGUAGE_HEADER, Locale.getDefault().toString());
+
+        connection.setChunkedStreamingMode(0);
+        return connection;
+    }
+    
+    // new method added for creating a connection through a proxy
+    static HttpURLConnection createConnection(URL url, Proxy proxy) throws IOException {
         HttpURLConnection connection = (HttpURLConnection) url.openConnection();
+
+        connection = (HttpURLConnection) url.openConnection(proxy);
         
-        if(null != mContext) {
-        	OrbotHelper orbotHelper = new OrbotHelper(mContext);
-            
-            if(orbotHelper.isOrbotRunning()) {    
-                try {
-                	connection = (HttpURLConnection) url.openConnection(proxy);
-        		} catch (Exception e) {
-        			Utility.logd(LOG_TAG, "Request: Error setting Proxy");
-        			e.printStackTrace();
-        		}
-            }
-        }
-    	
         connection.setRequestProperty(USER_AGENT_HEADER, getUserAgent());
         connection.setRequestProperty(CONTENT_TYPE_HEADER, getMimeContentType());
         connection.setRequestProperty(ACCEPT_LANGUAGE_HEADER, Locale.getDefault().toString());
