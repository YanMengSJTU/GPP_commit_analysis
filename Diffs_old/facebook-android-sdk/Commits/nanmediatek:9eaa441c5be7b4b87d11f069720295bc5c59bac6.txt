diff --git a/examples/simple/res/layout/main.xml b/examples/simple/res/layout/main.xml
index 8767a6222..b73286a71 100644
--- a/examples/simple/res/layout/main.xml
+++ b/examples/simple/res/layout/main.xml
@@ -18,7 +18,17 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
 		/>
-
+		
+	<Button android:id="@+id/uploadButton"
+        android:text="@string/upload"
+        android:visibility="invisible"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content" 
+        android:paddingRight="20dp" 
+        android:paddingLeft="20dp"
+        android:layout_margin="20dp" 
+        />
+        
 	<Button android:id="@+id/requestButton"
         android:text="@string/request"
         android:visibility="invisible"
@@ -29,6 +39,7 @@
         android:layout_margin="20dp" 
         />
 
+
 	<Button android:id="@+id/postButton" 
         android:text="@string/post"
         android:visibility="invisible"
@@ -49,4 +60,6 @@
         android:layout_margin="20dp" 
         />
 
+
+
 </LinearLayout>
\ No newline at end of file
diff --git a/examples/simple/res/values/strings.xml b/examples/simple/res/values/strings.xml
index 6d4d5d2e1..ced6f8b47 100644
--- a/examples/simple/res/values/strings.xml
+++ b/examples/simple/res/values/strings.xml
@@ -3,6 +3,8 @@
     <string name="app_name">Facebook SDK Example</string>
     <string name="request">Request!</string>
     <string name="hello">Hello World!</string>
-    <string name="post">Wall Post!</string>
+    <string name="upload">Upload Photo</string><string name="post">Wall Post!</string>
     <string name="delete">Delete Post</string>
+
+
 </resources>
diff --git a/examples/simple/src/com/facebook/android/Example.java b/examples/simple/src/com/facebook/android/Example.java
index 2912a8d47..dec918a6e 100644
--- a/examples/simple/src/com/facebook/android/Example.java
+++ b/examples/simple/src/com/facebook/android/Example.java
@@ -32,6 +32,13 @@
 import android.widget.Button;
 import android.widget.TextView;
 
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.HttpURLConnection;
+import java.net.MalformedURLException;
+import java.net.URL;
+
+
 public class Example extends Activity {
     
     // Your Facebook Application ID must be set before running this example
@@ -45,6 +52,7 @@
     private Button mRequestButton;
     private Button mPostButton;
     private Button mDeleteButton;
+    private Button mUploadButton;
     
     private Facebook mFacebook;
     private AsyncFacebookRunner mAsyncRunner;
@@ -65,6 +73,7 @@ public void onCreate(Bundle savedInstanceState) {
         mRequestButton = (Button) findViewById(R.id.requestButton);
         mPostButton = (Button) findViewById(R.id.postButton);
         mDeleteButton = (Button) findViewById(R.id.deletePostButton);
+        mUploadButton = (Button) findViewById(R.id.uploadButton);
         
        	mFacebook = new Facebook();
        	mAsyncRunner = new AsyncFacebookRunner(mFacebook);
@@ -82,6 +91,41 @@ public void onClick(View v) {
         mRequestButton.setVisibility(mFacebook.isSessionValid() ?
                 View.VISIBLE :
                 View.INVISIBLE);
+ 
+        mUploadButton.setOnClickListener(new OnClickListener() {
+            public void onClick(View v) {
+                Bundle params = new Bundle();
+                params.putString("method", "photos.upload");
+
+                URL uploadFileUrl = null;
+                try {
+                    uploadFileUrl = new URL(
+                        "http://www.facebook.com/images/devsite/iphone_connect_btn.jpg");
+                } catch (MalformedURLException e) {
+                	e.printStackTrace();
+                }
+                try {
+                    HttpURLConnection conn= (HttpURLConnection)uploadFileUrl.openConnection();
+                    conn.setDoInput(true);
+                    conn.connect();
+                    int length = conn.getContentLength();
+                	
+                    byte[] imgData =new byte[length];
+                    InputStream is = conn.getInputStream();
+                    is.read(imgData);
+                    params.putByteArray("picture", imgData); 
+               
+                } catch  (IOException e) {
+                    e.printStackTrace();                	
+                }
+                         	
+                mAsyncRunner.request(null, params, "POST", 
+            			new SampleUploadListener());
+            }
+        });
+        mUploadButton.setVisibility(mFacebook.isSessionValid() ?
+                View.VISIBLE :
+                View.INVISIBLE);
         
         mPostButton.setOnClickListener(new OnClickListener() {
             public void onClick(View v) {
@@ -99,6 +143,7 @@ public void onClick(View v) {
         public void onAuthSucceed() {
             mText.setText("You have logged in! ");
             mRequestButton.setVisibility(View.VISIBLE);
+            mUploadButton.setVisibility(View.VISIBLE);
             mPostButton.setVisibility(View.VISIBLE);
         }
 
@@ -115,6 +160,7 @@ public void onLogoutBegin() {
         public void onLogoutFinish() {
             mText.setText("You have logged out! ");
             mRequestButton.setVisibility(View.INVISIBLE);
+            mUploadButton.setVisibility(View.INVISIBLE);
             mPostButton.setVisibility(View.INVISIBLE);
         }
     }
@@ -144,7 +190,32 @@ public void run() {
             }
         }
     }
-    
+ 
+    public class SampleUploadListener extends BaseRequestListener {
+
+        public void onComplete(final String response) {
+            try {
+                // process the response here: (executed in background thread)
+                Log.d("Facebook-Example", "Response: " + response.toString());
+                JSONObject json = Util.parseJson(response);
+                final String src = json.getString("src");
+                
+                // then post the processed result back to the UI thread
+                // if we do not do this, an runtime exception will be generated
+                // e.g. "CalledFromWrongThreadException: Only the original 
+                // thread that created a view hierarchy can touch its views."
+                Example.this.runOnUiThread(new Runnable() {
+                    public void run() {
+                        mText.setText("Hello there, photo has been uploaded at \n" + src);
+                    }
+                });
+            } catch (JSONException e) {
+                Log.w("Facebook-Example", "JSON Error in response");
+            } catch (FacebookError e) {
+                Log.w("Facebook-Example", "Facebook Error: " + e.getMessage());
+            }
+        }
+    }
     public class WallPostRequestListener extends BaseRequestListener {
         
         public void onComplete(final String response) {
diff --git a/facebook/src/com/facebook/android/AsyncFacebookRunner.java b/facebook/src/com/facebook/android/AsyncFacebookRunner.java
index a83f191d4..d5d07efa8 100644
--- a/facebook/src/com/facebook/android/AsyncFacebookRunner.java
+++ b/facebook/src/com/facebook/android/AsyncFacebookRunner.java
@@ -205,7 +205,7 @@ public void request(final String graphPath,
                         final RequestListener listener) {
         new Thread() {
             @Override public void run() {
-                try {
+                try {              	
                     String resp = fb.request(graphPath, parameters, httpMethod);
                     listener.onComplete(resp);
                 } catch (FileNotFoundException e) {
diff --git a/facebook/src/com/facebook/android/Util.java b/facebook/src/com/facebook/android/Util.java
index c297e8121..b9bc5fc2e 100644
--- a/facebook/src/com/facebook/android/Util.java
+++ b/facebook/src/com/facebook/android/Util.java
@@ -16,14 +16,17 @@
 
 package com.facebook.android;
 
+import java.io.BufferedOutputStream;
 import java.io.BufferedReader;
 import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.InputStreamReader;
+import java.io.OutputStream;
 import java.net.HttpURLConnection;
 import java.net.MalformedURLException;
 import java.net.URL;
+import java.net.URLDecoder;
 
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -44,8 +47,36 @@
  */
 public final class Util {
 
-    public static String encodeUrl(Bundle parameters) {
+    /**
+     * Generate the multi-part post body providing the parameters and boundary
+     * string
+     * 
+     * @param parameters the parameters need to be posted
+     * @param boundary the random string as boundary
+     * @return a string of the post body
+     */
+    public static String encodePostBody(Bundle parameters, String boundary) {
         if (parameters == null) return "";
+        StringBuilder sb = new StringBuilder();
+        
+        for (String key : parameters.keySet()) {
+            if (parameters.getByteArray(key) != null) {
+        	    continue;
+            }
+        	
+            sb.append("Content-Disposition: form-data; name=\"" + key + 
+            		"\"\r\n\r\n" + parameters.getString(key));
+            sb.append("\r\n" + "--" + boundary + "\r\n");
+        }
+        
+        return sb.toString();
+    }
+
+    public static String encodeUrl(Bundle parameters) {
+        if (parameters == null) {
+        	return "";
+        }
+        
         StringBuilder sb = new StringBuilder();
         boolean first = true;
         for (String key : parameters.keySet()) {
@@ -102,39 +133,72 @@ public static Bundle parseUrl(String url) {
      */
     public static String openUrl(String url, String method, Bundle params) 
           throws MalformedURLException, IOException {
+    	// random string as boundary for multi-part http post
+    	String strBoundary = "3i2ndDfv2rTHiSisAbouNdArYfORhtTPEefj3q2f";
+    	String endLine = "\r\n";
+   
+    	OutputStream os;
+
         if (method.equals("GET")) {
             url = url + "?" + encodeUrl(params);
         }
         Log.d("Facebook-Util", method + " URL: " + url);
         HttpURLConnection conn = 
             (HttpURLConnection) new URL(url).openConnection();
-        try {
-			conn.setRequestProperty("User-Agent", System.getProperties().getProperty("http.agent") + " FacebookAndroidSDK");
-			if (!method.equals("GET")) {
-				// use method override
-				params.putString("method", method);
-				conn.setRequestMethod("POST");
-				conn.setDoOutput(true);
-				conn.getOutputStream().write(encodeUrl(params).getBytes("UTF-8"));
-			}
-			int responseCode = conn.getResponseCode();
-			String response = "";
 
-			try {
-				response = read(conn.getInputStream());
-			} catch (FileNotFoundException e) {
-				// Error Stream contains JSON that we can parse to a FB error
-				response = read(conn.getErrorStream());
-			}
-
-			if (responseCode < 200 || responseCode >= 300) {
-				throw new HttpResponseException(responseCode, response);
-			}
+        conn.setRequestProperty("User-Agent", System.getProperties().
+                getProperty("http.agent") + " FacebookAndroidSDK");
+        if (!method.equals("GET")) {
+            Bundle dataparams = new Bundle();
+            for (String key : params.keySet()) {
+                if (params.getByteArray(key) != null) {
+                        dataparams.putByteArray(key, params.getByteArray(key));
+                }
+            }
+        	
+            // use method override
+            if (!params.containsKey("method")) {
+            	params.putString("method", method);           	
+            }
+            
+            if (params.containsKey("access_token")) {
+            	String decoded_token = URLDecoder.decode(params.getString("access_token"));
+            	params.putString("access_token", decoded_token);
+            }
+                     
+            conn.setRequestMethod("POST");
+            conn.setRequestProperty("Content-Type", "multipart/form-data;boundary="+strBoundary);
+            conn.setDoOutput(true);
+            conn.setDoInput(true);
+            conn.setRequestProperty("Connection", "Keep-Alive");
+            conn.connect();
+            os = new BufferedOutputStream(conn.getOutputStream());
+            
+            os.write(("--" + strBoundary +endLine).getBytes());
+            os.write((encodePostBody(params, strBoundary)).getBytes());
+            os.write((endLine + "--" + strBoundary + endLine).getBytes());
+            
+            if (!dataparams.isEmpty()) {
+            	
+                for (String key: dataparams.keySet()){
+                    os.write(("Content-Disposition: form-data; filename=\"" + key + "\"" + endLine).getBytes());
+                    os.write(("Content-Type: content/unknown" + endLine + endLine).getBytes());
+                    os.write(dataparams.getByteArray(key));
+                    os.write((endLine + "--" + strBoundary + endLine).getBytes());
 
-			return response;
-		} finally {
-			conn.disconnect();
-		}
+                }          	
+            }
+            os.flush();
+        }
+        
+        String response = "";
+        try {
+        	response = read(conn.getInputStream());
+        } catch (FileNotFoundException e) {
+            // Error Stream contains JSON that we can parse to a FB error
+            response = read(conn.getErrorStream());
+        }
+        return response;
     }
 
     private static String read(InputStream in) throws IOException {
