diff --git a/README.md b/README.md
index 5ad124a8..96b34c3c 100644
--- a/README.md
+++ b/README.md
@@ -1,5 +1,7 @@
 ## Tinker
 [![license](http://img.shields.io/badge/license-BSD3-brightgreen.svg?style=flat)](https://github.com/Tencent/tinker/blob/master/LICENSE)
+[![Release Version](https://img.shields.io/badge/release-1.6.1-red.svg)](https://github.com/Tencent/tinker/releases) 
+[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/Tencent/tinker/pulls)
 
 Tinker is a hot-fix solution library for Android, it supports dex, library and resources update without reinstalling apk.
 
@@ -11,7 +13,7 @@ Add tinker-gradle-plugin as a dependency in your main `build.gradle` in the root
 ```gradle
 buildscript {
     dependencies {
-        classpath ('com.tencent.tinker:tinker-patch-gradle-plugin:1.6.0')
+        classpath ('com.tencent.tinker:tinker-patch-gradle-plugin:1.6.1')
     }
 }
 ```
@@ -21,9 +23,9 @@ Then you need to "apply" the plugin and add dependencies by adding the following
 ```gradle
 dependencies {
     //optional, help to generate the final application 
-    compile('com.tencent.tinker:tinker-android-anno:1.6.0')
+    compile('com.tencent.tinker:tinker-android-anno:1.6.1')
     //tinker's main Android lib
-    compile('com.tencent.tinker:tinker-android-lib:1.6.0') 
+    compile('com.tencent.tinker:tinker-android-lib:1.6.1') 
 }
 ...
 ...
@@ -48,7 +50,7 @@ public class SampleApplication extends TinkerApplication {
         ShareConstants.TINKER_ENABLE_ALL,
         // This is passed as a string so the shell application does not
         // have a binary dependency on your ApplicationLifeCycle class. 
-        "tinker.sample.android.SampleApplicationLike");
+        "tinker.sample.android.app.SampleApplicationLike");
     }  
 }
 ```
@@ -68,6 +70,13 @@ For proguard, we have already made the proguard config automatic, and tinker wil
 
 For more tinker configurations, learn more at the sample [app/build.gradle](https://github.com/Tencent/tinker/blob/master/tinker-sample-android/app/build.gradle).
 
+## Known Issues
+There are some issues which Tinker can't dynamic update.
+
+1. Update AndroidManifest.xml, such as add Android Component.
+2. Do not support some Samsung models with os version android-19.
+3. Due to Google Play Developer Distribution Agreement, we can't dynamic update our apk.
+
 ## Support
 Any problem?
 
diff --git a/build.gradle b/build.gradle
index c0041cfa..ebce8fe2 100644
--- a/build.gradle
+++ b/build.gradle
@@ -7,6 +7,7 @@ buildscript {
     dependencies {
         classpath 'com.android.tools.build:gradle:2.1.0'
         classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
+        classpath "com.github.dcendents:android-maven-gradle-plugin:1.3"
     }
 }
 
diff --git a/gradle.properties b/gradle.properties
index 457f9684..d2485317 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -16,5 +16,5 @@
 # This option should only be used with decoupled projects. More details, visit
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
 # org.gradle.parallel=true
-VERSION_NAME_PREFIX=1.6.0
+VERSION_NAME_PREFIX=1.6.1
 VERSION_NAME_SUFFIX=
\ No newline at end of file
diff --git a/gradle/android-artifacts.gradle b/gradle/android-artifacts.gradle
index f240c22f..7235ec5a 100644
--- a/gradle/android-artifacts.gradle
+++ b/gradle/android-artifacts.gradle
@@ -1,4 +1,41 @@
 apply plugin: 'maven-publish'
+apply plugin: 'com.github.dcendents.android-maven'
+
+version = version
+group = GROUP
+
+install {
+    repositories.mavenInstaller {
+        // This generates POM.xml with proper parameters
+        pom.project {
+            name POM_NAME
+            artifactId POM_ARTIFACT_ID
+            packaging POM_PACKAGING
+            description POM_DESCRIPTION
+            url POM_URL
+
+            scm {
+                url POM_SCM_URL
+            }
+
+            licenses {
+                license {
+                    name POM_LICENCE_NAME
+                    url POM_LICENCE_URL
+                    Distribution POM_LICENCE_DIST
+                }
+            }
+
+            developers {
+                developer {
+                    id POM_DEVELOPER_ID
+                    name POM_DEVELOPER_NAME
+                }
+            }
+        }
+    }
+}
+
 
 task androidJavadocs(type: Javadoc) {
     source = android.sourceSets.main.java.srcDirs
diff --git a/settings.gradle b/settings.gradle
index 1ed082f9..ed01852c 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -5,6 +5,5 @@ include ':tinker-android:tinker-android-anno'
 include ':tinker-build:tinker-patch-cli'
 include ':tinker-build:tinker-patch-lib'
 include ':tinker-build:tinker-patch-gradle-plugin'
-include ':third-party:seven-zip'
 include ':third-party:aosp-dexutils'
 include ':third-party:bsdiff-util'
diff --git a/third-party/seven-zip/.gitignore b/third-party/seven-zip/.gitignore
deleted file mode 100644
index 796b96d1..00000000
--- a/third-party/seven-zip/.gitignore
+++ /dev/null
@@ -1 +0,0 @@
-/build
diff --git a/third-party/seven-zip/License.txt b/third-party/seven-zip/License.txt
deleted file mode 100644
index 2c6b3074..00000000
--- a/third-party/seven-zip/License.txt
+++ /dev/null
@@ -1,52 +0,0 @@
-  7-Zip source code
-  ~~~~~~~~~~~~~~~~~
-  License for use and distribution
-  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-
-  7-Zip Copyright (C) 1999-2016 Igor Pavlov.
-
-  Licenses for files are:
-
-    1) CPP/7zip/Compress/Rar* files:  GNU LGPL + unRAR restriction
-    2) All other files:  GNU LGPL
-
-  The GNU LGPL + unRAR restriction means that you must follow both 
-  GNU LGPL rules and unRAR restriction rules.
-
-
-  GNU LGPL information
-  --------------------
-
-    This library is free software; you can redistribute it and/or
-    modify it under the terms of the GNU Lesser General Public
-    License as published by the Free Software Foundation; either
-    version 2.1 of the License, or (at your option) any later version.
-
-    This library is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-    Lesser General Public License for more details.
-
-    You should have received a copy of the GNU Lesser General Public
-    License along with this library; if not, write to the Free Software
-    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-
-
-  unRAR restriction
-  -----------------
-
-    The decompression engine for RAR archives was developed using source 
-    code of unRAR program.
-    All copyrights to original unRAR code are owned by Alexander Roshal.
-
-    The license for original unRAR code has the following restriction:
-
-    The unRAR sources cannot be used to re-create the RAR compression algorithm, 
-    which is proprietary. Distribution of modified unRAR sources in separate form 
-    or as a part of other software is permitted, provided that it is clearly
-    stated in the documentation and source comments that the code may
-    not be used to develop a RAR (WinRAR) compatible archiver.
-
-
-  --
-  Igor Pavlov
diff --git a/third-party/seven-zip/build.gradle b/third-party/seven-zip/build.gradle
deleted file mode 100644
index f1352e49..00000000
--- a/third-party/seven-zip/build.gradle
+++ /dev/null
@@ -1,49 +0,0 @@
-apply plugin: 'maven'
-apply plugin: 'maven-publish'
-apply plugin: 'com.jfrog.bintray'
-
-//hardcode 1.0.0
-version "1.0.0"
-group rootProject.ext.GROUP
-
-bintray {
-    publications = ['SevenZipPub']
-}
-
-publishing {
-    publications {
-        SevenZipPub(MavenPublication) {
-            artifactId project.getName()
-            groupId group
-            artifact("executable/SevenZip-linux-x86_32.exe") {
-                classifier "linux-x86_32"
-                extension "exe"
-            }
-            artifact("executable/SevenZip-linux-x86_64.exe") {
-                classifier "linux-x86_64"
-                extension "exe"
-            }
-            artifact("executable/SevenZip-windows-x86_32.exe") {
-                classifier "windows-x86_32"
-                extension "exe"
-            }
-            artifact("executable/SevenZip-windows-x86_64.exe") {
-                classifier "windows-x86_64"
-                extension "exe"
-            }
-            artifact("executable/SevenZip-osx-x86_64.exe") {
-                classifier "osx-x86_64"
-                extension "exe"
-            }
-        }
-    }
-}
-
-task buildAndPublishLocalMaven(dependsOn: 'publishSevenZipPubPublicationToMavenLocal') {
-
-}
-
-//don't upload sevenZip default
-if (hasProperty('UPLOAD_SEVEN_ZIP')) {
-    apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
-}
diff --git a/third-party/seven-zip/executable/SevenZip-linux-x86_32.exe b/third-party/seven-zip/executable/SevenZip-linux-x86_32.exe
deleted file mode 100755
index f1c18e4b..00000000
Binary files a/third-party/seven-zip/executable/SevenZip-linux-x86_32.exe and /dev/null differ
diff --git a/third-party/seven-zip/executable/SevenZip-linux-x86_64.exe b/third-party/seven-zip/executable/SevenZip-linux-x86_64.exe
deleted file mode 100644
index 927cc1ad..00000000
Binary files a/third-party/seven-zip/executable/SevenZip-linux-x86_64.exe and /dev/null differ
diff --git a/third-party/seven-zip/executable/SevenZip-osx-x86_64.exe b/third-party/seven-zip/executable/SevenZip-osx-x86_64.exe
deleted file mode 100644
index c40e062b..00000000
Binary files a/third-party/seven-zip/executable/SevenZip-osx-x86_64.exe and /dev/null differ
diff --git a/third-party/seven-zip/executable/SevenZip-windows-x86_32.exe b/third-party/seven-zip/executable/SevenZip-windows-x86_32.exe
deleted file mode 100644
index 710bda2f..00000000
Binary files a/third-party/seven-zip/executable/SevenZip-windows-x86_32.exe and /dev/null differ
diff --git a/third-party/seven-zip/executable/SevenZip-windows-x86_64.exe b/third-party/seven-zip/executable/SevenZip-windows-x86_64.exe
deleted file mode 100644
index 881b7dd9..00000000
Binary files a/third-party/seven-zip/executable/SevenZip-windows-x86_64.exe and /dev/null differ
diff --git a/third-party/seven-zip/gradle.properties b/third-party/seven-zip/gradle.properties
deleted file mode 100644
index 6c1444d4..00000000
--- a/third-party/seven-zip/gradle.properties
+++ /dev/null
@@ -1,2 +0,0 @@
-POM_ARTIFACT_ID=seven-zip
-POM_NAME=seven-zip
diff --git a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/service/PatchResult.java b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/service/PatchResult.java
index 7de1e3d9..9991c4e0 100644
--- a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/service/PatchResult.java
+++ b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/service/PatchResult.java
@@ -49,14 +49,18 @@ public String toString() {
         sb.append("isSuccess:" + isSuccess + "\n");
         sb.append("rawPatchFilePath:" + rawPatchFilePath + "\n");
         sb.append("costTime:" + costTime + "\n");
-        sb.append("patchVersion:" + patchVersion + "\n");
-        sb.append("patchTinkerID:" + patchTinkerID + "\n");
-        sb.append("baseTinkerID:" + baseTinkerID + "\n");
+        if (patchVersion != null) {
+            sb.append("patchVersion:" + patchVersion + "\n");
+        }
+        if (patchTinkerID != null) {
+            sb.append("patchTinkerID:" + patchTinkerID + "\n");
+        }
+        if (baseTinkerID != null) {
+            sb.append("baseTinkerID:" + baseTinkerID + "\n");
+        }
 
         if (e != null) {
             sb.append("Throwable:" + e.getMessage() + "\n");
-        } else {
-            sb.append("Throwable: null" + "\n");
         }
         return sb.toString();
     }
diff --git a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/tinker/TinkerInstaller.java b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/tinker/TinkerInstaller.java
index f0b52b0a..1fa7eb21 100644
--- a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/tinker/TinkerInstaller.java
+++ b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/tinker/TinkerInstaller.java
@@ -45,6 +45,7 @@
      */
     public static void install(ApplicationLike applicationLike) {
         Tinker tinker = new Tinker.Builder(applicationLike.getApplication()).build();
+        Tinker.create(tinker);
         tinker.install(applicationLike.getTinkerResultIntent());
     }
 
diff --git a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AndroidNClassLoader.java b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AndroidNClassLoader.java
index 683ba2c0..795eea17 100644
--- a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AndroidNClassLoader.java
+++ b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AndroidNClassLoader.java
@@ -40,10 +40,15 @@ private AndroidNClassLoader(String dexPath, PathClassLoader parent) {
     private static AndroidNClassLoader createAndroidNClassLoader(PathClassLoader original) throws Exception {
         //let all element ""
         AndroidNClassLoader androidNClassLoader = new AndroidNClassLoader("",  original);
-        Object originPathList = findField(original, "pathList").get(original);
+        Field originPathList = findField(original, "pathList");
+        Object originPathListObject = originPathList.get(original);
+        //should reflect definingContext also
+        Field originClassloader = findField(originPathListObject, "definingContext");
+        originClassloader.set(originPathListObject, androidNClassLoader);
+        //copy pathList
         Field pathListField = findField(androidNClassLoader, "pathList");
-        //just use PathClassloader's pathlist
-        pathListField.set(androidNClassLoader, originPathList);
+        //just use PathClassloader's pathList
+        pathListField.set(androidNClassLoader, originPathListObject);
         return androidNClassLoader;
     }
 
diff --git a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/shareutil/ShareConstants.java b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/shareutil/ShareConstants.java
index 8f53fcb6..b7f1f9f5 100644
--- a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/shareutil/ShareConstants.java
+++ b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/shareutil/ShareConstants.java
@@ -133,11 +133,11 @@
     public static final int ERROR_LOAD_PATCH_REWRITE_PATCH_INFO_FAIL              = -18;
     public static final int ERROR_LOAD_PATCH_UNKNOWN_EXCEPTION                    = -19;
     //resource
-    public static final int ERROR_LOAD_PATCH_VERSION_RESOURCE_DIRECTORY_NOT_EXIST = -21;
-    public static final int ERROR_LOAD_PATCH_VERSION_RESOURCE_FILE_NOT_EXIST      = -22;
-    public static final int ERROR_LOAD_PATCH_VERSION_RESOURCE_LOAD_EXCEPTION      = -23;
-    public static final int ERROR_LOAD_PATCH_VERSION_RESOURCE_MD5_MISMATCH        = -24;
-    public static final int ERROR_LOAD_PATCH_UNCAUGHT_EXCEPTION                   = -25;
+    public static final int ERROR_LOAD_PATCH_VERSION_RESOURCE_DIRECTORY_NOT_EXIST = -20;
+    public static final int ERROR_LOAD_PATCH_VERSION_RESOURCE_FILE_NOT_EXIST      = -21;
+    public static final int ERROR_LOAD_PATCH_VERSION_RESOURCE_LOAD_EXCEPTION      = -22;
+    public static final int ERROR_LOAD_PATCH_VERSION_RESOURCE_MD5_MISMATCH        = -23;
+    public static final int ERROR_LOAD_PATCH_UNCAUGHT_EXCEPTION                   = -24;
 
     public static final int ERROR_LOAD_GET_INTENT_FAIL = -10000;
 
diff --git a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/AaptUtil.java b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/AaptUtil.java
index e7172f4f..2a2695c0 100644
--- a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/AaptUtil.java
+++ b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/AaptUtil.java
@@ -227,6 +227,7 @@ public static void processValuesFile(String valuesFullFilename, AaptResourceColl
                 case DIMEN:
                 case DRAWABLE:
                 case BOOL:
+                case INTEGER:
                     resourceValue = node.getTextContent().trim();
                     break;
                 case ARRAY://has sub item
diff --git a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/PatchUtil.java b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/PatchUtil.java
index 87f829f2..6f4a0cc1 100644
--- a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/PatchUtil.java
+++ b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/PatchUtil.java
@@ -116,16 +116,16 @@ public static void generatePublicResourceXml(AaptResourceCollector aaptResourceC
                 if (!rType.equals(RType.STYLEABLE)) {
                     Set<RDotTxtEntry> set = entry.getValue();
                     for (RDotTxtEntry rDotTxtEntry : set) {
-                        if (rType.equals(RType.STYLE)) {
+//                        if (rType.equals(RType.STYLE)) {
                             String rawName = aaptResourceCollector.getRawName(rDotTxtEntry.name);
                             if (StringUtil.isBlank(rawName)) {
-                                System.err.println("Blank?" + rDotTxtEntry.name);
+//                                System.err.println("Blank?" + rDotTxtEntry.name);
                                 rawName = rDotTxtEntry.name;
                             }
                             publicWriter.println("<public type=\"" + rType + "\" name=\"" + rawName + "\" id=\"" + rDotTxtEntry.idValue + "\" />");
-                        } else {
-                            publicWriter.println("<public type=\"" + rType + "\" name=\"" + rDotTxtEntry.name + "\" id=\"" + rDotTxtEntry.idValue + "\" />");
-                        }
+//                        } else {
+//                            publicWriter.println("<public type=\"" + rType + "\" name=\"" + rDotTxtEntry.name + "\" id=\"" + rDotTxtEntry.idValue + "\" />");
+//                        }
                     }
                     Set<String> ignoreIdSet = aaptResourceCollector.getIgnoreIdSet();
                     for (RDotTxtEntry rDotTxtEntry : set) {
diff --git a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/DexDiffDecoder.java b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/DexDiffDecoder.java
index c96a4830..6c366f00 100644
--- a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/DexDiffDecoder.java
+++ b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/DexDiffDecoder.java
@@ -212,6 +212,7 @@ public void onAllPatchesEnd() throws Exception {
 
                 relatedInfo.dexDiffFile = dexDiffOut;
                 relatedInfo.dexDiffMd5 = MD5.getMD5(dexDiffOut);
+                Logger.d("\nGen %s patch file:%s, size:%d, md5:%s", dexName, relatedInfo.dexDiffFile.getAbsolutePath(), relatedInfo.dexDiffFile.length(), relatedInfo.dexDiffMd5);
 
                 File tempFullPatchedDexFile = new File(tempFullPatchDexPath, dexName);
 
@@ -238,7 +239,7 @@ public void onAllPatchesEnd() throws Exception {
                 if (!tempFullPatchedDexFile.exists()) {
                     throw new TinkerPatchException("can not find the temporary full patched dex file:" + tempFullPatchedDexFile.getAbsolutePath());
                 }
-                Logger.e("Gen %s for dalvik full dex file:%s, size:%d, md5:%s", dexName, tempFullPatchedDexFile.getAbsolutePath(), tempFullPatchedDexFile.length(), relatedInfo.newOrFullPatchedMd5);
+                Logger.d("\nGen %s for dalvik full dex file:%s, size:%d, md5:%s", dexName, tempFullPatchedDexFile.getAbsolutePath(), tempFullPatchedDexFile.length(), relatedInfo.newOrFullPatchedMd5);
             } else {
                 // In this case newDexFile is the same as oldDexFile, but we still
                 // need to treat it as patched dex file so that the SmallPatchGenerator
@@ -356,7 +357,7 @@ public void onAllPatchesEnd() throws Exception {
                     throw new TinkerPatchException("can not find the temporary small patched dex file:" + tempSmallPatchInfoFile.getAbsolutePath());
                 }
                 relatedInfo.smallPatchedMd5 = MD5.getMD5(tempSmallPatchedFile);
-                Logger.e("Gen %s for art small dex file:%s, size:%d, md5:%s", dexName, tempSmallPatchedFile.getAbsolutePath(), tempSmallPatchedFile.length(), relatedInfo.smallPatchedMd5);
+                Logger.d("\nGen %s for art small dex file:%s, size:%d, md5:%s", dexName, tempSmallPatchedFile.getAbsolutePath(), tempSmallPatchedFile.length(), relatedInfo.smallPatchedMd5);
 
                 if (relatedInfo.oldMd5.equals(relatedInfo.newMd5)) {
                     // Unmodified dex, which has no dexDiffFile, and is ignored in dvm environment.
@@ -531,7 +532,7 @@ private void addTestDex() throws IOException {
 
         File dest = new File(config.mTempResultDir + "/" + TEST_DEX_PATH);
         FileOperation.copyResourceUsingStream(TEST_DEX_PATH, dest);
-        Logger.d("Add test install result dex: %s, size:%d", dest.getAbsolutePath(), dest.length());
+        Logger.d("\nAdd test install result dex: %s, size:%d", dest.getAbsolutePath(), dest.length());
         Logger.d("DexDecoder:write test dex meta file data: %s", meta);
 
         metaWriter.writeLineToInfoFile(meta);
diff --git a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/TypedValue.java b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/TypedValue.java
index 8d815700..4837f67a 100644
--- a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/TypedValue.java
+++ b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/TypedValue.java
@@ -59,7 +59,6 @@
     public static final String RES_MANIFEST    = "AndroidManifest.xml";
     public static final String RES_OUT         = "resources_out.zip";
     public static final String RES_OUT_7ZIP    = "resources_out_7z.zip";
-    public static final String RES_OUT_MD5_TAG = "%RES_OUT_MD5_TAG%";
 
     public static final int ADD       = 1;
     public static final int MOD       = 2;
diff --git a/tinker-commons/src/main/java/com/tencent/tinker/commons/dexpatcher/algorithms/patch/DexSectionPatchAlgorithm.java b/tinker-commons/src/main/java/com/tencent/tinker/commons/dexpatcher/algorithms/patch/DexSectionPatchAlgorithm.java
index 62b746f0..ca2aadf8 100644
--- a/tinker-commons/src/main/java/com/tencent/tinker/commons/dexpatcher/algorithms/patch/DexSectionPatchAlgorithm.java
+++ b/tinker-commons/src/main/java/com/tencent/tinker/commons/dexpatcher/algorithms/patch/DexSectionPatchAlgorithm.java
@@ -75,7 +75,7 @@ public DexSectionPatchAlgorithm(
     }
 
     /**
-     * Get {@code Section} in {@code TableOfContents}.
+     * Get {@link TableOfContents.Section} from {@code dex}.
      */
     protected abstract TableOfContents.Section getTocSection(Dex dex);
 
@@ -148,7 +148,7 @@ protected final boolean isPatchedItemInSmallPatchedDex(String oldDexSignStr, int
 
     /**
      * Adapter method for item's offset fetching, if an item is not
-     * inherited from {@code Item} (which means it is a simple item in dex section
+     * inherited from {@link TableOfContents.Section.Item} (which means it is a simple item in dex section
      * that doesn't need multiple members to describe), this method
      * return {@code index} instead.
      */
diff --git a/tinker-sample-android/app/build.gradle b/tinker-sample-android/app/build.gradle
index 14238cba..42fb28e3 100644
--- a/tinker-sample-android/app/build.gradle
+++ b/tinker-sample-android/app/build.gradle
@@ -6,17 +6,31 @@ dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
     testCompile 'junit:junit:4.12'
     compile "com.android.support:appcompat-v7:23.1.1"
-    compile("com.tencent.tinker:tinker-android-lib:${TINKER_VERSION}")
-    compile("com.tencent.tinker:tinker-android-anno:${TINKER_VERSION}")
+    compile("com.tencent.tinker:tinker-android-lib:${TINKER_VERSION}") { changing = true }
+    compile("com.tencent.tinker:tinker-android-anno:${TINKER_VERSION}") { changing = true }
     compile "com.android.support:multidex:1.0.1"
 
+    //use for local maven test
+//    compile("com.tencent.tinker:tinker-android-loader:${TINKER_VERSION}") { changing = true }
+//    compile("com.tencent.tinker:aosp-dexutils:${TINKER_VERSION}") { changing = true }
+//    compile("com.tencent.tinker:bsdiff-util:${TINKER_VERSION}") { changing = true }
+//    compile("com.tencent.tinker:tinker-commons:${TINKER_VERSION}") { changing = true }
+
     //use to test multiDex
 //    compile group: 'com.google.guava', name: 'guava', version: '19.0'
 //    compile "org.scala-lang:scala-library:2.11.7"
 }
 
 def gitSha() {
-    return 'git rev-parse --short HEAD'.execute().text.trim()
+    try {
+        String gitRev = 'git rev-parse --short HEAD'.execute().text.trim()
+        if (gitRev == null) {
+            throw new GradleException("can't get git rev, you should add git to system path or just input test value, such as 'testTinkerId'")
+        }
+        return gitRev
+    } catch (Exception e) {
+        throw new GradleException("can't get git rev, you should add git to system path or just input test value, such as 'testTinkerId'")
+    }
 }
 
 def javaVersion = JavaVersion.VERSION_1_7
@@ -320,14 +334,14 @@ if (buildWithTinker()) {
         }
     }
 
-/**
- * task type, you want to bak
- */
+    /**
+    * task type, you want to bak
+    */
     def taskName = "debug"
 
     /**
-     * bak apk and mapping
-     */
+    * bak apk and mapping
+    */
     tasks.all {
         if ("assemble${taskName.capitalize()}".equalsIgnoreCase(it.name)) {
             it.doLast {
diff --git a/tinker-sample-android/app/src/main/java/tinker/sample/android/app/SampleApplicationLike.java b/tinker-sample-android/app/src/main/java/tinker/sample/android/app/SampleApplicationLike.java
index 48ddaf4e..bf550dbe 100644
--- a/tinker-sample-android/app/src/main/java/tinker/sample/android/app/SampleApplicationLike.java
+++ b/tinker-sample-android/app/src/main/java/tinker/sample/android/app/SampleApplicationLike.java
@@ -83,7 +83,7 @@ public void onBaseContextAttached(Context base) {
         MultiDex.install(base);
 
         SampleApplicationContext.application = getApplication();
-        SampleApplicationContext.context = getApplication().getApplicationContext();
+        SampleApplicationContext.context = getApplication();
         TinkerManager.setTinkerApplicationLike(this);
         TinkerManager.initFastCrashProtect();
         //should set before tinker is installed
diff --git a/tinker-sample-android/gradle.properties b/tinker-sample-android/gradle.properties
index 20504014..27cc7999 100644
--- a/tinker-sample-android/gradle.properties
+++ b/tinker-sample-android/gradle.properties
@@ -17,5 +17,4 @@
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
 # org.gradle.parallel=true
 
-TINKER_VERSION=1.6.0
-
+TINKER_VERSION=1.6.1
diff --git a/tinker-sample-android/updateTinkerLib.sh b/tinker-sample-android/updateTinkerLib.sh
index 154d2c3c..30ae62b1 100755
--- a/tinker-sample-android/updateTinkerLib.sh
+++ b/tinker-sample-android/updateTinkerLib.sh
@@ -1,4 +1,5 @@
 #!/usr/bin/env bash
 rm -rf ~/.gradle/caches/modules-2/metadata-2.16/descriptors/com.tencent.tinker
 
+#rm -rf ~/.m2/repository/com/tencent/tinker
 #adb push ./app/build/outputs/tinkerPatch/debug/patch_signed_7zip.apk /storage/sdcard0/
\ No newline at end of file
