diff --git a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/app/TinkerApplication.java b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/app/TinkerApplication.java
index 22d22799..ec1d3c99 100644
--- a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/app/TinkerApplication.java
+++ b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/app/TinkerApplication.java
@@ -128,6 +128,7 @@ private void onBaseContextAttached(Context base) {
         applicationStartElapsedTime = SystemClock.elapsedRealtime();
         applicationStartMillisTime = System.currentTimeMillis();
         loadTinker();
+        //生成applicationLike
         ensureDelegate();
         applicationLike.onBaseContextAttached(base);
         //reset save mode
diff --git a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/AaptUtil.java b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/AaptUtil.java
index 6dcc2646..7c89640e 100644
--- a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/AaptUtil.java
+++ b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/aapt/AaptUtil.java
@@ -78,6 +78,12 @@ public static AaptResourceCollector collectResource(List<String> resourceDirecto
         return collectResource(resourceDirectoryList, null);
     }
 
+    /**
+     * res 目录下的文件
+     * @param resourceDirectoryList
+     * @param rTypeResourceMap
+     * @return
+     */
     public static AaptResourceCollector collectResource(List<String> resourceDirectoryList, Map<RType, Set<RDotTxtEntry>> rTypeResourceMap) {
         AaptResourceCollector resourceCollector = new AaptResourceCollector(rTypeResourceMap);
         List<com.tencent.tinker.build.aapt.RDotTxtEntry> references = new ArrayList<com.tencent.tinker.build.aapt.RDotTxtEntry>();
diff --git a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/ApkDecoder.java b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/ApkDecoder.java
index d099a697..c7878f4a 100644
--- a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/ApkDecoder.java
+++ b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/ApkDecoder.java
@@ -41,10 +41,10 @@
     private final File mOldApkDir;
     private final File mNewApkDir;
 
-    private final ManifestDecoder      manifestDecoder;
-    private final UniqueDexDiffDecoder dexPatchDecoder;
-    private final BsDiffDecoder        soPatchDecoder;
-    private final ResDiffDecoder       resPatchDecoder;
+    private final ManifestDecoder manifestDecoder;//检测是否增加了四大组件  关于dexMode的检测提示
+    private final UniqueDexDiffDecoder dexPatchDecoder;//dex 的patch
+    private final BsDiffDecoder soPatchDecoder;//so 的patch
+    private final ResDiffDecoder resPatchDecoder;//资源的patch
 
     /**
      * if resource's file is also contain in dex or library pattern,
@@ -71,7 +71,7 @@ private void unzipApkFile(File file, File destFile) throws TinkerPatchException,
         String apkName = file.getName();
         if (!apkName.endsWith(TypedValue.FILE_APK)) {
             throw new TinkerPatchException(
-                String.format("input apk file path must end with .apk, yours %s\n", apkName)
+                    String.format("input apk file path must end with .apk, yours %s\n", apkName)
             );
         }
 
@@ -106,21 +106,22 @@ public void onAllPatchesStart() throws IOException, TinkerPatchException {
     public boolean patch(File oldFile, File newFile) throws Exception {
         writeToLogFile(oldFile, newFile);
         //check manifest change first
-        manifestDecoder.patch(oldFile, newFile);
+        manifestDecoder.patch(oldFile, newFile);//检查版本 是使用raw还是jar  检查是否包换四大组件
 
-        unzipApkFiles(oldFile, newFile);
+        unzipApkFiles(oldFile, newFile);//解压老的  新的apk 到build/output/tinkerpatch/debug/apkname
 
+        //遍历解压后的new apk目录
         Files.walkFileTree(mNewApkDir.toPath(), new ApkFilesVisitor(config, mNewApkDir.toPath(), mOldApkDir.toPath(), dexPatchDecoder, soPatchDecoder, resPatchDecoder));
 
         //get all duplicate resource file
         for (File duplicateRes : resDuplicateFiles) {
 //            resPatchDecoder.patch(duplicateRes, null);
             Logger.e("Warning: res file %s is also match at dex or library pattern, "
-                + "we treat it as unchanged in the new resource_out.zip", getRelativePathStringToOldFile(duplicateRes));
+                    + "we treat it as unchanged in the new resource_out.zip", getRelativePathStringToOldFile(duplicateRes));
         }
 
         soPatchDecoder.onAllPatchesEnd();
-        dexPatchDecoder.onAllPatchesEnd();
+        dexPatchDecoder.onAllPatchesEnd();//开始生成 保存patch文件
         manifestDecoder.onAllPatchesEnd();
         resPatchDecoder.onAllPatchesEnd();
 
@@ -136,12 +137,12 @@ public void onAllPatchesEnd() throws IOException, TinkerPatchException {
     }
 
     class ApkFilesVisitor extends SimpleFileVisitor<Path> {
-        BaseDecoder     dexDecoder;
-        BaseDecoder     soDecoder;
-        BaseDecoder     resDecoder;
-        Configuration   config;
-        Path            newApkPath;
-        Path            oldApkPath;
+        BaseDecoder dexDecoder;
+        BaseDecoder soDecoder;
+        BaseDecoder resDecoder;
+        Configuration config;
+        Path newApkPath;
+        Path oldApkPath;
 
         ApkFilesVisitor(Configuration config, Path newPath, Path oldPath, BaseDecoder dex, BaseDecoder so, BaseDecoder resDecoder) {
             this.config = config;
@@ -153,7 +154,7 @@ public void onAllPatchesEnd() throws IOException, TinkerPatchException {
         }
 
         @Override
-        public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {
+        public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {//遍历释放apk文件夹下面的所有文件
 
             Path relativePath = newApkPath.relativize(file);
 
@@ -166,6 +167,7 @@ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IO
             }
             String patternKey = relativePath.toString().replace("\\", "/");
 
+            //如果符合前面定义的dex规则   dexPattern:classes.*\.dex   dexPattern:assets/secondary-dex-.\.jar
             if (Utils.checkFileInPattern(config.mDexFilePattern, patternKey)) {
                 //also treat duplicate file as unchanged
                 if (Utils.checkFileInPattern(config.mResFilePattern, patternKey) && oldFile != null) {
@@ -173,7 +175,7 @@ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IO
                 }
 
                 try {
-                    dexDecoder.patch(oldFile, file.toFile());
+                    dexDecoder.patch(oldFile, file.toFile());//对dex进行查分对比
                 } catch (Exception e) {
 //                    e.printStackTrace();
                     throw new RuntimeException(e);
diff --git a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/DexDiffDecoder.java b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/DexDiffDecoder.java
index 94b961d1..75a83f6d 100644
--- a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/DexDiffDecoder.java
+++ b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/DexDiffDecoder.java
@@ -132,6 +132,7 @@ public boolean patch(final File oldFile, final File newFile) throws IOException,
         Logger.d("Check for loader classes in dex: %s", dexName);
 
         try {
+            //进行对比  不是为了对比 是为了检查dex的一些规则
             excludedClassModifiedChecker.checkIfExcludedClassWasModifiedInNewDex(oldFile, newFile);
         } catch (IOException e) {
             throw new TinkerPatchException(e);
@@ -156,7 +157,7 @@ public boolean patch(final File oldFile, final File newFile) throws IOException,
 
         final String newMd5 = getRawOrWrappedDexMD5(newFile);
 
-        //new add file
+        //new add file 在new apk中多了一个dex
         if (oldFile == null || !oldFile.exists() || oldFile.length() == 0) {
             hasDexChanged = true;
             copyNewDexAndLogToDexMeta(newFile, newMd5, dexDiffOut);
@@ -186,12 +187,12 @@ public boolean patch(final File oldFile, final File newFile) throws IOException,
 
     @Override
     public void onAllPatchesEnd() throws Exception {
-        if (!hasDexChanged) {
+        if (!hasDexChanged) {//仅仅对比修改了的dex
             Logger.d("No dexes were changed, nothing needs to be done next.");
             return;
         }
 
-        if (config.mIsProtectedApp) {
+        if (config.mIsProtectedApp) {//仅仅在加固的时候使用 只将变化的类合成补丁
             generateChangedClassesDexFile();
         } else {
             generatePatchInfoFile();
@@ -224,11 +225,11 @@ private void generateChangedClassesDexFile() throws IOException {
         DexGroup newDexGroup = DexGroup.wrap(newDexList);
 
         ChangedClassesDexClassInfoCollector collector = new ChangedClassesDexClassInfoCollector();
-        collector.setExcludedClassPatterns(config.mDexLoaderPattern);
+        collector.setExcludedClassPatterns(config.mDexLoaderPattern);//这里排除前面定义在dex.loader中的类
         collector.setLogger(dexPatcherLoggerBridge);
         collector.setIncludeRefererToRefererAffectedClasses(true);
 
-        Set<DexClassInfo> classInfosInChangedClassesDex = collector.doCollect(oldDexGroup, newDexGroup);
+        Set<DexClassInfo> classInfosInChangedClassesDex = collector.doCollect(oldDexGroup, newDexGroup);//开始对比新旧的dex
 
         Set<String> descsOfClassInChangedClassesDex = new HashSet<>();
         Set<Dex> owners = new HashSet<>();
@@ -436,7 +437,7 @@ private void diffDexPairAndFillRelatedInfo(File oldDexFile, File newDexFile, Rel
 
             Dex origNewDex = new Dex(newDexFile);
             Dex patchedNewDex = new Dex(tempFullPatchedDexFile);
-            checkDexChange(origNewDex, patchedNewDex);
+            checkDexChange(origNewDex, patchedNewDex);//做对比
 
             relatedInfo.newOrFullPatchedFile = tempFullPatchedDexFile;
             relatedInfo.newOrFullPatchedMd5 = MD5.getMD5(tempFullPatchedDexFile);
@@ -571,7 +572,7 @@ private void copyNewDexAndLogToDexMeta(File newFile, String newMd5, File output)
     private void checkDexChange(Dex originDex, Dex newDex) {
         DexClassesComparator classesCmptor = new DexClassesComparator("*");
         classesCmptor.setIgnoredRemovedClassDescPattern(config.mDexLoaderPattern);
-        classesCmptor.startCheck(originDex, newDex);
+        classesCmptor.startCheck(originDex, newDex);//做对比
 
         List<DexClassInfo> addedClassInfos = classesCmptor.getAddedClassInfos();
         boolean isNoClassesAdded = addedClassInfos.isEmpty();
@@ -611,19 +612,12 @@ private void checkDexChange(Dex originDex, Dex newDex) {
     /**
      * Construct dex meta-info and write it to meta file and log.
      *
-     * @param newOrFullPatchedFile
-     * New dex file or full patched dex file.
-     * @param oldFile
-     * Old dex file.
-     * @param dexDiffFile
-     * Dex diff file. (Generated by DexPatchGenerator.)
-     * @param destMd5InDvm
-     * Md5 of output dex in dvm environment, could be full patched dex md5 or new dex.
-     * @param destMd5InArt
-     * Md5 of output dex in dvm environment, could be small patched dex md5 or new dex.
-     * @param dexDiffMd5
-     * Md5 of dex patch info file.
-     *
+     * @param newOrFullPatchedFile New dex file or full patched dex file.
+     * @param oldFile              Old dex file.
+     * @param dexDiffFile          Dex diff file. (Generated by DexPatchGenerator.)
+     * @param destMd5InDvm         Md5 of output dex in dvm environment, could be full patched dex md5 or new dex.
+     * @param destMd5InArt         Md5 of output dex in dvm environment, could be small patched dex md5 or new dex.
+     * @param dexDiffMd5           Md5 of dex patch info file.
      * @throws IOException
      */
     protected void logToDexMeta(File newOrFullPatchedFile, File oldFile, File dexDiffFile, String destMd5InDvm, String destMd5InArt, String dexDiffMd5) throws IOException {
@@ -649,7 +643,7 @@ protected void logToDexMeta(File newOrFullPatchedFile, File oldFile, File dexDif
                 oldCrc = FileOperation.getZipEntryCrc(config.mOldApkFile, relative);
                 if (oldCrc == null || oldCrc.equals("0")) {
                     throw new TinkerPatchException(
-                        String.format("can't find zipEntry %s from old apk file %s", relative, config.mOldApkFile.getPath())
+                            String.format("can't find zipEntry %s from old apk file %s", relative, config.mOldApkFile.getPath())
                     );
                 }
             }
@@ -662,7 +656,7 @@ protected void logToDexMeta(File newOrFullPatchedFile, File oldFile, File dexDif
 
         if (logWriter != null) {
             String log = relative + ", oldSize=" + FileOperation.getFileSizes(oldFile) + ", newSize="
-                + FileOperation.getFileSizes(newOrFullPatchedFile) + ", diffSize=" + FileOperation.getFileSizes(dexDiffFile);
+                    + FileOperation.getFileSizes(newOrFullPatchedFile) + ", diffSize=" + FileOperation.getFileSizes(dexDiffFile);
 
             logWriter.writeLineToInfoFile(log);
         }
@@ -726,7 +720,7 @@ private void ensureDirectoryExist(File dir) {
         File newOrFullPatchedFile = null;
         /**
          * This field could be null if old dex and new dex
-         *  are the same.
+         * are the same.
          */
         File dexDiffFile = null;
         String oldMd5 = "0";
@@ -734,8 +728,8 @@ private void ensureDirectoryExist(File dir) {
         String dexDiffMd5 = "0";
         /**
          * This field could be one of the following value:
-         *  fullPatchedDex md5, if old dex and new dex are different;
-         *  newDex md5, if new dex is marked to be copied directly;
+         * fullPatchedDex md5, if old dex and new dex are different;
+         * newDex md5, if new dex is marked to be copied directly;
          */
         String newOrFullPatchedMd5 = "0";
     }
diff --git a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/ManifestDecoder.java b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/ManifestDecoder.java
index 642b4482..723baef7 100644
--- a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/ManifestDecoder.java
+++ b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/ManifestDecoder.java
@@ -47,7 +47,7 @@ public boolean patch(File oldFile, File newFile) throws IOException, TinkerPatch
             //check minSdkVersion
             int minSdkVersion = Integer.parseInt(oldAndroidManifest.apkMeta.getMinSdkVersion());
 
-            if (minSdkVersion < TypedValue.ANDROID_40_API_LEVEL) {
+            if (minSdkVersion < TypedValue.ANDROID_40_API_LEVEL) {//api 14
                 if (config.mDexRaw) {
                     if (ignoreWarning) {
                         //ignoreWarning, just log
diff --git a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/ResDiffDecoder.java b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/ResDiffDecoder.java
index 5abce200..9b380eca 100644
--- a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/ResDiffDecoder.java
+++ b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/ResDiffDecoder.java
@@ -42,17 +42,17 @@
  * Created by zhangshaowen on 16/8/8.
  */
 public class ResDiffDecoder extends BaseDecoder {
-    private static final String TEST_RESOURCE_NAME        = "only_use_to_test_tinker_resource.txt";
+    private static final String TEST_RESOURCE_NAME = "only_use_to_test_tinker_resource.txt";
     private static final String TEST_RESOURCE_ASSETS_PATH = "assets/" + TEST_RESOURCE_NAME;
 
-    private static final String TEMP_RES_ZIP  = "temp_res.zip";
+    private static final String TEMP_RES_ZIP = "temp_res.zip";
     private static final String TEMP_RES_7ZIP = "temp_res_7ZIP.zip";
-    private final InfoWriter                     logWriter;
-    private final InfoWriter                     metaWriter;
-    private       ArrayList<String>              addedSet;
-    private       ArrayList<String>              modifiedSet;
-    private       ArrayList<String>              largeModifiedSet;
-    private       HashMap<String, LargeModeInfo> largeModifiedMap;
+    private final InfoWriter logWriter;
+    private final InfoWriter metaWriter;
+    private ArrayList<String> addedSet;
+    private ArrayList<String> modifiedSet;
+    private ArrayList<String> largeModifiedSet;
+    private HashMap<String, LargeModeInfo> largeModifiedMap;
     private ArrayList<String> deletedSet;
 
     public ResDiffDecoder(Configuration config, String metaPath, String logPath) throws IOException {
@@ -108,11 +108,12 @@ public boolean patch(File oldFile, File newFile) throws IOException, TinkerPatch
 
         File outputFile = getOutputPath(newFile).toFile();
 
-        if (oldFile == null || !oldFile.exists()) {
+        if (oldFile == null || !oldFile.exists()) {//发现新增的资源文件
             if (Utils.checkFileInPattern(config.mResIgnoreChangePattern, name)) {
                 Logger.e("found add resource: " + name + " ,but it match ignore change pattern, just ignore!");
                 return false;
             }
+            //复制到tinker_result的目录下
             FileOperation.copyFileUsingStream(newFile, outputFile);
             addedSet.add(name);
             writeResLog(newFile, oldFile, TypedValue.ADD);
@@ -148,11 +149,13 @@ public boolean patch(File oldFile, File newFile) throws IOException, TinkerPatch
         return true;
     }
 
+    //处理修改的资源
     private boolean dealWithModeFile(String name, String newMd5, File oldFile, File newFile, File outputFile) throws IOException {
         if (checkLargeModFile(newFile)) {
             if (!outputFile.getParentFile().exists()) {
                 outputFile.getParentFile().mkdirs();
             }
+            //资源使用BSD进行diff
             BSDiff.bsdiff(oldFile, newFile, outputFile);
             //treat it as normal modify
             if (Utils.checkBsDiffFileSize(outputFile, newFile)) {
@@ -181,25 +184,25 @@ private void writeResLog(File newFile, File oldFile, int mode) throws IOExceptio
                     relative = getRelativePathStringToNewFile(newFile);
                     Logger.d("Found add resource: " + relative);
                     log = "add resource: " + relative + ", oldSize=" + FileOperation.getFileSizes(oldFile) + ", newSize="
-                        + FileOperation.getFileSizes(newFile);
+                            + FileOperation.getFileSizes(newFile);
                     break;
                 case TypedValue.MOD:
                     relative = getRelativePathStringToNewFile(newFile);
                     Logger.d("Found modify resource: " + relative);
                     log = "modify resource: " + relative + ", oldSize=" + FileOperation.getFileSizes(oldFile) + ", newSize="
-                        + FileOperation.getFileSizes(newFile);
+                            + FileOperation.getFileSizes(newFile);
                     break;
                 case TypedValue.DEL:
                     relative = getRelativePathStringToOldFile(oldFile);
                     Logger.d("Found deleted resource: " + relative);
                     log = "deleted resource: " + relative + ", oldSize=" + FileOperation.getFileSizes(oldFile) + ", newSize="
-                        + FileOperation.getFileSizes(newFile);
+                            + FileOperation.getFileSizes(newFile);
                     break;
                 case TypedValue.LARGE_MOD:
                     relative = getRelativePathStringToNewFile(newFile);
                     Logger.d("Found large modify resource: " + relative + " size:" + newFile.length());
                     log = "large modify resource: " + relative + ", oldSize=" + FileOperation.getFileSizes(oldFile) + ", newSize="
-                        + FileOperation.getFileSizes(newFile);
+                            + FileOperation.getFileSizes(newFile);
                     break;
             }
             logWriter.writeLineToInfoFile(log);
@@ -217,7 +220,7 @@ private void addAssetsFileForTestResource() throws IOException {
         addedSet.add(TEST_RESOURCE_ASSETS_PATH);
         Logger.d("Add Test resource file: " + TEST_RESOURCE_ASSETS_PATH);
         String log = "add test resource: " + TEST_RESOURCE_ASSETS_PATH + ", oldSize=" + 0 + ", newSize="
-            + FileOperation.getFileSizes(dest);
+                + FileOperation.getFileSizes(dest);
         logWriter.writeLineToInfoFile(log);
     }
 
@@ -239,7 +242,7 @@ public void onAllPatchesEnd() throws IOException, TinkerPatchException {
         if (config.mUsingGradle) {
             final boolean ignoreWarning = config.mIgnoreWarning;
             final boolean resourceArscChanged = modifiedSet.contains(TypedValue.RES_ARSC)
-                || largeModifiedSet.contains(TypedValue.RES_ARSC);
+                    || largeModifiedSet.contains(TypedValue.RES_ARSC);
             if (resourceArscChanged && !config.mUseApplyResource) {
                 if (ignoreWarning) {
                     //ignoreWarning, just log
@@ -248,7 +251,7 @@ public void onAllPatchesEnd() throws IOException, TinkerPatchException {
                     Logger.e("Warning:ignoreWarning is false, but resources.arsc is changed, you should use applyResourceMapping mode to build the new apk, otherwise, it may be crash at some times");
 
                     throw new TinkerPatchException(
-                        String.format("ignoreWarning is false, but resources.arsc is changed, you should use applyResourceMapping mode to build the new apk, otherwise, it may be crash at some times")
+                            String.format("ignoreWarning is false, but resources.arsc is changed, you should use applyResourceMapping mode to build the new apk, otherwise, it may be crash at some times")
                     );
                 }
             } /*else if (config.mUseApplyResource) {
@@ -274,7 +277,7 @@ public void onAllPatchesEnd() throws IOException, TinkerPatchException {
 
         // last add test res in assets for user cannot ignore it;
         addAssetsFileForTestResource();
-
+        //临时的只包含patch资源的zip 用于下一步全量合成
         File tempResZip = new File(config.mOutFolder + File.separator + TEMP_RES_ZIP);
         final File tempResFiles = config.mTempResultDir;
 
@@ -282,12 +285,13 @@ public void onAllPatchesEnd() throws IOException, TinkerPatchException {
         FileOperation.zipInputDir(tempResFiles, tempResZip, null);
         File extractToZip = new File(config.mOutFolder + File.separator + TypedValue.RES_OUT);
 
+        //将patch 资源和原始资源进行合成  生成resources_out  用于查看全量合成结果
         String resZipMd5 = Utils.genResOutputFile(extractToZip, tempResZip, config,
-            addedSet, modifiedSet, deletedSet, largeModifiedSet, largeModifiedMap);
+                addedSet, modifiedSet, deletedSet, largeModifiedSet, largeModifiedMap);
 
         Logger.e("Final normal zip resource: %s, size=%d, md5=%s", extractToZip.getName(), extractToZip.length(), resZipMd5);
         logWriter.writeLineToInfoFile(
-            String.format("Final normal zip resource: %s, size=%d, md5=%s", extractToZip.getName(), extractToZip.length(), resZipMd5)
+                String.format("Final normal zip resource: %s, size=%d, md5=%s", extractToZip.getName(), extractToZip.length(), resZipMd5)
         );
         //delete temp file
         FileOperation.deleteFile(tempResZip);
@@ -302,12 +306,12 @@ public void onAllPatchesEnd() throws IOException, TinkerPatchException {
             if (tempRes7Zip.exists()) {
 
                 String res7zipMd5 = Utils.genResOutputFile(extractTo7Zip, tempRes7Zip, config,
-                    addedSet, modifiedSet, deletedSet, largeModifiedSet, largeModifiedMap);
+                        addedSet, modifiedSet, deletedSet, largeModifiedSet, largeModifiedMap);
                 //delete temp file
                 FileOperation.deleteFile(tempRes7Zip);
                 Logger.e("Final 7zip resource: %s, size=%d, md5=%s", extractTo7Zip.getName(), extractTo7Zip.length(), res7zipMd5);
                 logWriter.writeLineToInfoFile(
-                    String.format("Final 7zip resource: %s, size=%d, md5=%s", extractTo7Zip.getName(), extractTo7Zip.length(), res7zipMd5)
+                        String.format("Final 7zip resource: %s, size=%d, md5=%s", extractTo7Zip.getName(), extractTo7Zip.length(), res7zipMd5)
                 );
             }
         }
@@ -398,9 +402,9 @@ private void writeMetaFile(ArrayList<String> set, int mode) {
     }
 
     class DeletedResVisitor extends SimpleFileVisitor<Path> {
-        Configuration     config;
-        Path              newApkPath;
-        Path              oldApkPath;
+        Configuration config;
+        Path newApkPath;
+        Path oldApkPath;
         ArrayList<String> deletedFiles;
 
         DeletedResVisitor(Configuration config, Path newPath, Path oldPath) {
diff --git a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/DexClassesComparator.java b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/DexClassesComparator.java
index 796c0102..170786d7 100644
--- a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/DexClassesComparator.java
+++ b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/DexClassesComparator.java
@@ -179,7 +179,7 @@ public void startCheck(DexGroup oldDexGroup, DexGroup newDexGroup) {
         // Map classDesc and typeIndex to classInfo
         // and collect typeIndex of classes to check in oldDexes.
         for (Dex oldDex : oldDexGroup.dexes) {
-            int classDefIndex = 0;
+            int classDefIndex = 0;//每个类在哪个dex中
             for (ClassDef oldClassDef : oldDex.classDefs()) {
                 String desc = oldDex.typeNames().get(oldClassDef.typeIndex);
                 if (Utils.isStringMatchesPatterns(desc, patternsOfClassDescToCheck)) {
@@ -235,30 +235,29 @@ public void startCheck(DexGroup oldDexGroup, DexGroup newDexGroup) {
             deletedClassInfoList.add(oldClassDescriptorToClassInfoMap.get(desc));
         }
 
-        Set<String> addedClassDescs = new HashSet<>(newDescriptorOfClassesToCheck);
-        addedClassDescs.removeAll(oldDescriptorOfClassesToCheck);
+        Set<String> addedClassDescs = new HashSet<>(newDescriptorOfClassesToCheck);//所有的新的中的class
+        addedClassDescs.removeAll(oldDescriptorOfClassesToCheck);//去除老的中的class
 
         for (String desc : addedClassDescs) {
             logger.i(TAG, "Added class: %s", desc);
-            addedClassInfoList.add(newClassDescriptorToClassInfoMap.get(desc));
+            addedClassInfoList.add(newClassDescriptorToClassInfoMap.get(desc));//留下来的就是增加的class
         }
 
         Set<String> mayBeChangedClassDescs = new HashSet<>(oldDescriptorOfClassesToCheck);
         mayBeChangedClassDescs.retainAll(newDescriptorOfClassesToCheck);
 
-        for (String desc : mayBeChangedClassDescs) {
+        for (String desc : mayBeChangedClassDescs) {//新旧中都有的class
             DexClassInfo oldClassInfo = oldClassDescriptorToClassInfoMap.get(desc);
             DexClassInfo newClassInfo = newClassDescriptorToClassInfoMap.get(desc);
             switch (compareMode) {
-                case COMPARE_MODE_NORMAL: {
+                case COMPARE_MODE_NORMAL: {//新 旧中的同名class 改变了
                     if (!isSameClass(
                             oldClassInfo.owner,
                             newClassInfo.owner,
                             oldClassInfo.classDef,
-                            newClassInfo.classDef
-                    )) {
+                            newClassInfo.classDef)) {
                         logger.i(TAG, "Changed class: %s", desc);
-                        changedClassDescToClassInfosMap.put(
+                        changedClassDescToClassInfosMap.put(//添加改变的
                                 desc, new DexClassInfo[]{oldClassInfo, newClassInfo}
                         );
                     }
diff --git a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/ExcludedClassModifiedChecker.java b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/ExcludedClassModifiedChecker.java
index 1ed5a31c..0b4f9cf4 100644
--- a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/ExcludedClassModifiedChecker.java
+++ b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/ExcludedClassModifiedChecker.java
@@ -103,7 +103,7 @@ public void checkIfExcludedClassWasModifiedInNewDex(File oldFile, File newFile)
                         } else if (newFile == null) {
                             stmCode = STMCODE_ERROR_PRIMARY_NEW_DEX_IS_MISSING;
                         } else {
-                            dexCmptor.startCheck(oldDex, newDex);
+                            dexCmptor.startCheck(oldDex, newDex);//进行对比
                             deletedClassInfos = dexCmptor.getDeletedClassInfos();
                             addedClassInfos = dexCmptor.getAddedClassInfos();
                             changedClassInfosMap = new HashMap<>(dexCmptor.getChangedClassDescToInfosMap());
@@ -214,6 +214,7 @@ public void checkIfExcludedClassWasModifiedInNewDex(File oldFile, File newFile)
         }
     }
 
+    // 名字为classes.dex
     public boolean isPrimaryDex(File dexFile) {
         Path dexFilePath = dexFile.toPath();
         Path parentPath = config.mTempUnzipOldDir.toPath();
diff --git a/tinker-sample-android/app/build.gradle b/tinker-sample-android/app/build.gradle
index 8af387d0..f1d7d4e8 100644
--- a/tinker-sample-android/app/build.gradle
+++ b/tinker-sample-android/app/build.gradle
@@ -138,14 +138,14 @@ ext {
 
     //for normal build
     //old apk file to build patch apk
-    tinkerOldApkPath = "${bakPath}/app-debug-1018-17-32-47.apk"
+    tinkerOldApkPath = "${bakPath}/app-debug-0522-14-32-29.apk"
     //proguard mapping file to build patch apk
-    tinkerApplyMappingPath = "${bakPath}/app-debug-1018-17-32-47-mapping.txt"
+    tinkerApplyMappingPath = "${bakPath}/app-debug-0522-14-32-29-mapping.txt"
     //resource R.txt to build patch apk, must input if there is resource changed
-    tinkerApplyResourcePath = "${bakPath}/app-debug-1018-17-32-47-R.txt"
+    tinkerApplyResourcePath = "${bakPath}/app-debug-0522-14-32-29-R.txt"
 
     //only use for build all flavor, if not, just ignore this field
-    tinkerBuildFlavorDirectory = "${bakPath}/app-1018-17-32-47"
+    tinkerBuildFlavorDirectory = "${bakPath}/app-0522-14-32-29"
 }
 
 
@@ -198,7 +198,7 @@ if (buildWithTinker()) {
          *         it won't crash, but these changes can't effect. you may ignore it
          * case 5: resources.arsc has changed, but we don't use applyResourceMapping to build
          */
-        ignoreWarning = false
+        ignoreWarning = true
 
         /**
          * optional，default 'true'
diff --git a/tinker-sample-android/app/src/main/java/tinker/sample/android/app/MainActivity.java b/tinker-sample-android/app/src/main/java/tinker/sample/android/app/MainActivity.java
index 6bc8122b..62fa8909 100644
--- a/tinker-sample-android/app/src/main/java/tinker/sample/android/app/MainActivity.java
+++ b/tinker-sample-android/app/src/main/java/tinker/sample/android/app/MainActivity.java
@@ -49,7 +49,9 @@ protected void onCreate(Bundle savedInstanceState) {
         Log.e(TAG, "i am on onCreate classloader:" + MainActivity.class.getClassLoader().toString());
         //test resource change
         Log.e(TAG, "i am on onCreate string:" + getResources().getString(R.string.test_resource));
-//        Log.e(TAG, "i am on patch onCreate");
+        Log.e(TAG, "i am on patch onCreate");
+        Log.e(TAG, "i am on patch onCreate1");
+        Log.e(TAG, "i am on patch onCreate1");
 
         Button loadPatchButton = (Button) findViewById(R.id.loadPatch);
 
diff --git a/tinker-sample-android/app/src/main/res/layout/activity_main.xml b/tinker-sample-android/app/src/main/res/layout/activity_main.xml
index e7d4180a..476ffbdb 100644
--- a/tinker-sample-android/app/src/main/res/layout/activity_main.xml
+++ b/tinker-sample-android/app/src/main/res/layout/activity_main.xml
@@ -1,19 +1,19 @@
 <?xml version="1.0" encoding="utf-8"?>
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-                xmlns:tools="http://schemas.android.com/tools"
-                android:layout_width="match_parent"
-                android:layout_height="match_parent"
-                android:paddingBottom="@dimen/activity_vertical_margin"
-                android:paddingLeft="@dimen/activity_horizontal_margin"
-                android:paddingRight="@dimen/activity_horizontal_margin"
-                android:paddingTop="@dimen/activity_vertical_margin"
-                tools:context=".app.MainActivity">
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    tools:context=".app.MainActivity">
 
     <TextView
         android:id="@+id/textView"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="Sample patch!"/>
+        android:text="Sample patch!" />
 
     <Button
         android:id="@+id/loadPatch"
@@ -22,7 +22,7 @@
         android:layout_alignParentLeft="true"
         android:layout_alignParentStart="true"
         android:layout_below="@+id/textView"
-        android:text="load patch"/>
+        android:text="load patch" />
 
     <Button
         android:id="@+id/loadLibrary"
@@ -31,7 +31,7 @@
         android:layout_alignParentLeft="true"
         android:layout_alignParentStart="true"
         android:layout_below="@+id/loadPatch"
-        android:text="load library"/>
+        android:text="load library" />
 
     <Button
         android:id="@+id/cleanPatch"
@@ -40,7 +40,8 @@
         android:layout_alignParentLeft="true"
         android:layout_alignParentStart="true"
         android:layout_below="@+id/loadLibrary"
-        android:text="clean patch"/>
+        android:text="clean patch" />
+
     <Button
         android:id="@+id/killSelf"
         android:layout_width="wrap_content"
@@ -48,7 +49,8 @@
         android:layout_alignParentLeft="true"
         android:layout_alignParentStart="true"
         android:layout_below="@+id/cleanPatch"
-        android:text="kill self"/>
+        android:text="kill self" />
+
     <Button
         android:id="@+id/showInfo"
         android:layout_width="wrap_content"
@@ -56,5 +58,13 @@
         android:layout_alignParentLeft="true"
         android:layout_alignParentStart="true"
         android:layout_below="@+id/killSelf"
-        android:text="show info"/>
+        android:text="show info" />
+
+
+    <ImageView
+        android:id="@+id/image"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:src="@mipmap/avatar_bo" />
+
 </RelativeLayout>
diff --git a/tinker-sample-android/app/src/main/res/mipmap-xxhdpi/avatar_bo.png b/tinker-sample-android/app/src/main/res/mipmap-xxhdpi/avatar_bo.png
new file mode 100755
index 00000000..69d9fc71
Binary files /dev/null and b/tinker-sample-android/app/src/main/res/mipmap-xxhdpi/avatar_bo.png differ
