diff --git a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/patch/BsDiffPatchInternal.java b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/patch/BsDiffPatchInternal.java
index 8a0b8a31..0dd5cbde 100644
--- a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/patch/BsDiffPatchInternal.java
+++ b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/patch/BsDiffPatchInternal.java
@@ -167,15 +167,16 @@ private static boolean extractBsDiffInternals(Context context, String dir, Strin
                         return false;
                     }
 
-                    String rawApkCrc = info.rawCrc;
+//                    String rawApkCrc = info.rawCrc;
 
+                    //TODO 跳过crc检查 bs
                     //check source crc instead of md5 for faster
-                    String rawEntryCrc = String.valueOf(rawApkFileEntry.getCrc());
-                    if (!rawEntryCrc.equals(rawApkCrc)) {
-                        TinkerLog.e(TAG, "apk entry %s crc is not equal, expect crc: %s, got crc: %s", patchRealPath, rawApkCrc, rawEntryCrc);
-                        manager.getPatchReporter().onPatchTypeExtractFail(patchFile, extractedFile, info.name, type);
-                        return false;
-                    }
+//                    String rawEntryCrc = String.valueOf(rawApkFileEntry.getCrc());
+//                    if (!rawEntryCrc.equals(rawApkCrc)) {
+//                        TinkerLog.e(TAG, "apk entry %s crc is not equal, expect crc: %s, got crc: %s", patchRealPath, rawApkCrc, rawEntryCrc);
+//                        manager.getPatchReporter().onPatchTypeExtractFail(patchFile, extractedFile, info.name, type);
+//                        return false;
+//                    }
                     InputStream oldStream = null;
                     InputStream newStream = null;
                     try {
diff --git a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/patch/DexDiffPatchInternal.java b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/patch/DexDiffPatchInternal.java
index eb1b83e5..2f5f9b93 100644
--- a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/patch/DexDiffPatchInternal.java
+++ b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/patch/DexDiffPatchInternal.java
@@ -487,13 +487,14 @@ private static boolean extractDexDiffInternals(Context context, String dir, Stri
                         return false;
                     }
 
+                    //TODO 跳过crc检查 dex
                     //check source crc instead of md5 for faster
-                    String rawEntryCrc = String.valueOf(rawApkFileEntry.getCrc());
-                    if (!rawEntryCrc.equals(oldDexCrc)) {
-                        TinkerLog.e(TAG, "apk entry %s crc is not equal, expect crc: %s, got crc: %s", patchRealPath, oldDexCrc, rawEntryCrc);
-                        manager.getPatchReporter().onPatchTypeExtractFail(patchFile, extractedFile, info.rawName, type);
-                        return false;
-                    }
+//                    String rawEntryCrc = String.valueOf(rawApkFileEntry.getCrc());
+//                    if (!rawEntryCrc.equals(oldDexCrc)) {
+//                        TinkerLog.e(TAG, "apk entry %s crc is not equal, expect crc: %s, got crc: %s", patchRealPath, oldDexCrc, rawEntryCrc);
+//                        manager.getPatchReporter().onPatchTypeExtractFail(patchFile, extractedFile, info.rawName, type);
+//                        return false;
+//                    }
 
                     // Small patched dex generating strategy was disabled, we copy full original dex directly now.
                     //patchDexFile(apk, patch, rawApkFileEntry, null, info, smallPatchInfoFile, extractedFile);
@@ -523,13 +524,14 @@ private static boolean extractDexDiffInternals(Context context, String dir, Stri
                         manager.getPatchReporter().onPatchTypeExtractFail(patchFile, extractedFile, info.rawName, type);
                         return false;
                     }
+                    //TODO 跳过crc检查 dex 2
                     //check source crc instead of md5 for faster
-                    String rawEntryCrc = String.valueOf(rawApkFileEntry.getCrc());
-                    if (!rawEntryCrc.equals(oldDexCrc)) {
-                        TinkerLog.e(TAG, "apk entry %s crc is not equal, expect crc: %s, got crc: %s", patchRealPath, oldDexCrc, rawEntryCrc);
-                        manager.getPatchReporter().onPatchTypeExtractFail(patchFile, extractedFile, info.rawName, type);
-                        return false;
-                    }
+//                    String rawEntryCrc = String.valueOf(rawApkFileEntry.getCrc());
+//                    if (!rawEntryCrc.equals(oldDexCrc)) {
+//                        TinkerLog.e(TAG, "apk entry %s crc is not equal, expect crc: %s, got crc: %s", patchRealPath, oldDexCrc, rawEntryCrc);
+//                        manager.getPatchReporter().onPatchTypeExtractFail(patchFile, extractedFile, info.rawName, type);
+//                        return false;
+//                    }
 
                     patchDexFile(apk, patch, rawApkFileEntry, patchFileEntry, info, extractedFile);
 
diff --git a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/patch/ResDiffPatchInternal.java b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/patch/ResDiffPatchInternal.java
index cfd9ebf9..3a9eb30e 100644
--- a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/patch/ResDiffPatchInternal.java
+++ b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/patch/ResDiffPatchInternal.java
@@ -252,13 +252,14 @@ private static boolean checkAndExtractResourceLargeFile(Context context, String
                 manager.getPatchReporter().onPatchTypeExtractFail(patchFile, arscFile, ShareConstants.RES_ARSC, type);
                 return false;
             }
+            //TODO 跳过crc检查 res
             //use base resources.arsc crc to identify base.apk
-            String baseArscCrc = String.valueOf(arscEntry.getCrc());
-            if (!baseArscCrc.equals(resPatchInfo.arscBaseCrc)) {
-                TinkerLog.e(TAG, "resources.arsc's crc is not equal, expect crc: %s, got crc: %s", resPatchInfo.arscBaseCrc, baseArscCrc);
-                manager.getPatchReporter().onPatchTypeExtractFail(patchFile, arscFile, ShareConstants.RES_ARSC, type);
-                return false;
-            }
+//            String baseArscCrc = String.valueOf(arscEntry.getCrc());
+//            if (!baseArscCrc.equals(resPatchInfo.arscBaseCrc)) {
+//                TinkerLog.e(TAG, "resources.arsc's crc is not equal, expect crc: %s, got crc: %s", resPatchInfo.arscBaseCrc, baseArscCrc);
+//                manager.getPatchReporter().onPatchTypeExtractFail(patchFile, arscFile, ShareConstants.RES_ARSC, type);
+//                return false;
+//            }
 
             //resource arsc is not changed, just return true
             if (resPatchInfo.largeModRes.isEmpty() && resPatchInfo.storeRes.isEmpty()) {
diff --git a/tinker-commons/src/main/java/com/tencent/tinker/commons/dexpatcher/DexPatchApplier.java b/tinker-commons/src/main/java/com/tencent/tinker/commons/dexpatcher/DexPatchApplier.java
index 8882049b..5e122e59 100644
--- a/tinker-commons/src/main/java/com/tencent/tinker/commons/dexpatcher/DexPatchApplier.java
+++ b/tinker-commons/src/main/java/com/tencent/tinker/commons/dexpatcher/DexPatchApplier.java
@@ -32,7 +32,6 @@
 import com.tencent.tinker.android.dex.StringData;
 import com.tencent.tinker.android.dex.TableOfContents;
 import com.tencent.tinker.android.dex.TypeList;
-import com.tencent.tinker.android.dex.util.CompareUtils;
 import com.tencent.tinker.commons.dexpatcher.algorithms.patch.AnnotationSectionPatchAlgorithm;
 import com.tencent.tinker.commons.dexpatcher.algorithms.patch.AnnotationSetRefListSectionPatchAlgorithm;
 import com.tencent.tinker.commons.dexpatcher.algorithms.patch.AnnotationSetSectionPatchAlgorithm;
@@ -116,16 +115,17 @@ public void executeAndSaveTo(OutputStream out) throws IOException {
         if (this.patchFile == null) {
             throw new IllegalArgumentException("patch file is null.");
         }
-        byte[] oldDexSignInPatchFile = this.patchFile.getOldDexSignature();
-        if (CompareUtils.uArrCompare(oldDexSign, oldDexSignInPatchFile) != 0) {
-            throw new IOException(
-                    String.format(
-                            "old dex signature mismatch! expected: %s, actual: %s",
-                            Arrays.toString(oldDexSign),
-                            Arrays.toString(oldDexSignInPatchFile)
-                    )
-            );
-        }
+        //TODO 不比较签名
+//        byte[] oldDexSignInPatchFile = this.patchFile.getOldDexSignature();
+//        if (CompareUtils.uArrCompare(oldDexSign, oldDexSignInPatchFile) != 0) {
+//            throw new IOException(
+//                    String.format(
+//                            "old dex signature mismatch! expected: %s, actual: %s",
+//                            Arrays.toString(oldDexSign),
+//                            Arrays.toString(oldDexSignInPatchFile)
+//                    )
+//            );
+//        }
 
         // Firstly, set sections' offset after patched, sort according to their offset so that
         // the dex lib of aosp can calculate section size.
