diff --git a/settings.gradle b/settings.gradle
index ed01852c..24c17a00 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -7,3 +7,4 @@ include ':tinker-build:tinker-patch-lib'
 include ':tinker-build:tinker-patch-gradle-plugin'
 include ':third-party:aosp-dexutils'
 include ':third-party:bsdiff-util'
+include ':tinker-sample-android:app'
diff --git a/tinker-sample-android/app/build.gradle b/tinker-sample-android/app/build.gradle
index 8af387d0..fb3e99cc 100644
--- a/tinker-sample-android/app/build.gradle
+++ b/tinker-sample-android/app/build.gradle
@@ -6,7 +6,9 @@ dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
     testCompile 'junit:junit:4.12'
     compile "com.android.support:appcompat-v7:23.1.1"
+    //tinker的核心库
     compile("com.tencent.tinker:tinker-android-lib:${TINKER_VERSION}") { changing = true }
+    //可选，用于生成application类
     provided("com.tencent.tinker:tinker-android-anno:${TINKER_VERSION}") { changing = true }
 
     compile "com.android.support:multidex:1.0.1"
@@ -16,13 +18,14 @@ dependencies {
 //    compile "org.scala-lang:scala-library:2.11.7"
 
     //use for local maven test
-//    compile("com.tencent.tinker:tinker-android-loader:${TINKER_VERSION}") { changing = true }
-//    compile("com.tencent.tinker:aosp-dexutils:${TINKER_VERSION}") { changing = true }
-//    compile("com.tencent.tinker:bsdiff-util:${TINKER_VERSION}") { changing = true }
-//    compile("com.tencent.tinker:tinker-commons:${TINKER_VERSION}") { changing = true }
+    compile("com.tencent.tinker:tinker-android-loader:${TINKER_VERSION}") { changing = true }
+    compile("com.tencent.tinker:aosp-dexutils:${TINKER_VERSION}") { changing = true }
+    compile("com.tencent.tinker:bsdiff-util:${TINKER_VERSION}") { changing = true }
+    compile("com.tencent.tinker:tinker-commons:${TINKER_VERSION}") { changing = true }
 
 }
 
+//使用git提交的id作为tinkerId使用,每次提交代码之后都会改变
 def gitSha() {
     try {
         String gitRev = 'git rev-parse --short HEAD'.execute(null, project.rootDir).text.trim()
@@ -138,11 +141,11 @@ ext {
 
     //for normal build
     //old apk file to build patch apk
-    tinkerOldApkPath = "${bakPath}/app-debug-1018-17-32-47.apk"
+    tinkerOldApkPath = "${bakPath}/app-debug-0517-15-08-50.apk"
     //proguard mapping file to build patch apk
     tinkerApplyMappingPath = "${bakPath}/app-debug-1018-17-32-47-mapping.txt"
     //resource R.txt to build patch apk, must input if there is resource changed
-    tinkerApplyResourcePath = "${bakPath}/app-debug-1018-17-32-47-R.txt"
+    tinkerApplyResourcePath = "${bakPath}/app-debug-0517-14-51-04-R.txt"
 
     //only use for build all flavor, if not, just ignore this field
     tinkerBuildFlavorDirectory = "${bakPath}/app-1018-17-32-47"
@@ -172,7 +175,9 @@ def buildWithTinker() {
 def getTinkerBuildFlavorDirectory() {
     return ext.tinkerBuildFlavorDirectory
 }
-
+/**
+ * apply tinker插件
+ */
 if (buildWithTinker()) {
     apply plugin: 'com.tencent.tinker.patch'
 
@@ -392,10 +397,12 @@ if (buildWithTinker()) {
                         def fileNamePrefix = "${project.name}-${variant.baseName}"
                         def newFileNamePrefix = hasFlavors ? "${fileNamePrefix}" : "${fileNamePrefix}-${date}"
 
+                        //自定义bak文件的保存目录
                         def destPath = hasFlavors ? file("${bakPath}/${project.name}-${date}/${variant.flavorName}") : bakPath
-                        from variant.outputs.outputFile
-                        into destPath
-                        rename { String fileName ->
+                        //复制命令
+                        from variant.outputs.outputFile //需要复制的源文件
+                        into destPath //复制动作的目标目录
+                        rename { String fileName ->//重命名文件
                             fileName.replace("${fileNamePrefix}.apk", "${newFileNamePrefix}.apk")
                         }
 
@@ -415,9 +422,11 @@ if (buildWithTinker()) {
             }
         }
     }
+    //工程编译结束后,对多渠道打包的每个渠道包的处理，包名重命名文件
     project.afterEvaluate {
         //sample use for build all flavor for one time
         if (hasFlavors) {
+            //release模式
             task(tinkerPatchAllFlavorRelease) {
                 group = 'tinker'
                 def originOldPath = getTinkerBuildFlavorDirectory()
@@ -436,6 +445,7 @@ if (buildWithTinker()) {
                 }
             }
 
+            //debug模式
             task(tinkerPatchAllFlavorDebug) {
                 group = 'tinker'
                 def originOldPath = getTinkerBuildFlavorDirectory()
diff --git a/tinker-sample-android/app/src/main/java/tinker/sample/android/app/MainActivity.java b/tinker-sample-android/app/src/main/java/tinker/sample/android/app/MainActivity.java
index 6bc8122b..a46e5462 100644
--- a/tinker-sample-android/app/src/main/java/tinker/sample/android/app/MainActivity.java
+++ b/tinker-sample-android/app/src/main/java/tinker/sample/android/app/MainActivity.java
@@ -56,7 +56,12 @@ protected void onCreate(Bundle savedInstanceState) {
         loadPatchButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                TinkerInstaller.onReceiveUpgradePatch(getApplicationContext(), Environment.getExternalStorageDirectory().getAbsolutePath() + "/patch_signed_7zip.apk");
+                //有外置sdcard的时候获取的是/storage/sdcard1
+                String absolutePath = Environment.getExternalStorageDirectory().getAbsolutePath();
+                Log.e(TAG, "absolutePath:" + absolutePath);
+                String s = absolutePath + "/patch_signed_7zip.apk";
+                Log.e(TAG, "fullPath:" + s);
+                TinkerInstaller.onReceiveUpgradePatch(getApplicationContext(), s);
             }
         });
 
