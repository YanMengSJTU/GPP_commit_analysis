diff --git a/README.md b/README.md
index 5ad124a8..2985d6d9 100644
--- a/README.md
+++ b/README.md
@@ -1,5 +1,7 @@
 ## Tinker
 [![license](http://img.shields.io/badge/license-BSD3-brightgreen.svg?style=flat)](https://github.com/Tencent/tinker/blob/master/LICENSE)
+[![Release Version](https://img.shields.io/badge/release-1.6.0-red.svg)](https://github.com/Tencent/tinker/releases) 
+[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/Tencent/tinker/pulls)
 
 Tinker is a hot-fix solution library for Android, it supports dex, library and resources update without reinstalling apk.
 
@@ -68,6 +70,11 @@ For proguard, we have already made the proguard config automatic, and tinker wil
 
 For more tinker configurations, learn more at the sample [app/build.gradle](https://github.com/Tencent/tinker/blob/master/tinker-sample-android/app/build.gradle).
 
+## Known Issues
+There are some issues which Tinker can't dynamic update.
+
+1. Update AndroidManifest.xml, such as add Android Component.
+
 ## Support
 Any problem?
 
diff --git a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AndroidNClassLoader.java b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AndroidNClassLoader.java
index 683ba2c0..795eea17 100644
--- a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AndroidNClassLoader.java
+++ b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AndroidNClassLoader.java
@@ -40,10 +40,15 @@ private AndroidNClassLoader(String dexPath, PathClassLoader parent) {
     private static AndroidNClassLoader createAndroidNClassLoader(PathClassLoader original) throws Exception {
         //let all element ""
         AndroidNClassLoader androidNClassLoader = new AndroidNClassLoader("",  original);
-        Object originPathList = findField(original, "pathList").get(original);
+        Field originPathList = findField(original, "pathList");
+        Object originPathListObject = originPathList.get(original);
+        //should reflect definingContext also
+        Field originClassloader = findField(originPathListObject, "definingContext");
+        originClassloader.set(originPathListObject, androidNClassLoader);
+        //copy pathList
         Field pathListField = findField(androidNClassLoader, "pathList");
-        //just use PathClassloader's pathlist
-        pathListField.set(androidNClassLoader, originPathList);
+        //just use PathClassloader's pathList
+        pathListField.set(androidNClassLoader, originPathListObject);
         return androidNClassLoader;
     }
 
diff --git a/tinker-sample-android/app/build.gradle b/tinker-sample-android/app/build.gradle
index 14238cba..ef0f478d 100644
--- a/tinker-sample-android/app/build.gradle
+++ b/tinker-sample-android/app/build.gradle
@@ -320,14 +320,14 @@ if (buildWithTinker()) {
         }
     }
 
-/**
- * task type, you want to bak
- */
+    /**
+    * task type, you want to bak
+    */
     def taskName = "debug"
 
     /**
-     * bak apk and mapping
-     */
+    * bak apk and mapping
+    */
     tasks.all {
         if ("assemble${taskName.capitalize()}".equalsIgnoreCase(it.name)) {
             it.doLast {
