diff --git a/tinker-sample-android/app/build.gradle b/tinker-sample-android/app/build.gradle
index 8af387d0..48a56d08 100644
--- a/tinker-sample-android/app/build.gradle
+++ b/tinker-sample-android/app/build.gradle
@@ -5,7 +5,7 @@ apply plugin: 'com.android.application'
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
     testCompile 'junit:junit:4.12'
-    compile "com.android.support:appcompat-v7:23.1.1"
+    compile "com.android.support:appcompat-v7:25.3.1"
     compile("com.tencent.tinker:tinker-android-lib:${TINKER_VERSION}") { changing = true }
     provided("com.tencent.tinker:tinker-android-anno:${TINKER_VERSION}") { changing = true }
 
@@ -23,23 +23,23 @@ dependencies {
 
 }
 
-def gitSha() {
-    try {
-        String gitRev = 'git rev-parse --short HEAD'.execute(null, project.rootDir).text.trim()
-        if (gitRev == null) {
-            throw new GradleException("can't get git rev, you should add git to system path or just input test value, such as 'testTinkerId'")
-        }
-        return gitRev
-    } catch (Exception e) {
-        throw new GradleException("can't get git rev, you should add git to system path or just input test value, such as 'testTinkerId'")
-    }
-}
+//def gitSha() {
+//    try {
+//        String gitRev = 'git rev-parse --short HEAD'.execute(null, project.rootDir).text.trim()
+//        if (gitRev == null) {
+//            throw new GradleException("can't get git rev, you should add git to system path or just input test value, such as 'testTinkerId'")
+//        }
+//        return gitRev
+//    } catch (Exception e) {
+//        throw new GradleException("can't get git rev, you should add git to system path or just input test value, such as 'testTinkerId'")
+//    }
+//}
 
 def javaVersion = JavaVersion.VERSION_1_7
 
 android {
-    compileSdkVersion 23
-    buildToolsVersion "23.0.2"
+    compileSdkVersion 25
+    buildToolsVersion "25.0.2"
 
     compileOptions {
         sourceCompatibility javaVersion
@@ -58,7 +58,7 @@ android {
                 keyAlias "testres"
                 keyPassword "testres"
             } catch (ex) {
-                throw new InvalidUserDataException(ex.toString())
+//                throw new InvalidUserDataException(ex.toString())
             }
         }
 
@@ -70,7 +70,7 @@ android {
     defaultConfig {
         applicationId "tinker.sample.android"
         minSdkVersion 10
-        targetSdkVersion 22
+        targetSdkVersion 25
         versionCode 1
         versionName "1.0.0"
         /**
@@ -87,7 +87,8 @@ android {
          * client version would update with patch
          * so we can get the newly git version easily!
          */
-        buildConfigField "String", "TINKER_ID", "\"${getTinkerIdValue()}\""
+//        buildConfigField "String", "TINKER_ID", "\"${getTinkerIdValue()}\""
+        buildConfigField "String", "TINKER_ID", "\"TinkerSample\""
         buildConfigField "String", "PLATFORM",  "\"all\""
     }
 
@@ -138,11 +139,11 @@ ext {
 
     //for normal build
     //old apk file to build patch apk
-    tinkerOldApkPath = "${bakPath}/app-debug-1018-17-32-47.apk"
+    tinkerOldApkPath = "${bakPath}/app-debug-0525-17-05-45.apk"
     //proguard mapping file to build patch apk
-    tinkerApplyMappingPath = "${bakPath}/app-debug-1018-17-32-47-mapping.txt"
+    tinkerApplyMappingPath = "${bakPath}/"
     //resource R.txt to build patch apk, must input if there is resource changed
-    tinkerApplyResourcePath = "${bakPath}/app-debug-1018-17-32-47-R.txt"
+    tinkerApplyResourcePath = "${bakPath}/app-debug-0525-17-05-45-R.txt"
 
     //only use for build all flavor, if not, just ignore this field
     tinkerBuildFlavorDirectory = "${bakPath}/app-1018-17-32-47"
@@ -161,9 +162,9 @@ def getApplyResourceMappingPath() {
     return hasProperty("APPLY_RESOURCE") ? APPLY_RESOURCE : ext.tinkerApplyResourcePath
 }
 
-def getTinkerIdValue() {
-    return hasProperty("TINKER_ID") ? TINKER_ID : gitSha()
-}
+//def getTinkerIdValue() {
+//    return hasProperty("TINKER_ID") ? TINKER_ID : gitSha()
+//}
 
 def buildWithTinker() {
     return hasProperty("TINKER_ENABLE") ? TINKER_ENABLE : ext.tinkerEnabled
@@ -239,7 +240,8 @@ if (buildWithTinker()) {
              * we can use git rev, svn rev or simply versionCode.
              * we will gen the tinkerId in your manifest automatic
              */
-            tinkerId = getTinkerIdValue()
+//            tinkerId = getTinkerIdValue()
+            tinkerId = "TinkerSample"
 
             /**
              * if keepDexApply is true, class in which dex refer to the old apk.
diff --git a/tinker-sample-android/app/src/main/java/tinker/sample/android/app/MainActivity.java b/tinker-sample-android/app/src/main/java/tinker/sample/android/app/MainActivity.java
index 6bc8122b..9a80373f 100644
--- a/tinker-sample-android/app/src/main/java/tinker/sample/android/app/MainActivity.java
+++ b/tinker-sample-android/app/src/main/java/tinker/sample/android/app/MainActivity.java
@@ -16,11 +16,13 @@
 
 package tinker.sample.android.app;
 
+import android.Manifest;
 import android.app.AlertDialog;
 import android.content.Context;
 import android.graphics.Typeface;
 import android.os.Bundle;
 import android.os.Environment;
+import android.support.v4.app.ActivityCompat;
 import android.support.v7.app.AppCompatActivity;
 import android.util.Log;
 import android.util.TypedValue;
@@ -49,7 +51,7 @@ protected void onCreate(Bundle savedInstanceState) {
         Log.e(TAG, "i am on onCreate classloader:" + MainActivity.class.getClassLoader().toString());
         //test resource change
         Log.e(TAG, "i am on onCreate string:" + getResources().getString(R.string.test_resource));
-//        Log.e(TAG, "i am on patch onCreate");
+        Log.e(TAG, "i am on patch onCreate");
 
         Button loadPatchButton = (Button) findViewById(R.id.loadPatch);
 
@@ -105,6 +107,12 @@ public void onClick(View v) {
                 showInfo(MainActivity.this);
             }
         });
+
+        requestPermission();
+    }
+
+    private void requestPermission() {
+        ActivityCompat.requestPermissions(this,new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},0);
     }
 
     public boolean showInfo(Context context) {
diff --git a/tinker-sample-android/app/src/main/res/values/strings.xml b/tinker-sample-android/app/src/main/res/values/strings.xml
index d2b63d1e..e1442d28 100644
--- a/tinker-sample-android/app/src/main/res/values/strings.xml
+++ b/tinker-sample-android/app/src/main/res/values/strings.xml
@@ -1,5 +1,5 @@
 <resources>
     <string name="app_name">tinker-sample-android</string>
-    <string name="test_resource">I am in the base apk</string>
-    <!--<string name="test_resource">I am in the patch apk</string>-->
+    <!--<string name="test_resource">I am in the base apk</string>-->
+    <string name="test_resource">I am in the patch apk</string>
 </resources>
diff --git a/tinker-sample-android/build.gradle b/tinker-sample-android/build.gradle
index 08af2ebf..525c86bc 100644
--- a/tinker-sample-android/build.gradle
+++ b/tinker-sample-android/build.gradle
@@ -5,7 +5,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.2.0'
+        classpath 'com.android.tools.build:gradle:2.3.1'
         classpath "com.tencent.tinker:tinker-patch-gradle-plugin:${TINKER_VERSION}"
     }
 }
diff --git a/tinker-sample-android/gradle/wrapper/gradle-wrapper.properties b/tinker-sample-android/gradle/wrapper/gradle-wrapper.properties
index 86d6158a..0264cdcc 100644
--- a/tinker-sample-android/gradle/wrapper/gradle-wrapper.properties
+++ b/tinker-sample-android/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Wed Oct 21 11:34:03 PDT 2015
+#Thu May 25 10:02:49 CST 2017
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.14.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zip
