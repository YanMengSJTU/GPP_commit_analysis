diff --git a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/reporter/DefaultLoadReporter.java b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/reporter/DefaultLoadReporter.java
index 058c929b..70fb8ef2 100644
--- a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/reporter/DefaultLoadReporter.java
+++ b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/reporter/DefaultLoadReporter.java
@@ -87,8 +87,10 @@ public void onLoadPatchVersionChanged(String oldVersion, String newVersion, File
             return;
         }
 
-        //check main process
-        if (!Tinker.with(context).isMainProcess()) {
+        // check if current process installed a new version patch
+        Tinker tinker = Tinker.with(context);
+        TinkerLoadResult tinkerLoadResult = tinker.getTinkerLoadResultIfPresent();
+        if (!tinkerLoadResult.runNewVersion) {
             return;
         }
 
@@ -310,18 +312,15 @@ public void onLoadPackageCheckFail(File patchFile, int errorCode) {
      */
     public void checkAndCleanPatch() {
         Tinker tinker = Tinker.with(context);
-        //only main process can load a new patch
-        if (tinker.isMainProcess()) {
-            TinkerLoadResult tinkerLoadResult = tinker.getTinkerLoadResultIfPresent();
-            //if versionChange and the old patch version is not ""
-            if (tinkerLoadResult.versionChanged) {
-                SharePatchInfo sharePatchInfo = tinkerLoadResult.patchInfo;
-                if (sharePatchInfo != null && !ShareTinkerInternals.isNullOrNil(sharePatchInfo.oldVersion)) {
-                    TinkerLog.w(TAG, "checkAndCleanPatch, oldVersion %s is not null, try kill all other process",
+        TinkerLoadResult tinkerLoadResult = tinker.getTinkerLoadResultIfPresent();
+        // only main process with correct environment can load a new patch
+        if (tinkerLoadResult.runNewVersion) {
+            SharePatchInfo sharePatchInfo = tinkerLoadResult.patchInfo;
+            if (sharePatchInfo != null && !ShareTinkerInternals.isNullOrNil(sharePatchInfo.oldVersion)) {
+                TinkerLog.w(TAG, "checkAndCleanPatch, oldVersion %s is not null, try kill all other process",
                         sharePatchInfo.oldVersion);
 
-                    ShareTinkerInternals.killAllOtherProcess(context);
-                }
+                ShareTinkerInternals.killAllOtherProcess(context);
             }
         }
         tinker.cleanPatch();
diff --git a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/tinker/TinkerApplicationHelper.java b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/tinker/TinkerApplicationHelper.java
index e2a4314e..1cbe1cee 100644
--- a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/tinker/TinkerApplicationHelper.java
+++ b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/tinker/TinkerApplicationHelper.java
@@ -221,13 +221,9 @@ public static String getCurrentVersion(ApplicationLike applicationLike) {
         }
         final String oldVersion = ShareIntentUtil.getStringExtra(tinkerResultIntent, ShareIntentUtil.INTENT_PATCH_OLD_VERSION);
         final String newVersion = ShareIntentUtil.getStringExtra(tinkerResultIntent, ShareIntentUtil.INTENT_PATCH_NEW_VERSION);
-        final boolean isMainProcess = ShareTinkerInternals.isInMainProcess(applicationLike.getApplication());
+        final boolean runNewVersion = ShareIntentUtil.getBooleanExtra(tinkerResultIntent, ShareIntentUtil.INTENT_PATCH_RUN_NEW_VERSION, false);
         if (oldVersion != null && newVersion != null) {
-            if (isMainProcess) {
-                return newVersion;
-            } else {
-                return oldVersion;
-            }
+            return runNewVersion ? newVersion : oldVersion;
         }
         return null;
     }
diff --git a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/tinker/TinkerLoadResult.java b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/tinker/TinkerLoadResult.java
index 3ded4f22..313c5d8a 100644
--- a/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/tinker/TinkerLoadResult.java
+++ b/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/tinker/TinkerLoadResult.java
@@ -43,6 +43,8 @@
     //@Nullable
     public String         oatDir;
 
+    public boolean runNewVersion;
+
     public boolean versionChanged;
 
     public boolean useInterpretMode;
@@ -81,10 +83,10 @@ public boolean parseTinkerResult(Context context, Intent intentResult) {
         oatDir = ShareIntentUtil.getStringExtra(intentResult, ShareIntentUtil.INTENT_PATCH_OAT_DIR);
         useInterpretMode = ShareConstants.INTERPRET_DEX_OPTIMIZE_PATH.equals(oatDir);
 
-        final boolean isMainProcess = tinker.isMainProcess();
+        runNewVersion = ShareIntentUtil.getBooleanExtra(intentResult, ShareIntentUtil.INTENT_PATCH_RUN_NEW_VERSION, false);
 
-        TinkerLog.i(TAG, "parseTinkerResult loadCode:%d, process name:%s, main process:%b, systemOTA:%b, fingerPrint:%s, oatDir:%s, useInterpretMode:%b",
-            loadCode, ShareTinkerInternals.getProcessName(context), isMainProcess, systemOTA, Build.FINGERPRINT, oatDir, useInterpretMode);
+        TinkerLog.i(TAG, "parseTinkerResult loadCode:%d, process name:%s, main process:%b, runNewVersion:%b, systemOTA:%b, fingerPrint:%s, oatDir:%s, useInterpretMode:%b",
+            loadCode, ShareTinkerInternals.getProcessName(context), tinker.isMainProcess(), runNewVersion, systemOTA, Build.FINGERPRINT, oatDir, useInterpretMode);
 
         //@Nullable
         final String oldVersion = ShareIntentUtil.getStringExtra(intentResult, ShareIntentUtil.INTENT_PATCH_OLD_VERSION);
@@ -95,11 +97,7 @@ public boolean parseTinkerResult(Context context, Intent intentResult) {
         final File patchInfoFile = tinker.getPatchInfoFile();
 
         if (oldVersion != null && newVersion != null) {
-            if (isMainProcess) {
-                currentVersion = newVersion;
-            } else {
-                currentVersion = oldVersion;
-            }
+            currentVersion = runNewVersion ? newVersion : oldVersion;
 
             TinkerLog.i(TAG, "parseTinkerResult oldVersion:%s, newVersion:%s, current:%s", oldVersion, newVersion,
                 currentVersion);
@@ -331,7 +329,7 @@ public boolean parseTinkerResult(Context context, Intent intentResult) {
                 if (useInterpretMode) {
                     tinker.getLoadReporter().onLoadInterpret(ShareConstants.TYPE_INTERPRET_OK, null);
                 }
-                if (isMainProcess && versionChanged) {
+                if (runNewVersion) {
                     //change the old version to new
                     tinker.getLoadReporter().onLoadPatchVersionChanged(oldVersion, newVersion, patchDirectory, patchVersionDirectory.getName());
                 }
diff --git a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AbstractTinkerLoader.java b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AbstractTinkerLoader.java
index 926977df..6469a6b9 100644
--- a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AbstractTinkerLoader.java
+++ b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AbstractTinkerLoader.java
@@ -25,5 +25,19 @@
  * Created by zhangshaowen on 16/4/30.
  */
 public abstract class AbstractTinkerLoader {
+
     abstract public Intent tryLoad(TinkerApplication app);
+
+    /**
+     * Should we install a new patch?
+     *
+     * Usually we load the fresh one as soon as the main process
+     * starts, and this will get others killed. However, there are
+     * some scenarios where a not-main process is too important to
+     * be killed, such as a music player process.
+     *
+     * If those process exists (or for other reasons), we return a
+     * FALSE to avoid main process loading the new patch.
+     */
+    abstract public boolean greetNewPatch();
 }
diff --git a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/TinkerLoader.java b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/TinkerLoader.java
index b43a0e0f..74d2c3cc 100644
--- a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/TinkerLoader.java
+++ b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/TinkerLoader.java
@@ -59,6 +59,11 @@ public Intent tryLoad(TinkerApplication app) {
         return resultIntent;
     }
 
+    @Override
+    public boolean greetNewPatch() {
+        return true;
+    }
+
     private void tryLoadPatchFilesInternal(TinkerApplication app, Intent resultIntent) {
         final int tinkerFlag = app.getTinkerFlags();
 
@@ -158,8 +163,12 @@ private void tryLoadPatchFilesInternal(TinkerApplication app, Intent resultInten
         oatDex = ShareTinkerInternals.getCurrentOatMode(app, oatDex);
         resultIntent.putExtra(ShareIntentUtil.INTENT_PATCH_OAT_DIR, oatDex);
 
+        final boolean runNewVersion = mainProcess && versionChanged && greetNewPatch();
+        final boolean runNewOatMode = mainProcess && oatModeChanged;
+        resultIntent.putExtra(ShareIntentUtil.INTENT_PATCH_RUN_NEW_VERSION, runNewVersion);
+
         String version = oldVersion;
-        if (versionChanged && mainProcess) {
+        if (runNewVersion) {
             version = newVersion;
         }
         if (ShareTinkerInternals.isNullOrNil(version)) {
@@ -254,18 +263,15 @@ private void tryLoadPatchFilesInternal(TinkerApplication app, Intent resultInten
 
         resultIntent.putExtra(ShareIntentUtil.INTENT_PATCH_SYSTEM_OTA, isSystemOTA);
 
-        //we should first try rewrite patch info file, if there is a error, we can't load jar
-        if (mainProcess) {
-            if (versionChanged) {
-                patchInfo.oldVersion = version;
-            }
-            if (oatModeChanged) {
-                patchInfo.oatDir = oatDex;
-                // delete interpret odex
-                // for android o, directory change. Fortunately, we don't need to support android o interpret mode any more
-                Log.i(TAG, "tryLoadPatchFiles:oatModeChanged, try to delete interpret optimize files");
-                SharePatchFileUtil.deleteDir(patchVersionDirectory + "/" + ShareConstants.INTERPRET_DEX_OPTIMIZE_PATH);
-            }
+        if (runNewVersion) {
+            patchInfo.oldVersion = version;
+        }
+        if (runNewOatMode) {
+            patchInfo.oatDir = oatDex;
+            // delete interpret odex
+            // for android o, directory change. Fortunately, we don't need to support android o interpret mode any more
+            Log.i(TAG, "tryLoadPatchFiles:oatModeChanged, try to delete interpret optimize files");
+            SharePatchFileUtil.deleteDir(patchVersionDirectory + "/" + ShareConstants.INTERPRET_DEX_OPTIMIZE_PATH);
         }
 
         if (!checkSafeModeCount(app)) {
@@ -283,8 +289,6 @@ private void tryLoadPatchFilesInternal(TinkerApplication app, Intent resultInten
                 // update fingerprint after load success
                 patchInfo.fingerPrint = Build.FINGERPRINT;
                 patchInfo.oatDir = loadTinkerJars ? ShareConstants.INTERPRET_DEX_OPTIMIZE_PATH : ShareConstants.DEFAULT_DEX_OPTIMIZE_PATH;
-                // reset to false
-                oatModeChanged = false;
 
                 if (!SharePatchInfo.rewritePatchInfoFileWithLock(patchInfoFile, patchInfo, patchInfoLockFile)) {
                     ShareIntentUtil.setIntentReturnCode(resultIntent, ShareConstants.ERROR_LOAD_PATCH_REWRITE_PATCH_INFO_FAIL);
@@ -316,7 +320,7 @@ private void tryLoadPatchFilesInternal(TinkerApplication app, Intent resultInten
 
         // Before successfully exit, we should update stored version info and kill other process
         // to make them load latest patch when we first applied newer one.
-        if (mainProcess && versionChanged) {
+        if (runNewVersion) {
             //update old version to new
             if (!SharePatchInfo.rewritePatchInfoFileWithLock(patchInfoFile, patchInfo, patchInfoLockFile)) {
                 ShareIntentUtil.setIntentReturnCode(resultIntent, ShareConstants.ERROR_LOAD_PATCH_REWRITE_PATCH_INFO_FAIL);
diff --git a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/shareutil/ShareIntentUtil.java b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/shareutil/ShareIntentUtil.java
index 87199f78..32710041 100644
--- a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/shareutil/ShareIntentUtil.java
+++ b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/shareutil/ShareIntentUtil.java
@@ -45,6 +45,7 @@
     public static final  String INTENT_PATCH_SYSTEM_OTA          = "intent_patch_system_ota";
     public static final  String INTENT_PATCH_OAT_DIR             = "intent_patch_oat_dir";
     public static final  String INTENT_PATCH_INTERPRET_EXCEPTION = "intent_patch_interpret_exception";
+    public static final  String INTENT_PATCH_RUN_NEW_VERSION     = "intent_patch_run_new_version";
 
 
     private static final String TAG                              = "ShareIntentUtil";
