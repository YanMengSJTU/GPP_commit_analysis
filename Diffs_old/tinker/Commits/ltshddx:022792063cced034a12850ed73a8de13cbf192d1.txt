diff --git a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AndroidNClassLoader.java b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AndroidNClassLoader.java
index 1d964b6c..80637b9e 100644
--- a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AndroidNClassLoader.java
+++ b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/AndroidNClassLoader.java
@@ -47,6 +47,7 @@
     private static ArrayList<DexFile> oldDexFiles = new ArrayList<>();
     private final PathClassLoader originClassLoader;
     private String applicationClassName;
+    private Method findLoadedClassMethod = null;
 
     private AndroidNClassLoader(String dexPath, PathClassLoader parent, Application application) {
         super(dexPath, parent.getParent());
@@ -170,12 +171,16 @@ private static void fixDexElementsForProtectedApp(Application application, Objec
 
     public Class<?> findClass(String name) throws ClassNotFoundException {
         // loader class use default pathClassloader to load
-        if ((name != null
-                && name.startsWith("com.tencent.tinker.loader.")
-                && !name.equals(SystemClassLoaderAdder.CHECK_DEX_CLASS)
-                && !name.equals(CHECK_CLASSLOADER_CLASS))
-                || (applicationClassName != null && TextUtils.equals(applicationClassName, name))) {
-            return originClassLoader.loadClass(name);
+        try {
+            if (findLoadedClassMethod == null) {
+                findLoadedClassMethod = ShareReflectUtil.findMethod(originClassLoader, "findLoadedClass", String.class);
+            }
+            Class<?> loadedClass = (Class<?>) findLoadedClassMethod.invoke(originClassLoader, name);
+            if (loadedClass != null) {
+                return loadedClass;
+            }
+        } catch (Exception ignore) {
+
         }
         return super.findClass(name);
     }
