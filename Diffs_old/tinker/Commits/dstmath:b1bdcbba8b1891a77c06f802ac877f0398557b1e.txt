diff --git a/README.md b/README.md
index 96b34c3c..0ee3d075 100644
--- a/README.md
+++ b/README.md
@@ -13,7 +13,7 @@ Add tinker-gradle-plugin as a dependency in your main `build.gradle` in the root
 ```gradle
 buildscript {
     dependencies {
-        classpath ('com.tencent.tinker:tinker-patch-gradle-plugin:1.6.1')
+        classpath ('com.tencent.tinker:tinker-patch-gradle-plugin:1.6.2')
     }
 }
 ```
@@ -23,9 +23,9 @@ Then you need to "apply" the plugin and add dependencies by adding the following
 ```gradle
 dependencies {
     //optional, help to generate the final application 
-    compile('com.tencent.tinker:tinker-android-anno:1.6.1')
+    compile('com.tencent.tinker:tinker-android-anno:1.6.2')
     //tinker's main Android lib
-    compile('com.tencent.tinker:tinker-android-lib:1.6.1') 
+    compile('com.tencent.tinker:tinker-android-lib:1.6.2') 
 }
 ...
 ...
diff --git a/build.gradle b/build.gradle
index ebce8fe2..143ac207 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,9 +5,9 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.1.0'
+        classpath 'com.android.tools.build:gradle:2.2.0'
         classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
-        classpath "com.github.dcendents:android-maven-gradle-plugin:1.3"
+        classpath "com.github.dcendents:android-maven-gradle-plugin:1.4.1"
     }
 }
 
diff --git a/gradle.properties b/gradle.properties
index d2485317..e90a71f3 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -16,5 +16,5 @@
 # This option should only be used with decoupled projects. More details, visit
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
 # org.gradle.parallel=true
-VERSION_NAME_PREFIX=1.6.1
+VERSION_NAME_PREFIX=1.6.2
 VERSION_NAME_SUFFIX=
\ No newline at end of file
diff --git a/gradle/android-artifacts.gradle b/gradle/android-artifacts.gradle
index 7235ec5a..47735f09 100644
--- a/gradle/android-artifacts.gradle
+++ b/gradle/android-artifacts.gradle
@@ -1,6 +1,12 @@
 apply plugin: 'maven-publish'
 apply plugin: 'com.github.dcendents.android-maven'
 
+android {
+    compileOptions {
+        sourceCompatibility rootProject.ext.javaVersion
+        targetCompatibility rootProject.ext.javaVersion
+    }
+}
 version = version
 group = GROUP
 
diff --git a/gradle/java-artifacts.gradle b/gradle/java-artifacts.gradle
index 0bbd9769..9b8b6e3b 100644
--- a/gradle/java-artifacts.gradle
+++ b/gradle/java-artifacts.gradle
@@ -1,5 +1,8 @@
 apply plugin: 'maven-publish'
 
+sourceCompatibility = rootProject.ext.javaVersion
+targetCompatibility = rootProject.ext.javaVersion
+
 task sourcesJar(type: Jar) {
     from sourceSets.main.java.srcDirs
     classifier = 'sources'
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 7d05de32..dbdc05d2 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.11-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.14.1-all.zip
diff --git a/third-party/aosp-dexutils/src/main/java/com/tencent/tinker/android/dx/instruction/InstructionComparator.java b/third-party/aosp-dexutils/src/main/java/com/tencent/tinker/android/dx/instruction/InstructionComparator.java
index b90bac22..a2651b9d 100644
--- a/third-party/aosp-dexutils/src/main/java/com/tencent/tinker/android/dx/instruction/InstructionComparator.java
+++ b/third-party/aosp-dexutils/src/main/java/com/tencent/tinker/android/dx/instruction/InstructionComparator.java
@@ -21,6 +21,8 @@
 import com.tencent.tinker.android.dx.util.Hex;
 
 import java.io.EOFException;
+import java.util.HashSet;
+import java.util.Set;
 
 /**
  * *** This file is NOT a part of AOSP. ***
@@ -30,8 +32,14 @@
 public abstract class InstructionComparator {
     private final InstructionHolder[] insnHolders1;
     private final InstructionHolder[] insnHolders2;
+    private final Set<String> visitedInsnAddrPairs;
+    private final short[] insns1;
+    private final short[] insns2;
 
     public InstructionComparator(short[] insns1, short[] insns2) {
+        this.insns1 = insns1;
+        this.insns2 = insns2;
+
         if (insns1 != null) {
             ShortArrayCodeInput codeIn1 = new ShortArrayCodeInput(insns1);
             this.insnHolders1 = readInstructionsIntoHolders(codeIn1, insns1.length);
@@ -44,6 +52,7 @@ public InstructionComparator(short[] insns1, short[] insns2) {
         } else {
             this.insnHolders2 = null;
         }
+        visitedInsnAddrPairs = new HashSet<>();
     }
 
     private InstructionHolder[] readInstructionsIntoHolders(ShortArrayCodeInput in, int length) {
@@ -189,6 +198,8 @@ public void visitFillArrayDataPayloadInsn(int currentAddress, int opcode, Object
     }
 
     public final boolean compare() {
+        this.visitedInsnAddrPairs.clear();
+
         if (this.insnHolders1 == null && this.insnHolders2 == null) {
             return true;
         }
@@ -275,7 +286,16 @@ public boolean isSameInstruction(int insnAddress1, int insnAddress2) {
             case InstructionCodec.INSN_FORMAT_22T:
             case InstructionCodec.INSN_FORMAT_30T:
             case InstructionCodec.INSN_FORMAT_31T: {
-                return isSameInstruction(insnHolder1.target, insnHolder2.target);
+                final String addrPairStr = insnAddress1 + "-" + insnAddress2;
+                if (this.visitedInsnAddrPairs.add(addrPairStr)) {
+                    // If we haven't compared target insns, following the control flow
+                    // and do further compare.
+                    return isSameInstruction(insnHolder1.target, insnHolder2.target);
+                } else {
+                    // If we have already compared target insns, here we can return
+                    // true directly.
+                    return true;
+                }
             }
             case InstructionCodec.INSN_FORMAT_21C:
             case InstructionCodec.INSN_FORMAT_22C:
diff --git a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/TinkerDexLoader.java b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/TinkerDexLoader.java
index b700a1b8..2d8ed266 100644
--- a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/TinkerDexLoader.java
+++ b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/TinkerDexLoader.java
@@ -99,7 +99,7 @@ public static boolean loadTinkerJars(Application application, boolean tinkerLoad
                         file.getAbsolutePath());
                     return false;
                 }
-                Log.i(TAG, "verify dex file:" + file.getPath() + ", md5 use time: " + (System.currentTimeMillis() - start));
+                Log.i(TAG, "verify dex file:" + file.getPath() + " md5, use time: " + (System.currentTimeMillis() - start));
             }
             legalFiles.add(file);
         }
diff --git a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/TinkerResourceLoader.java b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/TinkerResourceLoader.java
index 3976ffe5..20ada863 100644
--- a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/TinkerResourceLoader.java
+++ b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/TinkerResourceLoader.java
@@ -52,18 +52,19 @@ public static boolean loadTinkerResources(boolean tinkerLoadVerifyFlag, String d
         }
         String resourceString = directory + "/" + RESOURCE_PATH +  "/" + RESOURCE_FILE;
         File resourceFile = new File(resourceString);
+        long start = System.currentTimeMillis();
 
         if (tinkerLoadVerifyFlag) {
-            long start = System.currentTimeMillis();
             if (!SharePatchFileUtil.checkResourceArscMd5(resourceFile, resPatchInfo.resArscMd5)) {
                 Log.e(TAG, "Failed to load resource file, path: " + resourceFile.getPath() + ", expect md5: " + resPatchInfo.resArscMd5);
                 ShareIntentUtil.setIntentReturnCode(intentResult, ShareConstants.ERROR_LOAD_PATCH_VERSION_RESOURCE_MD5_MISMATCH);
                 return false;
             }
-            Log.i(TAG, "verify resource file:" + resourceFile.getPath() + ", md5 use time: " + (System.currentTimeMillis() - start));
+            Log.i(TAG, "verify resource file:" + resourceFile.getPath() + " md5, use time: " + (System.currentTimeMillis() - start));
         }
         try {
             TinkerResourcePatcher.monkeyPatchExistingResources(resourceString);
+            Log.i(TAG, "monkeyPatchExistingResources resource file:" + resourceString + ", use time: " + (System.currentTimeMillis() - start));
         } catch (Throwable e) {
             Log.e(TAG, "install resources failed", e);
             intentResult.putExtra(ShareIntentUtil.INTENT_PATCH_EXCEPTION, e);
diff --git a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/shareutil/ShareTinkerInternals.java b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/shareutil/ShareTinkerInternals.java
index 404bbdcd..3bbfec48 100644
--- a/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/shareutil/ShareTinkerInternals.java
+++ b/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/shareutil/ShareTinkerInternals.java
@@ -91,6 +91,12 @@ public static int checkSignatureAndTinkerID(Context context, File patchFile, Sha
         return ShareConstants.ERROR_PACKAGE_CHECK_OK;
     }
 
+
+    public static int checkPackageAndTinkerFlag(ShareSecurityCheck securityCheck, int tinkerFlag) {
+
+        return ShareConstants.ERROR_PACKAGE_CHECK_OK;
+    }
+
     /**
      * not like {@cod ShareSecurityCheck.getPackagePropertiesIfPresent}
      * we don't check Signatures or other files, we just get the package meta's properties directly
diff --git a/tinker-build/tinker-patch-lib/build.gradle b/tinker-build/tinker-patch-lib/build.gradle
index f0443dce..9b48db6e 100644
--- a/tinker-build/tinker-patch-lib/build.gradle
+++ b/tinker-build/tinker-patch-lib/build.gradle
@@ -9,7 +9,7 @@ group rootProject.ext.GROUP
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
     compile project(':tinker-commons')
-    compile group: 'net.dongliu', name: 'apk-parser', version: '2.1.2'
+    compile group: 'net.dongliu', name: 'apk-parser', version: '2.1.6'
     compile group: 'com.google.guava', name: 'guava', version: '11.0.2'
 }
 
diff --git a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/builder/PatchBuilder.java b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/builder/PatchBuilder.java
index df530e96..6a2210b3 100644
--- a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/builder/PatchBuilder.java
+++ b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/builder/PatchBuilder.java
@@ -24,6 +24,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.util.ArrayList;
 
 /**
  * @author zhangshaowen
@@ -54,7 +55,7 @@ public void buildPatch() throws IOException, InterruptedException {
         if (resultDir.listFiles().length == 0) {
             return;
         }
-        generalUnsignedApk(unSignedApk);
+        generateUnsignedApk(unSignedApk);
         signApk(unSignedApk, signedApk);
 
         use7zApk(signedApk, signedWith7ZipApk, sevenZipOutPutDir);
@@ -92,19 +93,28 @@ private void signApk(File input, File output) throws IOException, InterruptedExc
             if (output.exists()) {
                 output.delete();
             }
-            String cmd = "jarsigner -sigalg MD5withRSA -digestalg SHA1 -keystore " + config.mSignatureFile
-                + " -storepass " + config.mStorePass
-                + " -keypass " + config.mKeyPass
-                + " -signedjar " + output.getAbsolutePath()
-                + " " + input.getAbsolutePath()
-                + " " + config.mStoreAlias;
-            Process pro = Runtime.getRuntime().exec(cmd);
-            //destroy the stream
-            pro.waitFor();
-            pro.destroy();
-
+            ArrayList<String> command = new ArrayList<>();
+            command.add("jarsigner");
+            command.add("-sigalg");
+            command.add("MD5withRSA");
+            command.add("-digestalg");
+            command.add("SHA1");
+            command.add("-keystore");
+            command.add(config.mSignatureFile.getAbsolutePath());
+            command.add("-storepass");
+            command.add(config.mStorePass);
+            command.add("-keypass");
+            command.add(config.mKeyPass);
+            command.add("-signedjar");
+            command.add(output.getAbsolutePath());
+            command.add(input.getAbsolutePath());
+            command.add(config.mStoreAlias);
+
+            Process process = new ProcessBuilder(command).start();
+            process.waitFor();
+            process.destroy();
             if (!output.exists()) {
-                throw new IOException("Can't Generate signed APK. Please check your sign info is correct.");
+                throw new IOException("Can't Generate signed APK. Please check if your sign info is correct.");
             }
         }
     }
@@ -113,8 +123,8 @@ private void signApk(File input, File output) throws IOException, InterruptedExc
      * @param output unsigned apk file output
      * @throws IOException
      */
-    private void generalUnsignedApk(File output) throws IOException {
-        Logger.d("General unsigned apk: %s", output.getName());
+    private void generateUnsignedApk(File output) throws IOException {
+        Logger.d("Generate unsigned apk: %s", output.getName());
         final File tempOutDir = config.mTempResultDir;
         if (!tempOutDir.exists()) {
             throw new IOException(String.format(
diff --git a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/DexClassesComparator.java b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/DexClassesComparator.java
index fe55d9a9..d0c99383 100644
--- a/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/DexClassesComparator.java
+++ b/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/DexClassesComparator.java
@@ -972,12 +972,12 @@ private boolean isSameEncodedValue(
             case EncodedValueReader.ENCODED_FLOAT: {
                 float oldFloat = oldAnnoReader.readFloat();
                 float newFloat = newAnnoReader.readFloat();
-                return oldFloat == newFloat;
+                return Float.compare(oldFloat, newFloat) == 0;
             }
             case EncodedValueReader.ENCODED_DOUBLE: {
                 double oldDouble = oldAnnoReader.readDouble();
                 double newDouble = newAnnoReader.readDouble();
-                return oldDouble == newDouble;
+                return Double.compare(oldDouble, newDouble) == 0;
             }
             case EncodedValueReader.ENCODED_STRING: {
                 int oldStringIdx = oldAnnoReader.readString();
diff --git a/tinker-commons/build.gradle b/tinker-commons/build.gradle
index eb94594d..c6025027 100644
--- a/tinker-commons/build.gradle
+++ b/tinker-commons/build.gradle
@@ -5,6 +5,7 @@ group rootProject.ext.GROUP
 
 [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'
 
+
 dependencies {
     compile fileTree(dir: 'libs', include: ['*.jar'])
     compile project(':third-party:aosp-dexutils')
diff --git a/tinker-commons/src/main/java/com/tencent/tinker/commons/dexpatcher/struct/DexPatchFile.java b/tinker-commons/src/main/java/com/tencent/tinker/commons/dexpatcher/struct/DexPatchFile.java
index 1cb356f4..edbbc9ee 100644
--- a/tinker-commons/src/main/java/com/tencent/tinker/commons/dexpatcher/struct/DexPatchFile.java
+++ b/tinker-commons/src/main/java/com/tencent/tinker/commons/dexpatcher/struct/DexPatchFile.java
@@ -17,7 +17,6 @@
 package com.tencent.tinker.commons.dexpatcher.struct;
 
 import com.tencent.tinker.android.dex.SizeOf;
-import com.tencent.tinker.android.dex.TableOfContents;
 import com.tencent.tinker.android.dex.io.DexDataBuffer;
 import com.tencent.tinker.android.dex.util.CompareUtils;
 import com.tencent.tinker.android.dex.util.FileUtils;
@@ -26,11 +25,7 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.nio.ByteBuffer;
-import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
 
 /**
  * Created by tangyinsheng on 2016/7/1.
@@ -106,116 +101,6 @@ private void init() {
         this.buffer.position(firstChunkOffset);
     }
 
-    private List<Integer> readDeltaIndiciesOrOffsets(int count) {
-        List<Integer> result = new ArrayList<>(count);
-        int lastVal = 0;
-        for (int i = 0; i < count; ++i) {
-            int delta = this.buffer.readSleb128();
-            lastVal = lastVal + delta;
-            result.add(lastVal);
-        }
-        return result;
-    }
-
-    private <T extends Comparable<T>> void readChunkData(
-            int sectionType, Set<Integer> deletedItemIndices, Map<Integer, T> indexToNewItemMap
-    ) {
-        int deletedItemCount = this.buffer.readUleb128();
-        List<Integer> deletedIndices = readDeltaIndiciesOrOffsets(deletedItemCount);
-        deletedItemIndices.addAll(deletedIndices);
-
-        int addedItemCount = this.buffer.readUleb128();
-        List<Integer> addedIndices = readDeltaIndiciesOrOffsets(addedItemCount);
-
-        int replacedItemCount = this.buffer.readUleb128();
-        List<Integer> replacedIndices = readDeltaIndiciesOrOffsets(replacedItemCount);
-
-        int addedIndexCursor = 0;
-        int replacedIndexCursor = 0;
-
-        while (addedIndexCursor < addedItemCount || replacedIndexCursor < replacedItemCount) {
-            if (addedIndexCursor >= addedItemCount) {
-                // rest items are all replaced item.
-                while (replacedIndexCursor < replacedItemCount) {
-                    T newItem = readItemBySectionType(sectionType);
-                    indexToNewItemMap.put(replacedIndexCursor, newItem);
-                    ++replacedIndexCursor;
-                }
-            } else
-            if (replacedIndexCursor >= replacedItemCount) {
-                // rest items are all added item.
-                while (addedIndexCursor < addedItemCount) {
-                    T newItem = readItemBySectionType(sectionType);
-                    indexToNewItemMap.put(addedIndexCursor, newItem);
-                    ++addedIndexCursor;
-                }
-            } else {
-                T newItem = readItemBySectionType(sectionType);
-                if (addedIndexCursor <= replacedIndexCursor) {
-                    indexToNewItemMap.put(addedIndexCursor, newItem);
-                    ++addedIndexCursor;
-                } else {
-                    indexToNewItemMap.put(replacedIndexCursor, newItem);
-                    ++replacedIndexCursor;
-                }
-            }
-        }
-    }
-
-    @SuppressWarnings("unchecked")
-    private <T extends Comparable<T>> T readItemBySectionType(int sectionType) {
-        switch (sectionType) {
-            case TableOfContents.SECTION_TYPE_TYPEIDS: {
-                return (T) (Integer) this.buffer.readInt();
-            }
-            case TableOfContents.SECTION_TYPE_PROTOIDS: {
-                return (T) this.buffer.readProtoId();
-            }
-            case TableOfContents.SECTION_TYPE_FIELDIDS: {
-                return (T) this.buffer.readFieldId();
-            }
-            case TableOfContents.SECTION_TYPE_METHODIDS: {
-                return (T) this.buffer.readMethodId();
-            }
-            case TableOfContents.SECTION_TYPE_CLASSDEFS: {
-                return (T) this.buffer.readClassDef();
-            }
-            case TableOfContents.SECTION_TYPE_STRINGDATAS: {
-                return (T) this.buffer.readStringData();
-            }
-            case TableOfContents.SECTION_TYPE_TYPELISTS: {
-                return (T) this.buffer.readTypeList();
-            }
-            case TableOfContents.SECTION_TYPE_ANNOTATIONS: {
-                return (T) this.buffer.readAnnotation();
-            }
-            case TableOfContents.SECTION_TYPE_ANNOTATIONSETS: {
-                return (T) this.buffer.readAnnotationSet();
-            }
-            case TableOfContents.SECTION_TYPE_ANNOTATIONSETREFLISTS: {
-                return (T) this.buffer.readAnnotationSetRefList();
-            }
-            case TableOfContents.SECTION_TYPE_ANNOTATIONSDIRECTORIES: {
-                return (T) this.buffer.readAnnotationsDirectory();
-            }
-            case TableOfContents.SECTION_TYPE_DEBUGINFOS: {
-                return (T) this.buffer.readDebugInfoItem();
-            }
-            case TableOfContents.SECTION_TYPE_CODES: {
-                return (T) this.buffer.readCode();
-            }
-            case TableOfContents.SECTION_TYPE_CLASSDATA: {
-                return (T) this.buffer.readClassData();
-            }
-            case TableOfContents.SECTION_TYPE_ENCODEDARRAYS: {
-                return (T) this.buffer.readEncodedArray();
-            }
-            default: {
-                return null;
-            }
-        }
-    }
-
     public short getVersion() {
         return version;
     }
diff --git a/tinker-sample-android/app/build.gradle b/tinker-sample-android/app/build.gradle
index 42fb28e3..b143b809 100644
--- a/tinker-sample-android/app/build.gradle
+++ b/tinker-sample-android/app/build.gradle
@@ -334,35 +334,39 @@ if (buildWithTinker()) {
         }
     }
 
-    /**
-    * task type, you want to bak
-    */
-    def taskName = "debug"
+
 
     /**
     * bak apk and mapping
     */
-    tasks.all {
-        if ("assemble${taskName.capitalize()}".equalsIgnoreCase(it.name)) {
-            it.doLast {
-                copy {
-                    def date = new Date().format("MMdd-HH-mm-ss")
-                    from "${buildDir}/outputs/apk/${project.getName()}-${taskName}.apk"
-                    into bakPath
-                    rename { String fileName ->
-                        fileName.replace("${project.getName()}-${taskName}.apk", "${project.getName()}-${taskName}-${date}.apk")
-                    }
-
-                    from "${buildDir}/outputs/mapping/${taskName}/mapping.txt"
-                    into bakPath
-                    rename { String fileName ->
-                        fileName.replace("mapping.txt", "${project.getName()}-${taskName}-${date}-mapping.txt")
-                    }
-
-                    from "${buildDir}/intermediates/symbols/${taskName}/R.txt"
-                    into bakPath
-                    rename { String fileName ->
-                        fileName.replace("R.txt", "${project.getName()}-${taskName}-${date}-R.txt")
+    android.applicationVariants.all { variant ->
+        /**
+         * task type, you want to bak
+         */
+        def taskName = variant.name
+
+        tasks.all {
+            if ("assemble${taskName.capitalize()}".equalsIgnoreCase(it.name)) {
+                it.doLast {
+                    copy {
+                        def date = new Date().format("MMdd-HH-mm-ss")
+                        from "${buildDir}/outputs/apk/${project.getName()}-${taskName}.apk"
+                        into bakPath
+                        rename { String fileName ->
+                            fileName.replace("${project.getName()}-${taskName}.apk", "${project.getName()}-${taskName}-${date}.apk")
+                        }
+
+                        from "${buildDir}/outputs/mapping/${taskName}/mapping.txt"
+                        into bakPath
+                        rename { String fileName ->
+                            fileName.replace("mapping.txt", "${project.getName()}-${taskName}-${date}-mapping.txt")
+                        }
+
+                        from "${buildDir}/intermediates/symbols/${taskName}/R.txt"
+                        into bakPath
+                        rename { String fileName ->
+                            fileName.replace("R.txt", "${project.getName()}-${taskName}-${date}-R.txt")
+                        }
                     }
                 }
             }
diff --git a/tinker-sample-android/build.gradle b/tinker-sample-android/build.gradle
index 7f8c6830..08af2ebf 100644
--- a/tinker-sample-android/build.gradle
+++ b/tinker-sample-android/build.gradle
@@ -5,7 +5,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.1.0'
+        classpath 'com.android.tools.build:gradle:2.2.0'
         classpath "com.tencent.tinker:tinker-patch-gradle-plugin:${TINKER_VERSION}"
     }
 }
diff --git a/tinker-sample-android/gradle.properties b/tinker-sample-android/gradle.properties
index 27cc7999..02a06b39 100644
--- a/tinker-sample-android/gradle.properties
+++ b/tinker-sample-android/gradle.properties
@@ -17,4 +17,4 @@
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
 # org.gradle.parallel=true
 
-TINKER_VERSION=1.6.1
+TINKER_VERSION=1.6.2
diff --git a/tinker-sample-android/gradle/wrapper/gradle-wrapper.properties b/tinker-sample-android/gradle/wrapper/gradle-wrapper.properties
index c25cec52..86d6158a 100644
--- a/tinker-sample-android/gradle/wrapper/gradle-wrapper.properties
+++ b/tinker-sample-android/gradle/wrapper/gradle-wrapper.properties
@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.10-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-2.14.1-all.zip
