diff --git a/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
index d09f067d..70fcf58a 100644
--- a/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
@@ -463,7 +463,7 @@ private void addMethodBindings(MethodSpec.Builder result, ViewBinding binding) {
               if (null != conditions && conditions.length > 0) {
                 for (String condition : conditions) {
                   if (checkJavaSymbol(condition)) {
-                    builder.beginControlFlow("if (!target.condition())");
+                    builder.beginControlFlow("if (!target.$L())", condition);
                     if (hasReturnType) {
                       builder.addStatement("return $L", method.defaultReturn());
                     } else {
@@ -471,8 +471,8 @@ private void addMethodBindings(MethodSpec.Builder result, ViewBinding binding) {
                     }
                     builder.endControlFlow();
                   } else {
-                  /*throw new RuntimeException("Condition\" "
-                          + condition + "\" must be a valid java symbol");*/
+                  throw new RuntimeException("Condition\" "
+                          + condition + "\" must be a valid java symbol");
                   }
                 }
               }
diff --git a/butterknife/src/main/java/butterknife/ButterKnife.java b/butterknife/src/main/java/butterknife/ButterKnife.java
index ac5bc1de..0d3489e5 100644
--- a/butterknife/src/main/java/butterknife/ButterKnife.java
+++ b/butterknife/src/main/java/butterknife/ButterKnife.java
@@ -124,6 +124,18 @@ public static Unbinder bindController(@NonNull ViewController target) {
     return createBinding(target, target.getView());
   }
 
+  /**
+   * BindView annotated fields and methods in the specified {@link Activity}. The current content
+   * view is used as the view root.
+   *
+   * @param target Target activity for view binding.
+   */
+  @NonNull @UiThread
+  public static Unbinder bindController(@NonNull ViewController target, View view) {
+    View sourceView = null != view ? view : target.getView();
+    return createBinding(target, sourceView);
+  }
+
   /**
    * BindView annotated fields and methods in the specified {@link Activity}. The current content
    * view is used as the view root.
diff --git a/gradle.properties b/gradle.properties
index 0b7bd46c..fbe3c44f 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,5 +1,5 @@
 GROUP=com.jakewharton
-VERSION_NAME=8.6.1-SNAPSHOT
+VERSION_NAME=8.6.1.2-snapshot
 
 POM_DESCRIPTION=Field and method binding for Android views.
 
diff --git a/gradle/gradle-mvn-push.gradle b/gradle/gradle-mvn-push.gradle
index ea3f6bbb..607f7000 100644
--- a/gradle/gradle-mvn-push.gradle
+++ b/gradle/gradle-mvn-push.gradle
@@ -21,17 +21,17 @@ version = VERSION_NAME
 group = GROUP
 
 def isReleaseBuild() {
-  return VERSION_NAME.contains("SNAPSHOT") == false
+  return !VERSION_NAME.contains("snapshot")
 }
 
 def getReleaseRepositoryUrl() {
   return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
-      : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
+      : "http://git.dou-pai.com:8081/nexus/content/repositories/bhb-release/"
 }
 
 def getSnapshotRepositoryUrl() {
   return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
-      : "https://oss.sonatype.org/content/repositories/snapshots/"
+      : "http://git.dou-pai.com:8081/nexus/content/repositories/bhb-snapshot/"
 }
 
 def getRepositoryUsername() {
@@ -42,6 +42,24 @@ def getRepositoryPassword() {
   return hasProperty('SONATYPE_NEXUS_PASSWORD') ? SONATYPE_NEXUS_PASSWORD : ""
 }
 
+/*def getReleaseRepositoryUrl() {
+  return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
+          : "http://mvn.teslaliu.com:8081/nexus/content/repositories/tesla-liu/"
+}
+
+def getSnapshotRepositoryUrl() {
+  return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
+          : "http://mvn.teslaliu.com:8081/nexus/content/repositories/tesla-liu-snapshots/"
+}
+
+def getRepositoryUsername() {
+  return hasProperty('SONATYPE_NEXUS_USERNAME') ? SONATYPE_NEXUS_USERNAME : ""
+}
+
+def getRepositoryPassword() {
+  return hasProperty('SONATYPE_NEXUS_PASSWORD') ? SONATYPE_NEXUS_PASSWORD : ""
+}*/
+
 afterEvaluate { project ->
   uploadArchives {
     repositories {
