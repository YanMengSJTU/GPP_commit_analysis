diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java b/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java
index ff89c207..2a8f5728 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java
@@ -87,10 +87,9 @@ void x(){
   @Override protected void onCreate(Bundle savedInstanceState) {
     super.onCreate(savedInstanceState);
     setContentView(R.layout.simple_activity);
-    Unbinder binder = ButterKnife.bind(this);
+    Unbinder binder = ButterKnife.bind(this,null);
     Bean bean=new Bean();
     binder.apply(bean);
-    binder.unbind();
     // Contrived code to use the bound fields.
     title.setText(butterKnife);
     subtitle.setText(fieldMethod);
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java b/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java
index 5e68d5d1..3a1a08ea 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleAdapter.java
@@ -58,7 +58,7 @@ public SimpleAdapter(Context context) {
     @BindView(R.id.position) TextView position;
 
     ViewHolder(View view) {
-      ButterKnife.bind(this, view);
+      ButterKnife.bind(this, view,null);
     }
   }
 }
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/A.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/A.java
index 5f4db917..01aa25d9 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/A.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/A.java
@@ -10,6 +10,6 @@
   @BindColor(android.R.color.black) @ColorInt int blackColor;
 
   public A(View view) {
-    ButterKnife.bind(this, view);
+    ButterKnife.bind(this, view,null);
   }
 }
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/B.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/B.java
index 59b87e06..60a60f16 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/B.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/B.java
@@ -11,6 +11,6 @@
 
   public B(View view) {
     super(view);
-    ButterKnife.bind(this, view);
+    ButterKnife.bind(this, view,null);
   }
 }
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/C.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/C.java
index ee69cb08..20c49e2f 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/C.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/C.java
@@ -13,6 +13,6 @@
 
   public C(View view) {
     super(view);
-    ButterKnife.bind(this, view);
+    ButterKnife.bind(this, view,null);
   }
 }
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/D.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/D.java
index 1ea1ff88..f6d55725 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/D.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/D.java
@@ -11,6 +11,6 @@
 
   public D(View view) {
     super(view);
-    ButterKnife.bind(this, view);
+    ButterKnife.bind(this, view,null);
   }
 }
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/E.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/E.java
index 5411da11..28b2efd4 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/E.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/E.java
@@ -11,6 +11,6 @@
 
   public E(View view) {
     super(view);
-    ButterKnife.bind(this, view);
+    ButterKnife.bind(this, view,null);
   }
 }
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/F.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/F.java
index 838a2dcf..f1edb19b 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/F.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/F.java
@@ -11,6 +11,6 @@
 
   public F(View view) {
     super(view);
-    ButterKnife.bind(this, view);
+    ButterKnife.bind(this, view,null);
   }
 }
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/G.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/G.java
index 497b9f4c..5677eb5c 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/G.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/G.java
@@ -14,7 +14,7 @@
 
   public G(View view) {
     super(view);
-    ButterKnife.bind(this, view);
+    ButterKnife.bind(this, view,null);
   }
 
   @OnClick(android.R.id.content) public void onClick() {
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/H.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/H.java
index 354bc4b8..3520695a 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/H.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/H.java
@@ -13,6 +13,6 @@
 
   public H(View view) {
     super(view);
-    ButterKnife.bind(this, view);
+    ButterKnife.bind(this, view,null);
   }
 }
diff --git a/butterknife/src/main/java/butterknife/ButterKnife.java b/butterknife/src/main/java/butterknife/ButterKnife.java
index 98c692a6..6e4dbb29 100644
--- a/butterknife/src/main/java/butterknife/ButterKnife.java
+++ b/butterknife/src/main/java/butterknife/ButterKnife.java
@@ -119,9 +119,9 @@ public static void setDebug(boolean debug) {
    * @param target Target activity for view binding.
    */
   @NonNull @UiThread
-  public static Unbinder bind(@NonNull Activity target) {
+  public static Unbinder bind(@NonNull Activity target,Binder binder) {
     View sourceView = target.getWindow().getDecorView();
-    return createBinding(target, sourceView);
+    return createBinding(target, sourceView,binder);
   }
 
   /**
@@ -131,8 +131,8 @@ public static Unbinder bind(@NonNull Activity target) {
    * @param target Target view for view binding.
    */
   @NonNull @UiThread
-  public static Unbinder bind(@NonNull View target) {
-    return createBinding(target, target);
+  public static Unbinder bind(@NonNull View target,Binder binder) {
+    return createBinding(target, target,binder);
   }
 
   /**
@@ -142,9 +142,9 @@ public static Unbinder bind(@NonNull View target) {
    * @param target Target dialog for view binding.
    */
   @NonNull @UiThread
-  public static Unbinder bind(@NonNull Dialog target) {
+  public static Unbinder bind(@NonNull Dialog target,Binder binder) {
     View sourceView = target.getWindow().getDecorView();
-    return createBinding(target, sourceView);
+    return createBinding(target, sourceView,binder);
   }
 
   /**
@@ -155,9 +155,9 @@ public static Unbinder bind(@NonNull Dialog target) {
    * @param source Activity on which IDs will be looked up.
    */
   @NonNull @UiThread
-  public static Unbinder bind(@NonNull Object target, @NonNull Activity source) {
+  public static Unbinder bind(@NonNull Object target, @NonNull Activity source,Binder binder) {
     View sourceView = source.getWindow().getDecorView();
-    return createBinding(target, sourceView);
+    return createBinding(target, sourceView,binder);
   }
 
   /**
@@ -168,8 +168,8 @@ public static Unbinder bind(@NonNull Object target, @NonNull Activity source) {
    * @param source View root on which IDs will be looked up.
    */
   @NonNull @UiThread
-  public static Unbinder bind(@NonNull Object target, @NonNull View source) {
-    return createBinding(target, source);
+  public static Unbinder bind(@NonNull Object target, @NonNull View source,Binder binder) {
+    return createBinding(target, source,binder);
   }
 
   /**
@@ -180,12 +180,12 @@ public static Unbinder bind(@NonNull Object target, @NonNull View source) {
    * @param source Dialog on which IDs will be looked up.
    */
   @NonNull @UiThread
-  public static Unbinder bind(@NonNull Object target, @NonNull Dialog source) {
+  public static Unbinder bind(@NonNull Object target, @NonNull Dialog source,Binder binder) {
     View sourceView = source.getWindow().getDecorView();
-    return createBinding(target, sourceView);
+    return createBinding(target, sourceView,binder);
   }
 
-  private static Unbinder createBinding(@NonNull Object target, @NonNull View source) {
+  private static Unbinder createBinding(@NonNull Object target, @NonNull View source,Binder binder) {
     Class<?> targetClass = target.getClass();
     if (debug) Log.d(TAG, "Looking up binding for " + targetClass.getName());
     Constructor<? extends Unbinder> constructor = findBindingConstructorForClass(targetClass);
@@ -196,7 +196,7 @@ private static Unbinder createBinding(@NonNull Object target, @NonNull View sour
 
     //noinspection TryWithIdenticalCatches Resolves to API 19+ only type.
     try {
-      return constructor.newInstance(target, source);
+      return constructor.newInstance(target, source,binder);
     } catch (IllegalAccessException e) {
       throw new RuntimeException("Unable to invoke " + constructor, e);
     } catch (InstantiationException e) {
@@ -228,7 +228,7 @@ private static Unbinder createBinding(@NonNull Object target, @NonNull View sour
     try {
       Class<?> bindingClass = cls.getClassLoader().loadClass(clsName + "_ViewBinding");
       //noinspection unchecked
-      bindingCtor = (Constructor<? extends Unbinder>) bindingClass.getConstructor(cls, View.class);
+      bindingCtor = (Constructor<? extends Unbinder>) bindingClass.getConstructor(cls, View.class,Binder.class);
       if (debug) Log.d(TAG, "HIT: Loaded binding class and constructor.");
     } catch (ClassNotFoundException e) {
       if (debug) Log.d(TAG, "Not found. Trying superclass " + cls.getSuperclass().getName());
