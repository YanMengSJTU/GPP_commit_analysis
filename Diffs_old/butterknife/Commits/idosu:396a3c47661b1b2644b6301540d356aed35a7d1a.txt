diff --git a/butterknife/src/main/java/butterknife/butterui/BindLayoutUtil.java b/butterknife/src/main/java/butterknife/butterui/BindLayoutUtil.java
index 16997b9f..8f458e13 100644
--- a/butterknife/src/main/java/butterknife/butterui/BindLayoutUtil.java
+++ b/butterknife/src/main/java/butterknife/butterui/BindLayoutUtil.java
@@ -6,6 +6,7 @@
 import java.lang.annotation.Annotation;
 
 /**
+ * Util class for handling {@link BindLayout} and reflection
  * @author
  *      <br>Jul 31 2016 idosu
  */
@@ -13,6 +14,16 @@
     private BindLayoutUtil() {
     }
 
+    /**
+     * Get the annotation {@code annotation} from the class {@code clazz}, if the annotation is not
+     * present the code will throw IllegalStateException with messege {@code errorMessage}
+     * @param clazz the class to get the annotation from
+     * @param annotation the type of annotation to search
+     * @param errorMessage the error message to throw when the annotation is not present
+     * @param <T> the type of the annotation
+     * @return the annotation
+     * @throws IllegalStateException when the annotation is not present
+     */
     @NonNull
     public static <T extends Annotation> T getAnnotation(
             @NonNull Class<?> clazz,
@@ -25,6 +36,12 @@ private BindLayoutUtil() {
         return annot;
     }
 
+    /**
+     * Gets the value of the annotation {@link BindLayout} from the class (@code clazz},
+     * see also {@link #getAnnotation(Class, Class, String)}
+     * @param clazz the class to get the annoation from
+     * @return the annotation value
+     */
     @LayoutRes
     public static int getBindLayout(@NonNull Class<?> clazz) {
         return getAnnotation(
@@ -33,4 +50,4 @@ public static int getBindLayout(@NonNull Class<?> clazz) {
             "Must set BindLayout to use this feature"
         ).value();
     }
-}
+}
\ No newline at end of file
diff --git a/butterknife/src/main/java/butterknife/butterui/ButterActivity.java b/butterknife/src/main/java/butterknife/butterui/ButterActivity.java
index a4ed1b25..71618da5 100644
--- a/butterknife/src/main/java/butterknife/butterui/ButterActivity.java
+++ b/butterknife/src/main/java/butterknife/butterui/ButterActivity.java
@@ -41,17 +41,24 @@ protected void onCreate(Bundle savedInstanceState) {
         bind();
     }
 
+    /*
+    TODO(idosu): Check if this ias needed or android calls onCreate(Bundle)
     @Override
     public void onCreate(Bundle savedInstanceState, PersistableBundle persistentState) {
         super.onCreate(savedInstanceState, persistentState);
         bind();
     }
+    */
 
     private void bind() {
         setContentView(BindLayoutUtil.getBindLayout(getClass()));
         unbinder = ButterKnife.bind(this);
     }
 
+    /**
+     * Gets butterknife unbinder for this activity
+     * @return the unbinder
+     */
     protected Unbinder getUnbinder() {
         return unbinder;
     }
diff --git a/butterknife/src/main/java/butterknife/butterui/ButterFragment.java b/butterknife/src/main/java/butterknife/butterui/ButterFragment.java
index 23a16ca5..3ffda668 100644
--- a/butterknife/src/main/java/butterknife/butterui/ButterFragment.java
+++ b/butterknife/src/main/java/butterknife/butterui/ButterFragment.java
@@ -46,6 +46,10 @@ public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle sa
         return view;
     }
 
+    /**
+     * Gets butterknife unbinder for this fragment
+     * @return the unbinder
+     */
     protected Unbinder getUnbinder() {
         return unbinder;
     }
diff --git a/butterknife/src/test/java/butterknife/butterui/ButterActivityTest.java b/butterknife/src/test/java/butterknife/butterui/ButterActivityTest.java
index f5d8112a..a369c67c 100644
--- a/butterknife/src/test/java/butterknife/butterui/ButterActivityTest.java
+++ b/butterknife/src/test/java/butterknife/butterui/ButterActivityTest.java
@@ -60,7 +60,7 @@ public void testWithAnnotationOnCreate1() {
         assertNotNull("It must be because ButterKnife.bind() was not called", activity.getUnbinder());
     }
 
-    @Ignore
+    /*
     @Test
     public void testWithAnnotationOnCreate2() {
         // TODO: Test this with android:persistableMode="persistAcrossReboots"
@@ -72,4 +72,5 @@ public void testWithAnnotationOnCreate2() {
 
         assertNotNull("It must be because ButterKnife.bind() was not called", activity.getUnbinder());
     }
+    */
 }
\ No newline at end of file
diff --git a/butterknife/src/test/java/butterknife/butterui/ButterFragmentTest.java b/butterknife/src/test/java/butterknife/butterui/ButterFragmentTest.java
index 03e9abd0..42308e69 100644
--- a/butterknife/src/test/java/butterknife/butterui/ButterFragmentTest.java
+++ b/butterknife/src/test/java/butterknife/butterui/ButterFragmentTest.java
@@ -1,6 +1,11 @@
 package butterknife.butterui;
 
+import android.content.Context;
+import android.os.Bundle;
 import android.support.annotation.LayoutRes;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
 
 import org.junit.Ignore;
 import org.junit.Test;
@@ -27,6 +32,24 @@
         public static final int res = 1337;
 
         public Integer layoutResID = null;
+
+        @Override
+        public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+            return super.onCreateView(
+                // This is a mock with argument capture
+                new LayoutInflater(null) {
+                    @Override public LayoutInflater cloneInContext(Context context) { return null; }
+
+                    @Override
+                    public View inflate(int resource, ViewGroup root) {
+                        layoutResID = resource;
+                        return null;
+                    }
+                },
+                container,
+                savedInstanceState
+            );
+        }
     }
 
     @Test
@@ -39,11 +62,8 @@ public void testNoAnnotation() {
         }
     }
 
-    @Ignore
     @Test
     public void testWithAnnotationOnCreate() {
-        // TODO: Mock the inflater
-
         FragmentWithAnnotation fragment = Robolectric.buildFragment(FragmentWithAnnotation.class).create().get();
 
         assertNotNull("Method was not called", fragment.layoutResID);
