diff --git a/butterknife/src/test/java/butterknife/internal/InjectViewTest.java b/butterknife/src/test/java/butterknife/internal/InjectViewTest.java
index ca530715..e3bedb01 100644
--- a/butterknife/src/test/java/butterknife/internal/InjectViewTest.java
+++ b/butterknife/src/test/java/butterknife/internal/InjectViewTest.java
@@ -45,6 +45,42 @@
         .generatesSources(expectedSource);
   }
 
+  @Test public void injectingInterface() throws Exception {
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
+        "package test;",
+        "import android.app.Activity;",
+        "import android.view.View;",
+        "import butterknife.InjectView;",
+        "public class Test extends Activity {",
+        "    interface TestInterface {}",
+        "    @InjectView(1) TestInterface thing;",
+        "}"
+    ));
+
+    JavaFileObject expectedSource = JavaFileObjects.forSourceString("test/Test$$ViewInjector",
+        Joiner.on('\n').join(
+            "package test;",
+            "import android.view.View;",
+            "import butterknife.ButterKnife.Finder;",
+            "public class Test$$ViewInjector {",
+            "  public static void inject(Finder finder, final test.Test target, Object source) {",
+            "    View view;",
+            "    view = finder.findRequiredView(source, 1, \"field 'thing'\");",
+            "    target.thing = (test.Test.TestInterface) view;",
+            "  }",
+            "  public static void reset(test.Test target) {",
+            "    target.thing = null;",
+            "  }",
+            "}"
+        ));
+
+    ASSERT.about(javaSource()).that(source)
+        .processedWith(butterknifeProcessors())
+        .compilesWithoutError()
+        .and()
+        .generatesSources(expectedSource);
+  }
+
   @Test public void genericType() {
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
diff --git a/butterknife/src/test/java/butterknife/internal/InjectViewsTest.java b/butterknife/src/test/java/butterknife/internal/InjectViewsTest.java
index e66ca858..bfbcff16 100644
--- a/butterknife/src/test/java/butterknife/internal/InjectViewsTest.java
+++ b/butterknife/src/test/java/butterknife/internal/InjectViewsTest.java
@@ -163,6 +163,45 @@
         .generatesSources(expectedSource);
   }
 
+  @Test public void injectingListOfInterface() {
+    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
+        "package test;",
+        "import android.app.Activity;",
+        "import butterknife.InjectViews;",
+        "import java.util.List;",
+        "public class Test {",
+        "    interface TestInterface {}",
+        "    @InjectViews({1, 2, 3}) List<TestInterface> thing;",
+        "}"
+    ));
+
+    JavaFileObject expectedSource = JavaFileObjects.forSourceString("test/Test$$ViewInjector",
+        Joiner.on('\n').join(
+            "package test;",
+            "import android.view.View;",
+            "import butterknife.ButterKnife.Finder;",
+            "public class Test$$ViewInjector {",
+            "  public static void inject(Finder finder, final test.Test target, Object source) {",
+            "    View view;",
+            "    target.thing = Finder.listOf(",
+            "        (test.Test.TestInterface) finder.findRequiredView(source, 1, \"thing\"),",
+            "        (test.Test.TestInterface) finder.findRequiredView(source, 2, \"thing\"),",
+            "        (test.Test.TestInterface) finder.findRequiredView(source, 3, \"thing\")",
+            "    );",
+            "  }",
+            "  public static void reset(test.Test target) {",
+            "    target.thing = null;",
+            "  }",
+            "}"
+        ));
+
+    ASSERT.about(javaSource()).that(source)
+        .processedWith(butterknifeProcessors())
+        .compilesWithoutError()
+        .and()
+        .generatesSources(expectedSource);
+  }
+
   @Test public void injectingListWithGenerics() {
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
diff --git a/butterknife/src/test/java/butterknife/internal/OnClickTest.java b/butterknife/src/test/java/butterknife/internal/OnClickTest.java
index 834f1df7..626db57a 100644
--- a/butterknife/src/test/java/butterknife/internal/OnClickTest.java
+++ b/butterknife/src/test/java/butterknife/internal/OnClickTest.java
@@ -165,10 +165,12 @@
         "import android.widget.TextView;",
         "import butterknife.OnClick;",
         "public class Test extends Activity {",
+        "  interface TestInterface {}",
         "  @OnClick(0) void click0() {}",
         "  @OnClick(1) void click1(View view) {}",
         "  @OnClick(2) void click2(TextView view) {}",
         "  @OnClick(3) void click3(Button button) {}",
+        "  @OnClick(4) void click4(TestInterface thing) {}",
         "}"
     ));
 
@@ -204,6 +206,12 @@
             "        target.click3((android.widget.Button) p0);",
             "      }",
             "    });",
+            "    view = finder.findRequiredView(source, 4, \"method 'click4'\");",
+            "    view.setOnClickListener(new butterknife.internal.DebouncingOnClickListener() {",
+            "      @Override public void doClick(android.view.View p0) {",
+            "        target.click4((test.Test.TestInterface) p0);",
+            "      }",
+            "    });",
             "  }",
             "  public static void reset(test.Test target) {",
             "  }",
