diff --git a/build.gradle b/build.gradle
index 0d2b72b1..c411ba8e 100644
--- a/build.gradle
+++ b/build.gradle
@@ -18,6 +18,7 @@ buildscript {
       ],
       'androidx': [
           'core': "androidx.core:core:1.0.0",
+          'viewpager': "androidx.viewpager:viewpager:1.0.0",
           'annotations': "androidx.annotation:annotation:1.0.0",
           'test': [
               'runner': 'androidx.test:runner:1.1.0',
diff --git a/butterknife-annotations/src/main/java/butterknife/OnPageChange.java b/butterknife-annotations/src/main/java/butterknife/OnPageChange.java
index 22fd648a..8cf18b57 100644
--- a/butterknife-annotations/src/main/java/butterknife/OnPageChange.java
+++ b/butterknife-annotations/src/main/java/butterknife/OnPageChange.java
@@ -8,7 +8,7 @@
 import java.lang.annotation.Target;
 
 import static java.lang.annotation.ElementType.METHOD;
-import static java.lang.annotation.RetentionPolicy.CLASS;
+import static java.lang.annotation.RetentionPolicy.RUNTIME;
 
 /**
  * Bind a method to an {@code OnPageChangeListener} on the view for each ID specified.
@@ -28,7 +28,7 @@
  * </code></pre>
  */
 @Target(METHOD)
-@Retention(CLASS)
+@Retention(RUNTIME)
 @ListenerClass(
     targetType = "androidx.viewpager.widget.ViewPager",
     setter = "addOnPageChangeListener",
diff --git a/butterknife-integration-test/build.gradle b/butterknife-integration-test/build.gradle
index a86726d7..e604af1f 100644
--- a/butterknife-integration-test/build.gradle
+++ b/butterknife-integration-test/build.gradle
@@ -43,11 +43,9 @@ android {
 
     reflect {
       dimension 'runtime'
-      applicationIdSuffix '.reflect'
     }
     codegen {
       dimension 'runtime'
-      applicationIdSuffix '.codegen'
     }
   }
 
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindArrayTest.java b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindArrayTest.java
similarity index 78%
rename from butterknife-runtime/src/androidTest/java/butterknife/functional/BindArrayTest.java
rename to butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindArrayTest.java
index fe69ed57..e4d4846a 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindArrayTest.java
+++ b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindArrayTest.java
@@ -1,16 +1,20 @@
-package butterknife.functional;
+package com.example.butterknife.functional;
 
 import android.content.Context;
+import android.view.View;
 import androidx.test.InstrumentationRegistry;
 import butterknife.BindArray;
+import butterknife.ButterKnife;
 import butterknife.Unbinder;
-import butterknife.runtime.test.R;
+import com.example.butterknife.test.R;
 import org.junit.Test;
 
+import static com.example.butterknife.functional.ViewTestUtils.treeWithIds;
 import static com.google.common.truth.Truth.assertThat;
 
 public final class BindArrayTest {
   private final Context context = InstrumentationRegistry.getContext();
+  private final View tree = treeWithIds(1);
 
   static class StringArrayTarget {
     @BindArray(R.array.string_one_two_three) String[] actual;
@@ -20,7 +24,7 @@
     StringArrayTarget target = new StringArrayTarget();
     String[] expected = context.getResources().getStringArray(R.array.string_one_two_three);
 
-    Unbinder unbinder = new BindArrayTest$StringArrayTarget_ViewBinding(target, context);
+    Unbinder unbinder = ButterKnife.bind(target, tree);
     assertThat(target.actual).isEqualTo(expected);
 
     unbinder.unbind();
@@ -35,7 +39,7 @@
     IntArrayTarget target = new IntArrayTarget();
     int[] expected = context.getResources().getIntArray(R.array.int_one_two_three);
 
-    Unbinder unbinder = new BindArrayTest$IntArrayTarget_ViewBinding(target, context);
+    Unbinder unbinder = ButterKnife.bind(target, tree);
     assertThat(target.actual).isEqualTo(expected);
 
     unbinder.unbind();
@@ -50,7 +54,7 @@
     CharSequenceArrayTarget target = new CharSequenceArrayTarget();
     CharSequence[] expected = context.getResources().getTextArray(R.array.int_one_two_three);
 
-    Unbinder unbinder = new BindArrayTest$CharSequenceArrayTarget_ViewBinding(target, context);
+    Unbinder unbinder = ButterKnife.bind(target, tree);
     assertThat(target.actual).isEqualTo(expected);
 
     unbinder.unbind();
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindBitmapTest.java b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindBitmapTest.java
similarity index 70%
rename from butterknife-runtime/src/androidTest/java/butterknife/functional/BindBitmapTest.java
rename to butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindBitmapTest.java
index 60098512..d46886cb 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindBitmapTest.java
+++ b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindBitmapTest.java
@@ -1,18 +1,22 @@
-package butterknife.functional;
+package com.example.butterknife.functional;
 
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
+import android.view.View;
 import androidx.test.InstrumentationRegistry;
 import butterknife.BindBitmap;
+import butterknife.ButterKnife;
 import butterknife.Unbinder;
-import butterknife.runtime.test.R;
+import com.example.butterknife.test.R;
 import org.junit.Test;
 
+import static com.example.butterknife.functional.ViewTestUtils.treeWithIds;
 import static org.junit.Assert.assertTrue;
 
 public final class BindBitmapTest {
   private final Context context = InstrumentationRegistry.getContext();
+  private final View tree = treeWithIds(1);
 
   static class Target {
     @BindBitmap(R.drawable.pixel) Bitmap actual;
@@ -22,7 +26,7 @@
     Target target = new Target();
     Bitmap expected = BitmapFactory.decodeResource(context.getResources(), R.drawable.pixel);
 
-    Unbinder unbinder = new BindBitmapTest$Target_ViewBinding(target, context);
+    Unbinder unbinder = ButterKnife.bind(target, tree);
     assertTrue(target.actual.sameAs(expected));
 
     unbinder.unbind();
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindBoolTest.java b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindBoolTest.java
similarity index 68%
rename from butterknife-runtime/src/androidTest/java/butterknife/functional/BindBoolTest.java
rename to butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindBoolTest.java
index f44ceaa3..877af1f9 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindBoolTest.java
+++ b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindBoolTest.java
@@ -1,16 +1,20 @@
-package butterknife.functional;
+package com.example.butterknife.functional;
 
 import android.content.Context;
+import android.view.View;
 import androidx.test.InstrumentationRegistry;
 import butterknife.BindBool;
+import butterknife.ButterKnife;
 import butterknife.Unbinder;
-import butterknife.runtime.test.R;
+import com.example.butterknife.test.R;
 import org.junit.Test;
 
+import static com.example.butterknife.functional.ViewTestUtils.treeWithIds;
 import static com.google.common.truth.Truth.assertThat;
 
 public final class BindBoolTest {
   private final Context context = InstrumentationRegistry.getContext();
+  private final View tree = treeWithIds(1);
 
   static class Target {
     @BindBool(R.bool.just_true) boolean actual;
@@ -20,7 +24,7 @@
     Target target = new Target();
     boolean expected = context.getResources().getBoolean(R.bool.just_true);
 
-    Unbinder unbinder = new BindBoolTest$Target_ViewBinding(target, context);
+    Unbinder unbinder = ButterKnife.bind(target, tree);
     assertThat(target.actual).isEqualTo(expected);
 
     unbinder.unbind();
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindColorTest.java b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindColorTest.java
similarity index 75%
rename from butterknife-runtime/src/androidTest/java/butterknife/functional/BindColorTest.java
rename to butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindColorTest.java
index e4a19839..7f7a252c 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindColorTest.java
+++ b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindColorTest.java
@@ -1,17 +1,21 @@
-package butterknife.functional;
+package com.example.butterknife.functional;
 
 import android.content.Context;
 import android.content.res.ColorStateList;
+import android.view.View;
 import androidx.test.InstrumentationRegistry;
 import butterknife.BindColor;
+import butterknife.ButterKnife;
 import butterknife.Unbinder;
-import butterknife.runtime.test.R;
+import com.example.butterknife.test.R;
 import org.junit.Test;
 
+import static com.example.butterknife.functional.ViewTestUtils.treeWithIds;
 import static com.google.common.truth.Truth.assertThat;
 
 public final class BindColorTest {
   private final Context context = InstrumentationRegistry.getContext();
+  private final View tree = treeWithIds(1);
 
   static class IntTarget {
     @BindColor(R.color.red) int actual;
@@ -21,7 +25,7 @@
     IntTarget target = new IntTarget();
     int expected = context.getResources().getColor(R.color.red);
 
-    Unbinder unbinder = new BindColorTest$IntTarget_ViewBinding(target, context);
+    Unbinder unbinder = ButterKnife.bind(target, tree);
     assertThat(target.actual).isEqualTo(expected);
 
     unbinder.unbind();
@@ -36,7 +40,7 @@
     ColorStateListTarget target = new ColorStateListTarget();
     ColorStateList expected = context.getResources().getColorStateList(R.color.colors);
 
-    Unbinder unbinder = new BindColorTest$ColorStateListTarget_ViewBinding(target, context);
+    Unbinder unbinder = ButterKnife.bind(target, tree);
     assertThat(target.actual.toString()).isEqualTo(expected.toString());
 
     unbinder.unbind();
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindDimenTest.java b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindDimenTest.java
similarity index 74%
rename from butterknife-runtime/src/androidTest/java/butterknife/functional/BindDimenTest.java
rename to butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindDimenTest.java
index a716d0e9..f9c3790f 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindDimenTest.java
+++ b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindDimenTest.java
@@ -1,16 +1,20 @@
-package butterknife.functional;
+package com.example.butterknife.functional;
 
 import android.content.Context;
+import android.view.View;
 import androidx.test.InstrumentationRegistry;
 import butterknife.BindDimen;
+import butterknife.ButterKnife;
 import butterknife.Unbinder;
-import butterknife.runtime.test.R;
+import com.example.butterknife.test.R;
 import org.junit.Test;
 
+import static com.example.butterknife.functional.ViewTestUtils.treeWithIds;
 import static com.google.common.truth.Truth.assertThat;
 
 public final class BindDimenTest {
   private final Context context = InstrumentationRegistry.getContext();
+  private final View tree = treeWithIds(1);
 
   static class IntTarget {
     @BindDimen(R.dimen.twelve_point_two_dp) int actual;
@@ -20,7 +24,7 @@
     IntTarget target = new IntTarget();
     int expected = context.getResources().getDimensionPixelSize(R.dimen.twelve_point_two_dp);
 
-    Unbinder unbinder = new BindDimenTest$IntTarget_ViewBinding(target, context);
+    Unbinder unbinder = ButterKnife.bind(target, tree);
     assertThat(target.actual).isEqualTo(expected);
 
     unbinder.unbind();
@@ -35,7 +39,7 @@
     FloatTarget target = new FloatTarget();
     float expected = context.getResources().getDimension(R.dimen.twelve_point_two_dp);
 
-    Unbinder unbinder = new BindDimenTest$FloatTarget_ViewBinding(target, context);
+    Unbinder unbinder = ButterKnife.bind(target, tree);
     assertThat(target.actual).isEqualTo(expected);
 
     unbinder.unbind();
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindDrawableTest.java b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindDrawableTest.java
similarity index 72%
rename from butterknife-runtime/src/androidTest/java/butterknife/functional/BindDrawableTest.java
rename to butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindDrawableTest.java
index 6b9aee1c..cdcef7aa 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindDrawableTest.java
+++ b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindDrawableTest.java
@@ -1,17 +1,21 @@
-package butterknife.functional;
+package com.example.butterknife.functional;
 
 import android.content.Context;
 import android.graphics.drawable.Drawable;
+import android.view.View;
 import androidx.test.InstrumentationRegistry;
 import butterknife.BindDrawable;
+import butterknife.ButterKnife;
 import butterknife.Unbinder;
-import butterknife.runtime.test.R;
+import com.example.butterknife.test.R;
 import org.junit.Test;
 
+import static com.example.butterknife.functional.ViewTestUtils.treeWithIds;
 import static com.google.common.truth.Truth.assertThat;
 
 public final class BindDrawableTest {
   private final Context context = InstrumentationRegistry.getContext();
+  private final View tree = treeWithIds(1);
 
   static class Target {
     @BindDrawable(R.drawable.circle) Drawable actual;
@@ -21,7 +25,7 @@
     Target target = new Target();
     Drawable expected = context.getResources().getDrawable(R.drawable.circle);
 
-    Unbinder unbinder = new BindDrawableTest$Target_ViewBinding(target, context);
+    Unbinder unbinder = ButterKnife.bind(target, tree);
     assertThat(target.actual.getConstantState()).isEqualTo(expected.getConstantState());
 
     unbinder.unbind();
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindFloatTest.java b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindFloatTest.java
similarity index 71%
rename from butterknife-runtime/src/androidTest/java/butterknife/functional/BindFloatTest.java
rename to butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindFloatTest.java
index fad7ceb2..53c44f1b 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindFloatTest.java
+++ b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindFloatTest.java
@@ -1,17 +1,21 @@
-package butterknife.functional;
+package com.example.butterknife.functional;
 
 import android.content.Context;
 import android.util.TypedValue;
+import android.view.View;
 import androidx.test.InstrumentationRegistry;
 import butterknife.BindFloat;
+import butterknife.ButterKnife;
 import butterknife.Unbinder;
-import butterknife.runtime.test.R;
+import com.example.butterknife.test.R;
 import org.junit.Test;
 
+import static com.example.butterknife.functional.ViewTestUtils.treeWithIds;
 import static com.google.common.truth.Truth.assertThat;
 
 public final class BindFloatTest {
   private final Context context = InstrumentationRegistry.getContext();
+  private final View tree = treeWithIds(1);
 
   static class Target {
     @BindFloat(R.dimen.twelve_point_two) float actual;
@@ -23,7 +27,7 @@
     context.getResources().getValue(R.dimen.twelve_point_two, value, true);
     float expected = value.getFloat();
 
-    Unbinder unbinder = new BindFloatTest$Target_ViewBinding(target, context);
+    Unbinder unbinder = ButterKnife.bind(target, tree);
     assertThat(target.actual).isEqualTo(expected);
 
     unbinder.unbind();
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindIntTest.java b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindIntTest.java
similarity index 67%
rename from butterknife-runtime/src/androidTest/java/butterknife/functional/BindIntTest.java
rename to butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindIntTest.java
index 5410525f..b6806e74 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindIntTest.java
+++ b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindIntTest.java
@@ -1,16 +1,20 @@
-package butterknife.functional;
+package com.example.butterknife.functional;
 
 import android.content.Context;
+import android.view.View;
 import androidx.test.InstrumentationRegistry;
 import butterknife.BindInt;
+import butterknife.ButterKnife;
 import butterknife.Unbinder;
-import butterknife.runtime.test.R;
+import com.example.butterknife.test.R;
 import org.junit.Test;
 
+import static com.example.butterknife.functional.ViewTestUtils.treeWithIds;
 import static com.google.common.truth.Truth.assertThat;
 
 public final class BindIntTest {
   private final Context context = InstrumentationRegistry.getContext();
+  private final View tree = treeWithIds(1);
 
   static class Target {
     @BindInt(R.integer.twelve) int actual;
@@ -20,7 +24,7 @@
     Target target = new Target();
     int expected = context.getResources().getInteger(R.integer.twelve);
 
-    Unbinder unbinder = new BindIntTest$Target_ViewBinding(target, context);
+    Unbinder unbinder = ButterKnife.bind(target, tree);
     assertThat(target.actual).isEqualTo(expected);
 
     unbinder.unbind();
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindStringTest.java b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindStringTest.java
similarity index 67%
rename from butterknife-runtime/src/androidTest/java/butterknife/functional/BindStringTest.java
rename to butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindStringTest.java
index 825b2d48..9e3586ba 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindStringTest.java
+++ b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindStringTest.java
@@ -1,16 +1,20 @@
-package butterknife.functional;
+package com.example.butterknife.functional;
 
 import android.content.Context;
+import android.view.View;
 import androidx.test.InstrumentationRegistry;
 import butterknife.BindString;
+import butterknife.ButterKnife;
 import butterknife.Unbinder;
-import butterknife.runtime.test.R;
+import com.example.butterknife.test.R;
 import org.junit.Test;
 
+import static com.example.butterknife.functional.ViewTestUtils.treeWithIds;
 import static com.google.common.truth.Truth.assertThat;
 
 public final class BindStringTest {
   private final Context context = InstrumentationRegistry.getContext();
+  private final View tree = treeWithIds(1);
 
   static class Target {
     @BindString(R.string.hey) String actual;
@@ -20,7 +24,7 @@
     Target target = new Target();
     String expected = context.getString(R.string.hey);
 
-    Unbinder unbinder = new BindStringTest$Target_ViewBinding(target, context);
+    Unbinder unbinder = ButterKnife.bind(target, tree);
     assertThat(target.actual).isEqualTo(expected);
 
     unbinder.unbind();
diff --git a/butterknife-runtime/src/androidTest/res/color/colors.xml b/butterknife-integration-test/src/androidTest/res/color/colors.xml
similarity index 100%
rename from butterknife-runtime/src/androidTest/res/color/colors.xml
rename to butterknife-integration-test/src/androidTest/res/color/colors.xml
diff --git a/butterknife-runtime/src/androidTest/res/drawable/circle.xml b/butterknife-integration-test/src/androidTest/res/drawable/circle.xml
similarity index 100%
rename from butterknife-runtime/src/androidTest/res/drawable/circle.xml
rename to butterknife-integration-test/src/androidTest/res/drawable/circle.xml
diff --git a/butterknife-runtime/src/androidTest/res/drawable/pixel.png b/butterknife-integration-test/src/androidTest/res/drawable/pixel.png
similarity index 100%
rename from butterknife-runtime/src/androidTest/res/drawable/pixel.png
rename to butterknife-integration-test/src/androidTest/res/drawable/pixel.png
diff --git a/butterknife-runtime/src/androidTest/res/values/values.xml b/butterknife-integration-test/src/androidTest/res/values/values.xml
similarity index 100%
rename from butterknife-runtime/src/androidTest/res/values/values.xml
rename to butterknife-integration-test/src/androidTest/res/values/values.xml
diff --git a/butterknife-integration-test/src/main/proguard.pro b/butterknife-integration-test/src/main/proguard.pro
index 526a581a..87c34705 100644
--- a/butterknife-integration-test/src/main/proguard.pro
+++ b/butterknife-integration-test/src/main/proguard.pro
@@ -16,3 +16,7 @@
 -keep class com.example.butterknife.unbinder.H {
   <init>(...);
 }
+
+-keep class androidx.core.** {
+  <methods>;
+}
diff --git a/butterknife-reflect/build.gradle b/butterknife-reflect/build.gradle
index ccf464e6..d4d5d941 100644
--- a/butterknife-reflect/build.gradle
+++ b/butterknife-reflect/build.gradle
@@ -29,6 +29,7 @@ android {
 
 dependencies {
   api project(':butterknife-runtime')
+  api deps.androidx.viewpager
 }
 
 apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
diff --git a/butterknife-reflect/src/main/java/butterknife/ButterKnife.java b/butterknife-reflect/src/main/java/butterknife/ButterKnife.java
index fbb733db..cbbd494e 100644
--- a/butterknife-reflect/src/main/java/butterknife/ButterKnife.java
+++ b/butterknife-reflect/src/main/java/butterknife/ButterKnife.java
@@ -25,6 +25,7 @@
 import androidx.annotation.UiThread;
 import androidx.core.content.ContextCompat;
 import androidx.core.content.res.ResourcesCompat;
+import androidx.viewpager.widget.ViewPager;
 import butterknife.internal.Constants;
 import butterknife.internal.Utils;
 import java.lang.reflect.AccessibleObject;
@@ -213,6 +214,9 @@ public static Unbinder bind(@NonNull Object target, @NonNull View source) {
         unbinder = parseOnLongClick(target, method, source);
         if (unbinder != null) unbinders.add(unbinder);
 
+        unbinder = parseOnPageChange(target, method, source);
+        if (unbinder != null) unbinders.add(unbinder);
+
         unbinder = parseOnTextChanged(target, method, source);
         if (unbinder != null) unbinders.add(unbinder);
 
@@ -721,6 +725,61 @@ public static Unbinder bind(@NonNull Object target, @NonNull View source) {
     return new ListenerUnbinder<>(views, ON_LONG_CLICK);
   }
 
+  private static @Nullable Unbinder parseOnPageChange(final Object target, final Method method,
+      View source) {
+    OnPageChange onPageChange = method.getAnnotation(OnPageChange.class);
+    if (onPageChange == null) {
+      return null;
+    }
+    validateMember(method);
+    validateReturnType(method, void.class);
+
+    List<ViewPager> views =
+        findViews(source, onPageChange.value(), isRequired(method), method.getName(),
+            ViewPager.class);
+
+    ViewPager.OnPageChangeListener listener;
+    switch (onPageChange.callback()) {
+      case PAGE_SCROLLED: {
+        ArgumentTransformer argumentTransformer =
+            createArgumentTransformer(method, ON_PAGE_SCROLLED_TYPES);
+        listener = new ViewPager.SimpleOnPageChangeListener() {
+          @Override public void onPageScrolled(int position, float positionOffset,
+              int positionOffsetPixels) {
+            tryInvoke(method, target,
+                argumentTransformer.transform(position, positionOffset, positionOffsetPixels));
+          }
+        };
+        break;
+      }
+      case PAGE_SELECTED: {
+        ArgumentTransformer argumentTransformer =
+            createArgumentTransformer(method, ON_PAGE_SELECTED_TYPES);
+        listener = new ViewPager.SimpleOnPageChangeListener() {
+          @Override public void onPageSelected(int position) {
+            tryInvoke(method, target, argumentTransformer.transform(position));
+          }
+        };
+        break;
+      }
+      case PAGE_SCROLL_STATE_CHANGED: {
+        ArgumentTransformer argumentTransformer =
+            createArgumentTransformer(method, ON_PAGE_SCROLL_STATE_CHANGED_TYPES);
+        listener = new ViewPager.SimpleOnPageChangeListener() {
+          @Override public void onPageScrollStateChanged(int state) {
+            tryInvoke(method, target, argumentTransformer.transform(state));
+          }
+        };
+        break;
+      }
+      default:
+        throw new AssertionError();
+    }
+
+    ViewCollections.set(views, ADD_ON_PAGE_CHANGE, listener);
+    return new ListenerUnbinder<>(views, REMOVE_ON_PAGE_CHANGE, listener);
+  }
+
   private static @Nullable Unbinder parseOnTextChanged(Object target, Method method, View source) {
     OnTextChanged onTextChanged = method.getAnnotation(OnTextChanged.class);
     if (onTextChanged == null) {
@@ -996,6 +1055,10 @@ private static Object tryInvoke(Method method, Object target, Object... argument
       (view, value, index) -> view.setOnLongClickListener(value);
   private static final Setter<View, View.OnTouchListener> ON_TOUCH =
       (view, value, index) -> view.setOnTouchListener(value);
+  private static final Setter<ViewPager, ViewPager.OnPageChangeListener> ADD_ON_PAGE_CHANGE =
+      (view, value, index) -> view.addOnPageChangeListener(value);
+  private static final Setter<ViewPager, ViewPager.OnPageChangeListener> REMOVE_ON_PAGE_CHANGE =
+      (view, value, index) -> view.removeOnPageChangeListener(value);
   private static final Setter<TextView, TextWatcher> ADD_TEXT_WATCHER =
       (view, value, index) -> view.addTextChangedListener(value);
   private static final Setter<TextView, TextWatcher> REMOVE_TEXT_WATCHER =
@@ -1011,6 +1074,9 @@ private static Object tryInvoke(Method method, Object target, Object... argument
       { AdapterView.class, View.class, int.class, long.class };
   private static final Class<?>[] ON_ITEM_LONG_CLICK_TYPES = ON_ITEM_CLICK_TYPES;
   private static final Class<?>[] ON_LONG_CLICK_TYPES = ON_CLICK_TYPES;
+  private static final Class<?>[] ON_PAGE_SCROLLED_TYPES = { int.class, float.class, int.class };
+  private static final Class<?>[] ON_PAGE_SELECTED_TYPES = { int.class };
+  private static final Class<?>[] ON_PAGE_SCROLL_STATE_CHANGED_TYPES = { int.class };
   private static final Class<?>[] ON_TEXT_CHANGED_TYPES =
       { CharSequence.class, int.class, int.class, int.class };
   private static final Class<?>[] BEFORE_TEXT_CHANGED_TYPES = ON_TEXT_CHANGED_TYPES;
