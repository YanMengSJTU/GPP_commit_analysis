diff --git a/butterknife/src/main/java/butterknife/internal/ButterKnifeProcessor.java b/butterknife/src/main/java/butterknife/internal/ButterKnifeProcessor.java
index ac87eaca..550a336f 100644
--- a/butterknife/src/main/java/butterknife/internal/ButterKnifeProcessor.java
+++ b/butterknife/src/main/java/butterknife/internal/ButterKnifeProcessor.java
@@ -165,7 +165,7 @@
     return targetClassMap;
   }
 
-  private boolean isValidForGeneratedCode(Class<? extends Annotation> annotationClass,
+  private boolean isInaccessibleViaGeneratedCode(Class<? extends Annotation> annotationClass,
       String targetThing, Element element) {
     boolean hasError = false;
     TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
@@ -235,7 +235,7 @@ private void parseInjectView(Element element, Map<TypeElement, ViewInjector> tar
     }
 
     // Verify common generated code restrictions.
-    hasError |= isValidForGeneratedCode(InjectView.class, "fields", element);
+    hasError |= isInaccessibleViaGeneratedCode(InjectView.class, "fields", element);
     hasError |= isBindingInWrongPackage(InjectView.class, element);
 
     // Check for the other field annotation.
@@ -323,7 +323,7 @@ private void parseInjectViews(Element element, Map<TypeElement, ViewInjector> ta
     }
 
     // Verify common generated code restrictions.
-    hasError |= isValidForGeneratedCode(InjectViews.class, "fields", element);
+    hasError |= isInaccessibleViaGeneratedCode(InjectViews.class, "fields", element);
     hasError |= isBindingInWrongPackage(InjectViews.class, element);
 
     if (hasError) {
@@ -420,7 +420,7 @@ private void parseListenerAnnotation(Class<? extends Annotation> annotationClass
     boolean required = element.getAnnotation(Optional.class) == null;
 
     // Verify that the method and its containing class are accessible via generated code.
-    boolean hasError = isValidForGeneratedCode(annotationClass, "methods", element);
+    boolean hasError = isInaccessibleViaGeneratedCode(annotationClass, "methods", element);
     hasError |= isBindingInWrongPackage(annotationClass, element);
 
     Integer duplicateId = findDuplicate(ids);
