diff --git a/build.gradle b/build.gradle
index 08559439..bcca6af9 100644
--- a/build.gradle
+++ b/build.gradle
@@ -11,7 +11,7 @@ buildscript {
       'androidTools': '26.0.0',
       'kotlin': '1.1.51',
 
-      'release': '8.8.1.3',
+      'release': '8.8.1.4',
   ]
 
   ext.deps = [
diff --git a/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
index 0d658494..efe84fe7 100644
--- a/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
@@ -467,11 +467,6 @@ private void addMethodBindings(MethodSpec.Builder result, ViewBinding binding,
             String[] conditions = methodBinding.getConditions();
             String key = methodBinding.getKey();
             if ((null != conditions && conditions.length > 0) || (null != key && !"".equals(key))) {
-              /*builder.beginControlFlow("if (!$T.class.isInstance(target))",
-                      VIEW_CONTROLLER)
-                      .addStatement("throw new RuntimeException("
-                              + "\"Target must be implements from $T\")", VIEW_CONTROLLER)
-                      .endControlFlow();*/
               if (null != conditions && conditions.length > 0) {
                 for (String condition : conditions) {
                   if (checkJavaSymbol(condition)) {
@@ -488,8 +483,15 @@ private void addMethodBindings(MethodSpec.Builder result, ViewBinding binding,
                   }
                 }
               }
-              builder.addStatement("target.postAction(p0, $S, $S, $S)",
-                      targetTypeName, methodBinding.getName(), key);
+              if (null != key && !"".equals(key)) {
+                builder.beginControlFlow("if (!$T.class.isInstance(target))",
+                        VIEW_CONTROLLER)
+                        .addStatement("throw new RuntimeException("
+                                + "\"Target must be implements from $T\")", VIEW_CONTROLLER)
+                        .endControlFlow();
+                builder.addStatement("target.postAction(p0, $S, $S, $S)",
+                        targetTypeName, methodBinding.getName(), key);
+              }
             }
             if (hasReturnType && !returned) {
               builder.add("return ");
diff --git a/gradle.properties b/gradle.properties
index 5f0b2bd3..fe9c1cb7 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,5 +1,5 @@
 GROUP=com.jakewharton
-VERSION_NAME=8.8.1.3-snapshot
+VERSION_NAME=8.8.1.4-snapshot
 
 POM_DESCRIPTION=Field and method binding for Android views.
 
diff --git a/gradle/gradle-mvn-push.gradle b/gradle/gradle-mvn-push.gradle
index ef14c6d3..607f7000 100644
--- a/gradle/gradle-mvn-push.gradle
+++ b/gradle/gradle-mvn-push.gradle
@@ -35,11 +35,11 @@ def getSnapshotRepositoryUrl() {
 }
 
 def getRepositoryUsername() {
-  return hasProperty('SONATYPE_NEXUS_USERNAME') ? SONATYPE_NEXUS_USERNAME : "tesla"
+  return hasProperty('SONATYPE_NEXUS_USERNAME') ? SONATYPE_NEXUS_USERNAME : ""
 }
 
 def getRepositoryPassword() {
-  return hasProperty('SONATYPE_NEXUS_PASSWORD') ? SONATYPE_NEXUS_PASSWORD : "6zG1Sp6ZrG9DoA7"
+  return hasProperty('SONATYPE_NEXUS_PASSWORD') ? SONATYPE_NEXUS_PASSWORD : ""
 }
 
 /*def getReleaseRepositoryUrl() {
