diff --git a/butterknife-annotations/src/main/java/butterknife/BindAnim.java b/butterknife-annotations/src/main/java/butterknife/BindAnim.java
index 7e12157b..bb862b68 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindAnim.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindAnim.java
@@ -9,6 +9,7 @@
 
 /**
  * Bind a field to the specified animation resource ID.
+ * 将字段绑定到指定的动画资源ID。
  * <pre><code>
  * {@literal @}BindAnim(R.anim.fade_in) Animation fadeIn;
  * </code></pre>
@@ -16,6 +17,8 @@
 @Target(FIELD)
 @Retention(RUNTIME)
 public @interface BindAnim {
-  /** Animation resource ID to which the field will be bound. */
+  /** Animation resource ID to which the field will be bound.
+   * 将字段绑定到的动画资源ID
+   * */
   @AnimRes int value();
 }
diff --git a/butterknife-annotations/src/main/java/butterknife/BindArray.java b/butterknife-annotations/src/main/java/butterknife/BindArray.java
index 6f016b4d..5f235e6f 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindArray.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindArray.java
@@ -10,7 +10,7 @@
 /**
  * Bind a field to the specified array resource ID. The type of array will be inferred from the
  * annotated element.
- *
+ * 将字段绑定到指定的数组资源ID。数组的类型将从带注解的元素中推断出来。
  * String array:
  * <pre><code>
  * {@literal @}BindArray(R.array.countries) String[] countries;
diff --git a/butterknife-annotations/src/main/java/butterknife/BindBitmap.java b/butterknife-annotations/src/main/java/butterknife/BindBitmap.java
index 0b3576e8..c03f2458 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindBitmap.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindBitmap.java
@@ -10,6 +10,7 @@
 
 /**
  * Bind a field to a {@link Bitmap} from the specified drawable resource ID.
+ * 将字段绑定到来自指定可绘制资源ID的位图。
  * <pre><code>
  * {@literal @}BindBitmap(R.drawable.logo) Bitmap logo;
  * </code></pre>
diff --git a/butterknife-annotations/src/main/java/butterknife/BindBool.java b/butterknife-annotations/src/main/java/butterknife/BindBool.java
index 5c0abd39..c0627fe4 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindBool.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindBool.java
@@ -9,6 +9,7 @@
 
 /**
  * Bind a field to the specified boolean resource ID.
+ * 将字段绑定到指定的布尔资源ID
  * <pre><code>
  * {@literal @}BindBool(R.bool.is_tablet) boolean isTablet;
  * </code></pre>
diff --git a/butterknife-annotations/src/main/java/butterknife/BindColor.java b/butterknife-annotations/src/main/java/butterknife/BindColor.java
index af289c33..1e8e347e 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindColor.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindColor.java
@@ -10,6 +10,8 @@
 /**
  * Bind a field to the specified color resource ID. Type can be {@code int} or
  * {@link android.content.res.ColorStateList}.
+ * 将字段绑定到指定的颜色资源ID。类型可以是{@code int}或
+ *  {@link android.content.res.ColorStateList}。
  * <pre><code>
  * {@literal @}BindColor(R.color.background_green) int green;
  * {@literal @}BindColor(R.color.background_green_selector) ColorStateList greenSelector;
@@ -18,6 +20,8 @@
 @Target(FIELD)
 @Retention(RUNTIME)
 public @interface BindColor {
-  /** Color resource ID to which the field will be bound. */
+  /** Color resource ID to which the field will be bound.
+   * 将字段绑定到的颜色资源ID。
+   * */
   @ColorRes int value();
 }
diff --git a/butterknife-annotations/src/main/java/butterknife/BindDimen.java b/butterknife-annotations/src/main/java/butterknife/BindDimen.java
index 62115a1e..56e734aa 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindDimen.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindDimen.java
@@ -10,6 +10,8 @@
 /**
  * Bind a field to the specified dimension resource ID. Type can be {@code int} for pixel size or
  * {@code float} for exact amount.
+ * 将字段绑定到指定的维度资源ID。类型可以是{@code int}，表示像素大小或
+ * {@code float}表示准确的金额。
  * <pre><code>
  * {@literal @}BindDimen(R.dimen.horizontal_gap) int gapPx;
  * {@literal @}BindDimen(R.dimen.horizontal_gap) float gap;
diff --git a/butterknife-annotations/src/main/java/butterknife/BindDrawable.java b/butterknife-annotations/src/main/java/butterknife/BindDrawable.java
index 8156dca9..1eed49fd 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindDrawable.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindDrawable.java
@@ -11,6 +11,7 @@
 
 /**
  * Bind a field to the specified drawable resource ID.
+ * 将字段绑定到指定的可绘制资源ID。
  * <pre><code>
  * {@literal @}BindDrawable(R.drawable.placeholder)
  * Drawable placeholder;
@@ -21,9 +22,12 @@
 @Target(FIELD)
 @Retention(RUNTIME)
 public @interface BindDrawable {
-  /** Drawable resource ID to which the field will be bound. */
+  /** Drawable resource ID to which the field will be bound.
+   * 字段将绑定到的可绘制资源ID */
   @DrawableRes int value();
 
-  /** Color attribute resource ID that is used to tint the drawable. */
+  /** Color attribute resource ID that is used to tint the drawable.
+   * 颜色属性资源ID，用于为可drawable着色。
+   * */
   @AttrRes int tint() default NO_RES_ID;
 }
diff --git a/butterknife-annotations/src/main/java/butterknife/BindFloat.java b/butterknife-annotations/src/main/java/butterknife/BindFloat.java
index bb15a288..43ef8134 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindFloat.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindFloat.java
@@ -9,10 +9,14 @@
 
 /**
  * Bind a field to the specified dimension resource ID whose type is explicitly defined as float.
+ * 将字段绑定到其类型显式定义为float的指定维度资源ID
  * <p>
  * This is different than simply reading a normal dimension as a float value which
  * {@link BindDimen @BindDimen} supports. The resource must be defined as a float like
  * {@code <item name="whatever" format="float" type="dimen">1.1</item>}.
+ * 这与简单地将普通尺寸值读取为浮点值不同
+ *  {@link BindDimen @BindDimen}支持资源必须定义为一个类似于float的
+ * {@code <item name="whatever" format="float" type="dimen">1.1</item>}.
  * <pre><code>
  * {@literal @}BindFloat(R.dimen.image_ratio) float imageRatio;
  * </code></pre>
@@ -20,6 +24,8 @@
 @Target(FIELD)
 @Retention(RUNTIME)
 public @interface BindFloat {
-  /** Float resource ID to which the field will be bound. */
+  /** Float resource ID to which the field will be bound.
+   *将字段绑定到的浮动资源ID。
+   * */
   @DimenRes int value();
 }
diff --git a/butterknife-annotations/src/main/java/butterknife/BindFont.java b/butterknife-annotations/src/main/java/butterknife/BindFont.java
index d2360c2b..a1057292 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindFont.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindFont.java
@@ -13,8 +13,9 @@
 
 /**
  * Bind a field to the specified font resource ID.
+ * 将字段绑定到指定的字体资源ID
  * <pre><code>
- * {@literal @}BindFont(R.font.comic_sans) Typeface comicSans;
+ * {@literal @}BindFont(R.font.comic_sans) Typeface comicSans; 字体comicSans
  * </code></pre>
  */
 @Target(FIELD)
diff --git a/butterknife-annotations/src/main/java/butterknife/BindInt.java b/butterknife-annotations/src/main/java/butterknife/BindInt.java
index 137950a5..a14b83ee 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindInt.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindInt.java
@@ -9,6 +9,7 @@
 
 /**
  * Bind a field to the specified integer resource ID.
+ * 将字段绑定到指定的整数资源ID。
  * <pre><code>
  * {@literal @}BindInt(R.int.columns) int columns;
  * </code></pre>
diff --git a/butterknife-annotations/src/main/java/butterknife/BindString.java b/butterknife-annotations/src/main/java/butterknife/BindString.java
index 5dfebd59..2ded759c 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindString.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindString.java
@@ -9,12 +9,14 @@
 
 /**
  * Bind a field to the specified string resource ID.
+ * 将字段绑定到指定的字符串资源ID。
  * <pre><code>
  * {@literal @}BindString(R.string.username_error) String usernameErrorText;
  * </code></pre>
  */
 @Retention(RUNTIME) @Target(FIELD)
 public @interface BindString {
-  /** String resource ID to which the field will be bound. */
+  /** String resource ID to which the field will be bound.
+   * 将字段绑定到的字符串资源ID */
   @StringRes int value();
 }
diff --git a/butterknife-annotations/src/main/java/butterknife/BindView.java b/butterknife-annotations/src/main/java/butterknife/BindView.java
index 85da51c3..6a72babb 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindView.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindView.java
@@ -10,12 +10,15 @@
 /**
  * Bind a field to the view for the specified ID. The view will automatically be cast to the field
  * type.
+ * 绑定指定id 的view 给成员变量，view会自动转换成相应类型
  * <pre><code>
  * {@literal @}BindView(R.id.title) TextView title;
  * </code></pre>
  */
 @Retention(RUNTIME) @Target(FIELD)
 public @interface BindView {
-  /** View ID to which the field will be bound. */
+  /** View ID to which the field will be bound.
+   *  绑定此view 的id值 {R.id.xxx}
+   * */
   @IdRes int value();
 }
diff --git a/butterknife-annotations/src/main/java/butterknife/BindViews.java b/butterknife-annotations/src/main/java/butterknife/BindViews.java
index 8b174f1f..8758db10 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindViews.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindViews.java
@@ -10,6 +10,7 @@
 /**
  * Bind a field to the view for the specified ID. The view will automatically be cast to the field
  * type.
+ * 将字段绑定到指定ID的视图。视图将自动转换为字段类型。
  * <pre><code>
  * {@literal @}BindViews({ R.id.title, R.id.subtitle })
  * List&lt;TextView&gt; titles;
diff --git a/butterknife-annotations/src/main/java/butterknife/OnCheckedChanged.java b/butterknife-annotations/src/main/java/butterknife/OnCheckedChanged.java
index 22681659..3b9a3eb6 100644
--- a/butterknife-annotations/src/main/java/butterknife/OnCheckedChanged.java
+++ b/butterknife-annotations/src/main/java/butterknife/OnCheckedChanged.java
@@ -14,13 +14,14 @@
 /**
  * Bind a method to an {@link OnCheckedChangeListener OnCheckedChangeListener} on the view for
  * each ID specified.
+ * 将方法绑定到视图上指定的每个ID上的{@link OnCheckedChangeListener OnCheckedChangeListener}。
  * <pre><code>
  * {@literal @}OnCheckedChanged(R.id.example) void onChecked(boolean checked) {
- *   Toast.makeText(this, checked ? "Checked!" : "Unchecked!", Toast.LENGTH_SHORT).show();
- * }
- * </code></pre>
+ *   Toast.makeText(this, checked
  * Any number of parameters from
- * {@link OnCheckedChangeListener#onCheckedChanged(android.widget.CompoundButton, boolean)
+ * {@link OnCheckedChangeListener# ? "Checked!" : "Unchecked!", Toast.LENGTH_SHORT).show();
+ *  * }
+ *  * </code></pre>onCheckedChanged(android.widget.CompoundButton, boolean)
  * onCheckedChanged} may be used on the method.
  *
  * @see OnCheckedChangeListener
diff --git a/butterknife-annotations/src/main/java/butterknife/internal/ListenerMethod.java b/butterknife-annotations/src/main/java/butterknife/internal/ListenerMethod.java
index ca62d675..875f9aef 100644
--- a/butterknife-annotations/src/main/java/butterknife/internal/ListenerMethod.java
+++ b/butterknife-annotations/src/main/java/butterknife/internal/ListenerMethod.java
@@ -8,7 +8,8 @@
 
 @Retention(RUNTIME) @Target(FIELD)
 public @interface ListenerMethod {
-  /** Name of the listener method for which this annotation applies. */
+  /** Name of the listener method for which this annotation applies.
+   *  */
   String name();
 
   /** List of method parameters. If the type is not a primitive it must be fully-qualified. */
diff --git a/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java
index 27093e6a..479f5fb5 100644
--- a/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java
+++ b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java
@@ -157,6 +157,11 @@
     return ImmutableSet.of(OPTION_SDK_INT, OPTION_DEBUGGABLE);
   }
 
+
+  /**
+   * 把需要处理的注解添加进去 进行处理
+   * @return
+   */
   @Override public Set<String> getSupportedAnnotationTypes() {
     Set<String> types = new LinkedHashSet<>();
     for (Class<? extends Annotation> annotation : getSupportedAnnotations()) {
@@ -200,7 +205,6 @@
         error(typeElement, "Unable to write binding for type %s: %s", typeElement, e.getMessage());
       }
     }
-
     return false;
   }
 
diff --git a/butterknife-reflect/src/main/java/butterknife/ButterKnife.java b/butterknife-reflect/src/main/java/butterknife/ButterKnife.java
index c35f9aad..c8d35e96 100644
--- a/butterknife-reflect/src/main/java/butterknife/ButterKnife.java
+++ b/butterknife-reflect/src/main/java/butterknife/ButterKnife.java
@@ -43,6 +43,13 @@
 import static java.lang.reflect.Modifier.STATIC;
 import static java.util.Collections.singletonList;
 
+/**
+ * 此 reflect版 ButterKnife注释大部分和 常规版一致
+ *  类的后部分
+ *   public static Unbinder bind(@NonNull Object target, @NonNull View source) 以下
+ *  是核心 实现与常规版不同
+ *
+ */
 public final class ButterKnife {
   private ButterKnife() {
     throw new AssertionError();
@@ -139,6 +146,7 @@ public static Unbinder bind(@NonNull Object target, @NonNull View source) {
         break;
       }
 
+      //遍历 绑定成员变量
       for (Field field : targetClass.getDeclaredFields()) {
         int unbinderStartingSize = unbinders.size();
         Unbinder unbinder;
@@ -188,6 +196,7 @@ public static Unbinder bind(@NonNull Object target, @NonNull View source) {
         }
       }
 
+      //遍历methond 绑定 method
       for (Method method : targetClass.getDeclaredMethods()) {
         Unbinder unbinder;
 
diff --git a/settings.gradle b/settings.gradle
index 39a6d21b..9ecaae16 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -7,7 +7,7 @@ include ':butterknife-lint'
 include ':butterknife-reflect'
 include ':butterknife-runtime'
 
-include ':sample:app'
-include ':sample:library'
+//include ':sample:app'
+//include ':sample:library'
 
 rootProject.name = 'butterknife-parent'
