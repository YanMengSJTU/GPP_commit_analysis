diff --git a/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
index e7ea9a97..b161707b 100644
--- a/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
@@ -464,9 +464,8 @@ private void addMethodBindings(MethodSpec.Builder result, ViewBinding binding) {
               int listenerPosition = parameter.getListenerPosition();
 
               if (parameter.requiresCast(listenerParameters[listenerPosition])) {
-                builder.add("$T.castParam(p$L, $S, $L, $S, $L, $T.class)",
-                    UTILS, listenerPosition, method.name(), listenerPosition,
-                    methodBinding.getName(), i, parameter.getType());
+                builder.add("$T.<$T>castParam(p$L, $S, $L, $S, $L)", UTILS, parameter.getType(),
+                    listenerPosition, method.name(), listenerPosition, methodBinding.getName(), i);
               } else {
                 builder.add("p$L", listenerPosition);
               }
diff --git a/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java
index 2d3895d4..a08f9c30 100644
--- a/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java
+++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java
@@ -3,13 +3,11 @@
 import com.github.javaparser.JavaParser;
 import com.github.javaparser.ast.CompilationUnit;
 import com.github.javaparser.ast.Node;
-import com.github.javaparser.ast.NodeList;
 import com.github.javaparser.ast.body.BodyDeclaration;
 import com.github.javaparser.ast.body.ClassOrInterfaceDeclaration;
 import com.github.javaparser.ast.body.FieldDeclaration;
 import com.github.javaparser.ast.body.TypeDeclaration;
 import com.github.javaparser.ast.body.VariableDeclarator;
-import com.github.javaparser.ast.expr.Expression;
 import com.github.javaparser.ast.type.PrimitiveType;
 import com.github.javaparser.ast.type.Type;
 import com.squareup.javapoet.ClassName;
@@ -19,7 +17,6 @@
 import java.io.File;
 import java.util.Arrays;
 import java.util.List;
-import java.util.Optional;
 
 import static javax.lang.model.element.Modifier.FINAL;
 import static javax.lang.model.element.Modifier.PUBLIC;
@@ -84,9 +81,9 @@ private static void addResourceType(List<String> supportedTypes, TypeSpec.Builde
   }
 
   private static boolean isInt(FieldDeclaration field) {
-    Type type = field.getType();
+    Type type = field.getElementType();
     return type instanceof PrimitiveType
-        && ((PrimitiveType) type).getType() == PrimitiveType.Primitive.Int;
+        && ((PrimitiveType) type).getType() == PrimitiveType.Primitive.INT;
   }
 
   private static void addResourceField(TypeSpec.Builder resourceType, VariableDeclarator variable,
diff --git a/butterknife/src/main/java/butterknife/internal/Utils.java b/butterknife/src/main/java/butterknife/internal/Utils.java
index e9101f74..52b2fc23 100644
--- a/butterknife/src/main/java/butterknife/internal/Utils.java
+++ b/butterknife/src/main/java/butterknife/internal/Utils.java
@@ -120,10 +120,10 @@ public static View findRequiredView(View source, @IdRes int id, String who) {
     }
   }
 
-  public static <T> T castParam(Object value, String from, int fromPos, String to, int toPos,
-      Class<T> cls) {
+  @SuppressWarnings("unchecked") // That's the point.
+  public static <T> T castParam(Object value, String from, int fromPos, String to, int toPos) {
     try {
-      return cls.cast(value);
+      return (T) value;
     } catch (ClassCastException e) {
       throw new IllegalStateException("Parameter #"
           + (fromPos + 1)
diff --git a/butterknife/src/test/java/butterknife/OnClickTest.java b/butterknife/src/test/java/butterknife/OnClickTest.java
index 81b22b72..3cf004a6 100644
--- a/butterknife/src/test/java/butterknife/OnClickTest.java
+++ b/butterknife/src/test/java/butterknife/OnClickTest.java
@@ -324,7 +324,7 @@
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
         + "      public void doClick(View p0) {\n"
-        + "        target.click2(Utils.castParam(p0, \"doClick\", 0, \"click2\", 0, TextView.class));\n"
+        + "        target.click2(Utils.<TextView>castParam(p0, \"doClick\", 0, \"click2\", 0));\n"
         + "      }\n"
         + "    });\n"
         + "    view = Utils.findRequiredView(source, 3, \"method 'click3'\");\n"
@@ -332,7 +332,7 @@
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
         + "      public void doClick(View p0) {\n"
-        + "        target.click3(Utils.castParam(p0, \"doClick\", 0, \"click3\", 0, Button.class));\n"
+        + "        target.click3(Utils.<Button>castParam(p0, \"doClick\", 0, \"click3\", 0));\n"
         + "      }\n"
         + "    });\n"
         + "    view = Utils.findRequiredView(source, 4, \"method 'click4'\");\n"
@@ -340,7 +340,7 @@
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
         + "      public void doClick(View p0) {\n"
-        + "        target.click4(Utils.castParam(p0, \"doClick\", 0, \"click4\", 0, Test.TestInterface.class));\n"
+        + "        target.click4(Utils.<Test.TestInterface>castParam(p0, \"doClick\", 0, \"click4\", 0));\n"
         + "      }\n"
         + "    });\n"
         + "  }\n"
diff --git a/butterknife/src/test/java/butterknife/OnItemClickTest.java b/butterknife/src/test/java/butterknife/OnItemClickTest.java
index 03f334c4..31ba53d2 100644
--- a/butterknife/src/test/java/butterknife/OnItemClickTest.java
+++ b/butterknife/src/test/java/butterknife/OnItemClickTest.java
@@ -162,7 +162,7 @@
         + "    ((AdapterView<?>) view).setOnItemClickListener(new AdapterView.OnItemClickListener() {\n"
         + "      @Override\n"
         + "      public void onItemClick(AdapterView<?> p0, View p1, int p2, long p3) {\n"
-        + "        target.doStuff(Utils.castParam(p0, \"onItemClick\", 0, \"doStuff\", 0, ListView.class), p2);\n"
+        + "        target.doStuff(Utils.<ListView>castParam(p0, \"onItemClick\", 0, \"doStuff\", 0), p2);\n"
         + "      }\n"
         + "    });\n"
         + "  }\n"
@@ -222,7 +222,7 @@
         + "    ((AdapterView<?>) view).setOnItemClickListener(new AdapterView.OnItemClickListener() {\n"
         + "      @Override\n"
         + "      public void onItemClick(AdapterView<?> p0, View p1, int p2, long p3) {\n"
-        + "        target.doStuff(Utils.castParam(p0, \"onItemClick\", 0, \"doStuff\", 0, ListView.class)\n"
+        + "        target.doStuff(Utils.<ListView>castParam(p0, \"onItemClick\", 0, \"doStuff\", 0)\n"
         + "        , p2);\n"
         + "      }\n"
         + "    });\n"
diff --git a/butterknife/src/test/java/butterknife/internal/UtilsTest.java b/butterknife/src/test/java/butterknife/internal/UtilsTest.java
deleted file mode 100644
index b22c6523..00000000
--- a/butterknife/src/test/java/butterknife/internal/UtilsTest.java
+++ /dev/null
@@ -1,18 +0,0 @@
-package butterknife.internal;
-
-import org.junit.Assert;
-import org.junit.Test;
-
-import static com.google.common.truth.Truth.assertThat;
-
-public class UtilsTest {
-
-  @Test public void testCastParam() {
-    try {
-      Utils.castParam("abc", "Foo", 3, "foo()", 4, Integer.class);
-      Assert.fail("Failed to cast exception");
-    } catch (IllegalStateException ise) {
-      assertThat(ise.getMessage()).contains("foo()");
-    }
-  }
-}
