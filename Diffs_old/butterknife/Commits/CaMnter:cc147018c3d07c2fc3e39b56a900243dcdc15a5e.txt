diff --git a/build.gradle b/build.gradle
index 72a14d5a..e7f1a917 100644
--- a/build.gradle
+++ b/build.gradle
@@ -6,7 +6,7 @@ buildscript {
       'compileSdk': 26,
 
       'supportLibrary': '27.0.0',
-      'androidPlugin': '3.0.0',
+      'androidPlugin': '3.1.0-alpha01',
       'androidTools': '26.0.0',
       'kotlin': '1.1.51',
 
diff --git a/butterknife-gradle-plugin/src/main/java/butterknife/plugin/ButterKnifePlugin.kt b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/ButterKnifePlugin.kt
index 0f320906..810e262d 100644
--- a/butterknife-gradle-plugin/src/main/java/butterknife/plugin/ButterKnifePlugin.kt
+++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/ButterKnifePlugin.kt
@@ -1,12 +1,9 @@
 package butterknife.plugin
 
-import com.android.build.gradle.AppExtension
-import com.android.build.gradle.AppPlugin
-import com.android.build.gradle.FeatureExtension
-import com.android.build.gradle.FeaturePlugin
-import com.android.build.gradle.LibraryExtension
-import com.android.build.gradle.LibraryPlugin
+import com.android.build.gradle.*
 import com.android.build.gradle.api.BaseVariant
+import com.android.build.gradle.internal.scope.VariantScope
+import com.android.build.gradle.tasks.ProcessAndroidResources
 import org.gradle.api.DomainObjectSet
 import org.gradle.api.Plugin
 import org.gradle.api.Project
@@ -14,6 +11,9 @@ import org.gradle.api.plugins.ExtensionContainer
 import java.io.File
 import java.util.concurrent.atomic.AtomicBoolean
 import kotlin.reflect.KClass
+import kotlin.reflect.KProperty1
+import kotlin.reflect.full.declaredMemberProperties
+import kotlin.reflect.jvm.isAccessible
 
 class ButterKnifePlugin : Plugin<Project> {
   override fun apply(project: Project) {
@@ -56,7 +56,15 @@ class ButterKnifePlugin : Plugin<Project> {
         // Though there might be multiple outputs, their R files are all the same. Thus, we only
         // need to configure the task once with the R.java input and action.
         if (once.compareAndSet(false, true)) {
-          val rPackage = processResources.packageForR
+          val variantScope = processResources.getVariantScope()
+          val variantData = variantScope.variantData
+          val config = variantData.variantConfiguration
+          val splitName = config.splitFromManifest
+          val rPackage = if (splitName == null) {
+            config.originalApplicationId
+          } else {
+            config.originalApplicationId + "." + splitName
+          }
           val pathToR = rPackage.replace('.', File.separatorChar)
           val rFile = processResources.sourceOutputDir.resolve(pathToR).resolve("R.java")
 
@@ -72,6 +80,15 @@ class ButterKnifePlugin : Plugin<Project> {
     }
   }
 
+  private fun ProcessAndroidResources.getVariantScope(): VariantScope {
+    val property = ProcessAndroidResources::class
+            .declaredMemberProperties
+            .find { it.name == "variantScope" } as KProperty1<*, *>
+    property.isAccessible = true
+    val value = property.getter.call(this)
+    return value as VariantScope
+  }
+
   private operator fun <T : Any> ExtensionContainer.get(type: KClass<T>): T {
     return getByType(type.java)!!
   }
