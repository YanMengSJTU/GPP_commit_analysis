diff --git a/butterfork-compiler/build.gradle b/butterfork-compiler/build.gradle
index 6e086c0d..484434d0 100644
--- a/butterfork-compiler/build.gradle
+++ b/butterfork-compiler/build.gradle
@@ -12,5 +12,6 @@ dependencies {
     testCompile group: 'com.google.testing.compile', name: 'compile-testing', version: '0.6'
     testCompile group: 'junit', name: 'junit', version: '4.12'
     testCompile group: 'org.assertj', name: 'assertj-core', version: '1.7.1'
+    testCompile group: 'com.google.android', name: 'support-v4', version: 'r7'
     testCompile files(Jvm.current().getToolsJar())
 }
\ No newline at end of file
diff --git a/butterfork-compiler/src/main/java/butterfork/internal/ButterForkProcessor.java b/butterfork-compiler/src/main/java/butterfork/internal/ButterForkProcessor.java
index 7fceb323..fc7335e6 100644
--- a/butterfork-compiler/src/main/java/butterfork/internal/ButterForkProcessor.java
+++ b/butterfork-compiler/src/main/java/butterfork/internal/ButterForkProcessor.java
@@ -683,7 +683,7 @@ private void parseResourceInt(Element element, Map<TypeElement, BindingClass> ta
     String id = element.getAnnotation(BindInt.class).value();
 
     BindingClass bindingClass = targetClassMap.get(enclosingElement);
-    FieldResourceBinding binding = new FieldResourceBinding(id, name, "getInteger", "int");
+    FieldResourceBinding binding = new FieldResourceBinding(id, name, "getInteger", "integer");
     bindingClass.addResource(binding);
 
     erasedTargetNames.add(enclosingElement.toString());
@@ -880,8 +880,8 @@ private void parseListenerAnnotation(Class<? extends Annotation> annotationClass
             hasError = true;
           }
         } else {
-          error(element, "@%s annotation contains invalid ID %s. (%s.%s)",
-              annotationClass.getSimpleName(), id, enclosingElement.getQualifiedName(),
+          error(element, "@%s annotation contains empty ID. (%s.%s)",
+              annotationClass.getSimpleName(), enclosingElement.getQualifiedName(),
               element.getSimpleName());
           hasError = true;
         }
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/BindArrayTest.java b/butterfork-compiler/src/test/java/butterfork/internal/BindArrayTest.java
index bb08ef32..5dcd5ae2 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/BindArrayTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/BindArrayTest.java
@@ -16,8 +16,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindArray;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindArray(1) String[] one;",
+        "  @BindArray(\"one\") String[] one;",
         "}"
     ));
 
@@ -26,12 +28,13 @@
             "package test;",
             "import android.content.res.Resources;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    Resources res = finder.getContext(source).getResources();",
-            "    target.one = res.getStringArray(1);",
+            "    target.one = res.getStringArray(R.array.one);",
             "  }",
             "  @Override public void unbind(T target) {",
             "  }",
@@ -50,8 +53,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindArray;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindArray(1) int[] one;",
+        "  @BindArray(\"one\") int[] one;",
         "}"
     ));
 
@@ -60,12 +65,13 @@
             "package test;",
             "import android.content.res.Resources;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    Resources res = finder.getContext(source).getResources();",
-            "    target.one = res.getIntArray(1);",
+            "    target.one = res.getIntArray(R.array.one);",
             "  }",
             "  @Override public void unbind(T target) {",
             "  }",
@@ -84,8 +90,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindArray;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindArray(1) CharSequence[] one;",
+        "  @BindArray(\"one\") CharSequence[] one;",
         "}"
     ));
 
@@ -94,12 +102,13 @@
             "package test;",
             "import android.content.res.Resources;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    Resources res = finder.getContext(source).getResources();",
-            "    target.one = res.getTextArray(1);",
+            "    target.one = res.getTextArray(R.array.one);",
             "  }",
             "  @Override public void unbind(T target) {",
             "  }",
@@ -118,9 +127,11 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindArray;",
+        "import butterfork.BindResources;",
         "import android.content.res.TypedArray;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindArray(1) TypedArray one;",
+        "  @BindArray(\"one\") TypedArray one;",
         "}"
     ));
 
@@ -129,12 +140,13 @@
             "package test;",
             "import android.content.res.Resources;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    Resources res = finder.getContext(source).getResources();",
-            "    target.one = res.obtainTypedArray(1);",
+            "    target.one = res.obtainTypedArray(R.array.one);",
             "  }",
             "  @Override public void unbind(T target) {",
             "  }",
@@ -153,8 +165,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindArray;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindArray(1) String one;",
+        "  @BindArray(\"one\") String one;",
         "}"
     ));
 
@@ -164,6 +178,6 @@
         .withErrorContaining(
             "@BindArray field type must be one of: String[], int[], CharSequence[], "
                 + "android.content.res.TypedArray. (test.Test.one)")
-        .in(source).onLine(5);
+        .in(source).onLine(7);
   }
 }
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/BindBitmapTest.java b/butterfork-compiler/src/test/java/butterfork/internal/BindBitmapTest.java
index 47d5e61b..b4c4b303 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/BindBitmapTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/BindBitmapTest.java
@@ -17,8 +17,10 @@
         "import android.app.Activity;",
         "import android.graphics.Bitmap;",
         "import butterfork.BindBitmap;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindBitmap(1) Bitmap one;",
+        "  @BindBitmap(\"one\") Bitmap one;",
         "}"
     ));
 
@@ -28,12 +30,13 @@
             "import android.content.res.Resources;",
             "import android.graphics.BitmapFactory;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    Resources res = finder.getContext(source).getResources();",
-            "    target.one = BitmapFactory.decodeResource(res, 1);",
+            "    target.one = BitmapFactory.decodeResource(res, R.drawable.one);",
             "  }",
             "  @Override public void unbind(T target) {",
             "  }",
@@ -52,8 +55,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindBitmap;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindBitmap(1) String one;",
+        "  @BindBitmap(\"one\") String one;",
         "}"
     ));
 
@@ -61,6 +66,6 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining("@BindBitmap field type must be 'Bitmap'. (test.Test.one)")
-        .in(source).onLine(5);
+        .in(source).onLine(7);
   }
 }
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/BindBoolTest.java b/butterfork-compiler/src/test/java/butterfork/internal/BindBoolTest.java
index a84e7200..4e5200b4 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/BindBoolTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/BindBoolTest.java
@@ -16,8 +16,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindBool;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindBool(1) boolean one;",
+        "  @BindBool(\"one\") boolean one;",
         "}"
     ));
 
@@ -26,12 +28,13 @@
             "package test;",
             "import android.content.res.Resources;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    Resources res = finder.getContext(source).getResources();",
-            "    target.one = res.getBoolean(1);",
+            "    target.one = res.getBoolean(R.bool.one);",
             "  }",
             "  @Override public void unbind(T target) {",
             "  }",
@@ -50,8 +53,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindBool;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindBool(1) String one;",
+        "  @BindBool(\"one\") String one;",
         "}"
     ));
 
@@ -59,6 +64,6 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining("@BindBool field type must be 'boolean'. (test.Test.one)")
-        .in(source).onLine(5);
+        .in(source).onLine(7);
   }
 }
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/BindColorTest.java b/butterfork-compiler/src/test/java/butterfork/internal/BindColorTest.java
index 3ab6b9b2..fa448677 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/BindColorTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/BindColorTest.java
@@ -16,8 +16,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindColor;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindColor(1) int one;",
+        "  @BindColor(\"one\") int one;",
         "}"
     ));
 
@@ -26,12 +28,13 @@
             "package test;",
             "import android.content.res.Resources;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    Resources res = finder.getContext(source).getResources();",
-            "    target.one = res.getColor(1);",
+            "    target.one = res.getColor(R.color.one);",
             "  }",
             "  @Override public void unbind(T target) {",
             "  }",
@@ -51,8 +54,10 @@
         "import android.app.Activity;",
         "import android.content.res.ColorStateList;",
         "import butterfork.BindColor;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindColor(1) ColorStateList one;",
+        "  @BindColor(\"one\") ColorStateList one;",
         "}"
     ));
 
@@ -61,12 +66,13 @@
             "package test;",
             "import android.content.res.Resources;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    Resources res = finder.getContext(source).getResources();",
-            "    target.one = res.getColorStateList(1);",
+            "    target.one = res.getColorStateList(R.color.one);",
             "  }",
             "  @Override public void unbind(T target) {",
             "  }",
@@ -85,8 +91,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindColor;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindColor(1) String one;",
+        "  @BindColor(\"one\") String one;",
         "}"
     ));
 
@@ -94,6 +102,6 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining("@BindColor field type must be 'int' or 'ColorStateList'. (test.Test.one)")
-        .in(source).onLine(5);
+        .in(source).onLine(7);
   }
 }
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/BindDimenTest.java b/butterfork-compiler/src/test/java/butterfork/internal/BindDimenTest.java
index 1e63d797..55196f59 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/BindDimenTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/BindDimenTest.java
@@ -16,8 +16,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindDimen;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindDimen(1) float one;",
+        "  @BindDimen(\"one\") float one;",
         "}"
     ));
 
@@ -26,12 +28,13 @@
             "package test;",
             "import android.content.res.Resources;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    Resources res = finder.getContext(source).getResources();",
-            "    target.one = res.getDimension(1);",
+            "    target.one = res.getDimension(R.dimen.one);",
             "  }",
             "  @Override public void unbind(T target) {",
             "  }",
@@ -50,8 +53,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindDimen;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindDimen(1) int one;",
+        "  @BindDimen(\"one\") int one;",
         "}"
     ));
 
@@ -60,12 +65,13 @@
             "package test;",
             "import android.content.res.Resources;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    Resources res = finder.getContext(source).getResources();",
-            "    target.one = res.getDimensionPixelSize(1);",
+            "    target.one = res.getDimensionPixelSize(R.dimen.one);",
             "  }",
             "  @Override public void unbind(T target) {",
             "  }",
@@ -84,8 +90,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindDimen;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindDimen(1) String one;",
+        "  @BindDimen(\"one\") String one;",
         "}"
     ));
 
@@ -93,6 +101,6 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining("@BindDimen field type must be 'int' or 'float'. (test.Test.one)")
-        .in(source).onLine(5);
+        .in(source).onLine(7);
   }
 }
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/BindDrawableTest.java b/butterfork-compiler/src/test/java/butterfork/internal/BindDrawableTest.java
index e6b92999..f1eddfa9 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/BindDrawableTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/BindDrawableTest.java
@@ -17,8 +17,10 @@
         "import android.app.Activity;",
         "import android.graphics.drawable.Drawable;",
         "import butterfork.BindDrawable;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindDrawable(1) Drawable one;",
+        "  @BindDrawable(\"one\") Drawable one;",
         "}"
     ));
 
@@ -27,12 +29,13 @@
             "package test;",
             "import android.content.res.Resources;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    Resources res = finder.getContext(source).getResources();",
-            "    target.one = res.getDrawable(1);",
+            "    target.one = res.getDrawable(R.drawable.one);",
             "  }",
             "  @Override public void unbind(T target) {",
             "  }",
@@ -51,8 +54,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindDrawable;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindDrawable(1) String one;",
+        "  @BindDrawable(\"one\") String one;",
         "}"
     ));
 
@@ -60,6 +65,6 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining("@BindDrawable field type must be 'Drawable'. (test.Test.one)")
-        .in(source).onLine(5);
+        .in(source).onLine(7);
   }
 }
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/BindIntTest.java b/butterfork-compiler/src/test/java/butterfork/internal/BindIntTest.java
index 48437dfc..6f6b2030 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/BindIntTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/BindIntTest.java
@@ -16,8 +16,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindInt;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindInt(1) int one;",
+        "  @BindInt(\"one\") int one;",
         "}"
     ));
 
@@ -26,12 +28,13 @@
             "package test;",
             "import android.content.res.Resources;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    Resources res = finder.getContext(source).getResources();",
-            "    target.one = res.getInteger(1);",
+            "    target.one = res.getInteger(R.integer.one);",
             "  }",
             "  @Override public void unbind(T target) {",
             "  }",
@@ -50,8 +53,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.BindInt;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindInt(1) String one;",
+        "  @BindInt(\"one\") String one;",
         "}"
     ));
 
@@ -59,6 +64,6 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining("@BindInt field type must be 'int'. (test.Test.one)")
-        .in(source).onLine(5);
+        .in(source).onLine(7);
   }
 }
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/BindStringTest.java b/butterfork-compiler/src/test/java/butterfork/internal/BindStringTest.java
index d6c01b0a..542f45b4 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/BindStringTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/BindStringTest.java
@@ -15,9 +15,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.BindString;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindString(1) String one;",
+        "  @BindString(\"one\") String one;",
         "}"
     ));
 
@@ -26,12 +28,13 @@
             "package test;",
             "import android.content.res.Resources;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    Resources res = finder.getContext(source).getResources();",
-            "    target.one = res.getString(1);",
+            "    target.one = res.getString(R.string.one);",
             "  }",
             "  @Override public void unbind(T target) {",
             "  }",
@@ -49,9 +52,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.BindString;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @BindString(1) boolean one;",
+        "  @BindString(\"one\") boolean one;",
         "}"
     ));
 
@@ -59,6 +64,6 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining("@BindString field type must be 'String'. (test.Test.one)")
-        .in(source).onLine(5);
+        .in(source).onLine(7);
   }
 }
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/BindTest.java b/butterfork-compiler/src/test/java/butterfork/internal/BindTest.java
index daeb3ecf..d1fe3e15 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/BindTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/BindTest.java
@@ -17,8 +17,10 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "    @Bind(1) View thing;",
+        "    @Bind(\"one\") View thing;",
         "}"
     ));
 
@@ -27,12 +29,13 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"field 'thing'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"field 'thing'\");",
             "    target.thing = view;",
             "  }",
             "  @Override public void unbind(T target) {",
@@ -53,16 +56,18 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "    @Bind({1, 2}) View thing;",
+        "    @Bind({\"one\", \"two\"}) View thing;",
         "}"
     ));
 
     ASSERT.about(javaSource()).that(source)
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
-        .withErrorContaining("@Bind for a view must only specify one ID. Found: [1, 2]. (test.Test.thing)")
-        .in(source).onLine(6);
+        .withErrorContaining("@Bind for a view must only specify one ID. Found: [one, two]. (test.Test.thing)")
+        .in(source).onLine(8);
   }
 
   @Test public void bindingInterface() throws Exception {
@@ -71,9 +76,11 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
         "    interface TestInterface {}",
-        "    @Bind(1) TestInterface thing;",
+        "    @Bind(\"one\") TestInterface thing;",
         "}"
     ));
 
@@ -82,13 +89,14 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"field 'thing'\");",
-            "    target.thing = finder.castView(view, 1, \"field 'thing'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"field 'thing'\");",
+            "    target.thing = finder.castView(view, R.id.one, \"field 'thing'\");",
             "  }",
             "  @Override public void unbind(T target) {",
             "    target.thing = null;",
@@ -110,8 +118,10 @@
         "import android.widget.EditText;",
         "import android.widget.TextView;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "class Test<T extends TextView> extends Activity {",
-        "    @Bind(1) T thing;",
+        "    @Bind(\"one\") T thing;",
         "}"
     ));
 
@@ -120,13 +130,14 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"field 'thing'\");",
-            "    target.thing = finder.castView(view, 1, \"field 'thing'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"field 'thing'\");",
+            "    target.thing = finder.castView(view, R.id.one, \"field 'thing'\");",
             "  }",
             "  @Override public void unbind(T target) {",
             "    target.thing = null;",
@@ -147,10 +158,12 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
         "import butterfork.OnClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @Bind(1) View thing1;",
-        "  @OnClick(1) void doStuff() {}",
+        "  @Bind(\"one\") View thing1;",
+        "  @OnClick(\"one\") void doStuff() {}",
         "}"
     ));
 
@@ -160,12 +173,13 @@
             "import android.view.View;",
             "import butterfork.ButterFork;",
             "import butterfork.internal.DebouncingOnClickListener;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"field 'thing1' and method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"field 'thing1' and method 'doStuff'\");",
             "    target.thing1 = view;",
             "    view.setOnClickListener(new DebouncingOnClickListener() {",
             "      @Override public void doClick(View p0) {",
@@ -192,10 +206,12 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @Bind(1) public View thing1;",
-        "  @Bind(2) View thing2;",
-        "  @Bind(3) protected View thing3;",
+        "  @Bind(\"one\") public View thing1;",
+        "  @Bind(\"two\") View thing2;",
+        "  @Bind(\"three\") protected View thing3;",
         "}"
     ));
 
@@ -210,9 +226,11 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
         "  @interface Nullable {}",
-        "  @Nullable @Bind(1) View view;",
+        "  @Nullable @Bind(\"one\") View view;",
         "}"
     ));
 
@@ -221,12 +239,13 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findOptionalView(source, 1, null);",
+            "    view = finder.findOptionalView(source, R.id.one, null);",
             "    target.view = view;",
             "  }",
             "  @Override public void unbind(T target) {",
@@ -248,11 +267,13 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @Bind(1) View view;",
+        "  @Bind(\"one\") View view;",
         "}",
         "class TestOne extends Test {",
-        "  @Bind(1) View thing;",
+        "  @Bind(\"one\") View thing;",
         "}",
         "class TestTwo extends Test {",
         "}"
@@ -263,12 +284,13 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"field 'view'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"field 'view'\");",
             "    target.view = view;",
             "  }",
             "  @Override public void unbind(T target) {",
@@ -282,6 +304,7 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class TestOne$$ViewBinder<T extends TestOne> ",
@@ -289,7 +312,7 @@
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    super.bind(finder, target, source);",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"field 'thing'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"field 'thing'\");",
             "    target.thing = view;",
             "  }",
             "  @Override public void unbind(T target) {",
@@ -312,11 +335,13 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test<T> extends Activity {",
-        "  @Bind(1) View view;",
+        "  @Bind(\"one\") View view;",
         "}",
         "class TestOne extends Test<String> {",
-        "  @Bind(1) View thing;",
+        "  @Bind(\"one\") View thing;",
         "}",
         "class TestTwo extends Test<Object> {",
         "}"
@@ -327,12 +352,13 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"field 'view'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"field 'view'\");",
             "    target.view = view;",
             "  }",
             "  @Override public void unbind(T target) {",
@@ -346,6 +372,7 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class TestOne$$ViewBinder<T extends TestOne> ",
@@ -353,7 +380,7 @@
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    super.bind(finder, target, source);",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"field 'thing'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"field 'thing'\");",
             "    target.thing = view;",
             "  }",
             "  @Override public void unbind(T target) {",
@@ -376,7 +403,7 @@
         "import android.view.View;",
         "import butterfork.Bind;",
         "public class Test {",
-        "  @Bind(1) View thing;",
+        "  @Bind(\"one\") View thing;",
         "}"
     ));
 
@@ -394,7 +421,7 @@
         "import android.view.View;",
         "import butterfork.Bind;",
         "public class Test {",
-        "  @Bind(1) View thing;",
+        "  @Bind(\"one\") View thing;",
         "}"
     ));
 
@@ -413,7 +440,7 @@
         "import butterfork.Bind;",
         "public class Test {",
         "  private static class Inner {",
-        "    @Bind(1) View thing;",
+        "    @Bind(\"one\") View thing;",
         "  }",
         "}"
     ));
@@ -431,8 +458,10 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @Bind(1) String thing;",
+        "  @Bind(\"one\") String thing;",
         "}"
     ));
 
@@ -440,7 +469,7 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining("@Bind fields must extend from View or be an interface. (test.Test.thing)")
-        .in(source).onLine(5);
+        .in(source).onLine(7);
   }
 
   @Test public void failsIfInInterface() {
@@ -449,7 +478,7 @@
         "import android.view.View;",
         "import butterfork.Bind;",
         "public interface Test {",
-        "    @Bind(1) View thing = null;",
+        "    @Bind(\"one\") View thing = null;",
         "}"
     ));
 
@@ -467,8 +496,10 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "    @Bind(1) private View thing;",
+        "    @Bind(\"one\") private View thing;",
         "}"
     ));
 
@@ -476,7 +507,7 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining("@Bind fields must not be private or static. (test.Test.thing)")
-        .in(source).onLine(6);
+        .in(source).onLine(8);
   }
 
   @Test public void failsIfStatic() {
@@ -485,8 +516,10 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "    @Bind(1) static View thing;",
+        "    @Bind(\"one\") static View thing;",
         "}"
     ));
 
@@ -494,7 +527,7 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining("@Bind fields must not be private or static. (test.Test.thing)")
-        .in(source).onLine(6);
+        .in(source).onLine(8);
   }
 
   @Test public void duplicateBindingFails() throws Exception {
@@ -503,9 +536,11 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "    @Bind(1) View thing1;",
-        "    @Bind(1) View thing2;",
+        "    @Bind(\"one\") View thing1;",
+        "    @Bind(\"one\") View thing2;",
         "}"
     ));
 
@@ -513,8 +548,8 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining(
-            "Attempt to use @Bind for an already bound ID 1 on 'thing1'. (test.Test.thing2)")
-        .in(source).onLine(7);
+            "Attempt to use @Bind for an already bound ID one on 'thing1'. (test.Test.thing2)")
+        .in(source).onLine(9);
   }
 
   @Test public void failsRootViewBindingWithBadTarget() throws Exception {
@@ -573,8 +608,10 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "    @Bind({1, 2, 3}) View[] thing;",
+        "    @Bind({\"one\", \"two\", \"three\"}) View[] thing;",
         "}"
     ));
 
@@ -583,15 +620,16 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
             "    target.thing = ButterFork.Finder.arrayOf(",
-            "        finder.<View>findRequiredView(source, 1, \"field 'thing'\"),",
-            "        finder.<View>findRequiredView(source, 2, \"field 'thing'\"),",
-            "        finder.<View>findRequiredView(source, 3, \"field 'thing'\")",
+            "        finder.<View>findRequiredView(source, R.id.one, \"field 'thing'\"),",
+            "        finder.<View>findRequiredView(source, R.id.two, \"field 'thing'\"),",
+            "        finder.<View>findRequiredView(source, R.id.three, \"field 'thing'\")",
             "    );",
             "  }",
             "  @Override public void unbind(T target) {",
@@ -613,8 +651,10 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test<T extends View> extends Activity {",
-        "    @Bind({1, 2, 3}) T[] thing;",
+        "    @Bind({\"one\", \"two\", \"three\"}) T[] thing;",
         "}"
     ));
 
@@ -623,15 +663,16 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
             "    target.thing = ButterFork.Finder.arrayOf(",
-            "        finder.<View>findRequiredView(source, 1, \"field 'thing'\"),",
-            "        finder.<View>findRequiredView(source, 2, \"field 'thing'\"),",
-            "        finder.<View>findRequiredView(source, 3, \"field 'thing'\")",
+            "        finder.<View>findRequiredView(source, R.id.one, \"field 'thing'\"),",
+            "        finder.<View>findRequiredView(source, R.id.two, \"field 'thing'\"),",
+            "        finder.<View>findRequiredView(source, R.id.three, \"field 'thing'\")",
             "    );",
             "  }",
             "  @Override public void unbind(T target) {",
@@ -653,8 +694,10 @@
         "import android.app.Activity;",
         "import android.widget.TextView;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "    @Bind({1, 2, 3}) TextView[] thing;",
+        "    @Bind({\"one\", \"two\", \"three\"}) TextView[] thing;",
         "}"
     ));
 
@@ -664,15 +707,16 @@
             "import android.view.View;",
             "import android.widget.TextView;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
             "    target.thing = ButterFork.Finder.arrayOf(",
-            "        finder.<TextView>findRequiredView(source, 1, \"field 'thing'\"),",
-            "        finder.<TextView>findRequiredView(source, 2, \"field 'thing'\"),",
-            "        finder.<TextView>findRequiredView(source, 3, \"field 'thing'\")",
+            "        finder.<TextView>findRequiredView(source, R.id.one, \"field 'thing'\"),",
+            "        finder.<TextView>findRequiredView(source, R.id.two, \"field 'thing'\"),",
+            "        finder.<TextView>findRequiredView(source, R.id.three, \"field 'thing'\")",
             "    );",
             "  }",
             "  @Override public void unbind(T target) {",
@@ -694,9 +738,11 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
         "import java.util.List;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "    @Bind({1, 2, 3}) List<View> thing;",
+        "    @Bind({\"one\", \"two\", \"three\"}) List<View> thing;",
         "}"
     ));
 
@@ -705,15 +751,16 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
             "    target.thing = ButterFork.Finder.listOf(",
-            "        finder.<View>findRequiredView(source, 1, \"field 'thing'\"),",
-            "        finder.<View>findRequiredView(source, 2, \"field 'thing'\"),",
-            "        finder.<View>findRequiredView(source, 3, \"field 'thing'\")",
+            "        finder.<View>findRequiredView(source, R.id.one, \"field 'thing'\"),",
+            "        finder.<View>findRequiredView(source, R.id.two, \"field 'thing'\"),",
+            "        finder.<View>findRequiredView(source, R.id.three, \"field 'thing'\")",
             "    );",
             "  }",
             "  @Override public void unbind(T target) {",
@@ -734,10 +781,12 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
         "import java.util.List;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test {",
         "    interface TestInterface {}",
-        "    @Bind({1, 2, 3}) List<TestInterface> thing;",
+        "    @Bind({\"one\", \"two\", \"three\"}) List<TestInterface> thing;",
         "}"
     ));
 
@@ -746,15 +795,16 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
             "    target.thing = ButterFork.Finder.listOf(",
-            "        finder.<Test.TestInterface>findRequiredView(source, 1, \"field 'thing'\"),",
-            "        finder.<Test.TestInterface>findRequiredView(source, 2, \"field 'thing'\"),",
-            "        finder.<Test.TestInterface>findRequiredView(source, 3, \"field 'thing'\")",
+            "        finder.<Test.TestInterface>findRequiredView(source, R.id.one, \"field 'thing'\"),",
+            "        finder.<Test.TestInterface>findRequiredView(source, R.id.two, \"field 'thing'\"),",
+            "        finder.<Test.TestInterface>findRequiredView(source, R.id.three, \"field 'thing'\")",
             "    );",
             "  }",
             "  @Override public void unbind(T target) {",
@@ -776,9 +826,11 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
         "import java.util.List;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test<T extends View> extends Activity {",
-        "    @Bind({1, 2, 3}) List<T> thing;",
+        "    @Bind({\"one\", \"two\", \"three\"}) List<T> thing;",
         "}"
     ));
 
@@ -787,15 +839,16 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
             "    target.thing = ButterFork.Finder.listOf(",
-            "        finder.<View>findRequiredView(source, 1, \"field 'thing'\"),",
-            "        finder.<View>findRequiredView(source, 2, \"field 'thing'\"),",
-            "        finder.<View>findRequiredView(source, 3, \"field 'thing'\")",
+            "        finder.<View>findRequiredView(source, R.id.one, \"field 'thing'\"),",
+            "        finder.<View>findRequiredView(source, R.id.two, \"field 'thing'\"),",
+            "        finder.<View>findRequiredView(source, R.id.three, \"field 'thing'\")",
             "    );",
             "  }",
             "  @Override public void unbind(T target) {",
@@ -817,10 +870,12 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
         "import java.util.List;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
         "    @interface Nullable {}",
-        "    @Nullable @Bind({1, 2, 3}) List<View> thing;",
+        "    @Nullable @Bind({\"one\", \"two\", \"three\"}) List<View> thing;",
         "}"
     ));
 
@@ -829,15 +884,16 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
             "    target.thing = ButterFork.Finder.listOf(",
-            "        finder.<View>findOptionalView(source, 1, \"field 'thing'\"),",
-            "        finder.<View>findOptionalView(source, 2, \"field 'thing'\"),",
-            "        finder.<View>findOptionalView(source, 3, \"field 'thing'\")",
+            "        finder.<View>findOptionalView(source, R.id.one, \"field 'thing'\"),",
+            "        finder.<View>findOptionalView(source, R.id.two, \"field 'thing'\"),",
+            "        finder.<View>findOptionalView(source, R.id.three, \"field 'thing'\")",
             "    );",
             "  }",
             "  @Override public void unbind(T target) {",
@@ -877,7 +933,7 @@
         "import butterfork.Bind;",
         "import java.util.List;",
         "public class Test {",
-        "  @Bind(1) List thing;",
+        "  @Bind(\"one\") List thing;",
         "}"
     ));
 
@@ -895,7 +951,7 @@
         "import butterfork.Bind;",
         "import java.util.Deque;",
         "public class Test {",
-        "  @Bind(1) Deque<View> thing;",
+        "  @Bind(\"one\") Deque<View> thing;",
         "}"
     ));
 
@@ -911,9 +967,11 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
         "import java.util.List;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @Bind(1) List<String> thing;",
+        "  @Bind(\"one\") List<String> thing;",
         "}"
     ));
 
@@ -921,7 +979,7 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining("@Bind List or array type must extend from View or be an interface. (test.Test.thing)")
-        .in(source).onLine(6);
+        .in(source).onLine(8);
   }
 
   @Test public void failsIfArrayNotView() {
@@ -929,15 +987,17 @@
         "package test;",
         "import android.app.Activity;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @Bind(1) String[] thing;",
+        "  @Bind(\"one\") String[] thing;",
         "}"));
 
     ASSERT.about(javaSource()).that(source)
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining("@Bind List or array type must extend from View or be an interface. (test.Test.thing)")
-        .in(source).onLine(5);
+        .in(source).onLine(7);
   }
 
   @Test public void failsIfContainsDuplicateIds() throws Exception {
@@ -946,16 +1006,18 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
         "import java.util.List;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "    @Bind({1, 1}) List<View> thing;",
+        "    @Bind({\"one\", \"one\"}) List<View> thing;",
         "}"
     ));
 
     ASSERT.about(javaSource()).that(source)
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
-        .withErrorContaining("@Bind annotation contains duplicate ID 1. (test.Test.thing)")
-        .in(source).onLine(7);
+        .withErrorContaining("@Bind annotation contains duplicate ID one. (test.Test.thing)")
+        .in(source).onLine(9);
   }
 }
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/OnCheckedChangedTest.java b/butterfork-compiler/src/test/java/butterfork/internal/OnCheckedChangedTest.java
index cf4ccaa3..6d3badbe 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/OnCheckedChangedTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/OnCheckedChangedTest.java
@@ -15,9 +15,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnCheckedChanged;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnCheckedChanged(1) void doStuff() {}",
+        "  @OnCheckedChanged(\"one\") void doStuff() {}",
         "}"
     ));
 
@@ -27,12 +29,13 @@
             "import android.view.View;",
             "import android.widget.CompoundButton;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff'\");",
             "    ((CompoundButton) view).setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {",
             "      @Override public void onCheckedChanged(CompoundButton p0, boolean p1) {",
             "        target.doStuff();",
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/OnClickTest.java b/butterfork-compiler/src/test/java/butterfork/internal/OnClickTest.java
index 519c338f..67850ef4 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/OnClickTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/OnClickTest.java
@@ -15,9 +15,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnClick(1) void doStuff() {}",
+        "  @OnClick(\"one\") void doStuff() {}",
         "}"));
 
     JavaFileObject expectedSource = JavaFileObjects.forSourceString("test/Test$$ViewBinder",
@@ -26,12 +28,13 @@
             "import android.view.View;",
             "import butterfork.ButterFork;",
             "import butterfork.internal.DebouncingOnClickListener;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff'\");",
             "    view.setOnClickListener(new DebouncingOnClickListener() {",
             "      @Override public void doClick(View p0) {",
             "        target.doStuff();",
@@ -55,11 +58,13 @@
         "package test;",
         "import android.view.View;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnClick(1) void doStuff1() {}",
-        "  @OnClick(1) void doStuff2() {}",
-        "  @OnClick({1, 2}) void doStuff3(View v) {}",
+        "  @OnClick(\"one\") void doStuff1() {}",
+        "  @OnClick(\"one\") void doStuff2() {}",
+        "  @OnClick({\"one\", \"two\"}) void doStuff3(View v) {}",
         "}"));
 
     JavaFileObject expectedSource = JavaFileObjects.forSourceString("test/Test$$ViewBinder",
@@ -68,12 +73,13 @@
             "import android.view.View;",
             "import butterfork.ButterFork;",
             "import butterfork.internal.DebouncingOnClickListener;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff1', method 'doStuff2', and method 'doStuff3'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff1', method 'doStuff2', and method 'doStuff3'\");",
             "    view.setOnClickListener(new DebouncingOnClickListener() {",
             "      @Override public void doClick(View p0) {",
             "        target.doStuff1();",
@@ -81,7 +87,7 @@
             "        target.doStuff3(p0);",
             "      }",
             "    });",
-            "    view = finder.findRequiredView(source, 2, \"method 'doStuff3'\");",
+            "    view = finder.findRequiredView(source, R.id.two, \"method 'doStuff3'\");",
             "    view.setOnClickListener(new DebouncingOnClickListener() {",
             "      @Override public void doClick(View p0) {",
             "        target.doStuff3(p0);",
@@ -104,10 +110,12 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
         "import butterfork.OnClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @Bind(1) View view;",
-        "  @OnClick(1) void doStuff() {}",
+        "  @Bind(\"one\") View view;",
+        "  @OnClick(\"one\") void doStuff() {}",
         "}"));
 
     JavaFileObject expectedSource = JavaFileObjects.forSourceString("test/Test$$ViewBinder",
@@ -116,12 +124,13 @@
             "import android.view.View;",
             "import butterfork.ButterFork;",
             "import butterfork.internal.DebouncingOnClickListener;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"field 'view' and method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"field 'view' and method 'doStuff'\");",
             "    target.view = view;",
             "    view.setOnClickListener(new DebouncingOnClickListener() {",
             "      @Override public void doClick(View p0) {",
@@ -147,11 +156,13 @@
         "package test;",
         "import android.app.Activity;",
         "import android.view.View;",
+        "import butterfork.BindResources;",
         "import butterfork.OnClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnClick(1) public void thing1() {}",
-        "  @OnClick(2) void thing2() {}",
-        "  @OnClick(3) protected void thing3() {}",
+        "  @OnClick(\"one\") public void thing1() {}",
+        "  @OnClick(\"two\") void thing2() {}",
+        "  @OnClick(\"three\") protected void thing3() {}",
         "}"
     ));
 
@@ -167,14 +178,16 @@
         "import android.view.View;",
         "import android.widget.Button;",
         "import android.widget.TextView;",
+        "import butterfork.BindResources;",
         "import butterfork.OnClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
         "  interface TestInterface {}",
-        "  @OnClick(0) void click0() {}",
-        "  @OnClick(1) void click1(View view) {}",
-        "  @OnClick(2) void click2(TextView view) {}",
-        "  @OnClick(3) void click3(Button button) {}",
-        "  @OnClick(4) void click4(TestInterface thing) {}",
+        "  @OnClick(\"zero\") void click0() {}",
+        "  @OnClick(\"one\") void click1(View view) {}",
+        "  @OnClick(\"two\") void click2(TextView view) {}",
+        "  @OnClick(\"three\") void click3(Button button) {}",
+        "  @OnClick(\"four\") void click4(TestInterface thing) {}",
         "}"
     ));
 
@@ -186,36 +199,37 @@
             "import android.widget.TextView;",
             "import butterfork.ButterFork;",
             "import butterfork.internal.DebouncingOnClickListener;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 0, \"method 'click0'\");",
+            "    view = finder.findRequiredView(source, R.id.zero, \"method 'click0'\");",
             "    view.setOnClickListener(new DebouncingOnClickListener() {",
             "      @Override public void doClick(View p0) {",
             "        target.click0();",
             "      }",
             "    });",
-            "    view = finder.findRequiredView(source, 1, \"method 'click1'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'click1'\");",
             "    view.setOnClickListener(new DebouncingOnClickListener() {",
             "      @Override public void doClick(View p0) {",
             "        target.click1(p0);",
             "      }",
             "    });",
-            "    view = finder.findRequiredView(source, 2, \"method 'click2'\");",
+            "    view = finder.findRequiredView(source, R.id.two, \"method 'click2'\");",
             "    view.setOnClickListener(new DebouncingOnClickListener() {",
             "      @Override public void doClick(View p0) {",
             "        target.click2(finder.<TextView>castParam(p0, \"doClick\", 0, \"click2\", 0));",
             "      }",
             "    });",
-            "    view = finder.findRequiredView(source, 3, \"method 'click3'\");",
+            "    view = finder.findRequiredView(source, R.id.three, \"method 'click3'\");",
             "    view.setOnClickListener(new DebouncingOnClickListener() {",
             "      @Override public void doClick(View p0) {",
             "        target.click3(finder.<Button>castParam(p0, \"doClick\", 0, \"click3\", 0);",
             "      }",
             "    });",
-            "    view = finder.findRequiredView(source, 4, \"method 'click4'\");",
+            "    view = finder.findRequiredView(source, R.id.four, \"method 'click4'\");",
             "    view.setOnClickListener(new DebouncingOnClickListener() {",
             "      @Override public void doClick(View p0) {",
             "        target.click4(finder.<Test.TestInterface>castParam(p0, \"doClick\", 0, \"click4\", 0);",
@@ -239,9 +253,11 @@
         "package test;",
         "import android.app.Activity;",
         "import android.view.View;",
+        "import butterfork.BindResources;",
         "import butterfork.OnClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnClick({1, 2, 3}) void click() {}",
+        "  @OnClick({\"one\", \"two\", \"three\"}) void click() {}",
         "}"
     ));
 
@@ -251,24 +267,25 @@
             "import android.view.View;",
             "import butterfork.ButterFork;",
             "import butterfork.internal.DebouncingOnClickListener;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'click'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'click'\");",
             "    view.setOnClickListener(new DebouncingOnClickListener() {",
             "      @Override public void doClick(View p0) {",
             "        target.click();",
             "      }",
             "    });",
-            "    view = finder.findRequiredView(source, 2, \"method 'click'\");",
+            "    view = finder.findRequiredView(source, R.id.two, \"method 'click'\");",
             "    view.setOnClickListener(new DebouncingOnClickListener() {",
             "      @Override public void doClick(View p0) {",
             "        target.click();",
             "      }",
             "    });",
-            "    view = finder.findRequiredView(source, 3, \"method 'click'\");",
+            "    view = finder.findRequiredView(source, R.id.three, \"method 'click'\");",
             "    view.setOnClickListener(new DebouncingOnClickListener() {",
             "      @Override public void doClick(View p0) {",
             "        target.click();",
@@ -291,10 +308,12 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
         "  @interface Nullable {}",
-        "  @Nullable @OnClick(1) void doStuff() {}",
+        "  @Nullable @OnClick(\"one\") void doStuff() {}",
         "}"));
 
     JavaFileObject expectedSource = JavaFileObjects.forSourceString("test/Test$$ViewBinder",
@@ -303,12 +322,13 @@
             "import android.view.View;",
             "import butterfork.ButterFork;",
             "import butterfork.internal.DebouncingOnClickListener;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findOptionalView(source, 1, null);",
+            "    view = finder.findOptionalView(source, R.id.one, null);",
             "    if (view != null) {",
             "      view.setOnClickListener(new DebouncingOnClickListener() {",
             "        @Override public void doClick(View p0) {",
@@ -335,11 +355,13 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import butterfork.Bind;",
+        "import butterfork.BindResources;",
         "import butterfork.OnClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
         "  @interface Nullable {}",
-        "  @Bind(1) View view;",
-        "  @Nullable @OnClick(1) void doStuff() {}",
+        "  @Bind(\"one\") View view;",
+        "  @Nullable @OnClick(\"one\") void doStuff() {}",
         "}"));
 
     JavaFileObject expectedSource = JavaFileObjects.forSourceString("test/Test$$ViewBinder",
@@ -348,12 +370,13 @@
             "import android.view.View;",
             "import butterfork.ButterFork;",
             "import butterfork.internal.DebouncingOnClickListener;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"field 'view'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"field 'view'\");",
             "    target.view = view;",
             "    view.setOnClickListener(new DebouncingOnClickListener() {",
             "      @Override public void doClick(View p0) {",
@@ -379,7 +402,7 @@
         "package java.test;",
         "import butterfork.OnClick;",
         "public class Test {",
-        "  @OnClick(1) void doStuff() {}",
+        "  @OnClick(\"one\") void doStuff() {}",
         "}"
     ));
 
@@ -396,7 +419,7 @@
         "package android.test;",
         "import butterfork.OnClick;",
         "public class Test {",
-        "  @OnClick(1) void doStuff() {}",
+        "  @OnClick(\"one\") void doStuff() {}",
         "}"
     ));
 
@@ -412,9 +435,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnClick(1)",
+        "  @OnClick(\"one\")",
         "  public String doStuff() {",
         "  }",
         "}"));
@@ -423,16 +448,18 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining("@OnClick methods must have a 'void' return type. (test.Test.doStuff)")
-        .in(source).onLine(6);
+        .in(source).onLine(8);
   }
 
   @Test public void failsIfPrivateMethod() {
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnClick(1)",
+        "  @OnClick(\"one\")",
         "  private void doStuff() {",
         "  }",
         "}"));
@@ -441,16 +468,18 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining("@OnClick methods must not be private or static. (test.Test.doStuff)")
-        .in(source).onLine(6);
+        .in(source).onLine(8);
   }
 
   @Test public void failsIfStatic() {
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnClick(1)",
+        "  @OnClick(\"one\")",
         "  public static void doStuff() {",
         "  }",
         "}"));
@@ -459,16 +488,18 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining("@OnClick methods must not be private or static. (test.Test.doStuff)")
-        .in(source).onLine(6);
+        .in(source).onLine(8);
   }
 
   @Test public void failsIfParameterNotView() {
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnClick(1)",
+        "  @OnClick(\"one\")",
         "  public void doStuff(String thing) {",
         "  }",
         "}"));
@@ -487,7 +518,7 @@
             "    android.view.View",
             "  ",
             "  These may be listed in any order but will be searched for from top to bottom."))
-        .in(source).onLine(6);
+        .in(source).onLine(8);
   }
 
   @Test public void failsIfMoreThanOneParameter() {
@@ -495,9 +526,11 @@
         "package test;",
         "import android.app.Activity;",
         "import android.view.View;",
+        "import butterfork.BindResources;",
         "import butterfork.OnClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnClick(1)",
+        "  @OnClick(\"one\")",
         "  public void doStuff(View thing, View otherThing) {",
         "  }",
         "}"));
@@ -507,7 +540,7 @@
         .failsToCompile()
         .withErrorContaining(
             "@OnClick methods can have at most 1 parameter(s). (test.Test.doStuff)")
-        .in(source).onLine(7);
+        .in(source).onLine(9);
   }
 
   @Test public void failsIfInInterface() {
@@ -515,7 +548,7 @@
         "package test;",
         "import butterfork.OnClick;",
         "public interface Test {",
-        "  @OnClick(1)",
+        "  @OnClick(\"one\")",
         "  void doStuff();",
         "}"));
 
@@ -531,9 +564,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnClick({1, 2, 3, 1})",
+        "  @OnClick({\"one\", \"two\", \"three\", \"one\"})",
         "  void doStuff() {",
         "  }",
         "}"));
@@ -542,7 +577,7 @@
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining(
-            "@OnClick annotation for method contains duplicate ID 1. (test.Test.doStuff)")
-        .in(source).onLine(6);
+            "@OnClick annotation for method contains duplicate ID one. (test.Test.doStuff)")
+        .in(source).onLine(8);
   }
 }
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/OnEditorActionTest.java b/butterfork-compiler/src/test/java/butterfork/internal/OnEditorActionTest.java
index c6b36a15..703c248c 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/OnEditorActionTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/OnEditorActionTest.java
@@ -15,9 +15,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnEditorAction;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnEditorAction(1) boolean doStuff() { return false; }",
+        "  @OnEditorAction(\"one\") boolean doStuff() { return false; }",
         "}"
     ));
 
@@ -28,12 +30,13 @@
             "import android.view.View;",
             "import android.widget.TextView;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff'\");",
             "    ((TextView) view).setOnEditorActionListener(new TextView.OnEditorActionListener() {",
             "      @Override public boolean onEditorAction(TextView p0, int p1, KeyEvent p2) {",
             "        return target.doStuff();",
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/OnFocusChangeTest.java b/butterfork-compiler/src/test/java/butterfork/internal/OnFocusChangeTest.java
index a4055a72..b5fd8015 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/OnFocusChangeTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/OnFocusChangeTest.java
@@ -15,9 +15,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnFocusChange;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnFocusChange(1) void doStuff() {}",
+        "  @OnFocusChange(\"one\") void doStuff() {}",
         "}"
     ));
 
@@ -26,12 +28,13 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff'\");",
             "    view.setOnFocusChangeListener(new View.OnFocusChangeListener() {",
             "      @Override public void onFocusChange(View p0, boolean p1) {",
             "        target.doStuff();",
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/OnItemClickTest.java b/butterfork-compiler/src/test/java/butterfork/internal/OnItemClickTest.java
index 863478a8..9746fbe7 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/OnItemClickTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/OnItemClickTest.java
@@ -16,9 +16,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnItemClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnItemClick(1) void doStuff() {}",
+        "  @OnItemClick(\"one\") void doStuff() {}",
         "}"));
 
     JavaFileObject expectedSource = JavaFileObjects.forSourceString("test/Test$$ViewBinder",
@@ -27,12 +29,13 @@
             "import android.view.View;",
             "import android.widget.AdapterView;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff'\");",
             "    ((AdapterView<?>) view).setOnItemClickListener(new AdapterView.OnItemClickListener() {",
             "      @Override public void onItemClick(AdapterView<?> p0, View p1, int p2, long p3) {",
             "        target.doStuff();",
@@ -57,9 +60,11 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import android.widget.AdapterView;",
+        "import butterfork.BindResources;",
         "import butterfork.OnItemClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnItemClick(1) void doStuff(",
+        "  @OnItemClick(\"one\") void doStuff(",
         "    AdapterView<?> parent,",
         "    View view,",
         "    int position,",
@@ -73,12 +78,13 @@
             "import android.view.View;",
             "import android.widget.AdapterView;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff'\");",
             "    ((AdapterView<?>) view).setOnItemClickListener(new AdapterView.OnItemClickListener() {",
             "      @Override public void onItemClick(AdapterView<?> p0, View p1, int p2, long p3) {",
             "        target.doStuff(p0, p1, p2, p3);",
@@ -103,9 +109,11 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import android.widget.ListView;",
+        "import butterfork.BindResources;",
         "import butterfork.OnItemClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnItemClick(1) void doStuff(",
+        "  @OnItemClick(\"one\") void doStuff(",
         "    ListView parent,",
         "    int position",
         "  ) {}",
@@ -118,12 +126,13 @@
             "import android.widget.AdapterView;",
             "import android.widget.ListView;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff'\");",
             "    ((AdapterView<?>) view).setOnItemClickListener(new AdapterView.OnItemClickListener() {",
             "      @Override public void onItemClick(AdapterView<?> p0, View p1, int p2, long p3) {",
             "        target.doStuff(finder.<ListView>castParam(p0, \"onItemClick\", 0, \"doStuff\", 0), p2);",
@@ -148,9 +157,11 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import android.widget.ListView;",
+        "import butterfork.BindResources;",
         "import butterfork.OnItemClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test<T extends ListView> extends Activity {",
-        "  @OnItemClick(1) void doStuff(",
+        "  @OnItemClick(\"one\") void doStuff(",
         "    T parent,",
         "    int position",
         "  ) {}",
@@ -163,12 +174,13 @@
             "import android.widget.AdapterView;",
             "import android.widget.ListView;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff'\");",
             "    ((AdapterView<?>) view).setOnItemClickListener(new AdapterView.OnItemClickListener() {",
             "      @Override public void onItemClick(AdapterView<?> p0, View p1, int p2, long p3) {",
             "        target.doStuff(finder.<ListView>castParam(p0, \"onItemClick\", 0, \"doStuff\", 0), p2);",
@@ -192,7 +204,9 @@
         "package test;",
         "import android.content.Context;",
         "import android.widget.ListView;",
+        "import butterfork.BindResources;",
         "import butterfork.OnItemClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends ListView {",
         "  @OnItemClick void doStuff() {}",
         "  public Test(Context context) {",
@@ -235,16 +249,18 @@
         "package test;",
         "import android.content.Context;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnItemClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnItemClick({1, -1}) void doStuff() {}",
+        "  @OnItemClick({\"one\", \"\"}) void doStuff() {}",
         "}"));
 
     ASSERT.about(javaSource()).that(source)
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
-        .withErrorContaining("@OnItemClick annotation contains invalid ID -1. (test.Test.doStuff)")
-        .in(source).onLine(6);
+        .withErrorContaining("@OnItemClick annotation contains empty ID. (test.Test.doStuff)")
+        .in(source).onLine(8);
   }
 
   @Test public void failsWithInvalidParameterConfiguration() {
@@ -253,9 +269,11 @@
         "import android.app.Activity;",
         "import android.view.View;",
         "import android.widget.AdapterView;",
+        "import butterfork.BindResources;",
         "import butterfork.OnItemClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnItemClick(1) void doStuff(",
+        "  @OnItemClick(\"one\") void doStuff(",
         "    AdapterView<?> parent,",
         "    View view,",
         "    View whatIsThis",
@@ -285,6 +303,6 @@
             "    long",
             "  ",
             "  These may be listed in any order but will be searched for from top to bottom."))
-        .in(source).onLine(7);
+        .in(source).onLine(9);
   }
 }
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/OnItemLongClickTest.java b/butterfork-compiler/src/test/java/butterfork/internal/OnItemLongClickTest.java
index 6ac3b5c7..45540473 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/OnItemLongClickTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/OnItemLongClickTest.java
@@ -15,9 +15,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnItemLongClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnItemLongClick(1) boolean doStuff() { return false; }",
+        "  @OnItemLongClick(\"one\") boolean doStuff() { return false; }",
         "}"
     ));
 
@@ -27,12 +29,13 @@
             "import android.view.View;",
             "import android.widget.AdapterView;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff'\");",
             "    ((AdapterView<?>) view).setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {",
             "      @Override public boolean onItemLongClick(AdapterView<?> p0, View p1, int p2, long p3) {",
             "        return target.doStuff();",
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/OnItemSelectedTest.java b/butterfork-compiler/src/test/java/butterfork/internal/OnItemSelectedTest.java
index d774806f..97d0b928 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/OnItemSelectedTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/OnItemSelectedTest.java
@@ -16,9 +16,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnItemSelected;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnItemSelected(1) void doStuff() {}",
+        "  @OnItemSelected(\"one\") void doStuff() {}",
         "}"
     ));
 
@@ -28,12 +30,13 @@
             "import android.view.View;",
             "import android.widget.AdapterView;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff'\");",
             "    ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {",
             "      @Override public void onItemSelected(AdapterView<?> p0, View p1, int p2, long p3) {",
             "        target.doStuff();",
@@ -58,10 +61,12 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnItemSelected;",
         "import static butterfork.OnItemSelected.Callback.NOTHING_SELECTED;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnItemSelected(value = 1, callback = NOTHING_SELECTED)",
+        "  @OnItemSelected(value = \"one\", callback = NOTHING_SELECTED)",
         "  void doStuff() {}",
         "}"
     ));
@@ -72,12 +77,13 @@
             "import android.view.View;",
             "import android.widget.AdapterView;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff'\");",
             "    ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {",
             "      @Override public void onItemSelected(AdapterView<?> p0, View p1, int p2, long p3) {",
             "      }",
@@ -102,12 +108,14 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnItemSelected;",
         "import static butterfork.OnItemSelected.Callback.NOTHING_SELECTED;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnItemSelected(1)",
+        "  @OnItemSelected(\"one\")",
         "  void onItemSelected() {}",
-        "  @OnItemSelected(value = 1, callback = NOTHING_SELECTED)",
+        "  @OnItemSelected(value = \"one\", callback = NOTHING_SELECTED)",
         "  void onNothingSelected() {}",
         "}"
     ));
@@ -118,12 +126,13 @@
             "import android.view.View;",
             "import android.widget.AdapterView;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'onItemSelected' and method 'onNothingSelected'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'onItemSelected' and method 'onNothingSelected'\");",
             "    ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {",
             "      @Override public void onItemSelected(AdapterView<?> p0, View p1, int p2, long p3) {",
             "        target.onItemSelected();",
@@ -149,12 +158,14 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnItemSelected;",
         "import static butterfork.OnItemSelected.Callback.NOTHING_SELECTED;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnItemSelected({ 1, 2 })",
+        "  @OnItemSelected({ \"one\", \"two\" })",
         "  void onItemSelected() {}",
-        "  @OnItemSelected(value = { 1, 3 }, callback = NOTHING_SELECTED)",
+        "  @OnItemSelected(value = { \"one\", \"three\" }, callback = NOTHING_SELECTED)",
         "  void onNothingSelected() {}",
         "}"
     ));
@@ -165,12 +176,13 @@
             "import android.view.View;",
             "import android.widget.AdapterView;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'onItemSelected' and method 'onNothingSelected'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'onItemSelected' and method 'onNothingSelected'\");",
             "    ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {",
             "      @Override public void onItemSelected(AdapterView<?> p0, View p1, int p2, long p3) {",
             "        target.onItemSelected();",
@@ -179,7 +191,7 @@
             "        target.onNothingSelected();",
             "      }",
             "    });",
-            "    view = finder.findRequiredView(source, 2, \"method 'onItemSelected'\");",
+            "    view = finder.findRequiredView(source, R.id.two, \"method 'onItemSelected'\");",
             "    ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {",
             "      @Override public void onItemSelected(AdapterView<?> p0, View p1, int p2, long p3) {",
             "        target.onItemSelected();",
@@ -187,7 +199,7 @@
             "      @Override public void onNothingSelected(AdapterView<?> p0) {",
             "      }",
             "    });",
-            "    view = finder.findRequiredView(source, 3, \"method 'onNothingSelected'\");",
+            "    view = finder.findRequiredView(source, R.id.three, \"method 'onNothingSelected'\");",
             "    ((AdapterView<?>) view).setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {",
             "      @Override public void onItemSelected(AdapterView<?> p0, View p1, int p2, long p3) {",
             "      }",
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/OnLongClickTest.java b/butterfork-compiler/src/test/java/butterfork/internal/OnLongClickTest.java
index 97d2f898..9721ab7b 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/OnLongClickTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/OnLongClickTest.java
@@ -16,9 +16,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnLongClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnLongClick(1) boolean doStuff() {",
+        "  @OnLongClick(\"one\") boolean doStuff() {",
         "    return true;",
         "  }",
         "}"));
@@ -28,12 +30,13 @@
             "package test;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff'\");",
             "    view.setOnLongClickListener(new View.OnLongClickListener() {",
             "      @Override public boolean onLongClick(View p0) {",
             "        return target.doStuff();",
@@ -56,9 +59,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnLongClick;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnLongClick(1)",
+        "  @OnLongClick(\"one\")",
         "  public void doStuff() {",
         "  }",
         "}"));
@@ -68,6 +73,6 @@
         .failsToCompile()
         .withErrorContaining(
             "@OnLongClick methods must have a 'boolean' return type. (test.Test.doStuff)")
-        .in(source).onLine(6);
+        .in(source).onLine(8);
   }
 }
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/OnPageChangeTest.java b/butterfork-compiler/src/test/java/butterfork/internal/OnPageChangeTest.java
index afdc0968..afef3d39 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/OnPageChangeTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/OnPageChangeTest.java
@@ -15,9 +15,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnPageChange;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnPageChange(1) void doStuff() {}",
+        "  @OnPageChange(\"one\") void doStuff() {}",
         "}"
     ));
 
@@ -27,12 +29,13 @@
             "import android.support.v4.view.ViewPager;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff'\");",
             "    ((ViewPager) view).setOnPageChangeListener(new ViewPager.OnPageChangeListener() {",
             "      @Override public void onPageSelected(int p0) {",
             "        target.doStuff();",
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/OnTextChangedTest.java b/butterfork-compiler/src/test/java/butterfork/internal/OnTextChangedTest.java
index 5a963ed8..9bb8754f 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/OnTextChangedTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/OnTextChangedTest.java
@@ -15,9 +15,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnTextChanged;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnTextChanged(1) void doStuff() {}",
+        "  @OnTextChanged(\"one\") void doStuff() {}",
         "}"
     ));
 
@@ -29,13 +31,14 @@
             "import android.view.View;",
             "import android.widget.TextView;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.CharSequence;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff'\");",
             "    ((TextView) view).addTextChangedListener(new TextWatcher() {",
             "      @Override public void onTextChanged(CharSequence p0, int p1, int p2, int p3) {",
             "        target.doStuff();",
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/OnTouchTest.java b/butterfork-compiler/src/test/java/butterfork/internal/OnTouchTest.java
index 13c451fe..ffa1271e 100644
--- a/butterfork-compiler/src/test/java/butterfork/internal/OnTouchTest.java
+++ b/butterfork-compiler/src/test/java/butterfork/internal/OnTouchTest.java
@@ -15,9 +15,11 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnTouch;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnTouch(1) boolean doStuff() { return false; }",
+        "  @OnTouch(\"one\") boolean doStuff() { return false; }",
         "}"
     ));
 
@@ -27,12 +29,13 @@
             "import android.view.MotionEvent;",
             "import android.view.View;",
             "import butterfork.ButterFork;",
+            "import butterfork.internal.R;",
             "import java.lang.Object;",
             "import java.lang.Override;",
             "public class Test$$ViewBinder<T extends Test> implements ButterFork.ViewBinder<T> {",
             "  @Override public void bind(final ButterFork.Finder finder, final T target, Object source) {",
             "    View view;",
-            "    view = finder.findRequiredView(source, 1, \"method 'doStuff'\");",
+            "    view = finder.findRequiredView(source, R.id.one, \"method 'doStuff'\");",
             "    view.setOnTouchListener(new View.OnTouchListener() {",
             "      @Override public boolean onTouch(View p0, MotionEvent p1) {",
             "        return target.doStuff();",
@@ -55,17 +58,19 @@
     JavaFileObject source = JavaFileObjects.forSourceString("test.Test", Joiner.on('\n').join(
         "package test;",
         "import android.app.Activity;",
+        "import butterfork.BindResources;",
         "import butterfork.OnTouch;",
+        "@BindResources(butterfork.internal.R.class)",
         "public class Test extends Activity {",
-        "  @OnTouch(1) boolean doStuff1() {}",
-        "  @OnTouch(1) boolean doStuff2() {}",
+        "  @OnTouch(\"one\") boolean doStuff1() {}",
+        "  @OnTouch(\"one\") boolean doStuff2() {}",
         "}"));
 
     ASSERT.about(javaSource()).that(source)
         .processedWith(new ButterForkProcessor())
         .failsToCompile()
         .withErrorContaining(
-            "Multiple listener methods with return value specified for ID 1. (test.Test.doStuff2)")
-        .in(source).onLine(6);
+            "Multiple listener methods with return value specified for ID one. (test.Test.doStuff2)")
+        .in(source).onLine(8);
   }
 }
diff --git a/butterfork-compiler/src/test/java/butterfork/internal/R.java b/butterfork-compiler/src/test/java/butterfork/internal/R.java
new file mode 100644
index 00000000..f4bc3411
--- /dev/null
+++ b/butterfork-compiler/src/test/java/butterfork/internal/R.java
@@ -0,0 +1,36 @@
+package butterfork.internal;
+
+/**
+ * R class for testing. Uses non-final values.
+ */
+public final class R {
+
+  public static final class array {
+    public static int one = 1;
+  }
+  public static final class drawable {
+    public static int one = 1;
+  }
+  public static final class bool {
+    public static int one = 1;
+  }
+  public static final class color {
+    public static int one = 1;
+  }
+  public static final class dimen {
+    public static int one = 1;
+  }
+  public static final class integer {
+    public static int one = 1;
+  }
+  public static final class string {
+    public static int one = 1;
+  }
+  public static final class id {
+    public static int zero = 0;
+    public static int one = 1;
+    public static int two = 2;
+    public static int three = 3;
+    public static int four = 4;
+  }
+}
