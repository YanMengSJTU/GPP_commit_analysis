diff --git a/butterfork-plugin/build.gradle b/butterfork-plugin/build.gradle
new file mode 100644
index 00000000..02e6dcf6
--- /dev/null
+++ b/butterfork-plugin/build.gradle
@@ -0,0 +1,11 @@
+apply plugin: 'groovy'
+apply plugin: 'maven'
+
+group = 'com.oguzbabaoglu'
+version = '1.0.0-SNAPSHOT'
+
+dependencies {
+    compile gradleApi()
+    compile group: 'com.squareup', name: 'javapoet', version: '1.2.0'
+    compile group: 'com.github.javaparser', name: 'javaparser-core', version: '2.2.1'
+}
diff --git a/butterfork-plugin/src/main/groovy/com/oguzbabaoglu/ButterForkPlugin.groovy b/butterfork-plugin/src/main/groovy/com/oguzbabaoglu/ButterForkPlugin.groovy
new file mode 100644
index 00000000..932593e6
--- /dev/null
+++ b/butterfork-plugin/src/main/groovy/com/oguzbabaoglu/ButterForkPlugin.groovy
@@ -0,0 +1,63 @@
+package com.oguzbabaoglu
+
+import org.gradle.api.GradleException
+import org.gradle.api.Plugin
+import org.gradle.api.Project
+import org.gradle.api.tasks.SourceSet
+
+/**
+ * The ButterFork plugin will add build tasks to generate B files from R files.
+ */
+class ButterForkPlugin implements Plugin<Project> {
+
+    private Project project
+
+    void apply(Project project) {
+
+        this.project = project
+
+        if (!project.hasProperty('android')) {
+            throw new GradleException('Please apply the Android plugin first')
+        }
+
+        project.afterEvaluate {
+            // The Android variants are only available at this point.
+            addGenerateTasks()
+        }
+    }
+
+    private Object getNonTestVariants() {
+        return project.android.hasProperty('libraryVariants') ?
+                project.android.libraryVariants : project.android.applicationVariants
+    }
+
+    /**
+     * Adds generateB tasks to the project.
+     */
+    private addGenerateTasks() {
+        getNonTestVariants().each { variant ->
+            addTaskForVariant(variant)
+        }
+    }
+
+    /**
+     * Creates generateB task for a variant in an Android project.
+     */
+    private addTaskForVariant(final Object variant) {
+
+        String taskName = 'generate' + getSubstringForTaskName(variant.name) + 'B'
+
+        GenerateBTask task = project.getTasks().create(taskName, GenerateBTask.class);
+        variant.javaCompile.dependsOn(taskName)
+    }
+
+    /**
+     * Returns the conventional substring that represents the variant in task names,
+     * e.g., "generateDebugB"
+     */
+    static String getSubstringForTaskName(String variantName) {
+        return variantName == SourceSet.MAIN_SOURCE_SET_NAME ?
+                '' : variantName.capitalize()
+    }
+
+}
diff --git a/butterfork-plugin/src/main/java/com/oguzbabaoglu/GenerateBTask.java b/butterfork-plugin/src/main/java/com/oguzbabaoglu/GenerateBTask.java
new file mode 100644
index 00000000..a47e7288
--- /dev/null
+++ b/butterfork-plugin/src/main/java/com/oguzbabaoglu/GenerateBTask.java
@@ -0,0 +1,14 @@
+package com.oguzbabaoglu;
+
+import org.gradle.api.DefaultTask;
+import org.gradle.api.tasks.TaskAction;
+
+public class GenerateBTask extends DefaultTask {
+
+  @TaskAction
+  public void greet() {
+
+    System.out.println("Hello from Generate Task");
+  }
+
+}
diff --git a/butterfork-plugin/src/main/resources/META-INF/gradle-plugins/com.oguzbabaoglu.butterfork-plugin.properties b/butterfork-plugin/src/main/resources/META-INF/gradle-plugins/com.oguzbabaoglu.butterfork-plugin.properties
new file mode 100644
index 00000000..7cffb85d
--- /dev/null
+++ b/butterfork-plugin/src/main/resources/META-INF/gradle-plugins/com.oguzbabaoglu.butterfork-plugin.properties
@@ -0,0 +1 @@
+implementation-class=com.oguzbabaoglu.ButterForkPlugin
\ No newline at end of file
diff --git a/butterfork-sample/build.gradle b/butterfork-sample/build.gradle
index d265fc60..2cc9b9a5 100644
--- a/butterfork-sample/build.gradle
+++ b/butterfork-sample/build.gradle
@@ -1,5 +1,17 @@
+
+buildscript {
+    repositories {
+        mavenLocal()
+        jcenter()
+    }
+    dependencies {
+        classpath 'com.oguzbabaoglu:butterfork-plugin:1.0.0-SNAPSHOT'
+    }
+}
+
 apply plugin: 'com.android.application'
 apply plugin: 'com.neenbedankt.android-apt'
+apply plugin: 'com.oguzbabaoglu.butterfork-plugin'
 
 android {
     compileSdkVersion 22
@@ -18,9 +30,11 @@ android {
             proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
+}
 
+project.afterEvaluate {
     // Ensure processor is compiled
-    applicationVariants.all { variant ->
+    android.applicationVariants.all { variant ->
         variant.javaCompile.dependsOn ':butterfork-compiler:jar'
     }
 }
diff --git a/settings.gradle b/settings.gradle
index 2786a6d7..be3120d8 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1,5 +1,6 @@
 include ':butterfork'
 include ':butterfork-compiler'
+include ':butterfork-plugin'
 include ':butterfork-sample'
 
 rootProject.name = 'butterfork-parent'
