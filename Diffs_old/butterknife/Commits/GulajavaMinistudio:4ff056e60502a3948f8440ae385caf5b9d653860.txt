diff --git a/build.gradle b/build.gradle
index 4779ab91..75c7c859 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,7 +5,7 @@ buildscript {
       'buildTools': '25.0.2',
 
       'supportLibrary': '25.3.0',
-      'androidPlugin': '2.3.2',
+      'androidPlugin': '2.3.3',
       'androidTools': '25.3.0',
       'kotlin': '1.1.2-4',
 
@@ -30,16 +30,15 @@ buildscript {
           'checks': "com.android.tools.lint:lint-checks:${versions.androidTools}",
           'tests': "com.android.tools.lint:lint-tests:${versions.androidTools}",
       ],
-      javapoet: 'com.squareup:javapoet:1.8.0',
-      javaparser: 'com.github.javaparser:javaparser-core:2.4.0',
+      javapoet: 'com.squareup:javapoet:1.9.0',
+      javaparser: 'com.github.javaparser:javaparser-core:3.2.8',
       junit: 'junit:junit:4.12',
-      truth: 'com.google.truth:truth:0.33',
-      robolectric: 'org.robolectric:robolectric:3.1.2',
-      openglApi: 'org.khronos:opengl-api:gl1.1-android-2.1_r1',
+      truth: 'com.google.truth:truth:0.34',
+      robolectric: 'org.robolectric:robolectric:3.4-rc2',
       compiletesting: 'com.google.testing.compile:compile-testing:0.11',
       'auto': [
           'service': 'com.google.auto.service:auto-service:1.0-rc3',
-          'common': 'com.google.auto:auto-common:0.6',
+          'common': 'com.google.auto:auto-common:0.8',
       ],
       'release': [
           'runtime': "com.jakewharton:butterknife:${versions.release}",
diff --git a/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java
index 931490d3..daf2d5ad 100644
--- a/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java
+++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.java
@@ -3,10 +3,13 @@
 import com.github.javaparser.JavaParser;
 import com.github.javaparser.ast.CompilationUnit;
 import com.github.javaparser.ast.Node;
+import com.github.javaparser.ast.NodeList;
 import com.github.javaparser.ast.body.BodyDeclaration;
+import com.github.javaparser.ast.body.ClassOrInterfaceDeclaration;
 import com.github.javaparser.ast.body.FieldDeclaration;
 import com.github.javaparser.ast.body.TypeDeclaration;
 import com.github.javaparser.ast.body.VariableDeclarator;
+import com.github.javaparser.ast.expr.Expression;
 import com.squareup.javapoet.ClassName;
 import com.squareup.javapoet.FieldSpec;
 import com.squareup.javapoet.JavaFile;
@@ -14,6 +17,7 @@
 import java.io.File;
 import java.util.Arrays;
 import java.util.List;
+import java.util.Optional;
 
 import static javax.lang.model.element.Modifier.FINAL;
 import static javax.lang.model.element.Modifier.PUBLIC;
@@ -39,9 +43,9 @@ public static void brewJava(File rFile, File outputDir, String packageName, Stri
     TypeSpec.Builder result =
         TypeSpec.classBuilder(className).addModifiers(PUBLIC).addModifiers(FINAL);
 
-    for (Node node : resourceClass.getChildrenNodes()) {
-      if (node instanceof TypeDeclaration) {
-        addResourceType(Arrays.asList(SUPPORTED_TYPES), result, (TypeDeclaration) node);
+    for (Node node : resourceClass.getChildNodes()) {
+      if (node instanceof ClassOrInterfaceDeclaration) {
+        addResourceType(Arrays.asList(SUPPORTED_TYPES), result, (ClassOrInterfaceDeclaration) node);
       }
     }
 
@@ -53,12 +57,12 @@ public static void brewJava(File rFile, File outputDir, String packageName, Stri
   }
 
   private static void addResourceType(List<String> supportedTypes, TypeSpec.Builder result,
-      TypeDeclaration node) {
-    if (!supportedTypes.contains(node.getName())) {
+      ClassOrInterfaceDeclaration node) {
+    if (!supportedTypes.contains(node.getNameAsString())) {
       return;
     }
 
-    String type = node.getName();
+    String type = node.getNameAsString();
     TypeSpec.Builder resourceType = TypeSpec.classBuilder(type).addModifiers(PUBLIC, STATIC, FINAL);
 
     for (BodyDeclaration field : node.getMembers()) {
@@ -73,8 +77,8 @@ private static void addResourceType(List<String> supportedTypes, TypeSpec.Builde
 
   private static void addResourceField(TypeSpec.Builder resourceType, VariableDeclarator variable,
       ClassName annotation) {
-    String fieldName = variable.getId().getName();
-    String fieldValue = variable.getInit().toString();
+    String fieldName = variable.getNameAsString();
+    String fieldValue = variable.getInitializer().map(Node::toString).orElse(null);
     FieldSpec.Builder fieldSpecBuilder = FieldSpec.builder(int.class, fieldName)
         .addModifiers(PUBLIC, STATIC, FINAL)
         .initializer(fieldValue);
diff --git a/butterknife-integration-test/build.gradle b/butterknife-integration-test/build.gradle
index 74ebc2ef..7bf1d4a2 100644
--- a/butterknife-integration-test/build.gradle
+++ b/butterknife-integration-test/build.gradle
@@ -41,5 +41,4 @@ dependencies {
   testCompile deps.junit
   testCompile deps.truth
   testCompile deps.robolectric
-  testCompile deps.openglApi
 }
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index 110d836d..236af94f 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index ab9913cc..ecb0a7cd 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,6 +1,6 @@
-#Fri Jun 02 10:37:29 EDT 2017
+#Fri Jun 23 16:29:33 PDT 2017
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.0-rc-1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.0-all.zip
diff --git a/gradlew b/gradlew
index 4453ccea..cccdd3d5 100755
--- a/gradlew
+++ b/gradlew
@@ -33,11 +33,11 @@ DEFAULT_JVM_OPTS=""
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
 
-warn ( ) {
+warn () {
     echo "$*"
 }
 
-die ( ) {
+die () {
     echo
     echo "$*"
     echo
@@ -155,7 +155,7 @@ if $cygwin ; then
 fi
 
 # Escape application args
-save ( ) {
+save () {
     for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
     echo " "
 }
