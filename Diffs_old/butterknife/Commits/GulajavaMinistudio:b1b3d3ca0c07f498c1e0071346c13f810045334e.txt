diff --git a/build.gradle b/build.gradle
index 42dd66f8..ce43435e 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,3 +1,56 @@
+buildscript {
+  ext.versions = [
+      'minSdk': 9,
+      'compileSdk': 25,
+      'buildTools': '25.0.2',
+
+      'supportLibrary': '25.1.0',
+      'androidPlugin': '2.2.0',
+      'androidTools': '25.2.0',
+      'kotlin': '1.1.2-3',
+
+      'release': '8.4.0',
+  ]
+
+  ext.deps = [
+      android: [
+          'runtime': 'com.google.android:android:4.1.1.4',
+          'gradlePlugin': "com.android.tools.build:gradle:${versions.androidPlugin}",
+      ],
+      'support': [
+          'compat': "com.android.support:support-compat:${versions.supportLibrary}",
+          'annotations': "com.android.support:support-annotations:${versions.supportLibrary}",
+          'test': [
+              'runner': 'com.android.support.test:runner:0.5',
+          ],
+      ],
+      'lint': [
+          'core': "com.android.tools.lint:lint:${versions.androidTools}",
+          'api': "com.android.tools.lint:lint-api:${versions.androidTools}",
+          'checks': "com.android.tools.lint:lint-checks:${versions.androidTools}",
+          'tests': "com.android.tools.lint:lint-tests:${versions.androidTools}",
+      ],
+      javapoet: 'com.squareup:javapoet:1.8.0',
+      javaparser: 'com.github.javaparser:javaparser-core:2.4.0',
+      junit: 'junit:junit:4.12',
+      truth: 'com.google.truth:truth:0.28',
+      robolectric: 'org.robolectric:robolectric:3.1.2',
+      openglApi: 'org.khronos:opengl-api:gl1.1-android-2.1_r1',
+      compiletesting: 'com.google.testing.compile:compile-testing:0.9',
+      'auto': [
+          'service': 'com.google.auto.service:auto-service:1.0-rc2',
+          'common': 'com.google.auto:auto-common:0.6',
+      ],
+      'release': [
+          'runtime': "com.jakewharton:butterknife:${versions.release}",
+          'compiler': "com.jakewharton:butterknife-compiler:${versions.release}"
+      ],
+      'kotlin': [
+          'stdLibJre8': "org.jetbrains.kotlin:kotlin-stdlib-jre8:${versions.kotlin}",
+      ]
+  ]
+}
+
 subprojects { project ->
   group = GROUP
   version = VERSION_NAME
@@ -37,52 +90,9 @@ subprojects { project ->
       }
     }
     dependencies {
-      classpath 'com.android.tools.build:gradle:2.2.2'
+      classpath deps.android.gradlePlugin
+      classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
       classpath 'gradle.plugin.com.kageiit:lintrules:1.1.2'
     }
   }
 }
-
-ext {
-  minSdkVersion = 9
-  targetSdkVersion = 25
-  compileSdkVersion = 25
-  buildToolsVersion = '25.0.2'
-  sourceCompatibilityVersion = JavaVersion.VERSION_1_7
-  targetCompatibilityVersion = JavaVersion.VERSION_1_7
-}
-
-def androidToolsVersion = '25.2.0'
-def supportLibraryVersion = '25.1.0'
-def butterknifeLatestReleaseVersion = '8.4.0'
-
-ext.deps = [
-    // Android
-    android: 'com.google.android:android:4.1.1.4',
-    supportCompat: "com.android.support:support-compat:$supportLibraryVersion",
-    supportAnnotations: "com.android.support:support-annotations:$supportLibraryVersion",
-    supportTestRunner: 'com.android.support.test:runner:0.5',
-    androidGradle: 'com.android.tools.build:gradle:2.2.0',
-    lint: "com.android.tools.lint:lint:$androidToolsVersion",
-    lintApi: "com.android.tools.lint:lint-api:$androidToolsVersion",
-    lintChecks: "com.android.tools.lint:lint-checks:$androidToolsVersion",
-    lintTests: "com.android.tools.lint:lint-tests:$androidToolsVersion",
-
-    // Square
-    javapoet: 'com.squareup:javapoet:1.8.0',
-
-    // Third Party
-    javaparser: 'com.github.javaparser:javaparser-core:2.4.0',
-
-    // Test dependencies
-    junit: 'junit:junit:4.12',
-    truth: 'com.google.truth:truth:0.28',
-    robolectric: 'org.robolectric:robolectric:3.1.2',
-    openglApi: 'org.khronos:opengl-api:gl1.1-android-2.1_r1',
-    compiletesting: 'com.google.testing.compile:compile-testing:0.9',
-    autoservice: 'com.google.auto.service:auto-service:1.0-rc2',
-    autocommon: 'com.google.auto:auto-common:0.6',
-
-    butterknife: "com.jakewharton:butterknife:$butterknifeLatestReleaseVersion",
-    butterknifeCompiler: "com.jakewharton:butterknife-compiler:$butterknifeLatestReleaseVersion"
-]
diff --git a/butterknife-annotations/build.gradle b/butterknife-annotations/build.gradle
index 611cb1bc..05268ad8 100644
--- a/butterknife-annotations/build.gradle
+++ b/butterknife-annotations/build.gradle
@@ -9,8 +9,8 @@ for (File file : sdkHandler.sdkLoader.repositories) {
   }
 }
 
-sourceCompatibility = rootProject.ext.sourceCompatibilityVersion
-targetCompatibility = rootProject.ext.targetCompatibilityVersion
+sourceCompatibility = JavaVersion.VERSION_1_7
+targetCompatibility = JavaVersion.VERSION_1_7
 
 checkstyle {
   configFile rootProject.file('checkstyle.xml')
@@ -18,8 +18,8 @@ checkstyle {
 }
 
 dependencies {
-  compileOnly deps.android
-  compile deps.supportAnnotations
+  compileOnly deps.android.runtime
+  compile deps.support.annotations
 }
 
 apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
diff --git a/butterknife-compiler/build.gradle b/butterknife-compiler/build.gradle
index 45576488..f6693f89 100644
--- a/butterknife-compiler/build.gradle
+++ b/butterknife-compiler/build.gradle
@@ -1,8 +1,8 @@
 apply plugin: 'java'
 apply plugin: 'checkstyle'
 
-sourceCompatibility = rootProject.ext.sourceCompatibilityVersion
-targetCompatibility = rootProject.ext.targetCompatibilityVersion
+sourceCompatibility = JavaVersion.VERSION_1_7
+targetCompatibility = JavaVersion.VERSION_1_7
 
 def logger = new com.android.build.gradle.internal.LoggerWrapper(project.logger)
 def sdkHandler = new com.android.build.gradle.internal.SdkHandler(project, logger)
@@ -14,9 +14,9 @@ for (File file : sdkHandler.sdkLoader.repositories) {
 
 dependencies {
   compile project(':butterknife-annotations')
-  compile deps.autocommon
+  compile deps.auto.common
   compile deps.javapoet
-  compileOnly deps.autoservice
+  compileOnly deps.auto.service
   compileOnly files(org.gradle.internal.jvm.Jvm.current().getToolsJar())
 
   testCompile deps.junit
diff --git a/butterknife-gradle-plugin/build.gradle b/butterknife-gradle-plugin/build.gradle
index fa37f062..b7a66072 100644
--- a/butterknife-gradle-plugin/build.gradle
+++ b/butterknife-gradle-plugin/build.gradle
@@ -1,4 +1,5 @@
-apply plugin: 'groovy'
+apply plugin: 'java'
+apply plugin: 'kotlin'
 
 def logger = new com.android.build.gradle.internal.LoggerWrapper(project.logger)
 def sdkHandler = new com.android.build.gradle.internal.SdkHandler(project, logger)
@@ -8,19 +9,20 @@ for (File file : sdkHandler.sdkLoader.repositories) {
   }
 }
 
-sourceCompatibility = rootProject.ext.sourceCompatibilityVersion
-targetCompatibility = rootProject.ext.targetCompatibilityVersion
+sourceCompatibility = JavaVersion.VERSION_1_8
+targetCompatibility = JavaVersion.VERSION_1_8
 
 dependencies {
-  compile gradleApi()
+  compileOnly gradleApi()
 
-  compile deps.androidGradle
+  compile deps.android.gradlePlugin
   compile deps.javaparser
   compile deps.javapoet
+  compile deps.kotlin.stdLibJre8
 
   testCompile deps.junit
   testCompile deps.truth
-  testCompile deps.supportAnnotations
+  testCompile deps.support.annotations
   testCompile deps.compiletesting
 }
 
diff --git a/butterknife-gradle-plugin/src/main/groovy/butterknife/plugin/ButterKnifePlugin.groovy b/butterknife-gradle-plugin/src/main/groovy/butterknife/plugin/ButterKnifePlugin.groovy
deleted file mode 100644
index e03b367e..00000000
--- a/butterknife-gradle-plugin/src/main/groovy/butterknife/plugin/ButterKnifePlugin.groovy
+++ /dev/null
@@ -1,40 +0,0 @@
-package butterknife.plugin
-
-import com.android.build.gradle.AppPlugin
-import com.android.build.gradle.LibraryPlugin
-import com.android.build.gradle.TestPlugin
-import com.android.build.gradle.api.BaseVariant
-import com.android.build.gradle.api.BaseVariantOutput
-import groovy.json.StringEscapeUtils
-import org.gradle.api.Plugin
-import org.gradle.api.Project
-
-public class ButterKnifePlugin implements Plugin<Project> {
-
-  @Override
-  void apply(Project project) {
-    if (!(project.plugins.hasPlugin(LibraryPlugin) || project.plugins.hasPlugin(AppPlugin))) {
-      throw new IllegalStateException('Butterknife plugin can only be applied to android projects')
-    }
-
-    def variants
-    if (project.plugins.hasPlugin(LibraryPlugin)) {
-      variants = project.android.libraryVariants
-    } else {
-      variants = project.android.applicationVariants
-    }
-
-    project.afterEvaluate {
-      variants.all { BaseVariant variant ->
-        variant.outputs.each { BaseVariantOutput output ->
-          output.processResources.doLast {
-            File rDir = new File(sourceOutputDir, packageForR.replaceAll('\\.',
-                    StringEscapeUtils.escapeJava(File.separator)))
-            File R = new File(rDir, 'R.java')
-            FinalRClassBuilder.brewJava(R, sourceOutputDir, packageForR, 'R2')
-          }
-        }
-      }
-    }
-  }
-}
diff --git a/butterknife-gradle-plugin/src/main/java/butterknife/plugin/ButterKnifePlugin.kt b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/ButterKnifePlugin.kt
new file mode 100644
index 00000000..52150f19
--- /dev/null
+++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/ButterKnifePlugin.kt
@@ -0,0 +1,44 @@
+package butterknife.plugin
+
+import com.android.build.gradle.AppExtension
+import com.android.build.gradle.AppPlugin
+import com.android.build.gradle.LibraryExtension
+import com.android.build.gradle.LibraryPlugin
+import com.android.build.gradle.api.BaseVariant
+import org.gradle.api.DomainObjectSet
+import org.gradle.api.Plugin
+import org.gradle.api.Project
+import org.gradle.api.plugins.ExtensionContainer
+import java.io.File
+import kotlin.reflect.KClass
+
+class ButterKnifePlugin : Plugin<Project> {
+  override fun apply(project: Project) {
+    project.plugins.all {
+      when (it) {
+        is LibraryPlugin -> applyPlugin(project.extensions[LibraryExtension::class].libraryVariants)
+        is AppPlugin -> applyPlugin(project.extensions[AppExtension::class].applicationVariants)
+      }
+    }
+  }
+
+  private fun applyPlugin(variants: DomainObjectSet<out BaseVariant>) {
+    variants.all { variant ->
+      variant.outputs.forEach { output ->
+        val processResources = output.processResources
+        // TODO proper task registered as source-generating?
+        processResources.doLast {
+          val pathToR = processResources.packageForR.replace(',', File.separatorChar)
+          val rFile = processResources.sourceOutputDir.resolve(pathToR).resolve("R.java")
+
+          FinalRClassBuilder.brewJava(rFile, processResources.sourceOutputDir,
+              processResources.packageForR, "R2")
+        }
+      }
+    }
+  }
+
+  private operator fun <T : Any> ExtensionContainer.get(type: KClass<T>): T {
+    return getByType(type.java)!!
+  }
+}
diff --git a/butterknife-gradle-plugin/src/test/groovy/butterknife/plugin/FinalRClassBuilderTest.groovy b/butterknife-gradle-plugin/src/test/groovy/butterknife/plugin/FinalRClassBuilderTest.groovy
deleted file mode 100644
index e954721f..00000000
--- a/butterknife-gradle-plugin/src/test/groovy/butterknife/plugin/FinalRClassBuilderTest.groovy
+++ /dev/null
@@ -1,51 +0,0 @@
-package butterknife.plugin
-
-import com.google.testing.compile.JavaFileObjects
-import org.junit.Test
-import org.junit.runner.RunWith
-import org.junit.runners.Parameterized
-import org.junit.runners.Parameterized.Parameters
-
-import javax.tools.JavaFileObject
-
-import static com.google.common.truth.Truth.assertAbout
-import static com.google.common.truth.Truth.assertThat
-import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource
-
-@RunWith(Parameterized)
-class FinalRClassBuilderTest {
-
-  @Parameters
-  static Collection<Object[]> data() {
-    def cases = [
-        ['R', 'R2'],
-        ['RFinal', 'R2']
-    ]
-    return cases.collect { it as Object[] }
-  }
-
-  private String RFile
-  private String R2File
-
-  FinalRClassBuilderTest(String RFile, String R2File) {
-    this.RFile = RFile
-    this.R2File = R2File
-  }
-
-  @Test
-  public void brewJava() throws Exception {
-    String packageName = 'com.butterknife.example'
-
-    File R = File.createTempFile('test', 'R')
-    R.text = getClass().getResource("/fixtures/${RFile}.java").text
-
-    File R2D2 = File.createTempDir()
-    FinalRClassBuilder.brewJava(R, R2D2, packageName, 'R2')
-
-    File R2 = new File(R2D2, "com/butterknife/example/R2.java")
-    assertThat(R2.text.trim()).isEqualTo(getClass().getResource("/fixtures/${R2File}.java").text.trim())
-
-    JavaFileObject expected = JavaFileObjects.forSourceString("com.butterknife.example.R2", R2.text)
-    assertAbout(javaSource()).that(expected).compilesWithoutError()
-  }
-}
diff --git a/butterknife-gradle-plugin/src/test/java/butterknife/plugin/FinalRClassBuilderTest.kt b/butterknife-gradle-plugin/src/test/java/butterknife/plugin/FinalRClassBuilderTest.kt
new file mode 100644
index 00000000..68918ff8
--- /dev/null
+++ b/butterknife-gradle-plugin/src/test/java/butterknife/plugin/FinalRClassBuilderTest.kt
@@ -0,0 +1,43 @@
+package butterknife.plugin
+
+import com.google.common.truth.Truth.assertAbout
+import com.google.testing.compile.JavaFileObjects
+import com.google.testing.compile.JavaSourceSubjectFactory.javaSource
+import org.junit.Assert.assertEquals
+import org.junit.Rule
+import org.junit.Test
+import org.junit.rules.TemporaryFolder
+import org.junit.runner.RunWith
+import org.junit.runners.Parameterized
+import org.junit.runners.Parameterized.Parameters
+
+@RunWith(Parameterized::class)
+class FinalRClassBuilderTest(val rFile: String, val r2File: String) {
+  @Rule @JvmField val tempFolder = TemporaryFolder()
+
+  @Test fun brewJava() {
+    val packageName = "com.butterknife.example"
+
+    val rFile = tempFolder.newFile("R.java").also {
+      it.writeText(javaClass.getResource("/fixtures/$rFile.java").readText())
+    }
+
+    val outputDir = tempFolder.newFolder()
+    FinalRClassBuilder.brewJava(rFile, outputDir, packageName, "R2")
+
+    val actual = outputDir.resolve("com/butterknife/example/R2.java").readText()
+    val expected = javaClass.getResource("/fixtures/$r2File.java").readText()
+
+    assertEquals(expected.trim(), actual.trim())
+
+    val actualJava = JavaFileObjects.forSourceString("$packageName.R2", actual)
+    assertAbout(javaSource()).that(actualJava).compilesWithoutError()
+  }
+
+  companion object {
+    @JvmStatic @Parameters fun data() = listOf(
+        arrayOf<Any>("R", "R2"),
+        arrayOf<Any>("RFinal", "R2")
+    )
+  }
+}
diff --git a/butterknife-integration-test/build.gradle b/butterknife-integration-test/build.gradle
index 79584af3..74ebc2ef 100644
--- a/butterknife-integration-test/build.gradle
+++ b/butterknife-integration-test/build.gradle
@@ -1,18 +1,18 @@
 apply plugin: 'com.android.application'
 
 android {
-  compileSdkVersion rootProject.ext.compileSdkVersion
-  buildToolsVersion rootProject.ext.buildToolsVersion
+  compileSdkVersion versions.compileSdk
+  buildToolsVersion versions.buildTools
 
   compileOptions {
-    sourceCompatibility = rootProject.ext.sourceCompatibilityVersion
-    targetCompatibility = rootProject.ext.targetCompatibilityVersion
+    sourceCompatibility = JavaVersion.VERSION_1_7
+    targetCompatibility = JavaVersion.VERSION_1_7
   }
 
   defaultConfig {
     applicationId 'com.example.butterknife'
-    minSdkVersion rootProject.ext.minSdkVersion
-    targetSdkVersion rootProject.ext.targetSdkVersion
+    minSdkVersion versions.minSdk
+    targetSdkVersion versions.compileSdk
     versionCode 1
     versionName '1.0.0'
   }
diff --git a/butterknife-lint/build.gradle b/butterknife-lint/build.gradle
index 2cf93dc3..183534bb 100644
--- a/butterknife-lint/build.gradle
+++ b/butterknife-lint/build.gradle
@@ -1,16 +1,16 @@
 apply plugin: 'java'
 apply plugin: 'checkstyle'
 
-sourceCompatibility = rootProject.ext.sourceCompatibilityVersion
-targetCompatibility = rootProject.ext.targetCompatibilityVersion
+sourceCompatibility = JavaVersion.VERSION_1_8
+targetCompatibility = JavaVersion.VERSION_1_8
 
 dependencies {
-  compile deps.lintApi
-  compile deps.lintChecks
+  compile deps.lint.api
+  compile deps.lint.checks
 
   testCompile deps.junit
-  testCompile deps.lint
-  testCompile deps.lintTests
+  testCompile deps.lint.core
+  testCompile deps.lint.tests
   testCompile(deps.truth) {
     exclude group: 'com.google.guava', module: 'guava'
   }
diff --git a/butterknife/build.gradle b/butterknife/build.gradle
index 06fc3869..ec41c4f8 100644
--- a/butterknife/build.gradle
+++ b/butterknife/build.gradle
@@ -2,11 +2,11 @@ apply plugin: 'com.android.library'
 apply plugin: 'com.kageiit.lintrules'
 
 android {
-  compileSdkVersion rootProject.ext.compileSdkVersion
-  buildToolsVersion rootProject.ext.buildToolsVersion
+  compileSdkVersion versions.compileSdk
+  buildToolsVersion versions.buildTools
 
   defaultConfig {
-    minSdkVersion rootProject.ext.minSdkVersion
+    minSdkVersion versions.minSdk
 
     consumerProguardFiles 'proguard-rules.txt'
 
@@ -21,14 +21,14 @@ android {
 
 dependencies {
   compile project(':butterknife-annotations')
-  compile deps.supportAnnotations
-  compile deps.supportCompat
+  compile deps.support.annotations
+  compile deps.support.compat
 
   lintRules project(':butterknife-lint')
 
   androidTestCompile deps.junit
   androidTestCompile deps.truth
-  androidTestCompile deps.supportTestRunner
+  androidTestCompile deps.support.test.runner
 
   testCompile deps.junit
   testCompile deps.truth
diff --git a/sample/app/build.gradle b/sample/app/build.gradle
index 41fa2f5f..a6d84fcf 100644
--- a/sample/app/build.gradle
+++ b/sample/app/build.gradle
@@ -1,18 +1,18 @@
 apply plugin: 'com.android.application'
 
 android {
-  compileSdkVersion rootProject.ext.compileSdkVersion
-  buildToolsVersion rootProject.ext.buildToolsVersion
+  compileSdkVersion versions.compileSdk
+  buildToolsVersion versions.buildTools
 
   compileOptions {
-    sourceCompatibility = rootProject.ext.sourceCompatibilityVersion
-    targetCompatibility = rootProject.ext.targetCompatibilityVersion
+    sourceCompatibility = JavaVersion.VERSION_1_7
+    targetCompatibility = JavaVersion.VERSION_1_7
   }
 
   defaultConfig {
     applicationId 'com.example.butterknife'
-    minSdkVersion rootProject.ext.minSdkVersion
-    targetSdkVersion rootProject.ext.targetSdkVersion
+    minSdkVersion versions.minSdk
+    targetSdkVersion versions.compileSdk
     versionCode 1
     versionName '1.0.0'
   }
@@ -30,8 +30,8 @@ android {
 }
 
 dependencies {
-  compile deps.butterknife
-  annotationProcessor deps.butterknifeCompiler
+  compile deps.release.runtime
+  annotationProcessor deps.release.compiler
 
   compile project(':sample:library')
 
diff --git a/sample/library/build.gradle b/sample/library/build.gradle
index 826c25aa..089222b7 100644
--- a/sample/library/build.gradle
+++ b/sample/library/build.gradle
@@ -1,6 +1,6 @@
 buildscript {
   dependencies {
-    classpath 'com.jakewharton:butterknife-gradle-plugin:8.4.0'
+    classpath "com.jakewharton:butterknife-gradle-plugin:${versions.release}"
   }
 }
 
@@ -8,17 +8,17 @@ apply plugin: 'com.android.library'
 apply plugin: 'com.jakewharton.butterknife'
 
 android {
-  compileSdkVersion rootProject.ext.compileSdkVersion
-  buildToolsVersion rootProject.ext.buildToolsVersion
+  compileSdkVersion versions.compileSdk
+  buildToolsVersion versions.buildTools
 
   defaultConfig {
-    minSdkVersion rootProject.ext.minSdkVersion
+    minSdkVersion versions.minSdk
   }
 }
 
 dependencies {
-  compile deps.butterknife
-  annotationProcessor deps.butterknifeCompiler
+  compile deps.release.runtime
+  annotationProcessor deps.release.compiler
 
   testCompile deps.junit
   testCompile deps.truth
