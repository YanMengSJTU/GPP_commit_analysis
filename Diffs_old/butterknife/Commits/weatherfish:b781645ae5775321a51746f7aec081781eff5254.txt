diff --git a/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
index f9b5226a..19915d4e 100644
--- a/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
@@ -1,5 +1,6 @@
 package butterknife.compiler;
 
+import butterknife.OnTouch;
 import butterknife.internal.ListenerClass;
 import butterknife.internal.ListenerMethod;
 import com.google.common.collect.ImmutableList;
@@ -41,6 +42,8 @@
       ClassName.get("android.support.annotation", "UiThread");
   private static final ClassName CALL_SUPER =
       ClassName.get("android.support.annotation", "CallSuper");
+  private static final ClassName SUPPRESS_LINT =
+      ClassName.get("android.annotation", "SuppressLint");
   private static final ClassName UNBINDER = ClassName.get("butterknife", "Unbinder");
   static final ClassName BITMAP_FACTORY = ClassName.get("android.graphics", "BitmapFactory");
   static final ClassName CONTEXT_COMPAT =
@@ -141,6 +144,12 @@ private MethodSpec createBindingConstructor(TypeName targetType, int sdk) {
           .build());
     }
 
+    if (hasOnTouchMethodBindings()) {
+      constructor.addAnnotation(AnnotationSpec.builder(SUPPRESS_LINT)
+          .addMember("value", "$S", "ClickableViewAccessibility")
+          .build());
+    }
+
     if (parentBinding != null) {
       if (parentBinding.constructorNeedsView()) {
         constructor.addStatement("super(target, source)");
@@ -542,6 +551,16 @@ private boolean hasMethodBindings() {
     return false;
   }
 
+  private boolean hasOnTouchMethodBindings() {
+    for (ViewBinding bindings : viewBindings) {
+      if (bindings.getMethodBindings()
+          .containsKey(OnTouch.class.getAnnotation(ListenerClass.class))) {
+        return true;
+      }
+    }
+    return false;
+  }
+
   private boolean hasFieldBindings() {
     for (ViewBinding bindings : viewBindings) {
       if (bindings.getFieldBinding() != null) {
diff --git a/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java
index d8b7f46a..2f468d8c 100644
--- a/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java
+++ b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java
@@ -189,7 +189,7 @@
       }
     }
 
-    return true;
+    return false;
   }
 
   private Map<TypeElement, BindingSet> findAndParseTargets(RoundEnvironment env) {
diff --git a/butterknife/src/test/java/butterknife/OnTouchTest.java b/butterknife/src/test/java/butterknife/OnTouchTest.java
index 3e32bc81..ad0aee51 100644
--- a/butterknife/src/test/java/butterknife/OnTouchTest.java
+++ b/butterknife/src/test/java/butterknife/OnTouchTest.java
@@ -21,6 +21,7 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
+        + "import android.annotation.SuppressLint;\n"
         + "import android.support.annotation.CallSuper;\n"
         + "import android.support.annotation.UiThread;\n"
         + "import android.view.MotionEvent;\n"
@@ -33,6 +34,7 @@
         + "  private Test target;\n"
         + "  private View view1;\n"
         + "  @UiThread\n"
+        + "  @SuppressLint(\"ClickableViewAccessibility\")\n"
         + "  public Test_ViewBinding(final Test target, View source) {\n"
         + "    this.target = target;\n"
         + "    View view;\n"
