diff --git a/CHANGELOG.md b/CHANGELOG.md
index 8cfe732b..5f06cd19 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -1,6 +1,49 @@
 Change Log
 ==========
 
+Version 10.0.0 *(2019-01-03)*
+-----------------------------
+
+ * Equivalent to 9.0.0 but only supports AndroidX-enabled builds.
+ * Removed APIs deprecated in 9.0.0.
+
+
+Version 9.0.0 *(2019-01-03)*
+----------------------------
+
+ * New: Support for AndroidX. Requires `android.useAndroidX=true` in `gradle.properties` to generate
+   AndroidX code.
+
+ * New: A `butterknife-runtime` artifact has been extracted from `butterknife` which contains the APIs
+   required for the generated code but does not contain the code to reflectively look up the generated
+   code. This allows you to reference the generated code directly such that R8/ProGuard optimization can
+   rename both the generated code and your classes. `ButterKnife.bind` and the consumer R8/ProGuard rules
+   remain in the old `butterknife` artifact.
+ 
+ * New: Experimental `butterknife-reflect` artifact eliminates the need to run the annotation
+   processor for IDE builds. This artifact is binary compatible with `butterknife` so it can be interchanged
+   depending on how your build is being invoked. See [its README](butterknife-reflect/README.md) for more
+   information. Currently about 90% of functionality is covered. File bugs for anything that does not work.
+
+   Note: This artifact requires Java 8. There's no good reason for this except to push the ecosystem to
+   having this be a default. As of AGP 3.2 there is no reason not to do this.
+
+ * New: Lint checks have been ported to UAST and now work on Kotlin code.
+ 
+ * Helpers such as `apply` have been deprecated on `ButterKnife` and are now available on the `ViewCollections` class.
+
+ * Add support for Android Gradle plugin 3.3 and newer where `R` is no longer generated as Java source. This
+   has a side-effect of removing support for Android Gradle plugin 3.0.x (and older).
+ * Use Java 8 bytecode for all artifacts as announced in RC1 release notes.
+ * Fix: Allow `@BindFont` to work prior to API 26 using `ResourcesCompat`.
+ * Fix: Update Android Gradle plugin to 3.1 or newer to fix binary incompatibilities.
+ * Fix: Correct generated resource annotation names when running Turkish locale.
+ * Fix: Use the application ID instead of the resource package for generating `R2`.
+ * Cache the fact that a class hierarchy has no remaining bindings to prevent traversing the hierarchy
+   multiple times.
+ * Deprecated methods from 8.x have been removed.
+
+
 Version 9.0.0-rc3 *(2018-12-20)*
 --------------------------------
 
diff --git a/README.md b/README.md
index d479d828..004b9eeb 100644
--- a/README.md
+++ b/README.md
@@ -43,8 +43,8 @@ Download
 
 ```groovy
 dependencies {
-  implementation 'com.jakewharton:butterknife:9.0.0-rc3'
-  annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0-rc3'
+  implementation 'com.jakewharton:butterknife:10.0.0'
+  annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
 }
 ```
 
@@ -65,7 +65,7 @@ buildscript {
     mavenCentral()
    }
   dependencies {
-    classpath 'com.jakewharton:butterknife-gradle-plugin:9.0.0-rc3'
+    classpath 'com.jakewharton:butterknife-gradle-plugin:10.0.0'
   }
 }
 ```
diff --git a/build.gradle b/build.gradle
index 0ef86b3c..0d2b72b1 100644
--- a/build.gradle
+++ b/build.gradle
@@ -5,7 +5,6 @@ buildscript {
       'minSdk': 14,
       'compileSdk': 28,
 
-      'supportLibrary': '28.0.0',
       'androidTools': '26.2.0',
       'kotlin': '1.2.71',
 
@@ -17,16 +16,13 @@ buildscript {
           'runtime': 'com.google.android:android:4.1.1.4',
           'gradlePlugin': "com.android.tools.build:gradle:3.1.4",
       ],
-      'support': [
-          'compat': "com.android.support:support-compat:${versions.supportLibrary}",
-          'annotations': "com.android.support:support-annotations:${versions.supportLibrary}",
-          'test': [
-              'runner': 'com.android.support.test:runner:1.0.1',
-              'rules': 'com.android.support.test:rules:1.0.1',
-          ],
-      ],
       'androidx': [
+          'core': "androidx.core:core:1.0.0",
           'annotations': "androidx.annotation:annotation:1.0.0",
+          'test': [
+              'runner': 'androidx.test:runner:1.1.0',
+              'rules': 'androidx.test:rules:1.1.0',
+          ],
       ],
       'lint': [
           'core': "com.android.tools.lint:lint:${versions.androidTools}",
@@ -54,8 +50,8 @@ buildscript {
 
   repositories {
     mavenCentral()
-    jcenter()
     google()
+    jcenter()
     gradlePluginPortal()
   }
 
diff --git a/butterknife-annotations/build.gradle b/butterknife-annotations/build.gradle
index 47d8f373..03d03882 100644
--- a/butterknife-annotations/build.gradle
+++ b/butterknife-annotations/build.gradle
@@ -11,7 +11,7 @@ checkstyle {
 
 dependencies {
   compileOnly deps.android.runtime
-  api deps.support.annotations
+  api deps.androidx.annotations
 }
 
 apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
diff --git a/butterknife-annotations/src/main/java/butterknife/BindAnim.java b/butterknife-annotations/src/main/java/butterknife/BindAnim.java
index 7e12157b..95d7e073 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindAnim.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindAnim.java
@@ -1,6 +1,6 @@
 package butterknife;
 
-import android.support.annotation.AnimRes;
+import androidx.annotation.AnimRes;
 import java.lang.annotation.Retention;
 import java.lang.annotation.Target;
 
diff --git a/butterknife-annotations/src/main/java/butterknife/BindArray.java b/butterknife-annotations/src/main/java/butterknife/BindArray.java
index 6f016b4d..b590b69d 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindArray.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindArray.java
@@ -1,6 +1,6 @@
 package butterknife;
 
-import android.support.annotation.ArrayRes;
+import androidx.annotation.ArrayRes;
 import java.lang.annotation.Retention;
 import java.lang.annotation.Target;
 
diff --git a/butterknife-annotations/src/main/java/butterknife/BindBitmap.java b/butterknife-annotations/src/main/java/butterknife/BindBitmap.java
index 0b3576e8..795b230e 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindBitmap.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindBitmap.java
@@ -1,7 +1,7 @@
 package butterknife;
 
 import android.graphics.Bitmap;
-import android.support.annotation.DrawableRes;
+import androidx.annotation.DrawableRes;
 import java.lang.annotation.Retention;
 import java.lang.annotation.Target;
 
diff --git a/butterknife-annotations/src/main/java/butterknife/BindBool.java b/butterknife-annotations/src/main/java/butterknife/BindBool.java
index 5c0abd39..eb6347dd 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindBool.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindBool.java
@@ -1,6 +1,6 @@
 package butterknife;
 
-import android.support.annotation.BoolRes;
+import androidx.annotation.BoolRes;
 import java.lang.annotation.Retention;
 import java.lang.annotation.Target;
 
diff --git a/butterknife-annotations/src/main/java/butterknife/BindColor.java b/butterknife-annotations/src/main/java/butterknife/BindColor.java
index af289c33..2691cf5a 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindColor.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindColor.java
@@ -1,6 +1,6 @@
 package butterknife;
 
-import android.support.annotation.ColorRes;
+import androidx.annotation.ColorRes;
 import java.lang.annotation.Retention;
 import java.lang.annotation.Target;
 
diff --git a/butterknife-annotations/src/main/java/butterknife/BindDimen.java b/butterknife-annotations/src/main/java/butterknife/BindDimen.java
index 62115a1e..49fa9185 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindDimen.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindDimen.java
@@ -1,6 +1,6 @@
 package butterknife;
 
-import android.support.annotation.DimenRes;
+import androidx.annotation.DimenRes;
 import java.lang.annotation.Retention;
 import java.lang.annotation.Target;
 
diff --git a/butterknife-annotations/src/main/java/butterknife/BindDrawable.java b/butterknife-annotations/src/main/java/butterknife/BindDrawable.java
index 8156dca9..76fa9a03 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindDrawable.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindDrawable.java
@@ -1,7 +1,7 @@
 package butterknife;
 
-import android.support.annotation.AttrRes;
-import android.support.annotation.DrawableRes;
+import androidx.annotation.AttrRes;
+import androidx.annotation.DrawableRes;
 import java.lang.annotation.Retention;
 import java.lang.annotation.Target;
 
diff --git a/butterknife-annotations/src/main/java/butterknife/BindFloat.java b/butterknife-annotations/src/main/java/butterknife/BindFloat.java
index bb15a288..400e844f 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindFloat.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindFloat.java
@@ -1,6 +1,6 @@
 package butterknife;
 
-import android.support.annotation.DimenRes;
+import androidx.annotation.DimenRes;
 import java.lang.annotation.Retention;
 import java.lang.annotation.Target;
 
diff --git a/butterknife-annotations/src/main/java/butterknife/BindFont.java b/butterknife-annotations/src/main/java/butterknife/BindFont.java
index d2360c2b..ff3420ac 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindFont.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindFont.java
@@ -1,13 +1,13 @@
 package butterknife;
 
 import android.graphics.Typeface;
-import android.support.annotation.FontRes;
-import android.support.annotation.IntDef;
-import android.support.annotation.RestrictTo;
+import androidx.annotation.FontRes;
+import androidx.annotation.IntDef;
+import androidx.annotation.RestrictTo;
 import java.lang.annotation.Retention;
 import java.lang.annotation.Target;
 
-import static android.support.annotation.RestrictTo.Scope.LIBRARY;
+import static androidx.annotation.RestrictTo.Scope.LIBRARY;
 import static java.lang.annotation.ElementType.FIELD;
 import static java.lang.annotation.RetentionPolicy.RUNTIME;
 
diff --git a/butterknife-annotations/src/main/java/butterknife/BindInt.java b/butterknife-annotations/src/main/java/butterknife/BindInt.java
index 137950a5..15593081 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindInt.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindInt.java
@@ -1,6 +1,6 @@
 package butterknife;
 
-import android.support.annotation.IntegerRes;
+import androidx.annotation.IntegerRes;
 import java.lang.annotation.Retention;
 import java.lang.annotation.Target;
 
diff --git a/butterknife-annotations/src/main/java/butterknife/BindString.java b/butterknife-annotations/src/main/java/butterknife/BindString.java
index 5dfebd59..a31b5509 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindString.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindString.java
@@ -1,6 +1,6 @@
 package butterknife;
 
-import android.support.annotation.StringRes;
+import androidx.annotation.StringRes;
 import java.lang.annotation.Retention;
 import java.lang.annotation.Target;
 
diff --git a/butterknife-annotations/src/main/java/butterknife/BindView.java b/butterknife-annotations/src/main/java/butterknife/BindView.java
index 85da51c3..13c56dab 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindView.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindView.java
@@ -1,6 +1,6 @@
 package butterknife;
 
-import android.support.annotation.IdRes;
+import androidx.annotation.IdRes;
 import java.lang.annotation.Retention;
 import java.lang.annotation.Target;
 
diff --git a/butterknife-annotations/src/main/java/butterknife/BindViews.java b/butterknife-annotations/src/main/java/butterknife/BindViews.java
index 8b174f1f..890b5693 100644
--- a/butterknife-annotations/src/main/java/butterknife/BindViews.java
+++ b/butterknife-annotations/src/main/java/butterknife/BindViews.java
@@ -1,6 +1,6 @@
 package butterknife;
 
-import android.support.annotation.IdRes;
+import androidx.annotation.IdRes;
 import java.lang.annotation.Retention;
 import java.lang.annotation.Target;
 
diff --git a/butterknife-annotations/src/main/java/butterknife/OnCheckedChanged.java b/butterknife-annotations/src/main/java/butterknife/OnCheckedChanged.java
index 22681659..4d9b280d 100644
--- a/butterknife-annotations/src/main/java/butterknife/OnCheckedChanged.java
+++ b/butterknife-annotations/src/main/java/butterknife/OnCheckedChanged.java
@@ -1,7 +1,7 @@
 package butterknife;
 
-import android.support.annotation.IdRes;
 import android.view.View;
+import androidx.annotation.IdRes;
 import butterknife.internal.ListenerClass;
 import butterknife.internal.ListenerMethod;
 import java.lang.annotation.Retention;
diff --git a/butterknife-annotations/src/main/java/butterknife/OnClick.java b/butterknife-annotations/src/main/java/butterknife/OnClick.java
index a3324ab4..ffebeb06 100644
--- a/butterknife-annotations/src/main/java/butterknife/OnClick.java
+++ b/butterknife-annotations/src/main/java/butterknife/OnClick.java
@@ -1,7 +1,7 @@
 package butterknife;
 
-import android.support.annotation.IdRes;
 import android.view.View;
+import androidx.annotation.IdRes;
 import butterknife.internal.ListenerClass;
 import butterknife.internal.ListenerMethod;
 import java.lang.annotation.Retention;
diff --git a/butterknife-annotations/src/main/java/butterknife/OnEditorAction.java b/butterknife-annotations/src/main/java/butterknife/OnEditorAction.java
index 1e9cdca2..2975cc02 100644
--- a/butterknife-annotations/src/main/java/butterknife/OnEditorAction.java
+++ b/butterknife-annotations/src/main/java/butterknife/OnEditorAction.java
@@ -1,7 +1,7 @@
 package butterknife;
 
-import android.support.annotation.IdRes;
 import android.view.View;
+import androidx.annotation.IdRes;
 import butterknife.internal.ListenerClass;
 import butterknife.internal.ListenerMethod;
 import java.lang.annotation.Retention;
diff --git a/butterknife-annotations/src/main/java/butterknife/OnFocusChange.java b/butterknife-annotations/src/main/java/butterknife/OnFocusChange.java
index 8bcc772d..a388812f 100644
--- a/butterknife-annotations/src/main/java/butterknife/OnFocusChange.java
+++ b/butterknife-annotations/src/main/java/butterknife/OnFocusChange.java
@@ -1,7 +1,7 @@
 package butterknife;
 
-import android.support.annotation.IdRes;
 import android.view.View;
+import androidx.annotation.IdRes;
 import butterknife.internal.ListenerClass;
 import butterknife.internal.ListenerMethod;
 import java.lang.annotation.Retention;
diff --git a/butterknife-annotations/src/main/java/butterknife/OnItemClick.java b/butterknife-annotations/src/main/java/butterknife/OnItemClick.java
index 6a411cdd..4362f79e 100644
--- a/butterknife-annotations/src/main/java/butterknife/OnItemClick.java
+++ b/butterknife-annotations/src/main/java/butterknife/OnItemClick.java
@@ -1,7 +1,7 @@
 package butterknife;
 
-import android.support.annotation.IdRes;
 import android.view.View;
+import androidx.annotation.IdRes;
 import butterknife.internal.ListenerClass;
 import butterknife.internal.ListenerMethod;
 import java.lang.annotation.Retention;
diff --git a/butterknife-annotations/src/main/java/butterknife/OnItemLongClick.java b/butterknife-annotations/src/main/java/butterknife/OnItemLongClick.java
index 543cda23..2902aa9e 100644
--- a/butterknife-annotations/src/main/java/butterknife/OnItemLongClick.java
+++ b/butterknife-annotations/src/main/java/butterknife/OnItemLongClick.java
@@ -1,7 +1,7 @@
 package butterknife;
 
-import android.support.annotation.IdRes;
 import android.view.View;
+import androidx.annotation.IdRes;
 import butterknife.internal.ListenerClass;
 import butterknife.internal.ListenerMethod;
 import java.lang.annotation.Retention;
diff --git a/butterknife-annotations/src/main/java/butterknife/OnItemSelected.java b/butterknife-annotations/src/main/java/butterknife/OnItemSelected.java
index 500a8db1..22a8664d 100644
--- a/butterknife-annotations/src/main/java/butterknife/OnItemSelected.java
+++ b/butterknife-annotations/src/main/java/butterknife/OnItemSelected.java
@@ -1,7 +1,7 @@
 package butterknife;
 
-import android.support.annotation.IdRes;
 import android.view.View;
+import androidx.annotation.IdRes;
 import butterknife.internal.ListenerClass;
 import butterknife.internal.ListenerMethod;
 import java.lang.annotation.Retention;
diff --git a/butterknife-annotations/src/main/java/butterknife/OnLongClick.java b/butterknife-annotations/src/main/java/butterknife/OnLongClick.java
index 0b53b6d9..7cc22d39 100644
--- a/butterknife-annotations/src/main/java/butterknife/OnLongClick.java
+++ b/butterknife-annotations/src/main/java/butterknife/OnLongClick.java
@@ -1,7 +1,7 @@
 package butterknife;
 
-import android.support.annotation.IdRes;
 import android.view.View;
+import androidx.annotation.IdRes;
 import butterknife.internal.ListenerClass;
 import butterknife.internal.ListenerMethod;
 import java.lang.annotation.Retention;
diff --git a/butterknife-annotations/src/main/java/butterknife/OnPageChange.java b/butterknife-annotations/src/main/java/butterknife/OnPageChange.java
index c840a69a..22fd648a 100644
--- a/butterknife-annotations/src/main/java/butterknife/OnPageChange.java
+++ b/butterknife-annotations/src/main/java/butterknife/OnPageChange.java
@@ -1,7 +1,7 @@
 package butterknife;
 
-import android.support.annotation.IdRes;
 import android.view.View;
+import androidx.annotation.IdRes;
 import butterknife.internal.ListenerClass;
 import butterknife.internal.ListenerMethod;
 import java.lang.annotation.Retention;
@@ -31,11 +31,9 @@
 @Retention(CLASS)
 @ListenerClass(
     targetType = "androidx.viewpager.widget.ViewPager",
-    legacyTargetType = "android.support.v4.view.ViewPager",
     setter = "addOnPageChangeListener",
     remover = "removeOnPageChangeListener",
     type = "androidx.viewpager.widget.ViewPager.OnPageChangeListener",
-    legacyType = "android.support.v4.view.ViewPager.OnPageChangeListener",
     callbacks = OnPageChange.Callback.class
 )
 public @interface OnPageChange {
diff --git a/butterknife-annotations/src/main/java/butterknife/OnTextChanged.java b/butterknife-annotations/src/main/java/butterknife/OnTextChanged.java
index 6b81c43b..1ba3a383 100644
--- a/butterknife-annotations/src/main/java/butterknife/OnTextChanged.java
+++ b/butterknife-annotations/src/main/java/butterknife/OnTextChanged.java
@@ -1,8 +1,8 @@
 package butterknife;
 
-import android.support.annotation.IdRes;
 import android.text.TextWatcher;
 import android.view.View;
+import androidx.annotation.IdRes;
 import butterknife.internal.ListenerClass;
 import butterknife.internal.ListenerMethod;
 import java.lang.annotation.Retention;
diff --git a/butterknife-annotations/src/main/java/butterknife/OnTouch.java b/butterknife-annotations/src/main/java/butterknife/OnTouch.java
index 4b54a0d3..9a6e8cbc 100644
--- a/butterknife-annotations/src/main/java/butterknife/OnTouch.java
+++ b/butterknife-annotations/src/main/java/butterknife/OnTouch.java
@@ -1,7 +1,7 @@
 package butterknife;
 
-import android.support.annotation.IdRes;
 import android.view.View;
+import androidx.annotation.IdRes;
 import butterknife.internal.ListenerClass;
 import butterknife.internal.ListenerMethod;
 import java.lang.annotation.Retention;
diff --git a/butterknife-annotations/src/main/java/butterknife/internal/ListenerClass.java b/butterknife-annotations/src/main/java/butterknife/internal/ListenerClass.java
index c736e899..e6d3ed5f 100644
--- a/butterknife-annotations/src/main/java/butterknife/internal/ListenerClass.java
+++ b/butterknife-annotations/src/main/java/butterknife/internal/ListenerClass.java
@@ -10,8 +10,6 @@
 public @interface ListenerClass {
   String targetType();
 
-  String legacyTargetType() default "";
-
   /** Name of the setter method on the {@linkplain #targetType() target type} for the listener. */
   String setter();
 
@@ -24,8 +22,6 @@
   /** Fully-qualified class name of the listener type. */
   String type();
 
-  String legacyType() default "";
-
   /** Enum which declares the listener callback methods. Mutually exclusive to {@link #method()}. */
   Class<? extends Enum<?>> callbacks() default NONE.class;
 
diff --git a/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
index 0df2479c..df881418 100644
--- a/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
@@ -44,20 +44,14 @@
   private static final ClassName VIEW = ClassName.get("android.view", "View");
   private static final ClassName CONTEXT = ClassName.get("android.content", "Context");
   private static final ClassName RESOURCES = ClassName.get("android.content.res", "Resources");
-  private static final ClassName UI_THREAD_LEGACY =
-      ClassName.get("android.support.annotation", "UiThread");
   private static final ClassName UI_THREAD =
       ClassName.get("androidx.annotation", "UiThread");
-  private static final ClassName CALL_SUPER_LEGACY =
-      ClassName.get("android.support.annotation", "CallSuper");
   private static final ClassName CALL_SUPER =
       ClassName.get("androidx.annotation", "CallSuper");
   private static final ClassName SUPPRESS_LINT =
       ClassName.get("android.annotation", "SuppressLint");
   private static final ClassName UNBINDER = ClassName.get("butterknife", "Unbinder");
   static final ClassName BITMAP_FACTORY = ClassName.get("android.graphics", "BitmapFactory");
-  static final ClassName CONTEXT_COMPAT_LEGACY =
-      ClassName.get("android.support.v4.content", "ContextCompat");
   static final ClassName CONTEXT_COMPAT =
       ClassName.get("androidx.core.content", "ContextCompat");
   static final ClassName ANIMATION_UTILS =
@@ -90,14 +84,14 @@ private BindingSet(TypeName targetTypeName, ClassName bindingClassName, boolean
     this.parentBinding = parentBinding;
   }
 
-  JavaFile brewJava(int sdk, boolean debuggable, boolean useLegacyTypes) {
-    TypeSpec bindingConfiguration = createType(sdk, debuggable, useLegacyTypes);
+  JavaFile brewJava(int sdk, boolean debuggable) {
+    TypeSpec bindingConfiguration = createType(sdk, debuggable);
     return JavaFile.builder(bindingClassName.packageName(), bindingConfiguration)
         .addFileComment("Generated code from Butter Knife. Do not modify!")
         .build();
   }
 
-  private TypeSpec createType(int sdk, boolean debuggable, boolean useLegacyTypes) {
+  private TypeSpec createType(int sdk, boolean debuggable) {
     TypeSpec.Builder result = TypeSpec.classBuilder(bindingClassName.simpleName())
         .addModifiers(PUBLIC);
     if (isFinal) {
@@ -115,32 +109,32 @@ private TypeSpec createType(int sdk, boolean debuggable, boolean useLegacyTypes)
     }
 
     if (isView) {
-      result.addMethod(createBindingConstructorForView(useLegacyTypes));
+      result.addMethod(createBindingConstructorForView());
     } else if (isActivity) {
-      result.addMethod(createBindingConstructorForActivity(useLegacyTypes));
+      result.addMethod(createBindingConstructorForActivity());
     } else if (isDialog) {
-      result.addMethod(createBindingConstructorForDialog(useLegacyTypes));
+      result.addMethod(createBindingConstructorForDialog());
     }
     if (!constructorNeedsView()) {
       // Add a delegating constructor with a target type + view signature for reflective use.
-      result.addMethod(createBindingViewDelegateConstructor(useLegacyTypes));
+      result.addMethod(createBindingViewDelegateConstructor());
     }
-    result.addMethod(createBindingConstructor(sdk, debuggable, useLegacyTypes));
+    result.addMethod(createBindingConstructor(sdk, debuggable));
 
     if (hasViewBindings() || parentBinding == null) {
-      result.addMethod(createBindingUnbindMethod(result, useLegacyTypes));
+      result.addMethod(createBindingUnbindMethod(result));
     }
 
     return result.build();
   }
 
-  private MethodSpec createBindingViewDelegateConstructor(boolean useLegacyTypes) {
+  private MethodSpec createBindingViewDelegateConstructor() {
     return MethodSpec.constructorBuilder()
         .addJavadoc("@deprecated Use {@link #$T($T, $T)} for direct creation.\n    "
                 + "Only present for runtime invocation through {@code ButterKnife.bind()}.\n",
             bindingClassName, targetTypeName, CONTEXT)
         .addAnnotation(Deprecated.class)
-        .addAnnotation(useLegacyTypes ? UI_THREAD_LEGACY : UI_THREAD)
+        .addAnnotation(UI_THREAD)
         .addModifiers(PUBLIC)
         .addParameter(targetTypeName, "target")
         .addParameter(VIEW, "source")
@@ -148,9 +142,9 @@ private MethodSpec createBindingViewDelegateConstructor(boolean useLegacyTypes)
         .build();
   }
 
-  private MethodSpec createBindingConstructorForView(boolean useLegacyTypes) {
+  private MethodSpec createBindingConstructorForView() {
     MethodSpec.Builder builder = MethodSpec.constructorBuilder()
-        .addAnnotation(useLegacyTypes ? UI_THREAD_LEGACY : UI_THREAD)
+        .addAnnotation(UI_THREAD)
         .addModifiers(PUBLIC)
         .addParameter(targetTypeName, "target");
     if (constructorNeedsView()) {
@@ -161,9 +155,9 @@ private MethodSpec createBindingConstructorForView(boolean useLegacyTypes) {
     return builder.build();
   }
 
-  private MethodSpec createBindingConstructorForActivity(boolean useLegacyTypes) {
+  private MethodSpec createBindingConstructorForActivity() {
     MethodSpec.Builder builder = MethodSpec.constructorBuilder()
-        .addAnnotation(useLegacyTypes ? UI_THREAD_LEGACY : UI_THREAD)
+        .addAnnotation(UI_THREAD)
         .addModifiers(PUBLIC)
         .addParameter(targetTypeName, "target");
     if (constructorNeedsView()) {
@@ -174,9 +168,9 @@ private MethodSpec createBindingConstructorForActivity(boolean useLegacyTypes) {
     return builder.build();
   }
 
-  private MethodSpec createBindingConstructorForDialog(boolean useLegacyTypes) {
+  private MethodSpec createBindingConstructorForDialog() {
     MethodSpec.Builder builder = MethodSpec.constructorBuilder()
-        .addAnnotation(useLegacyTypes ? UI_THREAD_LEGACY : UI_THREAD)
+        .addAnnotation(UI_THREAD)
         .addModifiers(PUBLIC)
         .addParameter(targetTypeName, "target");
     if (constructorNeedsView()) {
@@ -187,9 +181,9 @@ private MethodSpec createBindingConstructorForDialog(boolean useLegacyTypes) {
     return builder.build();
   }
 
-  private MethodSpec createBindingConstructor(int sdk, boolean debuggable, boolean useLegacyTypes) {
+  private MethodSpec createBindingConstructor(int sdk, boolean debuggable) {
     MethodSpec.Builder constructor = MethodSpec.constructorBuilder()
-        .addAnnotation(useLegacyTypes ? UI_THREAD_LEGACY : UI_THREAD)
+        .addAnnotation(UI_THREAD)
         .addModifiers(PUBLIC);
 
     if (hasMethodBindings()) {
@@ -238,7 +232,7 @@ private MethodSpec createBindingConstructor(int sdk, boolean debuggable, boolean
         constructor.addStatement("$T view", VIEW);
       }
       for (ViewBinding binding : viewBindings) {
-        addViewBinding(constructor, binding, debuggable, useLegacyTypes);
+        addViewBinding(constructor, binding, debuggable);
       }
       for (FieldCollectionViewBinding binding : collectionBindings) {
         constructor.addStatement("$L", binding.render(debuggable));
@@ -264,13 +258,12 @@ private MethodSpec createBindingConstructor(int sdk, boolean debuggable, boolean
     return constructor.build();
   }
 
-  private MethodSpec createBindingUnbindMethod(TypeSpec.Builder bindingClass,
-      boolean useLegacyTypes) {
+  private MethodSpec createBindingUnbindMethod(TypeSpec.Builder bindingClass) {
     MethodSpec.Builder result = MethodSpec.methodBuilder("unbind")
         .addAnnotation(Override.class)
         .addModifiers(PUBLIC);
     if (!isFinal && parentBinding == null) {
-      result.addAnnotation(useLegacyTypes ? CALL_SUPER_LEGACY : CALL_SUPER);
+      result.addAnnotation(CALL_SUPER);
     }
 
     if (hasTargetField()) {
@@ -294,7 +287,7 @@ private MethodSpec createBindingUnbindMethod(TypeSpec.Builder bindingClass,
     if (hasMethodBindings()) {
       result.addCode("\n");
       for (ViewBinding binding : viewBindings) {
-        addFieldAndUnbindStatement(bindingClass, result, binding, useLegacyTypes);
+        addFieldAndUnbindStatement(bindingClass, result, binding);
       }
     }
 
@@ -306,7 +299,7 @@ private MethodSpec createBindingUnbindMethod(TypeSpec.Builder bindingClass,
   }
 
   private void addFieldAndUnbindStatement(TypeSpec.Builder result, MethodSpec.Builder unbindMethod,
-      ViewBinding bindings, boolean useLegacyTypes) {
+      ViewBinding bindings) {
     // Only add fields to the binding if there are method bindings.
     Map<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> classMethodBindings =
         bindings.getMethodBindings();
@@ -332,12 +325,12 @@ private void addFieldAndUnbindStatement(TypeSpec.Builder result, MethodSpec.Buil
       boolean requiresRemoval = !"".equals(listenerClass.remover());
       String listenerField = "null";
       if (requiresRemoval) {
-        TypeName listenerClassName = bestGuess(getType(listenerClass, useLegacyTypes));
+        TypeName listenerClassName = bestGuess(listenerClass.type());
         listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
         result.addField(listenerClassName, listenerField, PRIVATE);
       }
 
-      String targetType = getTargetType(listenerClass, useLegacyTypes);
+      String targetType = listenerClass.targetType();
       if (!VIEW_TYPE.equals(targetType)) {
         unbindMethod.addStatement("(($T) $N).$N($N)", bestGuess(targetType),
             fieldName, removerOrSetter(listenerClass, requiresRemoval), listenerField);
@@ -358,32 +351,13 @@ private void addFieldAndUnbindStatement(TypeSpec.Builder result, MethodSpec.Buil
     }
   }
 
-  private static String getType(ListenerClass listenerClass, boolean useLegacyTypes) {
-    String type = listenerClass.type();
-    String legacyType = listenerClass.legacyType();
-    if (useLegacyTypes && !legacyType.isEmpty()) {
-      type = legacyType;
-    }
-    return type;
-  }
-
-  private static String getTargetType(ListenerClass listenerClass, boolean useLegacyTypes) {
-    String targetType = listenerClass.targetType();
-    String legacyTargetType = listenerClass.legacyTargetType();
-    if (useLegacyTypes && !legacyTargetType.isEmpty()) {
-      targetType = legacyTargetType;
-    }
-    return targetType;
-  }
-
   private String removerOrSetter(ListenerClass listenerClass, boolean requiresRemoval) {
     return requiresRemoval
         ? listenerClass.remover()
         : listenerClass.setter();
   }
 
-  private void addViewBinding(MethodSpec.Builder result, ViewBinding binding, boolean debuggable,
-      boolean useLegacyTypes) {
+  private void addViewBinding(MethodSpec.Builder result, ViewBinding binding, boolean debuggable) {
     if (binding.isSingleFieldBinding()) {
       // Optimize the common case where there's a single binding directly to a field.
       FieldViewBinding fieldBinding = requireNonNull(binding.getFieldBinding());
@@ -424,7 +398,7 @@ private void addViewBinding(MethodSpec.Builder result, ViewBinding binding, bool
     }
 
     addFieldBinding(result, binding, debuggable);
-    addMethodBindings(result, binding, debuggable, useLegacyTypes);
+    addMethodBindings(result, binding, debuggable);
   }
 
   private void addFieldBinding(MethodSpec.Builder result, ViewBinding binding, boolean debuggable) {
@@ -445,8 +419,8 @@ private void addFieldBinding(MethodSpec.Builder result, ViewBinding binding, boo
     }
   }
 
-  private void addMethodBindings(MethodSpec.Builder result, ViewBinding binding, boolean debuggable,
-      boolean useLegacyTypes) {
+  private void addMethodBindings(MethodSpec.Builder result, ViewBinding binding,
+      boolean debuggable) {
     Map<ListenerClass, Map<ListenerMethod, Set<MethodViewBinding>>> classMethodBindings =
         binding.getMethodBindings();
     if (classMethodBindings.isEmpty()) {
@@ -474,7 +448,7 @@ private void addMethodBindings(MethodSpec.Builder result, ViewBinding binding, b
       Map<ListenerMethod, Set<MethodViewBinding>> methodBindings = e.getValue();
 
       TypeSpec.Builder callback = TypeSpec.anonymousClassBuilder("")
-          .superclass(ClassName.bestGuess(getType(listener, useLegacyTypes)));
+          .superclass(ClassName.bestGuess(listener.type()));
 
       for (ListenerMethod method : getListenerMethods(listener)) {
         MethodSpec.Builder callbackMethod = MethodSpec.methodBuilder(method.name())
@@ -529,12 +503,12 @@ private void addMethodBindings(MethodSpec.Builder result, ViewBinding binding, b
       boolean requiresRemoval = listener.remover().length() != 0;
       String listenerField = null;
       if (requiresRemoval) {
-        TypeName listenerClassName = bestGuess(getType(listener, useLegacyTypes));
+        TypeName listenerClassName = bestGuess(listener.type());
         listenerField = fieldName + ((ClassName) listenerClassName).simpleName();
         result.addStatement("$L = $L", listenerField, callback.build());
       }
 
-      String targetType = getTargetType(listener, useLegacyTypes);
+      String targetType = listener.targetType();
       if (!VIEW_TYPE.equals(targetType)) {
         result.addStatement("(($T) $N).$L($L)", bestGuess(targetType), bindName,
             listener.setter(), requiresRemoval ? listenerField : callback.build());
diff --git a/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java
index 27093e6a..ed877cac 100644
--- a/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java
+++ b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java
@@ -72,7 +72,6 @@
 import javax.lang.model.type.TypeKind;
 import javax.lang.model.type.TypeMirror;
 import javax.lang.model.type.TypeVariable;
-import javax.lang.model.util.Elements;
 import javax.lang.model.util.Types;
 import javax.tools.Diagnostic.Kind;
 
@@ -123,7 +122,6 @@
 
   private int sdk = 1;
   private boolean debuggable = true;
-  private boolean useLegacyTypes = false;
 
   private final RScanner rScanner = new RScanner();
 
@@ -143,7 +141,6 @@
     }
 
     debuggable = !"false".equals(env.getOptions().get(OPTION_DEBUGGABLE));
-    useLegacyTypes = !hasAndroidX(env.getElementUtils());
 
     typeUtils = env.getTypeUtils();
     filer = env.getFiler();
@@ -193,7 +190,7 @@
       TypeElement typeElement = entry.getKey();
       BindingSet binding = entry.getValue();
 
-      JavaFile javaFile = binding.brewJava(sdk, debuggable, useLegacyTypes);
+      JavaFile javaFile = binding.brewJava(sdk, debuggable);
       try {
         javaFile.writeTo(filer);
       } catch (IOException e) {
@@ -671,12 +668,8 @@ private void parseResourceColor(Element element,
     Id resourceId = elementToId(element, BindColor.class, id);
     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
 
-    FieldResourceBinding.Type colorStateList = useLegacyTypes
-        ? FieldResourceBinding.Type.COLOR_STATE_LIST_LEGACY
-            : FieldResourceBinding.Type.COLOR_STATE_LIST;
-    FieldResourceBinding.Type color = useLegacyTypes
-        ? FieldResourceBinding.Type.COLOR_LEGACY
-        : FieldResourceBinding.Type.COLOR;
+    FieldResourceBinding.Type colorStateList = FieldResourceBinding.Type.COLOR_STATE_LIST;
+    FieldResourceBinding.Type color = FieldResourceBinding.Type.COLOR;
     builder.addResource(new FieldResourceBinding(
         resourceId,
         name,
@@ -781,8 +774,7 @@ private void parseResourceDrawable(Element element,
     Map<Integer, Id> resourceIds = elementToIds(element, BindDrawable.class, new int[] {id, tint});
 
     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
-    builder.addResource(new FieldDrawableBinding(resourceIds.get(id), name, resourceIds.get(tint),
-        useLegacyTypes));
+    builder.addResource(new FieldDrawableBinding(resourceIds.get(id), name, resourceIds.get(tint)));
 
     erasedTargetNames.add(enclosingElement);
   }
@@ -854,7 +846,7 @@ private void parseResourceFont(Element element,
 
     BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
     Id resourceId = elementToId(element, BindFont.class, bindFont.value());
-    builder.addResource(new FieldTypefaceBinding(resourceId, name, style, useLegacyTypes));
+    builder.addResource(new FieldTypefaceBinding(resourceId, name, style));
 
     erasedTargetNames.add(enclosingElement);
   }
@@ -1361,14 +1353,6 @@ private static boolean isListenerRequired(ExecutableElement element) {
     return null;
   }
 
-  /**
-   * Check for an AndroidX type required by the runtime to determine whether we're in AndroidX or
-   * using legacy support library types.
-   */
-  private static boolean hasAndroidX(Elements elements) {
-    return elements.getTypeElement("androidx.core.content.ContextCompat") != null;
-  }
-
   private static class RScanner extends TreeScanner {
     Map<Integer, Id> resourceIds = new LinkedHashMap<>();
 
diff --git a/butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java b/butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java
index ac44d7e2..b888a3f0 100644
--- a/butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java
+++ b/butterknife-compiler/src/main/java/butterknife/compiler/FieldDrawableBinding.java
@@ -2,7 +2,6 @@
 
 import com.squareup.javapoet.CodeBlock;
 
-import static butterknife.compiler.BindingSet.CONTEXT_COMPAT_LEGACY;
 import static butterknife.compiler.BindingSet.CONTEXT_COMPAT;
 import static butterknife.compiler.BindingSet.UTILS;
 import static butterknife.internal.Constants.NO_RES_ID;
@@ -11,13 +10,11 @@
   private final Id id;
   private final String name;
   private final Id tintAttributeId;
-  private final boolean useLegacyTypes;
 
-  FieldDrawableBinding(Id id, String name, Id tintAttributeId, boolean useLegacyTypes) {
+  FieldDrawableBinding(Id id, String name, Id tintAttributeId) {
     this.id = id;
     this.name = name;
     this.tintAttributeId = tintAttributeId;
-    this.useLegacyTypes = useLegacyTypes;
   }
 
   @Override public Id id() {
@@ -36,7 +33,6 @@
     if (sdk >= 21) {
       return CodeBlock.of("target.$L = context.getDrawable($L)", name, id.code);
     }
-    return CodeBlock.of("target.$L = $T.getDrawable(context, $L)", name,
-        useLegacyTypes ? CONTEXT_COMPAT_LEGACY : CONTEXT_COMPAT, id.code);
+    return CodeBlock.of("target.$L = $T.getDrawable(context, $L)", name, CONTEXT_COMPAT, id.code);
   }
 }
diff --git a/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java b/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java
index 80e0a9fe..4bf9e7be 100644
--- a/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java
+++ b/butterknife-compiler/src/main/java/butterknife/compiler/FieldResourceBinding.java
@@ -1,6 +1,6 @@
 package butterknife.compiler;
 
-import android.support.annotation.Nullable;
+import androidx.annotation.Nullable;
 import com.google.common.collect.ImmutableList;
 import com.google.errorprone.annotations.Immutable;
 import com.squareup.javapoet.ClassName;
@@ -13,13 +13,8 @@
   enum Type {
     BITMAP(new ResourceMethod(BindingSet.BITMAP_FACTORY, "decodeResource", true, 1)),
     BOOL("getBoolean"),
-    COLOR_LEGACY(new ResourceMethod(BindingSet.CONTEXT_COMPAT_LEGACY, "getColor", false, 1),
-        new ResourceMethod(null, "getColor", false, 23)),
     COLOR(new ResourceMethod(BindingSet.CONTEXT_COMPAT, "getColor", false, 1),
         new ResourceMethod(null, "getColor", false, 23)),
-    COLOR_STATE_LIST_LEGACY(
-        new ResourceMethod(BindingSet.CONTEXT_COMPAT_LEGACY, "getColorStateList", false, 1),
-        new ResourceMethod(null, "getColorStateList", false, 23)),
     COLOR_STATE_LIST(new ResourceMethod(BindingSet.CONTEXT_COMPAT,
         "getColorStateList", false, 1),
         new ResourceMethod(null, "getColorStateList", false, 23)),
diff --git a/butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java b/butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java
index b9c67bfc..21d79116 100644
--- a/butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java
+++ b/butterknife-compiler/src/main/java/butterknife/compiler/FieldTypefaceBinding.java
@@ -1,12 +1,10 @@
 package butterknife.compiler;
 
-import android.support.annotation.Nullable;
+import androidx.annotation.Nullable;
 import com.squareup.javapoet.ClassName;
 import com.squareup.javapoet.CodeBlock;
 
 final class FieldTypefaceBinding implements ResourceBinding {
-  private static final ClassName RESOURCES_COMPAT_LEGACY =
-      ClassName.get("android.support.v4.content.res", "ResourcesCompat");
   private static final ClassName RESOURCES_COMPAT =
       ClassName.get("androidx.core.content.res", "ResourcesCompat");
   private static final ClassName TYPEFACE = ClassName.get("android.graphics", "Typeface");
@@ -37,13 +35,11 @@
   private final Id id;
   private final String name;
   private final TypefaceStyles style;
-  private final boolean useLegacyTypes;
 
-  FieldTypefaceBinding(Id id, String name, TypefaceStyles style, boolean useLegacyTypes) {
+  FieldTypefaceBinding(Id id, String name, TypefaceStyles style) {
     this.id = id;
     this.name = name;
     this.style = style;
-    this.useLegacyTypes = useLegacyTypes;
   }
 
   @Override public Id id() {
@@ -57,8 +53,7 @@
   @Override public CodeBlock render(int sdk) {
     CodeBlock typeface = sdk >= 26
         ? CodeBlock.of("res.getFont($L)", id.code)
-        : CodeBlock.of("$T.getFont(context, $L)",
-            useLegacyTypes ? RESOURCES_COMPAT_LEGACY : RESOURCES_COMPAT, id.code);
+        : CodeBlock.of("$T.getFont(context, $L)", RESOURCES_COMPAT, id.code);
     if (style != TypefaceStyles.NORMAL) {
       typeface = CodeBlock.of("$1T.create($2L, $1T.$3L)", TYPEFACE, typeface, style);
     }
diff --git a/butterknife-compiler/src/main/java/butterknife/compiler/Id.java b/butterknife-compiler/src/main/java/butterknife/compiler/Id.java
index 597582a2..84fd6a1d 100644
--- a/butterknife-compiler/src/main/java/butterknife/compiler/Id.java
+++ b/butterknife-compiler/src/main/java/butterknife/compiler/Id.java
@@ -1,6 +1,6 @@
 package butterknife.compiler;
 
-import android.support.annotation.Nullable;
+import androidx.annotation.Nullable;
 import com.squareup.javapoet.ClassName;
 import com.squareup.javapoet.CodeBlock;
 import com.sun.tools.javac.code.Symbol;
diff --git a/butterknife-gradle-plugin/build.gradle b/butterknife-gradle-plugin/build.gradle
index 4b42d28b..9b027ef6 100644
--- a/butterknife-gradle-plugin/build.gradle
+++ b/butterknife-gradle-plugin/build.gradle
@@ -13,7 +13,6 @@ dependencies {
 
   testImplementation deps.junit
   testImplementation deps.truth
-  testImplementation deps.support.annotations
   testImplementation deps.androidx.annotations
   testImplementation deps.compiletesting
 }
diff --git a/butterknife-gradle-plugin/src/main/java/butterknife/plugin/ButterKnifePlugin.kt b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/ButterKnifePlugin.kt
index 23992345..d72b63a9 100644
--- a/butterknife-gradle-plugin/src/main/java/butterknife/plugin/ButterKnifePlugin.kt
+++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/ButterKnifePlugin.kt
@@ -55,7 +55,6 @@ class ButterKnifePlugin : Plugin<Project> {
 
   private fun configureR2Generation(project: Project, variants: DomainObjectSet<out BaseVariant>) {
     variants.all { variant ->
-      val useAndroidX = (project.findProperty("android.useAndroidX") as String?)?.toBoolean() ?: false
       val outputDir = project.buildDir.resolve(
           "generated/source/r2/${variant.dirName}")
 
@@ -80,7 +79,6 @@ class ButterKnifePlugin : Plugin<Project> {
           project.tasks.create("generate${variant.name.capitalize()}R2", R2Generator::class.java) {
             it.outputDir = outputDir
             it.rFile = rFile
-            it.useAndroidX = useAndroidX
             it.packageName = rPackage
             it.className = "R2"
             variant.registerJavaGeneratingTask(it, outputDir)
@@ -91,6 +89,6 @@ class ButterKnifePlugin : Plugin<Project> {
   }
 
   private operator fun <T : Any> ExtensionContainer.get(type: KClass<T>): T {
-    return getByType(type.java)!!
+    return getByType(type.java)
   }
 }
diff --git a/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.kt b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.kt
index d337564c..463a7531 100644
--- a/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.kt
+++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/FinalRClassBuilder.kt
@@ -11,7 +11,6 @@ import javax.lang.model.element.Modifier.STATIC
 
 
 private const val ANNOTATION_PACKAGE = "androidx.annotation"
-private const val ANNOTATION_PACKAGE_LEGACY = "android.support.annotation"
 internal val SUPPORTED_TYPES = setOf("anim", "array", "attr", "bool", "color", "dimen",
     "drawable", "id", "integer", "layout", "menu", "plurals", "string", "style", "styleable")
 
@@ -21,8 +20,7 @@ internal val SUPPORTED_TYPES = setOf("anim", "array", "attr", "bool", "color", "
  */
 class FinalRClassBuilder(
   private val packageName: String,
-  private val className: String,
-  private val useLegacyTypes: Boolean
+  private val className: String
 ) {
 
   private var resourceTypes = mutableMapOf<String, TypeSpec.Builder>()
@@ -58,8 +56,7 @@ class FinalRClassBuilder(
   }
 
   private fun getSupportAnnotationClass(type: String): ClassName {
-    val supportPackage = if (useLegacyTypes) ANNOTATION_PACKAGE_LEGACY else ANNOTATION_PACKAGE
-    return ClassName.get(supportPackage, type.capitalize(Locale.US) + "Res")
+    return ClassName.get(ANNOTATION_PACKAGE, type.capitalize(Locale.US) + "Res")
   }
 
   // TODO https://youtrack.jetbrains.com/issue/KT-28933
diff --git a/butterknife-gradle-plugin/src/main/java/butterknife/plugin/R2Generator.kt b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/R2Generator.kt
index cd9d88d8..96e723d0 100644
--- a/butterknife-gradle-plugin/src/main/java/butterknife/plugin/R2Generator.kt
+++ b/butterknife-gradle-plugin/src/main/java/butterknife/plugin/R2Generator.kt
@@ -15,9 +15,6 @@ open class R2Generator : DefaultTask() {
   @get:InputFiles
   var rFile: FileCollection? = null
 
-  @get:Input
-  var useAndroidX: Boolean? = null
-
   @get:Input
   var packageName: String? = null
 
@@ -27,7 +24,7 @@ open class R2Generator : DefaultTask() {
   @Suppress("unused") // Invoked by Gradle.
   @TaskAction
   fun brewJava() {
-    brewJava(rFile!!.singleFile, outputDir!!, packageName!!, className!!, !useAndroidX!!)
+    brewJava(rFile!!.singleFile, outputDir!!, packageName!!, className!!)
   }
 }
 
@@ -35,10 +32,9 @@ fun brewJava(
   rFile: File,
   outputDir: File,
   packageName: String,
-  className: String,
-  useLegacyTypes: Boolean
+  className: String
 ) {
-  FinalRClassBuilder(packageName, className, useLegacyTypes)
+  FinalRClassBuilder(packageName, className)
       .also { ResourceSymbolListReader(it).readSymbolTable(rFile) }
       .build()
       .writeTo(outputDir)
diff --git a/butterknife-gradle-plugin/src/test/build.gradle b/butterknife-gradle-plugin/src/test/build.gradle
index 670488ac..92f5a7c9 100644
--- a/butterknife-gradle-plugin/src/test/build.gradle
+++ b/butterknife-gradle-plugin/src/test/build.gradle
@@ -62,5 +62,5 @@ android {
 }
 
 dependencies {
-    implementation "com.android.support:support-v4:28.0.0"
+    implementation "androidx.core:core:1.0.0"
 }
diff --git a/butterknife-gradle-plugin/src/test/java/butterknife/plugin/FinalRClassBuilderTest.kt b/butterknife-gradle-plugin/src/test/java/butterknife/plugin/FinalRClassBuilderTest.kt
index 391ea62e..656cdddb 100644
--- a/butterknife-gradle-plugin/src/test/java/butterknife/plugin/FinalRClassBuilderTest.kt
+++ b/butterknife-gradle-plugin/src/test/java/butterknife/plugin/FinalRClassBuilderTest.kt
@@ -7,12 +7,8 @@ import org.junit.Assert.assertEquals
 import org.junit.Rule
 import org.junit.Test
 import org.junit.rules.TemporaryFolder
-import org.junit.runner.RunWith
-import org.junit.runners.Parameterized
-import org.junit.runners.Parameterized.Parameters
 
-@RunWith(Parameterized::class)
-class FinalRClassBuilderTest(private val useLegacyTypes: Boolean) {
+class FinalRClassBuilderTest {
   @Rule @JvmField val tempFolder = TemporaryFolder()
 
   @Test fun brewJava() {
@@ -22,21 +18,14 @@ class FinalRClassBuilderTest(private val useLegacyTypes: Boolean) {
     }
 
     val outputDir = tempFolder.newFolder()
-    brewJava(rFile, outputDir, packageName, "R2", useLegacyTypes)
+    brewJava(rFile, outputDir, packageName, "R2")
 
     val actual = outputDir.resolve("com/butterknife/example/R2.java").readText()
-    var expected = javaClass.getResource("/fixtures/R2.java").readText()
-    if (useLegacyTypes) {
-      expected = expected.replace("import androidx.", "import android.support.")
-    }
+    val expected = javaClass.getResource("/fixtures/R2.java").readText()
 
     assertEquals(expected.trim(), actual.trim())
 
     val actualJava = JavaFileObjects.forSourceString("$packageName.R2", actual)
     assertAbout(javaSource()).that(actualJava).compilesWithoutError()
   }
-
-  companion object {
-    @JvmStatic @Parameters(name="useLegacyTypes={0}") fun data() = listOf(false, true)
-  }
 }
diff --git a/butterknife-integration-test/build.gradle b/butterknife-integration-test/build.gradle
index dbe2ab9d..53b0955f 100644
--- a/butterknife-integration-test/build.gradle
+++ b/butterknife-integration-test/build.gradle
@@ -67,6 +67,6 @@ dependencies {
 
   androidTestImplementation deps.junit
   androidTestImplementation deps.truth
-  androidTestImplementation deps.support.test.runner
-  androidTestImplementation deps.support.test.rules
+  androidTestImplementation deps.androidx.test.runner
+  androidTestImplementation deps.androidx.test.rules
 }
diff --git a/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/OnClickTest.java b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/OnClickTest.java
index 8099272e..c517c0aa 100644
--- a/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/OnClickTest.java
+++ b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/OnClickTest.java
@@ -1,12 +1,12 @@
 package com.example.butterknife.functional;
 
 import android.content.Context;
-import android.support.test.InstrumentationRegistry;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
 import android.widget.FrameLayout;
 import android.widget.TextView;
+import androidx.test.InstrumentationRegistry;
 import butterknife.ButterKnife;
 import butterknife.OnClick;
 import butterknife.Optional;
diff --git a/butterknife-integration-test/src/androidTest/java/com/example/butterknife/library/SimpleActivityTest.java b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/library/SimpleActivityTest.java
index 3e2d8fab..d7da3011 100644
--- a/butterknife-integration-test/src/androidTest/java/com/example/butterknife/library/SimpleActivityTest.java
+++ b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/library/SimpleActivityTest.java
@@ -1,6 +1,6 @@
 package com.example.butterknife.library;
 
-import android.support.test.rule.ActivityTestRule;
+import androidx.test.rule.ActivityTestRule;
 import butterknife.ButterKnife;
 import butterknife.Unbinder;
 import com.example.butterknife.R;
diff --git a/butterknife-integration-test/src/androidTest/java/com/example/butterknife/library/SimpleAdapterTest.java b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/library/SimpleAdapterTest.java
index a086835c..382a22df 100644
--- a/butterknife-integration-test/src/androidTest/java/com/example/butterknife/library/SimpleAdapterTest.java
+++ b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/library/SimpleAdapterTest.java
@@ -1,8 +1,8 @@
 package com.example.butterknife.library;
 
 import android.content.Context;
-import android.support.test.InstrumentationRegistry;
 import android.view.View;
+import androidx.test.InstrumentationRegistry;
 import com.example.butterknife.R;
 import org.junit.Test;
 
diff --git a/butterknife-integration-test/src/androidTest/java/com/example/butterknife/unbinder/UnbinderTest.java b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/unbinder/UnbinderTest.java
index 626bd17a..81eb766d 100644
--- a/butterknife-integration-test/src/androidTest/java/com/example/butterknife/unbinder/UnbinderTest.java
+++ b/butterknife-integration-test/src/androidTest/java/com/example/butterknife/unbinder/UnbinderTest.java
@@ -1,10 +1,10 @@
 package com.example.butterknife.unbinder;
 
 import android.content.Context;
-import android.support.test.InstrumentationRegistry;
 import android.view.View;
 import android.widget.Button;
 import android.widget.FrameLayout;
+import androidx.test.InstrumentationRegistry;
 import butterknife.ButterKnife;
 import butterknife.Unbinder;
 import org.junit.Test;
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/A.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/A.java
index 5f4db917..f1344c69 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/A.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/A.java
@@ -1,7 +1,7 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
 import android.view.View;
+import androidx.annotation.ColorInt;
 import butterknife.BindColor;
 import butterknife.ButterKnife;
 
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/B.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/B.java
index 59b87e06..d6115123 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/B.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/B.java
@@ -1,7 +1,7 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
 import android.view.View;
+import androidx.annotation.ColorInt;
 import butterknife.BindColor;
 import butterknife.ButterKnife;
 
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/C.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/C.java
index ee69cb08..f5568184 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/C.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/C.java
@@ -1,7 +1,7 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
 import android.view.View;
+import androidx.annotation.ColorInt;
 import butterknife.BindColor;
 import butterknife.BindView;
 import butterknife.ButterKnife;
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/D.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/D.java
index 1ea1ff88..3e760279 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/D.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/D.java
@@ -1,7 +1,7 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
 import android.view.View;
+import androidx.annotation.ColorInt;
 import butterknife.BindColor;
 import butterknife.ButterKnife;
 
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/E.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/E.java
index 5411da11..4f54510c 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/E.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/E.java
@@ -1,7 +1,7 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
 import android.view.View;
+import androidx.annotation.ColorInt;
 import butterknife.BindColor;
 import butterknife.ButterKnife;
 
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/F.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/F.java
index 838a2dcf..bedf258e 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/F.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/F.java
@@ -1,7 +1,7 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
 import android.view.View;
+import androidx.annotation.ColorInt;
 import butterknife.BindColor;
 import butterknife.ButterKnife;
 
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/G.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/G.java
index 497b9f4c..e643bf65 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/G.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/G.java
@@ -1,7 +1,7 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
 import android.view.View;
+import androidx.annotation.ColorInt;
 import butterknife.BindColor;
 import butterknife.BindView;
 import butterknife.ButterKnife;
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/H.java b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/H.java
index 7c713ab6..c4dab646 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/H.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/unbinder/H.java
@@ -1,7 +1,7 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
 import android.view.View;
+import androidx.annotation.ColorInt;
 import butterknife.BindColor;
 import butterknife.BindView;
 import butterknife.ButterKnife;
diff --git a/butterknife-reflect/src/main/java/butterknife/ButterKnife.java b/butterknife-reflect/src/main/java/butterknife/ButterKnife.java
index c35f9aad..cded1015 100644
--- a/butterknife-reflect/src/main/java/butterknife/ButterKnife.java
+++ b/butterknife-reflect/src/main/java/butterknife/ButterKnife.java
@@ -10,11 +10,6 @@
 import android.graphics.BitmapFactory;
 import android.graphics.Typeface;
 import android.graphics.drawable.Drawable;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.annotation.UiThread;
-import android.support.v4.content.ContextCompat;
-import android.support.v4.content.res.ResourcesCompat;
 import android.util.Log;
 import android.view.KeyEvent;
 import android.view.MotionEvent;
@@ -23,6 +18,11 @@
 import android.widget.AdapterView;
 import android.widget.CompoundButton;
 import android.widget.TextView;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.annotation.UiThread;
+import androidx.core.content.ContextCompat;
+import androidx.core.content.res.ResourcesCompat;
 import butterknife.internal.Constants;
 import butterknife.internal.Utils;
 import java.lang.annotation.Annotation;
diff --git a/butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java b/butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java
index 87923fc8..5e5adb47 100644
--- a/butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java
+++ b/butterknife-reflect/src/main/java/butterknife/CompositeUnbinder.java
@@ -1,7 +1,7 @@
 package butterknife;
 
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import java.util.List;
 
 final class CompositeUnbinder implements Unbinder {
diff --git a/butterknife-runtime/build.gradle b/butterknife-runtime/build.gradle
index 6aa0345b..d978bcee 100644
--- a/butterknife-runtime/build.gradle
+++ b/butterknife-runtime/build.gradle
@@ -35,13 +35,13 @@ android {
 
 dependencies {
   api project(':butterknife-annotations')
-  api deps.support.compat
+  api deps.androidx.core
 
   lintChecks project(':butterknife-lint')
 
   androidTestImplementation deps.junit
   androidTestImplementation deps.truth
-  androidTestImplementation deps.support.test.runner
+  androidTestImplementation deps.androidx.test.runner
   androidTestAnnotationProcessor project(':butterknife-compiler')
 
   testImplementation deps.junit
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/ViewCollectionsTest.java b/butterknife-runtime/src/androidTest/java/butterknife/ViewCollectionsTest.java
index d0a4e890..4694c3f9 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/ViewCollectionsTest.java
+++ b/butterknife-runtime/src/androidTest/java/butterknife/ViewCollectionsTest.java
@@ -1,11 +1,9 @@
 package butterknife;
 
 import android.content.Context;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.test.InstrumentationRegistry;
 import android.util.Property;
 import android.view.View;
+import androidx.test.InstrumentationRegistry;
 import java.util.List;
 import org.junit.Test;
 
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindArrayTest.java b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindArrayTest.java
index 1efa8bb6..fe69ed57 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindArrayTest.java
+++ b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindArrayTest.java
@@ -1,7 +1,7 @@
 package butterknife.functional;
 
 import android.content.Context;
-import android.support.test.InstrumentationRegistry;
+import androidx.test.InstrumentationRegistry;
 import butterknife.BindArray;
 import butterknife.Unbinder;
 import butterknife.runtime.test.R;
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindBitmapTest.java b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindBitmapTest.java
index b15fe241..60098512 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindBitmapTest.java
+++ b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindBitmapTest.java
@@ -3,7 +3,7 @@
 import android.content.Context;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
-import android.support.test.InstrumentationRegistry;
+import androidx.test.InstrumentationRegistry;
 import butterknife.BindBitmap;
 import butterknife.Unbinder;
 import butterknife.runtime.test.R;
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindBoolTest.java b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindBoolTest.java
index 627d4e98..f44ceaa3 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindBoolTest.java
+++ b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindBoolTest.java
@@ -1,7 +1,7 @@
 package butterknife.functional;
 
 import android.content.Context;
-import android.support.test.InstrumentationRegistry;
+import androidx.test.InstrumentationRegistry;
 import butterknife.BindBool;
 import butterknife.Unbinder;
 import butterknife.runtime.test.R;
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindColorTest.java b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindColorTest.java
index bc4ac69d..e4a19839 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindColorTest.java
+++ b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindColorTest.java
@@ -2,7 +2,7 @@
 
 import android.content.Context;
 import android.content.res.ColorStateList;
-import android.support.test.InstrumentationRegistry;
+import androidx.test.InstrumentationRegistry;
 import butterknife.BindColor;
 import butterknife.Unbinder;
 import butterknife.runtime.test.R;
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindDimenTest.java b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindDimenTest.java
index 78001649..a716d0e9 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindDimenTest.java
+++ b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindDimenTest.java
@@ -1,7 +1,7 @@
 package butterknife.functional;
 
 import android.content.Context;
-import android.support.test.InstrumentationRegistry;
+import androidx.test.InstrumentationRegistry;
 import butterknife.BindDimen;
 import butterknife.Unbinder;
 import butterknife.runtime.test.R;
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindDrawableTest.java b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindDrawableTest.java
index b9f7c063..6b9aee1c 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindDrawableTest.java
+++ b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindDrawableTest.java
@@ -2,7 +2,7 @@
 
 import android.content.Context;
 import android.graphics.drawable.Drawable;
-import android.support.test.InstrumentationRegistry;
+import androidx.test.InstrumentationRegistry;
 import butterknife.BindDrawable;
 import butterknife.Unbinder;
 import butterknife.runtime.test.R;
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindFloatTest.java b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindFloatTest.java
index a835f842..fad7ceb2 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindFloatTest.java
+++ b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindFloatTest.java
@@ -1,8 +1,8 @@
 package butterknife.functional;
 
 import android.content.Context;
-import android.support.test.InstrumentationRegistry;
 import android.util.TypedValue;
+import androidx.test.InstrumentationRegistry;
 import butterknife.BindFloat;
 import butterknife.Unbinder;
 import butterknife.runtime.test.R;
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindIntTest.java b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindIntTest.java
index 9f6e150e..5410525f 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindIntTest.java
+++ b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindIntTest.java
@@ -1,7 +1,7 @@
 package butterknife.functional;
 
 import android.content.Context;
-import android.support.test.InstrumentationRegistry;
+import androidx.test.InstrumentationRegistry;
 import butterknife.BindInt;
 import butterknife.Unbinder;
 import butterknife.runtime.test.R;
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindStringTest.java b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindStringTest.java
index 4a0981a3..825b2d48 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/functional/BindStringTest.java
+++ b/butterknife-runtime/src/androidTest/java/butterknife/functional/BindStringTest.java
@@ -1,7 +1,7 @@
 package butterknife.functional;
 
 import android.content.Context;
-import android.support.test.InstrumentationRegistry;
+import androidx.test.InstrumentationRegistry;
 import butterknife.BindString;
 import butterknife.Unbinder;
 import butterknife.runtime.test.R;
diff --git a/butterknife-runtime/src/androidTest/java/butterknife/internal/UtilsTest.java b/butterknife-runtime/src/androidTest/java/butterknife/internal/UtilsTest.java
index f3227a2f..2470e710 100644
--- a/butterknife-runtime/src/androidTest/java/butterknife/internal/UtilsTest.java
+++ b/butterknife-runtime/src/androidTest/java/butterknife/internal/UtilsTest.java
@@ -1,8 +1,8 @@
 package butterknife.internal;
 
 import android.content.Context;
-import android.support.test.InstrumentationRegistry;
 import android.view.View;
+import androidx.test.InstrumentationRegistry;
 import org.junit.Test;
 
 import static com.google.common.truth.Truth.assertThat;
diff --git a/butterknife-runtime/src/main/java/butterknife/Action.java b/butterknife-runtime/src/main/java/butterknife/Action.java
index b7a27918..596f3572 100644
--- a/butterknife-runtime/src/main/java/butterknife/Action.java
+++ b/butterknife-runtime/src/main/java/butterknife/Action.java
@@ -1,8 +1,8 @@
 package butterknife;
 
-import android.support.annotation.NonNull;
-import android.support.annotation.UiThread;
 import android.view.View;
+import androidx.annotation.NonNull;
+import androidx.annotation.UiThread;
 
 /** An action that can be applied to a list of views. */
 public interface Action<T extends View> {
diff --git a/butterknife-runtime/src/main/java/butterknife/Setter.java b/butterknife-runtime/src/main/java/butterknife/Setter.java
index ccbae905..abecb72f 100644
--- a/butterknife-runtime/src/main/java/butterknife/Setter.java
+++ b/butterknife-runtime/src/main/java/butterknife/Setter.java
@@ -1,9 +1,9 @@
 package butterknife;
 
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.annotation.UiThread;
 import android.view.View;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.annotation.UiThread;
 
 /** A setter that can apply a value to a list of views. */
 public interface Setter<T extends View, V> {
diff --git a/butterknife-runtime/src/main/java/butterknife/Unbinder.java b/butterknife-runtime/src/main/java/butterknife/Unbinder.java
index 663fc869..0b477534 100644
--- a/butterknife-runtime/src/main/java/butterknife/Unbinder.java
+++ b/butterknife-runtime/src/main/java/butterknife/Unbinder.java
@@ -1,6 +1,6 @@
 package butterknife;
 
-import android.support.annotation.UiThread;
+import androidx.annotation.UiThread;
 
 /** An unbinder contract that will unbind views when called. */
 public interface Unbinder {
diff --git a/butterknife-runtime/src/main/java/butterknife/ViewCollections.java b/butterknife-runtime/src/main/java/butterknife/ViewCollections.java
index 7b10fdae..9a4c1cf8 100644
--- a/butterknife-runtime/src/main/java/butterknife/ViewCollections.java
+++ b/butterknife-runtime/src/main/java/butterknife/ViewCollections.java
@@ -1,10 +1,10 @@
 package butterknife;
 
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.annotation.UiThread;
 import android.util.Property;
 import android.view.View;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.annotation.UiThread;
 import java.util.List;
 
 /** Convenience methods for working with view collections. */
diff --git a/butterknife-runtime/src/main/java/butterknife/internal/Utils.java b/butterknife-runtime/src/main/java/butterknife/internal/Utils.java
index 7f9339cd..fd53ce5e 100644
--- a/butterknife-runtime/src/main/java/butterknife/internal/Utils.java
+++ b/butterknife-runtime/src/main/java/butterknife/internal/Utils.java
@@ -3,15 +3,15 @@
 import android.content.Context;
 import android.content.res.Resources;
 import android.graphics.drawable.Drawable;
-import android.support.annotation.AttrRes;
-import android.support.annotation.DimenRes;
-import android.support.annotation.DrawableRes;
-import android.support.annotation.IdRes;
-import android.support.annotation.UiThread;
-import android.support.v4.content.ContextCompat;
-import android.support.v4.graphics.drawable.DrawableCompat;
 import android.util.TypedValue;
 import android.view.View;
+import androidx.annotation.AttrRes;
+import androidx.annotation.DimenRes;
+import androidx.annotation.DrawableRes;
+import androidx.annotation.IdRes;
+import androidx.annotation.UiThread;
+import androidx.core.content.ContextCompat;
+import androidx.core.graphics.drawable.DrawableCompat;
 import java.lang.reflect.Array;
 import java.util.List;
 
diff --git a/butterknife-runtime/src/test/java/butterknife/BindAnimTest.java b/butterknife-runtime/src/test/java/butterknife/BindAnimTest.java
index 3cbff425..282f660f 100644
--- a/butterknife-runtime/src/test/java/butterknife/BindAnimTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/BindAnimTest.java
@@ -26,10 +26,10 @@
         + "// Generated code from Butter Knife. Do not modify!\n"
         + "package test;\n"
         + "import android.content.Context;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.view.animation.AnimationUtils;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/BindArrayTest.java b/butterknife-runtime/src/test/java/butterknife/BindArrayTest.java
index fb228829..36eec904 100644
--- a/butterknife-runtime/src/test/java/butterknife/BindArrayTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/BindArrayTest.java
@@ -24,9 +24,9 @@
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/BindColorTest.java b/butterknife-runtime/src/test/java/butterknife/BindColorTest.java
index 558e06ec..d6f83f3e 100644
--- a/butterknife-runtime/src/test/java/butterknife/BindColorTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/BindColorTest.java
@@ -22,9 +22,9 @@
         + "// Generated code from Butter Knife. Do not modify!\n"
         + "package test;\n"
         + "import android.content.Context;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
@@ -73,9 +73,9 @@
         + "// Generated code from Butter Knife. Do not modify!\n"
         + "package test;\n"
         + "import android.content.Context;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java b/butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java
index 742fa1c5..ebed6890 100644
--- a/butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/BindDrawableTest.java
@@ -23,9 +23,9 @@
         + "// Generated code from Butter Knife. Do not modify!\n"
         + "package test;\n"
         + "import android.content.Context;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
@@ -74,9 +74,9 @@
         + "// Generated code from Butter Knife. Do not modify!\n"
         + "package test;\n"
         + "import android.content.Context;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.Deprecated;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/BindFontTest.java b/butterknife-runtime/src/test/java/butterknife/BindFontTest.java
index 290853aa..33530604 100644
--- a/butterknife-runtime/src/test/java/butterknife/BindFontTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/BindFontTest.java
@@ -3,7 +3,6 @@
 import butterknife.compiler.ButterKnifeProcessor;
 import com.google.testing.compile.JavaFileObjects;
 import javax.tools.JavaFileObject;
-import org.junit.Ignore;
 import org.junit.Test;
 
 import static com.google.common.truth.Truth.assertAbout;
@@ -24,10 +23,10 @@
         + "// Generated code from Butter Knife. Do not modify!\n"
         + "package test;\n"
         + "import android.content.Context;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
-        + "import android.support.v4.content.res.ResourcesCompat;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
+        + "import androidx.core.content.res.ResourcesCompat;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
@@ -77,9 +76,9 @@
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
@@ -130,10 +129,10 @@
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.graphics.Typeface;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
-        + "import android.support.v4.content.res.ResourcesCompat;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
+        + "import androidx.core.content.res.ResourcesCompat;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
@@ -184,9 +183,9 @@
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
         + "import android.graphics.Typeface;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/BindViewTest.java b/butterknife-runtime/src/test/java/butterknife/BindViewTest.java
index c252098e..6bd4a21e 100644
--- a/butterknife-runtime/src/test/java/butterknife/BindViewTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/BindViewTest.java
@@ -7,7 +7,6 @@
 import javax.tools.StandardLocation;
 import org.junit.Test;
 
-import static butterknife.TestStubs.ANDROIDX_CONTEXT_COMPAT;
 import static com.google.common.truth.Truth.assertAbout;
 import static com.google.testing.compile.JavaSourceSubjectFactory.javaSource;
 import static com.google.testing.compile.JavaSourcesSubjectFactory.javaSources;
@@ -24,51 +23,6 @@
         + "}"
     );
 
-    JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
-        + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
-        + "import android.view.View;\n"
-        + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Utils;\n"
-        + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding implements Unbinder {\n"
-        + "  private Test target;\n"
-        + "  @UiThread\n"
-        + "  public Test_ViewBinding(Test target, View source) {\n"
-        + "    this.target = target;\n"
-        + "    target.thing = Utils.findRequiredView(source, 1, \"field 'thing'\");\n"
-        + "  }\n"
-        + "  @Override\n"
-        + "  @CallSuper\n"
-        + "  public void unbind() {\n"
-        + "    Test target = this.target;\n"
-        + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
-        + "    this.target = null;\n"
-        + "    target.thing = null;\n"
-        + "  }\n"
-        + "}"
-    );
-
-    assertAbout(javaSource()).that(source)
-        .withCompilerOptions("-Xlint:-processing")
-        .processedWith(new ButterKnifeProcessor())
-        .compilesWithoutWarnings()
-        .and()
-        .generatesSources(bindingSource);
-  }
-
-  @Test public void bindingViewAndroidX() {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
-        + "package test;\n"
-        + "import android.view.View;\n"
-        + "import butterknife.BindView;\n"
-        + "public class Test {\n"
-        + "    @BindView(1) View thing;\n"
-        + "}"
-    );
-
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
         + "import android.view.View;\n"
@@ -96,8 +50,8 @@
         + "}"
     );
 
-    assertAbout(javaSources())
-        .that(asList(source, ANDROIDX_CONTEXT_COMPAT))
+    assertAbout(javaSource())
+        .that(source)
         .withCompilerOptions("-Xlint:-processing")
         .processedWith(new ButterKnifeProcessor())
         .compilesWithoutWarnings()
@@ -117,9 +71,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
@@ -161,10 +115,10 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.TextView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
@@ -241,8 +195,8 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -292,9 +246,9 @@
 
     JavaFileObject bindingBaseSource = JavaFileObjects.forSourceString("test/Base_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -319,8 +273,8 @@
 
     JavaFileObject bindingTestSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
@@ -365,9 +319,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Outer$Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -410,9 +364,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package com.Example;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -456,9 +410,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -502,10 +456,10 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.TextView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -552,9 +506,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
         + "import butterknife.internal.Utils;\n"
@@ -612,10 +566,10 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.Button;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
         + "import butterknife.internal.Utils;\n"
@@ -690,9 +644,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
@@ -749,9 +703,9 @@
 
     JavaFileObject binding1Source = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -776,8 +730,8 @@
 
     JavaFileObject binding2Source = JavaFileObjects.forSourceString("test/TestOne_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
@@ -835,9 +789,9 @@
 
     JavaFileObject binding1Source = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -862,8 +816,8 @@
 
     JavaFileObject binding2Source = JavaFileObjects.forSourceString("test/TestOne_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/BindViewsTest.java b/butterknife-runtime/src/test/java/butterknife/BindViewsTest.java
index 437d1aee..25f1de40 100644
--- a/butterknife-runtime/src/test/java/butterknife/BindViewsTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/BindViewsTest.java
@@ -44,9 +44,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -92,9 +92,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -142,10 +142,10 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.TextView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -191,9 +191,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -239,10 +239,10 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.TextView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -289,9 +289,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -375,9 +375,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -424,9 +424,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -476,9 +476,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -631,9 +631,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -679,9 +679,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java b/butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java
index 0499d3c2..24c1a525 100644
--- a/butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/ExtendActivityTest.java
@@ -25,9 +25,9 @@
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
@@ -81,9 +81,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java b/butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java
index dc9a76b0..7f7c636b 100644
--- a/butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/ExtendDialogTest.java
@@ -28,9 +28,9 @@
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
@@ -87,9 +87,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java b/butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java
index 1e08dc32..c25d7d8c 100644
--- a/butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/ExtendViewTest.java
@@ -28,9 +28,9 @@
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
@@ -86,9 +86,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/OnCheckedChangedTest.java b/butterknife-runtime/src/test/java/butterknife/OnCheckedChangedTest.java
index b0b5fbd3..7eec5ce4 100644
--- a/butterknife-runtime/src/test/java/butterknife/OnCheckedChangedTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/OnCheckedChangedTest.java
@@ -20,10 +20,10 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.CompoundButton;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/OnClickTest.java b/butterknife-runtime/src/test/java/butterknife/OnClickTest.java
index 324f727e..d2df0551 100644
--- a/butterknife-runtime/src/test/java/butterknife/OnClickTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/OnClickTest.java
@@ -23,9 +23,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
         + "import butterknife.internal.Utils;\n"
@@ -88,11 +88,11 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.Button;\n"
         + "import android.widget.TextView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -191,9 +191,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
         + "import butterknife.internal.Utils;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java b/butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java
index f57edfcd..0b66e14b 100644
--- a/butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/OnEditorActionTest.java
@@ -20,11 +20,11 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.KeyEvent;\n"
         + "import android.view.View;\n"
         + "import android.widget.TextView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/OnFocusChangeTest.java b/butterknife-runtime/src/test/java/butterknife/OnFocusChangeTest.java
index d8216f1c..32bec043 100644
--- a/butterknife-runtime/src/test/java/butterknife/OnFocusChangeTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/OnFocusChangeTest.java
@@ -20,9 +20,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java b/butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java
index 03f334c4..31435325 100644
--- a/butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/OnItemClickTest.java
@@ -21,10 +21,10 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -82,10 +82,10 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -141,11 +141,11 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
         + "import android.widget.ListView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -201,11 +201,11 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
         + "import android.widget.ListView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -264,10 +264,10 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
@@ -319,10 +319,10 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java b/butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java
index 4f809dfc..2830fd80 100644
--- a/butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/OnItemLongClickTest.java
@@ -20,10 +20,10 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java b/butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java
index 05c5f249..11449b13 100644
--- a/butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/OnItemSelectedTest.java
@@ -21,10 +21,10 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -80,10 +80,10 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -141,10 +141,10 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -203,10 +203,10 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
         + "import android.widget.AdapterView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/OnLongClickTest.java b/butterknife-runtime/src/test/java/butterknife/OnLongClickTest.java
index 0926b2f3..73c7874a 100644
--- a/butterknife-runtime/src/test/java/butterknife/OnLongClickTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/OnLongClickTest.java
@@ -23,9 +23,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/OnPageChangeTest.java b/butterknife-runtime/src/test/java/butterknife/OnPageChangeTest.java
index 2326802e..cfd5ff8f 100644
--- a/butterknife-runtime/src/test/java/butterknife/OnPageChangeTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/OnPageChangeTest.java
@@ -5,9 +5,7 @@
 import javax.tools.JavaFileObject;
 import org.junit.Test;
 
-import static butterknife.TestStubs.ANDROIDX_CONTEXT_COMPAT;
 import static butterknife.TestStubs.ANDROIDX_VIEW_PAGER;
-import static butterknife.TestStubs.SUPPORT_VIEW_PAGER;
 import static com.google.common.truth.Truth.assertAbout;
 import static com.google.testing.compile.JavaSourcesSubjectFactory.javaSources;
 import static java.util.Arrays.asList;
@@ -22,70 +20,6 @@
         + "}"
     );
 
-    JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
-        + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
-        + "import android.support.v4.view.ViewPager;\n"
-        + "import android.view.View;\n"
-        + "import butterknife.Unbinder;\n"
-        + "import butterknife.internal.Utils;\n"
-        + "import java.lang.IllegalStateException;\n"
-        + "import java.lang.Override;\n"
-        + "public class Test_ViewBinding implements Unbinder {\n"
-        + "  private Test target;\n"
-        + "  private View view1;\n"
-        + "  private ViewPager.OnPageChangeListener view1OnPageChangeListener;\n"
-        + "  @UiThread\n"
-        + "  public Test_ViewBinding(final Test target, View source) {\n"
-        + "    this.target = target;\n"
-        + "    View view;\n"
-        + "    view = Utils.findRequiredView(source, 1, \"method 'doStuff'\");\n"
-        + "    view1 = view;\n"
-        + "    view1OnPageChangeListener = new ViewPager.OnPageChangeListener() {\n"
-        + "      @Override\n"
-        + "      public void onPageSelected(int p0) {\n"
-        + "        target.doStuff();\n"
-        + "      }\n"
-        + "      @Override\n"
-        + "      public void onPageScrolled(int p0, float p1, int p2) {\n"
-        + "      }\n"
-        + "      @Override\n"
-        + "      public void onPageScrollStateChanged(int p0) {\n"
-        + "      }\n"
-        + "    };\n"
-        + "    ((ViewPager) view).addOnPageChangeListener(view1OnPageChangeListener);\n"
-        + "  }\n"
-        + "  @Override\n"
-        + "  @CallSuper\n"
-        + "  public void unbind() {\n"
-        + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
-        + "    target = null;\n"
-        + "    ((ViewPager) view1).removeOnPageChangeListener(view1OnPageChangeListener);\n"
-        + "    view1OnPageChangeListener = null;\n"
-        + "    view1 = null;\n"
-        + "  }\n"
-        + "}"
-    );
-
-    assertAbout(javaSources())
-        .that(asList(source, SUPPORT_VIEW_PAGER))
-        .withCompilerOptions("-Xlint:-processing")
-        .processedWith(new ButterKnifeProcessor())
-        .compilesWithoutWarnings()
-        .and()
-        .generatesSources(bindingSource);
-  }
-
-  @Test public void pageChangeAndroidX() {
-    JavaFileObject source = JavaFileObjects.forSourceString("test.Test", ""
-        + "package test;\n"
-        + "import butterknife.OnPageChange;\n"
-        + "public class Test {\n"
-        + "  @OnPageChange(1) void doStuff() {}\n"
-        + "}"
-    );
-
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
         + "import android.view.View;\n"
@@ -133,7 +67,7 @@
     );
 
     assertAbout(javaSources())
-        .that(asList(source, ANDROIDX_VIEW_PAGER, ANDROIDX_CONTEXT_COMPAT))
+        .that(asList(source, ANDROIDX_VIEW_PAGER))
         .withCompilerOptions("-Xlint:-processing")
         .processedWith(new ButterKnifeProcessor())
         .compilesWithoutWarnings()
diff --git a/butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java b/butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java
index e1b75a68..dcc98467 100644
--- a/butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/OnTextChangedTest.java
@@ -20,12 +20,12 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.text.Editable;\n"
         + "import android.text.TextWatcher;\n"
         + "import android.view.View;\n"
         + "import android.widget.TextView;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.CharSequence;\n"
@@ -86,12 +86,12 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
             + "package test;\n"
-            + "import android.support.annotation.CallSuper;\n"
-            + "import android.support.annotation.UiThread;\n"
             + "import android.text.Editable;\n"
             + "import android.text.TextWatcher;\n"
             + "import android.view.View;\n"
             + "import android.widget.TextView;\n"
+            + "import androidx.annotation.CallSuper;\n"
+            + "import androidx.annotation.UiThread;\n"
             + "import butterknife.Unbinder;\n"
             + "import butterknife.internal.Utils;\n"
             + "import java.lang.CharSequence;\n"
@@ -152,12 +152,12 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
             + "package test;\n"
-            + "import android.support.annotation.CallSuper;\n"
-            + "import android.support.annotation.UiThread;\n"
             + "import android.text.Editable;\n"
             + "import android.text.TextWatcher;\n"
             + "import android.view.View;\n"
             + "import android.widget.TextView;\n"
+            + "import androidx.annotation.CallSuper;\n"
+            + "import androidx.annotation.UiThread;\n"
             + "import butterknife.Unbinder;\n"
             + "import butterknife.internal.Utils;\n"
             + "import java.lang.CharSequence;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/OnTouchTest.java b/butterknife-runtime/src/test/java/butterknife/OnTouchTest.java
index fe9b9eb7..fba1909a 100644
--- a/butterknife-runtime/src/test/java/butterknife/OnTouchTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/OnTouchTest.java
@@ -21,10 +21,10 @@
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
         + "import android.annotation.SuppressLint;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.MotionEvent;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/RClassTest.java b/butterknife-runtime/src/test/java/butterknife/RClassTest.java
index d03bede0..65acf98e 100644
--- a/butterknife-runtime/src/test/java/butterknife/RClassTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/RClassTest.java
@@ -91,9 +91,9 @@
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
@@ -243,9 +243,9 @@
     JavaFileObject bindingSourceBar = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "// Generated code from Butter Knife. Do not modify!\n"
         + "package test.bar;\n\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -277,9 +277,9 @@
     JavaFileObject bindingSourceFoo = JavaFileObjects.forSourceString("test/FooTest_ViewBinding", ""
         + "// Generated code from Butter Knife. Do not modify!\n"
         + "package test.foo;\n\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -338,9 +338,9 @@
         + "package test;\n"
         + "import android.content.Context;\n"
         + "import android.content.res.Resources;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
@@ -387,10 +387,10 @@
         + "// Generated code from Butter Knife. Do not modify!\n"
         + "package test;\n"
         + "import android.content.Context;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
-        + "import android.support.v4.content.ContextCompat;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
+        + "import androidx.core.content.ContextCompat;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
diff --git a/butterknife-runtime/src/test/java/butterknife/TestStubs.java b/butterknife-runtime/src/test/java/butterknife/TestStubs.java
index 8ff58539..df562958 100644
--- a/butterknife-runtime/src/test/java/butterknife/TestStubs.java
+++ b/butterknife-runtime/src/test/java/butterknife/TestStubs.java
@@ -4,10 +4,6 @@
 import javax.tools.JavaFileObject;
 
 final class TestStubs {
-  /**
-   * The presence of this type (and {@code androidx.annotation.NonNull}, which should be on the
-   * classpath already) trigger AndroidX emission.
-   */
   static final JavaFileObject ANDROIDX_CONTEXT_COMPAT =
       JavaFileObjects.forSourceString("androidx.core.content.ContextCompat", ""
           + "package androidx.core.content;\n"
@@ -26,18 +22,4 @@
           + "    void onPageScrollStateChanged(int state);\n"
           + "  }\n"
           + "}\n");
-
-  static final JavaFileObject SUPPORT_VIEW_PAGER =
-      JavaFileObjects.forSourceString("androidx.viewpager.widget.ViewPager", ""
-          + "package android.support.v4.view;\n"
-          + "\n"
-          + "public interface ViewPager {\n"
-          + "  void addOnPageChangeListener(OnPageChangeListener listener);\n"
-          + "  void removeOnPageChangeListener(OnPageChangeListener listener);\n"
-          + "  interface OnPageChangeListener {\n"
-          + "    void onPageScrolled(int position, float positionOffset, int positionOffsetPixels);\n"
-          + "    void onPageSelected(int position);\n"
-          + "    void onPageScrollStateChanged(int state);\n"
-          + "  }\n"
-          + "}\n");
 }
diff --git a/butterknife-runtime/src/test/java/butterknife/UnbinderTest.java b/butterknife-runtime/src/test/java/butterknife/UnbinderTest.java
index e2f06023..f9eb717a 100644
--- a/butterknife-runtime/src/test/java/butterknife/UnbinderTest.java
+++ b/butterknife-runtime/src/test/java/butterknife/UnbinderTest.java
@@ -28,9 +28,9 @@
 
     JavaFileObject bindingSource = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
         + "import butterknife.internal.Utils;\n"
@@ -108,9 +108,9 @@
 
     JavaFileObject binding1Source = JavaFileObjects.forSourceString("test/Test_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.Unbinder;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
         + "import butterknife.internal.Utils;\n"
@@ -145,8 +145,8 @@
 
     JavaFileObject binding2Source = JavaFileObjects.forSourceString("test/TestTwo_ViewBinding", ""
         + "package test;\n"
-        + "import android.support.annotation.UiThread;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.UiThread;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -190,8 +190,8 @@
   @Test public void fullIntegration() {
     JavaFileObject sourceA = JavaFileObjects.forSourceString("test.A", ""
         + "package test;\n"
-        + "import android.support.annotation.ColorInt;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.ColorInt;\n"
         + "import butterknife.BindColor;\n"
         + "public class A {\n"
         + "  @BindColor(android.R.color.black) @ColorInt int blackColor;\n"
@@ -201,8 +201,8 @@
 
     JavaFileObject sourceB = JavaFileObjects.forSourceString("test.B", ""
         + "package test;\n"
-        + "import android.support.annotation.ColorInt;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.ColorInt;\n"
         + "import butterknife.BindColor;\n"
         + "public class B extends A {\n"
         + "  @BindColor(android.R.color.white) @ColorInt int whiteColor;\n"
@@ -213,8 +213,8 @@
 
     JavaFileObject sourceC = JavaFileObjects.forSourceString("test.C", ""
         + "package test;\n"
-        + "import android.support.annotation.ColorInt;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.ColorInt;\n"
         + "import butterknife.BindView;\n"
         + "import butterknife.BindColor;\n"
         + "public class C extends B {\n"
@@ -227,8 +227,8 @@
 
     JavaFileObject sourceD = JavaFileObjects.forSourceString("test.D", ""
         + "package test;\n"
-        + "import android.support.annotation.ColorInt;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.ColorInt;\n"
         + "import butterknife.BindColor;\n"
         + "public class D extends C {\n"
         + "  @BindColor(android.R.color.darker_gray) @ColorInt int grayColor;\n"
@@ -239,8 +239,8 @@
 
     JavaFileObject sourceE = JavaFileObjects.forSourceString("test.E", ""
         + "package test;\n"
-        + "import android.support.annotation.ColorInt;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.ColorInt;\n"
         + "import butterknife.BindColor;\n"
         + "public class E extends C {\n"
         + "  @BindColor(android.R.color.background_dark) @ColorInt int backgroundDarkColor;\n"
@@ -251,8 +251,8 @@
 
     JavaFileObject sourceF = JavaFileObjects.forSourceString("test.F", ""
         + "package test;\n"
-        + "import android.support.annotation.ColorInt;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.ColorInt;\n"
         + "import butterknife.BindColor;\n"
         + "public class F extends D {\n"
         + "  @BindColor(android.R.color.background_light) @ColorInt int backgroundLightColor;\n"
@@ -263,8 +263,8 @@
 
     JavaFileObject sourceG = JavaFileObjects.forSourceString("test.G", ""
         + "package test;\n"
-        + "import android.support.annotation.ColorInt;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.ColorInt;\n"
         + "import butterknife.BindView;\n"
         + "import butterknife.BindColor;\n"
         + "import butterknife.OnClick;\n"
@@ -280,8 +280,8 @@
 
     JavaFileObject sourceH = JavaFileObjects.forSourceString("test.H", ""
         + "package test;\n"
-        + "import android.support.annotation.ColorInt;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.ColorInt;\n"
         + "import butterknife.BindView;\n"
         + "import butterknife.BindColor;\n"
         + "public class H extends G {\n"
@@ -296,10 +296,10 @@
         + "// Generated code from Butter Knife. Do not modify!\n"
         + "package test;\n"
         + "import android.content.Context;\n"
-        + "import android.support.annotation.CallSuper;\n"
-        + "import android.support.annotation.UiThread;\n"
-        + "import android.support.v4.content.ContextCompat;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.CallSuper;\n"
+        + "import androidx.annotation.UiThread;\n"
+        + "import androidx.core.content.ContextCompat;\n"
         + "import butterknife.Unbinder;\n"
         + "import java.lang.Deprecated;\n"
         + "import java.lang.Override;\n"
@@ -328,9 +328,9 @@
         + "// Generated code from Butter Knife. Do not modify!\n"
         + "package test;\n"
         + "import android.content.Context;\n"
-        + "import android.support.annotation.UiThread;\n"
-        + "import android.support.v4.content.ContextCompat;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.UiThread;\n"
+        + "import androidx.core.content.ContextCompat;\n"
         + "import java.lang.Deprecated;\n"
         + "public class B_ViewBinding extends A_ViewBinding {\n"
         + "  /**\n"
@@ -354,9 +354,9 @@
         + "// Generated code from Butter Knife. Do not modify!\n"
         + "package test;\n"
         + "import android.content.Context;\n"
-        + "import android.support.annotation.UiThread;\n"
-        + "import android.support.v4.content.ContextCompat;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.UiThread;\n"
+        + "import androidx.core.content.ContextCompat;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
@@ -384,9 +384,9 @@
     JavaFileObject bindingDSource = JavaFileObjects.forSourceString("test/D_ViewBinding", ""
         + "package test;\n"
         + "import android.content.Context;\n"
-        + "import android.support.annotation.UiThread;\n"
-        + "import android.support.v4.content.ContextCompat;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.UiThread;\n"
+        + "import androidx.core.content.ContextCompat;\n"
         + "public class D_ViewBinding extends C_ViewBinding {\n"
         + "  @UiThread\n"
         + "  public D_ViewBinding(D target, View source) {\n"
@@ -400,9 +400,9 @@
     JavaFileObject bindingESource = JavaFileObjects.forSourceString("test/E_ViewBinding", ""
         + "package test;\n"
         + "import android.content.Context;\n"
-        + "import android.support.annotation.UiThread;\n"
-        + "import android.support.v4.content.ContextCompat;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.UiThread;\n"
+        + "import androidx.core.content.ContextCompat;\n"
         + "public class E_ViewBinding extends C_ViewBinding {\n"
         + "  @UiThread\n"
         + "  public E_ViewBinding(E target, View source) {\n"
@@ -416,9 +416,9 @@
     JavaFileObject bindingFSource = JavaFileObjects.forSourceString("test/F_ViewBinding", ""
         + "package test;\n"
         + "import android.content.Context;\n"
-        + "import android.support.annotation.UiThread;\n"
-        + "import android.support.v4.content.ContextCompat;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.UiThread;\n"
+        + "import androidx.core.content.ContextCompat;\n"
         + "public class F_ViewBinding extends D_ViewBinding {\n"
         + "  @UiThread\n"
         + "  public F_ViewBinding(F target, View source) {\n"
@@ -432,9 +432,9 @@
     JavaFileObject bindingGSource = JavaFileObjects.forSourceString("test/G_ViewBinding", ""
         + "package test;\n"
         + "import android.content.Context;\n"
-        + "import android.support.annotation.UiThread;\n"
-        + "import android.support.v4.content.ContextCompat;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.UiThread;\n"
+        + "import androidx.core.content.ContextCompat;\n"
         + "import butterknife.internal.DebouncingOnClickListener;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
@@ -475,9 +475,9 @@
     JavaFileObject bindingHSource = JavaFileObjects.forSourceString("test/H_ViewBinding", ""
         + "package test;\n"
         + "import android.content.Context;\n"
-        + "import android.support.annotation.UiThread;\n"
-        + "import android.support.v4.content.ContextCompat;\n"
         + "import android.view.View;\n"
+        + "import androidx.annotation.UiThread;\n"
+        + "import androidx.core.content.ContextCompat;\n"
         + "import butterknife.internal.Utils;\n"
         + "import java.lang.IllegalStateException;\n"
         + "import java.lang.Override;\n"
diff --git a/butterknife/build.gradle b/butterknife/build.gradle
index 76c74263..68a41beb 100644
--- a/butterknife/build.gradle
+++ b/butterknife/build.gradle
@@ -34,7 +34,7 @@ dependencies {
 
   androidTestImplementation deps.junit
   androidTestImplementation deps.truth
-  androidTestImplementation deps.support.test.runner
+  androidTestImplementation deps.androidx.test.runner
   androidTestAnnotationProcessor project(':butterknife-compiler')
 }
 
diff --git a/butterknife/src/androidTest/java/butterknife/ButterKnifeTest.java b/butterknife/src/androidTest/java/butterknife/ButterKnifeTest.java
index af055c61..06634f61 100644
--- a/butterknife/src/androidTest/java/butterknife/ButterKnifeTest.java
+++ b/butterknife/src/androidTest/java/butterknife/ButterKnifeTest.java
@@ -1,37 +1,15 @@
 package butterknife;
 
 import android.content.Context;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.test.InstrumentationRegistry;
-import android.util.Property;
 import android.view.View;
-import java.util.List;
+import androidx.test.InstrumentationRegistry;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
 
 import static com.google.common.truth.Truth.assertThat;
-import static java.util.Arrays.asList;
 
 public class ButterKnifeTest {
-  private static final Property<View, Boolean> PROPERTY_ENABLED =
-      new Property<View, Boolean>(Boolean.class, "enabled") {
-        @Override public Boolean get(View view) {
-          return view.isEnabled();
-        }
-
-        @Override public void set(View view, Boolean enabled) {
-          view.setEnabled(enabled);
-        }
-      };
-  private static final ButterKnife.Setter<View, Boolean> SETTER_ENABLED =
-      (view, value, index) -> view.setEnabled(value);
-  private static final ButterKnife.Action<View> ACTION_DISABLE =
-      (view, index) -> view.setEnabled(false);
-  private static final ButterKnife.Action<View> ACTION_ZERO_ALPHA =
-      (view, index) -> view.setAlpha(0f);
-
   private final Context context = InstrumentationRegistry.getContext();
 
   @Before @After // Clear out cache of binders before and after each test.
@@ -39,182 +17,6 @@ public void resetViewsCache() {
     ButterKnife.BINDINGS.clear();
   }
 
-  @Test public void propertyAppliedToView() {
-    View view = new View(context);
-    assertThat(view.isEnabled()).isTrue();
-
-    ButterKnife.apply(view, PROPERTY_ENABLED, false);
-    assertThat(view.isEnabled()).isFalse();
-  }
-
-  @Test public void propertyAppliedToEveryViewInList() {
-    View view1 = new View(context);
-    View view2 = new View(context);
-    View view3 = new View(context);
-    assertThat(view1.isEnabled()).isTrue();
-    assertThat(view2.isEnabled()).isTrue();
-    assertThat(view3.isEnabled()).isTrue();
-
-    List<View> views = asList(view1, view2, view3);
-    ButterKnife.apply(views, PROPERTY_ENABLED, false);
-
-    assertThat(view1.isEnabled()).isFalse();
-    assertThat(view2.isEnabled()).isFalse();
-    assertThat(view3.isEnabled()).isFalse();
-  }
-
-  @Test public void propertyAppliedToEveryViewInArray() {
-    View view1 = new View(context);
-    View view2 = new View(context);
-    View view3 = new View(context);
-    assertThat(view1.isEnabled()).isTrue();
-    assertThat(view2.isEnabled()).isTrue();
-    assertThat(view3.isEnabled()).isTrue();
-
-    View[] views = new View[] { view1, view2, view3 };
-    ButterKnife.apply(views, PROPERTY_ENABLED, false);
-
-    assertThat(view1.isEnabled()).isFalse();
-    assertThat(view2.isEnabled()).isFalse();
-    assertThat(view3.isEnabled()).isFalse();
-  }
-
-  @Test public void actionAppliedToView() {
-    View view = new View(context);
-    assertThat(view.isEnabled()).isTrue();
-
-    ButterKnife.apply(view, ACTION_DISABLE);
-
-    assertThat(view.isEnabled()).isFalse();
-  }
-
-  @Test public void actionsAppliedToView() {
-    View view = new View(context);
-    assertThat(view.isEnabled()).isTrue();
-    assertThat(view.getAlpha()).isEqualTo(1f);
-
-    ButterKnife.apply(view, ACTION_DISABLE, ACTION_ZERO_ALPHA);
-    assertThat(view.isEnabled()).isFalse();
-    assertThat(view.getAlpha()).isEqualTo(0f);
-  }
-
-  @Test public void actionAppliedToEveryViewInList() {
-    View view1 = new View(context);
-    View view2 = new View(context);
-    View view3 = new View(context);
-    assertThat(view1.isEnabled()).isTrue();
-    assertThat(view2.isEnabled()).isTrue();
-    assertThat(view3.isEnabled()).isTrue();
-
-    List<View> views = asList(view1, view2, view3);
-    ButterKnife.apply(views, ACTION_DISABLE);
-
-    assertThat(view1.isEnabled()).isFalse();
-    assertThat(view2.isEnabled()).isFalse();
-    assertThat(view3.isEnabled()).isFalse();
-  }
-
-  @Test public void actionAppliedToEveryViewInArray() {
-    View view1 = new View(context);
-    View view2 = new View(context);
-    View view3 = new View(context);
-    assertThat(view1.isEnabled()).isTrue();
-    assertThat(view2.isEnabled()).isTrue();
-    assertThat(view3.isEnabled()).isTrue();
-
-    View[] views = new View[] { view1, view2, view3 };
-    ButterKnife.apply(views, ACTION_DISABLE);
-
-    assertThat(view1.isEnabled()).isFalse();
-    assertThat(view2.isEnabled()).isFalse();
-    assertThat(view3.isEnabled()).isFalse();
-  }
-
-  @Test public void actionsAppliedToEveryViewInList() {
-    View view1 = new View(context);
-    View view2 = new View(context);
-    View view3 = new View(context);
-    assertThat(view1.isEnabled()).isTrue();
-    assertThat(view2.isEnabled()).isTrue();
-    assertThat(view3.isEnabled()).isTrue();
-    assertThat(view1.getAlpha()).isEqualTo(1f);
-    assertThat(view2.getAlpha()).isEqualTo(1f);
-    assertThat(view3.getAlpha()).isEqualTo(1f);
-
-    List<View> views = asList(view1, view2, view3);
-    ButterKnife.apply(views, ACTION_DISABLE, ACTION_ZERO_ALPHA);
-
-    assertThat(view1.isEnabled()).isFalse();
-    assertThat(view2.isEnabled()).isFalse();
-    assertThat(view3.isEnabled()).isFalse();
-    assertThat(view1.getAlpha()).isEqualTo(0f);
-    assertThat(view2.getAlpha()).isEqualTo(0f);
-    assertThat(view3.getAlpha()).isEqualTo(0f);
-  }
-
-  @Test public void actionsAppliedToEveryViewInArray() {
-    View view1 = new View(context);
-    View view2 = new View(context);
-    View view3 = new View(context);
-    assertThat(view1.isEnabled()).isTrue();
-    assertThat(view2.isEnabled()).isTrue();
-    assertThat(view3.isEnabled()).isTrue();
-    assertThat(view1.getAlpha()).isEqualTo(1f);
-    assertThat(view2.getAlpha()).isEqualTo(1f);
-    assertThat(view3.getAlpha()).isEqualTo(1f);
-
-    View[] views = new View[] { view1, view2, view3 };
-    ButterKnife.apply(views, ACTION_DISABLE, ACTION_ZERO_ALPHA);
-
-    assertThat(view1.isEnabled()).isFalse();
-    assertThat(view2.isEnabled()).isFalse();
-    assertThat(view3.isEnabled()).isFalse();
-    assertThat(view1.getAlpha()).isEqualTo(0f);
-    assertThat(view2.getAlpha()).isEqualTo(0f);
-    assertThat(view3.getAlpha()).isEqualTo(0f);
-  }
-
-  @Test public void setterAppliedToView() {
-    View view = new View(context);
-    assertThat(view.isEnabled()).isTrue();
-
-    ButterKnife.apply(view, SETTER_ENABLED, false);
-
-    assertThat(view.isEnabled()).isFalse();
-  }
-
-  @Test public void setterAppliedToEveryViewInList() {
-    View view1 = new View(context);
-    View view2 = new View(context);
-    View view3 = new View(context);
-    assertThat(view1.isEnabled()).isTrue();
-    assertThat(view2.isEnabled()).isTrue();
-    assertThat(view3.isEnabled()).isTrue();
-
-    List<View> views = asList(view1, view2, view3);
-    ButterKnife.apply(views, SETTER_ENABLED, false);
-
-    assertThat(view1.isEnabled()).isFalse();
-    assertThat(view2.isEnabled()).isFalse();
-    assertThat(view3.isEnabled()).isFalse();
-  }
-
-  @Test public void setterAppliedToEveryViewInArray() {
-    View view1 = new View(context);
-    View view2 = new View(context);
-    View view3 = new View(context);
-    assertThat(view1.isEnabled()).isTrue();
-    assertThat(view2.isEnabled()).isTrue();
-    assertThat(view3.isEnabled()).isTrue();
-
-    View[] views = new View[] { view1, view2, view3 };
-    ButterKnife.apply(views, SETTER_ENABLED, false);
-
-    assertThat(view1.isEnabled()).isFalse();
-    assertThat(view2.isEnabled()).isFalse();
-    assertThat(view3.isEnabled()).isFalse();
-  }
-
   @Test public void zeroBindingsBindDoesNotThrowExceptionAndCaches() {
     class Example {
     }
diff --git a/butterknife/src/main/java/butterknife/ButterKnife.java b/butterknife/src/main/java/butterknife/ButterKnife.java
index 64e11de9..84606c9a 100644
--- a/butterknife/src/main/java/butterknife/ButterKnife.java
+++ b/butterknife/src/main/java/butterknife/ButterKnife.java
@@ -2,14 +2,13 @@
 
 import android.app.Activity;
 import android.app.Dialog;
-import android.support.annotation.CheckResult;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.support.annotation.UiThread;
-import android.support.annotation.VisibleForTesting;
 import android.util.Log;
-import android.util.Property;
 import android.view.View;
+import androidx.annotation.CheckResult;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.annotation.UiThread;
+import androidx.annotation.VisibleForTesting;
 import java.lang.reflect.Constructor;
 import java.lang.reflect.InvocationTargetException;
 import java.util.LinkedHashMap;
@@ -212,108 +211,4 @@ public static Unbinder bind(@NonNull Object target, @NonNull View source) {
     BINDINGS.put(cls, bindingCtor);
     return bindingCtor;
   }
-
-  /** @deprecated Use {@link ViewCollections#run(List, butterknife.Action[])} */
-  @UiThread
-  @Deprecated
-  @SafeVarargs public static <T extends View> void apply(@NonNull List<T> list,
-      @NonNull Action<? super T>... actions) {
-    ViewCollections.run(list, actions);
-  }
-
-  /** @deprecated Use {@link ViewCollections#run(View[], butterknife.Action[])} */
-  @UiThread
-  @Deprecated
-  @SafeVarargs public static <T extends View> void apply(@NonNull T[] array,
-      @NonNull Action<? super T>... actions) {
-    ViewCollections.run(array, actions);
-  }
-
-  /** @deprecated Use {@link ViewCollections#run(List, butterknife.Action)} */
-  @UiThread
-  @Deprecated
-  public static <T extends View> void apply(@NonNull List<T> list,
-      @NonNull Action<? super T> action) {
-    ViewCollections.run(list, action);
-  }
-
-  /** @deprecated Use {@link ViewCollections#run(View[], butterknife.Action)} */
-  @UiThread
-  @Deprecated
-  public static <T extends View> void apply(@NonNull T[] array, @NonNull Action<? super T> action) {
-    ViewCollections.run(array, action);
-  }
-
-  /** @deprecated Use {@link ViewCollections#run(View, butterknife.Action[])} */
-  @UiThread
-  @Deprecated
-  @SafeVarargs public static <T extends View> void apply(@NonNull T view,
-      @NonNull Action<? super T>... actions) {
-    ViewCollections.run(view, actions);
-  }
-
-  /** @deprecated {@link ViewCollections#run(View, butterknife.Action)} */
-  @UiThread
-  @Deprecated
-  public static <T extends View> void apply(@NonNull T view, @NonNull Action<? super T> action) {
-    ViewCollections.run(view, action);
-  }
-
-  /** @deprecated Use {@link ViewCollections#set(List, butterknife.Setter, Object)} */
-  @UiThread
-  @Deprecated
-  public static <T extends View, V> void apply(@NonNull List<T> list,
-      @NonNull Setter<? super T, V> setter, V value) {
-    ViewCollections.set(list, setter, value);
-  }
-
-  /** @deprecated Use {@link ViewCollections#set(View[], butterknife.Setter, Object)} */
-  @UiThread
-  @Deprecated
-  public static <T extends View, V> void apply(@NonNull T[] array,
-      @NonNull Setter<? super T, V> setter, V value) {
-    ViewCollections.set(array, setter, value);
-  }
-
-  /** @deprecated Use {@link ViewCollections#set(View, butterknife.Setter, Object)} */
-  @UiThread
-  @Deprecated
-  public static <T extends View, V> void apply(@NonNull T view,
-      @NonNull Setter<? super T, V> setter, V value) {
-    ViewCollections.set(view, setter, value);
-  }
-
-  /** @deprecated Use {@link ViewCollections#set(List, Property, Object)} */
-  @UiThread
-  @Deprecated
-  public static <T extends View, V> void apply(@NonNull List<T> list,
-      @NonNull Property<? super T, V> setter, V value) {
-    ViewCollections.set(list, setter, value);
-  }
-
-  /** @deprecated Use {@link ViewCollections#set(View[], Property, Object)} */
-  @UiThread
-  @Deprecated
-  public static <T extends View, V> void apply(@NonNull T[] array,
-      @NonNull Property<? super T, V> setter, V value) {
-    ViewCollections.set(array, setter, value);
-  }
-
-  /** @deprecated Use {@link ViewCollections#set(View, Property, Object)} */
-  @UiThread
-  @Deprecated
-  public static <T extends View, V> void apply(@NonNull T view,
-      @NonNull Property<? super T, V> setter, V value) {
-    ViewCollections.set(view, setter, value);
-  }
-
-  /** @deprecated Use {@link butterknife.Action} */
-  @Deprecated
-  public interface Action<T extends View> extends butterknife.Action<T> {
-  }
-
-  /** @deprecated Use {@link butterknife.Setter} */
-  @Deprecated
-  public interface Setter<T extends View, V> extends butterknife.Setter<T, V> {
-  }
 }
diff --git a/gradle.properties b/gradle.properties
index a7b1e077..fa6b0fdb 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,5 +1,5 @@
 GROUP=com.jakewharton
-VERSION_NAME=9.0.0-SNAPSHOT
+VERSION_NAME=10.0.1-SNAPSHOT
 
 POM_DESCRIPTION=Field and method binding for Android views.
 
diff --git a/sample/app/src/main/java/com/example/butterknife/unbinder/A.java b/sample/app/src/main/java/com/example/butterknife/unbinder/A.java
index 79feb9e8..d0d7615f 100644
--- a/sample/app/src/main/java/com/example/butterknife/unbinder/A.java
+++ b/sample/app/src/main/java/com/example/butterknife/unbinder/A.java
@@ -1,6 +1,6 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
+import androidx.annotation.ColorInt;
 import android.view.View;
 
 import butterknife.BindColor;
diff --git a/sample/app/src/main/java/com/example/butterknife/unbinder/B.java b/sample/app/src/main/java/com/example/butterknife/unbinder/B.java
index 2b78fe9b..3a7b73db 100644
--- a/sample/app/src/main/java/com/example/butterknife/unbinder/B.java
+++ b/sample/app/src/main/java/com/example/butterknife/unbinder/B.java
@@ -1,6 +1,6 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
+import androidx.annotation.ColorInt;
 import android.view.View;
 
 import butterknife.BindColor;
diff --git a/sample/app/src/main/java/com/example/butterknife/unbinder/C.java b/sample/app/src/main/java/com/example/butterknife/unbinder/C.java
index 3772e400..dcd7e13a 100644
--- a/sample/app/src/main/java/com/example/butterknife/unbinder/C.java
+++ b/sample/app/src/main/java/com/example/butterknife/unbinder/C.java
@@ -1,6 +1,6 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
+import androidx.annotation.ColorInt;
 import android.view.View;
 
 import butterknife.BindView;
diff --git a/sample/app/src/main/java/com/example/butterknife/unbinder/D.java b/sample/app/src/main/java/com/example/butterknife/unbinder/D.java
index 5ab8b2c6..35a91039 100644
--- a/sample/app/src/main/java/com/example/butterknife/unbinder/D.java
+++ b/sample/app/src/main/java/com/example/butterknife/unbinder/D.java
@@ -1,6 +1,6 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
+import androidx.annotation.ColorInt;
 import android.view.View;
 
 import butterknife.BindColor;
diff --git a/sample/app/src/main/java/com/example/butterknife/unbinder/E.java b/sample/app/src/main/java/com/example/butterknife/unbinder/E.java
index bd5e28aa..8b76b3c5 100644
--- a/sample/app/src/main/java/com/example/butterknife/unbinder/E.java
+++ b/sample/app/src/main/java/com/example/butterknife/unbinder/E.java
@@ -1,6 +1,6 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
+import androidx.annotation.ColorInt;
 import android.view.View;
 
 import butterknife.BindColor;
diff --git a/sample/app/src/main/java/com/example/butterknife/unbinder/F.java b/sample/app/src/main/java/com/example/butterknife/unbinder/F.java
index 5b1a2faa..351f8ddd 100644
--- a/sample/app/src/main/java/com/example/butterknife/unbinder/F.java
+++ b/sample/app/src/main/java/com/example/butterknife/unbinder/F.java
@@ -1,6 +1,6 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
+import androidx.annotation.ColorInt;
 import android.view.View;
 
 import butterknife.BindColor;
diff --git a/sample/app/src/main/java/com/example/butterknife/unbinder/G.java b/sample/app/src/main/java/com/example/butterknife/unbinder/G.java
index 419ef4b5..f2a08ef6 100644
--- a/sample/app/src/main/java/com/example/butterknife/unbinder/G.java
+++ b/sample/app/src/main/java/com/example/butterknife/unbinder/G.java
@@ -1,6 +1,6 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
+import androidx.annotation.ColorInt;
 import android.view.View;
 
 import butterknife.BindView;
diff --git a/sample/app/src/main/java/com/example/butterknife/unbinder/H.java b/sample/app/src/main/java/com/example/butterknife/unbinder/H.java
index e9cd4136..f8656842 100644
--- a/sample/app/src/main/java/com/example/butterknife/unbinder/H.java
+++ b/sample/app/src/main/java/com/example/butterknife/unbinder/H.java
@@ -1,6 +1,6 @@
 package com.example.butterknife.unbinder;
 
-import android.support.annotation.ColorInt;
+import androidx.annotation.ColorInt;
 import android.view.View;
 
 import butterknife.BindView;
diff --git a/sample/library/src/main/java/com/example/butterknife/library/SimpleActivity.java b/sample/library/src/main/java/com/example/butterknife/library/SimpleActivity.java
index 5f40f5af..1d96194a 100644
--- a/sample/library/src/main/java/com/example/butterknife/library/SimpleActivity.java
+++ b/sample/library/src/main/java/com/example/butterknife/library/SimpleActivity.java
@@ -3,7 +3,7 @@
 import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.os.Bundle;
-import android.support.annotation.NonNull;
+import androidx.annotation.NonNull;
 import android.view.View;
 import android.view.animation.AlphaAnimation;
 import android.widget.Button;
