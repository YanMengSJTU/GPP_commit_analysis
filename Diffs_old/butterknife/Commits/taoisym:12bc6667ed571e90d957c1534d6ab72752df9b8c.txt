diff --git a/butterknife-annotations/src/main/java/butterknife/BindBeanImage.java b/butterknife-annotations/src/main/java/butterknife/BindBeanImage.java
deleted file mode 100644
index d0f05e8c..00000000
--- a/butterknife-annotations/src/main/java/butterknife/BindBeanImage.java
+++ /dev/null
@@ -1,20 +0,0 @@
-package butterknife;
-
-import java.lang.annotation.Retention;
-import java.lang.annotation.Target;
-
-import static java.lang.annotation.ElementType.FIELD;
-import static java.lang.annotation.RetentionPolicy.CLASS;
-
-/**
- * Bind a field to the specified string resource ID.
- * <pre><code>
- * {@literal @}BindString(R.string.username_error) String usernameErrorText;
- * </code></pre>
- */
-@Retention(CLASS) @Target({FIELD})
-@BindFunc("setImageURI")
-public @interface BindBeanImage {
-    int id();
-    String value();
-}
diff --git a/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java
index 91e46ad2..badf852f 100644
--- a/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java
+++ b/butterknife-compiler/src/main/java/butterknife/compiler/ButterKnifeProcessor.java
@@ -3,7 +3,6 @@
 import butterknife.BindArray;
 import butterknife.BindBeanClass;
 import butterknife.BindBeanFunc;
-import butterknife.BindBeanImage;
 import butterknife.BindBean;
 import butterknife.BindBitmap;
 import butterknife.BindBool;
@@ -296,8 +295,7 @@ public synchronized void init(ProcessingEnvironment env) {
         annotations.addAll(LISTENERS);
 
         annotations.add(BindBean.class);
-        annotations.add(BindBeanImage.class);
-        annotations.add(BindBeanFunc.class);
+        //annotations.add(BindBeanFunc.class);
         annotations.add(BindBeanClass.class);
 
         return annotations;
@@ -454,15 +452,7 @@ public boolean process(Set<? extends TypeElement> elements, RoundEnvironment env
                 logParsingError(element, BindBean.class, e);
             }
         }
-        // Process each @BindBeanText element.
-        for (Element element : env.getElementsAnnotatedWith(BindBeanImage.class)) {
-            if (!SuperficialValidation.validateElement(element)) continue;
-            try {
-                parseBindImage(element, builderMap, erasedTargetNames);
-            } catch (Exception e) {
-                logParsingError(element, BindBeanImage.class, e);
-            }
-        }
+
 
         // Process each @BindBeanFunc element.
         for (Element element : env.getElementsAnnotatedWith(BindBeanFunc.class)) {
@@ -628,11 +618,11 @@ private void parseBindText(Element element, Map<TypeElement, BindingSet.Builder>
         String name = element.getSimpleName().toString();
         boolean required = isFieldRequired(element);
         BindBean bean = element.getAnnotation(BindBean.class);
-        BindFunc     func=bean.annotationType().getAnnotation(BindFunc.class);
+        //BindFunc     func=bean.annotationType().getAnnotation(BindFunc.class);
 
         QualifiedId qualifiedId = elementToQualifiedId(element, bean.id());
         BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
-        builder.addBeanBinding(new FieldBeanBinding(getId(qualifiedId), name, bean.value(),func));
+        builder.addBeanBinding(new FieldBeanBinding(getId(qualifiedId), name, bean.value(),null));
 
 
         BindingSet.Builder binder = getOrCreateBindingBuilder(builderMap, enclosingElement);
@@ -640,25 +630,7 @@ private void parseBindText(Element element, Map<TypeElement, BindingSet.Builder>
 
         erasedTargetNames.add(enclosingElement);
     }
-    private void parseBindImage(Element element, Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
-        TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
 
-        TypeName type = TypeName.get(element.asType());
-        String name = element.getSimpleName().toString();
-        boolean required = isFieldRequired(element);
-        BindBeanImage bean = element.getAnnotation(BindBeanImage.class);
-        BindFunc     func=bean.annotationType().getAnnotation(BindFunc.class);
-
-        QualifiedId qualifiedId = elementToQualifiedId(element, bean.id());
-        BindingSet.Builder builder = getOrCreateBindingBuilder(builderMap, enclosingElement);
-        builder.addBeanBinding(new FieldBeanBinding(getId(qualifiedId), name, bean.value(),func));
-
-
-        BindingSet.Builder binder = getOrCreateBindingBuilder(builderMap, enclosingElement);
-        binder.addField(getId(qualifiedId), new FieldViewBinding(name, type, required));
-
-        erasedTargetNames.add(enclosingElement);
-    }
     private void parseBindFunc(Element element, Map<TypeElement, BindingSet.Builder> builderMap, Set<TypeElement> erasedTargetNames) {
         TypeElement enclosingElement = (TypeElement) element.getEnclosingElement();
 
diff --git a/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java b/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java
index fde23d0d..ff89c207 100644
--- a/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java
+++ b/butterknife-integration-test/src/main/java/com/example/butterknife/library/SimpleActivity.java
@@ -13,7 +13,6 @@
 import android.widget.Toast;
 
 import butterknife.BindBeanClass;
-import butterknife.BindBeanImage;
 import butterknife.BindBean;
 import butterknife.BindString;
 import butterknife.BindView;
@@ -53,7 +52,7 @@
 
   @BindBeanClass(Bean.class)
   public static class TestBean extends Fragment{
-    @BindBeanImage(id=R.id.footer,value = "id()")
+    @BindBean(id=R.id.footer,value = "id()")
     ImageView image;
     void x(){
 
