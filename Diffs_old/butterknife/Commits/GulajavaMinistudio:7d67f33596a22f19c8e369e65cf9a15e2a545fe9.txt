diff --git a/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
index c5c7bc46..b20aff4a 100644
--- a/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
+++ b/butterknife-compiler/src/main/java/butterknife/compiler/BindingSet.java
@@ -304,7 +304,10 @@ private void addFieldAndUnbindStatement(TypeSpec.Builder result, MethodSpec.Buil
       return;
     }
 
-    String fieldName = bindings.isBoundToRoot() ? "viewSource" : "view" + bindings.getId().value;
+    String fieldName =
+        bindings.isBoundToRoot()
+            ? "viewSource"
+            : "view" + Integer.toHexString(bindings.getId().value);
     result.addField(VIEW, fieldName, PRIVATE);
 
     // We only need to emit the null check if there are zero required bindings.
@@ -430,7 +433,7 @@ private void addMethodBindings(MethodSpec.Builder result, ViewBinding binding,
     String fieldName = "viewSource";
     String bindName = "source";
     if (!binding.isBoundToRoot()) {
-      fieldName = "view" + binding.getId().value;
+      fieldName = "view" + Integer.toHexString(binding.getId().value);
       bindName = "view";
     }
     result.addStatement("$L = $N", fieldName, bindName);
diff --git a/butterknife/src/test/java/butterknife/UnbinderTest.java b/butterknife/src/test/java/butterknife/UnbinderTest.java
index ef0388fc..c59ae3fc 100644
--- a/butterknife/src/test/java/butterknife/UnbinderTest.java
+++ b/butterknife/src/test/java/butterknife/UnbinderTest.java
@@ -457,7 +457,7 @@
         + "import java.lang.Override;\n"
         + "public class G_ViewBinding extends E_ViewBinding {\n"
         + "  private G target;\n"
-        + "  private View view16908290;\n"
+        + "  private View view1020002;\n"
         + "  @UiThread\n"
         + "  public G_ViewBinding(final G target, View source) {\n"
         + "    super(target, source);\n"
@@ -465,7 +465,7 @@
         + "    View view;\n"
         + "    target.button2 = Utils.findRequiredView(source, android.R.id.button2, \"field 'button2'\");\n"
         + "    view = Utils.findRequiredView(source, android.R.id.content, \"method 'onClick'\");\n"
-        + "    view16908290 = view;\n"
+        + "    view1020002 = view;\n"
         + "    view.setOnClickListener(new DebouncingOnClickListener() {\n"
         + "      @Override\n"
         + "      public void doClick(View p0) {\n"
@@ -481,8 +481,8 @@
         + "    if (target == null) throw new IllegalStateException(\"Bindings already cleared.\");\n"
         + "    this.target = null\n"
         + "    target.button2 = null;\n"
-        + "    view16908290.setOnClickListener(null);\n"
-        + "    view16908290 = null;\n"
+        + "    view1020002.setOnClickListener(null);\n"
+        + "    view1020002 = null;\n"
         + "    super.unbind();\n"
         + "  }\n"
         + "}"
