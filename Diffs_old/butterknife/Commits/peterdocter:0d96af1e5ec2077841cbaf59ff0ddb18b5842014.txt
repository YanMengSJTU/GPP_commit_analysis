diff --git a/butterknife/src/main/java/butterknife/ButterKnife.java b/butterknife/src/main/java/butterknife/ButterKnife.java
index 35c99066..5cda3942 100644
--- a/butterknife/src/main/java/butterknife/ButterKnife.java
+++ b/butterknife/src/main/java/butterknife/ButterKnife.java
@@ -145,7 +145,7 @@ public View findRequiredView(Object source, int id, String who) {
       return view;
     }
 
-    public <T> T cast(View view, int id, Class<T> expectedType) {
+    public <T> T castView(View view, int id, Class<T> expectedType) {
       if (!expectedType.isInstance(view)) {
         String name = view.getContext().getResources().getResourceEntryName(id);
         throw new ClassCastException("View '"
@@ -160,6 +160,20 @@ public View findRequiredView(Object source, int id, String who) {
       return (T) view;
     }
 
+    public <T> T castParam(Object param, String methodName, int position, Class<T> expectedType) {
+      if (!expectedType.isInstance(param)) {
+        throw new ClassCastException("Parameter "
+            + position
+            + " of method '"
+            + methodName
+            + "' was of type "
+            + param.getClass().getName()
+            + " but was expexted to have type "
+            + expectedType.getName());
+      }
+      return (T) param;
+    }
+
     public abstract View findOptionalView(Object source, int id);
 
     protected abstract Context getContext(Object source);
diff --git a/butterknife/src/main/java/butterknife/internal/ViewInjector.java b/butterknife/src/main/java/butterknife/internal/ViewInjector.java
index f5e79dad..ed834012 100644
--- a/butterknife/src/main/java/butterknife/internal/ViewInjector.java
+++ b/butterknife/src/main/java/butterknife/internal/ViewInjector.java
@@ -130,7 +130,7 @@ private void emitCollectionBinding(StringBuilder builder, CollectionBinding bind
       }
       builder.append("\n        ");
       if (binding.requiresCast()) {
-        builder.append("finder.cast(");
+        builder.append("finder.castView(");
       }
       if (binding.isRequired()) {
         builder.append("finder.findRequiredView(source, ")
@@ -188,7 +188,7 @@ private void emitViewBindings(StringBuilder builder, ViewInjection injection) {
           .append(viewBinding.getName())
           .append(" = ");
       if (viewBinding.requiresCast()) {
-        builder.append("finder.cast(view");
+        builder.append("finder.castView(view");
         builder.append(", " + injection.getId());
         builder.append(", " + viewBinding.getType() + ".class");
         builder.append(");\n");
diff --git a/butterknife/src/test/java/butterknife/internal/InjectViewTest.java b/butterknife/src/test/java/butterknife/internal/InjectViewTest.java
index e8256320..c020d991 100644
--- a/butterknife/src/test/java/butterknife/internal/InjectViewTest.java
+++ b/butterknife/src/test/java/butterknife/internal/InjectViewTest.java
@@ -66,7 +66,7 @@
             "  public static void inject(Finder finder, final test.Test target, Object source) {",
             "    View view;",
             "    view = finder.findRequiredView(source, 1, \"field 'thing'\");",
-            "    target.thing = finder.cast(view, 1, test.Test.TestInterface.class);",
+            "    target.thing = finder.castView(view, 1, test.Test.TestInterface.class);",
             "  }",
             "  public static void reset(test.Test target) {",
             "    target.thing = null;",
@@ -102,7 +102,7 @@
             "  public static void inject(Finder finder, final test.Test target, Object source) {",
             "    View view;",
             "    view = finder.findRequiredView(source, 1, \"field 'thing'\");",
-            "    target.thing = finder.cast(view, 1, android.widget.TextView.class);",
+            "    target.thing = finder.castView(view, 1, android.widget.TextView.class);",
             "  }",
             "  public static void reset(test.Test target) {",
             "    target.thing = null;",
diff --git a/butterknife/src/test/java/butterknife/internal/InjectViewsTest.java b/butterknife/src/test/java/butterknife/internal/InjectViewsTest.java
index 1407fd6b..69572f94 100644
--- a/butterknife/src/test/java/butterknife/internal/InjectViewsTest.java
+++ b/butterknife/src/test/java/butterknife/internal/InjectViewsTest.java
@@ -106,9 +106,9 @@
             "  public static void inject(Finder finder, final test.Test target, Object source) {",
             "    View view;",
             "    target.thing = Finder.arrayOf(",
-            "        finder.cast(finder.findRequiredView(source, 1, \"thing\"), 1, android.widget.TextView.class),",
-            "        finder.cast(finder.findRequiredView(source, 2, \"thing\"), 2, android.widget.TextView.class),",
-            "        finder.cast(finder.findRequiredView(source, 3, \"thing\"), 3, android.widget.TextView.class)",
+            "        finder.castView(finder.findRequiredView(source, 1, \"thing\"), 1, android.widget.TextView.class),",
+            "        finder.castView(finder.findRequiredView(source, 2, \"thing\"), 2, android.widget.TextView.class),",
+            "        finder.castView(finder.findRequiredView(source, 3, \"thing\"), 3, android.widget.TextView.class)",
             "    );",
             "  }",
             "  public static void reset(test.Test target) {",
@@ -184,9 +184,9 @@
             "  public static void inject(Finder finder, final test.Test target, Object source) {",
             "    View view;",
             "    target.thing = Finder.listOf(",
-            "        finder.cast(finder.findRequiredView(source, 1, \"thing\"), 1, test.Test.TestInterface.class),",
-            "        finder.cast(finder.findRequiredView(source, 2, \"thing\"), 2, test.Test.TestInterface.class),",
-            "        finder.cast(finder.findRequiredView(source, 3, \"thing\"), 3, test.Test.TestInterface.class)",
+            "        finder.castView(finder.findRequiredView(source, 1, \"thing\"), 1, test.Test.TestInterface.class),",
+            "        finder.castView(finder.findRequiredView(source, 2, \"thing\"), 2, test.Test.TestInterface.class),",
+            "        finder.castView(finder.findRequiredView(source, 3, \"thing\"), 3, test.Test.TestInterface.class)",
             "    );",
             "  }",
             "  public static void reset(test.Test target) {",
