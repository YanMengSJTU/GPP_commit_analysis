diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/AbstractAnalysisResultService.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/AbstractAnalysisResultService.java
index 6f1ecd0d..65601035 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/AbstractAnalysisResultService.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/AbstractAnalysisResultService.java
@@ -28,9 +28,9 @@
   private static final String RESULT_EXTRA = "result_extra";
 
   public static void sendResultToListener(@NonNull Context context,
-                                          @NonNull String listenerServiceClassName,
-                                          @NonNull HeapDump heapDump,
-                                          @NonNull AnalysisResult result) {
+      @NonNull String listenerServiceClassName,
+      @NonNull HeapDump heapDump,
+      @NonNull AnalysisResult result) {
     Class<?> listenerServiceClass;
     try {
       listenerServiceClass = Class.forName(listenerServiceClassName);
@@ -71,5 +71,5 @@ public AbstractAnalysisResultService() {
    * The heap dump file will be deleted immediately after this callback returns.
    */
   protected abstract void onHeapAnalyzed(@NonNull HeapDump heapDump,
-                                         @NonNull AnalysisResult result);
+      @NonNull AnalysisResult result);
 }
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/ActivityRefWatcher.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/ActivityRefWatcher.java
index 94f6b630..aaf7dd5e 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/ActivityRefWatcher.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/ActivityRefWatcher.java
@@ -19,7 +19,6 @@
 import android.app.Application;
 import android.content.Context;
 import android.support.annotation.NonNull;
-
 import com.squareup.leakcanary.internal.ActivityLifecycleCallbacksAdapter;
 
 /**
@@ -32,7 +31,7 @@
 public final class ActivityRefWatcher {
 
   public static void installOnIcsPlus(@NonNull Application application,
-                                      @NonNull RefWatcher refWatcher) {
+      @NonNull RefWatcher refWatcher) {
     install(application, refWatcher);
   }
 
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidHeapDumper.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidHeapDumper.java
index 33edd7f7..20bde33c 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidHeapDumper.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidHeapDumper.java
@@ -49,7 +49,7 @@
   private final Handler mainHandler;
 
   public AndroidHeapDumper(@NonNull Context context,
-                           @NonNull LeakDirectoryProvider leakDirectoryProvider) {
+      @NonNull LeakDirectoryProvider leakDirectoryProvider) {
     this.leakDirectoryProvider = leakDirectoryProvider;
     this.context = context.getApplicationContext();
     mainHandler = new Handler(Looper.getMainLooper());
@@ -161,7 +161,8 @@ private void hide(Toast toast) {
     View view = toast.getView();
     if (view.getParent() != null) {
       Context context = toast.getView().getContext();
-      WindowManager windowManager = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);
+      WindowManager windowManager =
+          (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);
       windowManager.removeView(view);
     }
   }
@@ -195,6 +196,4 @@ private void trySendAccessibilityEvent(View view) {
     view.dispatchPopulateAccessibilityEvent(event);
     accessibilityManager.sendAccessibilityEvent(event);
   }
-
-
 }
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidRefWatcherBuilder.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidRefWatcherBuilder.java
index 9799400e..00f49707 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidRefWatcherBuilder.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidRefWatcherBuilder.java
@@ -2,7 +2,6 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-
 import com.squareup.leakcanary.internal.FragmentRefWatcher;
 import com.squareup.leakcanary.internal.LeakCanaryInternals;
 import java.util.List;
@@ -125,7 +124,8 @@
     return new AndroidWatchExecutor(DEFAULT_WATCH_DELAY_MILLIS);
   }
 
-  @Override @NonNull protected List<Class<? extends Reachability.Inspector>> defaultReachabilityInspectorClasses() {
+  @Override @NonNull
+  protected List<Class<? extends Reachability.Inspector>> defaultReachabilityInspectorClasses() {
     return AndroidReachabilityInspectors.defaultAndroidInspectors();
   }
 }
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidWatchExecutor.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidWatchExecutor.java
index ae865dcf..73653194 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidWatchExecutor.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidWatchExecutor.java
@@ -20,7 +20,6 @@
 import android.os.Looper;
 import android.os.MessageQueue;
 import android.support.annotation.NonNull;
-
 import java.util.concurrent.TimeUnit;
 
 import static com.squareup.leakcanary.Retryable.Result.RETRY;
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/CanaryLog.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/CanaryLog.java
index e09c22d3..f9ee9ec8 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/CanaryLog.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/CanaryLog.java
@@ -15,7 +15,8 @@
   }
 
   private static class DefaultLogger implements Logger {
-    DefaultLogger() { }
+    DefaultLogger() {
+    }
 
     @Override public void d(@NonNull String message, @NonNull Object... args) {
       String formatted = String.format(message, args);
@@ -30,8 +31,8 @@
     }
 
     @Override public void d(@Nullable Throwable throwable,
-                            @NonNull String message,
-                            @NonNull Object... args) {
+        @NonNull String message,
+        @NonNull Object... args) {
       d(String.format(message, args) + '\n' + Log.getStackTraceString(throwable));
     }
   }
@@ -50,8 +51,8 @@ public static void d(@NonNull String message, @NonNull Object... args) {
   }
 
   public static void d(@Nullable Throwable throwable,
-                       @NonNull String message,
-                       @NonNull Object... args) {
+      @NonNull String message,
+      @NonNull Object... args) {
     // Local variable to prevent the ref from becoming null after the null check.
     Logger logger = CanaryLog.logger;
     if (logger == null) {
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/DefaultLeakDirectoryProvider.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/DefaultLeakDirectoryProvider.java
index 4679af5a..3a4e81fa 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/DefaultLeakDirectoryProvider.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/DefaultLeakDirectoryProvider.java
@@ -21,7 +21,6 @@
 import android.os.Environment;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-
 import com.squareup.leakcanary.internal.RequestStoragePermissionActivity;
 import java.io.File;
 import java.io.FilenameFilter;
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/DisplayLeakService.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/DisplayLeakService.java
index b3030a78..01206503 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/DisplayLeakService.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/DisplayLeakService.java
@@ -18,7 +18,6 @@
 import android.app.PendingIntent;
 import android.os.SystemClock;
 import android.support.annotation.NonNull;
-
 import com.squareup.leakcanary.internal.DisplayLeakActivity;
 import java.io.File;
 import java.io.FileOutputStream;
@@ -42,7 +41,8 @@
  */
 public class DisplayLeakService extends AbstractAnalysisResultService {
 
-  @Override protected final void onHeapAnalyzed(@NonNull HeapDump heapDump, @NonNull AnalysisResult result) {
+  @Override
+  protected final void onHeapAnalyzed(@NonNull HeapDump heapDump, @NonNull AnalysisResult result) {
     String leakInfo = leakInfo(this, heapDump, result, true);
     CanaryLog.d("%s", leakInfo);
 
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/LeakCanary.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/LeakCanary.java
index 8848fce5..3b218447 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/LeakCanary.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/LeakCanary.java
@@ -86,14 +86,15 @@ public static void setDisplayLeakActivityDirectoryProvider(
    * @throws IllegalStateException if a LeakDirectoryProvider has already been set, including
    * if the default has been automatically set when installing the ref watcher.
    */
-  public static void setLeakDirectoryProvider(@NonNull LeakDirectoryProvider leakDirectoryProvider) {
+  public static void setLeakDirectoryProvider(
+      @NonNull LeakDirectoryProvider leakDirectoryProvider) {
     LeakCanaryInternals.setLeakDirectoryProvider(leakDirectoryProvider);
   }
 
   /** Returns a string representation of the result of a heap analysis. */
   @NonNull public static String leakInfo(@NonNull Context context,
-                                         @NonNull HeapDump heapDump,
-                                         @NonNull AnalysisResult result,
+      @NonNull HeapDump heapDump,
+      @NonNull AnalysisResult result,
       boolean detailed) {
     PackageManager packageManager = context.getPackageManager();
     String packageName = context.getPackageName();
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/LeakDirectoryProvider.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/LeakDirectoryProvider.java
index 43e8b63c..5d27bb33 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/LeakDirectoryProvider.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/LeakDirectoryProvider.java
@@ -17,7 +17,6 @@
 
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
-
 import java.io.File;
 import java.io.FilenameFilter;
 import java.util.List;
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/ServiceHeapDumpListener.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/ServiceHeapDumpListener.java
index 7fde49bb..4d1fa1a1 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/ServiceHeapDumpListener.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/ServiceHeapDumpListener.java
@@ -17,7 +17,6 @@
 
 import android.content.Context;
 import android.support.annotation.NonNull;
-
 import com.squareup.leakcanary.internal.HeapAnalyzerService;
 
 import static com.squareup.leakcanary.Preconditions.checkNotNull;
