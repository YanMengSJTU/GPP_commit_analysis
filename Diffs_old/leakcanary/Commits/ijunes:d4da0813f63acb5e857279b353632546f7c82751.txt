diff --git a/build.gradle b/build.gradle
index 708f8146..10224b9e 100644
--- a/build.gradle
+++ b/build.gradle
@@ -18,10 +18,10 @@ subprojects {
 }
 
 ext {
-  minSdkVersion = 8
-  compileSdkVersion = 21
+  minSdkVersion = 15
+  compileSdkVersion = 20
   targetSdkVersion = compileSdkVersion
-  buildToolsVersion = '21.1.2'
+  buildToolsVersion = '22.0.1'
   javaVersion = JavaVersion.VERSION_1_7
 
   GROUP = 'com.squareup.leakcanary'
diff --git a/leakcanary-analyzer/build.gradle b/leakcanary-analyzer/build.gradle
index a64cb553..2f35350d 100644
--- a/leakcanary-analyzer/build.gradle
+++ b/leakcanary-analyzer/build.gradle
@@ -48,6 +48,10 @@ android {
     minSdkVersion rootProject.ext.minSdkVersion
     targetSdkVersion rootProject.ext.targetSdkVersion
   }
+  compileOptions {
+    sourceCompatibility JavaVersion.VERSION_1_7
+    targetCompatibility JavaVersion.VERSION_1_7
+  }
 }
 
 task sourceJar(type: Jar) {
diff --git a/leakcanary-android-no-op/build.gradle b/leakcanary-android-no-op/build.gradle
index 5f3dc025..1428a967 100644
--- a/leakcanary-android-no-op/build.gradle
+++ b/leakcanary-android-no-op/build.gradle
@@ -23,6 +23,10 @@ android {
     minSdkVersion rootProject.ext.minSdkVersion
     targetSdkVersion rootProject.ext.targetSdkVersion
   }
+  compileOptions {
+    sourceCompatibility JavaVersion.VERSION_1_7
+    targetCompatibility JavaVersion.VERSION_1_7
+  }
 }
 
 task sourceJar(type: Jar) {
@@ -30,4 +34,3 @@ task sourceJar(type: Jar) {
 }
 
 apply from: rootProject.file('gradle/checkstyle.gradle')
-apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
\ No newline at end of file
diff --git a/leakcanary-android/build.gradle b/leakcanary-android/build.gradle
index 394da675..cd5a4e45 100644
--- a/leakcanary-android/build.gradle
+++ b/leakcanary-android/build.gradle
@@ -31,6 +31,10 @@ android {
     buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""
     consumerProguardFiles 'consumer-proguard-rules.pro'
   }
+  compileOptions {
+    sourceCompatibility JavaVersion.VERSION_1_7
+    targetCompatibility JavaVersion.VERSION_1_7
+  }
 }
 
 task sourceJar(type: Jar) {
@@ -38,4 +42,3 @@ task sourceJar(type: Jar) {
 }
 
 apply from: rootProject.file('gradle/checkstyle.gradle')
-apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
\ No newline at end of file
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidExcludedRefs.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidExcludedRefs.java
index 0a1a7368..641b2c7c 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidExcludedRefs.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidExcludedRefs.java
@@ -24,7 +24,7 @@
 import static android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH_MR1;
 import static android.os.Build.VERSION_CODES.JELLY_BEAN;
 import static android.os.Build.VERSION_CODES.KITKAT;
-import static android.os.Build.VERSION_CODES.LOLLIPOP;
+
 import static com.squareup.leakcanary.AndroidWatchExecutor.LEAK_CANARY_THREAD_NAME;
 import static com.squareup.leakcanary.internal.LeakCanaryInternals.LG;
 import static com.squareup.leakcanary.internal.LeakCanaryInternals.LOLLIPOP_MR1;
@@ -32,6 +32,7 @@
 import static com.squareup.leakcanary.internal.LeakCanaryInternals.NVIDIA;
 import static com.squareup.leakcanary.internal.LeakCanaryInternals.SAMSUNG;
 
+
 /**
  * This class is a work in progress. You can help by reporting leak traces that seem to be caused
  * by the Android SDK, here: https://github.com/square/leakcanary/issues/new
@@ -46,7 +47,7 @@
  */
 public enum AndroidExcludedRefs {
 
-  ACTIVITY_CLIENT_RECORD__NEXT_IDLE(SDK_INT >= KITKAT && SDK_INT <= LOLLIPOP) {
+  ACTIVITY_CLIENT_RECORD__NEXT_IDLE(SDK_INT >= KITKAT && SDK_INT <= 21) {
     @Override void add(ExcludedRefs.Builder excluded) {
       // Android AOSP sometimes keeps a reference to a destroyed activity as a "nextIdle" client
       // record in the android.app.ActivityThread.mActivities map.
@@ -75,7 +76,7 @@
     }
   },
 
-  MEDIA_SESSION_LEGACY_HELPER__SINSTANCE(SDK_INT == LOLLIPOP) {
+  MEDIA_SESSION_LEGACY_HELPER__SINSTANCE(SDK_INT == 21) {
     @Override void add(ExcludedRefs.Builder excluded) {
       // MediaSessionLegacyHelper is a static singleton that is lazily instantiated and keeps a
       // reference to the context it's given the first time MediaSessionLegacyHelper.getHelper()
@@ -109,7 +110,7 @@
     }
   },
 
-  BLOCKING_QUEUE(SDK_INT < LOLLIPOP) {
+  BLOCKING_QUEUE(SDK_INT < 21) {
     @Override void add(ExcludedRefs.Builder excluded) {
       // Prior to ART, a thread waiting on a blocking queue will leak the last dequeued object
       // as a stack local reference.
@@ -187,7 +188,7 @@
     }
   },
 
-  SPEECH_RECOGNIZER(SDK_INT < LOLLIPOP) {
+  SPEECH_RECOGNIZER(SDK_INT < 21) {
     @Override void add(ExcludedRefs.Builder excluded) {
       // Prior to Android 5, SpeechRecognizer.InternalListener was a non static inner class and
       // leaked the SpeechRecognizer which leaked an activity context.
@@ -256,7 +257,7 @@
   },
 
   CLIPBOARD_UI_MANAGER__SINSTANCE(
-      SAMSUNG.equals(MANUFACTURER) && SDK_INT >= KITKAT && SDK_INT <= LOLLIPOP) {
+      SAMSUNG.equals(MANUFACTURER) && SDK_INT >= KITKAT && SDK_INT <= 21) {
     @Override void add(ExcludedRefs.Builder excluded) {
       // ClipboardUIManager is a static singleton that leaks an activity context.
       excluded.staticField("android.sec.clipboard.ClipboardUIManager", "sInstance");
@@ -264,7 +265,7 @@
   },
 
   BUBBLE_POPUP_HELPER__SHELPER(
-      LG.equals(MANUFACTURER) && SDK_INT >= KITKAT && SDK_INT <= LOLLIPOP) {
+      LG.equals(MANUFACTURER) && SDK_INT >= KITKAT && SDK_INT <= 21) {
     @Override void add(ExcludedRefs.Builder excluded) {
       // A static helper for EditText "bubble popups" leaks a reference to the latest focused view.
       excluded.staticField("android.widget.BubblePopupHelper", "sHelper");
diff --git a/leakcanary-android/src/main/res/values-v21/__leak_canary_themes.xml b/leakcanary-android/src/main/res/values-v21/__leak_canary_themes.xml
deleted file mode 100644
index 0a8dbbfc..00000000
--- a/leakcanary-android/src/main/res/values-v21/__leak_canary_themes.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Square, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-<resources>
-  <style name="__LeakCanary.Base" parent="android:Theme.Material">
-  </style>
-</resources>
\ No newline at end of file
diff --git a/leakcanary-watcher/build.gradle b/leakcanary-watcher/build.gradle
index ac0cac77..7b37d845 100644
--- a/leakcanary-watcher/build.gradle
+++ b/leakcanary-watcher/build.gradle
@@ -35,6 +35,10 @@ android {
     minSdkVersion rootProject.ext.minSdkVersion
     targetSdkVersion rootProject.ext.targetSdkVersion
   }
+  compileOptions {
+    sourceCompatibility JavaVersion.VERSION_1_7
+    targetCompatibility JavaVersion.VERSION_1_7
+  }
 }
 
 task sourceJar(type: Jar) {
