diff --git a/.travis.yml b/.travis.yml
index ad327f32..eccef301 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -4,11 +4,10 @@ android:
   components:
     - tools
     - platform-tools
-    - build-tools-23.0.2
-    - android-23
+    - build-tools-25.0.2
+    - android-25
 
 jdk:
-  - oraclejdk7
   - oraclejdk8
 
 script:
diff --git a/build.gradle b/build.gradle
index 3f6bd3d5..fe22e360 100644
--- a/build.gradle
+++ b/build.gradle
@@ -19,9 +19,9 @@ subprojects {
 
 ext {
   minSdkVersion = 8
-  compileSdkVersion = 23
+  compileSdkVersion = 25
   targetSdkVersion = compileSdkVersion
-  buildToolsVersion = '23.0.2'
+  buildToolsVersion = '25.0.2'
   javaVersion = JavaVersion.VERSION_1_7
 
   GROUP = 'com.squareup.leakcanary'
diff --git a/leakcanary-analyzer/build.gradle b/leakcanary-analyzer/build.gradle
index 461f504b..c65292f9 100644
--- a/leakcanary-analyzer/build.gradle
+++ b/leakcanary-analyzer/build.gradle
@@ -36,7 +36,6 @@ android {
   buildToolsVersion rootProject.ext.buildToolsVersion
   defaultConfig {
     minSdkVersion rootProject.ext.minSdkVersion
-    targetSdkVersion rootProject.ext.targetSdkVersion
   }
   lintOptions {
     disable 'GoogleAppIndexingWarning'
diff --git a/leakcanary-android-no-op/build.gradle b/leakcanary-android-no-op/build.gradle
index 5f3dc025..9a787b47 100644
--- a/leakcanary-android-no-op/build.gradle
+++ b/leakcanary-android-no-op/build.gradle
@@ -21,7 +21,6 @@ android {
   buildToolsVersion rootProject.ext.buildToolsVersion
   defaultConfig {
     minSdkVersion rootProject.ext.minSdkVersion
-    targetSdkVersion rootProject.ext.targetSdkVersion
   }
 }
 
diff --git a/leakcanary-android/build.gradle b/leakcanary-android/build.gradle
index 70516ea7..f2f04fb3 100644
--- a/leakcanary-android/build.gradle
+++ b/leakcanary-android/build.gradle
@@ -27,7 +27,6 @@ android {
   buildToolsVersion rootProject.ext.buildToolsVersion
   defaultConfig {
     minSdkVersion rootProject.ext.minSdkVersion
-    targetSdkVersion rootProject.ext.targetSdkVersion
     buildConfigField "String", "LIBRARY_VERSION", "\"${rootProject.ext.VERSION_NAME}\""
     buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""
     consumerProguardFiles 'consumer-proguard-rules.pro'
diff --git a/leakcanary-android/src/main/AndroidManifest.xml b/leakcanary-android/src/main/AndroidManifest.xml
index b5393171..fc7d5cd3 100644
--- a/leakcanary-android/src/main/AndroidManifest.xml
+++ b/leakcanary-android/src/main/AndroidManifest.xml
@@ -39,7 +39,7 @@
         android:enabled="false"
         android:label="@string/leak_canary_display_activity_label"
         android:icon="@drawable/leak_canary_icon"
-        android:taskAffinity="com.squareup.leakcanary"
+        android:taskAffinity="com.squareup.leakcanary.${applicationId}"
         >
       <intent-filter>
         <action android:name="android.intent.action.MAIN"/>
@@ -49,7 +49,7 @@
     <activity
         android:theme="@style/leak_canary_Theme.Transparent"
         android:name=".internal.RequestStoragePermissionActivity"
-        android:taskAffinity="com.squareup.leakcanary"
+        android:taskAffinity="com.squareup.leakcanary.${applicationId}"
         android:enabled="false"
         android:icon="@drawable/leak_canary_icon"
         android:label="@string/leak_canary_storage_permission_activity_label"
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidExcludedRefs.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidExcludedRefs.java
index dd03f078..3e30290e 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidExcludedRefs.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidExcludedRefs.java
@@ -30,11 +30,15 @@
 import static android.os.Build.VERSION_CODES.LOLLIPOP;
 import static android.os.Build.VERSION_CODES.LOLLIPOP_MR1;
 import static android.os.Build.VERSION_CODES.M;
+import static android.os.Build.VERSION_CODES.N;
 import static com.squareup.leakcanary.AndroidWatchExecutor.LEAK_CANARY_THREAD_NAME;
+import static com.squareup.leakcanary.internal.LeakCanaryInternals.LENOVO;
 import static com.squareup.leakcanary.internal.LeakCanaryInternals.LG;
 import static com.squareup.leakcanary.internal.LeakCanaryInternals.MOTOROLA;
 import static com.squareup.leakcanary.internal.LeakCanaryInternals.NVIDIA;
 import static com.squareup.leakcanary.internal.LeakCanaryInternals.SAMSUNG;
+import static com.squareup.leakcanary.internal.LeakCanaryInternals.MEIZU;
+
 
 /**
  * This class is a work in progress. You can help by reporting leak traces that seem to be caused
@@ -173,7 +177,7 @@
     }
   },
 
-  SPELL_CHECKER_SESSION(SDK_INT >= JELLY_BEAN && SDK_INT <= LOLLIPOP_MR1) {
+  SPELL_CHECKER_SESSION((SDK_INT >= JELLY_BEAN && SDK_INT <= LOLLIPOP_MR1) || SDK_INT >= N) {
     @Override void add(ExcludedRefs.Builder excluded) {
       excluded.instanceField("android.view.textservice.SpellCheckerSession$1", "this$0")
           .reason("SpellCheckerSessionListenerImpl.mHandler is leaking destroyed Activity when the"
@@ -305,6 +309,14 @@
 
   // ######## Manufacturer specific Excluded refs ########
 
+  INSTRUMENTATION_RECOMMEND_ACTIVITY(MEIZU.equals(MANUFACTURER) && SDK_INT >= LOLLIPOP && SDK_INT <= LOLLIPOP_MR1) {
+    @Override void add(ExcludedRefs.Builder excluded) {
+      excluded.staticField("android.app.Instrumentation", "mRecommendActivity")
+              .reason("Instrumentation would leak com.android.internal.app.RecommendActivity (in framework.jar)"
+                  + " in Meizu FlymeOS 4.5 and above, which is based on Android 5.0 and above");
+    }
+  },
+
   DEVICE_POLICY_MANAGER__SETTINGS_OBSERVER(
       MOTOROLA.equals(MANUFACTURER) && SDK_INT >= KITKAT && SDK_INT <= LOLLIPOP_MR1) {
     @Override void add(ExcludedRefs.Builder excluded) {
@@ -366,7 +378,7 @@
   },
 
   TEXT_VIEW__MLAST_HOVERED_VIEW(
-      SAMSUNG.equals(MANUFACTURER) && SDK_INT >= KITKAT && SDK_INT <= LOLLIPOP) {
+      SAMSUNG.equals(MANUFACTURER) && SDK_INT >= KITKAT && SDK_INT <= LOLLIPOP_MR1) {
     @Override void add(ExcludedRefs.Builder excluded) {
       excluded.staticField("android.widget.TextView", "mLastHoveredView")
           .reason("mLastHoveredView is a static field in TextView that leaks the last hovered"
@@ -404,6 +416,15 @@
     }
   },
 
+  SYSTEM_SENSOR_MANAGER_LENOVO(LENOVO.equals(MANUFACTURER) && SDK_INT == KITKAT) {
+    @Override void add(ExcludedRefs.Builder excluded) {
+      excluded.staticField("android.hardware.SystemSensorManager", "mAppContextImpl")
+              .reason("Lenovo specific leak. SystemSensorManager stores a reference to context "
+                      + "in a static field in its constructor. Found on LENOVO 4.4.2. "
+                      + "Fix: use application context to get SensorManager");
+    }
+  },
+
   AUDIO_MANAGER__MCONTEXT_STATIC(SAMSUNG.equals(MANUFACTURER) && SDK_INT == KITKAT) {
     @Override void add(ExcludedRefs.Builder excluded) {
       excluded.staticField("android.media.AudioManager", "mContext_static")
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/DisplayLeakService.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/DisplayLeakService.java
index 24e8842b..6bf9450a 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/DisplayLeakService.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/DisplayLeakService.java
@@ -42,7 +42,7 @@
 
   @Override protected final void onHeapAnalyzed(HeapDump heapDump, AnalysisResult result) {
     String leakInfo = leakInfo(this, heapDump, result, true);
-    CanaryLog.d(leakInfo);
+    CanaryLog.d("%s", leakInfo);
 
     boolean resultSaved = false;
     boolean shouldSaveResult = result.leakFound || result.failure != null;
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/DisplayLeakActivity.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/DisplayLeakActivity.java
index e1fbb683..e267d375 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/DisplayLeakActivity.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/DisplayLeakActivity.java
@@ -130,7 +130,6 @@ private static LeakDirectoryProvider leakDirectoryProvider(Context context) {
     updateUi();
   }
 
-  // No, it's not deprecated. Android lies.
   @Override public Object onRetainNonConfigurationInstance() {
     return leaks;
   }
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/LeakCanaryInternals.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/LeakCanaryInternals.java
index ab25c64c..4e16fd12 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/LeakCanaryInternals.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/LeakCanaryInternals.java
@@ -45,8 +45,10 @@
 
   public static final String SAMSUNG = "samsung";
   public static final String MOTOROLA = "motorola";
+  public static final String LENOVO = "LENOVO";
   public static final String LG = "LGE";
   public static final String NVIDIA = "NVIDIA";
+  public static final String MEIZU = "Meizu";
 
   private static final Executor fileIoExecutor = newSingleThreadExecutor("File-IO");
 
diff --git a/leakcanary-watcher/build.gradle b/leakcanary-watcher/build.gradle
index c7301cab..cfdd8877 100644
--- a/leakcanary-watcher/build.gradle
+++ b/leakcanary-watcher/build.gradle
@@ -33,7 +33,6 @@ android {
   buildToolsVersion rootProject.ext.buildToolsVersion
   defaultConfig {
     minSdkVersion rootProject.ext.minSdkVersion
-    targetSdkVersion rootProject.ext.targetSdkVersion
   }
   dexOptions {
     javaMaxHeapSize '2048M'
