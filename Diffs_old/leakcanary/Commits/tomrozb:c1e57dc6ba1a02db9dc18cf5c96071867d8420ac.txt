diff --git a/build.gradle b/build.gradle
index 6f0281ca..eecf8898 100644
--- a/build.gradle
+++ b/build.gradle
@@ -26,19 +26,5 @@ ext {
   javaVersion = JavaVersion.VERSION_1_7
 
   GROUP = 'com.squareup.leakcanary'
-  VERSION_NAME = "1.4-SNAPSHOT"
-  POM_PACKAGING = "pom"
-  POM_DESCRIPTION= "Leak Canary"
-
-  POM_URL="http://github.com/square/leakcanary/"
-  POM_SCM_URL="http://github.com/square/leakcanary/"
-  POM_SCM_CONNECTION="scm:git:https://github.com/square/leakcanary.git"
-  POM_SCM_DEV_CONNECTION="scm:git:git@github.com:square/leakcanary.git"
-
-  POM_LICENCE_NAME="The Apache Software License, Version 2.0"
-  POM_LICENCE_URL="http://www.apache.org/licenses/LICENSE-2.0.txt"
-  POM_LICENCE_DIST="repo"
-
-  POM_DEVELOPER_ID="square"
-  POM_DEVELOPER_NAME="Square, Inc."
+  VERSION_NAME = "2.0-SNAPSHOT"
 }
diff --git a/gradle/gradle-mvn-push.gradle b/gradle/gradle-mvn-push.gradle
deleted file mode 100644
index 01938b95..00000000
--- a/gradle/gradle-mvn-push.gradle
+++ /dev/null
@@ -1,100 +0,0 @@
-apply plugin: 'maven'
-apply plugin: 'signing'
-
-def isReleaseBuild() {
-    return VERSION_NAME.contains("SNAPSHOT") == false
-}
-
-def getReleaseRepositoryUrl() {
-  return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
-      : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
-}
-
-def getSnapshotRepositoryUrl() {
-  return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
-      : "https://oss.sonatype.org/content/repositories/snapshots/"
-}
-
-def getRepositoryUsername() {
-    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
-}
-
-def getRepositoryPassword() {
-    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
-}
-
-afterEvaluate { project ->
-    uploadArchives {
-        repositories {
-            mavenDeployer {
-                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
-
-                pom.groupId = GROUP
-                pom.artifactId = POM_ARTIFACT_ID
-                pom.version = VERSION_NAME
-
-                repository(url: getReleaseRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-                snapshotRepository(url: getSnapshotRepositoryUrl()) {
-                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
-                }
-
-                pom.project {
-                    name POM_NAME
-                    packaging POM_PACKAGING
-                    description POM_DESCRIPTION
-                    url POM_URL
-
-                    scm {
-                        url POM_SCM_URL
-                        connection POM_SCM_CONNECTION
-                        developerConnection POM_SCM_DEV_CONNECTION
-                    }
-
-                    licenses {
-                        license {
-                            name POM_LICENCE_NAME
-                            url POM_LICENCE_URL
-                            distribution POM_LICENCE_DIST
-                        }
-                    }
-
-                    developers {
-                        developer {
-                            id POM_DEVELOPER_ID
-                            name POM_DEVELOPER_NAME
-                        }
-                    }
-                }
-
-            }
-        }
-    }
-
-    signing {
-        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
-        sign configurations.archives
-    }
-
-    task androidJavadocs(type: Javadoc) {
-        source = android.sourceSets.main.java.srcDirs
-        ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
-        classpath += files(ext.androidJar)
-    }
-
-    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
-        classifier = 'javadoc'
-        from androidJavadocs.destinationDir
-    }
-
-    task androidSourcesJar(type: Jar) {
-        classifier = 'sources'
-        from android.sourceSets.main.java.sourceFiles
-    }
-
-    artifacts {
-        archives androidSourcesJar
-        archives androidJavadocsJar
-    }
-}
diff --git a/leakcanary-analyzer/build.gradle b/leakcanary-analyzer/build.gradle
index c12cab76..cf1aa46c 100644
--- a/leakcanary-analyzer/build.gradle
+++ b/leakcanary-analyzer/build.gradle
@@ -1,3 +1,5 @@
+apply plugin: 'maven'
+
 version rootProject.ext.VERSION_NAME
 group rootProject.ext.GROUP
 
@@ -54,5 +56,17 @@ task sourceJar(type: Jar) {
   from 'src/main/java'
 }
 
+uploadArchives {
+  repositories {
+    mavenDeployer {
+      pom {
+        groupId = 'com.squareup.leakcanary'
+        artifactId = 'leakcanary-analyzer'
+        version = rootProject.ext.VERSION_NAME
+      }
+      repository(url: 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath)
+    }
+  }
+}
+
 apply from: rootProject.file('gradle/checkstyle.gradle')
-apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
diff --git a/leakcanary-analyzer/src/main/java/com/squareup/leakcanary/HahaHelper.java b/leakcanary-analyzer/src/main/java/com/squareup/leakcanary/HahaHelper.java
index d281056b..686df7b6 100644
--- a/leakcanary-analyzer/src/main/java/com/squareup/leakcanary/HahaHelper.java
+++ b/leakcanary-analyzer/src/main/java/com/squareup/leakcanary/HahaHelper.java
@@ -95,6 +95,9 @@ static String asString(Object stringObject) {
     }
     checkNotNull(count, "count");
     checkNotNull(charArray, "charArray");
+    if (offset == null) {
+      offset = 0;
+    }
     checkNotNull(offset, "offset");
 
     if (count == 0) {
@@ -140,7 +143,8 @@ private static boolean isCharArray(Object value) {
         return (T) fieldValue.getValue();
       }
     }
-    throw new IllegalArgumentException("Field " + fieldName + " does not exists");
+    return null;
+    // throw new IllegalArgumentException("Field " + fieldName + " does not exists");
   }
 
   private HahaHelper() {
diff --git a/leakcanary-android-no-op/build.gradle b/leakcanary-android-no-op/build.gradle
index 5f3dc025..42e234c6 100644
--- a/leakcanary-android-no-op/build.gradle
+++ b/leakcanary-android-no-op/build.gradle
@@ -30,4 +30,3 @@ task sourceJar(type: Jar) {
 }
 
 apply from: rootProject.file('gradle/checkstyle.gradle')
-apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
\ No newline at end of file
diff --git a/leakcanary-android/build.gradle b/leakcanary-android/build.gradle
index beb07063..2a192c6a 100644
--- a/leakcanary-android/build.gradle
+++ b/leakcanary-android/build.gradle
@@ -1,3 +1,5 @@
+apply plugin: 'maven'
+
 version rootProject.ext.VERSION_NAME
 group rootProject.ext.GROUP
 
@@ -34,9 +36,28 @@ android {
   }
 }
 
-task sourceJar(type: Jar) {
-  from 'src/main/java'
+tasks.withType(JavaCompile) {
+  options.compilerArgs << "-Xlint:unchecked"
+  options.compilerArgs << "-Xlint:deprecation"
+}
+
+allprojects {
+  tasks.withType(Javadoc) {
+    options.addStringOption('Xdoclint:none', '-quiet')
+  }
+}
+
+uploadArchives {
+  repositories {
+    mavenDeployer {
+      pom {
+        groupId = 'com.squareup.leakcanary'
+        artifactId = 'leakcanary-android'
+        version = rootProject.ext.VERSION_NAME
+      }
+      repository(url: 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath)
+    }
+  }
 }
 
 apply from: rootProject.file('gradle/checkstyle.gradle')
-apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
\ No newline at end of file
diff --git a/leakcanary-watcher/build.gradle b/leakcanary-watcher/build.gradle
index ac0cac77..d054337e 100644
--- a/leakcanary-watcher/build.gradle
+++ b/leakcanary-watcher/build.gradle
@@ -1,3 +1,5 @@
+apply plugin: 'maven'
+
 version rootProject.ext.VERSION_NAME
 group rootProject.ext.GROUP
 
@@ -41,5 +43,17 @@ task sourceJar(type: Jar) {
   from 'src/main/java'
 }
 
+uploadArchives {
+  repositories {
+    mavenDeployer {
+      pom {
+        groupId = 'com.squareup.leakcanary'
+        artifactId = 'leakcanary-watcher'
+        version = rootProject.ext.VERSION_NAME
+      }
+      repository(url: 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath)
+    }
+  }
+}
+
 apply from: rootProject.file('gradle/checkstyle.gradle')
-apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
\ No newline at end of file
