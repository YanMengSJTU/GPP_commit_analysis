diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidHeapDumper.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidHeapDumper.java
index 12af6dcf..390cb06f 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidHeapDumper.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidHeapDumper.java
@@ -75,7 +75,12 @@ public File dumpHeap() {
     }
 
     FutureResult<Toast> waitingForToast = new FutureResult<>();
-    showToast(waitingForToast);
+
+    if (context.getResources().getBoolean(R.bool.leak_canary_show_toast)) {
+      showToast(waitingForToast);
+    } else {
+      waitingForToast.set(null);
+    }
 
     if (!waitingForToast.wait(5, SECONDS)) {
       CanaryLog.d("Did not dump heap, too much time waiting for Toast.");
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/HeapAnalyzerService.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/HeapAnalyzerService.java
index 545d94df..7c8acd79 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/HeapAnalyzerService.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/HeapAnalyzerService.java
@@ -66,7 +66,12 @@ public HeapAnalyzerService() {
 
     AnalysisResult result = heapAnalyzer.checkForLeak(heapDump.heapDumpFile, heapDump.referenceKey,
         heapDump.computeRetainedHeapSize);
-    AbstractAnalysisResultService.sendResultToListener(this, listenerClassName, heapDump, result);
+
+    boolean notifyExcludedLeak = getResources().getBoolean(R.bool.leak_canary_notify_excluded_leak);
+
+    if (!result.excludedLeak || notifyExcludedLeak) {
+      AbstractAnalysisResultService.sendResultToListener(this, listenerClassName, heapDump, result);
+    }
   }
 
   @Override public void onProgressUpdate(Step step) {
diff --git a/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/LeakCanaryInternals.java b/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/LeakCanaryInternals.java
index dcd3f1ec..353e2748 100644
--- a/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/LeakCanaryInternals.java
+++ b/leakcanary-android/src/main/java/com/squareup/leakcanary/internal/LeakCanaryInternals.java
@@ -105,7 +105,8 @@ public static boolean isInServiceProcess(Context context, Class<? extends Servic
     ComponentName component = new ComponentName(context, serviceClass);
     ServiceInfo serviceInfo;
     try {
-      serviceInfo = packageManager.getServiceInfo(component, PackageManager.GET_DISABLED_COMPONENTS);
+      serviceInfo =
+          packageManager.getServiceInfo(component, PackageManager.GET_DISABLED_COMPONENTS);
     } catch (PackageManager.NameNotFoundException ignored) {
       // Service is disabled.
       return false;
@@ -172,8 +173,10 @@ public static Notification buildNotification(Context context,
           notificationManager.getNotificationChannel(NOTIFICATION_CHANNEL_ID);
       if (notificationChannel == null) {
         String channelName = context.getString(R.string.leak_canary_notification_channel);
-        notificationChannel = new NotificationChannel(NOTIFICATION_CHANNEL_ID, channelName,
-            NotificationManager.IMPORTANCE_DEFAULT);
+        int channelImportance =
+            context.getResources().getInteger(R.integer.leak_canary_notification_importance);
+        notificationChannel =
+            new NotificationChannel(NOTIFICATION_CHANNEL_ID, channelName, channelImportance);
         notificationManager.createNotificationChannel(notificationChannel);
       }
       builder.setChannelId(NOTIFICATION_CHANNEL_ID);
diff --git a/leakcanary-android/src/main/res/values/leak_canary_bools.xml b/leakcanary-android/src/main/res/values/leak_canary_bools.xml
new file mode 100644
index 00000000..fc8fb90d
--- /dev/null
+++ b/leakcanary-android/src/main/res/values/leak_canary_bools.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <bool name="leak_canary_notify_excluded_leak">false</bool>
+  <bool name="leak_canary_show_toast">true</bool>
+</resources>
\ No newline at end of file
diff --git a/leakcanary-android/src/main/res/values/leak_canary_integers.xml b/leakcanary-android/src/main/res/values/leak_canary_integers.xml
new file mode 100644
index 00000000..fbd843fa
--- /dev/null
+++ b/leakcanary-android/src/main/res/values/leak_canary_integers.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <integer name="leak_canary_notification_importance">3</integer>
+</resources>
\ No newline at end of file
diff --git a/leakcanary-android/src/main/res/values/leak_canary_public.xml b/leakcanary-android/src/main/res/values/leak_canary_public.xml
index 165c1738..ef70f238 100644
--- a/leakcanary-android/src/main/res/values/leak_canary_public.xml
+++ b/leakcanary-android/src/main/res/values/leak_canary_public.xml
@@ -19,5 +19,8 @@
   <public name="leak_canary_display_activity_label" type="string"/>
   <public name="leak_canary_heap_dump_toast" type="layout"/>
   <public name="leak_canary_icon" type="mipmap"/>
+  <!-- See android.app.NotificationManager.Importance -->
+  <public name="leak_canary_notification_importance" type="integer"/>
+  <public name="leak_canary_notify_excluded_leak" type="boolean"/>
 
 </resources>
diff --git a/leakcanary-sample/src/main/res/values/bools.xml b/leakcanary-sample/src/main/res/values/bools.xml
new file mode 100644
index 00000000..cc0a1334
--- /dev/null
+++ b/leakcanary-sample/src/main/res/values/bools.xml
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <bool name="leak_canary_notify_excluded_leak">true</bool>
+  <bool name="leak_canary_show_toast">false</bool>
+</resources>
\ No newline at end of file
diff --git a/leakcanary-sample/src/main/res/values/integers.xml b/leakcanary-sample/src/main/res/values/integers.xml
new file mode 100644
index 00000000..32cbc507
--- /dev/null
+++ b/leakcanary-sample/src/main/res/values/integers.xml
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+  <integer name="leak_canary_notification_importance">1</integer>
+</resources>
\ No newline at end of file
