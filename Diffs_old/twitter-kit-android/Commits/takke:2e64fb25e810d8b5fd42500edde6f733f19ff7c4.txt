diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/SearchMetadata.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/SearchMetadata.java
deleted file mode 100644
index 820f8510..00000000
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/SearchMetadata.java
+++ /dev/null
@@ -1,63 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.core.models;
-
-import com.google.gson.annotations.SerializedName;
-
-public class SearchMetadata {
-
-    @SerializedName("max_id")
-    public final long maxId;
-
-    @SerializedName("since_id")
-    public final long sinceId;
-
-    @SerializedName("refresh_url")
-    public final String refreshUrl;
-
-    @SerializedName("next_results")
-    public final String nextResults;
-
-    @SerializedName("count")
-    public final long count;
-
-    @SerializedName("completed_in")
-    public final double completedIn;
-
-    @SerializedName("since_id_str")
-    public final String sinceIdStr;
-
-    @SerializedName("query")
-    public final String query;
-
-    @SerializedName("max_id_str")
-    public final String maxIdStr;
-
-    public SearchMetadata(int maxId, int sinceId, String refreshUrl, String nextResults, int count,
-                          double completedIn, String sinceIdStr, String query, String maxIdStr) {
-        this.maxId = maxId;
-        this.sinceId = sinceId;
-        this.refreshUrl = refreshUrl;
-        this.nextResults = nextResults;
-        this.count = count;
-        this.completedIn = completedIn;
-        this.sinceIdStr = sinceIdStr;
-        this.query = query;
-        this.maxIdStr = maxIdStr;
-    }
-}
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/VideoInfo.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/VideoInfo.java
deleted file mode 100644
index 18ec4a04..00000000
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/VideoInfo.java
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.core.models;
-
-import com.google.gson.annotations.SerializedName;
-
-import java.io.Serializable;
-import java.util.List;
-
-/**
- * Contains information about video.
- */
-public class VideoInfo implements Serializable {
-    /**
-     * The aspect ratio of the video, as a simplified fraction of width and height in a 2-element
-     * list. Typical values are [4, 3] or [16, 9].
-     */
-    @SerializedName("aspect_ratio")
-    public final List<Integer> aspectRatio;
-
-    /**
-     * The length of the video, in milliseconds.
-     */
-    @SerializedName("duration_millis")
-    public final long durationMillis;
-
-    /**
-     * Different encodings/streams of the video.
-     */
-    @SerializedName("variants")
-    public final List<Variant> variants;
-
-    private VideoInfo() {
-        this(null, 0, null);
-    }
-
-    public VideoInfo(List<Integer> aspectRatio, long durationMillis, List<Variant> variants) {
-        this.aspectRatio = ModelUtils.getSafeList(aspectRatio);
-        this.durationMillis = durationMillis;
-        this.variants = ModelUtils.getSafeList(variants);
-    }
-
-    public static class Variant implements Serializable {
-        @SerializedName("bitrate")
-        public final long bitrate;
-
-        @SerializedName("content_type")
-        public final String contentType;
-
-        @SerializedName("url")
-        public final String url;
-
-        public Variant(long bitrate, String contentType, String url) {
-            this.bitrate = bitrate;
-            this.contentType = contentType;
-            this.url = url;
-        }
-    }
-}
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/params/Geocode.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/params/Geocode.java
deleted file mode 100644
index 0722f13e..00000000
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/params/Geocode.java
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.core.services.params;
-
-/**
- *
- * The parameter value is specified by "latitude,longitude,radius", where radius units must be
- * specified as either "mi" (miles) or "km" (kilometers). Note that you cannot use the near
- * operator via the API to geocode arbitrary locations; however you can use this geocode parameter
- * to search near geocodes directly.
- *
- * Example Values: 37.781157,-122.398720,1mi
- *
- * <a href="https://dev.twitter.com/rest/reference/get/search/tweets">GET search/tweets</a>
- */
-public class Geocode {
-
-    public enum Distance {
-        MILES("mi"),
-        KILOMETERS("km");
-
-        public final String identifier;
-
-        Distance(String identifier) {
-            this.identifier = identifier;
-        }
-    }
-
-    public final double latitude;
-    public final double longitude;
-    public final int radius;
-    public final Distance distance;
-
-    public Geocode(double latitude, double longitude, int radius, Distance distance) {
-        this.latitude = latitude;
-        this.longitude = longitude;
-        this.radius = radius;
-        this.distance = distance;
-    }
-
-    @Override
-    public String toString() {
-        return latitude + "," + longitude + "," + radius + distance.identifier;
-    }
-}
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/BindingValuesAdapterTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/BindingValuesAdapterTest.java
index e55d94d5..b24cd7cd 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/BindingValuesAdapterTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/BindingValuesAdapterTest.java
@@ -78,11 +78,6 @@ public void testDeserialize_withValidBindingValues() {
         assertTrue(card.bindingValues.containsKey("player_height"));
         assertEquals("535", card.bindingValues.get("player_height"));
         assertTrue(card.bindingValues.containsKey("player_image"));
-        final ImageValue imageValue = card.bindingValues.get("player_image");
-        assertNotNull(imageValue);
-        assertEquals(480, imageValue.height);
-        assertEquals(480, imageValue.width);
-        assertEquals("https://o.twimg.com/qwhjddd", imageValue.url);
         assertTrue(card.bindingValues.containsKey("player_stream_content_type"));
         assertTrue(card.bindingValues.containsKey("player_stream_url"));
         assertTrue(card.bindingValues.containsKey("player_url"));
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/services/params/GeocodeTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/services/params/GeocodeTest.java
deleted file mode 100644
index c05b5d29..00000000
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/services/params/GeocodeTest.java
+++ /dev/null
@@ -1,34 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.core.services.params;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import static org.junit.Assert.assertEquals;
-
-@RunWith(RobolectricTestRunner.class)
-public class GeocodeTest  {
-
-    @Test
-    public void testToString() {
-        final Geocode geocode = new Geocode(1.0, 1.0, 1, Geocode.Distance.MILES);
-        assertEquals("1.0,1.0,1mi", geocode.toString());
-    }
-}
