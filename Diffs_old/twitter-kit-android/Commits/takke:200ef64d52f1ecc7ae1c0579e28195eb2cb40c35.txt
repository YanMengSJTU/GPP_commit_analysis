diff --git a/settings.gradle b/settings.gradle
index 013a9442..466cbcc0 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -17,7 +17,7 @@
 
 include ':twitter-core'
 //include ':tweet-composer'
-include ':tweet-ui'
+//include ':tweet-ui'
 //include ':twitter-mopub'
 //include ':twitter'
 //include ':samples:app'
\ No newline at end of file
diff --git a/tweet-composer/build.gradle b/tweet-composer/build.gradle
deleted file mode 100644
index 7fa9ff2f..00000000
--- a/tweet-composer/build.gradle
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        versionCode 1
-        versionName version
-        minSdkVersion rootProject.minSdkVersion
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-
-            testCoverageEnabled enableTestCodeCoverage
-        }
-
-        release {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-        }
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-
-    testOptions {
-        unitTests.returnDefaultValues = true
-        unitTests.includeAndroidResources true
-    }
-}
-
-dependencies {
-    api project(':twitter-core')
-
-    implementation dependency.picasso
-    implementation dependency.tweetText
-
-    androidTestCompile dependency.mockito
-    androidTestCompile dependency.dexmakerMockito
-
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile dependency.retrofitMock
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
-}
diff --git a/tweet-composer/changelog.md b/tweet-composer/changelog.md
deleted file mode 100644
index bc5f71c8..00000000
--- a/tweet-composer/changelog.md
+++ /dev/null
@@ -1,105 +0,0 @@
-# Android SDK TweetComposer Kit changelog
-
-*Non-trivial pull requests should include an entry below. Entries must be suitable for inclusion in public-facing materials such as release notes and blog posts. Keep them short, sweet, and in the past tense. New entries go on top. When merging to deploy, add the version number and date.*
-
-## Unreleased
-
-## v3.3.0
-
-* Removed scribing
-
-## v3.2.0
-
-* Moved build to Java 8
-
-## v3.1.1
-
-* Send broadcast when Tweet compose is cancelled.
-
-## v3.1.0
-
-* Bumped version number
-
-## v3.0.0
-
-* App card creation removed from composer
-
-## v2.3.1
-
-* Restricted Broadcast Intents to current application to avoid leaking sensitive information.
-
-## v2.3.0
-
-* Updated Twitter Core dependency.
-
-## v2.2.0
-
-* Updated Twitter Core dependency.
-
-## v2.1.0
-
-* Updated Twitter Core dependency to version 2.1.0.
-
-## v2.0.1
-
-* Added translations.
-* Removed pseudo locales from translations.
-
-## v2.0.0
-
-* Dropped support for API versions before API 14 (ICS).
-* Updated Twitter Core dependency
-
-## v1.0.5
-
-* Updated Twitter Core dependency
-
-## v1.0.4
-
-* Updated Fabric Base dependency
-* Updated composer to accept #hashtags
-
-## v1.0.3
-
-## v1.0.2
-
-## v1.0.1
-
-* Renamed drawables to avoid name collisions.
-
-## v1.0.0
-
-* Added composer with support for app install cards.
-
-## v0.9.0
-
-* Raised Min SDK version from 8 to 9.
-
-## v0.8.0
-
-* (DH) Removed tweet-composer dependency on twitter-core.
-
-## v0.7.4
-
-* (DH) Allow tweet-composer dependency on twitter-core to be excluded.
-
-## v0.7.3
-**Jan 30 2015**
-
-* (EF) Removed targetSdkVersion because it should not be specified on libraries.
-
-## v0.7.2
-**Nov 20 2014**
-
-* (TS) Moved to Java 7
-
-## v0.7.1
-**Oct 30 2014**
-
-* (TY) Removed Apache 2.0 License from pom files.
-
-## v0.7.0
-**Oct 15 2014**
-
-* (LTM) Removed allowBackup=true attribute from application element in AndroidManifest.xml.
-* Create TweetComposer Builder to assist in building intent for Twitter for Android and will fallback to a Browser
diff --git a/tweet-composer/gradle.properties b/tweet-composer/gradle.properties
deleted file mode 100644
index fb158331..00000000
--- a/tweet-composer/gradle.properties
+++ /dev/null
@@ -1,26 +0,0 @@
-#
-# Copyright (C) 2015 Twitter, Inc.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-#
-
-# The to be released version. When releasing, drop -SNAPSHOT. After releasing, bump version
-# number and add back -SNAPSHOT
-version=3.3.0-SNAPSHOT
-version_code=1
-
-pom_name=Tweet Composer Android SDK
-pom_group_id=com.twitter.sdk.android
-pom_artifact_id=tweet-composer
-pom_packaging=aar
diff --git a/tweet-composer/internal-build.gradle b/tweet-composer/internal-build.gradle
deleted file mode 100644
index e8755295..00000000
--- a/tweet-composer/internal-build.gradle
+++ /dev/null
@@ -1,102 +0,0 @@
-import io.fabric.gradle.weaving.ArtifactSizePlugin
-import io.fabric.gradle.weaving.DexMethodCountPlugin
-
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-apply plugin: 'com.android.library'
-apply from: rootProject.qualityScript
-apply plugin: ArtifactSizePlugin
-apply plugin: DexMethodCountPlugin
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        versionCode 1
-        versionName version
-        group pom_group_id
-
-        minSdkVersion rootProject.minSdkVersion
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-
-            testCoverageEnabled enableTestCodeCoverage
-        }
-        release {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-        }
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    dexMethodCount {
-        packageFilter = "com.twitter.sdk.android.tweetcomposer"
-    }
-
-    //Gradle publishes only release by default for multi module projects
-    //This will publish all build variants and we can specifically choose them
-    defaultPublishConfig 'release'
-    publishNonDefault true
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-
-    testOptions {
-        unitTests.returnDefaultValues = true
-        unitTests.includeAndroidResources true
-    }
-}
-
-ext.projectDependencies = [
-        ':sdk:twitter:twitter-core'
-]
-
-dependencies {
-    projectDependencies.each { path ->
-        api project(path: path)
-    }
-    implementation dependency.picasso
-    implementation dependency.tweetText
-
-    androidTestCompile dependency.mockito
-    androidTestCompile dependency.dexmakerMockito
-
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile dependency.retrofitMock
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
-}
-
-apply from: rootProject.deployScript
\ No newline at end of file
diff --git a/tweet-composer/lint.xml b/tweet-composer/lint.xml
deleted file mode 100644
index 9d1a00a6..00000000
--- a/tweet-composer/lint.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<lint>
-    <issue id="IconMissingDensityFolder" severity="ignore">
-        <!-- Suppress lint warning on xxxhdpi, which "is necessary only to provide a launcher icon
-        that can appear larger than usual on an xxhdpi device. You do not need to provide xxxhdpi
-        assets for all your app's images." -->
-        <ignore path="src/main/res/drawable-xxxhdpi"/>
-    </issue>
-    <issue id="InvalidPackage" severity="ignore"/>
-</lint>
diff --git a/tweet-composer/src/androidTest/java/com/twitter/sdk/android/tweetcomposer/TweetComposerTest.java b/tweet-composer/src/androidTest/java/com/twitter/sdk/android/tweetcomposer/TweetComposerTest.java
deleted file mode 100644
index eb95e2e4..00000000
--- a/tweet-composer/src/androidTest/java/com/twitter/sdk/android/tweetcomposer/TweetComposerTest.java
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.test.AndroidTestCase;
-
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.TwitterConfig;
-import com.twitter.sdk.android.core.TwitterCoreTestUtils;
-import com.twitter.sdk.android.core.TwitterTestUtils;
-
-import java.util.concurrent.ThreadPoolExecutor;
-
-import static org.mockito.Mockito.mock;
-
-public class TweetComposerTest extends AndroidTestCase {
-    private static final String TWITTER_NOT_INIT_ERROR_MSG =
-            "Must initialize Twitter before using getInstance()";
-    private TweetComposer tweetComposer;
-
-    public void setUp() throws Exception {
-        super.setUp();
-        Twitter.initialize(new TwitterConfig.Builder(getContext())
-                .executorService(mock(ThreadPoolExecutor.class))
-                .build());
-        tweetComposer = new TweetComposer();
-        tweetComposer.instance = tweetComposer;
-    }
-
-    public void tearDown()  throws Exception {
-        TwitterTestUtils.resetTwitter();
-        TwitterCoreTestUtils.resetTwitterCore();
-        tweetComposer.instance = null;
-
-        super.tearDown();
-    }
-
-    public void testGetVersion() {
-        final String version = BuildConfig.VERSION_NAME + "." + BuildConfig.BUILD_NUMBER;
-        assertEquals(version, tweetComposer.getVersion());
-    }
-
-    public void testGetIdentifier() {
-        final String identifier = BuildConfig.GROUP + ":" + BuildConfig.ARTIFACT_ID;
-        assertEquals(identifier, tweetComposer.getIdentifier());
-    }
-
-    public void testGetInstance_twitterNotInitialized() throws Exception {
-        try {
-            TwitterTestUtils.resetTwitter();
-            TwitterCoreTestUtils.resetTwitterCore();
-            tweetComposer.instance = null;
-
-            TweetComposer.getInstance();
-            fail("Should fail if Twitter is not initialized");
-        } catch (IllegalStateException e) {
-            assertEquals(TWITTER_NOT_INIT_ERROR_MSG, e.getMessage());
-        }
-    }
-}
diff --git a/tweet-composer/src/main/AndroidManifest.xml b/tweet-composer/src/main/AndroidManifest.xml
deleted file mode 100644
index 53c3faf4..00000000
--- a/tweet-composer/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,34 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<manifest
-    package="com.twitter.sdk.android.tweetcomposer"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <uses-permission android:name="android.permission.INTERNET"/>
-
-    <application>
-        <activity
-            android:name=".ComposerActivity"
-            android:exported="false"
-            android:windowSoftInputMode="adjustResize|stateVisible"/>
-        <service
-            android:name=".TweetUploadService"
-            android:enabled="true"
-            android:exported="false"/>
-    </application>
-</manifest>
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerActivity.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerActivity.java
deleted file mode 100644
index 50104e12..00000000
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerActivity.java
+++ /dev/null
@@ -1,152 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.app.Activity;
-import android.content.Context;
-import android.content.Intent;
-import android.net.Uri;
-import android.os.Bundle;
-
-import com.twitter.Regex;
-import com.twitter.sdk.android.core.TwitterAuthToken;
-import com.twitter.sdk.android.core.TwitterSession;
-
-public class ComposerActivity extends Activity {
-    static final String EXTRA_USER_TOKEN = "EXTRA_USER_TOKEN";
-    static final String EXTRA_IMAGE_URI = "EXTRA_IMAGE_URI";
-    static final String EXTRA_THEME = "EXTRA_THEME";
-    static final String EXTRA_TEXT = "EXTRA_TEXT";
-    static final String EXTRA_HASHTAGS = "EXTRA_HASHTAGS";
-    private static final int PLACEHOLDER_ID = -1;
-    private static final String PLACEHOLDER_SCREEN_NAME = "";
-    private ComposerController composerController;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        final Intent intent = getIntent();
-        final TwitterAuthToken token = intent.getParcelableExtra(EXTRA_USER_TOKEN);
-        final TwitterSession session = new TwitterSession(token, PLACEHOLDER_ID,
-                PLACEHOLDER_SCREEN_NAME);
-        final Uri imageUri = intent.getParcelableExtra(EXTRA_IMAGE_URI);
-        final String text = intent.getStringExtra(EXTRA_TEXT);
-        final String hashtags = intent.getStringExtra(EXTRA_HASHTAGS);
-        final int themeResId = intent.getIntExtra(EXTRA_THEME, R.style.ComposerLight);
-
-        setTheme(themeResId);
-        setContentView(R.layout.tw__activity_composer);
-        final ComposerView composerView = findViewById(R.id.tw__composer_view);
-        composerController = new ComposerController(composerView, session, imageUri, text, hashtags,
-                new FinisherImpl());
-    }
-
-    interface Finisher {
-        void finish();
-    }
-
-    // FinisherImpl allows sub-components to finish the host Activity.
-    class FinisherImpl implements Finisher {
-        @Override
-        public void finish() {
-            ComposerActivity.this.finish();
-        }
-    }
-
-    @Override
-    public void onBackPressed() {
-        super.onBackPressed();
-        composerController.onClose();
-    }
-
-    public static class Builder {
-        private final Context context;
-        private TwitterAuthToken token;
-        private int themeResId = R.style.ComposerLight;
-        private Uri imageUri;
-        private String text;
-        private String hashtags;
-
-        public Builder(Context context) {
-            if (context == null) {
-                throw new IllegalArgumentException("Context must not be null");
-            }
-            this.context = context;
-        }
-
-        public Builder session(TwitterSession session) {
-            if (session == null) {
-                throw new IllegalArgumentException("TwitterSession must not be null");
-            }
-            final TwitterAuthToken token = session.getAuthToken();
-            if (token == null) {
-                throw new IllegalArgumentException("TwitterSession token must not be null");
-            }
-            // session passed via the parcelable auth token
-            this.token = token;
-            return this;
-        }
-
-        public Builder image(Uri imageUri) {
-            this.imageUri = imageUri;
-            return this;
-        }
-
-        public Builder text(String text) {
-            this.text = text;
-            return this;
-        }
-
-        public Builder hashtags(String... hashtags) {
-            if (hashtags == null) return this;
-
-            final StringBuilder sb = new StringBuilder();
-            for (String hashtag : hashtags) {
-                if (Regex.VALID_HASHTAG.matcher(hashtag).find()) {
-                    if (sb.length() > 0) {
-                        sb.append(" ");
-                    }
-                    sb.append(hashtag);
-                }
-            }
-
-            this.hashtags = sb.length() == 0 ? null : sb.toString();
-
-            return this;
-        }
-
-        public Builder darkTheme() {
-            themeResId = R.style.ComposerDark;
-            return this;
-        }
-
-        public Intent createIntent() {
-            if (token == null) {
-                throw new IllegalStateException("Must set a TwitterSession");
-            }
-            final Intent intent = new Intent(context, ComposerActivity.class);
-            intent.putExtra(EXTRA_USER_TOKEN, token);
-            intent.putExtra(EXTRA_IMAGE_URI, imageUri);
-            intent.putExtra(EXTRA_THEME, themeResId);
-            intent.putExtra(EXTRA_TEXT, text);
-            intent.putExtra(EXTRA_HASHTAGS, hashtags);
-            return intent;
-        }
-    }
-}
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerController.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerController.java
deleted file mode 100644
index 2b210ab6..00000000
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerController.java
+++ /dev/null
@@ -1,188 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.content.Intent;
-import android.net.Uri;
-import android.text.TextUtils;
-
-import com.twitter.Validator;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.core.models.User;
-
-import static com.twitter.sdk.android.tweetcomposer.TweetUploadService.TWEET_COMPOSE_CANCEL;
-
-class ComposerController {
-    final ComposerView composerView;
-    final TwitterSession session;
-    final Uri imageUri;
-    final ComposerActivity.Finisher finisher;
-    final DependencyProvider dependencyProvider;
-
-    ComposerController(final ComposerView composerView, TwitterSession session, Uri imageUri,
-            String text, String hashtags, ComposerActivity.Finisher finisher) {
-        this(composerView, session, imageUri, text, hashtags, finisher, new DependencyProvider());
-    }
-
-    // testing purposes
-    ComposerController(final ComposerView composerView, TwitterSession session, Uri imageUri,
-            String text, String hashtags, ComposerActivity.Finisher finisher,
-            DependencyProvider dependencyProvider) {
-        this.composerView = composerView;
-        this.session = session;
-        this.imageUri = imageUri;
-        this.finisher = finisher;
-        this.dependencyProvider = dependencyProvider;
-
-        composerView.setCallbacks(new ComposerCallbacksImpl());
-        composerView.setTweetText(generateText(text, hashtags));
-        setProfilePhoto();
-        setImageView(imageUri);
-    }
-
-    String generateText(String text, String hashtags) {
-        final StringBuilder sb = new StringBuilder();
-        if (!TextUtils.isEmpty(text)) {
-            sb.append(text);
-        }
-        if (!TextUtils.isEmpty(hashtags)) {
-            if (sb.length() > 0) {
-                sb.append(" ");
-            }
-            sb.append(hashtags);
-        }
-        return sb.toString();
-    }
-
-    void setProfilePhoto() {
-        dependencyProvider.getApiClient(session).getAccountService()
-                .verifyCredentials(false, true, false).enqueue(new Callback<User>() {
-                    @Override
-                    public void success(Result<User> result) {
-                        composerView.setProfilePhotoView(result.data);
-                    }
-
-                    @Override
-                    public void failure(TwitterException exception) {
-                        // show placeholder background color
-                        composerView.setProfilePhotoView(null);
-                    }
-                });
-    }
-
-    void setImageView(Uri imageUri) {
-        if (imageUri != null) {
-            composerView.setImageView(imageUri);
-        }
-    }
-
-    interface ComposerCallbacks {
-        void onTextChanged(String text);
-        void onTweetPost(String text);
-        void onCloseClick();
-    }
-
-    class ComposerCallbacksImpl implements ComposerCallbacks {
-
-        @Override
-        public void onTextChanged(String text) {
-            final int charCount = tweetTextLength(text);
-            composerView.setCharCount(remainingCharCount(charCount));
-            // character count overflow red color
-            if (isTweetTextOverflow(charCount)) {
-                composerView.setCharCountTextStyle(R.style.tw__ComposerCharCountOverflow);
-            } else {
-                composerView.setCharCountTextStyle(R.style.tw__ComposerCharCount);
-            }
-            // Tweet post button enable/disable
-            composerView.postTweetEnabled(isPostEnabled(charCount));
-        }
-
-        @Override
-        public void onTweetPost(String text) {
-            final Intent intent = new Intent(composerView.getContext(), TweetUploadService.class);
-            intent.putExtra(TweetUploadService.EXTRA_USER_TOKEN, session.getAuthToken());
-            intent.putExtra(TweetUploadService.EXTRA_TWEET_TEXT, text);
-            intent.putExtra(TweetUploadService.EXTRA_IMAGE_URI, imageUri);
-            composerView.getContext().startService(intent);
-            finisher.finish();
-        }
-
-        @Override
-        public void onCloseClick() {
-            onClose();
-        }
-    }
-
-    void onClose() {
-        sendCancelBroadcast();
-        finisher.finish();
-    }
-
-    int tweetTextLength(String text) {
-        if (TextUtils.isEmpty(text)) {
-            return 0;
-        }
-
-        return dependencyProvider.getTweetValidator().getTweetLength(text);
-    }
-
-    void sendCancelBroadcast() {
-        final Intent intent = new Intent(TWEET_COMPOSE_CANCEL);
-        intent.setPackage(composerView.getContext().getPackageName());
-        composerView.getContext().sendBroadcast(intent);
-    }
-
-    static int remainingCharCount(int charCount) {
-        return Validator.MAX_TWEET_LENGTH - charCount;
-    }
-
-    /*
-     * @return true if the Tweet text is a valid length, false otherwise.
-     */
-    static boolean isPostEnabled(int charCount) {
-        return charCount > 0 && charCount <= Validator.MAX_TWEET_LENGTH;
-    }
-
-    /*
-     * @return true if the Tweet text is too long, false otherwise.
-     */
-    static boolean isTweetTextOverflow(int charCount) {
-        return charCount > Validator.MAX_TWEET_LENGTH;
-    }
-
-    /*
-     * Mockable class that provides ComposerController dependencies.
-     */
-    static class DependencyProvider {
-        final Validator tweetValidator = new Validator();
-
-        TwitterApiClient getApiClient(TwitterSession session) {
-            return TwitterCore.getInstance().getApiClient(session);
-        }
-
-        Validator getTweetValidator() {
-            return tweetValidator;
-        }
-    }
-}
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerView.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerView.java
deleted file mode 100644
index b3491b9b..00000000
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerView.java
+++ /dev/null
@@ -1,170 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.content.Context;
-import android.graphics.drawable.ColorDrawable;
-import android.net.Uri;
-import android.text.Editable;
-import android.text.TextWatcher;
-import android.util.AttributeSet;
-import android.view.View;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.ImageView;
-import android.widget.LinearLayout;
-import android.widget.TextView;
-
-import com.squareup.picasso.Picasso;
-import com.twitter.sdk.android.core.internal.UserUtils;
-import com.twitter.sdk.android.core.models.User;
-import com.twitter.sdk.android.tweetcomposer.internal.util.ObservableScrollView;
-
-import java.util.Locale;
-
-public class ComposerView extends LinearLayout {
-    ImageView avatarView;
-    ImageView closeView;
-    EditText tweetEditView;
-    TextView charCountView;
-    Button tweetButton;
-    ObservableScrollView scrollView;
-    View divider;
-    // styled drawables for images
-    ColorDrawable mediaBg;
-    // callbacks
-    ImageView imageView;
-    ComposerController.ComposerCallbacks callbacks;
-
-    private Picasso imageLoader;
-
-    public ComposerView(Context context) {
-        this(context, null);
-    }
-
-    public ComposerView(Context context, AttributeSet attrs) {
-        super(context, attrs);
-        init(context);
-    }
-
-    public ComposerView(Context context, AttributeSet attrs, int defStyle) {
-        super(context, attrs, defStyle);
-        init(context);
-    }
-
-    private void init(Context context) {
-        imageLoader = Picasso.with(getContext());
-        // TODO: make color vary depending on the style
-        mediaBg = new ColorDrawable(context.getResources()
-                .getColor(R.color.tw__composer_light_gray));
-        inflate(context, R.layout.tw__composer_view, this);
-    }
-
-    @Override
-    protected void onFinishInflate() {
-        super.onFinishInflate();
-        findSubviews();
-
-        closeView.setOnClickListener(view -> callbacks.onCloseClick());
-
-        tweetButton.setOnClickListener(view -> callbacks.onTweetPost(getTweetText()));
-
-        tweetEditView.setOnEditorActionListener((textView, i, keyEvent) -> {
-            callbacks.onTweetPost(getTweetText());
-            return true;
-        });
-
-        tweetEditView.addTextChangedListener(new TextWatcher() {
-            @Override
-            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
-            }
-
-            @Override
-            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
-            }
-
-            @Override
-            public void afterTextChanged(Editable editable) {
-                callbacks.onTextChanged(getTweetText());
-            }
-        });
-
-        scrollView.setScrollViewListener(scrollY -> {
-            if (scrollY > 0) {
-                divider.setVisibility(View.VISIBLE);
-            } else {
-                divider.setVisibility(View.INVISIBLE);
-            }
-        });
-    }
-
-    void findSubviews() {
-        avatarView = findViewById(R.id.tw__author_avatar);
-        closeView = findViewById(R.id.tw__composer_close);
-        tweetEditView = findViewById(R.id.tw__edit_tweet);
-        charCountView = findViewById(R.id.tw__char_count);
-        tweetButton = findViewById(R.id.tw__post_tweet);
-        scrollView = findViewById(R.id.tw__composer_scroll_view);
-        divider = findViewById(R.id.tw__composer_profile_divider);
-        imageView = findViewById(R.id.tw__image_view);
-    }
-
-    void setCallbacks(ComposerController.ComposerCallbacks callbacks) {
-        this.callbacks = callbacks;
-    }
-
-    /*
-     * Sets the profile photo from the User's profile image url or the placeholder background
-     * color.
-     */
-    void setProfilePhotoView(User user) {
-        final String url = UserUtils.getProfileImageUrlHttps(user,
-                UserUtils.AvatarSize.REASONABLY_SMALL);
-        if (imageLoader != null) {
-            // Passing null url will not trigger any request, but will set the placeholder bg
-            imageLoader.load(url).placeholder(mediaBg).into(avatarView);
-        }
-    }
-
-    String getTweetText() {
-        return tweetEditView.getText().toString();
-    }
-
-    void setTweetText(String text) {
-        tweetEditView.setText(text);
-    }
-
-    void setCharCount(int remainingCount) {
-        charCountView.setText(String.format(Locale.getDefault(), "%d", remainingCount));
-    }
-
-    void setCharCountTextStyle(int textStyleResId) {
-        charCountView.setTextAppearance(getContext(), textStyleResId);
-    }
-
-    void postTweetEnabled(boolean enabled) {
-        tweetButton.setEnabled(enabled);
-    }
-
-    void setImageView(Uri imageUri) {
-        if (imageLoader != null) {
-            imageView.setVisibility(VISIBLE);
-            imageLoader.load(imageUri).into(imageView);
-        }
-    }
-}
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/FileUtils.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/FileUtils.java
deleted file mode 100644
index eb090140..00000000
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/FileUtils.java
+++ /dev/null
@@ -1,120 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.annotation.TargetApi;
-import android.content.ContentResolver;
-import android.content.Context;
-import android.database.Cursor;
-import android.net.Uri;
-import android.os.Build;
-import android.provider.DocumentsContract;
-import android.provider.MediaStore;
-import android.text.TextUtils;
-import android.webkit.MimeTypeMap;
-
-import java.io.File;
-
-/**
- * Utilities for resolving various Uri's to file paths and MIME types.
- */
-class FileUtils {
-    private static final String MEDIA_SCHEME = "com.android.providers.media.documents";
-
-    @TargetApi(Build.VERSION_CODES.KITKAT)
-    static String getPath(final Context context, final Uri uri) {
-        final boolean isKitKat = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;
-        if (isKitKat && isMediaDocumentAuthority(uri)) {
-            final String documentId = DocumentsContract.getDocumentId(uri); // e.g. "image:1234"
-            final String[] parts = documentId.split(":");
-            final String type = parts[0];
-
-            final Uri contentUri;
-            if ("image".equals(type)) {
-                contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;
-            } else {
-                // reject video or audio documents
-                return null;
-            }
-
-            // query content resolver for MediaStore id column
-            final String selection = "_id=?";
-            final String[] args = new String[] {
-                    parts[1]
-            };
-            return resolveFilePath(context, contentUri, selection, args);
-        } else if (isContentScheme(uri)) {
-            return resolveFilePath(context, uri, null, null);
-        } else if (isFileScheme(uri)) {
-            return uri.getPath();
-        }
-        return null;
-    }
-
-    static boolean isMediaDocumentAuthority(Uri uri) {
-        return MEDIA_SCHEME.equalsIgnoreCase(uri.getAuthority());
-    }
-
-    static boolean isContentScheme(Uri uri) {
-        return ContentResolver.SCHEME_CONTENT.equalsIgnoreCase(uri.getScheme());
-    }
-
-    static boolean isFileScheme(Uri uri) {
-        return ContentResolver.SCHEME_FILE.equalsIgnoreCase(uri.getScheme());
-    }
-
-    static String resolveFilePath(Context context, Uri uri, String selection, String[] args) {
-        Cursor cursor = null;
-        final String[] projection = {MediaStore.Images.Media.DATA};
-        try {
-            cursor = context.getContentResolver().query(uri, projection, selection, args, null);
-            if (cursor != null && cursor.moveToFirst()) {
-                final int i = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
-                return cursor.getString(i);
-            }
-        } finally {
-            if (cursor != null) {
-                cursor.close();
-            }
-        }
-        return null;
-    }
-
-    /**
-     * @return The MIME type for the given file.
-     */
-    static String getMimeType(File file) {
-        final String ext = getExtension(file.getName());
-        if (!TextUtils.isEmpty(ext)) {
-            return MimeTypeMap.getSingleton().getMimeTypeFromExtension(ext);
-        }
-        // default from https://dev.twitter.com/rest/public/uploading-media
-        return "application/octet-stream";
-    }
-
-    /**
-     * @return the extension of the given file name, excluding the dot. For example, "png", "jpg".
-     */
-    static String getExtension(String filename) {
-        if (filename == null) {
-            return null;
-        }
-        final int i = filename.lastIndexOf(".");
-        return i < 0 ? "" : filename.substring(i + 1);
-    }
-}
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetComposer.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetComposer.java
deleted file mode 100644
index 3ec79c4e..00000000
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetComposer.java
+++ /dev/null
@@ -1,215 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.annotation.SuppressLint;
-import android.content.Context;
-import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.content.pm.ResolveInfo;
-import android.net.Uri;
-import android.text.TextUtils;
-
-import com.twitter.sdk.android.core.GuestSessionProvider;
-import com.twitter.sdk.android.core.SessionManager;
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.core.internal.network.UrlUtils;
-
-import java.net.URL;
-import java.util.List;
-
-/**
- * The TweetComposer Kit provides a lightweight mechanism for creating intents to interact with the installed Twitter app or a browser.
- */
-public class TweetComposer {
-    @SuppressLint("StaticFieldLeak")
-    static volatile TweetComposer instance;
-    private static final String MIME_TYPE_PLAIN_TEXT = "text/plain";
-    private static final String MIME_TYPE_JPEG = "image/jpeg";
-    private static final String TWITTER_PACKAGE_NAME = "com.twitter.android";
-    private static final String WEB_INTENT = "https://twitter.com/intent/tweet?text=%s&url=%s";
-
-    SessionManager<TwitterSession> sessionManager;
-    GuestSessionProvider guestSessionProvider;
-    Context context;
-
-    public static TweetComposer getInstance() {
-        if (instance == null) {
-            synchronized (TweetComposer.class) {
-                if (instance == null) {
-                    instance = new TweetComposer();
-                }
-            }
-        }
-        return instance;
-    }
-
-    TweetComposer() {
-        sessionManager = TwitterCore.getInstance().getSessionManager();
-        guestSessionProvider = TwitterCore.getInstance().getGuestSessionProvider();
-        context = Twitter.getInstance().getContext(getIdentifier());
-    }
-
-    public String getVersion() {
-        return BuildConfig.VERSION_NAME + "." + BuildConfig.BUILD_NUMBER;
-    }
-
-    public String getIdentifier() {
-        return BuildConfig.GROUP + ":" + BuildConfig.ARTIFACT_ID;
-    }
-
-    /**
-     * The TweetComposer Builder will use the installed Twitter instance and fall back to a browser
-     */
-    public static class Builder {
-        private final Context context;
-        private String text;
-        private URL url;
-        private Uri imageUri;
-
-        /**
-         * Initializes a new {@link com.twitter.sdk.android.tweetcomposer.TweetComposer.Builder}
-         */
-        public Builder(Context context) {
-            if (context == null) {
-                throw new IllegalArgumentException("Context must not be null.");
-            }
-            this.context = context;
-        }
-
-        /**
-         * Sets Text for Tweet Intent, no length validation is performed
-         */
-        public Builder text(String text) {
-            if (text == null) {
-                throw new IllegalArgumentException("text must not be null.");
-            }
-
-            if (this.text != null) {
-                throw new IllegalStateException("text already set.");
-            }
-            this.text = text;
-
-            return this;
-        }
-
-        /**
-         * Sets URL for Tweet Intent, no length validation is performed
-         */
-        public Builder url(URL url) {
-            if (url == null) {
-                throw new IllegalArgumentException("url must not be null.");
-            }
-
-            if (this.url != null) {
-                throw new IllegalStateException("url already set.");
-            }
-            this.url = url;
-
-            return this;
-        }
-        /**
-         * Sets Image {@link android.net.Uri} for the Tweet. Only valid if the Twitter App is
-         * installed.
-         * The Uri should be a file Uri to a local file (e.g. <pre><code>Uri.fromFile(someExternalStorageFile)</code></pre>))
-         */
-        public Builder image(Uri imageUri) {
-            if (imageUri == null) {
-                throw new IllegalArgumentException("imageUri must not be null.");
-            }
-
-            if (this.imageUri != null) {
-                throw new IllegalStateException("imageUri already set.");
-            }
-            this.imageUri = imageUri;
-
-            return this;
-        }
-
-        /**
-         * Creates {@link android.content.Intent} based on data in {@link com.twitter.sdk.android.tweetcomposer.TweetComposer.Builder}
-         * @return an Intent to the Twitter for Android or a web intent.
-         */
-        public Intent createIntent() {
-            Intent intent = createTwitterIntent();
-
-            if (intent == null) {
-                intent = createWebIntent();
-            }
-
-            return intent;
-        }
-
-        Intent createTwitterIntent() {
-            final Intent intent = new Intent(Intent.ACTION_SEND);
-
-            final StringBuilder builder = new StringBuilder();
-
-            if (!TextUtils.isEmpty(text)) {
-                builder.append(text);
-            }
-
-            if (url != null) {
-                if (builder.length() > 0) {
-                    builder.append(' ');
-                }
-                builder.append(url.toString());
-            }
-
-            intent.putExtra(Intent.EXTRA_TEXT, builder.toString());
-            intent.setType(MIME_TYPE_PLAIN_TEXT);
-
-            if (imageUri != null) {
-                intent.putExtra(Intent.EXTRA_STREAM, imageUri);
-                intent.setType(MIME_TYPE_JPEG);
-            }
-
-            final PackageManager packManager = context.getPackageManager();
-            final List<ResolveInfo> resolvedInfoList = packManager.queryIntentActivities(intent,
-                    PackageManager.MATCH_DEFAULT_ONLY);
-
-            for (ResolveInfo resolveInfo: resolvedInfoList){
-                if (resolveInfo.activityInfo.packageName.startsWith(TWITTER_PACKAGE_NAME)){
-                    intent.setClassName(resolveInfo.activityInfo.packageName,
-                            resolveInfo.activityInfo.name);
-                    return intent;
-                }
-            }
-
-            return null;
-        }
-
-        Intent createWebIntent() {
-            final String url = (this.url == null ? "" : this.url.toString());
-
-            final String tweetUrl =
-                    String.format(WEB_INTENT, UrlUtils.urlEncode(text), UrlUtils.urlEncode(url));
-            return new Intent(Intent.ACTION_VIEW, Uri.parse(tweetUrl));
-        }
-
-        /**
-         * Starts the intent created in {@link com.twitter.sdk.android.tweetcomposer.TweetComposer.Builder#createIntent()}
-         */
-        public void show() {
-            final Intent intent = createIntent();
-            context.startActivity(intent);
-        }
-    }
-}
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetUploadService.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetUploadService.java
deleted file mode 100644
index bf4fb94d..00000000
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetUploadService.java
+++ /dev/null
@@ -1,164 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.app.IntentService;
-import android.content.Intent;
-import android.net.Uri;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterAuthToken;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.core.models.Media;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import java.io.File;
-
-import okhttp3.MediaType;
-import okhttp3.RequestBody;
-
-public class TweetUploadService extends IntentService {
-    public static final String UPLOAD_SUCCESS
-            = "com.twitter.sdk.android.tweetcomposer.UPLOAD_SUCCESS";
-    public static final String UPLOAD_FAILURE
-            = "com.twitter.sdk.android.tweetcomposer.UPLOAD_FAILURE";
-    public static final String TWEET_COMPOSE_CANCEL =
-            "com.twitter.sdk.android.tweetcomposer.TWEET_COMPOSE_CANCEL";
-    public static final String EXTRA_TWEET_ID = "EXTRA_TWEET_ID";
-    public static final String EXTRA_RETRY_INTENT = "EXTRA_RETRY_INTENT";
-
-    static final String TAG = "TweetUploadService";
-    static final String EXTRA_USER_TOKEN = "EXTRA_USER_TOKEN";
-    static final String EXTRA_TWEET_TEXT = "EXTRA_TWEET_TEXT";
-    static final String EXTRA_IMAGE_URI = "EXTRA_IMAGE_URI";
-    private static final int PLACEHOLDER_ID = -1;
-    private static final String PLACEHOLDER_SCREEN_NAME = "";
-    DependencyProvider dependencyProvider;
-
-    Intent intent;
-
-    public TweetUploadService() {
-        this(new DependencyProvider());
-    }
-
-    // testing purposes
-    TweetUploadService(DependencyProvider dependencyProvider) {
-        super("TweetUploadService");
-        this.dependencyProvider = dependencyProvider;
-    }
-
-    @Override
-    protected void onHandleIntent(Intent intent) {
-        final TwitterAuthToken token = intent.getParcelableExtra(EXTRA_USER_TOKEN);
-        this.intent = intent;
-        final TwitterSession twitterSession =
-                new TwitterSession(token, PLACEHOLDER_ID, PLACEHOLDER_SCREEN_NAME);
-        final String tweetText = intent.getStringExtra(EXTRA_TWEET_TEXT);
-        final Uri imageUri = intent.getParcelableExtra(EXTRA_IMAGE_URI);
-
-        uploadTweet(twitterSession, tweetText, imageUri);
-    }
-
-    void uploadTweet(final TwitterSession session, final String text, final Uri imageUri) {
-        if (imageUri != null) {
-            uploadMedia(session, imageUri, new Callback<Media>() {
-                @Override
-                public void success(Result<Media> result) {
-                    uploadTweetWithMedia(session, text, result.data.mediaIdString);
-                }
-
-                @Override
-                public void failure(TwitterException exception) {
-                    fail(exception);
-                }
-
-            });
-        } else {
-            uploadTweetWithMedia(session, text, null);
-        }
-    }
-
-    void uploadTweetWithMedia(TwitterSession session, String text, String mediaId) {
-        final TwitterApiClient client = dependencyProvider.getTwitterApiClient(session);
-
-        client.getStatusesService().update(text, null, null, null, null, null, null, true, mediaId)
-                .enqueue(
-                        new Callback<Tweet>() {
-                            @Override
-                            public void success(Result<Tweet> result) {
-                                sendSuccessBroadcast(result.data.getId());
-                                stopSelf();
-                            }
-
-                            @Override
-                            public void failure(TwitterException exception) {
-                                fail(exception);
-                            }
-                        });
-    }
-
-    void uploadMedia(TwitterSession session, Uri imageUri, Callback<Media> callback) {
-        final TwitterApiClient client = dependencyProvider.getTwitterApiClient(session);
-
-        final String path = FileUtils.getPath(TweetUploadService.this, imageUri);
-        if (path == null) {
-            fail(new TwitterException("Uri file path resolved to null"));
-            return;
-        }
-        final File file = new File(path);
-        final String mimeType = FileUtils.getMimeType(file);
-        final RequestBody media = RequestBody.create(MediaType.parse(mimeType), file);
-
-        client.getMediaService().upload(media, null, null).enqueue(callback);
-    }
-
-    void fail(TwitterException e) {
-        sendFailureBroadcast(intent);
-        Twitter.getLogger().e(TAG, "Post Tweet failed", e);
-        stopSelf();
-    }
-
-    void sendSuccessBroadcast(long tweetId) {
-        final Intent intent = new Intent(UPLOAD_SUCCESS);
-        intent.putExtra(EXTRA_TWEET_ID, tweetId);
-        intent.setPackage(getApplicationContext().getPackageName());
-        sendBroadcast(intent);
-    }
-
-    void sendFailureBroadcast(Intent original) {
-        final Intent intent = new Intent(UPLOAD_FAILURE);
-        intent.putExtra(EXTRA_RETRY_INTENT, original);
-        intent.setPackage(getApplicationContext().getPackageName());
-        sendBroadcast(intent);
-    }
-
-    /*
-     * Mockable class that provides ComposerController dependencies.
-     */
-    static class DependencyProvider {
-
-        TwitterApiClient getTwitterApiClient(TwitterSession session) {
-            return TwitterCore.getInstance().getApiClient(session);
-        }
-    }
-}
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/internal/util/ObservableScrollView.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/internal/util/ObservableScrollView.java
deleted file mode 100644
index bd4aa07f..00000000
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/internal/util/ObservableScrollView.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer.internal.util;
-
-import android.annotation.TargetApi;
-import android.content.Context;
-import android.os.Build;
-import android.util.AttributeSet;
-import android.widget.ScrollView;
-
-public class ObservableScrollView extends ScrollView {
-    ScrollViewListener scrollViewListener;
-
-    public ObservableScrollView(Context context) {
-        super(context);
-    }
-
-    public ObservableScrollView(Context context, AttributeSet attrs) {
-        super(context, attrs);
-    }
-
-    public ObservableScrollView(Context context, AttributeSet attrs, int defStyleAttr) {
-        super(context, attrs, defStyleAttr);
-    }
-
-    @TargetApi(Build.VERSION_CODES.LOLLIPOP)
-    public ObservableScrollView(Context context, AttributeSet attrs, int defStyleAttr, int
-            defStyleRes) {
-        super(context, attrs, defStyleAttr, defStyleRes);
-    }
-
-    @Override
-    protected void onScrollChanged(int currentX, int currentY, int oldX, int oldY) {
-        super.onScrollChanged(currentX, currentY, oldX, oldY);
-        if (scrollViewListener != null) {
-            scrollViewListener.onScrollChanged(currentY);
-        }
-    }
-
-    public void setScrollViewListener(ScrollViewListener scrollViewListener) {
-        this.scrollViewListener = scrollViewListener;
-    }
-
-    public interface ScrollViewListener {
-        void onScrollChanged(int scrollY);
-    }
-}
diff --git a/tweet-composer/src/main/res/drawable-hdpi/tw__composer_close.png b/tweet-composer/src/main/res/drawable-hdpi/tw__composer_close.png
deleted file mode 100644
index fafa2334..00000000
Binary files a/tweet-composer/src/main/res/drawable-hdpi/tw__composer_close.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-hdpi/tw__composer_logo_blue.png b/tweet-composer/src/main/res/drawable-hdpi/tw__composer_logo_blue.png
deleted file mode 100644
index 51c7bc89..00000000
Binary files a/tweet-composer/src/main/res/drawable-hdpi/tw__composer_logo_blue.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-hdpi/tw__composer_logo_white.png b/tweet-composer/src/main/res/drawable-hdpi/tw__composer_logo_white.png
deleted file mode 100644
index 07c5f1b3..00000000
Binary files a/tweet-composer/src/main/res/drawable-hdpi/tw__composer_logo_white.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-mdpi/tw__composer_close.png b/tweet-composer/src/main/res/drawable-mdpi/tw__composer_close.png
deleted file mode 100644
index 34d9f8b0..00000000
Binary files a/tweet-composer/src/main/res/drawable-mdpi/tw__composer_close.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-mdpi/tw__composer_logo_blue.png b/tweet-composer/src/main/res/drawable-mdpi/tw__composer_logo_blue.png
deleted file mode 100644
index babb7eb9..00000000
Binary files a/tweet-composer/src/main/res/drawable-mdpi/tw__composer_logo_blue.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-mdpi/tw__composer_logo_white.png b/tweet-composer/src/main/res/drawable-mdpi/tw__composer_logo_white.png
deleted file mode 100644
index b8665985..00000000
Binary files a/tweet-composer/src/main/res/drawable-mdpi/tw__composer_logo_white.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_close.png b/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_close.png
deleted file mode 100644
index e35db452..00000000
Binary files a/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_close.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_logo_blue.png b/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_logo_blue.png
deleted file mode 100644
index ea2056dc..00000000
Binary files a/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_logo_blue.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_logo_white.png b/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_logo_white.png
deleted file mode 100644
index b71965e3..00000000
Binary files a/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_logo_white.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_close.png b/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_close.png
deleted file mode 100644
index b01d6466..00000000
Binary files a/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_close.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_logo_blue.png b/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_logo_blue.png
deleted file mode 100644
index a01c5761..00000000
Binary files a/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_logo_blue.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_logo_white.png b/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_logo_white.png
deleted file mode 100644
index da93dcb9..00000000
Binary files a/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_logo_white.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable/tw__btn_composer_tweet.xml b/tweet-composer/src/main/res/drawable/tw__btn_composer_tweet.xml
deleted file mode 100644
index 227d75e0..00000000
--- a/tweet-composer/src/main/res/drawable/tw__btn_composer_tweet.xml
+++ /dev/null
@@ -1,44 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_pressed="true"
-          android:state_enabled="true">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/tw__composer_blue_text" />
-            <corners android:radius="@dimen/tw__composer_tweet_btn_radius" />
-            <padding android:left="@dimen/tw__composer_spacing_medium"
-                     android:right="@dimen/tw__composer_spacing_medium" />
-        </shape>
-    </item>
-    <item android:state_enabled="true">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/tw__composer_blue" />
-            <corners android:radius="@dimen/tw__composer_tweet_btn_radius" />
-            <padding android:left="@dimen/tw__composer_spacing_medium"
-                     android:right="@dimen/tw__composer_spacing_medium" />
-        </shape>
-    </item>
-    <item android:state_enabled="false">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/tw__composer_light_gray" />
-            <corners android:radius="@dimen/tw__composer_tweet_btn_radius" />
-            <padding android:left="@dimen/tw__composer_spacing_medium"
-                     android:right="@dimen/tw__composer_spacing_medium" />
-        </shape>
-    </item>
-</selector>
\ No newline at end of file
diff --git a/tweet-composer/src/main/res/layout/tw__activity_composer.xml b/tweet-composer/src/main/res/layout/tw__activity_composer.xml
deleted file mode 100644
index 4a5a15c7..00000000
--- a/tweet-composer/src/main/res/layout/tw__activity_composer.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<merge
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <com.twitter.sdk.android.tweetcomposer.ComposerView
-        android:id="@+id/tw__composer_view"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"/>
-
-</merge>
diff --git a/tweet-composer/src/main/res/layout/tw__composer_view.xml b/tweet-composer/src/main/res/layout/tw__composer_view.xml
deleted file mode 100644
index 06cb19fd..00000000
--- a/tweet-composer/src/main/res/layout/tw__composer_view.xml
+++ /dev/null
@@ -1,103 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:tools="http://schemas.android.com/tools"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-              android:orientation="vertical">
-
-    <RelativeLayout
-        android:id="@+id/tw__composer_header"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content">
-
-        <ImageButton
-            android:id="@+id/tw__composer_close"
-            style="@style/tw__ComposerClose"
-            android:layout_centerVertical="true"
-            tools:ignore="ContentDescription"/>
-
-        <ImageView
-            android:id="@+id/tw__twitter_logo"
-            android:layout_height="@dimen/tw__composer_logo_height"
-            android:layout_width="@dimen/tw__composer_logo_width"
-            android:src="?attr/tw__twitter_logo"
-            android:layout_centerInParent="true"
-            tools:ignore="ContentDescription"/>
-
-        <ImageView
-            android:id="@+id/tw__author_avatar"
-            style="@style/tw__ComposerAvatar"
-            android:layout_centerVertical="true"
-            android:layout_alignParentEnd="true"
-            android:layout_alignParentRight="true"
-            tools:background="@color/tw__composer_light_gray"
-            tools:ignore="ContentDescription"/>
-    </RelativeLayout>
-
-    <View
-        android:id="@+id/tw__composer_profile_divider"
-        android:visibility="invisible"
-        style="@style/tw__ComposerDivider"/>
-
-    <com.twitter.sdk.android.tweetcomposer.internal.util.ObservableScrollView
-        android:id="@+id/tw__composer_scroll_view"
-        android:layout_width="match_parent"
-        android:layout_height="0dp"
-        android:layout_weight="1"
-        android:overScrollMode="never">
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical">
-
-            <EditText
-                android:id="@+id/tw__edit_tweet"
-                style="@style/tw__EditTweet"/>
-
-            <ImageView
-                android:id="@+id/tw__image_view"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_margin="@dimen/tw__composer_spacing_large"
-                android:adjustViewBounds="true"
-                android:visibility="gone"
-                tools:ignore="ContentDescription"/>
-        </LinearLayout>
-    </com.twitter.sdk.android.tweetcomposer.internal.util.ObservableScrollView>
-
-    <View
-        android:id="@+id/tw__composer_toolbar_divider"
-        style="@style/tw__ComposerDivider"/>
-
-    <LinearLayout
-        android:id="@+id/tw__composer_toolbar"
-        style="@style/tw__ComposerToolbar">
-
-        <TextView
-            android:id="@+id/tw__char_count"
-            style="@style/tw__ComposerCharCount"/>
-
-        <Button
-            android:id="@+id/tw__post_tweet"
-            style="@style/tw__ComposerTweetButton"/>
-
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/tweet-composer/src/main/res/values-ar/strings.xml b/tweet-composer/src/main/res/values-ar/strings.xml
deleted file mode 100644
index bf29fbe5..00000000
--- a/tweet-composer/src/main/res/values-ar/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">ماذا يحدث؟</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">تغريد</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-bg/strings.xml b/tweet-composer/src/main/res/values-bg/strings.xml
deleted file mode 100644
index 7e3e6361..00000000
--- a/tweet-composer/src/main/res/values-bg/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Какво става?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Туитване</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-bn/strings.xml b/tweet-composer/src/main/res/values-bn/strings.xml
deleted file mode 100644
index cbea433b..00000000
--- a/tweet-composer/src/main/res/values-bn/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">কী ঘটছে?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">টুইট</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ca/strings.xml b/tweet-composer/src/main/res/values-ca/strings.xml
deleted file mode 100644
index fb14985e..00000000
--- a/tweet-composer/src/main/res/values-ca/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Què està passant?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tuita</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-cs/strings.xml b/tweet-composer/src/main/res/values-cs/strings.xml
deleted file mode 100644
index 32bf4abe..00000000
--- a/tweet-composer/src/main/res/values-cs/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Co se právě děje?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweetnout</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-da/strings.xml b/tweet-composer/src/main/res/values-da/strings.xml
deleted file mode 100644
index fb9fce05..00000000
--- a/tweet-composer/src/main/res/values-da/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Hvad sker der?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-de/strings.xml b/tweet-composer/src/main/res/values-de/strings.xml
deleted file mode 100644
index 3ec5232f..00000000
--- a/tweet-composer/src/main/res/values-de/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Was gibt’s Neues?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Twittern</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-el/strings.xml b/tweet-composer/src/main/res/values-el/strings.xml
deleted file mode 100644
index 0a0e93e6..00000000
--- a/tweet-composer/src/main/res/values-el/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Τι συμβαίνει;</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Γράψτε ένα Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-en-rGB/strings.xml b/tweet-composer/src/main/res/values-en-rGB/strings.xml
deleted file mode 100644
index 84879563..00000000
--- a/tweet-composer/src/main/res/values-en-rGB/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">What\'s Happening?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-en-rSS/strings.xml b/tweet-composer/src/main/res/values-en-rSS/strings.xml
deleted file mode 100644
index 11bf24a9..00000000
--- a/tweet-composer/src/main/res/values-en-rSS/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">[[141545]] What\'s Happening?</string>
-    <string name="tw__max_tweet_chars">[[141547]] 140</string>
-    <string name="tw__post_tweet">[[141546]] Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-es/strings.xml b/tweet-composer/src/main/res/values-es/strings.xml
deleted file mode 100644
index 93e8ba31..00000000
--- a/tweet-composer/src/main/res/values-es/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">¿Qué está pasando?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Twittear</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-fa/strings.xml b/tweet-composer/src/main/res/values-fa/strings.xml
deleted file mode 100644
index 134161b6..00000000
--- a/tweet-composer/src/main/res/values-fa/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">چه اتفاقى در حال رخ دادن است؟</string>
-    <string name="tw__max_tweet_chars">۱۴۰</string>
-    <string name="tw__post_tweet">توييت</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-fi/strings.xml b/tweet-composer/src/main/res/values-fi/strings.xml
deleted file mode 100644
index ca962eee..00000000
--- a/tweet-composer/src/main/res/values-fi/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Mitä tapahtuu?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Twiittaa</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-fr/strings.xml b/tweet-composer/src/main/res/values-fr/strings.xml
deleted file mode 100644
index 3f13af89..00000000
--- a/tweet-composer/src/main/res/values-fr/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Que se passe-t-il ?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-gu/strings.xml b/tweet-composer/src/main/res/values-gu/strings.xml
deleted file mode 100644
index f5b25b58..00000000
--- a/tweet-composer/src/main/res/values-gu/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">શું ચાલી રહ્યું છ?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ટ્વીટ કરો</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-hi/strings.xml b/tweet-composer/src/main/res/values-hi/strings.xml
deleted file mode 100644
index 2f90c505..00000000
--- a/tweet-composer/src/main/res/values-hi/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">क्या हो रहा है?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ट्वीट करें</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-hr/strings.xml b/tweet-composer/src/main/res/values-hr/strings.xml
deleted file mode 100644
index de1a85d2..00000000
--- a/tweet-composer/src/main/res/values-hr/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Što se događa?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Pošalji Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-hu/strings.xml b/tweet-composer/src/main/res/values-hu/strings.xml
deleted file mode 100644
index e8e208db..00000000
--- a/tweet-composer/src/main/res/values-hu/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Mi történik éppen most?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-in/strings.xml b/tweet-composer/src/main/res/values-in/strings.xml
deleted file mode 100644
index 1c9a72cc..00000000
--- a/tweet-composer/src/main/res/values-in/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Apa yang Sedang Terjadi?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-it/strings.xml b/tweet-composer/src/main/res/values-it/strings.xml
deleted file mode 100644
index eeee31d7..00000000
--- a/tweet-composer/src/main/res/values-it/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Cosa c\'è di nuovo?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Twitta</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-iw/strings.xml b/tweet-composer/src/main/res/values-iw/strings.xml
deleted file mode 100644
index 86c919d8..00000000
--- a/tweet-composer/src/main/res/values-iw/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">מה קורה?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">צייץ</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ja/strings.xml b/tweet-composer/src/main/res/values-ja/strings.xml
deleted file mode 100644
index 40e7e368..00000000
--- a/tweet-composer/src/main/res/values-ja/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">いまどうしてる?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ツイート</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-kn/strings.xml b/tweet-composer/src/main/res/values-kn/strings.xml
deleted file mode 100644
index a7d711b7..00000000
--- a/tweet-composer/src/main/res/values-kn/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">ಏನು ನಡೆಯುತ್ತಿದೆ?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ಟ್ವೀಟ್ ಮಾಡಿ</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ko/strings.xml b/tweet-composer/src/main/res/values-ko/strings.xml
deleted file mode 100644
index afdc30ed..00000000
--- a/tweet-composer/src/main/res/values-ko/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">지금 무슨 일이   일어나고 있나요?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">트윗</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-mr/strings.xml b/tweet-composer/src/main/res/values-mr/strings.xml
deleted file mode 100644
index cbbce21d..00000000
--- a/tweet-composer/src/main/res/values-mr/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">काय चालू आहे?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ट्विट</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ms/strings.xml b/tweet-composer/src/main/res/values-ms/strings.xml
deleted file mode 100644
index 4b9142f0..00000000
--- a/tweet-composer/src/main/res/values-ms/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Apa Yang Berlaku?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-nb/strings.xml b/tweet-composer/src/main/res/values-nb/strings.xml
deleted file mode 100644
index 2aac9c7c..00000000
--- a/tweet-composer/src/main/res/values-nb/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Hva skjer?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-nl/strings.xml b/tweet-composer/src/main/res/values-nl/strings.xml
deleted file mode 100644
index 62ec66cc..00000000
--- a/tweet-composer/src/main/res/values-nl/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Wat gebeurt er?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-pl/strings.xml b/tweet-composer/src/main/res/values-pl/strings.xml
deleted file mode 100644
index 232bc1ae..00000000
--- a/tweet-composer/src/main/res/values-pl/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Co się dzieje?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-pt/strings.xml b/tweet-composer/src/main/res/values-pt/strings.xml
deleted file mode 100644
index 24485217..00000000
--- a/tweet-composer/src/main/res/values-pt/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">O que está acontecendo?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweetar</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ro/strings.xml b/tweet-composer/src/main/res/values-ro/strings.xml
deleted file mode 100644
index 48934dcc..00000000
--- a/tweet-composer/src/main/res/values-ro/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Ce se întâmplă?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Scrie un Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ru/strings.xml b/tweet-composer/src/main/res/values-ru/strings.xml
deleted file mode 100644
index d083b188..00000000
--- a/tweet-composer/src/main/res/values-ru/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Что нового?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Твитнуть</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-sk/strings.xml b/tweet-composer/src/main/res/values-sk/strings.xml
deleted file mode 100644
index 21e0ec42..00000000
--- a/tweet-composer/src/main/res/values-sk/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Čo sa deje?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweetnuť</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-sr/strings.xml b/tweet-composer/src/main/res/values-sr/strings.xml
deleted file mode 100644
index 6285446e..00000000
--- a/tweet-composer/src/main/res/values-sr/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Шта се дешава?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Твитуј</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-sv/strings.xml b/tweet-composer/src/main/res/values-sv/strings.xml
deleted file mode 100644
index 6ebd9118..00000000
--- a/tweet-composer/src/main/res/values-sv/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Vad händer?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweeta</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ta/strings.xml b/tweet-composer/src/main/res/values-ta/strings.xml
deleted file mode 100644
index 74b127e5..00000000
--- a/tweet-composer/src/main/res/values-ta/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">என்ன நடக்கிறது?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ட்விட் செய்</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-th/strings.xml b/tweet-composer/src/main/res/values-th/strings.xml
deleted file mode 100644
index 00e98349..00000000
--- a/tweet-composer/src/main/res/values-th/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">มีอะไรเกิดขึ้น?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ทวีต</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-tl/strings.xml b/tweet-composer/src/main/res/values-tl/strings.xml
deleted file mode 100644
index 3a6ca744..00000000
--- a/tweet-composer/src/main/res/values-tl/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Anong nangyayari?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Mag-Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-tr/strings.xml b/tweet-composer/src/main/res/values-tr/strings.xml
deleted file mode 100644
index b49db3e9..00000000
--- a/tweet-composer/src/main/res/values-tr/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Neler oluyor?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-uk/strings.xml b/tweet-composer/src/main/res/values-uk/strings.xml
deleted file mode 100644
index 0644c189..00000000
--- a/tweet-composer/src/main/res/values-uk/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Що відбувається?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Твітнути</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ur/strings.xml b/tweet-composer/src/main/res/values-ur/strings.xml
deleted file mode 100644
index 650157e2..00000000
--- a/tweet-composer/src/main/res/values-ur/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">کیا ہو رہا ہے؟</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ٹویٹ</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-v21/themes.xml b/tweet-composer/src/main/res/values-v21/themes.xml
deleted file mode 100644
index b731e4ff..00000000
--- a/tweet-composer/src/main/res/values-v21/themes.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <style name="ComposerLight" parent="@android:style/Theme.Material.Light.NoActionBar" >
-        <item name="android:textColor">@color/tw__composer_black</item>
-        <item name="android:textColorSecondary">@color/tw__composer_deep_gray</item>
-        <item name="android:textColorHint">@color/tw__composer_light_gray</item>
-        <item name="tw__twitter_logo">@drawable/tw__composer_logo_blue</item>
-    </style>
-    <style name="ComposerDark" parent="@android:style/Theme.Material.NoActionBar" >
-        <item name="android:textColor">@color/tw__composer_white</item>
-        <item name="android:textColorSecondary">@color/tw__composer_deep_gray</item>
-        <item name="android:textColorHint">@color/tw__composer_light_gray</item>
-        <item name="tw__twitter_logo">@drawable/tw__composer_logo_white</item>
-    </style>
-</resources>
\ No newline at end of file
diff --git a/tweet-composer/src/main/res/values-vi/strings.xml b/tweet-composer/src/main/res/values-vi/strings.xml
deleted file mode 100644
index 6d591368..00000000
--- a/tweet-composer/src/main/res/values-vi/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Điều gì đang Xảy ra?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-zh-rCN/strings.xml b/tweet-composer/src/main/res/values-zh-rCN/strings.xml
deleted file mode 100644
index 999ef4a6..00000000
--- a/tweet-composer/src/main/res/values-zh-rCN/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">正在发生什么事情？</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">推文</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-zh-rTW/strings.xml b/tweet-composer/src/main/res/values-zh-rTW/strings.xml
deleted file mode 100644
index 5a3f8766..00000000
--- a/tweet-composer/src/main/res/values-zh-rTW/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">有什麼新鮮事？</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">推文</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values/attrs.xml b/tweet-composer/src/main/res/values/attrs.xml
deleted file mode 100644
index 15885ab5..00000000
--- a/tweet-composer/src/main/res/values/attrs.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <attr name="tw__twitter_logo" format="reference"/>
-</resources>
\ No newline at end of file
diff --git a/tweet-composer/src/main/res/values/colors.xml b/tweet-composer/src/main/res/values/colors.xml
deleted file mode 100644
index 255ae497..00000000
--- a/tweet-composer/src/main/res/values/colors.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <color name="tw__composer_blue">#ff1da1f2</color>
-    <color name="tw__composer_blue_text">#ff1b95e0</color>
-    <color name="tw__composer_white">#ffffffff</color>
-    <color name="tw__composer_black">#ff292f33</color>
-    <color name="tw__composer_deep_gray">#ff8899A6</color>
-    <color name="tw__composer_light_gray">#ffccd6dd</color>
-    <color name="tw__composer_red">#ffe81c4f</color>
-</resources>
\ No newline at end of file
diff --git a/tweet-composer/src/main/res/values/dimens.xml b/tweet-composer/src/main/res/values/dimens.xml
deleted file mode 100644
index 67fa83a1..00000000
--- a/tweet-composer/src/main/res/values/dimens.xml
+++ /dev/null
@@ -1,36 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <dimen name="tw__composer_close_size">48dp</dimen>
-    <dimen name="tw__composer_logo_height">20dp</dimen>
-    <dimen name="tw__composer_logo_width">24dp</dimen>
-    <dimen name="tw__composer_avatar_size">32dp</dimen>
-    <dimen name="tw__composer_divider_height">1dp</dimen>
-    <dimen name="tw__composer_tweet_btn_height">36dp</dimen>
-    <dimen name="tw__composer_tweet_btn_radius">4dp</dimen>
-    <dimen name="tw__composer_char_count_height">36dp</dimen>
-
-    <!-- Common spacing -->
-    <dimen name="tw__composer_spacing_small">4dp</dimen>
-    <dimen name="tw__composer_spacing_medium">8dp</dimen>
-    <dimen name="tw__composer_spacing_large">16dp</dimen>
-
-    <!--text sixes-->
-    <dimen name="tw__composer_font_size_small">14sp</dimen>
-
-</resources>
\ No newline at end of file
diff --git a/tweet-composer/src/main/res/values/strings.xml b/tweet-composer/src/main/res/values/strings.xml
deleted file mode 100644
index 18fdac1e..00000000
--- a/tweet-composer/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <string name="tw__composer_hint">What\'s Happening?</string>
-    <string name="tw__post_tweet">Tweet</string>
-    <string name="tw__max_tweet_chars">140</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values/themes.xml b/tweet-composer/src/main/res/values/themes.xml
deleted file mode 100644
index f5477ea3..00000000
--- a/tweet-composer/src/main/res/values/themes.xml
+++ /dev/null
@@ -1,35 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <style name="ComposerLight" parent="@android:style/Theme.Holo.Light" >
-        <item name="android:windowActionBar">false</item>
-        <item name="android:windowNoTitle">true</item>
-        <item name="android:textColor">@color/tw__composer_black</item>
-        <item name="android:textColorSecondary">@color/tw__composer_deep_gray</item>
-        <item name="android:textColorHint">@color/tw__composer_light_gray</item>
-        <item name="tw__twitter_logo">@drawable/tw__composer_logo_blue</item>
-    </style>
-    <style name="ComposerDark" parent="@android:style/Theme.Holo" >
-        <item name="android:windowActionBar">false</item>
-        <item name="android:windowNoTitle">true</item>
-        <item name="android:textColor">@color/tw__composer_white</item>
-        <item name="android:textColorSecondary">@color/tw__composer_deep_gray</item>
-        <item name="android:textColorHint">@color/tw__composer_light_gray</item>
-        <item name="tw__twitter_logo">@drawable/tw__composer_logo_white</item>
-    </style>
-</resources>
\ No newline at end of file
diff --git a/tweet-composer/src/main/res/values/tw__composer_styles.xml b/tweet-composer/src/main/res/values/tw__composer_styles.xml
deleted file mode 100644
index ae922032..00000000
--- a/tweet-composer/src/main/res/values/tw__composer_styles.xml
+++ /dev/null
@@ -1,102 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources
-    xmlns:tools="http://schemas.android.com/tools"
-    tools:ignore="NewApi">
-
-    <style name="tw__ComposerClose">
-        <item name="android:layout_width">@dimen/tw__composer_close_size</item>
-        <item name="android:layout_height">@dimen/tw__composer_close_size</item>
-        <item name="android:padding">@dimen/tw__composer_spacing_large</item>
-        <item name="android:src">@drawable/tw__composer_close</item>
-        <item name="android:background">@null</item>
-        <item name="android:scaleType">fitCenter</item>
-    </style>
-
-    <style name="tw__ComposerAvatar">
-        <item name="android:layout_width">@dimen/tw__composer_avatar_size</item>
-        <item name="android:layout_height">@dimen/tw__composer_avatar_size</item>
-        <item name="android:layout_marginRight">@dimen/tw__composer_spacing_large</item>
-        <item name="android:layout_marginTop">@dimen/tw__composer_spacing_large</item>
-        <item name="android:layout_marginBottom">@dimen/tw__composer_spacing_large</item>
-        <item name="android:background">@color/tw__composer_light_gray</item>
-    </style>
-
-    <style name="tw__EditTweet">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_marginTop">@dimen/tw__composer_spacing_small</item>
-        <item name="android:layout_marginBottom">@dimen/tw__composer_spacing_small</item>
-        <item name="android:paddingLeft">@dimen/tw__composer_spacing_large</item>
-        <item name="android:paddingRight">@dimen/tw__composer_spacing_large</item>
-        <item name="android:inputType">textMultiLine</item>
-        <item name="android:background">@null</item>
-        <item name="android:gravity">top|left</item>
-        <item name="android:textColor">?android:attr/textColor</item>
-        <item name="android:scrollbars">vertical</item>
-        <item name="android:cursorVisible">true</item>
-        <item name="android:textCursorDrawable">@null</item>
-        <item name="android:hint">@string/tw__composer_hint</item>
-        <item name="android:textColorHint">?android:attr/textColorHint</item>
-        <item name="android:imeOptions">actionSend</item>
-        <item name="android:imeActionLabel">@string/tw__post_tweet</item>
-    </style>
-
-    <style name="tw__ComposerDivider">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">@dimen/tw__composer_divider_height</item>
-        <item name="android:background">@color/tw__composer_light_gray</item>
-    </style>
-
-    <style name="tw__ComposerToolbar">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:paddingTop">@dimen/tw__composer_spacing_medium</item>
-        <item name="android:paddingBottom">@dimen/tw__composer_spacing_medium</item>
-        <item name="android:orientation">horizontal</item>
-        <item name="android:gravity">right</item>
-    </style>
-
-    <style name="tw__ComposerCharCount">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">@dimen/tw__composer_char_count_height</item>
-        <item name="android:layout_marginRight">@dimen/tw__composer_spacing_large</item>
-        <item name="android:gravity">center_vertical</item>
-        <item name="android:textColor">@color/tw__composer_deep_gray</item>
-        <item name="android:text">@string/tw__max_tweet_chars</item>
-        <item name="android:textSize">@dimen/tw__composer_font_size_small</item>
-        <item name="android:textAlignment">center</item>
-    </style>
-
-    <style name="tw__ComposerTweetButton">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">@dimen/tw__composer_tweet_btn_height</item>
-        <item name="android:layout_marginRight">@dimen/tw__composer_spacing_large</item>
-        <item name="android:textAllCaps">false</item>
-        <item name="android:textColor">@color/tw__composer_white</item>
-        <item name="android:background">@drawable/tw__btn_composer_tweet</item>
-        <item name="android:text">@string/tw__post_tweet</item>
-        <item name="android:textSize">@dimen/tw__composer_font_size_small</item>
-        <item name="android:textAlignment">center</item>
-    </style>
-
-    <style name="tw__ComposerCharCountOverflow" parent="tw__ComposerCharCount">
-        <item name="android:textColor">@color/tw__composer_red</item>
-    </style>
-
-</resources>
\ No newline at end of file
diff --git a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/ComposerActivityTest.java b/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/ComposerActivityTest.java
deleted file mode 100644
index be5b9f9b..00000000
--- a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/ComposerActivityTest.java
+++ /dev/null
@@ -1,178 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.content.Context;
-import android.content.Intent;
-import android.net.Uri;
-
-import com.twitter.sdk.android.core.TwitterAuthToken;
-import com.twitter.sdk.android.core.TwitterSession;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.fail;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-@RunWith(RobolectricTestRunner.class)
-public class ComposerActivityTest {
-    private static final String ANY_HASHTAG = "#hashtag";
-    private static final String ANY_TEXT = "text";
-    private Context mockContext;
-    private TwitterSession mockSession;
-    private TwitterAuthToken mockAuthToken;
-    private Uri mockUri;
-
-    @Before
-    public void setUp() {
-        mockContext = mock(Context.class);
-        mockSession = mock(TwitterSession.class);
-        mockAuthToken = mock(TwitterAuthToken.class);
-        mockUri = Uri.EMPTY;
-        when(mockSession.getAuthToken()).thenReturn(mockAuthToken);
-    }
-
-    @Test
-    public void testBuilder() {
-        final ComposerActivity.Builder builder = new ComposerActivity.Builder(mockContext);
-        assertNotNull(builder);
-    }
-
-    @Test
-    public void testBuilder_nullContext() {
-        try {
-            new ComposerActivity.Builder(null);
-            fail("expected IllegalArgumentException");
-        } catch (IllegalArgumentException e) {
-            assertEquals("Context must not be null", e.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilderSession() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .createIntent();
-        verify(mockSession).getAuthToken();
-        assertEquals(mockAuthToken, intent.getParcelableExtra(ComposerActivity.EXTRA_USER_TOKEN));
-    }
-
-    @Test
-    public void testBuilderSession_nullSession() {
-        try {
-            new ComposerActivity.Builder(mockContext).session(null);
-            fail("expected IllegalArgumentException");
-        } catch (IllegalArgumentException e) {
-            assertEquals("TwitterSession must not be null", e.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilderSession_nullAuthToken() {
-        when(mockSession.getAuthToken()).thenReturn(null);
-        try {
-            new ComposerActivity.Builder(mockContext).session(mockSession);
-            fail("expected IllegalArgumentException");
-        } catch (IllegalArgumentException e) {
-            assertEquals("TwitterSession token must not be null", e.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilderSession_sessionNotSet() {
-        try {
-            new ComposerActivity.Builder(mockContext).createIntent();
-        } catch (IllegalStateException e) {
-            assertEquals("Must set a TwitterSession", e.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilderDarkTheme() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .darkTheme()
-                .createIntent();
-        assertEquals(R.style.ComposerDark, intent.getIntExtra(ComposerActivity.EXTRA_THEME, -1));
-    }
-
-    @Test
-    public void testBuilder_defaultLightTheme() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .createIntent();
-        assertEquals(R.style.ComposerLight, intent.getIntExtra(ComposerActivity.EXTRA_THEME, -1));
-    }
-
-    @Test
-    public void testBuilderText() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .text(ANY_TEXT)
-                .createIntent();
-
-        assertEquals(ANY_TEXT, intent.getStringExtra(ComposerActivity.EXTRA_TEXT));
-    }
-
-    @Test
-    public void testBuilder_emptyArray() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .hashtags(new String[0])
-                .createIntent();
-
-        assertNull(intent.getStringExtra(ComposerActivity.EXTRA_HASHTAGS));
-    }
-
-    @Test
-    public void testBuilder_validHashtags() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .hashtags(ANY_HASHTAG)
-                .createIntent();
-
-        assertEquals(ANY_HASHTAG, intent.getStringExtra(ComposerActivity.EXTRA_HASHTAGS));
-    }
-
-    @Test
-    public void testBuilder_invalidHashtags() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .hashtags("NotHashtag")
-                .createIntent();
-
-        assertNull(intent.getStringExtra(ComposerActivity.EXTRA_HASHTAGS));
-    }
-
-    @Test
-    public void testBuilderImage() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .image(mockUri)
-                .createIntent();
-        assertEquals(mockUri, intent.getParcelableExtra(ComposerActivity.EXTRA_IMAGE_URI));
-    }
-}
diff --git a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/ComposerControllerTest.java b/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/ComposerControllerTest.java
deleted file mode 100644
index 3c573a68..00000000
--- a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/ComposerControllerTest.java
+++ /dev/null
@@ -1,219 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.content.Context;
-import android.content.Intent;
-import android.net.Uri;
-
-import com.twitter.Validator;
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterAuthToken;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.core.services.AccountService;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.ArgumentCaptor;
-import org.robolectric.RobolectricTestRunner;
-
-import retrofit2.Call;
-
-import static com.twitter.sdk.android.tweetcomposer.TweetUploadService.TWEET_COMPOSE_CANCEL;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
-import static org.mockito.Matchers.any;
-import static org.mockito.Matchers.eq;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-@RunWith(RobolectricTestRunner.class)
-public class ComposerControllerTest {
-    private static final String TWEET_TEXT = "some text";
-    private static final int REMAINING_CHAR_COUNT = 131;
-    private static final int OVERFLOW_REMAINING_CHAR_COUNT = -3;
-    private static final String ANY_TEXT = "text";
-    private static final String ANY_HASHTAG = "#hashtag";
-    private ComposerController controller;
-    private ComposerView mockComposerView;
-    private Context mockContext;
-    private TwitterAuthToken mockAuthToken;
-    private TwitterSession mockTwitterSession;
-    private AccountService mockAccountService;
-    private ComposerActivity.Finisher mockFinisher;
-    private ComposerController.DependencyProvider mockDependencyProvider;
-
-    @Before
-    public void setUp() throws Exception {
-        mockComposerView = mock(ComposerView.class);
-        mockContext = mock(Context.class);
-        when(mockComposerView.getContext()).thenReturn(mockContext);
-
-        mockFinisher = mock(ComposerActivity.Finisher.class);
-        mockAuthToken = mock(TwitterAuthToken.class);
-        mockTwitterSession = mock(TwitterSession.class);
-        when(mockTwitterSession.getAuthToken()).thenReturn(mockAuthToken);
-
-        final TwitterApiClient mockTwitterApiClient = mock(TwitterApiClient.class);
-        mockAccountService = mock(AccountService.class);
-        when(mockAccountService
-                .verifyCredentials(any(Boolean.class), any(Boolean.class), any(Boolean.class)))
-                .thenReturn(mock(Call.class));
-        when(mockTwitterApiClient.getAccountService()).thenReturn(mockAccountService);
-
-
-        mockDependencyProvider = mock(ComposerController.DependencyProvider.class);
-        when(mockDependencyProvider.getApiClient(any(TwitterSession.class)))
-                .thenReturn(mockTwitterApiClient);
-        when(mockDependencyProvider.getTweetValidator()).thenReturn(new Validator());
-    }
-
-    @Test
-    public void testComposerController() {
-        controller = new ComposerController(mockComposerView, mockTwitterSession, Uri.EMPTY,
-                ANY_TEXT, ANY_HASHTAG, mockFinisher, mockDependencyProvider);
-        assertEquals(mockTwitterSession, controller.session);
-        // assert that
-        // - sets callbacks on the view
-        // - sets initial Tweet text and cursor position
-        // - gets a TwitterApiClient AccountService to set the profile photo
-        // - sets card view in composer
-        verify(mockComposerView).setCallbacks(any(ComposerController.ComposerCallbacks.class));
-        verify(mockComposerView).setTweetText(ANY_TEXT + " " + ANY_HASHTAG);
-        verify(mockComposerView).setImageView(Uri.EMPTY);
-        verify(mockDependencyProvider).getApiClient(mockTwitterSession);
-        verify(mockAccountService).verifyCredentials(eq(false), eq(true), eq(false));
-    }
-
-    @Test
-    public void testTweetTextLength() {
-        controller = new ComposerController(mockComposerView, mockTwitterSession, Uri.EMPTY,
-                ANY_TEXT, ANY_HASHTAG, mockFinisher, mockDependencyProvider);
-
-        assertEquals(0, controller.tweetTextLength(null));
-        assertEquals(0, controller.tweetTextLength(""));
-        assertEquals(1, controller.tweetTextLength("☃"));
-        assertEquals(5, controller.tweetTextLength("tweet"));
-        assertEquals(39, controller.tweetTextLength("tweet with link https://example.com"));
-        assertEquals(23, controller.tweetTextLength("https://example.com/foo/bar/foo"));
-    }
-
-    @Test
-    public void testRemainingCharCount() {
-        assertEquals(140, ComposerController.remainingCharCount(0));
-        assertEquals(139, ComposerController.remainingCharCount(1));
-        assertEquals(0, ComposerController.remainingCharCount(140));
-        assertEquals(-1, ComposerController.remainingCharCount(141));
-    }
-
-    @Test
-    public void testIsPostEnabled() {
-        assertFalse(ComposerController.isPostEnabled(0));
-        assertTrue(ComposerController.isPostEnabled(1));
-        assertTrue(ComposerController.isPostEnabled(140));
-        assertFalse(ComposerController.isPostEnabled(141));
-    }
-
-    @Test
-    public void testIsTweetTextOverflow() {
-        assertFalse(ComposerController.isTweetTextOverflow(0));
-        assertFalse(ComposerController.isTweetTextOverflow(1));
-        assertFalse(ComposerController.isTweetTextOverflow(140));
-        assertTrue(ComposerController.isTweetTextOverflow(141));
-    }
-
-    @Test
-    public void testComposerCallbacksImpl_onTextChangedOk() {
-        mockTwitterSession = mock(TwitterSession.class);
-        controller = new ComposerController(mockComposerView, mockTwitterSession, Uri.EMPTY,
-                ANY_TEXT, ANY_HASHTAG, mockFinisher, mockDependencyProvider);
-        final ComposerController.ComposerCallbacks callbacks
-                = controller.new ComposerCallbacksImpl();
-        callbacks.onTextChanged(TWEET_TEXT);
-
-        verify(mockComposerView).setCharCount(REMAINING_CHAR_COUNT);
-        verify(mockComposerView).setCharCountTextStyle(R.style.tw__ComposerCharCount);
-        verify(mockComposerView).postTweetEnabled(true);
-    }
-
-    @Test
-    public void testComposerCallbacksImpl_onTextChangedOverflow() {
-        final String OVERFLOW_TEXT = "This tweet is longer than 140 characters. This tweet is " +
-                "longer than 140 characters. This tweet is longer than 140 characters. Overflow." +
-                "Overflow";
-        controller = new ComposerController(mockComposerView, mockTwitterSession, Uri.EMPTY,
-                ANY_TEXT, ANY_HASHTAG, mockFinisher, mockDependencyProvider);
-        final ComposerController.ComposerCallbacks callbacks
-                = controller.new ComposerCallbacksImpl();
-        callbacks.onTextChanged(OVERFLOW_TEXT);
-
-        verify(mockComposerView).setCharCount(OVERFLOW_REMAINING_CHAR_COUNT);
-        verify(mockComposerView).setCharCountTextStyle(R.style.tw__ComposerCharCountOverflow);
-        verify(mockComposerView).postTweetEnabled(false);
-    }
-
-    @Test
-    public void testComposerCallbacksImpl_onTweetPost() {
-        final Context mockContext = mock(Context.class);
-        when(mockComposerView.getContext()).thenReturn(mockContext);
-
-        controller = new ComposerController(mockComposerView, mockTwitterSession, Uri.EMPTY,
-                ANY_TEXT, ANY_HASHTAG, mockFinisher, mockDependencyProvider);
-        final ComposerController.ComposerCallbacks callbacks
-                = controller.new ComposerCallbacksImpl();
-        callbacks.onTweetPost(TWEET_TEXT);
-        // assert that
-        // - context is used to start the TweetUploadService
-        // - intent extras contain the session token and tweet text and card
-        final ArgumentCaptor<Intent> intentCaptor = ArgumentCaptor.forClass(Intent.class);
-        verify(mockContext).startService(intentCaptor.capture());
-        final Intent intent = intentCaptor.getValue();
-        assertEquals(TweetUploadService.class.getCanonicalName(),
-                intent.getComponent().getClassName());
-        assertEquals(mockAuthToken, intent.getParcelableExtra(TweetUploadService.EXTRA_USER_TOKEN));
-        assertEquals(Uri.EMPTY, intent.getParcelableExtra(TweetUploadService.EXTRA_IMAGE_URI));
-    }
-
-    @Test
-    public void testComposerCallbacksImpl_onClose() {
-        controller = new ComposerController(mockComposerView, mockTwitterSession, Uri.EMPTY,
-                ANY_TEXT, ANY_HASHTAG, mockFinisher, mockDependencyProvider);
-        final ComposerController.ComposerCallbacks callbacks
-                = controller.new ComposerCallbacksImpl();
-        callbacks.onCloseClick();
-        // assert that
-        // - finishes the activity
-        verify(mockFinisher).finish();
-    }
-
-    @Test
-    public void testSendCancelBroadcast() {
-        controller = new ComposerController(mockComposerView, mockTwitterSession, Uri.EMPTY,
-                ANY_TEXT, ANY_HASHTAG, mockFinisher, mockDependencyProvider);
-        final ArgumentCaptor<Intent> intentCaptor = ArgumentCaptor.forClass(Intent.class);
-        controller.sendCancelBroadcast();
-        verify(mockContext).sendBroadcast(intentCaptor.capture());
-
-        final Intent capturedIntent = intentCaptor.getValue();
-        assertEquals(TWEET_COMPOSE_CANCEL, capturedIntent.getAction());
-    }
-}
diff --git a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/FileUtilsTest.java b/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/FileUtilsTest.java
deleted file mode 100644
index 253baf0b..00000000
--- a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/FileUtilsTest.java
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.net.Uri;
-import android.webkit.MimeTypeMap;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.internal.ShadowExtractor;
-import org.robolectric.shadows.ShadowMimeTypeMap;
-
-import java.io.File;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertTrue;
-
-@RunWith(RobolectricTestRunner.class)
-public class FileUtilsTest {
-    ShadowMimeTypeMap mimeTypeMap;
-
-    @Before
-    public void setUp() {
-        final ShadowMimeTypeMap mimeTypeMap = (ShadowMimeTypeMap) ShadowExtractor
-                .extract(MimeTypeMap.getSingleton());
-        mimeTypeMap.addExtensionMimeTypMapping("jpg", "image/jpeg");
-        mimeTypeMap.addExtensionMimeTypMapping("jpeg", "image/jpeg");
-        mimeTypeMap.addExtensionMimeTypMapping("png", "image/png");
-        this.mimeTypeMap = mimeTypeMap;
-    }
-
-    @Test
-    public void testIsMediaDocumentAuthority() {
-        final Uri uri = new Uri.Builder()
-                .scheme("content")
-                .authority("com.android.providers.media.documents")
-                .path("image%3A59161")
-                .build();
-        assertTrue(FileUtils.isMediaDocumentAuthority(uri));
-    }
-
-    @Test
-    public void testIsContentScheme() {
-        final Uri uri = new Uri.Builder().scheme("content").build();
-        assertTrue(FileUtils.isContentScheme(uri));
-    }
-
-    @Test
-    public void testIsFileScheme() {
-        final Uri uri = new Uri.Builder().scheme("file").build();
-        assertTrue(FileUtils.isFileScheme(uri));
-    }
-
-    @Test
-    public void testGetMimeType() {
-        assertEquals("image/png", FileUtils.getMimeType(new File("file.png")));
-        assertEquals("image/jpeg", FileUtils.getMimeType(new File("file.jpeg")));
-        assertEquals("image/jpeg", FileUtils.getMimeType(new File("file.jpeg")));
-        assertEquals("application/octet-stream", FileUtils.getMimeType(new File("")));
-    }
-
-    @Test
-    public void testExtensionToMimeType() {
-        assertEquals("image/png", mimeTypeMap.getMimeTypeFromExtension("png"));
-        assertEquals("image/jpeg", mimeTypeMap.getMimeTypeFromExtension("jpg"));
-        assertEquals("image/jpeg", mimeTypeMap.getMimeTypeFromExtension("jpeg"));
-        assertEquals(null, mimeTypeMap.getMimeTypeFromExtension(""));
-    }
-
-    @Test
-    public void testGetExtension() {
-        assertEquals("", FileUtils.getExtension(""));
-        assertEquals("", FileUtils.getExtension("file"));
-        assertEquals("", FileUtils.getExtension("file."));
-        assertEquals("png", FileUtils.getExtension("file.png"));
-        assertEquals("jpg", FileUtils.getExtension("file.jpg"));
-    }
-}
diff --git a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetComposerIntentBuilderTest.java b/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetComposerIntentBuilderTest.java
deleted file mode 100644
index bcd93469..00000000
--- a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetComposerIntentBuilderTest.java
+++ /dev/null
@@ -1,235 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.content.Context;
-import android.content.Intent;
-import android.content.pm.ActivityInfo;
-import android.content.pm.PackageManager;
-import android.content.pm.ResolveInfo;
-import android.net.Uri;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import java.net.MalformedURLException;
-import java.net.URL;
-import java.util.ArrayList;
-import java.util.List;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.fail;
-import static org.mockito.Matchers.any;
-import static org.mockito.Matchers.anyInt;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-@RunWith(RobolectricTestRunner.class)
-public class TweetComposerIntentBuilderTest {
-
-    @Test
-    public void testBuilder_constructor() {
-        final TweetComposer.Builder builder = new TweetComposer.Builder(mock(Context.class));
-        assertNotNull(builder);
-    }
-
-    @Test
-    public void testBuilder_constructorNullContext() {
-        try {
-            new TweetComposer.Builder(null);
-            fail();
-        } catch (IllegalArgumentException e) {
-            assertEquals("Context must not be null.", e.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_text() {
-        final Context context = createIntentContext(true);
-        final String text = "test";
-        final TweetComposer.Builder builder = new TweetComposer.Builder(context).text(text);
-        final Intent intent = builder.createTwitterIntent();
-        assertEquals(text, intent.getStringExtra(Intent.EXTRA_TEXT));
-    }
-
-    @Test
-    public void testBuilder_textNull() {
-        try {
-            new TweetComposer.Builder(mock(Context.class)).text(null);
-            fail();
-        } catch (IllegalArgumentException ignored) {
-            assertEquals("text must not be null.", ignored.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_textAlreadySet() {
-        final String text = "test";
-        try {
-            new TweetComposer.Builder(mock(Context.class)).text(text).text(text);
-            fail();
-        } catch (IllegalStateException ignored) {
-            assertEquals("text already set.", ignored.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_textAndUrl() throws MalformedURLException {
-        final Context context = createIntentContext(true);
-        final String text = "test";
-        final URL url = new URL("http://www.twitter.com");
-
-        final String result = text + " " + url.toString();
-        final TweetComposer.Builder builder = new TweetComposer.Builder(context)
-                .text(text)
-                .url(url);
-        final Intent intent = builder.createTwitterIntent();
-        assertEquals(result, intent.getStringExtra(Intent.EXTRA_TEXT));
-    }
-
-    @Test
-    public void testBuilder_url() throws MalformedURLException {
-        final Context context = createIntentContext(true);
-        final URL url = new URL("http://www.twitter.com");
-        final TweetComposer.Builder builder = new TweetComposer.Builder(context).url(url);
-        final Intent intent = builder.createTwitterIntent();
-        assertEquals(url.toString(), intent.getStringExtra(Intent.EXTRA_TEXT));
-    }
-
-    @Test
-    public void testBuilder_urlNull() {
-        try {
-            new TweetComposer.Builder(mock(Context.class)).url(null);
-            fail();
-        } catch (IllegalArgumentException ignored) {
-            assertEquals("url must not be null.", ignored.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_urlAlreadySet() throws MalformedURLException {
-        final URL url = new URL("http://www.twitter.com");
-        try {
-            new TweetComposer.Builder(mock(Context.class)).url(url).url(url);
-            fail();
-        } catch (IllegalStateException ignored) {
-            assertEquals("url already set.", ignored.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_image() {
-        final Context context = createIntentContext(true);
-        final Uri uri = Uri.parse("http://www.twitter.com");
-        final TweetComposer.Builder builder = new TweetComposer.Builder(context).image(uri);
-        final Intent intent = builder.createTwitterIntent();
-        assertEquals(uri, intent.getParcelableExtra(Intent.EXTRA_STREAM));
-    }
-
-    @Test
-    public void testBuilder_imageNull() {
-        try {
-            new TweetComposer.Builder(mock(Context.class)).image(null);
-            fail();
-        } catch (IllegalArgumentException ignored) {
-            assertEquals("imageUri must not be null.", ignored.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_imageAlreadySet() {
-        final Uri uri = Uri.parse("http://www.twitter.com");
-        try {
-            new TweetComposer.Builder(mock(Context.class)).image(uri).image(uri);
-            fail();
-        } catch (IllegalStateException ignored) {
-            assertEquals("imageUri already set.", ignored.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_createIntentTwitterInstalled() {
-        final Context context = createIntentContext(true);
-        final TweetComposer.Builder builder = new TweetComposer.Builder(context);
-        final Intent intentTwitter = builder.createTwitterIntent();
-        final Intent intent = builder.createIntent();
-
-        assertNotNull(intent);
-        assertNotNull(intentTwitter);
-        assertIntentEquals(intentTwitter, intent);
-    }
-
-    @Test
-    public void testBuilder_createIntentTwitterNotInstalled() {
-        final Context context = createIntentContext(false);
-        final TweetComposer.Builder builder = new TweetComposer.Builder(context);
-        final Intent intent = builder.createIntent();
-        final Intent intentTwitter = builder.createTwitterIntent();
-        final Intent intentWeb = builder.createWebIntent();
-
-        assertNotNull(intent);
-        assertNull(intentTwitter);
-        assertIntentEquals(intentWeb, intent);
-    }
-
-    @Test
-    public void testBuilder_show() {
-        final Context context = createIntentContext(true);
-        final TweetComposer.Builder builder = new TweetComposer.Builder(context);
-        builder.show();
-
-        verify(context).startActivity(any(Intent.class));
-    }
-
-    private Context createIntentContext(boolean twitterInstalled) {
-
-        final List<ResolveInfo> resolveInfoList = new ArrayList<>();
-        final ResolveInfo info = new ResolveInfo();
-
-        info.activityInfo = new ActivityInfo();
-        if (twitterInstalled) {
-            info.activityInfo.packageName = "com.twitter.android";
-            info.activityInfo.name = "Twitter";
-        } else {
-            info.activityInfo.packageName = "not.twitter.android";
-            info.activityInfo.name = "NotTwitter";
-        }
-        resolveInfoList.add(info);
-
-        final Context context = mock(Context.class);
-        final PackageManager manager = mock(PackageManager.class);
-
-        when(context.getPackageManager()).thenReturn(manager);
-        when(manager.queryIntentActivities(any(Intent.class), anyInt()))
-                .thenReturn(resolveInfoList);
-        return context;
-    }
-
-    private void assertIntentEquals(Intent intent, Intent otherIntent) {
-        assertEquals(intent.getType(), otherIntent.getType());
-        assertEquals(intent.getAction(), otherIntent.getAction());
-        assertEquals(intent.getStringExtra(Intent.EXTRA_TEXT),
-                otherIntent.getStringExtra(Intent.EXTRA_TEXT));
-        assertEquals(intent.getStringExtra(intent.getStringExtra(Intent.EXTRA_STREAM)),
-                otherIntent.getStringExtra(Intent.EXTRA_STREAM));
-    }
-}
diff --git a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetUploadServiceTest.java b/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetUploadServiceTest.java
deleted file mode 100644
index 59418ae9..00000000
--- a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetUploadServiceTest.java
+++ /dev/null
@@ -1,174 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.content.Context;
-import android.content.Intent;
-import android.net.Uri;
-
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterAuthToken;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetBuilder;
-import com.twitter.sdk.android.core.services.MediaService;
-import com.twitter.sdk.android.core.services.StatusesService;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.ArgumentCaptor;
-import org.robolectric.Robolectric;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-import java.io.IOException;
-
-import okhttp3.RequestBody;
-import retrofit2.Call;
-import retrofit2.mock.Calls;
-
-import static org.junit.Assert.assertEquals;
-import static org.mockito.Matchers.any;
-import static org.mockito.Matchers.anyLong;
-import static org.mockito.Matchers.anyString;
-import static org.mockito.Matchers.eq;
-import static org.mockito.Matchers.isNull;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.spy;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.verifyZeroInteractions;
-import static org.mockito.Mockito.when;
-
-@RunWith(RobolectricTestRunner.class)
-public class TweetUploadServiceTest {
-    private static final String EXPECTED_TWEET_TEXT = "tweet text";
-
-    private Context context;
-    private TwitterApiClient mockTwitterApiClient;
-    private StatusesService mockStatusesService;
-    private MediaService mockMediaService;
-    private TweetUploadService.DependencyProvider mockDependencyProvider;
-    private TweetUploadService service;
-    private Tweet tweet;
-
-    @Before
-    public void setUp() throws Exception {
-        context = RuntimeEnvironment.application;
-        mockMediaService = mock(MediaService.class);
-        mockStatusesService = mock(StatusesService.class);
-        tweet =  new TweetBuilder().setId(123L).setText(EXPECTED_TWEET_TEXT).build();
-        when(mockMediaService
-                .upload(any(RequestBody.class), any(RequestBody.class), any(RequestBody.class)))
-                .thenReturn(mock(Call.class));
-        when(mockStatusesService.update(anyString(), isNull(Long.class), isNull(Boolean.class),
-                isNull(Double.class), isNull(Double.class), isNull(String.class),
-                isNull(Boolean.class), eq(true), isNull(String.class)))
-                .thenReturn(Calls.response(tweet));
-
-        mockTwitterApiClient = mock(TwitterApiClient.class);
-        when(mockTwitterApiClient.getStatusesService()).thenReturn(mockStatusesService);
-        when(mockTwitterApiClient.getMediaService()).thenReturn(mockMediaService);
-
-        mockDependencyProvider = mock(TweetUploadService.DependencyProvider.class);
-        when(mockDependencyProvider.getTwitterApiClient(any(TwitterSession.class)))
-                .thenReturn(mockTwitterApiClient);
-
-        service = spy(Robolectric.buildService(TweetUploadService.class).create().get());
-        service.dependencyProvider = mockDependencyProvider;
-    }
-
-    @Test
-    public void testOnHandleIntent() {
-        final TwitterAuthToken mockToken = mock(TwitterAuthToken.class);
-
-        final Intent intent = new Intent(context, TweetUploadService.class);
-        intent.putExtra(TweetUploadService.EXTRA_USER_TOKEN, mockToken);
-        intent.putExtra(TweetUploadService.EXTRA_TWEET_TEXT, EXPECTED_TWEET_TEXT);
-        intent.putExtra(TweetUploadService.EXTRA_IMAGE_URI, Uri.EMPTY);
-        service.onHandleIntent(intent);
-
-        verify(service).uploadTweet(any(TwitterSession.class), eq(EXPECTED_TWEET_TEXT),
-                eq(Uri.EMPTY));
-    }
-
-    @Test
-    public void testUploadTweet_withNoMediaSuccess() {
-        service.uploadTweet(mock(TwitterSession.class), EXPECTED_TWEET_TEXT, null);
-
-        verify(mockStatusesService).update(eq(EXPECTED_TWEET_TEXT), isNull(Long.class),
-                isNull(Boolean.class), isNull(Double.class), isNull(Double.class),
-                isNull(String.class), isNull(Boolean.class), eq(true), isNull(String.class));
-        verifyZeroInteractions(mockMediaService);
-        verify(service).sendSuccessBroadcast(eq(123L));
-        verify(service).stopSelf();
-    }
-
-    @Test
-    public void testUploadTweet_withNoMediaFailure() {
-        when(mockStatusesService.update(anyString(), isNull(Long.class), isNull(Boolean.class),
-                isNull(Double.class), isNull(Double.class), isNull(String.class),
-                isNull(Boolean.class), eq(true), isNull(String.class)))
-                .thenReturn(Calls.failure(new IOException("")));
-
-        service.uploadTweet(mock(TwitterSession.class), EXPECTED_TWEET_TEXT, null);
-
-        verify(mockStatusesService).update(eq(EXPECTED_TWEET_TEXT), isNull(Long.class),
-                isNull(Boolean.class), isNull(Double.class), isNull(Double.class),
-                isNull(String.class), isNull(Boolean.class), eq(true), isNull(String.class));
-        verifyZeroInteractions(mockMediaService);
-        verify(service).fail(any(TwitterException.class));
-        verify(service).stopSelf();
-    }
-
-    @Test
-    public void testUploadTweet_withInvalidUri() {
-        service.uploadTweet(mock(TwitterSession.class), EXPECTED_TWEET_TEXT, Uri.EMPTY);
-
-        verifyZeroInteractions(mockStatusesService);
-        verifyZeroInteractions(mockMediaService);
-        verify(service).fail(any(TwitterException.class));
-        verify(service).stopSelf();
-    }
-
-    @Test
-    public void testSendSuccessBroadcast() {
-        final ArgumentCaptor<Intent> intentCaptor = ArgumentCaptor.forClass(Intent.class);
-        service.sendSuccessBroadcast(anyLong());
-        verify(service).sendBroadcast(intentCaptor.capture());
-
-        final Intent capturedIntent = intentCaptor.getValue();
-        assertEquals(TweetUploadService.UPLOAD_SUCCESS, capturedIntent.getAction());
-        assertEquals(RuntimeEnvironment.application.getPackageName(), capturedIntent.getPackage());
-    }
-
-    @Test
-    public void testSendFailureBroadcast() {
-        final Intent mockIntent = mock(Intent.class);
-        final ArgumentCaptor<Intent> intentCaptor = ArgumentCaptor.forClass(Intent.class);
-        service.sendFailureBroadcast(mockIntent);
-        verify(service).sendBroadcast(intentCaptor.capture());
-
-        final Intent capturedIntent = intentCaptor.getValue();
-        assertEquals(TweetUploadService.UPLOAD_FAILURE, capturedIntent.getAction());
-        assertEquals(mockIntent,
-                capturedIntent.getParcelableExtra(TweetUploadService.EXTRA_RETRY_INTENT));
-        assertEquals(RuntimeEnvironment.application.getPackageName(), capturedIntent.getPackage());
-    }
-}
diff --git a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/internal/util/ObservableScrollViewTest.java b/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/internal/util/ObservableScrollViewTest.java
deleted file mode 100644
index dc0ebbe9..00000000
--- a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/internal/util/ObservableScrollViewTest.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer.internal.util;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-
-@RunWith(RobolectricTestRunner.class)
-public class ObservableScrollViewTest {
-    static final int TEST_SCROLL_X = 10;
-
-    @Test
-    public void testOnScrollChanged() {
-        final ObservableScrollView scrollView =
-                new ObservableScrollView(RuntimeEnvironment.application);
-        final ObservableScrollView.ScrollViewListener listener =
-                mock(ObservableScrollView.ScrollViewListener.class);
-        scrollView.setScrollViewListener(listener);
-
-        scrollView.onScrollChanged(0, TEST_SCROLL_X, 0, 0);
-
-        verify(listener).onScrollChanged(TEST_SCROLL_X);
-    }
-}
diff --git a/tweet-composer/src/test/resources/robolectric.properties b/tweet-composer/src/test/resources/robolectric.properties
deleted file mode 100644
index ac810918..00000000
--- a/tweet-composer/src/test/resources/robolectric.properties
+++ /dev/null
@@ -1,2 +0,0 @@
-sdk = 21
-constants = com.twitter.sdk.android.tweetcomposer.BuildConfig
\ No newline at end of file
diff --git a/tweet-ui/build.gradle b/tweet-ui/build.gradle
deleted file mode 100644
index 2f493460..00000000
--- a/tweet-ui/build.gradle
+++ /dev/null
@@ -1,89 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        versionCode 1
-        versionName version
-        minSdkVersion rootProject.minSdkVersion
-        consumerProguardFiles 'proguard.txt'
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-
-            testCoverageEnabled enableTestCodeCoverage
-        }
-        release {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-        }
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-
-    // Forcibly add debug and the generated "R" files onto the test classpath
-    sourceSets {
-        test.java.srcDirs += "build/generated/source/r/debug"
-        test.java.srcDirs += "src/debug"
-    }
-
-    testOptions {
-        unitTests.returnDefaultValues = true
-        unitTests.includeAndroidResources true
-    }
-}
-
-dependencies {
-    api project(':twitter-core')
-
-    implementation dependency.picasso
-    implementation dependency.supportCoreV4
-    implementation dependency.supportCompatV4
-    implementation dependency.recyclerview
-
-    androidTestCompile dependency.retrofitMock
-    androidTestCompile dependency.mockito
-    androidTestCompile dependency.dexmakerMockito
-
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
-}
-
-apply from: rootProject.file('maven_publish.gradle')
diff --git a/tweet-ui/changelog.md b/tweet-ui/changelog.md
deleted file mode 100644
index 1cff30b5..00000000
--- a/tweet-ui/changelog.md
+++ /dev/null
@@ -1,331 +0,0 @@
-# Android SDK TweetUi Kit changelog
-*Non-trivial pull requests should include an entry below. Entries must be suitable for inclusion in public-facing materials such as release notes and blog posts. Keep them short, sweet, and in the past tense. New entries go on top. When merging to deploy, add the version number and date.*
-
-## Unreleased
-
-## v3.3.0
-
-* Removed scribing
-
-## v3.2.0
-
-* Moved build to Java 8
-* Narrowed support-v4 dependency to support-compat and support-core-ui
-
-## v3.1.1
-
-* Modified TweetTimelineRecyclerViewAdapter to allow user to override the ViewHolder
-
-## v3.1.0
-
-* Added support for RecyclerView
-* Linkified profile image and entities (hashtags, user mentions, and symbols)
-
-## v3.0.0
-
-* Fixed crash when liking a quote Tweet
-* Fixed crash with multi-touch gestures in ViewPager
-
-## v2.3.2
-
-* Added ability to set geocode for SearchTimeline builder.
-* Videos less than 6.5 seconds now loop.
-* Fixed issue where quote Tweets with media showed both media and quote Tweet. Only media should be shown if both are included.
-
-## v2.3.1
-
-* Improved RTL mirroring for Tweet views.
-* Dates are now properly localized for non-English locales.
-
-## v2.3.0
-
-* Added support for timeline filtering.
-
-## v2.2.0
-
-* Added support for quote Tweet display.
-
-## v2.1.1
-
-* Fixed UnsupportedOperationException when rendering multiple photos API 17 and below.
-
-## v2.1.0
-
-* Added multi-photo support for inline views and the fullscreen gallery view.
-* Updated Twitter Core dependency to version 2.1.0.
-
-## v2.0.1
-
-* Removed pseudo locales from translations.
-
-## v2.0.0
-
-* Dropped support for API versions before API 14 (ICS).
-* Updated Twitter Core dependency.
-* Removed previously deprecated methods and classes.
-* Added contentDescription for media based on altText field.
-
-## v1.11.1
-
-* Allow non-filtered search results for SearchTimeline
-
-## v1.11.0
-
-* Added support for Vine in Tweets
-
-## v1.10.3
-
-* Updated Twitter Core dependency
-
-## v1.10.2
-
-* Updated Fabric Base dependency
-
-## v1.10.1
-
-* Added HLS playback support. Removed WebM playback support.
-* Added loading and buffering spinners to video player.
-* Only show play button and media badge if playback is supported.
-
-## v1.10.0
-
-* Added click listeners on Tweet views for URL and media clicks.
-* Fixed click listeners on Tweet text so multiple events are not generated.
-* Fixed JavaDocs.
-
-## v1.9.1
-
-* Added gif or duration badge to media view.
-
-## v1.9.0
-* Added basic photo viewer.
-* Added custom controls for video playback.
-* Enabled looping for animated gifs.
-
-## v1.8.0
-
-* Added support for video and animated gif playback.
-
-## v1.7.0
-
-* Added heart animations on Android API 21+
-* Changed favorite stars to "likes" hearts.
-
-## v1.6.0
-
-## v1.5.0
-
-* Raised Min SDK version from 8 to 9.
-
-## v1.4.1
-
-## v1.4.0
-
-* Added Tweet actions to Tweet views.
-* Added TweetTimelineListAdapter Builder to support setting style and enabling actions
-* Added FixedTweetTimeline for fixed sets of Tweets
-* Deprecated TweetViewAdapter and TweetViewFetchAdapter. To upgrade:
-    * If required, load Tweets by id with TweetUtils.loadTweets(List<Long> ids, Callback<List<Tweet>> cb)
-    * Build a FixedTweetTimeline with the set of Tweets to display, pass the timeline to the
-    TweetTimelineListAdapter and set the adapter on your ListView (consistent with other Timelines).
-
-## v1.3.1
-
-* (DH) Change TweetUtils loadTweet(s) to take a TwitterCore Callback. Deprecate those taking a LoadCallback.
-* (DH) Change TweetViewFetchAdapter setTweetIds to take a TwitterCore Callback. Deprecate the method taking a LoadCallback.
-
-## v1.3.0
-
-* (EF) Updated TweetView so images display full width on API < 17
-* (DH) Updated the CompactTweetView photo display to support a range of aspect ratios to reduce cropping. Made portrait oriented photos square cropped.
-* (DH) Added TwitterListTimeline to support Timelines of Tweets from Twitter Lists.
-* (DH) Fixed bug in SearchTimeline preventing some filter queries from being used.
-* (DH) Removed cobalt performance-metrics dependency.
-* (DH) Added result_type=filtered to SearchTimeline queries to use new backend search workflow.
-* (DH) Improved TweetView display with reduced full name font weight on newer API versions.
-
-## v1.2.0
-
-* (DH) Added CollectionTimeline to show Tweets from a Twitter collection.
-* (DH) Added 'refresh' support to the TimelineListAdapter
-* (DH) Removed final from TimelineCursor class.
-* (AP) Updated Picasso dependency version to 2.5.2, OkHttp required to be 2.0 or greater.
-
-## v1.1.0
-
-* (AP) (internal) Added timeline impression scribing.
-* (DH) Added UserTimeline to show Tweets for a particular user.
-* (DH) Added SearchTimeline to show Tweets that match a search query.
-* (DH) Added TweetTimelineListAdapter for providing ListViews with a scrollable Timeline of Tweets.
-* (AP) Added retweet display support to show the original Tweet with retweeted by attribution.
-
-## v1.0.7
-
-* (DH) Fixed TweetView MetricsManager IllegalArgumentException bug.
-* (DH) (internal) Added a UserTimeline.
-
-## v1.0.6
-
-* (AP) Fixed strict mode violations on startup when using OkHttp
-* (DH) Update performance-metrics to 0.2.0
-* (DH) (internal) Added foundation for timelines with a TimelineListAdapter and SearchTimeline, an implementation of Timeline.
-* (DH) Switched to using com.twitter.cobalt:performance-metrics for performance monitoring.
-
-## v1.0.5
-**Jan 30 2015**
-
-* (DH) Changed package for AppSession used internally
-
-## v1.0.4
-**Jan 29 2015**
-
-* (EF) Removed targetSdkVersion because it should not be specified on libraries.
-
-## v1.0.3
-**Dec 15 2014**
-
-* (DH) Fixed TweetViewAdapter to set an empty Tweet list when null is passed to setTweets
-* (TS) Added Consumer Proguard Config file to be bundled with AAR
-* (DH) Stopped Share Tweet button from showing in all caps on API 21
-
-## v1.0.2
-**Nov 20 2014**
-* (AP) Scribe SyndicatedSdkImpression type events on Tweet view impressions and permalink clicks
-* (TS) Moved to Java 7
-* (AP) Fixed scribing requests dropping User-Agent and X-Client-UUID headers
-* (DH) Fixed exception in TweetViewAdapter.
-* (DH) Started treating sessions with tokens known to be expired so new tokens are fetched upfront.
-* (DH) Improved TweetView and CompactTweetView layout preview in IDEs to show an example Tweet.
-
-## v1.0.1
-**Oct 30 2014**
-
-* (TY) Removed Apache 2.0 License from pom files.
-
-## v1.0.0
-**Oct 15 2014**
-
-* (AP) Updated support library version 21.0.0
-* (LTM) Removed allowBackup=true attribute from application element in AndroidManifest.xml.
-* (YH) Changed the loading of Active Session from TweetCore to be in background.
-* (AP) Configured to scribe to talk to https://syndication.twitter.com/i/jot/sdk
-* (AP) Added required ScribeConfig arguments for scribe path components
-* (LTM) Fixed scribe bug where events were not sent to the backend whenever TweetUi was using a user session for making API calls.
-* (LTM) Introduced AppSession for holding app tokens. TwitterSession now holds only user tokens.
-* (LTM) Switched to using new SessionManager that manages the app sessions. Updated TwitterApiClient to accept Session instead of TwitterSession.
-* (DH) Disabled setting Tweet fields in Tweet views rendered in edit mode (e.g. for IDE layout preview)
-* (DH) Disabled the Tweet view and logged the error when views are created, but the TweetUi kit hasn't been started in Fabric.with()
-* (DH) Added debug logging for single Tweet load failures, error logging for kit or auth related errors.
-* (LTM) Configured scribe using analytics settings, which is used by crashlytics for configuring Answers. This is temporary until we have can get our scribe settings from the backend. If analytics settings are not available, fallback to defaults.
-* (AP) Added SyndicationScribeEvent for product metrics
-* (AP) Added many languages for localization
-* (AP) Updated ScribeFilesSender to send device id header
-* (DH) Fixed bug in BaseTweetView.setTweet in which tapping a Tweet took the user to the previous Tweet
-* (DH) Removed TweetView and CompactTweetView OnTwitterExceptionListener (breaking change)
-* (AP) Updated ScribeConfig with configurable User-Agent
-* (DH) Added loadTweet and loadTweets to handle guest auth and request queueing
-* (DH) Added TweetViewFetcherAdapter.setTweetIds that accepts a LoadCallback
-* (DH) Made TweetViewFetchAdapter returns Tweets in requested order, no longer optional (breaking change)
-* (DH) Removed TweetViewFetchAdapter's setOnTwitterExceptionListener (breaking change)
-* (AP) Improved accessibility for users of TalkBack
-* (LTM) Updated Twitter API Tweet model to be immutable model.
-* (LTM) Updated Twitter API User model to be immutable model.
-* (LTM) Updated Twitter API entity models to be immutable models.
-* (DH) Removed TweetView and CompactTweetView setOnTwitterExceptionListener and loadTweet (breaking change)
-* (DH) Removed TweetView and CompactTweetView constructors which accepted Tweet ids (breaking change)
-* (DH) Changed Share Tweet button margin slightly
-
-## v0.9.0
-
-* (AP) Fixed html entities in Tweets passed in via StatusesService
-* (DH) Renamed TweetView and CompactTweetView style attributes to allow creating custom styles and themes
-* (AP) Added color calculations for secondary colored visual elements
-* (DH) Added photo to CompactTweetView with 16:9 aspect ratio and center cropped
-* (DH) Removed XML "tw__preload_(name, screen_name, text, timestamp)" attributes from Tweet views (breaking change)
-
-## v0.8.0
-** Sep 15 2014**
-
-* (TS) Added fluent API builder to Fabric Class and cleaned up Fabric API
-* (DH) Renamed twittersocial to tweetui
-* (LTM) Renamed twittercore to core
-* (TS) Renamed Foundation to Fabric
-* (DH) Added "tw__" prefix to TweetView and CompactTweetView XML attributes (breaking change)
-* (LTM) Updated SessionManager to support multiple sessions. This is a breaking API change.
-
-## v0.7.0
-** Sep 4 2014**
-
-* (DH) Fix TweetViewFetchAdapter out-of-order Tweets problem
-* (AP) Added Share Tweet button to TweetViews
-* (DH) Added U-specific avatar, media default, and error drawables.
-* (DH) Added TweetView and CompactTweetView constructors taking a style to be applied to the view.
-* (DH) Added R.style.tw__TweetLightStyle and R.style.tw__TweetDarkStyle styles which may be used or subclassed.
-* (DH) Allowed style to be set by the standard XML 'style' attribute (e.g. style="@style/tw__TweetLightStyle")
-
-## v0.6.0
-**Aug 18 2014**
-
-* (DH) Clear session when guest/app token expires
-* (LTM) Reset version from 1.0.4 to 0.1.0
-* (TS) Replaced Kit#getName with Kit#getIdentifier, fixed issue where kit names could be reported incorrectly after proguarding.
-* (DH) Make the super class of TweetView and CompactTweetView, BaseTweetView, public
-* (DH) Updated Tweet timestamps to show relative time format
-* (DH) Removed share button and share listener (breaking change)
-* (DH) Made TweetView and CompactTweetView design redline adjustments and cleaned up styles
-* (AP) Added basic scribing with no de-duplication effort.
-* (AP) Removed theme interface (breaking change)
-* (AP) Added error listener to more explicit OnTwitterExceptionListener
-* (AP) Added requirement to call AbstractTweetView.loadTweet to fetch tweet from the Twitter api for tweets constructed with an id (breaking change)
-* (AP) Removed success listener from tweet view (breaking change)
-* (AP) Fixed tweet entity indices in presence of html chars and emoji
-* (DH) Changed TweetViewAdapter constructor to accept Tweets (breaking change, no longer accepts Builders).
-* (DH) TweetViewFetchAdapter constructed by tweetIds and performs multiget statuses/lookup.
-* (DH) Changed TweetView and CompactTweetView constructors to accept Tweet id or Tweet, Builder removed (breaking change).
-* (TS) Replaced API stack with new Twittercore API
-* (TS) Added Picasso for image loading
-
-## v0.5.0
-**July 24 2014**
-
-* (DH) Added TweetViewAdapter to support AdapterViews such as ListView
-* (AP) Added setOnShareListener to TweetViewBuilder interface
-* (AP) Added share action to compact and normal tweets
-* (DH) Removed Tweet reply, retweet, and favorite actions and ComposerActivity
-* (AP) Added onSuccess and onError callbacks to TweetView that can be assigned in the builder
-
-## v0.4.0
-**June 26 2014**
-
-* (DH) Each TweetView class provides a Builder. Builder constructors now require a tweetId (breaking change). Removed method createCompact.
-* (DH) Add support for setting preloaded data via XML.
-* (DH) Improved Tweet compose transition animation, button disabling, remaining character warning.
-* (AP) Added support for viewing tweets while logged-out
-* (AP) Split TwitterSocial.setAuth into setAuthConfig and setAuthToken (breaking change)
-
-## v0.3.0
-**June 3 2014**
-
-* (AP) Added support for setting preloaded data, equivalent to data in oembed.
-* (AP) Updated TweetView's default click event to launch permalink.
-* (DH) Implemented tweet reply action button.
-* (AP) Added best effort error recovering and error parsing.
-* (LTM) Removed twitter auth permission since it was never explicitly required by twittersocial. twitteridentity removed this permission some time ago since it is no longer required for Twitter Single Sign On.
-* (TS) Migrated app onboarding code from crashlytics to foundation.
-* (IC) Added support for tracking rate limiting.
-* (AP) Added support for character counting when composing a tweet.
-* (DH) Implemented retweet/undo retweet action button.
-
-## v0.2.0
-**May 20 2014**
-
-* (DH) Fixed tweet view inconsistencies.
-* (LTM) Changed how version information is generated.
-* (DH) Implemented favorite/unfavorite tweet action button.
-* (TS) Renamed Module to Kit.
-* (AP) Improved startup time by initializing syndication db connection asynchronously.
-
-## v0.1.0
-**April 28 2014**
-
-* Initial version
diff --git a/tweet-ui/gradle.properties b/tweet-ui/gradle.properties
deleted file mode 100644
index bf9b9d16..00000000
--- a/tweet-ui/gradle.properties
+++ /dev/null
@@ -1,26 +0,0 @@
-#
-# Copyright (C) 2015 Twitter, Inc.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-#
-
-# The to be released version. When releasing, drop -SNAPSHOT. After releasing, bump version
-# number and add back -SNAPSHOT
-version=3.3.0-SNAPSHOT
-version_code=1
-
-pom_name=Tweet Ui Android SDK
-pom_group_id=com.twitter.sdk.android
-pom_artifact_id=tweet-ui
-pom_packaging=aar
diff --git a/tweet-ui/internal-build.gradle b/tweet-ui/internal-build.gradle
deleted file mode 100644
index f5e18ae5..00000000
--- a/tweet-ui/internal-build.gradle
+++ /dev/null
@@ -1,112 +0,0 @@
-import io.fabric.gradle.weaving.ArtifactSizePlugin
-import io.fabric.gradle.weaving.DexMethodCountPlugin
-
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-apply plugin: 'com.android.library'
-apply from: rootProject.qualityScript
-apply plugin: ArtifactSizePlugin
-apply plugin: DexMethodCountPlugin
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        versionCode 1
-        versionName version
-        group pom_group_id
-
-        minSdkVersion rootProject.minSdkVersion
-        consumerProguardFiles 'proguard.txt'
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-
-            testCoverageEnabled enableTestCodeCoverage
-        }
-        release {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-        }
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    dexMethodCount {
-        packageFilter = "com.twitter.sdk.android.tweetui"
-    }
-
-    //Gradle publishes only release by default for multi module projects
-    //This will publish all build variants and we can specifically choose them
-    defaultPublishConfig 'release'
-    publishNonDefault true
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-
-    // Forcibly add debug and the generated "R" files onto the test classpath
-    sourceSets {
-        test.java.srcDirs += "build/generated/source/r/debug"
-        test.java.srcDirs += "src/debug"
-    }
-
-    testOptions {
-        unitTests.returnDefaultValues = true
-        unitTests.includeAndroidResources true
-    }
-}
-
-ext.projectDependencies = [
-        ':sdk:twitter:twitter-core'
-]
-
-dependencies {
-    projectDependencies.each { path ->
-        api project(path: path)
-    }
-
-    implementation dependency.picasso
-    implementation dependency.supportCoreV4
-    implementation dependency.supportCompatV4
-    implementation dependency.recyclerview
-
-    androidTestCompile dependency.retrofitMock
-    androidTestCompile dependency.mockito
-    androidTestCompile dependency.dexmakerMockito
-
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
-}
-
-apply from: rootProject.deployScript
\ No newline at end of file
diff --git a/tweet-ui/lint.xml b/tweet-ui/lint.xml
deleted file mode 100644
index a018123b..00000000
--- a/tweet-ui/lint.xml
+++ /dev/null
@@ -1,41 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<lint>
-    <issue id="IconMissingDensityFolder" severity="ignore">
-        <!-- Suppress lint warning on xxxhdpi, which "is necessary only to provide a launcher icon
-        that can appear larger than usual on an xxhdpi device. You do not need to provide xxxhdpi
-        assets for all your app's images." -->
-        <ignore path="src/debug/res/drawable-xxxhdpi"/>
-    </issue>
-    <issue id="MissingTranslation" severity="ignore" />
-    <!-- ignore translation errors for now -->
-    <issue id="MissingQuantity" severity="ignore" />
-    <issue id="ImpliedQuantity" severity="ignore" />
-    <issue id="UnusedQuantity" severity="ignore" />
-    <issue id="IconDensities" severity="ignore">
-        <ignore path="src/main/res/drawable-mdpi/tw__heart_animation_detail_60fps*"/>
-        <ignore path="src/main/res/drawable-hdpi/tw__heart_animation_detail_60fps*"/>
-        <ignore path="src/main/res/drawable-xxhdpi/tw__heart_animation_detail_60fps*"/>
-    </issue>
-    <issue id="HandlerLeak" severity="ignore">
-        <ignore path="src/main/java/com/twitter/sdk/android/tweetui/internal/VideoControlView.java"/>
-    </issue>
-    <issue id="InvalidPackage" severity="ignore"/>
-    <issue id="ClickableViewAccessibility" severity="ignore"/>
-</lint>
diff --git a/tweet-ui/portlog.md b/tweet-ui/portlog.md
deleted file mode 100644
index 91889b24..00000000
--- a/tweet-ui/portlog.md
+++ /dev/null
@@ -1,25 +0,0 @@
-#*Files ported from twitter-android and twitter-android-internal*#
-
-* sdk/kits/tweetui/src/main/java/com/twitter/one/android/kits/tweetui/Linkifier.java
-  - from: twitter-android/library/src/main/java/com/twitter/library/view/Linkifier.java
-  - copied tests for methods that we did copy
-  - significantly modified, main entity offset loop preserved
-* sdk/kits/tweetui/src/main/java/com/twitter/one/android/kits/tweetui/TweetUtils.java
-  - from: twitter-android/library/src/main/java/com/twitter/library/util/Util.java - methods for date parsing and number formatting
-  - from: twitter-android-internal/src/main/java/com/twitter/internal/util/Time.java - constants
-  - from: library/src/main/java/com/twitter/library/api/TwitterParsers.java - html escaping and entity offsets
-  - from: ./library/src/main/java/com/twitter/library/util/I18nUtils.java - emoji entity adjustments
-  - some minor amount of added code and refactorings
-  - we wrote our own tests, none to copy
-  - tests for html escaping
-  - copied some html escaping and entity adjustment tests
-* sdk/kits/tweetui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/HtmlEntities.java
-  from: cobalt/internal/src/main/java/com/twitter/internal/util/Entities.java
-  - no modification
-  - no tests to copy
-  - from Apache Contrib (with Apache 2.0 license)
-* sdk/kits/tweetui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/IntHashMap.java
-  from: cobalt/internal/src/main/java/com/twitter/internal/util/IntHashMap.java
-  - no modification
-  - no tests to copy
-  - from Apache Contrib (with Apache 2.0 license)
diff --git a/tweet-ui/proguard.txt b/tweet-ui/proguard.txt
deleted file mode 100644
index 7934bd88..00000000
--- a/tweet-ui/proguard.txt
+++ /dev/null
@@ -1,2 +0,0 @@
-#Picasso Proguard Config https://github.com/square/picasso
--dontwarn com.squareup.okhttp.**
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/AbstractTweetViewTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/AbstractTweetViewTest.java
deleted file mode 100644
index 1f74c8ef..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/AbstractTweetViewTest.java
+++ /dev/null
@@ -1,315 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.content.res.Resources;
-import android.view.View;
-
-import com.twitter.sdk.android.core.TwitterTestUtils;
-import com.twitter.sdk.android.core.models.Card;
-import com.twitter.sdk.android.core.models.ImageValue;
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.internal.AspectRatioFrameLayout;
-
-import java.util.Locale;
-
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-public abstract class AbstractTweetViewTest extends TweetUiTestCase {
-    Context context;
-    Resources resources;
-    Locale defaultLocale;
-    AbstractTweetView.DependencyProvider mockDependencyProvider;
-
-    @Override
-    protected void setUp() throws Exception {
-        super.setUp();
-        context = getContext();
-        resources = context.getResources();
-        defaultLocale = TestUtils.setLocale(getContext(), Locale.ENGLISH);
-        setUpMockDependencyProvider();
-    }
-
-    @Override
-    protected void tearDown() throws Exception {
-        TestUtils.setLocale(getContext(), defaultLocale);
-        scrubClass(AbstractTweetViewTest.class);
-        super.tearDown();
-    }
-
-    public Resources getResources() {
-        return resources;
-    }
-
-    // constructor factories
-    abstract AbstractTweetView createView(Context context, Tweet tweet);
-
-    abstract AbstractTweetView createViewInEditMode(Context context, Tweet tweet);
-
-    abstract AbstractTweetView createViewWithMocks(Context context, Tweet tweet);
-
-    abstract AbstractTweetView createViewWithMocks(Context context, Tweet tweet,
-            AbstractTweetView.DependencyProvider dependencyProvider);
-
-    private void setUpMockDependencyProvider() {
-        mockDependencyProvider = mock(TestDependencyProvider.class);
-        when(mockDependencyProvider.getImageLoader())
-                .thenReturn(TweetUi.getInstance().getImageLoader());
-        when(mockDependencyProvider.getTweetUi()).thenReturn(TweetUi.getInstance());
-    }
-
-    // initialization
-
-    public void testInit() {
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        final long tweetId = TestFixtures.TEST_TWEET.id;
-        assertEquals(tweetId, view.getTweetId());
-        assertEquals(TestFixtures.TEST_NAME, view.fullNameView.getText().toString());
-        assertEquals(TestFixtures.TEST_FORMATTED_SCREEN_NAME, view.screenNameView.getText());
-        assertEquals(TestFixtures.TEST_STATUS, view.contentView.getText().toString());
-    }
-
-    public void testInit_withEmptyTweet() {
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        // recycle so we're not relying on first time defaults, fields should clear
-        view.setTweet(TestFixtures.EMPTY_TWEET);
-        assertEquals(TestFixtures.EMPTY_TWEET.id, view.getTweetId());
-        assertEquals(TestFixtures.EMPTY_STRING, view.fullNameView.getText().toString());
-        assertEquals(TestFixtures.EMPTY_STRING, view.screenNameView.getText().toString());
-        assertEquals(TestFixtures.EMPTY_STRING, view.contentView.getText().toString());
-    }
-
-    public void testInit_withNullTweet() {
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        // recycle so we're not relying on first time defaults, fields should clear
-        view.setTweet(null);
-        assertEquals(TestFixtures.EMPTY_TWEET.id, view.getTweetId());
-        assertEquals(TestFixtures.EMPTY_STRING, view.fullNameView.getText().toString());
-        assertEquals(TestFixtures.EMPTY_STRING, view.screenNameView.getText().toString());
-        assertEquals(TestFixtures.EMPTY_STRING, view.contentView.getText().toString());
-    }
-
-    public void testInit_inEditMode() {
-        TwitterTestUtils.resetTwitter();
-        try {
-            final AbstractTweetView view = createViewInEditMode(context, TestFixtures.TEST_TWEET);
-            assertTrue(view.isInEditMode());
-            assertTrue(view.isEnabled());
-        } catch (Exception e) {
-            fail("Must start TweetUi... IllegalStateException should be caught");
-        } finally {
-            TwitterTestUtils.resetTwitter();
-        }
-    }
-
-    public void testIsTweetUiEnabled_withEditMode() {
-        final AbstractTweetView view = createView(getContext(), TestFixtures.TEST_TWEET);
-        assertTrue(view.isTweetUiEnabled());
-    }
-
-    public void testIsTweetUiEnabled_inEditMode() {
-        final AbstractTweetView view = createViewInEditMode(getContext(), TestFixtures.TEST_TWEET);
-        assertFalse(view.isTweetUiEnabled());
-    }
-
-    public void testIsTweetUiEnabled_tweetUiStarted() {
-        final AbstractTweetView view = new TweetView(getContext(), TestFixtures.TEST_TWEET);
-        assertTrue(view.isTweetUiEnabled());
-        assertTrue(view.isEnabled());
-    }
-
-    // Tests Date formatting reliant string, manually sets english and restores original locale
-    public void testGetContentDescription_emptyTweet() {
-        final Locale originalLocale = TestUtils.setLocale(getContext(), Locale.ENGLISH);
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        view.setTweet(TestFixtures.EMPTY_TWEET);
-        assertEquals(getResources().getString(R.string.tw__loading_tweet),
-                view.getContentDescription());
-        TestUtils.setLocale(getContext(), originalLocale);
-    }
-
-    // Tests Date formatting reliant string, manually sets english and restores original locale
-    public void testGetContentDescription_fullTweet() {
-        final Locale originalLocale = TestUtils.setLocale(getContext(), Locale.ENGLISH);
-
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        assertTrue(TweetUtils.isTweetResolvable(view.tweet));
-        assertEquals(TestFixtures.TEST_CONTENT_DESCRIPTION, view.getContentDescription());
-
-        TestUtils.setLocale(getContext(), originalLocale);
-    }
-
-    public void testSetTweetMediaClickListener() {
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET_LINK);
-        view.setTweetMediaClickListener((tweet, entity) -> {
-
-        });
-
-        assertNotNull(view.tweetMediaClickListener);
-    }
-
-    public void testSetTweetLinkClickListener() {
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET_LINK);
-        final TweetLinkClickListener linkClickListener = mock(TweetLinkClickListener.class);
-        view.setTweetLinkClickListener(linkClickListener);
-
-        assertNotNull(view.tweetLinkClickListener);
-
-        view.getLinkClickListener().onUrlClicked(TestFixtures.TEST_URL);
-        verify(linkClickListener).onLinkClick(TestFixtures.TEST_TWEET_LINK, TestFixtures.TEST_URL);
-    }
-
-    public void testSetHashtagLinkClickListener() {
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET_HASHTAG);
-        final TweetLinkClickListener linkClickListener = mock(TweetLinkClickListener.class);
-        view.setTweetLinkClickListener(linkClickListener);
-
-        assertNotNull(view.tweetLinkClickListener);
-
-        view.getLinkClickListener().onUrlClicked(TestFixtures.TEST_HASHTAG);
-        verify(linkClickListener).onLinkClick(TestFixtures.TEST_TWEET_HASHTAG,
-                TestFixtures.TEST_HASHTAG);
-    }
-
-    public void testSetTweet_defaultClickListener() {
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET_LINK);
-
-        assertNull(view.tweetLinkClickListener);
-    }
-
-    // Permalink click
-    public void testSetTweet_permalink() {
-        final AbstractTweetView view = createView(context, null);
-        view.setTweet(TestFixtures.TEST_TWEET);
-        assertEquals(TestFixtures.TEST_PERMALINK_ONE, view.getPermalinkUri().toString());
-    }
-
-    // permalinkUri should be null so the permalink launcher will be a NoOp
-    public void testSetTweet_nullTweetPermalink() {
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        view.setTweet(null);
-        assertNull(view.getPermalinkUri());
-    }
-
-    public void testSetTweet_updatePermalink() {
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        assertEquals(TestFixtures.TEST_PERMALINK_ONE, view.getPermalinkUri().toString());
-        view.setTweet(TestFixtures.TEST_PHOTO_TWEET);
-        assertEquals(TestFixtures.TEST_PERMALINK_TWO, view.getPermalinkUri().toString());
-    }
-
-    public void testGetAspectRatio_withNullMediaEntity() {
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        final MediaEntity mediaEntity = null;
-        assertEquals(BaseTweetView.DEFAULT_ASPECT_RATIO, view.getAspectRatio(mediaEntity));
-    }
-
-    public void testGetAspectRatio_withNullImageValue() {
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        final ImageValue imageValue = null;
-        assertEquals(BaseTweetView.DEFAULT_ASPECT_RATIO, view.getAspectRatio(imageValue));
-    }
-
-    public void testGetAspectRatio_mediaEntityWithNullSizes() {
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        final MediaEntity mediaEntity = TestFixtures.createMediaEntityWithPhoto(null);
-
-        assertEquals(BaseTweetView.DEFAULT_ASPECT_RATIO, view.getAspectRatio(mediaEntity));
-    }
-
-    public void testGetAspectRatio_mediaEntityWithEmptySizes() {
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        final MediaEntity.Sizes sizes = new MediaEntity.Sizes(null, null, null, null);
-        final MediaEntity mediaEntity = TestFixtures.createMediaEntityWithPhoto(sizes);
-
-        assertEquals(BaseTweetView.DEFAULT_ASPECT_RATIO, view.getAspectRatio(mediaEntity));
-    }
-
-    public void testGetAspectRatio_mediaEntityWithZeroDimension() {
-        final AbstractTweetView view = createView(context, TestFixtures.TEST_TWEET);
-
-        assertEquals(BaseTweetView.DEFAULT_ASPECT_RATIO,
-                view.getAspectRatio(TestFixtures.createMediaEntityWithPhoto(0, 0)));
-        assertEquals(BaseTweetView.DEFAULT_ASPECT_RATIO,
-                view.getAspectRatio(TestFixtures.createMediaEntityWithPhoto(100, 0)));
-        assertEquals(BaseTweetView.DEFAULT_ASPECT_RATIO,
-                view.getAspectRatio(TestFixtures.createMediaEntityWithPhoto(0, 100)));
-    }
-
-    public void testSetTweetMedia_handlesNullPicasso() {
-        when(mockDependencyProvider.getImageLoader()).thenReturn(null);
-
-        final AbstractTweetView tweetView = createViewWithMocks(context, TestFixtures.TEST_TWEET,
-                mockDependencyProvider);
-
-        try {
-            tweetView.setTweetMedia(mock(Tweet.class));
-        } catch (NullPointerException e) {
-            fail("Should have handled null error image");
-        }
-    }
-
-    public void testRender_forSinglePhotoEntity() {
-        final AbstractTweetView tweetView = createViewWithMocks(context, null);
-        tweetView.setTweet(TestFixtures.TEST_PHOTO_TWEET);
-
-        assertEquals(View.VISIBLE, tweetView.mediaContainer.getVisibility());
-        assertEquals(View.VISIBLE, tweetView.tweetMediaView.getVisibility());
-        assertEquals(View.GONE, tweetView.mediaBadgeView.getVisibility());
-    }
-
-    public void testRender_forMultiplePhotoEntities() {
-        final AbstractTweetView tweetView = createViewWithMocks(context, null);
-        tweetView.setTweet(TestFixtures.TEST_MULTIPLE_PHOTO_TWEET);
-
-        assertEquals(View.VISIBLE, tweetView.mediaContainer.getVisibility());
-        assertEquals(View.VISIBLE, tweetView.tweetMediaView.getVisibility());
-        assertEquals(View.GONE, tweetView.mediaBadgeView.getVisibility());
-    }
-
-    public void testRender_rendersVineCard() {
-        final AbstractTweetView view = createViewWithMocks(context, null);
-        final Card sampleVineCard = TestFixtures.sampleValidVineCard();
-        final Tweet tweetWithVineCard = TestFixtures.createTweetWithVineCard(
-                TestFixtures.TEST_TWEET_ID, TestFixtures.TEST_USER,
-                TestFixtures.TEST_STATUS, sampleVineCard);
-
-        view.setTweet(tweetWithVineCard);
-
-        assertEquals(TestFixtures.TEST_NAME, view.fullNameView.getText().toString());
-        assertEquals(TestFixtures.TEST_FORMATTED_SCREEN_NAME, view.screenNameView.getText());
-        assertEquals(TestFixtures.TEST_STATUS, view.contentView.getText().toString());
-        assertEquals(View.VISIBLE, view.mediaContainer.getVisibility());
-        assertEquals(View.VISIBLE, view.mediaBadgeView.getVisibility());
-        assertEquals(View.VISIBLE, view.tweetMediaView.getVisibility());
-    }
-
-    public void testClearMedia() {
-        final AbstractTweetView view = createViewWithMocks(context, null);
-        view.mediaContainer = mock(AspectRatioFrameLayout.class);
-
-        view.clearTweetMedia();
-
-        verify(view.mediaContainer).setVisibility(View.GONE);
-    }
-}
-
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/BaseTweetViewTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/BaseTweetViewTest.java
deleted file mode 100644
index e24675a3..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/BaseTweetViewTest.java
+++ /dev/null
@@ -1,531 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.content.res.Resources;
-import android.graphics.Color;
-import android.view.View;
-import android.widget.ImageView;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.TwitterTestUtils;
-import com.twitter.sdk.android.core.models.Card;
-import com.twitter.sdk.android.core.models.ImageValue;
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.internal.AspectRatioFrameLayout;
-import com.twitter.sdk.android.tweetui.internal.TweetMediaView;
-
-import org.mockito.ArgumentCaptor;
-
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Locale;
-
-import static org.mockito.Mockito.any;
-import static org.mockito.Mockito.doNothing;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-/**
- * Tests the state of BaseTweetViews created via constructors.
- */
-public abstract class BaseTweetViewTest extends TweetUiTestCase {
-    private static final String REQUIRED_RETWEETED_BY_TEXT = "Retweeted by Mr Retweets";
-    protected static final double DELTA = 0.001f;
-    protected static final String ALT_TEXT = "ALT_TEXT";
-
-    protected Context context;
-    private Resources resources;
-    private Locale defaultLocale;
-    protected BaseTweetView.DependencyProvider mockDependencyProvider;
-
-    @Override
-    protected void setUp() throws Exception {
-        super.setUp();
-        context = getContext();
-        resources = context.getResources();
-        defaultLocale = TestUtils.setLocale(getContext(), Locale.ENGLISH);
-        setUpMockDependencyProvider();
-    }
-
-    @Override
-    protected void tearDown() throws Exception {
-        TestUtils.setLocale(getContext(), defaultLocale);
-        scrubClass(BaseTweetViewTest.class);
-        super.tearDown();
-    }
-
-    public Resources getResources() {
-        return resources;
-    }
-
-    // constructor factories
-
-    abstract BaseTweetView createView(Context context, Tweet tweet);
-
-    abstract BaseTweetView createView(Context context, Tweet tweet, int styleResId);
-
-    abstract BaseTweetView createViewInEditMode(Context context, Tweet tweet);
-
-    abstract BaseTweetView createViewWithMocks(Context context, Tweet tweet);
-
-    abstract BaseTweetView createViewWithMocks(Context context, Tweet tweet, int styleResId,
-            BaseTweetView.DependencyProvider dependencyProvider);
-
-    private void setUpMockDependencyProvider() {
-        mockDependencyProvider = mock(TestDependencyProvider.class);
-        when(mockDependencyProvider.getImageLoader())
-                .thenReturn(TweetUi.getInstance().getImageLoader());
-        when(mockDependencyProvider.getTweetUi()).thenReturn(TweetUi.getInstance());
-    }
-
-    // initialization
-
-    public void testInit() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        final long tweetId = TestFixtures.TEST_TWEET.id;
-        assertEquals(tweetId, view.getTweetId());
-        assertEquals(TestFixtures.TEST_NAME, view.fullNameView.getText().toString());
-        assertEquals(TestFixtures.TEST_FORMATTED_SCREEN_NAME, view.screenNameView.getText());
-        assertEquals(TestFixtures.TEST_STATUS, view.contentView.getText().toString());
-        assertEquals(TestFixtures.TIMESTAMP_RENDERED, view.timestampView.getText().toString());
-    }
-
-    public void testInit_withEmptyTweet() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        // recycle so we're not relying on first time defaults, fields should clear
-        view.setTweet(TestFixtures.EMPTY_TWEET);
-        assertEquals(TestFixtures.EMPTY_TWEET.id, view.getTweetId());
-        assertEquals(TestFixtures.EMPTY_STRING, view.fullNameView.getText().toString());
-        assertEquals(TestFixtures.EMPTY_STRING, view.screenNameView.getText().toString());
-        assertEquals(TestFixtures.EMPTY_STRING, view.contentView.getText().toString());
-        assertEquals(TestFixtures.EMPTY_STRING, view.timestampView.getText().toString());
-    }
-
-    public void testInit_withNullTweet() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        // recycle so we're not relying on first time defaults, fields should clear
-        view.setTweet(null);
-        assertEquals(TestFixtures.EMPTY_TWEET.id, view.getTweetId());
-        assertEquals(TestFixtures.EMPTY_STRING, view.fullNameView.getText().toString());
-        assertEquals(TestFixtures.EMPTY_STRING, view.screenNameView.getText().toString());
-        assertEquals(TestFixtures.EMPTY_STRING, view.contentView.getText().toString());
-        assertEquals(TestFixtures.EMPTY_STRING, view.timestampView.getText().toString());
-    }
-
-    // setTweet with a Tweet with an invalid timestamp makes timestamp view show an empty string
-    public void testInit_withInvalidTimestamp() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        // recycle so we're not relying on first time defaults, timestamp should clear
-        view.setTweet(TestFixtures.INVALID_TIMESTAMP_TWEET);
-        assertEquals(TestFixtures.INVALID_TIMESTAMP_TWEET.id, view.getTweetId());
-        assertEquals(TestFixtures.EMPTY_STRING, view.timestampView.getText().toString());
-    }
-
-    public void testInit_inEditMode() {
-        TwitterTestUtils.resetTwitter();
-        try {
-            final BaseTweetView view = createViewInEditMode(context, TestFixtures.TEST_TWEET);
-            assertTrue(view.isInEditMode());
-            assertTrue(view.isEnabled());
-        } catch (Exception e) {
-            fail("Must start TweetUi... IllegalStateException should be caught");
-        } finally {
-            TwitterTestUtils.resetTwitter();
-        }
-    }
-
-    public void testIsTweetUiEnabled_withEditMode() {
-        final BaseTweetView view = createView(getContext(), TestFixtures.TEST_TWEET);
-        assertTrue(view.isTweetUiEnabled());
-    }
-
-    public void testIsTweetUiEnabled_inEditMode() {
-        final BaseTweetView view = createViewInEditMode(getContext(), TestFixtures.TEST_TWEET);
-        assertFalse(view.isTweetUiEnabled());
-    }
-
-    public void testIsTweetUiEnabled_tweetUiStarted() {
-        final BaseTweetView view = new TweetView(getContext(), TestFixtures.TEST_TWEET);
-        assertTrue(view.isTweetUiEnabled());
-        assertTrue(view.isEnabled());
-    }
-
-    // Tests Date formatting reliant string, manually sets english and restores original locale
-    public void testGetContentDescription_emptyTweet() {
-        final Locale originalLocale = TestUtils.setLocale(getContext(), Locale.ENGLISH);
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        view.setTweet(TestFixtures.EMPTY_TWEET);
-        assertEquals(getResources().getString(R.string.tw__loading_tweet),
-                view.getContentDescription());
-        TestUtils.setLocale(getContext(), originalLocale);
-    }
-
-    // Tests Date formatting reliant string, manually sets english and restores original locale
-    public void testGetContentDescription_fullTweet() {
-        final Locale originalLocale = TestUtils.setLocale(getContext(), Locale.ENGLISH);
-
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        assertTrue(TweetUtils.isTweetResolvable(view.tweet));
-        assertEquals(TestFixtures.TEST_CONTENT_DESCRIPTION, view.getContentDescription());
-
-        TestUtils.setLocale(getContext(), originalLocale);
-    }
-
-    public void testSetTweetMediaClickListener() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET_LINK);
-        view.setTweetMediaClickListener((tweet, entity) -> {
-
-        });
-
-        assertNotNull(view.tweetMediaClickListener);
-    }
-
-    public void testSetTweetLinkClickListener() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET_LINK);
-        final TweetLinkClickListener linkClickListener = mock(TweetLinkClickListener.class);
-        view.setTweetLinkClickListener(linkClickListener);
-
-        assertNotNull(view.tweetLinkClickListener);
-
-        view.getLinkClickListener().onUrlClicked(TestFixtures.TEST_URL);
-        verify(linkClickListener).onLinkClick(TestFixtures.TEST_TWEET_LINK, TestFixtures.TEST_URL);
-    }
-
-    public void testSetTweet_defaultClickListener() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET_LINK);
-
-        assertNull(view.tweetLinkClickListener);
-    }
-
-    // Permalink click
-    public void testSetTweet_permalink() {
-        final BaseTweetView view = createView(context, null);
-        view.setTweet(TestFixtures.TEST_TWEET);
-        assertEquals(TestFixtures.TEST_PERMALINK_ONE, view.getPermalinkUri().toString());
-    }
-
-    // permalinkUri should be null so the permalink launcher will be a NoOp
-    public void testSetTweet_nullTweetPermalink() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        view.setTweet(null);
-        assertNull(view.getPermalinkUri());
-    }
-
-    public void testSetTweet_updatePermalink() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        assertEquals(TestFixtures.TEST_PERMALINK_ONE, view.getPermalinkUri().toString());
-        view.setTweet(TestFixtures.TEST_PHOTO_TWEET);
-        assertEquals(TestFixtures.TEST_PERMALINK_TWO, view.getPermalinkUri().toString());
-    }
-
-    // Styling
-    // light style (default)
-
-    public void testStaticColorsDefault() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        TweetAsserts.assertDefaultColors(view, getResources());
-    }
-
-    public void testSecondaryColorsDefault() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        final int primaryTextColor = getResources().getColor(
-                R.color.tw__tweet_light_primary_text_color);
-        final int color = ColorUtils.calculateOpacityTransform(
-                BaseTweetView.SECONDARY_TEXT_COLOR_LIGHT_OPACITY, Color.WHITE, primaryTextColor);
-        assertEquals(color, view.secondaryTextColor);
-        assertEquals(color, view.timestampView.getCurrentTextColor());
-        assertEquals(color, view.screenNameView.getCurrentTextColor());
-        assertEquals(color, view.retweetedByView.getCurrentTextColor());
-    }
-
-    public void testAvatarDefault() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        final int containerColor = getResources().getColor(
-                R.color.tw__tweet_light_container_bg_color);
-        final int color = ColorUtils.calculateOpacityTransform(
-                BaseTweetView.MEDIA_BG_LIGHT_OPACITY, Color.BLACK, containerColor);
-        assertEquals(color, TestUtils.getDrawableColor(view.avatarView));
-    }
-
-    public void testPhotoDefault() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_PHOTO_TWEET);
-        final int containerColor = getResources().getColor(
-                R.color.tw__tweet_light_container_bg_color);
-        final int color = ColorUtils.calculateOpacityTransform(
-                BaseTweetView.MEDIA_BG_LIGHT_OPACITY, Color.BLACK, containerColor);
-
-        final MediaEntity entity = TestFixtures.createMediaEntityWithPhoto(100, 100);
-        final List<MediaEntity> mediaEntities = new ArrayList<>();
-        mediaEntities.add(entity);
-
-        final TweetMediaView tweetMediaView = view.tweetMediaView;
-        tweetMediaView.setTweetMediaEntities(TestFixtures.TEST_TWEET, mediaEntities);
-
-        final ImageView imageView = (ImageView) tweetMediaView.getChildAt(0);
-        assertEquals(color, TestUtils.getBackgroundColor(imageView));
-    }
-
-    public void testTweetPhotoErrorDefault() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_PHOTO_TWEET);
-        assertEquals(R.drawable.tw__ic_tweet_photo_error_light, view.photoErrorResId);
-    }
-
-    public void testRetweetIconDefault() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_RETWEET);
-        assertEquals(R.drawable.tw__ic_retweet_light, view.retweetIconResId);
-    }
-
-    // dark style
-
-    public void testStaticColorsDark() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET,
-                R.style.tw__TweetDarkStyle);
-        TweetAsserts.assertDarkColors(view, getResources());
-    }
-
-    public void testSecondaryColorsDark() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET,
-                R.style.tw__TweetDarkStyle);
-        final int primaryTextColor = getResources().getColor(
-                R.color.tw__tweet_dark_primary_text_color);
-        final int color = ColorUtils.calculateOpacityTransform(
-                BaseTweetView.SECONDARY_TEXT_COLOR_DARK_OPACITY, Color.BLACK, primaryTextColor);
-        assertEquals(color, view.secondaryTextColor);
-        assertEquals(color, view.timestampView.getCurrentTextColor());
-        assertEquals(color, view.screenNameView.getCurrentTextColor());
-        assertEquals(color, view.retweetedByView.getCurrentTextColor());
-    }
-
-    public void testAvatarDark() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET,
-                R.style.tw__TweetDarkStyle);
-        final int containerColor = getResources().getColor(
-                R.color.tw__tweet_dark_container_bg_color);
-        final int color = ColorUtils.calculateOpacityTransform(
-                BaseTweetView.MEDIA_BG_DARK_OPACITY, Color.WHITE, containerColor);
-        assertEquals(color, TestUtils.getDrawableColor(view.avatarView));
-    }
-
-    public void testPhotoDark() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_PHOTO_TWEET,
-                R.style.tw__TweetDarkStyle);
-        final int containerColor = getResources().getColor(
-                R.color.tw__tweet_dark_container_bg_color);
-        final int color = ColorUtils.calculateOpacityTransform(
-                BaseTweetView.MEDIA_BG_DARK_OPACITY, Color.WHITE, containerColor);
-
-        final MediaEntity entity = TestFixtures.createMediaEntityWithPhoto(100, 100);
-        final List<MediaEntity> mediaEntities = new ArrayList<>();
-        mediaEntities.add(entity);
-        final TweetMediaView tweetMediaView = view.tweetMediaView;
-        tweetMediaView.setTweetMediaEntities(TestFixtures.TEST_TWEET, mediaEntities);
-
-        final ImageView imageView = (ImageView) tweetMediaView.getChildAt(0);
-        assertEquals(color, TestUtils.getBackgroundColor(imageView));
-    }
-
-    public void testTweetPhotoErrorDark() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET,
-                R.style.tw__TweetDarkStyle);
-        assertEquals(R.drawable.tw__ic_tweet_photo_error_dark, view.photoErrorResId);
-    }
-
-    public void testRetweetIconDark() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_RETWEET,
-               R.style.tw__TweetDarkStyle);
-        assertEquals(R.drawable.tw__ic_retweet_dark, view.retweetIconResId);
-    }
-
-    public void testTweetActionsEnabled() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET,
-                R.style.tw__TweetActionsEnabled);
-        assertTrue(view.tweetActionsEnabled);
-    }
-
-    public void testSetOnActionCallback_passesCorrectTweetToActionBarView() {
-        final BaseTweetView tweetView = createView(context, TestFixtures.TEST_RETWEET,
-                R.style.tw__TweetActionsEnabled);
-        final TweetActionBarView mockActionBarView = mock(TestTweetActionBarView.class);
-        tweetView.tweetActionBarView = mockActionBarView;
-        doNothing().when(mockActionBarView).setLike(any(Tweet.class));
-        final Callback<Tweet> mockCallback = mock(Callback.class);
-        tweetView.setOnActionCallback(mockCallback);
-        // verify that the TweetActionBarView is set with the Tweet, not the inner retweeted Tweet
-        final ArgumentCaptor<Tweet> tweetCaptor = ArgumentCaptor.forClass(Tweet.class);
-        verify(mockActionBarView).setTweet(tweetCaptor.capture());
-        assertEquals(TestFixtures.TEST_RETWEET.getId(), tweetCaptor.getValue().getId());
-    }
-
-    public void testRender_passesCorrectTweetToActionBarView() {
-        final BaseTweetView tweetView = createView(context, TestFixtures.TEST_RETWEET,
-                R.style.tw__TweetActionsEnabled);
-        final TweetActionBarView mockActionBarView = mock(TestTweetActionBarView.class);
-        tweetView.tweetActionBarView = mockActionBarView;
-        doNothing().when(mockActionBarView).setLike(any(Tweet.class));
-        tweetView.render();
-        // verify that the TweetActionBarView is set with the Tweet, not the inner retweeted Tweet
-        final ArgumentCaptor<Tweet> tweetCaptor = ArgumentCaptor.forClass(Tweet.class);
-        verify(mockActionBarView).setTweet(tweetCaptor.capture());
-        assertEquals(TestFixtures.TEST_RETWEET.getId(), tweetCaptor.getValue().getId());
-    }
-
-    public void testTweetActionsDisabled() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET,
-                R.style.tw__TweetActionsDisabled);
-        assertFalse(view.tweetActionsEnabled);
-    }
-
-    public void testGetAspectRatio_withNullMediaEntity() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        final MediaEntity mediaEntity = null;
-        assertEquals(BaseTweetView.DEFAULT_ASPECT_RATIO, view.getAspectRatio(mediaEntity));
-    }
-
-    public void testGetAspectRatio_withNullImageValue() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        final ImageValue imageValue = null;
-        assertEquals(BaseTweetView.DEFAULT_ASPECT_RATIO, view.getAspectRatio(imageValue));
-    }
-
-    public void testGetAspectRatio_mediaEntityWithNullSizes() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        final MediaEntity mediaEntity = TestFixtures.createMediaEntityWithPhoto(null);
-
-        assertEquals(BaseTweetView.DEFAULT_ASPECT_RATIO, view.getAspectRatio(mediaEntity));
-    }
-
-    public void testGetAspectRatio_mediaEntityWithEmptySizes() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-        final MediaEntity.Sizes sizes = new MediaEntity.Sizes(null, null, null, null);
-        final MediaEntity mediaEntity = TestFixtures.createMediaEntityWithPhoto(sizes);
-
-        assertEquals(BaseTweetView.DEFAULT_ASPECT_RATIO, view.getAspectRatio(mediaEntity));
-    }
-
-    public void testGetAspectRatio_mediaEntityWithZeroDimension() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-
-        assertEquals(BaseTweetView.DEFAULT_ASPECT_RATIO,
-                view.getAspectRatio(TestFixtures.createMediaEntityWithPhoto(0, 0)));
-        assertEquals(BaseTweetView.DEFAULT_ASPECT_RATIO,
-                view.getAspectRatio(TestFixtures.createMediaEntityWithPhoto(100, 0)));
-        assertEquals(BaseTweetView.DEFAULT_ASPECT_RATIO,
-                view.getAspectRatio(TestFixtures.createMediaEntityWithPhoto(0, 100)));
-    }
-
-    public void testSetProfilePhotoView_handlesNullPicasso() {
-        when(mockDependencyProvider.getImageLoader()).thenReturn(null);
-
-        final BaseTweetView tweetView = createViewWithMocks(context, TestFixtures.TEST_TWEET,
-                R.style.tw__TweetDarkStyle, mockDependencyProvider);
-
-        try {
-            tweetView.setProfilePhotoView(TestFixtures.TEST_TWEET);
-        } catch (NullPointerException e) {
-            fail("Should have handled null error image");
-        }
-    }
-
-    public void testSetTweetMedia_handlesNullPicasso() {
-        when(mockDependencyProvider.getImageLoader()).thenReturn(null);
-
-        final BaseTweetView tweetView = createViewWithMocks(context, TestFixtures.TEST_TWEET,
-                R.style.tw__TweetDarkStyle, mockDependencyProvider);
-
-        try {
-            tweetView.setTweetMedia(mock(Tweet.class));
-        } catch (NullPointerException e) {
-            fail("Should have handled null error image");
-        }
-    }
-
-    public void testRender_forSinglePhotoEntity() {
-        final BaseTweetView tweetView = createViewWithMocks(context, null);
-        tweetView.setTweet(TestFixtures.TEST_PHOTO_TWEET);
-
-        assertEquals(View.VISIBLE, tweetView.mediaContainer.getVisibility());
-        assertEquals(View.VISIBLE, tweetView.tweetMediaView.getVisibility());
-        assertEquals(View.GONE, tweetView.mediaBadgeView.getVisibility());
-    }
-
-    public void testRender_forMultiplePhotoEntities() {
-        final BaseTweetView tweetView = createViewWithMocks(context, null);
-        tweetView.setTweet(TestFixtures.TEST_MULTIPLE_PHOTO_TWEET);
-
-        assertEquals(View.VISIBLE, tweetView.mediaContainer.getVisibility());
-        assertEquals(View.VISIBLE, tweetView.tweetMediaView.getVisibility());
-        assertEquals(View.GONE, tweetView.mediaBadgeView.getVisibility());    }
-
-    public void testRender_rendersRetweetedStatus() {
-        final BaseTweetView tweetView = createViewWithMocks(context, null);
-        tweetView.setTweet(TestFixtures.TEST_RETWEET);
-        assertEquals(REQUIRED_RETWEETED_BY_TEXT, tweetView.retweetedByView.getText());
-        assertEquals(TestFixtures.TEST_NAME, tweetView.fullNameView.getText());
-        assertEquals(TestFixtures.TEST_FORMATTED_SCREEN_NAME, tweetView.screenNameView.getText());
-        assertEquals(TestFixtures.TEST_STATUS, tweetView.contentView.getText().toString());
-    }
-
-    public void testSetRetweetedBy_nullTweet() {
-        final BaseTweetView tweetView = createViewWithMocks(context, null);
-        tweetView.setTweet(null);
-        assertEquals(View.GONE, tweetView.retweetedByView.getVisibility());
-    }
-
-    public void testSetRetweetedBy_nonRetweet() {
-        final BaseTweetView tweetView = createViewWithMocks(context, null);
-        tweetView.setTweet(TestFixtures.TEST_TWEET);
-        assertEquals(View.GONE, tweetView.retweetedByView.getVisibility());
-    }
-
-    public void testSetRetweetedBy_retweet() {
-        final BaseTweetView tweetView = createViewWithMocks(context, null);
-        tweetView.setTweet(TestFixtures.TEST_RETWEET);
-        assertEquals(View.VISIBLE, tweetView.retweetedByView.getVisibility());
-        assertEquals(REQUIRED_RETWEETED_BY_TEXT, tweetView.retweetedByView.getText());
-    }
-
-    public void testRender_rendersVineCard() {
-        final BaseTweetView view = createViewWithMocks(context, null);
-        final Card sampleVineCard = TestFixtures.sampleValidVineCard();
-        final Tweet tweetWithVineCard = TestFixtures.createTweetWithVineCard(
-                TestFixtures.TEST_TWEET_ID, TestFixtures.TEST_USER,
-                TestFixtures.TEST_STATUS, sampleVineCard);
-
-        view.setTweet(tweetWithVineCard);
-
-        assertEquals(TestFixtures.TEST_NAME, view.fullNameView.getText().toString());
-        assertEquals(TestFixtures.TEST_FORMATTED_SCREEN_NAME, view.screenNameView.getText());
-        assertEquals(TestFixtures.TEST_STATUS, view.contentView.getText().toString());
-        assertEquals(View.VISIBLE, view.mediaContainer.getVisibility());
-        assertEquals(View.VISIBLE, view.mediaBadgeView.getVisibility());
-        assertEquals(View.VISIBLE, view.tweetMediaView.getVisibility());
-    }
-
-    public void testClearMedia() {
-        final BaseTweetView view = createViewWithMocks(context, null);
-        view.mediaContainer = mock(AspectRatioFrameLayout.class);
-
-        view.clearTweetMedia();
-
-        verify(view.mediaContainer).setVisibility(View.GONE);
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/BaseTweetViewXmlTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/BaseTweetViewXmlTest.java
deleted file mode 100644
index 76e5760e..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/BaseTweetViewXmlTest.java
+++ /dev/null
@@ -1,204 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.res.Resources;
-import android.graphics.Color;
-import android.view.InflateException;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.LinearLayout;
-
-/**
- * Tests the state of BaseTweetViews created via XML.
- */
-public abstract class BaseTweetViewXmlTest extends TweetUiTestCase {
-    @Override
-    protected void tearDown() throws Exception {
-        scrubClass(BaseTweetViewXmlTest.class);
-        super.tearDown();
-    }
-
-    // View without Tweet data attributes
-    abstract BaseTweetView getView();
-
-    // View with dark style attributes
-    abstract BaseTweetView getViewDark();
-
-    public Resources getResources() {
-        return getContext().getResources();
-    }
-
-    protected View getInflatedLayout() {
-        final ViewGroup group = new LinearLayout(getContext());
-        return LayoutInflater.from(getContext())
-                .inflate(R.layout.activity_tweet_view_test, group, true);
-    }
-
-    // Initialization
-
-    // init without data attributes, subviews should have empty string values
-
-    public void testInitName() {
-        final BaseTweetView view = getView();
-        assertNotNull(view);
-        assertEquals(TestFixtures.EMPTY_STRING, view.fullNameView.getText().toString());
-    }
-
-    public void testInitScreenName() {
-        final BaseTweetView view = getView();
-        assertNotNull(view);
-        assertEquals(TestFixtures.EMPTY_STRING, view.screenNameView.getText().toString());
-    }
-
-    public void testInitTimestamp() {
-        final BaseTweetView view = getView();
-        assertNotNull(view);
-        assertEquals(TestFixtures.EMPTY_STRING, view.timestampView.getText().toString());
-    }
-
-    public void testInitText() {
-        final BaseTweetView view = getView();
-        assertNotNull(view);
-        assertEquals(TestFixtures.EMPTY_STRING, view.contentView.getText().toString());
-    }
-
-    public void testInitWithTweetActionsDisabled() {
-        final BaseTweetView view = getView();
-        assertFalse(view.tweetActionsEnabled);
-    }
-
-    public void testInitWithTweetActionsEnabled() {
-        final ViewGroup group = new LinearLayout((getContext()));
-        final View view = LayoutInflater.from(getContext()).inflate(
-                R.layout.activity_tweet_actions_enabled, group, true);
-
-        final BaseTweetView tweetView = view.findViewById(R.id.tweet_view);
-        assertTrue(tweetView.tweetActionsEnabled);
-    }
-
-    // asserts that a BaseTweetView with an invalid tweet id throws an exception
-    public void testInitWithInvalidTweetId() {
-        final ViewGroup group = new LinearLayout((getContext()));
-        try {
-            final View view = LayoutInflater.from(getContext()).inflate(
-                    R.layout.activity_invalid_tweet_id, group, true);
-            fail("InflateException not thrown");
-        } catch (InflateException e) {
-            // success
-        }
-    }
-
-    // Permalink
-
-    public void testSetTweet_permalink() {
-        final BaseTweetView view = getView();
-        assertEquals(TestFixtures.TEST_PERMALINK_UNKNOWN_USER, view.getPermalinkUri().toString());
-    }
-
-    // permalinkUri should be null so the permalink launcher will be a NoOp
-    public void testSetTweet_nullTweetPermalink() {
-        final BaseTweetView view = getView();
-        view.setTweet(null);
-        assertNull(view.getPermalinkUri());
-    }
-
-    public void testSetTweet_updatePermalink() {
-        final BaseTweetView view = getView();
-        view.setTweet(TestFixtures.TEST_PHOTO_TWEET);
-        assertEquals(TestFixtures.TEST_PERMALINK_TWO, view.getPermalinkUri().toString());
-    }
-
-    // Styling
-    // light style (default)
-
-    public void testStaticColorsDefault() {
-        final BaseTweetView view = getView();
-        TweetAsserts.assertDefaultColors(view, getResources());
-    }
-
-    public void testSecondaryColorsDefault() {
-        final BaseTweetView view = getView();
-        final int primaryTextColor = getResources().getColor(
-                R.color.tw__tweet_light_primary_text_color);
-        final int color = ColorUtils.calculateOpacityTransform(
-                BaseTweetView.SECONDARY_TEXT_COLOR_LIGHT_OPACITY, Color.WHITE, primaryTextColor);
-        assertEquals(color, view.secondaryTextColor);
-        assertEquals(color, view.timestampView.getCurrentTextColor());
-        assertEquals(color, view.screenNameView.getCurrentTextColor());
-        assertEquals(color, view.retweetedByView.getCurrentTextColor());
-    }
-
-    public void testAvatarDefault() {
-        final BaseTweetView view = getView();
-        final int containerColor = getResources().getColor(
-                R.color.tw__tweet_light_container_bg_color);
-        final int color = ColorUtils.calculateOpacityTransform(
-                BaseTweetView.MEDIA_BG_LIGHT_OPACITY, Color.BLACK, containerColor);
-        assertEquals(color, TestUtils.getDrawableColor(view.avatarView));
-    }
-
-    public void testPhotoErrorDefault() {
-        final BaseTweetView view = getView();
-        assertEquals(R.drawable.tw__ic_tweet_photo_error_light, view.photoErrorResId);
-    }
-
-
-    public void testRetweetIconDefault() {
-        final BaseTweetView view = getView();
-        assertEquals(R.drawable.tw__ic_retweet_light, view.retweetIconResId);
-    }
-
-    // dark style
-    public void testStaticColorsDark() {
-        final BaseTweetView view = getViewDark();
-        TweetAsserts.assertDarkColors(view, getResources());
-    }
-
-    public void testSecondaryColorsDark() {
-        final BaseTweetView view = getViewDark();
-        final int primaryTextColor = getResources().getColor(
-                R.color.tw__tweet_dark_primary_text_color);
-        final int color = ColorUtils.calculateOpacityTransform(
-                BaseTweetView.SECONDARY_TEXT_COLOR_DARK_OPACITY, Color.BLACK, primaryTextColor);
-        assertEquals(color, view.secondaryTextColor);
-        assertEquals(color, view.timestampView.getCurrentTextColor());
-        assertEquals(color, view.screenNameView.getCurrentTextColor());
-        assertEquals(color, view.retweetedByView.getCurrentTextColor());
-    }
-
-    public void testAvatarDark() {
-        final BaseTweetView view = getViewDark();
-        final int containerColor = getResources().getColor(
-                R.color.tw__tweet_dark_container_bg_color);
-        final int color = ColorUtils.calculateOpacityTransform(
-                BaseTweetView.MEDIA_BG_DARK_OPACITY, Color.WHITE, containerColor);
-        assertEquals(color, TestUtils.getDrawableColor(view.avatarView));
-    }
-
-    public void testPhotoErrorDark() {
-        final BaseTweetView view = getViewDark();
-        assertEquals(R.drawable.tw__ic_tweet_photo_error_dark, view.photoErrorResId);
-    }
-
-    public void testRetweetIconDark() {
-        final BaseTweetView view = getViewDark();
-        assertEquals(R.drawable.tw__ic_retweet_dark, view.retweetIconResId);
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/CompactTweetViewTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/CompactTweetViewTest.java
deleted file mode 100644
index 3fc30ff2..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/CompactTweetViewTest.java
+++ /dev/null
@@ -1,115 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-
-import com.squareup.picasso.Picasso;
-import com.squareup.picasso.RequestCreator;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.times;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-public class CompactTweetViewTest extends BaseTweetViewTest {
-    private static final float DELTA = 0.001f;
-
-    @Override
-    CompactTweetView createView(Context context, Tweet tweet) {
-        return new CompactTweetView(context, tweet);
-    }
-
-    @Override
-    CompactTweetView createView(Context context, Tweet tweet, int styleResId) {
-        return new CompactTweetView(context, tweet, styleResId);
-    }
-
-    @Override
-    CompactTweetView createViewInEditMode(Context context, Tweet tweet) {
-        return new CompactTweetView(context, tweet) {
-            @Override
-            public boolean isInEditMode() {
-                return true;
-            }
-        };
-    }
-
-    @Override
-    CompactTweetView createViewWithMocks(Context context, Tweet tweet) {
-        return new CompactTweetView(context, tweet);
-    }
-
-    @Override
-    CompactTweetView createViewWithMocks(Context context, Tweet tweet, int styleResId,
-            BaseTweetView.DependencyProvider dependencyProvider) {
-        return new CompactTweetView(context, tweet, styleResId, dependencyProvider);
-    }
-
-    // Layout
-    public void testLayout() {
-        final CompactTweetView compactView = createView(context, TestFixtures.TEST_TWEET);
-        assertEquals(R.layout.tw__tweet_compact, compactView.getLayout());
-    }
-
-    public void testGetAspectRatio() {
-        final CompactTweetView compactView = createView(context, TestFixtures.TEST_TWEET);
-
-        assertEquals(1.0, compactView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(100, 100)), DELTA);
-        assertEquals(1.0, compactView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(300, 400)), DELTA);
-        assertEquals(1.0, compactView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(100, 800)), DELTA);
-        assertEquals(1.3333, compactView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(400, 300)), DELTA);
-        assertEquals(1.6666, compactView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(500, 300)), DELTA);
-        assertEquals(2.0, compactView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(600, 300)), DELTA);
-        assertEquals(2.3333, compactView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(700, 300)), DELTA);
-        assertEquals(2.6666, compactView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(800, 300)), DELTA);
-        assertEquals(3.0, compactView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(900, 300)), DELTA);
-        assertEquals(3.0, compactView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(1000, 50)), DELTA);
-    }
-
-    public void testSetTweetPhoto() {
-        final Picasso mockPicasso = mock(Picasso.class);
-        final RequestCreator mockRequestCreator = mock(RequestCreator.class);
-        MockUtils.mockPicasso(mockPicasso, mockRequestCreator);
-        when(mockDependencyProvider.getImageLoader()).thenReturn(mockPicasso);
-
-        final CompactTweetView tv = createViewWithMocks(context, TestFixtures.TEST_PHOTO_TWEET,
-                R.style.tw__TweetLightStyle, mockDependencyProvider);
-        // assert 1 load for profile photo, tweet photo loaded in TweetMediaView
-        verify(mockPicasso, times(1)).load(TestFixtures.TEST_PROFILE_IMAGE_URL);
-    }
-
-    public void testGetAspectRatioForPhotoEntity() {
-        final CompactTweetView compactView = createView(context, TestFixtures.TEST_PHOTO_TWEET);
-        assertEquals(1.6, compactView.getAspectRatioForPhotoEntity(1));
-        assertEquals(1.6, compactView.getAspectRatioForPhotoEntity(2));
-        assertEquals(1.6, compactView.getAspectRatioForPhotoEntity(3));
-        assertEquals(1.6, compactView.getAspectRatioForPhotoEntity(4));
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/CompactTweetViewXmlTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/CompactTweetViewXmlTest.java
deleted file mode 100644
index 82b7bcbe..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/CompactTweetViewXmlTest.java
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-public class CompactTweetViewXmlTest extends BaseTweetViewXmlTest {
-
-    @Override
-    CompactTweetView getView() {
-        return (CompactTweetView) getInflatedLayout().findViewById(R.id.compact_tweet_view);
-    }
-
-    @Override
-    CompactTweetView getViewDark() {
-        return (CompactTweetView) getInflatedLayout().findViewById(R.id.compact_tweet_view_dark);
-    }
-
-    // Layout
-
-    public void testLayout() {
-        final CompactTweetView view = getView();
-        assertNotNull(view);
-        assertEquals(R.layout.tw__tweet_compact, view.getLayout());
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/DateTranslationsTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/DateTranslationsTest.java
deleted file mode 100644
index 020c40e6..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/DateTranslationsTest.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.test.AndroidTestCase;
-
-import java.text.SimpleDateFormat;
-import java.util.Arrays;
-import java.util.List;
-import java.util.Locale;
-
-/**
- * Incorrectly translated dates can cause our process to crash, so here we exercise all of our
- * translations.
- */
-public class DateTranslationsTest extends AndroidTestCase {
-    private Locale defaultLocale;
-
-    static final SimpleDateFormat RELATIVE_DATE_FORMAT =
-            new SimpleDateFormat("MM/dd/yy", Locale.ENGLISH);
-
-    @Override
-    protected void setUp() throws Exception {
-        super.setUp();
-        defaultLocale = TestUtils.setLocale(getContext(), Locale.ENGLISH);
-    }
-
-    @Override
-    protected void tearDown() throws Exception {
-        super.tearDown();
-        TestUtils.setLocale(getContext(), defaultLocale);
-    }
-
-    public void testDateLocales() {
-        final List<Locale> locales = Arrays.asList(new Locale("ar"), new Locale("da"),
-                new Locale("de"), new Locale("en", "GB"), new Locale("en", "SS"),
-                new Locale("en", "XX"), new Locale("es"), new Locale("fa"), new Locale("fi"),
-                new Locale("fr"), new Locale("hi"), new Locale("hu"), new Locale("in"),
-                new Locale("it"), new Locale("iw"), new Locale("ja"), new Locale("ko"),
-                new Locale("ms"), new Locale("nb"), new Locale("nl"), new Locale("pl"),
-                new Locale("pt"), new Locale("ru"), new Locale("sv"), new Locale("th"),
-                new Locale("tl"), new Locale("tr"), new Locale("ur"), new Locale("zh", "CN"),
-                new Locale("zh", "TW"));
-        for (Locale locale: locales) {
-            TestUtils.setLocale(getContext(), locale);
-            final String shortStr = getContext().getResources()
-                    .getString(R.string.tw__relative_date_format_short);
-            final String longStr = getContext().getResources()
-                    .getString(R.string.tw__relative_date_format_long);
-            // incorrect localized format strings would throw an exception
-            RELATIVE_DATE_FORMAT.applyPattern(shortStr);
-            RELATIVE_DATE_FORMAT.applyPattern(longStr);
-        }
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/MockUtils.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/MockUtils.java
deleted file mode 100644
index 97ee4610..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/MockUtils.java
+++ /dev/null
@@ -1,85 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.graphics.drawable.Drawable;
-import android.widget.ImageView;
-
-import com.squareup.picasso.Picasso;
-import com.squareup.picasso.RequestCreator;
-import com.twitter.sdk.android.core.Session;
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.services.StatusesService;
-
-import org.mockito.Mockito;
-import org.mockito.invocation.InvocationOnMock;
-import org.mockito.stubbing.Answer;
-
-import java.util.concurrent.ConcurrentHashMap;
-
-import retrofit2.Call;
-
-import static org.mockito.ArgumentMatchers.isNull;
-import static org.mockito.Matchers.any;
-import static org.mockito.Matchers.anyInt;
-import static org.mockito.Matchers.anyObject;
-import static org.mockito.Matchers.anyString;
-import static org.mockito.Mockito.doNothing;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.when;
-
-final class MockUtils {
-
-    private MockUtils() {}
-
-    static Picasso mockPicasso(Picasso picasso, RequestCreator requestCreator) {
-        when(picasso.load(anyString())).thenReturn(requestCreator);
-        when(picasso.load(anyInt())).thenReturn(requestCreator);
-        when(picasso.load(isNull(String.class))).thenReturn(requestCreator);
-        when(requestCreator.centerCrop()).thenReturn(requestCreator);
-        when(requestCreator.error(anyInt())).thenReturn(requestCreator);
-        when(requestCreator.fit()).thenReturn(requestCreator);
-        when(requestCreator.placeholder(any(Drawable.class)))
-                .thenReturn(requestCreator);
-        doNothing().when(requestCreator).into(any(ImageView.class));
-        return picasso;
-    }
-
-    static void mockApiClient(TwitterApiClient apiClient) {
-        final StatusesService statusesService = mock(StatusesService.class, new MockCallAnswer());
-
-        when(apiClient.getStatusesService()).thenReturn(statusesService);
-    }
-
-    static void mockClients(ConcurrentHashMap<Session, TwitterApiClient> clients,
-                                   TwitterApiClient apiClient) {
-        when(clients.get(anyObject())).thenReturn(apiClient);
-        when(clients.contains(anyObject())).thenReturn(true);
-    }
-
-    static class MockCallAnswer implements Answer<Object> {
-        @Override
-        public Object answer(InvocationOnMock invocation) throws Throwable {
-            if (invocation.getMethod().getReturnType().equals(Call.class)) {
-                return mock(Call.class);
-            } else {
-                return Mockito.RETURNS_DEFAULTS.answer(invocation);
-            }
-        }
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/QuoteTweetViewTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/QuoteTweetViewTest.java
deleted file mode 100644
index afb5a37c..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/QuoteTweetViewTest.java
+++ /dev/null
@@ -1,93 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-
-import com.twitter.sdk.android.core.models.Tweet;
-
-public class QuoteTweetViewTest extends AbstractTweetViewTest {
-    protected static final double DELTA = 0.001f;
-
-    @Override
-    QuoteTweetView createView(Context context, Tweet tweet) {
-        final QuoteTweetView quoteTweetView = new QuoteTweetView(context);
-        quoteTweetView.setTweet(tweet);
-        return quoteTweetView;
-    }
-
-    @Override
-    QuoteTweetView createViewInEditMode(Context context, Tweet tweet) {
-        final QuoteTweetView quoteTweetView = new QuoteTweetView(context) {
-            @Override
-            public boolean isInEditMode() {
-                return true;
-            }
-        };
-
-        return quoteTweetView;
-    }
-
-    @Override
-    QuoteTweetView createViewWithMocks(Context context, Tweet tweet) {
-        final QuoteTweetView quoteTweetView = new QuoteTweetView(context);
-        quoteTweetView.setTweet(tweet);
-        return quoteTweetView;
-    }
-
-    @Override
-    QuoteTweetView createViewWithMocks(Context context, Tweet tweet,
-                                         BaseTweetView.DependencyProvider dependencyProvider) {
-        final QuoteTweetView quoteTweetView = new QuoteTweetView(context, dependencyProvider);
-        quoteTweetView.setTweet(tweet);
-        return quoteTweetView;
-    }
-
-    public void testGetAspectRatio() {
-        final QuoteTweetView quoteTweetView = createView(context, TestFixtures.TEST_TWEET);
-
-        assertEquals(1.0, quoteTweetView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(100, 100)), DELTA);
-        assertEquals(1.0, quoteTweetView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(300, 400)), DELTA);
-        assertEquals(1.0, quoteTweetView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(100, 800)), DELTA);
-        assertEquals(1.3333, quoteTweetView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(400, 300)), DELTA);
-        assertEquals(1.6666, quoteTweetView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(500, 300)), DELTA);
-        assertEquals(2.0, quoteTweetView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(600, 300)), DELTA);
-        assertEquals(2.3333, quoteTweetView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(700, 300)), DELTA);
-        assertEquals(2.6666, quoteTweetView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(800, 300)), DELTA);
-        assertEquals(3.0, quoteTweetView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(900, 300)), DELTA);
-        assertEquals(3.0, quoteTweetView.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(1000, 50)), DELTA);
-    }
-
-    public void testGetAspectRatioForPhotoEntity() {
-        final QuoteTweetView quoteTweetView = createView(context, TestFixtures.TEST_PHOTO_TWEET);
-        assertEquals(1.6, quoteTweetView.getAspectRatioForPhotoEntity(1));
-        assertEquals(1.6, quoteTweetView.getAspectRatioForPhotoEntity(2));
-        assertEquals(1.6, quoteTweetView.getAspectRatioForPhotoEntity(3));
-        assertEquals(1.6, quoteTweetView.getAspectRatioForPhotoEntity(4));
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetActionBarViewTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetActionBarViewTest.java
deleted file mode 100644
index a35f071e..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetActionBarViewTest.java
+++ /dev/null
@@ -1,85 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.widget.ImageButton;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import org.mockito.ArgumentCaptor;
-
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.verifyZeroInteractions;
-
-public class TweetActionBarViewTest extends TweetUiTestCase {
-
-    public void testSetOnActionCallback() {
-        final TweetActionBarView view = createView();
-        final Callback<Tweet> actionCallback = mock(Callback.class);
-        view.setOnActionCallback(actionCallback);
-        assertEquals(actionCallback, view.actionCallback);
-    }
-
-    public void testSetLike() {
-        final TweetRepository tweetRepository = TweetUi.getInstance().getTweetRepository();
-        final TweetActionBarView view = createView();
-        view.setLike(TestFixtures.TEST_TWEET);
-
-        final ArgumentCaptor<LikeTweetAction> likeCaptor
-                = ArgumentCaptor.forClass(LikeTweetAction.class);
-        verify(view.likeButton).setToggledOn(TestFixtures.TEST_TWEET.favorited);
-        verify(view.likeButton).setOnClickListener(likeCaptor.capture());
-        final LikeTweetAction likeAction = likeCaptor.getValue();
-        assertNotNull(likeAction);
-        assertEquals(TestFixtures.TEST_TWEET, likeAction.tweet);
-        assertEquals(tweetRepository, likeAction.tweetRepository);
-    }
-
-    public void testSetLike_handlesNullTweet() {
-        final TweetActionBarView view = createView();
-        view.setLike(null);
-        verifyZeroInteractions(view.likeButton);
-    }
-
-    public void testSetShare() {
-        final TweetActionBarView view = createView();
-        view.setShare(TestFixtures.TEST_TWEET);
-
-        final ArgumentCaptor<ShareTweetAction> shareCaptor
-                = ArgumentCaptor.forClass(ShareTweetAction.class);
-        verify(view.shareButton).setOnClickListener(shareCaptor.capture());
-        final ShareTweetAction shareAction = shareCaptor.getValue();
-        assertNotNull(shareAction);
-        assertEquals(TestFixtures.TEST_TWEET, shareAction.tweet);
-    }
-
-    public void testSetShare_handlesNullTweet() {
-        final TweetActionBarView view = createView();
-        view.setShare(null);
-        verifyZeroInteractions(view.shareButton);
-    }
-
-    private TweetActionBarView createView() {
-        final TweetActionBarView view = new TweetActionBarView(getContext());
-        view.likeButton = mock(ToggleImageButton.class);
-        view.shareButton = mock(ImageButton.class);
-        return view;
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetTimelineListAdapterTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetTimelineListAdapterTest.java
deleted file mode 100644
index 0c7f51d2..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetTimelineListAdapterTest.java
+++ /dev/null
@@ -1,217 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.view.View;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.models.Identifiable;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import java.util.List;
-
-import static org.mockito.Mockito.mock;
-
-public class TweetTimelineListAdapterTest extends TweetUiTestCase {
-    static final String NULL_CONTEXT_MESSAGE = "Context must not be null";
-    static final String NULL_TIMELINE_MESSAGE = "Timeline must not be null";
-    static final int ANY_STYLE = R.style.tw__TweetLightWithActionsStyle;
-    private TweetTimelineListAdapter listAdapter;
-
-    public void testConstructor() {
-        final TimelineDelegate<Tweet> mockTimelineDelegate = mock(TestTimelineDelegate.class);
-        final TweetUi tweetUi = mock(TweetUi.class);
-        listAdapter = new TweetTimelineListAdapter(getContext(), mockTimelineDelegate, ANY_STYLE,
-                null, tweetUi);
-        if (listAdapter.actionCallback instanceof TweetTimelineListAdapter.ReplaceTweetCallback) {
-            final TweetTimelineListAdapter.ReplaceTweetCallback replaceCallback
-                    = (TweetTimelineListAdapter.ReplaceTweetCallback) listAdapter.actionCallback;
-            assertEquals(mockTimelineDelegate, replaceCallback.delegate);
-            assertNull(replaceCallback.cb);
-        } else {
-            fail("Expected default actionCallback to be a ReplaceTweetCallback");
-        }
-    }
-
-    public void testConstructor_withActionCallback() {
-        final TimelineDelegate<Tweet> mockTimelineDelegate = mock(TestTimelineDelegate.class);
-        final Callback<Tweet> mockCallback = mock(Callback.class);
-        final TweetUi tweetUi = mock(TweetUi.class);
-        listAdapter = new TweetTimelineListAdapter(getContext(), mockTimelineDelegate, ANY_STYLE,
-                mockCallback, tweetUi);
-        // assert that
-        // - developer callback wrapped in a ReplaceTweetCallback
-        if (listAdapter.actionCallback instanceof TweetTimelineListAdapter.ReplaceTweetCallback) {
-            final TweetTimelineListAdapter.ReplaceTweetCallback replaceCallback
-                    = (TweetTimelineListAdapter.ReplaceTweetCallback) listAdapter.actionCallback;
-            assertEquals(mockTimelineDelegate, replaceCallback.delegate);
-            assertEquals(mockCallback, replaceCallback.cb);
-        } else {
-            fail("Expected actionCallback to be wrapped in ReplaceTweetCallback");
-        }
-    }
-
-    public void testBuilder() {
-        final Timeline<Tweet> mockTimeline = mock(Timeline.class);
-        final Callback<Tweet> mockCallback = mock(Callback.class);
-        listAdapter = new TweetTimelineListAdapter.Builder(getContext())
-                .setTimeline(mockTimeline)
-                .setOnActionCallback(mockCallback)
-                .setViewStyle(R.style.tw__TweetDarkStyle)
-                .build();
-        assertEquals(R.style.tw__TweetDarkStyle, listAdapter.styleResId);
-        if (listAdapter.actionCallback instanceof TweetTimelineListAdapter.ReplaceTweetCallback) {
-            final TweetTimelineListAdapter.ReplaceTweetCallback replaceCallback
-                    = (TweetTimelineListAdapter.ReplaceTweetCallback) listAdapter.actionCallback;
-            assertEquals(mockCallback, replaceCallback.cb);
-        } else {
-            fail("Expected actionCallback to be wrapped in ReplaceTweetCallback");
-        }
-    }
-
-    public void testBuilder_nullContext() {
-        final Timeline<Tweet> mockTimeline = mock(Timeline.class);
-        try {
-            listAdapter = new TweetTimelineListAdapter.Builder(null).setTimeline(mockTimeline)
-                    .build();
-            fail("Null context should throw exception");
-        } catch (IllegalArgumentException e) {
-            assertEquals(NULL_CONTEXT_MESSAGE, e.getMessage());
-        }
-    }
-
-    public void testBuilder_nullTimeline() {
-        try {
-            listAdapter = new TweetTimelineListAdapter.Builder(getContext()).setTimeline(null)
-                    .build();
-            fail("Null timeline should throw exception");
-        } catch (IllegalArgumentException e) {
-            assertEquals(NULL_TIMELINE_MESSAGE, e.getMessage());
-        }
-    }
-
-    public void testBuilder_withTimelineFilter() {
-        final Timeline<Tweet> mockTimeline = mock(Timeline.class);
-        final TimelineFilter mockTimelineFilter = mock(TimelineFilter.class);
-        listAdapter = new TweetTimelineListAdapter.Builder(getContext())
-                .setTimeline(mockTimeline)
-                .setTimelineFilter(mockTimelineFilter)
-                .build();
-
-        assertTrue(listAdapter.delegate instanceof FilterTimelineDelegate);
-    }
-
-    public void testBuilder_withNullTimelineFilter() {
-        final Timeline<Tweet> mockTimeline = mock(Timeline.class);
-        listAdapter = new TweetTimelineListAdapter.Builder(getContext())
-                .setTimeline(mockTimeline)
-                .setTimelineFilter(null)
-                .build();
-
-        assertTrue(listAdapter.delegate instanceof TimelineDelegate);
-    }
-
-    /**
-     * Requires TweetUi to be setup by the test class. Without TweetUi, TweetView construction
-     * returns before calling setTweet to support IDE edit mode, so getTweetId would always be -1.
-     */
-    public void testGetView_getsCompactTweetView() {
-        final Timeline<Tweet> fakeTimeline = new FakeTweetTimeline(10);
-        final TimelineDelegate<Tweet> fakeDelegate = new TimelineDelegate<>(fakeTimeline);
-        listAdapter = new TweetTimelineListAdapter(getContext(), fakeDelegate, ANY_STYLE,
-                null, tweetUi);
-
-        final View view = listAdapter.getView(0, null, null);
-        // assert that
-        // - default implementation of getView returns a CompactTweetView
-        // - sanity check that CompactTweetView tweet id matches the Tweet's id
-        assertEquals(CompactTweetView.class, view.getClass());
-        final BaseTweetView tv = (BaseTweetView) view;
-        assertEquals(listAdapter.getItemId(0), tv.getTweetId());
-    }
-
-    public void testDefaultViewStyle_viaConstructor() {
-        final Timeline<Tweet> fakeTimeline = new FakeTweetTimeline(10);
-        listAdapter = new TweetTimelineListAdapter(getContext(), fakeTimeline);
-        final View view = listAdapter.getView(0, null, null);
-        final BaseTweetView tv = (BaseTweetView) view;
-        assertEquals(R.style.tw__TweetLightStyle, tv.styleResId);
-    }
-
-    public void testDefaultViewStyle_viaBuilder() {
-        final Timeline<Tweet> fakeTimeline = new FakeTweetTimeline(10);
-        listAdapter = new TweetTimelineListAdapter.Builder(getContext())
-                .setTimeline(fakeTimeline)
-                .build();
-        final View view = listAdapter.getView(0, null, null);
-        final BaseTweetView tv = (BaseTweetView) view;
-        assertEquals(R.style.tw__TweetLightStyle, tv.styleResId);
-    }
-
-    public void testSetViewStyle() {
-        final Timeline<Tweet> fakeTimeline = new FakeTweetTimeline(10);
-        listAdapter = new TweetTimelineListAdapter.Builder(getContext())
-                .setTimeline(fakeTimeline)
-                .setViewStyle(R.style.tw__TweetDarkWithActionsStyle)
-                .build();
-        final View view = listAdapter.getView(0, null, null);
-        final BaseTweetView tv = (BaseTweetView) view;
-        assertEquals(R.style.tw__TweetDarkWithActionsStyle, tv.styleResId);
-    }
-
-    static class FakeTweetTimeline implements Timeline<Tweet> {
-        private long numItems;
-
-        /**
-         * Constructs a FakeTweetTimeline
-         * @param numItems the number of Tweets to return per call to next/previous
-         */
-        FakeTweetTimeline(long numItems) {
-            this.numItems = numItems;
-        }
-
-        @Override
-        public void next(Long sinceId, Callback<TimelineResult<Tweet>> cb) {
-            final List<Tweet> tweets = TestFixtures.getTweetList(numItems);
-            final TimelineCursor timelineCursor = new TimelineCursor(tweets);
-            final TimelineResult<Tweet> timelineResult
-                    = new TimelineResult<>(timelineCursor, tweets);
-            cb.success(new Result<>(timelineResult, null));
-        }
-
-        @Override
-        public void previous(Long maxId, Callback<TimelineResult<Tweet>> cb) {
-            final List<Tweet> tweets = TestFixtures.getTweetList(numItems);
-            final TimelineCursor timelineCursor = new TimelineCursor(tweets);
-            final TimelineResult<Tweet> timelineResult
-                    = new TimelineResult<>(timelineCursor, tweets);
-            cb.success(new Result<>(timelineResult, null));
-        }
-    }
-
-    /**
-     * Makes class public so it can be mocked on ART runtime.
-     * @param <T>
-     */
-    public class TestTimelineDelegate<T extends Identifiable> extends TimelineDelegate {
-        public TestTimelineDelegate(Timeline<T> timeline) {
-            super(timeline);
-        }
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetTimelineRecyclerViewAdapterTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetTimelineRecyclerViewAdapterTest.java
deleted file mode 100644
index 0bffcc40..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetTimelineRecyclerViewAdapterTest.java
+++ /dev/null
@@ -1,195 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.models.Identifiable;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import java.util.List;
-
-import static org.mockito.Mockito.mock;
-
-public class TweetTimelineRecyclerViewAdapterTest extends TweetUiTestCase {
-    static final String NULL_CONTEXT_MESSAGE = "Context must not be null";
-    static final String NULL_TIMELINE_MESSAGE = "Timeline must not be null";
-    static final int ANY_STYLE = R.style.tw__TweetLightWithActionsStyle;
-    private TweetTimelineRecyclerViewAdapter recyclerViewAdapter;
-
-    private static final int ITEM_COUNT = 10;
-
-
-    public void testConstructor() {
-        final TimelineDelegate<Tweet> mockTimelineDelegate = mock(TestTimelineDelegate.class);
-        final TweetUi tweetUi = mock(TweetUi.class);
-        recyclerViewAdapter = new TweetTimelineRecyclerViewAdapter(getContext(),
-                mockTimelineDelegate, ANY_STYLE, null, tweetUi);
-        if (recyclerViewAdapter.actionCallback instanceof
-                TweetTimelineRecyclerViewAdapter.ReplaceTweetCallback) {
-            final TweetTimelineRecyclerViewAdapter.ReplaceTweetCallback replaceCallback
-                    = (TweetTimelineRecyclerViewAdapter.ReplaceTweetCallback)
-                    recyclerViewAdapter.actionCallback;
-            assertEquals(mockTimelineDelegate, replaceCallback.delegate);
-            assertNull(replaceCallback.cb);
-        } else {
-            fail("Expected default actionCallback to be a ReplaceTweetCallback");
-        }
-    }
-
-    public void testConstructor_withActionCallback() {
-        final TimelineDelegate<Tweet> mockTimelineDelegate = mock(TestTimelineDelegate.class);
-        final Callback<Tweet> mockCallback = mock(Callback.class);
-        final TweetUi tweetUi = mock(TweetUi.class);
-        recyclerViewAdapter = new TweetTimelineRecyclerViewAdapter(getContext(),
-                mockTimelineDelegate, ANY_STYLE, mockCallback, tweetUi);
-        // assert that
-        // - developer callback wrapped in a ReplaceTweetCallback
-        if (recyclerViewAdapter.actionCallback instanceof
-                TweetTimelineRecyclerViewAdapter.ReplaceTweetCallback) {
-            final TweetTimelineRecyclerViewAdapter.ReplaceTweetCallback replaceCallback
-                    = (TweetTimelineRecyclerViewAdapter.ReplaceTweetCallback)
-                    recyclerViewAdapter.actionCallback;
-            assertEquals(mockTimelineDelegate, replaceCallback.delegate);
-            assertEquals(mockCallback, replaceCallback.cb);
-        } else {
-            fail("Expected actionCallback to be wrapped in ReplaceTweetCallback");
-        }
-    }
-
-    public void testBuilder() {
-        final Timeline<Tweet> mockTimeline = mock(Timeline.class);
-        final Callback<Tweet> mockCallback = mock(Callback.class);
-        recyclerViewAdapter = new TweetTimelineRecyclerViewAdapter.Builder(getContext())
-                .setTimeline(mockTimeline)
-                .setOnActionCallback(mockCallback)
-                .setViewStyle(R.style.tw__TweetDarkStyle)
-                .build();
-        assertEquals(R.style.tw__TweetDarkStyle, recyclerViewAdapter.styleResId);
-        if (recyclerViewAdapter.actionCallback instanceof
-                TweetTimelineRecyclerViewAdapter.ReplaceTweetCallback) {
-            final TweetTimelineRecyclerViewAdapter.ReplaceTweetCallback replaceCallback
-                    = (TweetTimelineRecyclerViewAdapter.ReplaceTweetCallback)
-                    recyclerViewAdapter.actionCallback;
-            assertEquals(mockCallback, replaceCallback.cb);
-        } else {
-            fail("Expected actionCallback to be wrapped in ReplaceTweetCallback");
-        }
-    }
-
-    public void testBuilder_nullContext() {
-        final Timeline<Tweet> mockTimeline = mock(Timeline.class);
-        try {
-            recyclerViewAdapter =
-                    new TweetTimelineRecyclerViewAdapter.Builder(null).setTimeline(mockTimeline)
-                    .build();
-            fail("Null context should throw exception");
-        } catch (IllegalArgumentException e) {
-            assertEquals(NULL_CONTEXT_MESSAGE, e.getMessage());
-        }
-    }
-
-    public void testBuilder_nullTimeline() {
-        try {
-            recyclerViewAdapter =
-                    new TweetTimelineRecyclerViewAdapter.Builder(getContext()).setTimeline(null)
-                    .build();
-            fail("Null timeline should throw exception");
-        } catch (IllegalArgumentException e) {
-            assertEquals(NULL_TIMELINE_MESSAGE, e.getMessage());
-        }
-    }
-
-    public void testBuilder_withTimelineFilter() {
-        final Timeline<Tweet> mockTimeline = mock(Timeline.class);
-        final TimelineFilter mockTimelineFilter = mock(TimelineFilter.class);
-        recyclerViewAdapter = new TweetTimelineRecyclerViewAdapter.Builder(getContext())
-                .setTimeline(mockTimeline)
-                .setTimelineFilter(mockTimelineFilter)
-                .build();
-
-        assertTrue(recyclerViewAdapter.timelineDelegate instanceof FilterTimelineDelegate);
-    }
-
-    public void testBuilder_withNullTimelineFilter() {
-        final Timeline<Tweet> mockTimeline = mock(Timeline.class);
-        recyclerViewAdapter = new TweetTimelineRecyclerViewAdapter.Builder(getContext())
-                .setTimeline(mockTimeline)
-                .setTimelineFilter(null)
-                .build();
-
-        assertTrue(recyclerViewAdapter.timelineDelegate instanceof TimelineDelegate);
-    }
-
-    public void testItemCount_viaConstructor() {
-        final Timeline<Tweet> fakeTimeline = new FakeTweetTimeline(ITEM_COUNT);
-        final TweetTimelineRecyclerViewAdapter recyclerViewAdapter = new
-                TweetTimelineRecyclerViewAdapter(getContext(), fakeTimeline);
-        assertEquals(recyclerViewAdapter.getItemCount(), ITEM_COUNT);
-    }
-
-    public void testItemCount_viaBuilder() {
-        final Timeline<Tweet> fakeTimeline = new FakeTweetTimeline(ITEM_COUNT);
-        final TweetTimelineRecyclerViewAdapter recyclerViewAdapter =
-                new TweetTimelineRecyclerViewAdapter.Builder(getContext())
-                        .setTimeline(fakeTimeline)
-                        .setViewStyle(R.style.tw__TweetLightWithActionsStyle)
-                        .build();
-        assertEquals(recyclerViewAdapter.getItemCount(), ITEM_COUNT);
-    }
-
-    static class FakeTweetTimeline implements Timeline<Tweet> {
-        private long numItems;
-
-        /**
-         * Constructs a FakeTweetTimeline
-         * @param numItems the number of Tweets to return per call to next/previous
-         */
-        FakeTweetTimeline(long numItems) {
-            this.numItems = numItems;
-        }
-
-        @Override
-        public void next(Long sinceId, Callback<TimelineResult<Tweet>> cb) {
-            final List<Tweet> tweets = TestFixtures.getTweetList(numItems);
-            final TimelineCursor timelineCursor = new TimelineCursor(tweets);
-            final TimelineResult<Tweet> timelineResult
-                    = new TimelineResult<>(timelineCursor, tweets);
-            cb.success(new Result<>(timelineResult, null));
-        }
-
-        @Override
-        public void previous(Long maxId, Callback<TimelineResult<Tweet>> cb) {
-            final List<Tweet> tweets = TestFixtures.getTweetList(numItems);
-            final TimelineCursor timelineCursor = new TimelineCursor(tweets);
-            final TimelineResult<Tweet> timelineResult
-                    = new TimelineResult<>(timelineCursor, tweets);
-            cb.success(new Result<>(timelineResult, null));
-        }
-    }
-
-    /**
-     * Makes class public so it can be mocked on ART runtime.
-     * @param <T>
-     */
-    public class TestTimelineDelegate<T extends Identifiable> extends TimelineDelegate {
-        public TestTimelineDelegate(Timeline<T> timeline) {
-            super(timeline);
-        }
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUiBackgroundTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUiBackgroundTest.java
deleted file mode 100644
index 576b1137..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUiBackgroundTest.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.test.InstrumentationTestCase;
-import android.test.UiThreadTest;
-
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.TwitterConfig;
-import com.twitter.sdk.android.core.TwitterCoreTestUtils;
-import com.twitter.sdk.android.core.TwitterTestUtils;
-
-import java.util.concurrent.ThreadPoolExecutor;
-
-import static org.mockito.Mockito.mock;
-
-public class TweetUiBackgroundTest extends InstrumentationTestCase {
-
-    @Override
-    protected void setUp() throws Exception {
-        super.setUp();
-        // Set a mock thread pool executor so we can run these tests knowing that doInBackground
-        // has not been run.
-        Twitter.initialize(new TwitterConfig.Builder(getInstrumentation().getTargetContext())
-                .executorService(mock(ThreadPoolExecutor.class))
-                .build());
-    }
-
-    @Override
-    protected void tearDown() throws Exception {
-        TwitterTestUtils.resetTwitter();
-        TwitterCoreTestUtils.resetTwitterCore();
-        TweetUiTestUtils.resetTweetUi();
-
-        super.tearDown();
-    }
-
-    @UiThreadTest
-    public void testRenderTweet_beforeInBackground() {
-        try {
-            new TweetView(getInstrumentation().getTargetContext(), TestFixtures.TEST_TWEET);
-        } catch (IllegalArgumentException e) {
-            fail(e.getMessage());
-        }
-    }
-
-    public void testGetTweetRepository() {
-        assertNotNull(TweetUi.getInstance().getTweetRepository());
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUiTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUiTest.java
deleted file mode 100644
index 82618972..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUiTest.java
+++ /dev/null
@@ -1,83 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.test.AndroidTestCase;
-
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.TwitterConfig;
-import com.twitter.sdk.android.core.TwitterCoreTestUtils;
-import com.twitter.sdk.android.core.TwitterTestUtils;
-
-import java.util.concurrent.ExecutorService;
-
-import static org.mockito.Mockito.mock;
-
-public class TweetUiTest extends AndroidTestCase {
-    private TweetUi tweetUi;
-    @Override
-    protected void setUp() throws Exception {
-        super.setUp();
-
-        Twitter.initialize(new TwitterConfig.Builder(getContext())
-                .executorService(mock(ExecutorService.class))
-                .build());
-
-        tweetUi = new TweetUi();
-    }
-
-    @Override
-    protected void tearDown() throws Exception {
-        TwitterTestUtils.resetTwitter();
-        TwitterCoreTestUtils.resetTwitterCore();
-        TweetUiTestUtils.resetTweetUi();
-
-        super.tearDown();
-    }
-
-    public void testGetVersion() {
-        assertEquals(BuildConfig.VERSION_NAME + "." + BuildConfig.BUILD_NUMBER,
-                tweetUi.getVersion());
-    }
-
-    public void testGetIdentifier() {
-        final String identifier = BuildConfig.GROUP + ":" + BuildConfig.ARTIFACT_ID;
-        assertEquals(identifier, tweetUi.getIdentifier());
-    }
-
-    public void testGetInstance_tweeterStarted() {
-        try {
-            final TweetUi instance = TweetUi.getInstance();
-            assertNotNull(instance);
-        } catch (Exception ex) {
-            fail("IllegalStateException was expected");
-        }
-    }
-
-    public void testGetInstance_tweeterNotStarted() {
-        TwitterTestUtils.resetTwitter();
-        try {
-            TweetUi.getInstance();
-            fail("IllegalStateException was expected");
-        } catch (Exception ex) {
-            if (!(ex instanceof IllegalStateException)) {
-                fail("IllegalStateException was expected");
-            }
-        }
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUiTestCase.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUiTestCase.java
deleted file mode 100644
index 94ff07ee..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUiTestCase.java
+++ /dev/null
@@ -1,96 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.os.Handler;
-import android.test.AndroidTestCase;
-import android.util.Log;
-
-import com.squareup.picasso.Picasso;
-import com.squareup.picasso.RequestCreator;
-import com.twitter.sdk.android.core.DefaultLogger;
-import com.twitter.sdk.android.core.Session;
-import com.twitter.sdk.android.core.SessionManager;
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterAuthConfig;
-import com.twitter.sdk.android.core.TwitterConfig;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterCoreTestUtils;
-import com.twitter.sdk.android.core.TwitterTestUtils;
-
-import java.util.concurrent.ConcurrentHashMap;
-import java.util.concurrent.ThreadPoolExecutor;
-
-import static org.mockito.Mockito.mock;
-
-public class TweetUiTestCase extends AndroidTestCase {
-
-    protected TweetUi tweetUi;
-
-    // mocks
-    protected Picasso picasso;
-    protected Handler mainHandler;
-    private TwitterApiClient apiClient;
-    private ConcurrentHashMap<Session, TwitterApiClient> clients;
-
-    @Override
-    protected void setUp() throws Exception {
-        super.setUp();
-        createMocks();
-
-        // Initialize Fabric with mock executor so that kit#doInBackground() will not be called
-        // during kit initialization.
-        final TwitterConfig config = new TwitterConfig.Builder(getContext())
-                .logger(new DefaultLogger(Log.DEBUG))
-                .executorService(mock(ThreadPoolExecutor.class))
-                .build();
-
-        Twitter.initialize(config);
-
-        final TwitterCore twitterCore = TwitterCoreTestUtils.createTwitterCore(
-                new TwitterAuthConfig("", ""), clients, apiClient);
-
-        tweetUi = TweetUi.getInstance();
-        final TweetRepository tweetRepository = new TweetRepository(mainHandler,
-                mock(SessionManager.class), twitterCore);
-        tweetUi.setTweetRepository(tweetRepository);
-        tweetUi.setImageLoader(picasso);
-    }
-
-    @Override
-    protected void tearDown() throws Exception {
-        TwitterTestUtils.resetTwitter();
-        TwitterCoreTestUtils.resetTwitterCore();
-        TweetUiTestUtils.resetTweetUi();
-
-        scrubClass(TweetUiTestCase.class);
-        super.tearDown();
-    }
-
-    private void createMocks() {
-        mainHandler = mock(Handler.class);
-        picasso = MockUtils.mockPicasso(mock(Picasso.class), mock(RequestCreator.class));
-
-        apiClient = mock(TwitterApiClient.class);
-        MockUtils.mockApiClient(apiClient);
-
-        clients = mock(ConcurrentHashMap.class);
-        MockUtils.mockClients(clients, apiClient);
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUtilsTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUtilsTest.java
deleted file mode 100644
index 715349ef..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUtilsTest.java
+++ /dev/null
@@ -1,209 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.net.Uri;
-import android.test.AndroidTestCase;
-
-import com.twitter.sdk.android.core.TwitterCoreTestUtils;
-import com.twitter.sdk.android.core.TwitterTestUtils;
-import com.twitter.sdk.android.core.models.Card;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetBuilder;
-import com.twitter.sdk.android.core.models.TweetEntities;
-import com.twitter.sdk.android.core.models.UserBuilder;
-
-public class TweetUtilsTest extends AndroidTestCase {
-    static final String NOT_STARTED_ERROR = "Must initialize Twitter before using getInstance()";
-    private static final String A_FULL_PERMALINK =
-            "https://twitter.com/jack/status/20?ref_src=twsrc%5Etwitterkit";
-    private static final String A_PERMALINK_WITH_NO_SCREEN_NAME
-            = "https://twitter.com/twitter_unknown/status/20?ref_src=twsrc%5Etwitterkit";
-    private static final String A_VALID_SCREEN_NAME = "jack";
-    private static final int A_VALID_TWEET_ID = 20;
-    private static final int AN_INVALID_TWEET_ID = 0;
-
-    @Override
-    public void tearDown() throws Exception {
-        TwitterTestUtils.resetTwitter();
-        TwitterCoreTestUtils.resetTwitterCore();
-        TweetUiTestUtils.resetTweetUi();
-
-        super.tearDown();
-    }
-
-    public void testLoadTweet_beforeKitStart() {
-        try {
-            TweetUtils.loadTweet(TestFixtures.TEST_TWEET_ID, null);
-            fail("IllegalStateException not thrown");
-        } catch (IllegalStateException e) {
-            assertEquals(NOT_STARTED_ERROR, e.getMessage());
-        } catch (Exception ex) {
-            fail();
-        }
-    }
-
-    public void testLoadTweets_beforeKitStart() {
-        try {
-            TweetUtils.loadTweets(TestFixtures.TWEET_IDS, null);
-            fail("IllegalStateException not thrown");
-        } catch (IllegalStateException e) {
-            assertEquals(NOT_STARTED_ERROR, e.getMessage());
-        } catch (Exception ex) {
-            fail();
-        }
-    }
-
-    public void testIsTweetResolvable_nullTweet() {
-        assertFalse(TweetUtils.isTweetResolvable(null));
-    }
-
-    public void testIsTweetResolvable_hasInvalidIdAndNullUser() {
-        final Tweet tweet = new TweetBuilder().build();
-        assertNull(tweet.user);
-        assertFalse(TweetUtils.isTweetResolvable(tweet));
-    }
-
-    public void testIsTweetResolvable_hasValidIdAndNullUser() {
-        final Tweet tweet = new TweetBuilder().setId(TestFixtures.TEST_TWEET_ID).build();
-        assertNull(tweet.user);
-        assertFalse(TweetUtils.isTweetResolvable(tweet));
-    }
-
-    public void testIsTweetResolvable_hasInvalidIdAndUserWithNullScreenName() {
-        final Tweet tweet = new TweetBuilder()
-                .setUser(
-                        new UserBuilder()
-                                .setId(1)
-                                .setName(null)
-                                .setScreenName(null)
-                                .setVerified(false)
-                                .build())
-                .build();
-        assertFalse(TweetUtils.isTweetResolvable(tweet));
-    }
-
-    public void testIsTweetResolvable_hasValidIdAndUserWithNullScreenName() {
-        final Tweet tweet = new TweetBuilder()
-                .setId(TestFixtures.TEST_TWEET_ID)
-                .setUser(
-                        new UserBuilder()
-                                .setId(1)
-                                .setName(null)
-                                .setScreenName(null)
-                                .setVerified(false)
-                                .build()
-                ).build();
-        assertFalse(TweetUtils.isTweetResolvable(tweet));
-    }
-
-    public void testIsTweetResolvable_hasInvalidIdAndUserWithEmptyScreenName() {
-        final Tweet tweet = new TweetBuilder()
-                .setUser(new UserBuilder()
-                        .setId(1)
-                        .setName(null)
-                        .setScreenName("")
-                        .setVerified(false)
-                        .build())
-                .build();
-        assertFalse(TweetUtils.isTweetResolvable(tweet));
-    }
-
-    public void testIsTweetResolvable_hasValidIdAndUserWithEmptyScreenName() {
-        final Tweet tweet = new TweetBuilder()
-                .setId(TestFixtures.TEST_TWEET_ID)
-                .setUser(new UserBuilder()
-                        .setId(1)
-                        .setName(null)
-                        .setScreenName("")
-                        .setVerified(false)
-                        .build())
-                .build();
-        assertFalse(TweetUtils.isTweetResolvable(tweet));
-    }
-
-    public void testIsTweetResolvable_hasUserWithScreenNameAndValidId() {
-        assertTrue(TweetUtils.isTweetResolvable(TestFixtures.TEST_TWEET));
-    }
-
-    public void testGetPermalink_nullScreenNameValidId() {
-        assertEquals(A_PERMALINK_WITH_NO_SCREEN_NAME,
-                TweetUtils.getPermalink(null, A_VALID_TWEET_ID).toString());
-    }
-
-    public void testGetPermalink_validScreenNameZeroId() {
-        assertNull(TweetUtils.getPermalink(A_VALID_SCREEN_NAME, AN_INVALID_TWEET_ID));
-    }
-
-    public void testGetPermalink_validScreenNameAndId() {
-        assertEquals(A_FULL_PERMALINK,
-                TweetUtils.getPermalink(A_VALID_SCREEN_NAME, A_VALID_TWEET_ID).toString());
-    }
-
-    public void testGetPermalink_emptyScreenName() {
-        final Uri permalink = TweetUtils.getPermalink("", 20);
-        assertEquals(A_PERMALINK_WITH_NO_SCREEN_NAME, permalink.toString());
-    }
-
-    public void testGetDisplayTweet_nullTweet() {
-        assertNull(TweetUtils.getDisplayTweet(null));
-    }
-
-    public void testGetDisplayTweet_retweet() {
-        assertEquals(TestFixtures.TEST_RETWEET.retweetedStatus,
-                TweetUtils.getDisplayTweet(TestFixtures.TEST_RETWEET));
-    }
-
-    public void testGetDisplayTweet_nonRetweet() {
-        assertEquals(TestFixtures.TEST_TWEET, TweetUtils.getDisplayTweet(TestFixtures.TEST_TWEET));
-    }
-
-    public void testShowQuoteTweet() {
-        final Tweet tweet = new TweetBuilder()
-                .copy(TestFixtures.TEST_TWEET)
-                .setQuotedStatus(TestFixtures.TEST_TWEET)
-                .build();
-        assertTrue(TweetUtils.showQuoteTweet(tweet));
-    }
-
-    public void testShowQuoteTweet_withCardAndQuoteTweet() {
-        final Tweet tweet = new TweetBuilder()
-                .setQuotedStatus(TestFixtures.TEST_TWEET)
-                .setCard(new Card(null, "Vine"))
-                .setEntities(new TweetEntities(null, null, null, null, null))
-                .build();
-        assertFalse(TweetUtils.showQuoteTweet(tweet));
-    }
-
-    public void testShowQuoteTweet_withMediaAndQuoteTweet() {
-        final Tweet tweet = new TweetBuilder()
-                .copy(TestFixtures.TEST_PHOTO_TWEET)
-                .setQuotedStatus(TestFixtures.TEST_TWEET)
-                .build();
-        assertFalse(TweetUtils.showQuoteTweet(tweet));
-    }
-
-    public void testShowQuoteTweet_nullEntity() {
-        final Tweet tweet = new TweetBuilder()
-                .copy(TestFixtures.TEST_PHOTO_TWEET)
-                .setQuotedStatus(TestFixtures.TEST_TWEET)
-                .setEntities(null)
-                .build();
-        assertTrue(TweetUtils.showQuoteTweet(tweet));
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetViewTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetViewTest.java
deleted file mode 100644
index e454f067..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetViewTest.java
+++ /dev/null
@@ -1,103 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.widget.ImageView;
-
-import com.twitter.sdk.android.core.models.Tweet;
-
-public class TweetViewTest extends BaseTweetViewTest {
-    @Override
-    TweetView createView(Context context, Tweet tweet) {
-        return new TweetView(context, tweet);
-    }
-
-    @Override
-    TweetView createView(Context context, Tweet tweet, int styleResId) {
-        return new TweetView(context, tweet, styleResId);
-    }
-
-    @Override
-    TweetView createViewInEditMode(Context context, Tweet tweet) {
-        return new TweetView(context, tweet) {
-            @Override
-            public boolean isInEditMode() {
-                return true;
-            }
-        };
-    }
-
-    @Override
-    TweetView createViewWithMocks(Context context, Tweet tweet) {
-        return new TweetView(context, tweet);
-    }
-
-    @Override
-    TweetView createViewWithMocks(Context context, Tweet tweet, int styleResId,
-            BaseTweetView.DependencyProvider dependencyProvider) {
-        return new TweetView(context, tweet, styleResId, dependencyProvider);
-    }
-
-    // Initialization
-
-    @Override
-    public void testInit() {
-        super.testInit();
-        final TweetView view = createView(context, TestFixtures.TEST_TWEET);
-        assertEquals(ImageView.GONE, view.mediaContainer.getVisibility());
-    }
-
-    @Override
-    public void testInit_withEmptyTweet() {
-        super.testInit();
-        final TweetView view = createView(context, TestFixtures.TEST_TWEET);
-        assertEquals(ImageView.GONE, view.mediaContainer.getVisibility());
-    }
-
-    public void testInit_withPhotoTweet() {
-        final TweetView view = createView(context, TestFixtures.TEST_PHOTO_TWEET);
-        assertEquals(ImageView.VISIBLE, view.mediaContainer.getVisibility());
-    }
-
-    // Layout
-    public void testLayout() {
-        final TweetView tweetView = new TweetView(context, TestFixtures.TEST_TWEET);
-        assertEquals(R.layout.tw__tweet, tweetView.getLayout());
-    }
-
-    public void testGetAspectRatio() {
-        final BaseTweetView view = createView(context, TestFixtures.TEST_TWEET);
-
-        assertEquals(1, view.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(100, 100)), DELTA);
-        assertEquals(.5, view.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(100, 200)), DELTA);
-        assertEquals(2, view.getAspectRatio(
-                TestFixtures.createMediaEntityWithPhoto(200, 100)), DELTA);
-    }
-
-    public void testGetAspectRatioForPhotoEntity() {
-        final TweetView tweetView = createView(context, TestFixtures.TEST_PHOTO_TWEET);
-
-        assertEquals(1.5, tweetView.getAspectRatioForPhotoEntity(1));
-        assertEquals(1.5, tweetView.getAspectRatioForPhotoEntity(2));
-        assertEquals(1.5, tweetView.getAspectRatioForPhotoEntity(3));
-        assertEquals(1.0, tweetView.getAspectRatioForPhotoEntity(4));
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetViewXmlTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetViewXmlTest.java
deleted file mode 100644
index 82760707..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetViewXmlTest.java
+++ /dev/null
@@ -1,38 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-public class TweetViewXmlTest extends BaseTweetViewXmlTest {
-    @Override
-    TweetView getView() {
-        return (TweetView) getInflatedLayout().findViewById(R.id.tweet_view);
-    }
-
-    @Override
-    TweetView getViewDark() {
-        return (TweetView) getInflatedLayout().findViewById(R.id.tweet_view_dark);
-    }
-
-    // Layout
-
-    public void testLayout() {
-        final TweetView view = getView();
-        assertNotNull(view);
-        assertEquals(R.layout.tw__tweet, view.getLayout());
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/internal/MultiTouchImageViewTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/internal/MultiTouchImageViewTest.java
deleted file mode 100644
index 84c22a1a..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/internal/MultiTouchImageViewTest.java
+++ /dev/null
@@ -1,116 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.graphics.Bitmap;
-import android.graphics.Matrix;
-import android.graphics.RectF;
-import android.test.AndroidTestCase;
-
-public class MultiTouchImageViewTest extends AndroidTestCase {
-    static final RectF TEST_VIEW_RECT = new RectF(0, 0, 100, 100);
-    static final Matrix TEST_BASE_MATRIX = new MatrixBuilder().postScale(2f).build();
-    static final Matrix TEST_IDENTITY_MATRIX = new MatrixBuilder().build();
-    static final float TEST_BASE_SCALE = 1f;
-    static final Bitmap image = Bitmap.createBitmap(50, 50, Bitmap.Config.ARGB_8888);
-    MultiTouchImageView view;
-
-    public void setUp() throws Exception {
-        super.setUp();
-        view = new MultiTouchImageView(getContext());
-        view.setImageBitmap(image);
-        view.layout(0, 0, 100, 100);
-    }
-
-    public void testInitialViewState() {
-        assertEquals(TEST_BASE_MATRIX, view.baseMatrix);
-        assertEquals(TEST_IDENTITY_MATRIX, view.updateMatrix);
-        assertEquals(TEST_VIEW_RECT, view.viewRect);
-        assertEquals(TEST_BASE_SCALE, view.getScale());
-        assertEquals(TEST_BASE_MATRIX, view.getDrawMatrix());
-    }
-
-    public void testGetDrawRect() {
-        final Matrix matrix = new MatrixBuilder()
-                .postScale(2f)
-                .postTranslate(10f, 10f)
-                .build();
-        final RectF result = view.getDrawRect(matrix);
-        final RectF expected = new RectF(10f, 10f, 110f, 110f);
-        assertEquals(expected, result);
-    }
-
-    public void testSetScale() {
-        view.setScale(1.5f, 50f, 50f);
-
-        final Matrix expected = new MatrixBuilder()
-                .postScale(1.5f)
-                .postTranslate(-25f, -25f)
-                .build();
-        assertEquals(expected, view.updateMatrix);
-        assertEquals(1.5f, view.getScale());
-        assertEquals(TEST_BASE_MATRIX, view.baseMatrix);
-    }
-
-    public void testReset() {
-        view.setScale(1.5f, 50f, 50f);
-        view.reset();
-
-        assertEquals(TEST_IDENTITY_MATRIX, view.updateMatrix);
-        assertEquals(TEST_BASE_SCALE, view.getScale());
-        assertEquals(TEST_BASE_MATRIX, view.baseMatrix);
-    }
-
-    public void testSetTranslate() {
-        view.setTranslate(10f, 10f);
-
-        final Matrix expected = new MatrixBuilder()
-                .postTranslate(10f, 10f)
-                .build();
-        assertEquals(expected, view.updateMatrix);
-        assertEquals(TEST_BASE_SCALE, view.getScale());
-        assertEquals(TEST_BASE_MATRIX, view.baseMatrix);
-    }
-
-    public void testCanBeSwiped_withScaleEqualOne() {
-        assertTrue(view.canBeSwiped());
-    }
-
-    public void testCanBeSwiped_withScaleGreaterThanOne() {
-        view.setScale(2, 0, 0);
-        assertFalse(view.canBeSwiped());
-    }
-
-    static class MatrixBuilder {
-        private final Matrix matrix = new Matrix();
-
-        MatrixBuilder postScale(float scale) {
-            matrix.postScale(scale, scale);
-            return this;
-        }
-
-        MatrixBuilder postTranslate(float x, float y) {
-            matrix.postTranslate(x, y);
-            return this;
-        }
-
-        Matrix build() {
-            return matrix;
-        }
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/internal/OverlayImageViewTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/internal/OverlayImageViewTest.java
deleted file mode 100644
index 40e5f7b9..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/internal/OverlayImageViewTest.java
+++ /dev/null
@@ -1,140 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.graphics.Canvas;
-import android.graphics.drawable.Drawable;
-import android.test.AndroidTestCase;
-import android.widget.ImageView;
-
-import static org.mockito.Matchers.any;
-import static org.mockito.Matchers.anyInt;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.verifyNoMoreInteractions;
-import static org.mockito.Mockito.when;
-
-public class OverlayImageViewTest extends AndroidTestCase {
-    public static final int[] TEST_STATE = new int[]{0, 0};
-    public static final int TEST_HEIGHT = 2;
-    public static final int TEST_WIDTH = 4;
-
-    public void testOnDraw() {
-        final OverlayImageView overlayImageView = new OverlayImageView(getContext());
-        final OverlayImageView.Overlay overlay = mock(OverlayImageView.Overlay.class);
-        final Canvas canvas = new Canvas();
-        overlayImageView.overlay = overlay;
-        overlayImageView.draw(canvas);
-
-        verify(overlay).draw(canvas);
-    }
-
-    public void testDrawableStateChanged() {
-        final OverlayImageView overlayImageView = new OverlayImageView(getContext());
-        final OverlayImageView.Overlay overlay = mock(OverlayImageView.Overlay.class);
-        overlayImageView.overlay = overlay;
-        overlayImageView.drawableStateChanged();
-
-        verify(overlay).setDrawableState(any(int[].class));
-    }
-
-    public void testOnMeasure() {
-        final OverlayImageView overlayImageView = new OverlayImageView(getContext());
-        final OverlayImageView.Overlay overlay = mock(OverlayImageView.Overlay.class);
-        overlayImageView.overlay = overlay;
-        overlayImageView.measure(0, 0);
-
-        verify(overlay).setDrawableBounds(anyInt(), anyInt());
-    }
-
-    public void testOnSizeChanged() {
-        final OverlayImageView overlayImageView = new OverlayImageView(getContext());
-        final OverlayImageView.Overlay overlay = mock(OverlayImageView.Overlay.class);
-        overlayImageView.overlay = overlay;
-        overlayImageView.onSizeChanged(TEST_WIDTH, TEST_HEIGHT, 0, 0);
-
-        verify(overlay).setDrawableBounds(TEST_WIDTH, TEST_HEIGHT);
-    }
-
-    public void testSetOverlayDrawable() {
-        final OverlayImageView overlayImageView = new OverlayImageView(getContext());
-        final OverlayImageView.Overlay overlay = mock(OverlayImageView.Overlay.class);
-        overlayImageView.overlay = overlay;
-        final Drawable drawable = mock(Drawable.class);
-        overlayImageView.setOverlayDrawable(drawable);
-
-        verify(overlay).cleanupDrawable(overlayImageView);
-        assertNotNull(overlayImageView.overlay);
-        assertEquals(drawable, overlayImageView.overlay.drawable);
-    }
-
-    public void testSetOverlayDrawable_nullDrawable() {
-        final OverlayImageView overlayImageView = new OverlayImageView(getContext());
-        final OverlayImageView.Overlay overlay = mock(OverlayImageView.Overlay.class);
-        overlayImageView.overlay = overlay;
-        overlayImageView.setOverlayDrawable(null);
-
-        verifyNoMoreInteractions(overlay);
-    }
-
-    public void testOverlayDraw() {
-        final Drawable drawable = mock(Drawable.class);
-        final OverlayImageView.Overlay overlay = new OverlayImageView.Overlay(drawable);
-        final Canvas canvas = new Canvas();
-        overlay.draw(canvas);
-
-        verify(drawable).draw(canvas);
-    }
-
-    public void testOverlaySetDrawableState() {
-        final Drawable drawable = mock(Drawable.class);
-        when(drawable.isStateful()).thenReturn(true);
-        final OverlayImageView.Overlay overlay = new OverlayImageView.Overlay(drawable);
-        overlay.setDrawableState(TEST_STATE);
-
-        verify(drawable).isStateful();
-        verify(drawable).setState(TEST_STATE);
-    }
-
-    public void testOverlaySetDrawableState_drawableNotStateful() {
-        final Drawable drawable = mock(Drawable.class);
-        when(drawable.isStateful()).thenReturn(false);
-        final OverlayImageView.Overlay overlay = new OverlayImageView.Overlay(drawable);
-        overlay.setDrawableState(TEST_STATE);
-
-        verify(drawable).isStateful();
-        verifyNoMoreInteractions(drawable);
-    }
-
-    public void testOverlaySetDrawableBounds() {
-        final Drawable drawable = mock(Drawable.class);
-        final OverlayImageView.Overlay overlay = new OverlayImageView.Overlay(drawable);
-        overlay.setDrawableBounds(TEST_WIDTH, TEST_HEIGHT);
-
-        verify(drawable).setBounds(0, 0, TEST_WIDTH, TEST_HEIGHT);
-    }
-
-    public void testCleanupDrawable() {
-        final ImageView imageView = mock(ImageView.class);
-        final Drawable drawable = mock(Drawable.class);
-        final OverlayImageView.Overlay overlay = new OverlayImageView.Overlay(drawable);
-        overlay.cleanupDrawable(imageView);
-
-        verify(imageView).unscheduleDrawable(drawable);
-    }
-}
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/internal/VideoControlViewTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/internal/VideoControlViewTest.java
deleted file mode 100644
index a48be453..00000000
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/internal/VideoControlViewTest.java
+++ /dev/null
@@ -1,177 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.test.AndroidTestCase;
-import android.view.View;
-import android.widget.ImageButton;
-import android.widget.SeekBar;
-
-import com.twitter.sdk.android.tweetui.R;
-
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.verifyNoMoreInteractions;
-import static org.mockito.Mockito.when;
-
-public class VideoControlViewTest extends AndroidTestCase {
-    static final int SECOND_IN_MS = 1000;
-    static final int MINUTE_IN_MS = 60000;
-    static final int TEST_BUFFER_PROGRESS = 32;
-    VideoControlView videoControlView;
-
-    public void setUp() throws Exception {
-        super.setUp();
-        videoControlView = new VideoControlView(getContext());
-        videoControlView.onFinishInflate();
-    }
-
-    public void testInitialState() {
-        assertTrue(videoControlView.getVisibility() == View.VISIBLE);
-        assertNotNull(videoControlView.seekBar);
-        assertNotNull(videoControlView.duration);
-        assertNotNull(videoControlView.currentTime);
-        assertNotNull(videoControlView.stateControl);
-        assertNull(videoControlView.player);
-
-        assertEquals(1000, videoControlView.seekBar.getMax());
-        assertEquals(0, videoControlView.seekBar.getProgress());
-        assertEquals(0, videoControlView.seekBar.getSecondaryProgress());
-
-        assertEquals("0:00", videoControlView.duration.getText());
-        assertEquals("0:00", videoControlView.currentTime.getText());
-    }
-
-    public void testCreateStateControlClickListener() {
-        final VideoControlView.MediaPlayerControl player =
-                mock(VideoControlView.MediaPlayerControl.class);
-        videoControlView.setMediaPlayer(player);
-
-        final View.OnClickListener listener = videoControlView.createStateControlClickListener();
-
-        when(player.isPlaying()).thenReturn(false);
-        listener.onClick(null);
-        verify(player).start();
-
-        when(player.isPlaying()).thenReturn(true);
-        listener.onClick(null);
-        verify(player).pause();
-    }
-
-    public void testCreateProgressChangeListener() {
-        final VideoControlView.MediaPlayerControl player =
-                mock(VideoControlView.MediaPlayerControl.class);
-        videoControlView.setMediaPlayer(player);
-
-        final SeekBar.OnSeekBarChangeListener listener =
-                videoControlView.createProgressChangeListener();
-
-        when(player.getDuration()).thenReturn(MINUTE_IN_MS);
-        listener.onProgressChanged(null, 500, true);
-        verify(player).seekTo(30000);
-        assertEquals("0:30", videoControlView.currentTime.getText());
-    }
-
-    public void testCreateProgressChangeListener_fromUserFalse() {
-        final VideoControlView.MediaPlayerControl player =
-                mock(VideoControlView.MediaPlayerControl.class);
-        videoControlView.setMediaPlayer(player);
-
-        final SeekBar.OnSeekBarChangeListener listener =
-                videoControlView.createProgressChangeListener();
-
-        when(player.getDuration()).thenReturn(MINUTE_IN_MS);
-        listener.onProgressChanged(null, 500, false);
-        verifyNoMoreInteractions(player);
-    }
-
-    public void testIsShowing() {
-        assertTrue(videoControlView.isShowing());
-    }
-
-    public void testUpdateProgress() {
-        final VideoControlView.MediaPlayerControl player =
-                mock(VideoControlView.MediaPlayerControl.class);
-        when(player.getCurrentPosition()).thenReturn(SECOND_IN_MS);
-        when(player.getDuration()).thenReturn(MINUTE_IN_MS);
-        when(player.getBufferPercentage()).thenReturn(50);
-        videoControlView.setMediaPlayer(player);
-
-        videoControlView.updateProgress();
-
-        assertEquals(16, videoControlView.seekBar.getProgress());
-        assertEquals(500, videoControlView.seekBar.getSecondaryProgress());
-
-        assertEquals("1:00", videoControlView.duration.getText());
-        assertEquals("0:01", videoControlView.currentTime.getText());
-    }
-
-    public void testSetDuration() {
-        videoControlView.setDuration(SECOND_IN_MS);
-        assertEquals("0:01", videoControlView.duration.getText());
-    }
-
-    public void testSetCurrentTime() {
-        videoControlView.setCurrentTime(SECOND_IN_MS);
-        assertEquals("0:01", videoControlView.currentTime.getText());
-    }
-
-    public void testSetSeekBarProgress() {
-        videoControlView.setProgress(SECOND_IN_MS, MINUTE_IN_MS, TEST_BUFFER_PROGRESS);
-        assertEquals(16, videoControlView.seekBar.getProgress());
-        assertEquals(320, videoControlView.seekBar.getSecondaryProgress());
-    }
-
-    public void testSetSeekBarProgress_zeroDuration() {
-        videoControlView.setProgress(SECOND_IN_MS, 0, TEST_BUFFER_PROGRESS);
-        assertEquals(0, videoControlView.seekBar.getProgress());
-        assertEquals(320, videoControlView.seekBar.getSecondaryProgress());
-    }
-
-    public void testSetPlayDrawable() {
-        videoControlView.stateControl = mock(ImageButton.class);
-        videoControlView.setPlayDrawable();
-
-        verify(videoControlView.stateControl).setImageResource(R.drawable.tw__video_play_btn);
-        verify(videoControlView.stateControl)
-                .setContentDescription(getContext().getString(R.string.tw__play));
-    }
-
-    public void testSetPauseDrawable() {
-        videoControlView.stateControl = mock(ImageButton.class);
-        videoControlView.setPauseDrawable();
-
-        verify(videoControlView.stateControl).setImageResource(R.drawable.tw__video_pause_btn);
-        verify(videoControlView.stateControl)
-                .setContentDescription(getContext().getString(R.string.tw__pause));
-    }
-
-    public void testSetReplayDrawable() {
-        videoControlView.stateControl = mock(ImageButton.class);
-        videoControlView.setReplayDrawable();
-
-        verify(videoControlView.stateControl).setImageResource(R.drawable.tw__video_replay_btn);
-        verify(videoControlView.stateControl)
-                .setContentDescription(getContext().getString(R.string.tw__replay));
-    }
-
-    public void testSetMediaPlayer() {
-        videoControlView.setMediaPlayer(mock(VideoControlView.MediaPlayerControl.class));
-        assertNotNull(videoControlView.player);
-    }
-}
diff --git a/tweet-ui/src/debug/AndroidManifest.xml b/tweet-ui/src/debug/AndroidManifest.xml
deleted file mode 100644
index c6bf5bcd..00000000
--- a/tweet-ui/src/debug/AndroidManifest.xml
+++ /dev/null
@@ -1,29 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          xmlns:tools="http://schemas.android.com/tools"
-          package="com.twitter.sdk.android.tweetui">
-
-    <application
-        android:allowBackup="true"
-        android:largeHeap="true"
-        tools:ignore="UnusedAttribute">
-
-        <uses-library android:name="android.test.runner" />
-    </application>
-</manifest>
diff --git a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/EntityFactory.java b/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/EntityFactory.java
deleted file mode 100644
index 0c11d38e..00000000
--- a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/EntityFactory.java
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.models.HashtagEntity;
-import com.twitter.sdk.android.core.models.MentionEntity;
-import com.twitter.sdk.android.core.models.SymbolEntity;
-import com.twitter.sdk.android.core.models.UrlEntity;
-
-class EntityFactory {
-
-    public static UrlEntity newUrlEntity(String text, String url, String displayUrl) {
-        final int start = text.length() - url.length();
-        final int end = text.length();
-
-        return new UrlEntity(url, "http://" + displayUrl, displayUrl, start, end);
-    }
-
-    public static HashtagEntity newHashtagEntity(String text, String hashtag) {
-        final int start = text.length() - hashtag.length() - 1;
-        final int end = text.length();
-
-        return new HashtagEntity(hashtag, start, end);
-    }
-
-    public static MentionEntity newMentionEntity(String text, String screenName) {
-        final int start = text.length() - screenName.length() - 1;
-        final int end = text.length();
-
-        return new MentionEntity(100, "100", screenName, screenName, start, end);
-    }
-
-    public static SymbolEntity newSymbolEntity(String text, String symbol) {
-        final int start = text.length() - symbol.length() - 1;
-        final int end = text.length();
-
-        return new SymbolEntity(symbol, start, end);
-    }
-}
diff --git a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestDependencyProvider.java b/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestDependencyProvider.java
deleted file mode 100644
index cc64d887..00000000
--- a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestDependencyProvider.java
+++ /dev/null
@@ -1,32 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.squareup.picasso.Picasso;
-
-public class TestDependencyProvider extends BaseTweetView.DependencyProvider {
-    @Override
-    public TweetUi getTweetUi() {
-        return super.getTweetUi();
-    }
-
-    @Override
-    public Picasso getImageLoader() {
-        return super.getImageLoader();
-    }
-}
diff --git a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestFixtures.java b/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestFixtures.java
deleted file mode 100644
index 49424837..00000000
--- a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestFixtures.java
+++ /dev/null
@@ -1,320 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.net.Uri;
-
-import com.twitter.sdk.android.core.internal.VineCardUtils;
-import com.twitter.sdk.android.core.models.BindingValues;
-import com.twitter.sdk.android.core.models.Card;
-import com.twitter.sdk.android.core.models.HashtagEntity;
-import com.twitter.sdk.android.core.models.ImageValue;
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.core.models.MentionEntity;
-import com.twitter.sdk.android.core.models.SymbolEntity;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetBuilder;
-import com.twitter.sdk.android.core.models.TweetEntities;
-import com.twitter.sdk.android.core.models.UrlEntity;
-import com.twitter.sdk.android.core.models.User;
-import com.twitter.sdk.android.core.models.UserBuilder;
-import com.twitter.sdk.android.core.models.UserValue;
-import com.twitter.sdk.android.core.models.VideoInfo;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-public final class TestFixtures {
-    public static final String CONSUMER_KEY = "consumer_key";
-    public static final String CONSUMER_SECRET = "test_secret";
-    public static final String EMPTY_STRING = "";
-    public static final long TEST_TWEET_ID = 467360037434712064L;
-
-    public static final String TEST_NAME = "Alfred Verbose Named";
-    public static final String TEST_RETWEETER_NAME = "Mr Retweets";
-
-    public static final String TEST_SCREEN_NAME = "longestusername";
-    public static final String TEST_FORMATTED_SCREEN_NAME = "@longestusername";
-    public static final String TEST_RETWEETER_SCREEN_NAME = "retweets";
-    public static final String TEST_PROFILE_IMAGE_URL = "https://twimg.twitter.com/image";
-
-    public static final User TEST_USER = new UserBuilder()
-            .setId(12L)
-            .setName(TEST_NAME)
-            .setScreenName(TEST_SCREEN_NAME)
-            .setVerified(false)
-            .setProfileImageUrlHttps(TEST_PROFILE_IMAGE_URL)
-            .build();
-
-    public static final User TEST_RETWEETER = new UserBuilder()
-            .setId(13L)
-            .setName(TEST_RETWEETER_NAME)
-            .setScreenName(TEST_RETWEETER_SCREEN_NAME)
-            .setProfileImageUrlHttps(TEST_PROFILE_IMAGE_URL)
-            .build();
-
-    public static final User EMPTY_USER = new UserBuilder()
-            .setId(-1L)
-            .setName("")
-            .setScreenName("")
-            .setVerified(false)
-            .build();
-
-    public static final String TEST_STATUS = "A test Tweet status message.";
-    public static final String EMPTY_STATUS = "";
-
-    public static final String TEST_TIMESTAMP = "Wed Jun 06 20:07:10 +0000 2012";
-    public static final String TIMESTAMP_RENDERED = "• 06/06/12";
-    public static final String EMPTY_TIMESTAMP = "";
-    public static final String INVALID_TIMESTAMP_INPUT = "Dec 12, 2013";
-
-    public static final String TEST_PHOTO_URL = "https://pbs.twimg.com/media/someimage.jpg";
-    public static final String TEST_URL = "https://twitter.com/";
-    public static final String TEST_HASHTAG = "https://twitter.com/search?q=" + Uri.encode("#") + "TwitterForGood";
-    public static final String TEST_STATUS_WITH_LINK = "A test Tweet status message. " + TEST_URL;
-    public static final String TEST_STATUS_WITH_HASHTAG = "A test Tweet status message. " + TEST_HASHTAG;
-
-    public static final String TEST_CONTENT_DESCRIPTION
-            = "Alfred Verbose Named. A test Tweet status message.. Jun 6, 2012.";
-
-    public static final String TEST_PERMALINK_ONE =
-            "https://twitter.com/longestusername/status/1?ref_src=twsrc%5Etwitterkit";
-    public static final String TEST_PERMALINK_TWO =
-            "https://twitter.com/longestusername/status/2?ref_src=twsrc%5Etwitterkit";
-    public static final String TEST_PERMALINK_UNKNOWN_USER
-            = "https://twitter.com/twitter_unknown/status/1?ref_src=twsrc%5Etwitterkit";
-
-    public static final Tweet TEST_TWEET = createTweet(1L, TEST_USER, TEST_STATUS, TEST_TIMESTAMP,
-            false);
-    public static final Tweet TEST_TWEET_LINK = createTweet(1L, TEST_USER, TEST_STATUS_WITH_LINK, TEST_TIMESTAMP,
-            false);
-    public static final Tweet TEST_TWEET_HASHTAG = createTweet(1L, TEST_USER, TEST_STATUS_WITH_HASHTAG, TEST_TIMESTAMP,
-            false);
-    public static final Tweet TEST_FAVORITED_TWEET = createTweet(1L, TEST_USER, TEST_STATUS,
-            TEST_TIMESTAMP, true);
-    public static final Tweet TEST_PHOTO_TWEET = createPhotoTweet(2L, TEST_USER, TEST_STATUS,
-            TEST_TIMESTAMP, TEST_PHOTO_URL);
-    public static final Tweet TEST_MULTIPLE_PHOTO_TWEET = createMultiplePhotosTweet(4, 2L, TEST_USER, TEST_STATUS,
-            TEST_TIMESTAMP, TEST_PHOTO_URL);
-    // Empty Tweet has empty string name, username, status, and timestamp fields
-    public static final Tweet EMPTY_TWEET = createTweet(-1L, EMPTY_USER, EMPTY_STATUS,
-            EMPTY_TIMESTAMP, false);
-    public static final Tweet INVALID_TIMESTAMP_TWEET = createTweet(3L, EMPTY_USER, EMPTY_STATUS,
-            INVALID_TIMESTAMP_INPUT, false);
-    public static final Tweet TEST_RETWEET = createRetweet(4L, TEST_RETWEETER, TEST_TWEET);
-
-    public static final List<Long> TWEET_IDS = new ArrayList<>();
-    public static final List<Long> DUPLICATE_TWEET_IDS = new ArrayList<>();
-    public static final List<Tweet> UNORDERED_TWEETS = new ArrayList<>();
-    public static final List<Tweet> ORDERED_TWEETS = new ArrayList<>();
-    public static final List<Tweet> ORDERED_DUPLICATE_TWEETS = new ArrayList<>();
-    public static final List<Tweet> UNORDERED_DUPLICATE_TWEETS = new ArrayList<>();
-    public static final List<Tweet> UNORDERED_MISSING_TWEETS = new ArrayList<>();
-    public static final List<Tweet> ORDERED_MISSING_TWEETS = new ArrayList<>();
-
-    public static final BindingValues TEST_BINDING_VALUES =
-            new BindingValues(Collections.emptyMap());
-    public static final String PLAYER_CARD_VINE = VineCardUtils.VINE_CARD;
-    public static final String TEST_VINE_USER_ID = "586671909";
-
-    static {
-        TWEET_IDS.addAll(Arrays.asList(100L, 101L, 102L));
-        DUPLICATE_TWEET_IDS.addAll(Arrays.asList(100L, 101L, 102L, 101L));
-        addTweetsWithId(UNORDERED_TWEETS, Arrays.asList(101L, 102L, 100L));
-        addTweetsWithId(ORDERED_TWEETS, Arrays.asList(100L, 101L, 102L));
-        addTweetsWithId(ORDERED_DUPLICATE_TWEETS, Arrays.asList(100L, 101L, 102L, 101L));
-        addTweetsWithId(UNORDERED_DUPLICATE_TWEETS, Arrays.asList(101L, 102L, 101L, 102L, 100L));
-        addTweetsWithId(UNORDERED_MISSING_TWEETS, Arrays.asList(102L, 101L));
-        addTweetsWithId(ORDERED_MISSING_TWEETS, Arrays.asList(101L, 102L));
-    }
-
-    private TestFixtures() {}
-
-    public static Tweet createTweet(long id) {
-        return createTweet(id, null, "", "", false);
-    }
-
-    static Tweet createTweet(long id, User user, String text, String timestamp,
-            boolean isFavorited) {
-        return new TweetBuilder()
-                .setId(id)
-                .setUser(user)
-                .setText(text)
-                .setCreatedAt(timestamp)
-                .setFavorited(isFavorited)
-                .setEntities(new TweetEntities(null, null, null, null, null))
-                .build();
-    }
-
-    static Tweet createPhotoTweet(long id, User user, String text, String timestamp,
-            String photoUrlHttps) {
-        final MediaEntity photoEntity = new MediaEntity("", "", "", 0, 0, 0L, null, null,
-                photoUrlHttps, createMediaEntitySizes(100, 100), 0L, null, "photo", null, "");
-        final ArrayList<MediaEntity> mediaEntities = new ArrayList<>();
-        mediaEntities.add(photoEntity);
-        final TweetEntities entities = new TweetEntities(null, null, mediaEntities, null, null);
-        return new TweetBuilder()
-                .setId(id)
-                .setUser(user)
-                .setText(text)
-                .setCreatedAt(timestamp)
-                .setEntities(entities)
-                .setExtendedEntities(entities)
-                .build();
-    }
-
-    static Tweet createMultiplePhotosTweet(int count, long id, User user, String text,
-                                                  String timestamp, String photoUrlHttps) {
-        final ArrayList<MediaEntity> mediaEntities = new ArrayList<>();
-        for (int x = 0; x < count; x++) {
-            final MediaEntity photoEntity = new MediaEntity("", "", "", 0, 0, 0L, null, null,
-                    photoUrlHttps, createMediaEntitySizes(100, 100), 0L, null, "photo", null, "");
-            mediaEntities.add(photoEntity);
-        }
-        final TweetEntities entities = new TweetEntities(null, null, mediaEntities, null, null);
-        return new TweetBuilder()
-                .setId(id)
-                .setUser(user)
-                .setText(text)
-                .setCreatedAt(timestamp)
-                .setEntities(entities)
-                .setExtendedEntities(entities)
-                .build();
-    }
-
-    static Tweet createRetweet(long id, User retweeter, Tweet retweetedStatus) {
-        return new TweetBuilder()
-                .setId(id)
-                .setUser(retweeter)
-                .setRetweetedStatus(retweetedStatus)
-                .build();
-    }
-
-    public static Tweet createTweetWithVineCard(long id, User user, String text, Card card) {
-        return new TweetBuilder()
-                .setId(id)
-                .setCard(card)
-                .setText(text)
-                .setUser(user)
-                .build();
-    }
-
-    static void addTweetsWithId(List<Tweet> tweets, List<Long> tweetIds) {
-        for (long tweetId : tweetIds) {
-            tweets.add(createTweet(tweetId));
-        }
-    }
-
-    public static UrlEntity newUrlEntity(int start, int end) {
-        return new UrlEntity("url", "expandedUrl", "displayUrl", start, end);
-    }
-
-    public static MediaEntity newMediaEntity(int start, int end, String type) {
-        return newMediaEntity(start, end, type, 0);
-    }
-
-    public static MediaEntity newMediaEntity(int start, int end, String type,
-                                             int durationInMillis) {
-        final VideoInfo videoInfo =
-                new VideoInfo(Collections.EMPTY_LIST, durationInMillis, Collections.EMPTY_LIST);
-        return new MediaEntity("url", "expandedUrl", "displayUrl", start, end, 0L, "0", "mediaUrl",
-                "mediaUrlHttps", null, 0L, "0", type, videoInfo, "");
-    }
-
-    public static HashtagEntity newHashtagEntity(String text, int start, int end) {
-        return new HashtagEntity(text, start, end);
-    }
-
-    public static MentionEntity newMentionEntity(String screenName, int start, int end) {
-        return new MentionEntity(100, "100", screenName, screenName, start, end);
-    }
-
-    public static SymbolEntity newSymbolEntity(String symbol, int start, int end) {
-        return new SymbolEntity(symbol, start, end);
-    }
-
-    public static List<Tweet> getTweetList(long count) {
-        final List<Tweet> tweets = new ArrayList<>();
-        for (int i = 0; i < count; i++) {
-            // add 1000 just so ids are clearly distinct from position
-            tweets.add(TestFixtures.createTweet(1000 + i));
-        }
-        return tweets;
-    }
-
-    public static List<MediaEntity> createMultipleMediaEntitiesWithPhoto(int count, int w, int h) {
-        final List<MediaEntity> mediaEntities = new ArrayList<>(count);
-        for (int i = 0; i < count; i++) {
-            final MediaEntity mediaEntityWithPhoto = createMediaEntityWithPhoto(w, h);
-            mediaEntities.add(mediaEntityWithPhoto);
-        }
-        return mediaEntities;
-    }
-
-    public static MediaEntity createMediaEntityWithPhoto(int width, int height) {
-        return createMediaEntityWithPhoto(createMediaEntitySizes(width, height));
-    }
-
-    public static MediaEntity createMediaEntityWithPhoto(MediaEntity.Sizes sizes) {
-        return new MediaEntity(null, null, null, 0, 0, 0L, null, null, null, sizes, 0L, null,
-                "photo", null, "");
-    }
-
-    public static MediaEntity.Sizes createMediaEntitySizes(int width, int height) {
-        final MediaEntity.Size medium = new MediaEntity.Size(width, height, "fit");
-        return new MediaEntity.Sizes(null, null, medium, null);
-    }
-
-    public static MediaEntity createEntityWithVideo(VideoInfo videoInfo) {
-        return new MediaEntity(null, null, null, 0, 0, 0L, null, null, null, null, 0L, null,
-                "video", videoInfo, "");
-    }
-
-    public static MediaEntity createEntityWithAnimatedGif(VideoInfo videoInfo) {
-        return new MediaEntity(null, null, null, 0, 0, 0L, null, null, null, null, 0L, null,
-                "animated_gif", videoInfo, "");
-    }
-
-    public static VideoInfo createVideoInfoWithVariant(VideoInfo.Variant variant) {
-        return new VideoInfo(null, 0, Collections.singletonList(variant));
-    }
-
-    public static Card sampleInvalidVineCard() {
-        return new Card(TEST_BINDING_VALUES, "invalid");
-    }
-
-    public static Card sampleValidVineCard() {
-        return new Card(createBindingValuesForCard(), PLAYER_CARD_VINE);
-    }
-
-    public static BindingValues createBindingValuesForCard() {
-        final UserValue testUser = new UserValue(TEST_VINE_USER_ID);
-        final Map<String, Object> testValues = new HashMap<>();
-        testValues.put("site", testUser);
-
-        final ImageValue imageValue = new ImageValue(10, 10, TEST_PHOTO_URL, "");
-        testValues.put("player_image", imageValue);
-        testValues.put("player_stream_url", TEST_URL);
-
-        return new BindingValues(testValues);
-    }
-}
diff --git a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestTweetActionBarView.java b/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestTweetActionBarView.java
deleted file mode 100644
index 0c3762ab..00000000
--- a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestTweetActionBarView.java
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-
-import com.twitter.sdk.android.core.models.Tweet;
-
-public class TestTweetActionBarView extends TweetActionBarView {
-
-    public TestTweetActionBarView(Context context) {
-        super(context);
-    }
-
-    @Override
-    public void setTweet(Tweet tweet) {
-        super.setTweet(tweet);
-    }
-
-    @Override
-    public void setLike(Tweet tweet) {
-        super.setLike(tweet);
-    }
-}
diff --git a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestUtils.java b/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestUtils.java
deleted file mode 100644
index 10fdd7f5..00000000
--- a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestUtils.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.content.res.Configuration;
-import android.content.res.Resources;
-import android.graphics.drawable.ColorDrawable;
-import android.widget.ImageView;
-
-import java.util.Locale;
-
-public final class TestUtils {
-
-    private TestUtils() {}
-
-    /**
-     * Sets global locale
-     * @param locale Locale to set
-     */
-    public static Locale setLocale(Context context, Locale locale) {
-        final Resources res = context.getResources();
-        final Configuration config = res.getConfiguration();
-        final Locale originalLocale = config.locale;
-
-        Locale.setDefault(locale);
-        config.locale = locale;
-        res.updateConfiguration(config, res.getDisplayMetrics());
-        return originalLocale;
-    }
-
-
-    /**
-     * Gets the color of the ImageView's ColorDrawable or 0 for API &lt; 11.
-     * @param imageView an ImageView with a ColorDrawable
-     * @return int color of the ImageView
-     */
-    public static int getDrawableColor(ImageView imageView) {
-        final ColorDrawable drawable = (ColorDrawable) imageView.getDrawable();
-        return drawable.getColor();
-    }
-
-    public static int getBackgroundColor(ImageView imageView) {
-        final ColorDrawable drawable = (ColorDrawable) imageView.getBackground();
-        return drawable.getColor();
-    }
-}
diff --git a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TweetAsserts.java b/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TweetAsserts.java
deleted file mode 100644
index 7ca3e0fa..00000000
--- a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TweetAsserts.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.res.Resources;
-
-import junit.framework.Assert;
-
-/**
- * Common shared utilities for testing.
- */
-public final class TweetAsserts extends Assert {
-    private TweetAsserts() {}
-
-    public static void assertDefaultColors(BaseTweetView view, Resources resources) {
-        final int containerColor
-                = resources.getColor(R.color.tw__tweet_light_container_bg_color);
-        final int primaryTextColor
-                = resources.getColor(R.color.tw__tweet_light_primary_text_color);
-
-        assertEquals(containerColor, view.containerBgColor);
-        assertEquals(primaryTextColor, view.primaryTextColor);
-        assertEquals(primaryTextColor, view.contentView.getCurrentTextColor());
-        assertEquals(primaryTextColor, view.fullNameView.getCurrentTextColor());
-        assertEquals(R.drawable.tw__ic_tweet_photo_error_light, view.photoErrorResId);
-        assertEquals(R.drawable.tw__ic_logo_blue, view.birdLogoResId);
-    }
-
-    public static void assertDarkColors(BaseTweetView view, Resources resources) {
-        final int containerColor
-                = resources.getColor(R.color.tw__tweet_dark_container_bg_color);
-        final int primaryTextColor
-                = resources.getColor(R.color.tw__tweet_dark_primary_text_color);
-
-        assertEquals(containerColor, view.containerBgColor);
-        assertEquals(primaryTextColor, view.primaryTextColor);
-        assertEquals(primaryTextColor, view.contentView.getCurrentTextColor());
-        assertEquals(primaryTextColor, view.fullNameView.getCurrentTextColor());
-        assertEquals(R.drawable.tw__ic_tweet_photo_error_dark, view.photoErrorResId);
-        assertEquals(R.drawable.tw__ic_logo_white, view.birdLogoResId);
-    }
-}
diff --git a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TweetUiTestUtils.java b/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TweetUiTestUtils.java
deleted file mode 100644
index 516be6c8..00000000
--- a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TweetUiTestUtils.java
+++ /dev/null
@@ -1,24 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-public class TweetUiTestUtils {
-    public static void resetTweetUi() {
-        TweetUi.instance = null;
-    }
-}
diff --git a/tweet-ui/src/debug/res/layout/activity_invalid_tweet_id.xml b/tweet-ui/src/debug/res/layout/activity_invalid_tweet_id.xml
deleted file mode 100644
index e384bf57..00000000
--- a/tweet-ui/src/debug/res/layout/activity_invalid_tweet_id.xml
+++ /dev/null
@@ -1,32 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<merge xmlns:android="http://schemas.android.com/apk/res/android"
-       xmlns:twittersdk="http://schemas.android.com/apk/res-auto"
-       android:layout_width="match_parent"
-       android:layout_height="match_parent"
-       xmlns:tools="http://schemas.android.com/tools"
-       tools:ignore="UnusedResources">
-
-    <com.twitter.sdk.android.tweetui.TweetView
-        android:id="@+id/invalid_tweet_view"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        twittersdk:tw__tweet_id="abc"/>
-</merge>
\ No newline at end of file
diff --git a/tweet-ui/src/debug/res/layout/activity_tweet_actions_enabled.xml b/tweet-ui/src/debug/res/layout/activity_tweet_actions_enabled.xml
deleted file mode 100644
index 576c5e2d..00000000
--- a/tweet-ui/src/debug/res/layout/activity_tweet_actions_enabled.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<merge xmlns:android="http://schemas.android.com/apk/res/android"
-       xmlns:twittersdk="http://schemas.android.com/apk/res-auto"
-       android:layout_width="match_parent"
-       android:layout_height="match_parent"
-       xmlns:tools="http://schemas.android.com/tools"
-       tools:ignore="UnusedResources">
-
-    <com.twitter.sdk.android.tweetui.TweetView
-        android:id="@+id/tweet_view"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        twittersdk:tw__tweet_actions_enabled="true"
-        twittersdk:tw__tweet_id="1" />
-</merge>
diff --git a/tweet-ui/src/debug/res/layout/activity_tweet_view_test.xml b/tweet-ui/src/debug/res/layout/activity_tweet_view_test.xml
deleted file mode 100644
index c7644bd2..00000000
--- a/tweet-ui/src/debug/res/layout/activity_tweet_view_test.xml
+++ /dev/null
@@ -1,55 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<merge
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:twittersdk="http://schemas.android.com/apk/res-auto"
-    android:layout_height="match_parent"
-    android:layout_width="match_parent"
-    xmlns:tools="http://schemas.android.com/tools"
-    tools:ignore="UnusedResources">
-
-    <!--XML Fixtures-->
-
-    <com.twitter.sdk.android.tweetui.TweetView
-        android:id="@+id/tweet_view"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        twittersdk:tw__tweet_id="1"/>
-
-    <com.twitter.sdk.android.tweetui.CompactTweetView
-        android:id="@+id/compact_tweet_view"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        twittersdk:tw__tweet_id="1"/>
-
-    <!--dark style-->
-
-    <com.twitter.sdk.android.tweetui.TweetView
-        android:id="@+id/tweet_view_dark"
-        style="@style/tw__TweetDarkStyle"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        twittersdk:tw__tweet_id="1"/>
-
-    <com.twitter.sdk.android.tweetui.CompactTweetView
-        android:id="@+id/compact_tweet_view_dark"
-        style="@style/tw__TweetDarkStyle"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        twittersdk:tw__tweet_id="1"/>
-</merge>
diff --git a/tweet-ui/src/debug/res/values/styles.xml b/tweet-ui/src/debug/res/values/styles.xml
deleted file mode 100644
index e9fa25dd..00000000
--- a/tweet-ui/src/debug/res/values/styles.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <style name="tw__TweetActionsEnabled">
-        <item name="tw__tweet_actions_enabled">true</item>
-    </style>
-
-    <style name="tw__TweetActionsDisabled">
-        <item name="tw__tweet_actions_enabled">false</item>
-    </style>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/AndroidManifest.xml b/tweet-ui/src/main/AndroidManifest.xml
deleted file mode 100644
index e7d5b037..00000000
--- a/tweet-ui/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,34 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<manifest
-    package="com.twitter.sdk.android.tweetui"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <uses-permission android:name="android.permission.INTERNET"/>
-
-    <application>
-        <activity
-            android:name=".PlayerActivity"
-            android:configChanges="keyboardHidden|orientation|screenSize"
-            android:theme="@style/MediaTheme"/>
-        <activity
-            android:name=".GalleryActivity"
-            android:theme="@style/MediaTheme"/>
-    </application>
-
-</manifest>
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/AbstractTweetView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/AbstractTweetView.java
deleted file mode 100644
index 6157fb85..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/AbstractTweetView.java
+++ /dev/null
@@ -1,444 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.annotation.TargetApi;
-import android.content.Context;
-import android.content.Intent;
-import android.net.Uri;
-import android.os.Build;
-import android.text.TextUtils;
-import android.util.AttributeSet;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.ImageView;
-import android.widget.RelativeLayout;
-import android.widget.TextView;
-
-import com.squareup.picasso.Picasso;
-import com.twitter.sdk.android.core.IntentUtils;
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.internal.UserUtils;
-import com.twitter.sdk.android.core.internal.VineCardUtils;
-import com.twitter.sdk.android.core.models.Card;
-import com.twitter.sdk.android.core.models.ImageValue;
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.internal.AspectRatioFrameLayout;
-import com.twitter.sdk.android.tweetui.internal.MediaBadgeView;
-import com.twitter.sdk.android.tweetui.internal.SpanClickHandler;
-import com.twitter.sdk.android.tweetui.internal.TweetMediaUtils;
-import com.twitter.sdk.android.tweetui.internal.TweetMediaView;
-
-import java.text.DateFormat;
-import java.util.Collections;
-import java.util.Date;
-import java.util.List;
-
-
-abstract class AbstractTweetView extends RelativeLayout{
-    static final String TAG = TweetUi.LOGTAG;
-    static final int DEFAULT_STYLE = R.style.tw__TweetLightStyle;
-    static final String EMPTY_STRING = "";
-    static final double DEFAULT_ASPECT_RATIO = 16.0 / 9.0;
-
-    static final double SECONDARY_TEXT_COLOR_LIGHT_OPACITY = 0.4;
-    static final double SECONDARY_TEXT_COLOR_DARK_OPACITY = 0.35;
-    static final double MEDIA_BG_LIGHT_OPACITY = 0.08;
-    static final double MEDIA_BG_DARK_OPACITY = 0.12;
-
-    static final long INVALID_ID = -1L;
-
-    // Dependency Provider
-    final DependencyProvider dependencyProvider;
-
-    // attributes
-    private LinkClickListener linkClickListener;
-    TweetLinkClickListener tweetLinkClickListener;
-    TweetMediaClickListener tweetMediaClickListener;
-    private Uri permalinkUri;
-    Tweet tweet;
-
-    // for testing
-    int styleResId;
-    boolean tweetActionsEnabled;
-
-    // layout views
-    TextView fullNameView;
-    TextView screenNameView;
-    AspectRatioFrameLayout mediaContainer;
-    TweetMediaView tweetMediaView;
-    TextView contentView;
-    MediaBadgeView mediaBadgeView;
-
-    // color values
-    int primaryTextColor;
-    int secondaryTextColor;
-    int actionColor;
-    int actionHighlightColor;
-    int mediaBgColor;
-    // resource id's
-    int photoErrorResId;
-
-    /**
-     * Performs inflation from XML and apply a class-specific base style with the given dependency
-     * provider.
-     * @param context the context of the view
-     * @param attrs the attributes of the XML tag that is inflating the TweetView
-     * @param defStyle An attribute in the current theme that contains a reference to a style
-     *                 resource to apply to this view. If 0, no default style will be applied.
-     * @param dependencyProvider the dependency provider
-     * @throws IllegalArgumentException if the Tweet id is invalid.
-     */
-    AbstractTweetView(Context context, AttributeSet attrs, int defStyle,
-                  DependencyProvider dependencyProvider) {
-        super(context, attrs, defStyle);
-
-        this.dependencyProvider = dependencyProvider;
-        inflateView(context);
-        findSubviews();
-    }
-
-    /**
-     * Inflate the TweetView using the layout that has been set.
-     * @param context The Context the view is running in.
-     */
-    private void inflateView(Context context) {
-        LayoutInflater.from(context).inflate(getLayout(), this, true);
-    }
-
-    /**
-     * Checks whether the TweetUi kit is setup and the instance is available.
-     * @return true if the instance is available and view creation can continue
-     * or false otherwise
-     */
-    boolean isTweetUiEnabled() {
-        // in edit mode, halt view creation
-        if (isInEditMode()) return false;
-        try {
-            dependencyProvider.getTweetUi();
-        } catch (IllegalStateException e) {
-            Twitter.getLogger().e(TAG, e.getMessage());
-            // TweetUi kit instance not available, halt view creation and disable
-            setEnabled(false);
-            return false;
-        }
-        return true;
-    }
-
-    /**
-     * Find and hold subview references for quick lookup.
-     */
-    void findSubviews() {
-        // Tweet attribution (avatar, name, screen name, etc.)
-        fullNameView = findViewById(R.id.tw__tweet_author_full_name);
-        screenNameView = findViewById(R.id.tw__tweet_author_screen_name);
-        mediaContainer =
-                findViewById(R.id.tw__aspect_ratio_media_container);
-        tweetMediaView = findViewById(R.id.tweet_media_view);
-        contentView = findViewById(R.id.tw__tweet_text);
-        mediaBadgeView = findViewById(R.id.tw__tweet_media_badge);
-    }
-
-    /*
-     * It's up to the extending class to determine what layout id to use
-     */
-    abstract int getLayout();
-
-    /**
-     * @return id of the Tweet of the TweetView.
-     */
-    public long getTweetId() {
-        if (tweet == null) {
-            return INVALID_ID;
-        }
-        return tweet.id;
-    }
-
-    /**
-     * Set the Tweet to be displayed and update the subviews. For any data that is missing from
-     * the Tweet, invalidate the subview value (e.g. text views set to empty string) for view
-     * recycling. Cannot be called before inflation has completed.
-     * @param tweet Tweet data
-     */
-    public void setTweet(Tweet tweet) {
-        this.tweet = tweet;
-        render();
-    }
-
-    /**
-     * @return the Tweet of the TweetView
-     */
-    public Tweet getTweet() {
-        return tweet;
-    }
-
-    /**
-     * Override the default action when media is clicked.
-     * @param tweetMediaClickListener called when media is clicked.
-     */
-    public void setTweetMediaClickListener(TweetMediaClickListener tweetMediaClickListener) {
-        this.tweetMediaClickListener = tweetMediaClickListener;
-        tweetMediaView.setTweetMediaClickListener(tweetMediaClickListener);
-    }
-
-    /**
-     * Override the default action when any link or entity is clicked.
-     * @param tweetLinkClickListener called when any link or entity is clicked.
-     */
-    public void setTweetLinkClickListener(TweetLinkClickListener tweetLinkClickListener) {
-        this.tweetLinkClickListener = tweetLinkClickListener;
-    }
-
-    /**
-     * Render the Tweet by updating the subviews. For any data that is missing from the Tweet,
-     * invalidate the subview value (e.g. text views set to empty string) for view recycling.
-     * Do not call with render true until inflation has completed.
-     */
-    void render() {
-        final Tweet displayTweet = TweetUtils.getDisplayTweet(tweet);
-        setName(displayTweet);
-        setScreenName(displayTweet);
-        setTweetMedia(displayTweet);
-        setText(displayTweet);
-        setContentDescription(displayTweet);
-
-        // set permalink if tweet id and screen name are available
-        if (TweetUtils.isTweetResolvable(tweet)) {
-            setPermalinkUri(tweet.user.screenName, getTweetId());
-        } else {
-            permalinkUri = null;
-        }
-
-        // set or update the permalink launcher with the current permalinkUri
-        setPermalinkLauncher();
-    }
-
-    Uri getPermalinkUri() {
-        return permalinkUri;
-    }
-
-    void setPermalinkUri(String screenName, Long tweetId) {
-        if (tweetId <= 0) return;
-        permalinkUri = TweetUtils.getPermalink(screenName, tweetId);
-    }
-
-    private void setPermalinkLauncher() {
-        final OnClickListener listener = new PermalinkClickListener();
-
-        this.setOnClickListener(listener);
-    }
-
-    void launchPermalink() {
-        final Intent intent = new Intent(Intent.ACTION_VIEW, getPermalinkUri());
-        if (!IntentUtils.safeStartActivity(getContext(), intent)) {
-            Twitter.getLogger().e(TweetUi.LOGTAG, "Activity cannot be found to open permalink URI");
-        }
-    }
-
-    /**
-     * Sets the Tweet author name. If author name is unavailable, resets to empty string.
-     */
-    private void setName(Tweet displayTweet) {
-        if (displayTweet != null && displayTweet.user != null) {
-            fullNameView.setText(Utils.stringOrEmpty(displayTweet.user.name));
-        } else {
-            fullNameView.setText(EMPTY_STRING);
-        }
-    }
-
-    /**
-     * Sets the Tweet author screen name. If screen name is unavailable, resets to empty string.
-     */
-    private void setScreenName(Tweet displayTweet) {
-        if (displayTweet != null && displayTweet.user != null) {
-            screenNameView.setText(UserUtils.formatScreenName(
-                    Utils.stringOrEmpty(displayTweet.user.screenName)));
-        } else {
-            screenNameView.setText(EMPTY_STRING);
-        }
-    }
-
-    /**
-     * Sets the Tweet text. If the Tweet text is unavailable, resets to empty string.
-     */
-    @TargetApi(Build.VERSION_CODES.JELLY_BEAN)
-    private void setText(Tweet displayTweet) {
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
-            contentView.setImportantForAccessibility(IMPORTANT_FOR_ACCESSIBILITY_NO);
-        }
-        final CharSequence tweetText = Utils.charSeqOrEmpty(getLinkifiedText(displayTweet));
-        SpanClickHandler.enableClicksOnSpans(contentView);
-        if (!TextUtils.isEmpty(tweetText)) {
-            contentView.setText(tweetText);
-            contentView.setVisibility(VISIBLE);
-        } else {
-            contentView.setText(EMPTY_STRING);
-            contentView.setVisibility(GONE);
-        }
-    }
-
-    final void setTweetMedia(Tweet displayTweet) {
-        clearTweetMedia();
-
-        if (displayTweet == null) {
-            return;
-        }
-
-        if (displayTweet.card != null && VineCardUtils.isVine(displayTweet.card)) {
-            final Card card = displayTweet.card;
-            final ImageValue imageValue = VineCardUtils.getImageValue(card);
-            final String playerStreamUrl = VineCardUtils.getStreamUrl(card);
-            // Make sure we have required bindings for Vine card
-            if (imageValue != null && !TextUtils.isEmpty(playerStreamUrl)) {
-                setViewsForMedia(getAspectRatio(imageValue));
-                tweetMediaView.setVineCard(displayTweet);
-                mediaBadgeView.setVisibility(View.VISIBLE);
-                mediaBadgeView.setCard(card);
-            }
-        } else if (TweetMediaUtils.hasSupportedVideo(displayTweet)) {
-            final MediaEntity mediaEntity = TweetMediaUtils.getVideoEntity(displayTweet);
-            setViewsForMedia(getAspectRatio(mediaEntity));
-            tweetMediaView.setTweetMediaEntities(tweet, Collections.singletonList(mediaEntity));
-            mediaBadgeView.setVisibility(View.VISIBLE);
-            mediaBadgeView.setMediaEntity(mediaEntity);
-        } else if (TweetMediaUtils.hasPhoto(displayTweet)) {
-            final List<MediaEntity> mediaEntities = TweetMediaUtils.getPhotoEntities(displayTweet);
-            setViewsForMedia(getAspectRatioForPhotoEntity(mediaEntities.size()));
-            tweetMediaView.setTweetMediaEntities(displayTweet, mediaEntities);
-            mediaBadgeView.setVisibility(View.GONE);
-        }
-    }
-
-    void setViewsForMedia(double aspectRatio) {
-        mediaContainer.setVisibility(ImageView.VISIBLE);
-        mediaContainer.setAspectRatio(aspectRatio);
-        tweetMediaView.setVisibility(View.VISIBLE);
-    }
-
-    protected double getAspectRatio(MediaEntity photoEntity) {
-        if (photoEntity == null || photoEntity.sizes == null || photoEntity.sizes.medium == null ||
-                photoEntity.sizes.medium.w == 0 || photoEntity.sizes.medium.h == 0) {
-            return DEFAULT_ASPECT_RATIO;
-        }
-
-        return (double) photoEntity.sizes.medium.w / photoEntity.sizes.medium.h;
-    }
-
-    protected double getAspectRatio(ImageValue imageValue) {
-        if (imageValue == null || imageValue.width == 0 || imageValue.height == 0) {
-            return DEFAULT_ASPECT_RATIO;
-        }
-
-        return (double) imageValue.width / imageValue.height;
-    }
-
-    protected abstract double getAspectRatioForPhotoEntity(int photoCount);
-
-    protected void clearTweetMedia() {
-        mediaContainer.setVisibility(ImageView.GONE);
-    }
-
-    /**
-     * @param displayTweet The unformatted Tweet
-     * @return The linkified text with display url's subbed for t.co links
-     */
-    protected CharSequence getLinkifiedText(Tweet displayTweet) {
-        final FormattedTweetText formattedText = dependencyProvider.getTweetUi()
-                .getTweetRepository().formatTweetText(displayTweet);
-
-        if (formattedText == null) return null;
-
-        final boolean stripVineCard = displayTweet.card != null
-                && VineCardUtils.isVine(displayTweet.card);
-
-        final boolean stripQuoteTweet = TweetUtils.showQuoteTweet(displayTweet);
-
-        return TweetTextLinkifier.linkifyUrls(formattedText, getLinkClickListener(), actionColor,
-                actionHighlightColor, stripQuoteTweet, stripVineCard);
-    }
-
-    void setContentDescription(Tweet displayTweet) {
-        if (!TweetUtils.isTweetResolvable(displayTweet)) {
-            setContentDescription(getResources().getString(R.string.tw__loading_tweet));
-            return;
-        }
-
-        final FormattedTweetText formattedTweetText = dependencyProvider.getTweetUi()
-                .getTweetRepository().formatTweetText(displayTweet);
-        String tweetText = null;
-        if (formattedTweetText != null) tweetText = formattedTweetText.text;
-
-        final long createdAt = TweetDateUtils.apiTimeToLong(displayTweet.createdAt);
-        String timestamp = null;
-        if (createdAt != TweetDateUtils.INVALID_DATE) {
-            timestamp = DateFormat.getDateInstance().format(new Date(createdAt));
-        }
-
-        setContentDescription(getResources().getString(R.string.tw__tweet_content_description,
-                Utils.stringOrEmpty(displayTweet.user.name), Utils.stringOrEmpty(tweetText),
-                Utils.stringOrEmpty(timestamp)));
-    }
-
-    protected LinkClickListener getLinkClickListener() {
-        if (linkClickListener == null) {
-            linkClickListener = url -> {
-                if (TextUtils.isEmpty(url)) return;
-
-                if (tweetLinkClickListener != null) {
-                    tweetLinkClickListener.onLinkClick(tweet, url);
-                } else {
-                    final Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
-                    if (!IntentUtils.safeStartActivity(getContext(), intent)) {
-                        Twitter.getLogger().e(TweetUi.LOGTAG,
-                                "Activity cannot be found to open URL");
-                    }
-                }
-            };
-        }
-        return linkClickListener;
-    }
-
-    class PermalinkClickListener implements OnClickListener {
-        @Override
-        public void onClick(View v) {
-            if (getPermalinkUri() == null) return;
-
-            launchPermalink();
-        }
-    }
-
-    /**
-     * This is a mockable class that extracts our tight coupling with the TweetUi singleton.
-     */
-    static class DependencyProvider {
-        /**
-         * Can be null in edit mode
-         */
-        TweetUi getTweetUi() {
-            return TweetUi.getInstance();
-        }
-
-        /**
-         * Can be null if run before TweetUi#doInBackground completes
-         */
-        Picasso getImageLoader() {
-            return TweetUi.getInstance().getImageLoader();
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTimeline.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTimeline.java
deleted file mode 100644
index 596a0cd6..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTimeline.java
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import java.util.List;
-
-/**
- * BaseTimeline which handles TweetUi instance argument.
- */
-abstract class BaseTimeline {
-
-    /**
-     * Returns a decremented maxId if the given id is non-null. Otherwise returns the given maxId.
-     * Suitable for REST Timeline endpoints which return inclusive previous results when exclusive
-     * is desired.
-     */
-    static Long decrementMaxId(Long maxId) {
-        return maxId == null ? null : maxId - 1;
-    }
-
-    /**
-     * Wrapper callback which unpacks a list of Tweets into a TimelineResult (cursor and items).
-     */
-    static class TweetsCallback extends Callback<List<Tweet>> {
-        final Callback<TimelineResult<Tweet>> cb;
-
-        /**
-         * Constructs a TweetsCallback
-         * @param cb A callback which expects a TimelineResult
-         */
-        TweetsCallback(Callback<TimelineResult<Tweet>> cb) {
-            this.cb = cb;
-        }
-
-        @Override
-        public void success(Result<List<Tweet>> result) {
-            final List<Tweet> tweets = result.data;
-            final TimelineResult<Tweet> timelineResult
-                    = new TimelineResult<>(new TimelineCursor(tweets), tweets);
-            if (cb != null) {
-                cb.success(new Result<>(timelineResult, result.response));
-            }
-        }
-
-        @Override
-        public void failure(TwitterException exception) {
-            if (cb != null) {
-                cb.failure(exception);
-            }
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTweetAction.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTweetAction.java
deleted file mode 100644
index c3262aec..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTweetAction.java
+++ /dev/null
@@ -1,36 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.models.Tweet;
-
-/**
- * BaseTweetAction keeps a Callback which should be called after Tweet actions are performed.
- */
-class BaseTweetAction {
-    protected final Callback<Tweet> actionCallback;
-
-    BaseTweetAction(Callback<Tweet> actionCallback) {
-        this.actionCallback = actionCallback;
-    }
-
-    Callback<Tweet> getActionCallback() {
-        return actionCallback;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTweetView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTweetView.java
deleted file mode 100644
index 566829ea..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTweetView.java
+++ /dev/null
@@ -1,496 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.content.Intent;
-import android.content.res.TypedArray;
-import android.graphics.Color;
-import android.graphics.PorterDuff;
-import android.graphics.drawable.ColorDrawable;
-import android.net.Uri;
-import android.util.AttributeSet;
-import android.view.MotionEvent;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ImageView;
-import android.widget.TextView;
-
-import com.squareup.picasso.Picasso;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.IntentUtils;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.internal.UserUtils;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetBuilder;
-
-import java.util.Locale;
-
-public abstract class BaseTweetView extends AbstractTweetView {
-
-    TextView retweetedByView;
-    TweetActionBarView tweetActionBarView;
-    ImageView twitterLogoView;
-    TextView timestampView;
-    ImageView avatarView;
-    ViewGroup quoteTweetHolder;
-    QuoteTweetView quoteTweetView;
-    View bottomSeparator;
-
-    // color values
-    int containerBgColor;
-    int birdLogoResId;
-    int retweetIconResId;
-    // styled drawables for images
-    ColorDrawable avatarMediaBg;
-
-    /**
-     * Constructs a view from the given Tweet.
-     * @param context the context of the view
-     * @param tweet a Tweet object
-     */
-    BaseTweetView(Context context, Tweet tweet) {
-        this(context, tweet, DEFAULT_STYLE);
-    }
-
-    /**
-     * Constructs a view from the given Tweet.
-     * @param context the context of the view
-     * @param tweet a Tweet object
-     * @param styleResId resource id of the Tweet view style
-     */
-    BaseTweetView(Context context, Tweet tweet, int styleResId) {
-        this(context, tweet, styleResId, new DependencyProvider());
-    }
-
-    /**
-     * Constructs a view from the given Tweet using the given dependency provider
-     * @param context the context of the view
-     * @param tweet a Tweet object
-     * @param styleResId resource id of the Tweet view style
-     * @param dependencyProvider the dependency provider
-     */
-    BaseTweetView(Context context, Tweet tweet, int styleResId,
-            DependencyProvider dependencyProvider) {
-        super(context, null, styleResId, dependencyProvider);
-
-        initAttributes(styleResId);
-        applyStyles();
-        if (!isTweetUiEnabled()) return;
-        initTweetActions();
-        setTweet(tweet);
-    }
-
-    /* XML Constructors */
-
-    /**
-     * Constructs a view with data retrieved from the API, for the XML defined tweetId.
-     * @param context the context of the view
-     * @param attrs the attributes of the XML tag that is inflating the TweetView.
-     * @throws IllegalArgumentException if the Tweet id is invalid.
-     */
-    public BaseTweetView(Context context, AttributeSet attrs) {
-        this(context, attrs, 0);
-    }
-
-    /**
-     * Performs inflation from XML and apply a class-specific base style.
-     * @param context the context of the view
-     * @param attrs the attributes of the XML tag that is inflating the TweetView.
-     * @param defStyle An attribute in the current theme that contains a reference to a style
-     *                 resource to apply to this view. If 0, no default style will be applied.
-     * @throws IllegalArgumentException if the Tweet id is invalid.
-     */
-    public BaseTweetView(Context context, AttributeSet attrs, int defStyle) {
-        super(context, attrs, defStyle, new DependencyProvider());
-
-        initXmlAttributes(context, attrs);
-        applyStyles();
-    }
-
-    /**
-     * Initializes attributes needed before view inflation. This initializer should be called by the
-     * programmatic constructors. For programmatic Tweet views, the style is passed as a constructor
-     * argument.
-     */
-    private void initAttributes(int styleResId) {
-        this.styleResId = styleResId;
-        final TypedArray a = getContext().getTheme().obtainStyledAttributes(styleResId,
-                R.styleable.tw__TweetView);
-        try {
-            setStyleAttributes(a);
-        } finally {
-            a.recycle();
-        }
-    }
-
-    /**
-     * Initializes XML attributes needed before view inflation. This initializer should be called
-     * by the XML constructor. For XML Tweet views, the style is obtained from XML attrs.
-     * @param context the context of the view
-     * @param attrs set of raw XML attributes associated with the view's XML tag
-     * @throws IllegalArgumentException if the tw__tweet_id XML attribute is invalid
-     */
-    private void initXmlAttributes(Context context, AttributeSet attrs) {
-        if (attrs == null) return;
-        // parse the xml attributes by resolving resource references
-        final TypedArray a = context.getTheme().obtainStyledAttributes(attrs,
-                R.styleable.tw__TweetView, 0, 0);
-        try {
-            setXmlDataAttributes(a);
-            setStyleAttributes(a);
-        } finally {
-            a.recycle();
-        }
-    }
-
-    /**
-     * Parses and sets the Tweet data XML attributes. Must be called before view inflation.
-     * @param a A TypedArray holding the attribute values obtained from the XML attributes
-     * @throws IllegalArgumentException if the tw__tweet_id XML attribute is invalid
-     */
-    private void setXmlDataAttributes(TypedArray a) {
-        final long tweetId = Utils.numberOrDefault(
-                a.getString(R.styleable.tw__TweetView_tw__tweet_id), INVALID_ID);
-        if (tweetId <= 0) {
-            throw new IllegalArgumentException("Invalid tw__tweet_id");
-        }
-        // XML special case. The screen_name is not known yet. A permalink can be constructed and
-        // followed. Permalink should be updated once the loadTweet call receives the Tweet.
-        setPermalinkUri(null, tweetId);
-        this.tweet = new TweetBuilder().setId(tweetId).build();
-    }
-
-    /**
-     * Parses and sets style attributes. Must be called before view inflation. Defaults style
-     * attributes to the light style values.
-     * @param a A TypedArray holding style-related attribute values.
-     */
-    private void setStyleAttributes(TypedArray a) {
-        // Styled via attributes
-        containerBgColor = a.getColor(R.styleable.tw__TweetView_tw__container_bg_color,
-                getResources().getColor(R.color.tw__tweet_light_container_bg_color));
-        primaryTextColor = a.getColor(R.styleable.tw__TweetView_tw__primary_text_color,
-                getResources().getColor(R.color.tw__tweet_light_primary_text_color));
-        actionColor = a.getColor(
-                R.styleable.tw__TweetView_tw__action_color,
-                getResources().getColor(R.color.tw__tweet_action_color));
-        actionHighlightColor = a.getColor(
-                R.styleable.tw__TweetView_tw__action_highlight_color,
-                getResources().getColor(R.color.tw__tweet_action_light_highlight_color));
-        tweetActionsEnabled =
-                a.getBoolean(R.styleable.tw__TweetView_tw__tweet_actions_enabled, false);
-
-        // Calculated colors
-        final boolean isLightBg = ColorUtils.isLightColor(containerBgColor);
-
-        if (isLightBg) {
-            photoErrorResId = R.drawable.tw__ic_tweet_photo_error_light;
-            birdLogoResId = R.drawable.tw__ic_logo_blue;
-            retweetIconResId = R.drawable.tw__ic_retweet_light;
-        } else {
-            photoErrorResId = R.drawable.tw__ic_tweet_photo_error_dark;
-            birdLogoResId = R.drawable.tw__ic_logo_white;
-            retweetIconResId = R.drawable.tw__ic_retweet_dark;
-        }
-
-        // offset from white when background is light
-        secondaryTextColor = ColorUtils.calculateOpacityTransform(
-                isLightBg ? SECONDARY_TEXT_COLOR_LIGHT_OPACITY : SECONDARY_TEXT_COLOR_DARK_OPACITY,
-                isLightBg ? Color.WHITE : Color.BLACK,
-                primaryTextColor
-        );
-
-        // offset from black when background is light
-        mediaBgColor = ColorUtils.calculateOpacityTransform(
-                isLightBg ? MEDIA_BG_LIGHT_OPACITY : MEDIA_BG_DARK_OPACITY,
-                isLightBg ? Color.BLACK : Color.WHITE,
-                containerBgColor
-        );
-
-        avatarMediaBg = new ColorDrawable(mediaBgColor);
-    }
-
-    /**
-     * LoadTweet will trigger a request to the Twitter API and hydrate the view with the result.
-     * In the event of an error it will call the listener that was provided to setOnTwitterApiError.
-     */
-    private void loadTweet() {
-        final long tweetId = getTweetId();
-        // create a callback to setTweet on the view or log a failure to load the Tweet
-        final Callback<Tweet> repoCb = new Callback<Tweet>() {
-            @Override
-            public void success(Result<Tweet> result) {
-                setTweet(result.data);
-            }
-
-            @Override
-            public void failure(TwitterException exception) {
-                Twitter.getLogger().d(TAG,
-                        String.format(Locale.ENGLISH, TweetUtils.LOAD_TWEET_DEBUG, tweetId));
-            }
-        };
-        dependencyProvider.getTweetUi().getTweetRepository().loadTweet(getTweetId(), repoCb);
-    }
-
-    /**
-     * Finalize inflating a view from XML.
-     */
-    @Override
-    protected void onFinishInflate() {
-        super.onFinishInflate();
-
-        if (!isTweetUiEnabled()) return;
-        initTweetActions();
-        loadTweet();
-    }
-
-    /**
-     * Initialize tweet actions subview
-     */
-    private void initTweetActions() {
-        setTweetActionsEnabled(tweetActionsEnabled);
-
-        // Tweet actions buttons setTweet and clear cache after successful actions.
-        tweetActionBarView.setOnActionCallback(new ResetTweetCallback(this,
-                dependencyProvider.getTweetUi().getTweetRepository(), null));
-    }
-
-
-    /**
-     * Find and hold subview references for quick lookup.
-     */
-    @Override
-    void findSubviews() {
-        super.findSubviews();
-
-        avatarView = findViewById(R.id.tw__tweet_author_avatar);
-        timestampView = findViewById(R.id.tw__tweet_timestamp);
-        twitterLogoView = findViewById(R.id.tw__twitter_logo);
-        retweetedByView = findViewById(R.id.tw__tweet_retweeted_by);
-        tweetActionBarView = findViewById(R.id.tw__tweet_action_bar);
-        quoteTweetHolder = findViewById(R.id.quote_tweet_holder);
-        bottomSeparator = findViewById(R.id.bottom_separator);
-    }
-
-    /**
-     * Sets the callback to call when a Tweet action (favorite, unfavorite) is performed.
-     * @param actionCallback called when a Tweet action is performed.
-     */
-    public void setOnActionCallback(Callback<Tweet> actionCallback) {
-        tweetActionBarView.setOnActionCallback(new ResetTweetCallback(this,
-                dependencyProvider.getTweetUi().getTweetRepository(), actionCallback));
-        tweetActionBarView.setTweet(tweet);
-    }
-
-    /**
-     * Render the Tweet by updating the subviews. For any data that is missing from the Tweet,
-     * invalidate the subview value (e.g. text views set to empty string) for view recycling.
-     * Do not call with render true until inflation has completed.
-     */
-    @Override
-    void render() {
-        super.render();
-
-        final Tweet displayTweet = TweetUtils.getDisplayTweet(tweet);
-        setProfilePhotoView(displayTweet);
-        linkifyProfilePhotoView(displayTweet);
-        setTimestamp(displayTweet);
-        setTweetActions(tweet);
-        showRetweetedBy(tweet);
-        setQuoteTweet(tweet);
-    }
-
-    void setQuoteTweet(Tweet tweet) {
-        quoteTweetView = null;
-        quoteTweetHolder.removeAllViews();
-        if (tweet != null && TweetUtils.showQuoteTweet(tweet)) {
-            quoteTweetView = new QuoteTweetView(getContext());
-            quoteTweetView.setStyle(primaryTextColor, secondaryTextColor, actionColor,
-                    actionHighlightColor, mediaBgColor, photoErrorResId);
-            quoteTweetView.setTweet(tweet.quotedStatus);
-            quoteTweetView.setTweetLinkClickListener(tweetLinkClickListener);
-            quoteTweetView.setTweetMediaClickListener(tweetMediaClickListener);
-            quoteTweetHolder.setVisibility(View.VISIBLE);
-            quoteTweetHolder.addView(quoteTweetView);
-        } else {
-            quoteTweetHolder.setVisibility(View.GONE);
-        }
-    }
-
-    /**
-     * Toggles display of "Retweeted by" text based on status from the API.
-     * @param tweet The status from the API, if it is a retweet show the "retweeted by" text
-     */
-    void showRetweetedBy(Tweet tweet) {
-        if (tweet == null || tweet.retweetedStatus == null) {
-            retweetedByView.setVisibility(GONE);
-        } else {
-            retweetedByView.setText(
-                    getResources().getString(R.string.tw__retweeted_by_format, tweet.user.name));
-            retweetedByView.setVisibility(VISIBLE);
-        }
-    }
-
-    /**
-     * Apply the style attributes to the Tweet subviews. Must be called after view inflation and
-     * findSubviews.
-     */
-    protected void applyStyles() {
-        setBackgroundColor(containerBgColor);
-        fullNameView.setTextColor(primaryTextColor);
-        screenNameView.setTextColor(secondaryTextColor);
-        contentView.setTextColor(primaryTextColor);
-        tweetMediaView.setMediaBgColor(mediaBgColor);
-        tweetMediaView.setPhotoErrorResId(photoErrorResId);
-        avatarView.setImageDrawable(avatarMediaBg);
-        timestampView.setTextColor(secondaryTextColor);
-        twitterLogoView.setImageResource(birdLogoResId);
-        retweetedByView.setTextColor(secondaryTextColor);
-    }
-
-    /**
-     * Set the timestamp if data from the Tweet is available. If timestamp cannot be determined,
-     * set the timestamp to an empty string to handle view recycling.
-     */
-    private void setTimestamp(Tweet displayTweet) {
-        final String formattedTimestamp;
-        if (displayTweet != null && displayTweet.createdAt != null &&
-                TweetDateUtils.isValidTimestamp(displayTweet.createdAt)) {
-            final Long createdAtTimestamp
-                    = TweetDateUtils.apiTimeToLong(displayTweet.createdAt);
-            final String timestamp = TweetDateUtils.getRelativeTimeString(getResources(),
-                    System.currentTimeMillis(),
-                    createdAtTimestamp);
-            formattedTimestamp = TweetDateUtils.dotPrefix(timestamp);
-        } else {
-            formattedTimestamp = EMPTY_STRING;
-        }
-
-        timestampView.setText(formattedTimestamp);
-    }
-
-    /**
-     * Sets the profile photo. If the profile photo url is available from the Tweet, sets the the
-     * default avatar background and attempts to load the image. If the url is not available, just
-     * sets the default avatar background. Setting the default background upfront handles view
-     * recycling.
-     */
-    void setProfilePhotoView(Tweet displayTweet) {
-        final Picasso imageLoader = dependencyProvider.getImageLoader();
-
-        if (imageLoader == null) return;
-
-        final String url;
-        if (displayTweet == null || displayTweet.user == null) {
-            url = null;
-        } else {
-            url = UserUtils.getProfileImageUrlHttps(displayTweet.user,
-                    UserUtils.AvatarSize.REASONABLY_SMALL);
-        }
-
-        imageLoader.load(url).placeholder(avatarMediaBg).into(avatarView);
-    }
-
-    /**
-     * Linkify the profile photo
-     * @param displayTweet The tweet from which to linkify the profile photo
-     */
-    void linkifyProfilePhotoView(final Tweet displayTweet) {
-        if (displayTweet != null && displayTweet.user != null) {
-            avatarView.setOnClickListener(v -> {
-                if (tweetLinkClickListener != null) {
-                    tweetLinkClickListener.onLinkClick(displayTweet,
-                            TweetUtils.getProfilePermalink(displayTweet.user.screenName));
-                } else {
-                    final Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(
-                            TweetUtils.getProfilePermalink(displayTweet.user.screenName)));
-                    if (!IntentUtils.safeStartActivity(getContext(), intent)) {
-                        Twitter.getLogger().e(TweetUi.LOGTAG,
-                                "Activity cannot be found to open URL");
-                    }
-                }
-
-            });
-            avatarView.setOnTouchListener((v, event) -> {
-                final ImageView imageView = (ImageView) v;
-                switch (event.getAction()) {
-                    case MotionEvent.ACTION_DOWN:
-                        imageView.getDrawable().setColorFilter(getResources().getColor(
-                                R.color.tw__black_opacity_10), PorterDuff.Mode.SRC_ATOP);
-                        imageView.invalidate();
-                        break;
-                    case MotionEvent.ACTION_UP:
-                        v.performClick();
-                    case MotionEvent.ACTION_CANCEL: {
-                        imageView.getDrawable().clearColorFilter();
-                        imageView.invalidate();
-                        break;
-                    }
-                    default: break;
-                }
-                return false;
-            });
-        }
-    }
-
-    void setTweetActions(Tweet tweet) {
-        tweetActionBarView.setTweet(tweet);
-    }
-
-    /**
-     * Override the default action when media is clicked.
-     * @param tweetMediaClickListener called when media is clicked.
-     */
-    @Override
-    public void setTweetMediaClickListener(TweetMediaClickListener tweetMediaClickListener) {
-        super.setTweetMediaClickListener(tweetMediaClickListener);
-        if (quoteTweetView != null) {
-            quoteTweetView.setTweetMediaClickListener(tweetMediaClickListener);
-        }
-    }
-
-    /**
-     * Override the default action when link is clicked.
-     * @param tweetLinkClickListener called when url is clicked.
-     */
-    @Override
-    public void setTweetLinkClickListener(TweetLinkClickListener tweetLinkClickListener) {
-        super.setTweetLinkClickListener(tweetLinkClickListener);
-        if (quoteTweetView != null) {
-            quoteTweetView.setTweetLinkClickListener(tweetLinkClickListener);
-        }
-    }
-
-    /**
-     * Enable or disable Tweet actions
-     * @param enabled True to enable Tweet actions, false otherwise.
-     */
-    public void setTweetActionsEnabled(boolean enabled) {
-        tweetActionsEnabled = enabled;
-        if (tweetActionsEnabled) {
-            tweetActionBarView.setVisibility(View.VISIBLE);
-            bottomSeparator.setVisibility(View.GONE);
-        } else {
-            tweetActionBarView.setVisibility(View.GONE);
-            bottomSeparator.setVisibility(View.VISIBLE);
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BasicTimelineFilter.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BasicTimelineFilter.java
deleted file mode 100644
index 2cf75a68..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BasicTimelineFilter.java
+++ /dev/null
@@ -1,229 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.text.TextUtils;
-
-import com.twitter.sdk.android.core.models.HashtagEntity;
-import com.twitter.sdk.android.core.models.MentionEntity;
-import com.twitter.sdk.android.core.models.SymbolEntity;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.UrlEntity;
-
-import java.net.IDN;
-import java.text.BreakIterator;
-import java.text.Collator;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.Comparator;
-import java.util.HashSet;
-import java.util.List;
-import java.util.Locale;
-import java.util.Set;
-import java.util.TreeSet;
-
-import okhttp3.HttpUrl;
-
-public class BasicTimelineFilter implements TimelineFilter {
-    private final BreakIterator wordIterator;
-    private final Set<String> keywordConstraints;
-    private final Set<String> hashTagConstraints;
-    private final Set<String> urlConstraints;
-    private final Set<String> handleConstraints;
-
-    public BasicTimelineFilter(FilterValues filterValues) {
-        this(filterValues, Locale.getDefault());
-    }
-
-    public BasicTimelineFilter(FilterValues filterValues, Locale locale) {
-        final Comparator<String> comparator = new IgnoreCaseComparator(locale);
-
-        wordIterator = BreakIterator.getWordInstance(locale);
-        keywordConstraints = new TreeSet<>(comparator);
-        keywordConstraints.addAll(filterValues.keywords);
-
-        hashTagConstraints = new TreeSet<>(comparator);
-        for (String hashtag : filterValues.hashtags) {
-            final String sanitizedHashtag = normalizeHashtag(hashtag);
-            hashTagConstraints.add(sanitizedHashtag);
-        }
-
-        handleConstraints = new HashSet<>(filterValues.handles.size());
-        for (String handle : filterValues.handles) {
-            final String sanitizedHandle = normalizeHandle(handle);
-            handleConstraints.add(sanitizedHandle);
-        }
-
-        urlConstraints = new HashSet<>(filterValues.urls.size());
-        for (String url : filterValues.urls) {
-            final String sanitizedUrl = normalizeUrl(url);
-            urlConstraints.add(sanitizedUrl);
-        }
-    }
-
-    @Override
-    public List<Tweet> filter(List<Tweet> tweets) {
-        final List<Tweet> filteredTweets = new ArrayList<>();
-        for (int idx = 0; idx < tweets.size(); idx++) {
-            final Tweet tweet = tweets.get(idx);
-            if (!shouldFilterTweet(tweet)) {
-                filteredTweets.add(tweet);
-            }
-        }
-
-        return Collections.unmodifiableList(filteredTweets);
-    }
-
-    @Override
-    public int totalFilters() {
-        return keywordConstraints.size() + hashTagConstraints.size()
-                + urlConstraints.size() + handleConstraints.size();
-    }
-
-    boolean shouldFilterTweet(Tweet tweet) {
-        if (tweet.user != null &&
-                containsMatchingScreenName(tweet.user.screenName)) {
-            return true;
-        }
-
-        if (tweet.entities != null &&
-                (containsMatchingHashtag(tweet.entities.hashtags) ||
-                        containsMatchingSymbol(tweet.entities.symbols) ||
-                        containsMatchingUrl(tweet.entities.urls) ||
-                        containsMatchingMention(tweet.entities.userMentions))) {
-            return true;
-        }
-
-        return containsMatchingText(tweet);
-    }
-
-    boolean containsMatchingText(Tweet tweet) {
-        wordIterator.setText(tweet.text);
-        int start = wordIterator.first();
-        for (int end = wordIterator.next();
-             end != BreakIterator.DONE;
-             start = end, end = wordIterator.next()) {
-            final String word = tweet.text.substring(start, end);
-
-            if (keywordConstraints.contains(word)) {
-                return true;
-            }
-        }
-
-        return false;
-    }
-
-    boolean containsMatchingHashtag(List<HashtagEntity> hashtags) {
-        for (HashtagEntity entity : hashtags) {
-            if (hashTagConstraints.contains(entity.text)) {
-                return true;
-            }
-        }
-
-        return false;
-    }
-
-    boolean containsMatchingSymbol(List<SymbolEntity> symbols) {
-        for (SymbolEntity entity : symbols) {
-            if (hashTagConstraints.contains(entity.text)) {
-                return true;
-            }
-        }
-
-        return false;
-    }
-
-    boolean containsMatchingUrl(List<UrlEntity> urls) {
-        for (UrlEntity entity : urls) {
-            final String url = normalizeUrl(entity.expandedUrl);
-            if (urlConstraints.contains(url)) {
-                return true;
-            }
-        }
-
-        return false;
-    }
-
-    boolean containsMatchingMention(List<MentionEntity> mentions) {
-        for (MentionEntity entity : mentions) {
-            final String name = normalizeHandle(entity.screenName);
-            if (handleConstraints.contains(name)) {
-                return true;
-            }
-        }
-
-        return false;
-    }
-
-    boolean containsMatchingScreenName(String screenName) {
-        final String name = normalizeHandle(screenName);
-        return handleConstraints.contains(name);
-    }
-
-    static String normalizeUrl(String url) {
-        try {
-            final HttpUrl parsedUrl = HttpUrl.parse(url);
-            if (parsedUrl == null || parsedUrl.host() == null) {
-                return IDN.toASCII(url).toLowerCase(Locale.US);
-            }
-
-            return parsedUrl.host().toLowerCase(Locale.US);
-        } catch (IllegalArgumentException e) {
-            return url;
-        }
-    }
-
-    static String normalizeHashtag(String hashtag) {
-        if (TextUtils.isEmpty(hashtag)) {
-            return hashtag;
-        }
-
-        final char firstChar = hashtag.charAt(0);
-        if (firstChar == '#' || firstChar == '\uFF03' || firstChar == '$') {
-            hashtag = hashtag.substring(1, hashtag.length());
-        }
-
-        return hashtag;
-    }
-
-    static String normalizeHandle(String handle) {
-        if (TextUtils.isEmpty(handle)) {
-            return handle;
-        }
-
-        final char firstChar = handle.charAt(0);
-        if (firstChar == '@' || firstChar == '\uFF20') {
-            handle = handle.substring(1, handle.length());
-        }
-
-        return handle.toLowerCase(Locale.US);
-    }
-
-    static class IgnoreCaseComparator implements Comparator<String> {
-        private final Collator collator;
-
-        IgnoreCaseComparator(Locale locale) {
-            collator = Collator.getInstance(locale);
-            collator.setStrength(Collator.PRIMARY);
-        }
-
-        public int compare(String string1, String string2) {
-            return collator.compare(string1, string2);
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/CollectionTimeline.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/CollectionTimeline.java
deleted file mode 100644
index a9a89054..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/CollectionTimeline.java
+++ /dev/null
@@ -1,217 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetBuilder;
-import com.twitter.sdk.android.core.models.TwitterCollection;
-import com.twitter.sdk.android.core.models.User;
-
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-import java.util.Map;
-
-import retrofit2.Call;
-
-/**
- * CollectionTimeline provides a timeline of tweets from the collections/collection API source.
- */
-public class CollectionTimeline extends BaseTimeline implements Timeline<Tweet> {
-    static final String COLLECTION_PREFIX = "custom-";
-
-    final TwitterCore twitterCore;
-    final String collectionIdentifier;
-    final Integer maxItemsPerRequest;
-
-    CollectionTimeline(TwitterCore twitterCore, Long collectionId, Integer maxItemsPerRequest) {
-        // prefix the collection id with the collection prefix
-        if (collectionId == null) {
-            this.collectionIdentifier = null;
-        } else {
-            this.collectionIdentifier = COLLECTION_PREFIX + Long.toString(collectionId);
-        }
-        this.twitterCore = twitterCore;
-        this.maxItemsPerRequest = maxItemsPerRequest;
-    }
-
-    /**
-     * Loads items with position greater than minPosition. If minPosition is null, loads items
-     * with the greatest ids.
-     * @param minPosition minimum position of the items to load (exclusive).
-     * @param cb callback.
-     */
-    @Override
-    public void next(Long minPosition, Callback<TimelineResult<Tweet>> cb) {
-        createCollectionRequest(minPosition, null).enqueue(new CollectionCallback(cb));
-    }
-
-    /**
-     * Loads items with position less than or equal to maxPosition.
-     * @param maxPosition maximum position of the items to load (exclusive).
-     * @param cb callback.
-     */
-    @Override
-    public void previous(Long maxPosition, Callback<TimelineResult<Tweet>> cb) {
-        createCollectionRequest(null, maxPosition).enqueue(new CollectionCallback(cb));
-    }
-
-    Call<TwitterCollection> createCollectionRequest(final Long minPosition,
-            final Long maxPosition) {
-        return twitterCore.getApiClient().getCollectionService()
-                .collection(collectionIdentifier, maxItemsPerRequest, maxPosition, minPosition);
-    }
-
-
-    /**
-     * Wrapper callback which unpacks a TwitterCollection into a TimelineResult (cursor and items).
-     */
-    class CollectionCallback extends Callback<TwitterCollection> {
-        final Callback<TimelineResult<Tweet>> cb;
-
-        /**
-         * Constructs a CollectionCallback
-         * @param cb A Callback which expects a TimelineResult
-         */
-        CollectionCallback(Callback<TimelineResult<Tweet>> cb) {
-            this.cb = cb;
-        }
-
-        @Override
-        public void success(Result<TwitterCollection> result) {
-            final TimelineCursor timelineCursor = getTimelineCursor(result.data);
-            final List<Tweet> tweets = getOrderedTweets(result.data);
-            final TimelineResult<Tweet> timelineResult;
-            if (timelineCursor != null) {
-                timelineResult = new TimelineResult<>(timelineCursor, tweets);
-            } else {
-                timelineResult = new TimelineResult<>(null, Collections.<Tweet>emptyList());
-            }
-            if (cb != null) {
-                cb.success(new Result(timelineResult, result.response));
-            }
-        }
-
-        @Override
-        public void failure(TwitterException exception) {
-            if (cb != null) {
-                cb.failure(exception);
-            }
-        }
-    }
-
-
-    static List<Tweet> getOrderedTweets(TwitterCollection collection) {
-        if (collection == null || collection.contents == null ||
-                collection.contents.tweetMap == null || collection.contents.userMap == null ||
-                collection.contents.tweetMap.isEmpty() || collection.contents.userMap.isEmpty() ||
-                collection.metadata == null || collection.metadata.timelineItems == null ||
-                collection.metadata.position == null) {
-            return Collections.emptyList();
-        }
-        final List<Tweet> tweets = new ArrayList<>();
-        for (TwitterCollection.TimelineItem item: collection.metadata.timelineItems) {
-            final Tweet trimmedTweet =  collection.contents.tweetMap.get(item.tweetItem.id);
-            final Tweet tweet = mapTweetToUsers(trimmedTweet, collection.contents.userMap);
-            tweets.add(tweet);
-        }
-        return tweets;
-    }
-
-    static Tweet mapTweetToUsers(Tweet trimmedTweet, Map<Long, User> userMap) {
-        // read user id from the trimmed Tweet
-        final Long userId = trimmedTweet.user.id;
-        // lookup User in the collection response's UserMap
-        final User user = userMap.get(userId);
-        // build the Tweet with the User
-        final TweetBuilder builder = new TweetBuilder().copy(trimmedTweet).setUser(user);
-        // Repeat process for any quote tweets
-        if (trimmedTweet.quotedStatus != null) {
-            final Tweet quoteStatus = mapTweetToUsers(trimmedTweet.quotedStatus, userMap);
-            builder.setQuotedStatus(quoteStatus);
-        }
-
-        return builder.build();
-    }
-
-    static TimelineCursor getTimelineCursor(TwitterCollection twitterCollection) {
-        if (twitterCollection == null || twitterCollection.metadata == null ||
-                twitterCollection.metadata.position == null) {
-            return null;
-        }
-        final Long minPosition = twitterCollection.metadata.position.minPosition;
-        final Long maxPosition = twitterCollection.metadata.position.maxPosition;
-        return new TimelineCursor(minPosition, maxPosition);
-    }
-
-    /**
-     * CollectionTimeline Builder.
-     */
-    public static class Builder {
-        private final TwitterCore twitterCore;
-        private Long collectionId;
-        private Integer maxItemsPerRequest = 30;
-
-        /**
-         * Constructs a Builder.
-         */
-        public Builder() {
-            twitterCore = TwitterCore.getInstance();
-        }
-
-        // For testing
-        Builder(TwitterCore twitterCore) {
-            this.twitterCore = twitterCore;
-        }
-
-        /**
-         * Sets the id for the CollectionTimeline.
-         * @param collectionId The collection id such as 539487832448843776.
-         */
-        public Builder id(Long collectionId) {
-            this.collectionId = collectionId;
-            return this;
-        }
-
-        /**
-         * Sets the number of Tweets returned per request for the CollectionTimeline.
-         * @param maxItemsPerRequest The number of tweets to return per request, up to a maximum of
-         *                           200.
-         */
-        public Builder maxItemsPerRequest(Integer maxItemsPerRequest) {
-            this.maxItemsPerRequest = maxItemsPerRequest;
-            return this;
-        }
-
-        /**
-         * Builds a CollectionTimeline from the Builder parameters.
-         * @return a CollectionTimeline
-         * @throws java.lang.IllegalStateException if query is not set (is null).
-         */
-        public CollectionTimeline build() {
-            if (collectionId == null) {
-                throw new IllegalStateException("collection id must not be null");
-            }
-            return new CollectionTimeline(twitterCore, collectionId, maxItemsPerRequest);
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ColorUtils.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ColorUtils.java
deleted file mode 100644
index 2cda092e..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ColorUtils.java
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.graphics.Color;
-
-final class ColorUtils {
-    private ColorUtils() {}
-
-    /**
-     * This method calculates a combination of colors using an opacity of the foreground layered
-     * over the background color. This allows us to optimize color calculations instead of setting
-     * alpha values in the color attributes on the views directly.
-     *
-     * @param opacity      A value in the range of 0 to 1 that indicates the opacity desired for the
-     *                     overlay color
-     * @param overlayColor The foreground color that the opacity will be applied to
-     * @param primaryColor The background color that the foreground color is applied to
-     * @return             The combined color value
-     */
-    static int calculateOpacityTransform(final double opacity, final int overlayColor,
-            final int primaryColor) {
-        final int redPrimary = Color.red(primaryColor);
-        final int redOverlay = Color.red(overlayColor);
-        final int greenPrimary = Color.green(primaryColor);
-        final int greenOverlay = Color.green(overlayColor);
-        final int bluePrimary = Color.blue(primaryColor);
-        final int blueOverlay = Color.blue(overlayColor);
-
-        final int redCalculated = (int) ((1 - opacity) * redPrimary + opacity * redOverlay);
-        final int greenCalculated = (int) ((1 - opacity) * greenPrimary + opacity * greenOverlay);
-        final int blueCalculated = (int) ((1 - opacity) * bluePrimary + opacity * blueOverlay);
-
-        return Color.rgb(redCalculated, greenCalculated, blueCalculated);
-    }
-
-    /**
-     * This method uses HSL to determine in a human eyesight terms if a color is light or not.
-     * See: http://en.wikipedia.org/wiki/HSL_and_HSV. The threshold values are from ITU Rec. 709
-     * http://en.wikipedia.org/wiki/Rec._709#Luma_coefficients
-     *
-     * @param  color A color value
-     * @return Whether or not the color is considered light
-     */
-    static boolean isLightColor(final int color) {
-        final int r = Color.red(color);
-        final int g = Color.green(color);
-        final int b = Color.blue(color);
-
-        final double threshold = 0.21 * r + 0.72 * g + 0.07 * b;
-        return threshold > 128;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/CompactTweetView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/CompactTweetView.java
deleted file mode 100644
index db5214e6..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/CompactTweetView.java
+++ /dev/null
@@ -1,114 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.util.AttributeSet;
-
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.core.models.Tweet;
-
-public class CompactTweetView extends BaseTweetView {
-    private static final double SQUARE_ASPECT_RATIO = 1.0;
-    private static final double MAX_LANDSCAPE_ASPECT_RATIO = 3.0;
-    private static final double MIN_LANDSCAPE_ASPECT_RATIO = 4.0 / 3.0;
-    private static final double DEFAULT_ASPECT_RATIO_MEDIA_CONTAINER = 16.0 / 10.0;
-
-    public CompactTweetView(Context context, Tweet tweet) {
-        super(context, tweet);
-    }
-
-    public CompactTweetView(Context context, Tweet tweet, int styleResId) {
-        super(context, tweet, styleResId);
-    }
-
-    CompactTweetView(Context context, Tweet tweet, int styleResId,
-            DependencyProvider dependencyProvider) {
-        super(context, tweet, styleResId, dependencyProvider);
-    }
-
-    public CompactTweetView(Context context, AttributeSet attrs) {
-        super(context, attrs);
-    }
-
-    public CompactTweetView(Context context, AttributeSet attrs, int defStyle) {
-        super(context, attrs, defStyle);
-    }
-
-    @Override
-    protected int getLayout() {
-        return R.layout.tw__tweet_compact;
-    }
-
-    @Override
-    void render() {
-        super.render();
-
-        // Redraw screen name on recycle, because TextView doesn't resize when text length changes
-        screenNameView.requestLayout();
-    }
-
-    @Override
-    protected void applyStyles() {
-        super.applyStyles();
-
-        final int paddingTop = getResources()
-                .getDimensionPixelSize(R.dimen.tw__compact_tweet_container_padding_top);
-        setPadding(0, paddingTop, 0, 0);
-
-        final int mediaViewRadius =
-                getResources().getDimensionPixelSize(R.dimen.tw__media_view_radius);
-        tweetMediaView.setRoundedCornersRadii(mediaViewRadius, mediaViewRadius,
-                mediaViewRadius, mediaViewRadius);
-    }
-
-    /**
-     * Returns the desired aspect ratio of the Tweet media entity according to "sizes" metadata
-     * and the aspect ratio display rules.
-     * @param photoEntity the first
-     * @return the target image and bitmap width to height aspect ratio
-     */
-    @Override
-    protected double getAspectRatio(MediaEntity photoEntity) {
-        final double ratio = super.getAspectRatio(photoEntity);
-        if (ratio <= SQUARE_ASPECT_RATIO) {
-            // portrait (tall) photos should be cropped to be square aspect ratio
-            return SQUARE_ASPECT_RATIO;
-        } else if (ratio > MAX_LANDSCAPE_ASPECT_RATIO) {
-            // the widest landscape photos allowed are 3:1
-            return MAX_LANDSCAPE_ASPECT_RATIO;
-        } else if (ratio < MIN_LANDSCAPE_ASPECT_RATIO) {
-            // the tallest landscape photos allowed are 4:3
-            return MIN_LANDSCAPE_ASPECT_RATIO;
-        } else {
-            // landscape photos between 3:1 to 4:3 present the original width to height ratio
-            return ratio;
-        }
-    }
-
-    /**
-     * Returns the desired aspect ratio for Tweet that contains photo entities
-     *
-     * @param photoCount total count of photo entities
-     * @return the target image and bitmap width to height aspect ratio
-     */
-    @Override
-    protected double getAspectRatioForPhotoEntity(int photoCount) {
-        return DEFAULT_ASPECT_RATIO_MEDIA_CONTAINER;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FilterTimelineDelegate.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FilterTimelineDelegate.java
deleted file mode 100644
index 2640f26c..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FilterTimelineDelegate.java
+++ /dev/null
@@ -1,132 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.os.Handler;
-import android.os.Looper;
-
-import com.google.gson.Gson;
-import com.google.gson.JsonObject;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import java.util.List;
-import java.util.concurrent.ExecutorService;
-
-/**
- * FilterTimelineDelegate manages and filters timeline data items and loads items from a Timeline.
- */
-class FilterTimelineDelegate extends TimelineDelegate<Tweet> {
-    final TimelineFilter timelineFilter;
-    final TweetUi tweetUi;
-
-    static final String TWEETS_COUNT_JSON_PROP = "tweet_count";
-    static final String TWEETS_FILTERED_JSON_PROP = "tweets_filtered";
-    static final String TOTAL_APPLIED_FILTERS_JSON_PROP = "total_filters";
-    final Gson gson = new Gson();
-
-    /**
-     * Constructs a FilterTimelineDelegate with a timeline for requesting data and timelineFilter to
-     * filter tweets
-     * @param timeline Timeline source
-     * @param timelineFilter a timelineFilter for filtering tweets from timeline
-     * @throws java.lang.IllegalArgumentException if timeline is null
-     */
-    FilterTimelineDelegate(Timeline<Tweet> timeline, TimelineFilter timelineFilter) {
-        super(timeline);
-        this.timelineFilter = timelineFilter;
-        this.tweetUi = TweetUi.getInstance();
-    }
-
-    @Override
-    public void refresh(Callback<TimelineResult<Tweet>> developerCb) {
-        // reset scrollStateHolder cursors to be null, loadNext will get latest items
-        timelineStateHolder.resetCursors();
-        // load latest timeline items and replace existing items
-        loadNext(timelineStateHolder.positionForNext(),
-                new TimelineFilterCallback(new RefreshCallback(developerCb, timelineStateHolder),
-                timelineFilter));
-    }
-
-    @Override
-    public void next(Callback<TimelineResult<Tweet>> developerCb) {
-        loadNext(timelineStateHolder.positionForNext(),
-            new TimelineFilterCallback(new NextCallback(developerCb, timelineStateHolder),
-                    timelineFilter));
-    }
-
-    @Override
-    public void previous() {
-        loadPrevious(timelineStateHolder.positionForPrevious(),
-                new TimelineFilterCallback(new PreviousCallback(timelineStateHolder),
-                        timelineFilter));
-    }
-
-    /**
-     * Handles filtering of tweets from the timeline, provided a given TimelineFilter
-     */
-    class TimelineFilterCallback extends Callback<TimelineResult<Tweet>> {
-        final DefaultCallback callback;
-        final TimelineFilter timelineFilter;
-        final Handler handler;
-        final ExecutorService executorService;
-
-        TimelineFilterCallback(DefaultCallback callback, TimelineFilter timelineFilter) {
-            this.callback = callback;
-            this.timelineFilter = timelineFilter;
-            this.handler = new Handler(Looper.getMainLooper());
-            this.executorService = Twitter.getInstance().getExecutorService();
-        }
-
-        @Override
-        public void success(final Result<TimelineResult<Tweet>> result) {
-            final Runnable timelineFilterRunnable = () -> {
-                final List<Tweet> filteredTweets = timelineFilter.filter(result.data.items);
-                final TimelineResult<Tweet> filteredTimelineResult =
-                        buildTimelineResult(result.data.timelineCursor, filteredTweets);
-
-                handler.post(() -> callback.success(new Result<>(filteredTimelineResult, result.response)));
-            };
-
-            executorService.execute(timelineFilterRunnable);
-        }
-
-        @Override
-        public void failure(final TwitterException ex) {
-            if (callback != null) {
-                callback.failure(ex);
-            }
-        }
-
-        TimelineResult<Tweet> buildTimelineResult(TimelineCursor timelineCursor,
-                                                  List<Tweet> filteredTweets) {
-            return new TimelineResult<>(timelineCursor, filteredTweets);
-        }
-    }
-
-    private String getJsonMessage(int totalTweetsSize, int filteredTweetsSize, int totalFilters) {
-        final JsonObject message = new JsonObject();
-        message.addProperty(TWEETS_COUNT_JSON_PROP, totalTweetsSize);
-        message.addProperty(TWEETS_FILTERED_JSON_PROP, totalTweetsSize - filteredTweetsSize);
-        message.addProperty(TOTAL_APPLIED_FILTERS_JSON_PROP, totalFilters);
-        return gson.toJson(message);
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FilterValues.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FilterValues.java
deleted file mode 100644
index 5cfd228e..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FilterValues.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.google.gson.annotations.SerializedName;
-import com.twitter.sdk.android.core.models.ModelUtils;
-
-import java.util.List;
-
-public class FilterValues {
-
-    @SerializedName("keywords")
-    public final List<String> keywords;
-
-    @SerializedName("hashtags")
-    public final List<String> hashtags;
-
-    @SerializedName("handles")
-    public final List<String> handles;
-
-    @SerializedName("urls")
-    public final List<String> urls;
-
-    private FilterValues() {
-        this(null, null, null, null);
-    }
-
-    public FilterValues(List<String> keywords, List<String> hashtags,
-                        List<String> handles, List<String> urls) {
-        this.keywords = ModelUtils.getSafeList(keywords);
-        this.hashtags = ModelUtils.getSafeList(hashtags);
-        this.handles = ModelUtils.getSafeList(handles);
-        this.urls = ModelUtils.getSafeList(urls);
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FixedTweetTimeline.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FixedTweetTimeline.java
deleted file mode 100644
index 06ea1e4c..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FixedTweetTimeline.java
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-
-
-public class FixedTweetTimeline extends BaseTimeline implements Timeline<Tweet> {
-    final List<Tweet> tweets;
-
-    FixedTweetTimeline(List<Tweet> tweets) {
-        this.tweets = tweets == null ? new ArrayList<>() : tweets;
-    }
-
-    @Override
-    public void next(Long minPosition, Callback<TimelineResult<Tweet>> cb) {
-        // always return the same fixed set of 'latest' Tweets
-        final TimelineResult<Tweet> timelineResult
-                = new TimelineResult<>(new TimelineCursor(tweets), tweets);
-        cb.success(new Result(timelineResult, null));
-    }
-
-    @Override
-    public void previous(Long maxPosition, Callback<TimelineResult<Tweet>> cb) {
-        final List<Tweet> empty = Collections.emptyList();
-        final TimelineResult<Tweet> timelineResult = new TimelineResult<>(new TimelineCursor(empty),
-                empty);
-        cb.success(new Result(timelineResult, null));
-    }
-
-    /**
-     * FixedTweetTimeline Builder.
-     */
-    public static class Builder {
-        private List<Tweet> tweets;
-
-        /**
-         * Constructs a Builder.
-         */
-        public Builder() {}
-
-        /**
-         * Sets the Tweets to be returned by the timeline.
-         * @param tweets fixed set of Tweets provided by the timeline.
-         */
-        public Builder setTweets(List<Tweet> tweets) {
-            this.tweets = tweets;
-            return this;
-        }
-
-        /**
-         * Builds a FixedTweetTimeline from the Builder parameters.
-         * @return a FixedTweetTimeline.
-         */
-        public FixedTweetTimeline build() {
-            return new FixedTweetTimeline(tweets);
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FormattedMediaEntity.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FormattedMediaEntity.java
deleted file mode 100644
index 23364597..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FormattedMediaEntity.java
+++ /dev/null
@@ -1,32 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.models.MediaEntity;
-
-class FormattedMediaEntity extends FormattedUrlEntity {
-    final String type;
-    final String mediaUrlHttps;
-
-    FormattedMediaEntity(MediaEntity entity) {
-        super(entity.getStart(), entity.getEnd(), entity.displayUrl, entity.url,
-                entity.expandedUrl);
-        this.type = entity.type;
-        this.mediaUrlHttps = entity.mediaUrlHttps;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FormattedTweetText.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FormattedTweetText.java
deleted file mode 100644
index 71748efd..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FormattedTweetText.java
+++ /dev/null
@@ -1,43 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * This class holds values we need to correctly render tweet text. The values returned directly
- * from the REST API are html escaped for & < and > characters as well as not counting emoji
- * characters correctly in the entity indices.
- */
-class FormattedTweetText {
-    String text;
-    final List<FormattedUrlEntity> urlEntities;
-    final List<FormattedMediaEntity> mediaEntities;
-    final List<FormattedUrlEntity> hashtagEntities;
-    final List<FormattedUrlEntity> mentionEntities;
-    final List<FormattedUrlEntity> symbolEntities;
-
-    FormattedTweetText() {
-        urlEntities = new ArrayList<>();
-        mediaEntities = new ArrayList<>();
-        hashtagEntities = new ArrayList<>();
-        mentionEntities = new ArrayList<>();
-        symbolEntities = new ArrayList<>();
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FormattedUrlEntity.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FormattedUrlEntity.java
deleted file mode 100644
index 7075d05f..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FormattedUrlEntity.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.models.HashtagEntity;
-import com.twitter.sdk.android.core.models.MentionEntity;
-import com.twitter.sdk.android.core.models.SymbolEntity;
-import com.twitter.sdk.android.core.models.UrlEntity;
-
-class FormattedUrlEntity {
-    int start;
-    int end;
-    final String displayUrl;
-    final String url;
-    final String expandedUrl;
-
-    FormattedUrlEntity(int start, int end, String displayUrl, String url, String expandedUrl) {
-        this.start = start;
-        this.end = end;
-        this.displayUrl = displayUrl;
-        this.url = url;
-        this.expandedUrl = expandedUrl;
-    }
-
-    static FormattedUrlEntity createFormattedUrlEntity(UrlEntity entity) {
-        return new FormattedUrlEntity(entity.getStart(), entity.getEnd(), entity.displayUrl,
-                entity.url, entity.expandedUrl);
-    }
-
-    static FormattedUrlEntity createFormattedUrlEntity(HashtagEntity hashtagEntity) {
-        final String url = TweetUtils.getHashtagPermalink(hashtagEntity.text);
-        return new FormattedUrlEntity(hashtagEntity.getStart(), hashtagEntity.getEnd(),
-                "#" + hashtagEntity.text, url, url);
-    }
-
-    static FormattedUrlEntity createFormattedUrlEntity(MentionEntity mentionEntity) {
-        final String url = TweetUtils.getProfilePermalink(mentionEntity.screenName);
-        return new FormattedUrlEntity(mentionEntity.getStart(), mentionEntity.getEnd(),
-                "@" + mentionEntity.screenName, url, url);
-    }
-
-    static FormattedUrlEntity createFormattedUrlEntity(SymbolEntity symbolEntity) {
-        final String url = TweetUtils.getSymbolPermalink(symbolEntity.text);
-        return new FormattedUrlEntity(symbolEntity.getStart(), symbolEntity.getEnd(),
-                "$" + symbolEntity.text, url, url);
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/GalleryActivity.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/GalleryActivity.java
deleted file mode 100644
index 19516fa1..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/GalleryActivity.java
+++ /dev/null
@@ -1,122 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.support.v4.view.ViewPager;
-
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.tweetui.internal.SwipeToDismissTouchListener;
-
-import java.io.Serializable;
-import java.util.Collections;
-import java.util.List;
-
-public class GalleryActivity extends Activity {
-    public static final String GALLERY_ITEM = "GALLERY_ITEM";
-    static final String MEDIA_ENTITY = "MEDIA_ENTITY";
-    GalleryItem galleryItem;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.tw__gallery_activity);
-
-        galleryItem = getGalleryItem();
-
-        final GalleryAdapter adapter = new GalleryAdapter(this, getSwipeToDismissCallback());
-        adapter.addAll(galleryItem.mediaEntities);
-
-        final ViewPager viewPager = findViewById(R.id.tw__view_pager);
-        final int marginPixels =
-                getResources().getDimensionPixelSize(R.dimen.tw__gallery_page_margin);
-        viewPager.setPageMargin(marginPixels);
-        viewPager.addOnPageChangeListener(getOnPageChangeListener());
-        viewPager.setAdapter(adapter);
-        viewPager.setCurrentItem(galleryItem.mediaEntityIndex);
-    }
-
-    ViewPager.OnPageChangeListener getOnPageChangeListener() {
-        return new ViewPager.OnPageChangeListener() {
-            int galleryPosition = -1;
-
-            @Override
-            public void onPageScrolled(int position, float positionOffset,
-                                       int positionOffsetPixels) {
-                // Initial on tap of entity at position 0, which is not invoked by onPageSelected()
-                if (galleryPosition == -1 && position == 0 && positionOffset == 0.0) {
-                    galleryPosition++;
-                }
-            }
-
-            @Override
-            public void onPageSelected(int position) {
-                galleryPosition++;
-            }
-
-            @Override
-            public void onPageScrollStateChanged(int state) { /* intentionally blank */ }
-        };
-    }
-
-    SwipeToDismissTouchListener.Callback getSwipeToDismissCallback() {
-       return new SwipeToDismissTouchListener.Callback() {
-           @Override
-           public void onDismiss() {
-               finish();
-               overridePendingTransition(0, R.anim.tw__slide_out);
-           }
-
-           @Override
-           public void onMove(float translationY) { /* intentionally blank */ }
-       };
-    }
-
-    // For backwards compatibility we need to support single entity or list of entities.
-    GalleryItem getGalleryItem() {
-        final MediaEntity entity = (MediaEntity) getIntent().getSerializableExtra(MEDIA_ENTITY);
-        if (entity != null) {
-            return new GalleryItem(0, Collections.singletonList(entity));
-        }
-
-        return (GalleryItem) getIntent().getSerializableExtra(GALLERY_ITEM);
-    }
-
-    @Override
-    public void onBackPressed() {
-        super.onBackPressed();
-        overridePendingTransition(0, R.anim.tw__slide_out);
-    }
-
-    public static class GalleryItem implements Serializable {
-        public final long tweetId;
-        public final int mediaEntityIndex;
-        public final List<MediaEntity> mediaEntities;
-
-        public GalleryItem(int mediaEntityIndex, List<MediaEntity> mediaEntities) {
-            this(0L, mediaEntityIndex, mediaEntities);
-        }
-
-        public GalleryItem(long tweetId, int mediaEntityIndex, List<MediaEntity> mediaEntities) {
-            this.tweetId = tweetId;
-            this.mediaEntityIndex = mediaEntityIndex;
-            this.mediaEntities = mediaEntities;
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/GalleryAdapter.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/GalleryAdapter.java
deleted file mode 100644
index 8dbcb965..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/GalleryAdapter.java
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.support.v4.view.PagerAdapter;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.squareup.picasso.Picasso;
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.tweetui.internal.GalleryImageView;
-import com.twitter.sdk.android.tweetui.internal.SwipeToDismissTouchListener;
-
-import java.util.ArrayList;
-import java.util.List;
-
-class GalleryAdapter extends PagerAdapter {
-    final List<MediaEntity> items = new ArrayList<>();
-    final Context context;
-    final SwipeToDismissTouchListener.Callback callback;
-
-    GalleryAdapter(Context context, SwipeToDismissTouchListener.Callback callback) {
-        this.context = context;
-        this.callback = callback;
-    }
-
-    void addAll(List<MediaEntity> entities) {
-        items.addAll(entities);
-        notifyDataSetChanged();
-    }
-
-    @Override
-    public int getCount() {
-        return items.size();
-    }
-
-    @Override
-    public boolean isViewFromObject(View view, Object object) {
-        return view == object;
-    }
-
-    @Override
-    public Object instantiateItem(ViewGroup container, int position) {
-        final GalleryImageView root = new GalleryImageView(context);
-        root.setSwipeToDismissCallback(callback);
-
-        container.addView(root);
-
-        final MediaEntity entity = items.get(position);
-        Picasso.with(context).load(entity.mediaUrlHttps).into(root);
-
-        return root;
-    }
-
-    @Override
-    public void destroyItem(ViewGroup container, int position, Object object) {
-        container.removeView((View) object);
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/LikeTweetAction.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/LikeTweetAction.java
deleted file mode 100644
index 4a5f4ded..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/LikeTweetAction.java
+++ /dev/null
@@ -1,116 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.view.View;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterApiException;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.internal.TwitterApiConstants;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetBuilder;
-
-/*
- * LikeTweetAction is a click listener for ToggleImageButtons which performs Twitter API
- * favorite/unfavorite actions onClick, updates button state, and calls through to the given
- * callback.
- */
-class LikeTweetAction extends BaseTweetAction implements View.OnClickListener {
-    final Tweet tweet;
-    final TweetRepository tweetRepository;
-    final TweetUi tweetUi;
-
-    LikeTweetAction(Tweet tweet, TweetUi tweetUi, Callback<Tweet> cb) {
-        super(cb);
-        this.tweet = tweet;
-        this.tweetUi = tweetUi;
-        this.tweetRepository = tweetUi.getTweetRepository();
-    }
-
-    @Override
-    public void onClick(View view) {
-        if (view instanceof ToggleImageButton) {
-            final ToggleImageButton toggleImageButton = (ToggleImageButton) view;
-            if (tweet.favorited) {
-                tweetRepository.unfavorite(tweet.id,
-                        new LikeCallback(toggleImageButton, tweet, getActionCallback()));
-            } else {
-                tweetRepository.favorite(tweet.id,
-                        new LikeCallback(toggleImageButton, tweet, getActionCallback()));
-            }
-        }
-    }
-
-    /*
-     * Toggles like button state to handle favorite/unfavorite API exceptions. It calls through to
-     * the given action callback.
-     */
-    static class LikeCallback extends Callback<Tweet> {
-        final ToggleImageButton button;
-        final Tweet tweet;
-        final Callback<Tweet> cb;
-
-        /*
-         * Constructs a new FavoriteCallback.
-         * @param button Favorite ToggleImageButton which should reflect Tweet favorited state
-         * @param wasFavorited whether the Tweet was favorited or not before the click
-         * @param cb the Callback.
-         */
-        LikeCallback(ToggleImageButton button, Tweet tweet, Callback<Tweet> cb) {
-            this.button = button;
-            this.tweet = tweet;
-            this.cb = cb;
-        }
-
-        @Override
-        public void success(Result<Tweet> result) {
-            cb.success(result);
-        }
-
-        @Override
-        public void failure(TwitterException exception) {
-            if (exception instanceof TwitterApiException) {
-                final TwitterApiException apiException = (TwitterApiException) exception;
-                final int errorCode = apiException.getErrorCode();
-
-                switch (errorCode) {
-                    case TwitterApiConstants.Errors.ALREADY_FAVORITED:
-                        final Tweet favorited = new TweetBuilder().copy(tweet).setFavorited(true)
-                                .build();
-                        cb.success(new Result<>(favorited, null));
-                        return;
-                    case TwitterApiConstants.Errors.ALREADY_UNFAVORITED:
-                        final Tweet unfavorited = new TweetBuilder().copy(tweet).setFavorited(false)
-                                .build();
-                        cb.success(new Result<>(unfavorited, null));
-                        return;
-                    default:
-                        // reset the toggle state back to match the Tweet
-                        button.setToggledOn(tweet.favorited);
-                        cb.failure(exception);
-                        return;
-                }
-            }
-            // reset the toggle state back to match the Tweet
-            button.setToggledOn(tweet.favorited);
-            cb.failure(exception);
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/LinkClickListener.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/LinkClickListener.java
deleted file mode 100644
index 701ac560..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/LinkClickListener.java
+++ /dev/null
@@ -1,30 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-/**
- * Tweet interaction listener
- */
-interface LinkClickListener {
-    /**
-     * A URL was clicked
-     *
-     * @param url The source URL
-     */
-    void onUrlClicked(String url);
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/LoggingCallback.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/LoggingCallback.java
deleted file mode 100644
index 4d7516f3..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/LoggingCallback.java
+++ /dev/null
@@ -1,53 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Logger;
-import com.twitter.sdk.android.core.TwitterException;
-
-/**
- * LoggingCallback logs error messages to the logger and passes TwitterExceptions through to the
- * given Callback. Concrete subclasses must implement success(Result<T> result) and optionally call
- * cb's success with the appropriate unpacked result data.
- * @param <T> expected response type
- */
-abstract class LoggingCallback<T> extends Callback<T> {
-    // Wrapped cb generic type is unknown, concrete subclass responsible for implementing
-    // success(Result<T> result) and unpacking result to call cb with proper type checking
-    private final Callback cb;
-    private final Logger logger;
-
-    /**
-     * Constructs a LoggingCallback.
-     * @param cb Wrapped Callback of any type
-     * @param logger a Logger.
-     */
-    LoggingCallback(Callback cb, Logger logger) {
-        this.cb = cb;
-        this.logger = logger;
-    }
-
-    @Override
-    public void failure(TwitterException exception) {
-        logger.e(TweetUi.LOGTAG, exception.getMessage(), exception);
-        if (cb != null) {
-            cb.failure(exception);
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/PlayerActivity.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/PlayerActivity.java
deleted file mode 100644
index 4dea8351..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/PlayerActivity.java
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.view.View;
-
-import com.twitter.sdk.android.tweetui.internal.SwipeToDismissTouchListener;
-
-import java.io.Serializable;
-
-public class PlayerActivity extends Activity {
-
-    public static final String PLAYER_ITEM = "PLAYER_ITEM";
-
-    PlayerController playerController;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.tw__player_activity);
-
-        final PlayerItem item = (PlayerItem) getIntent().getSerializableExtra(PLAYER_ITEM);
-        final View rootView = findViewById(android.R.id.content);
-        playerController = new PlayerController(rootView,
-                new SwipeToDismissTouchListener.Callback(){
-
-            @Override
-            public void onDismiss() {
-                PlayerActivity.this.finish();
-                overridePendingTransition(0, R.anim.tw__slide_out);
-            }
-
-            @Override
-            public void onMove(float translationY) {
-
-            }
-        });
-        playerController.prepare(item);
-    }
-
-    @Override
-    protected void onResume() {
-        super.onResume();
-        playerController.onResume();
-    }
-
-    @Override
-    protected void onPause() {
-        playerController.onPause();
-        super.onPause();
-    }
-
-    @Override
-    public void onDestroy() {
-        playerController.onDestroy();
-        super.onDestroy();
-    }
-
-    @Override
-    public void onBackPressed() {
-        super.onBackPressed();
-        overridePendingTransition(0, R.anim.tw__slide_out);
-    }
-
-    public static class PlayerItem implements Serializable {
-        public final String url;
-        public final boolean looping;
-        public final boolean showVideoControls;
-        public final String callToActionUrl;
-        public final String callToActionText;
-
-        public PlayerItem(String url, boolean looping, boolean showVideoControls,
-                          String callToActionText, String callToActionUrl) {
-            this.url = url;
-            this.looping = looping;
-            this.showVideoControls = showVideoControls;
-            this.callToActionText = callToActionText;
-            this.callToActionUrl = callToActionUrl;
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/PlayerController.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/PlayerController.java
deleted file mode 100644
index b810f4b1..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/PlayerController.java
+++ /dev/null
@@ -1,162 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Intent;
-import android.media.MediaPlayer;
-import android.net.Uri;
-import android.view.View;
-import android.widget.ProgressBar;
-import android.widget.TextView;
-
-import com.twitter.sdk.android.core.IntentUtils;
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.tweetui.internal.SwipeToDismissTouchListener;
-import com.twitter.sdk.android.tweetui.internal.VideoControlView;
-import com.twitter.sdk.android.tweetui.internal.VideoView;
-
-class PlayerController {
-    private static final String TAG = "PlayerController";
-    final VideoView videoView;
-    final VideoControlView videoControlView;
-    final ProgressBar videoProgressView;
-    final TextView callToActionView;
-    final View rootView;
-    int seekPosition;
-    boolean isPlaying = true;
-    final SwipeToDismissTouchListener.Callback callback;
-
-    PlayerController(View rootView, SwipeToDismissTouchListener.Callback callback) {
-        this.rootView = rootView;
-        this.videoView = rootView.findViewById(R.id.video_view);
-        this.videoControlView = rootView.findViewById(R.id.video_control_view);
-        this.videoProgressView = rootView.findViewById(R.id.video_progress_view);
-        this.callToActionView = rootView.findViewById(R.id.call_to_action_view);
-        this.callback = callback;
-    }
-
-    // Unit testing purposes
-    PlayerController(View rootView, VideoView videoView, VideoControlView videoControlView,
-            ProgressBar videoProgressView, TextView callToActionView,
-            SwipeToDismissTouchListener.Callback callback) {
-        this.rootView = rootView;
-        this.videoView = videoView;
-        this.videoControlView = videoControlView;
-        this.videoProgressView = videoProgressView;
-        this.callToActionView = callToActionView;
-        this.callback = callback;
-    }
-
-    void prepare(PlayerActivity.PlayerItem item) {
-        try {
-            setUpCallToAction(item);
-            setUpMediaControl(item.looping, item.showVideoControls);
-            final View.OnTouchListener listener = SwipeToDismissTouchListener
-                    .createFromView(videoView, callback);
-            videoView.setOnTouchListener(listener);
-            videoView.setOnPreparedListener(mediaPlayer -> videoProgressView.setVisibility(View.GONE));
-            videoView.setOnInfoListener((mediaPlayer, what, extra) -> {
-                if (what == MediaPlayer.MEDIA_INFO_BUFFERING_END) {
-                    videoProgressView.setVisibility(View.GONE);
-                    return true;
-                } else if (what == MediaPlayer.MEDIA_INFO_BUFFERING_START) {
-                    videoProgressView.setVisibility(View.VISIBLE);
-                    return true;
-                }
-                return false;
-            });
-            final Uri uri = Uri.parse(item.url);
-            videoView.setVideoURI(uri, item.looping);
-            videoView.requestFocus();
-        } catch (Exception e) {
-            Twitter.getLogger().e(TAG, "Error occurred during video playback", e);
-        }
-    }
-
-    void onResume() {
-        if (seekPosition != 0) {
-            videoView.seekTo(seekPosition);
-        }
-        if (isPlaying) {
-            videoView.start();
-            videoControlView.update();
-        }
-    }
-
-    void onPause() {
-        isPlaying = videoView.isPlaying();
-        seekPosition = videoView.getCurrentPosition();
-        videoView.pause();
-    }
-
-    void onDestroy() {
-        videoView.stopPlayback();
-    }
-
-    void setUpMediaControl(boolean looping, boolean showVideoControls) {
-        if (looping && !showVideoControls) {
-            setUpLoopControl();
-        } else {
-            setUpMediaControl();
-        }
-    }
-
-    void setUpLoopControl() {
-        videoControlView.setVisibility(View.INVISIBLE);
-        videoView.setOnClickListener(view -> {
-            if (videoView.isPlaying()) {
-                videoView.pause();
-            } else {
-                videoView.start();
-            }
-        });
-    }
-
-    void setUpMediaControl() {
-        videoView.setMediaController(videoControlView);
-    }
-
-    void setUpCallToAction(PlayerActivity.PlayerItem item) {
-        if (item.callToActionText != null && item.callToActionUrl != null) {
-            callToActionView.setVisibility(View.VISIBLE);
-            callToActionView.setText(item.callToActionText);
-            setUpCallToActionListener(item.callToActionUrl);
-            setUpRootViewOnClickListener();
-        }
-    }
-
-    void setUpCallToActionListener(final String callToActionUrl) {
-        callToActionView.setOnClickListener(v -> {
-            final Uri uri = Uri.parse(callToActionUrl);
-            final Intent intent = new Intent(Intent.ACTION_VIEW, uri);
-            IntentUtils.safeStartActivity(callToActionView.getContext(), intent);
-        });
-    }
-
-    void setUpRootViewOnClickListener() {
-        rootView.setOnClickListener(v -> {
-            if (callToActionView.getVisibility() == View.VISIBLE) {
-                callToActionView.setVisibility(View.GONE);
-            } else {
-                callToActionView.setVisibility(View.VISIBLE);
-            }
-        });
-    }
-
-
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/QuoteTweetView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/QuoteTweetView.java
deleted file mode 100644
index f5f5ceae..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/QuoteTweetView.java
+++ /dev/null
@@ -1,109 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-
-import com.twitter.sdk.android.core.models.MediaEntity;
-
-public class QuoteTweetView extends AbstractTweetView {
-    private static final double SQUARE_ASPECT_RATIO = 1.0;
-    private static final double MAX_LANDSCAPE_ASPECT_RATIO = 3.0;
-    private static final double MIN_LANDSCAPE_ASPECT_RATIO = 4.0 / 3.0;
-    private static final double DEFAULT_ASPECT_RATIO_MEDIA_CONTAINER = 16.0 / 10.0;
-
-    public QuoteTweetView(Context context) {
-        this(context, new DependencyProvider());
-    }
-
-    QuoteTweetView(Context context, DependencyProvider dependencyProvider) {
-        super(context, null, 0, dependencyProvider);
-    }
-
-    public void setStyle(int primaryTextColor, int secondaryTextColor, int actionColor,
-                         int actionHighlightColor, int mediaBgColor, int photoErrorResId) {
-        this.primaryTextColor = primaryTextColor;
-        this.secondaryTextColor = secondaryTextColor;
-        this.actionColor = actionColor;
-        this.actionHighlightColor = actionHighlightColor;
-        this.mediaBgColor = mediaBgColor;
-        this.photoErrorResId = photoErrorResId;
-
-        applyStyles();
-    }
-
-    @Override
-    protected int getLayout() {
-        return R.layout.tw__tweet_quote;
-    }
-
-    @Override
-    void render() {
-        super.render();
-        // Redraw screen name on recycle
-        screenNameView.requestLayout();
-    }
-
-    protected void applyStyles() {
-        final int mediaViewRadius =
-                getResources().getDimensionPixelSize(R.dimen.tw__media_view_radius);
-        tweetMediaView.setRoundedCornersRadii(0, 0, mediaViewRadius, mediaViewRadius);
-
-        setBackgroundResource(R.drawable.tw__quote_tweet_border);
-        fullNameView.setTextColor(primaryTextColor);
-        screenNameView.setTextColor(secondaryTextColor);
-        contentView.setTextColor(primaryTextColor);
-        tweetMediaView.setMediaBgColor(mediaBgColor);
-        tweetMediaView.setPhotoErrorResId(photoErrorResId);
-    }
-
-    /**
-     * Returns the desired aspect ratio of the Tweet media entity according to "sizes" metadata
-     * and the aspect ratio display rules.
-     * @param photoEntity the first
-     * @return the target image and bitmap width to height aspect ratio
-     */
-    @Override
-    protected double getAspectRatio(MediaEntity photoEntity) {
-        final double ratio = super.getAspectRatio(photoEntity);
-        if (ratio <= SQUARE_ASPECT_RATIO) {
-            // portrait (tall) photos should be cropped to be square aspect ratio
-            return SQUARE_ASPECT_RATIO;
-        } else if (ratio > MAX_LANDSCAPE_ASPECT_RATIO) {
-            // the widest landscape photos allowed are 3:1
-            return MAX_LANDSCAPE_ASPECT_RATIO;
-        } else if (ratio < MIN_LANDSCAPE_ASPECT_RATIO) {
-            // the tallest landscape photos allowed are 4:3
-            return MIN_LANDSCAPE_ASPECT_RATIO;
-        } else {
-            // landscape photos between 3:1 to 4:3 present the original width to height ratio
-            return ratio;
-        }
-    }
-
-    /**
-     * Returns the desired aspect ratio for Tweet that contains photo entities
-     *
-     * @param photoCount total count of photo entities
-     * @return the target image and bitmap width to height aspect ratio
-     */
-    @Override
-    protected double getAspectRatioForPhotoEntity(int photoCount) {
-        return DEFAULT_ASPECT_RATIO_MEDIA_CONTAINER;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ResetTweetCallback.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ResetTweetCallback.java
deleted file mode 100644
index 56474d41..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ResetTweetCallback.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-
-/**
- * Handles Tweet successes and failures by setting the new Tweet on the given TweetView and
- * clearing the single Tweet cache. Calls through to the given Callback.
- */
-class ResetTweetCallback extends Callback<Tweet> {
-    final BaseTweetView baseTweetView;
-    final TweetRepository tweetRepository;
-    final Callback<Tweet> cb;
-
-    ResetTweetCallback(BaseTweetView baseTweetView, TweetRepository tweetRepository,
-                        Callback<Tweet> cb) {
-        this.baseTweetView = baseTweetView;
-        this.tweetRepository = tweetRepository;
-        this.cb = cb;
-    }
-
-    @Override
-    public void success(Result<Tweet> result) {
-        tweetRepository.updateCache(result.data);
-        baseTweetView.setTweet(result.data);
-        if (cb != null) {
-            cb.success(result);
-        }
-    }
-
-    @Override
-    public void failure(TwitterException exception) {
-        if (cb != null) {
-            cb.failure(exception);
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/SearchTimeline.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/SearchTimeline.java
deleted file mode 100644
index 6ab5f104..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/SearchTimeline.java
+++ /dev/null
@@ -1,237 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Search;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.services.params.Geocode;
-
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import java.util.List;
-import java.util.Locale;
-
-import retrofit2.Call;
-
-/**
- * SearchTimeline provides a timeline of tweets from the search/tweets API source.
- */
-public class SearchTimeline extends BaseTimeline implements Timeline<Tweet> {
-    static final String FILTER_RETWEETS = " -filter:retweets";   // leading whitespace intentional
-    private static final SimpleDateFormat QUERY_DATE =
-            new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
-
-    final TwitterCore twitterCore;
-    final String query;
-    final Geocode geocode;
-    final String resultType;
-    final String languageCode;
-    final Integer maxItemsPerRequest;
-    final String untilDate;
-
-    SearchTimeline(TwitterCore twitterCore, String query, Geocode geocode, String resultType,
-                   String languageCode, Integer maxItemsPerRequest, String untilDate) {
-        this.twitterCore = twitterCore;
-        this.languageCode = languageCode;
-        this.maxItemsPerRequest = maxItemsPerRequest;
-        this.untilDate = untilDate;
-        this.resultType = resultType;
-        // if the query is non-null append the filter Retweets modifier
-        this.query = query == null ? null : query + FILTER_RETWEETS;
-        this.geocode = geocode;
-    }
-
-    /**
-     * Loads Tweets with id greater than (newer than) sinceId. If sinceId is null, loads the newest
-     * Tweets.
-     * @param sinceId minimum id of the Tweets to load (exclusive).
-     * @param cb callback.
-     */
-    @Override
-    public void next(Long sinceId, Callback<TimelineResult<Tweet>> cb) {
-        createSearchRequest(sinceId, null).enqueue(new SearchCallback(cb));
-    }
-
-    /**
-     * Loads Tweets with id less than (older than) maxId.
-     * @param maxId maximum id of the Tweets to load (exclusive).
-     * @param cb callback.
-     */
-    @Override
-    public void previous(Long maxId, Callback<TimelineResult<Tweet>> cb) {
-        // api quirk: search api provides results that are inclusive of the maxId iff
-        // FILTER_RETWEETS is added to the query (which we currently always add), decrement the
-        // maxId to get exclusive results
-        createSearchRequest(null, decrementMaxId(maxId)).enqueue(new SearchCallback(cb));
-    }
-
-    Call<Search> createSearchRequest(final Long sinceId, final Long maxId) {
-        return twitterCore.getApiClient().getSearchService().tweets(query, geocode,
-                languageCode, null, resultType, maxItemsPerRequest, untilDate, sinceId, maxId,
-                true);
-    }
-
-    /**
-     * Wrapper callback which unpacks a Search API result into a TimelineResult (cursor and items).
-     */
-    class SearchCallback extends Callback<Search> {
-        final Callback<TimelineResult<Tweet>> cb;
-
-        /**
-         * Constructs a SearchCallback
-         * @param cb A Callback which expects a TimelineResult
-         */
-        SearchCallback(Callback<TimelineResult<Tweet>> cb) {
-            this.cb = cb;
-        }
-
-        @Override
-        public void success(Result<Search> result) {
-            final List<Tweet> tweets = result.data.tweets;
-            final TimelineResult<Tweet> timelineResult
-                    = new TimelineResult<>(new TimelineCursor(tweets), tweets);
-            if (cb != null) {
-                cb.success(new Result<>(timelineResult, result.response));
-            }
-        }
-
-        @Override
-        public void failure(TwitterException exception) {
-            if (cb != null) {
-                cb.failure(exception);
-            }
-        }
-    }
-
-    public enum ResultType {
-        RECENT("recent"),
-        POPULAR("popular"),
-        MIXED("mixed"),
-        FILTERED("filtered");
-
-        final String type;
-
-        ResultType(String type) {
-            this.type = type;
-        }
-    }
-
-    /**
-     * SearchTimeline Builder
-     */
-    public static class Builder {
-        private final TwitterCore twitterCore;
-        private String query;
-        private String lang;
-        private String resultType = ResultType.FILTERED.type;
-        private Integer maxItemsPerRequest = 30;
-        private String untilDate;
-        private Geocode geocode;
-
-        /**
-         * Constructs a Builder.
-         */
-        public Builder() {
-            twitterCore = TwitterCore.getInstance();
-        }
-
-        // For testing
-        Builder(TwitterCore twitterCore) {
-            this.twitterCore = twitterCore;
-        }
-
-        /**
-         * Sets the query for the SearchTimeline.
-         * @param query A UTF-8, URL-encoded search query of 500 characters maximum, including
-         * operators. Queries may additionally be limited by complexity.
-         */
-        public Builder query(String query) {
-            this.query = query;
-            return this;
-        }
-
-        /**
-         * Sets the geocode for the SearchTimeline.
-         * @param geocode Restricts query to a given geolocation
-         */
-        public Builder geocode(Geocode geocode) {
-            this.geocode = geocode;
-            return this;
-        }
-
-        /**
-         *  The result_type parameter allows one to choose if the result set will be represented by
-         *  recent or popular Tweets, or a mix of both.
-         *
-         * @param resultType possible options include recent, popular, mixed, or filtered.
-         */
-        public Builder resultType(ResultType resultType) {
-            this.resultType = resultType.type;
-            return this;
-        }
-
-
-        /**
-         * Sets the languageCode for the SearchTimeline.
-         * @param languageCode Restricts tweets to the given language, given by an ISO 639-1 code.
-         * Language detection is best-effort.
-         */
-        public Builder languageCode(String languageCode) {
-            this.lang = languageCode;
-            return this;
-        }
-
-        /**
-         * Sets the number of Tweets returned per request for the SearchTimeline.
-         * @param maxItemsPerRequest The number of tweets to return per request, up to a maximum of
-         * 100.
-         */
-        public Builder maxItemsPerRequest(Integer maxItemsPerRequest) {
-            this.maxItemsPerRequest = maxItemsPerRequest;
-            return this;
-        }
-
-        /**
-         * Returns tweets generated before the given date. Date should be formatted as YYYY-MM-DD.
-         * Keep in mind that the search index may not go back as far as the date you specify here.
-         *
-         * @param date Date before which the tweets were created.
-         */
-        public Builder untilDate(Date date) {
-            untilDate = QUERY_DATE.format(date);
-            return this;
-        }
-
-        /**
-         * Builds a SearchTimeline from the Builder parameters.
-         * @return a SearchTimeline.
-         * @throws java.lang.IllegalStateException if query is not set (is null).
-         */
-        public SearchTimeline build() {
-            if (query == null) {
-                throw new IllegalStateException("query must not be null");
-            }
-            return new SearchTimeline(twitterCore, query, geocode, resultType, lang,
-                    maxItemsPerRequest, untilDate);
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ShareTweetAction.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ShareTweetAction.java
deleted file mode 100644
index a1406dfd..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ShareTweetAction.java
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.content.Intent;
-import android.content.res.Resources;
-import android.view.View;
-
-import com.twitter.sdk.android.core.IntentUtils;
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.models.Tweet;
-
-class ShareTweetAction implements View.OnClickListener {
-    final Tweet tweet;
-    final TweetUi tweetUi;
-
-    ShareTweetAction(Tweet tweet, TweetUi tweetUi) {
-        super();
-        this.tweet = tweet;
-        this.tweetUi = tweetUi;
-    }
-
-    @Override
-    public void onClick(View v) {
-        onClick(v.getContext(), v.getResources());
-    }
-
-    void onClick(Context context, Resources resources) {
-        if (tweet == null || tweet.user == null) return;
-
-        final String shareSubject = getShareSubject(resources);
-        final String shareContent = getShareContent(resources);
-        final Intent shareIntent = getShareIntent(shareSubject, shareContent);
-        final String shareText = resources.getString(R.string.tw__share_tweet);
-        final Intent chooser = Intent.createChooser(shareIntent, shareText);
-        launchShareIntent(chooser, context);
-    }
-
-    String getShareContent(Resources resources) {
-        return resources.getString(R.string.tw__share_content_format,
-                tweet.user.screenName, Long.toString(tweet.id));
-    }
-
-    String getShareSubject(Resources resources) {
-        return resources.getString(R.string.tw__share_subject_format, tweet.user.name,
-                tweet.user.screenName);
-    }
-
-    void launchShareIntent(Intent chooser, Context context) {
-        if (!IntentUtils.safeStartActivity(context, chooser)) {
-            Twitter.getLogger()
-                    .e(TweetUi.LOGTAG, "Activity cannot be found to handle share intent");
-        }
-    }
-
-    Intent getShareIntent(String subject, String content) {
-        final Intent intent = new Intent();
-        intent.setAction(Intent.ACTION_SEND);
-        intent.putExtra(Intent.EXTRA_SUBJECT, subject);
-        intent.putExtra(Intent.EXTRA_TEXT, content);
-        intent.setType("text/plain");
-        return intent;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/Timeline.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/Timeline.java
deleted file mode 100644
index 92469409..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/Timeline.java
+++ /dev/null
@@ -1,42 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-
-/**
- * Abstracts a source of items which are bi-directionally traversable (next and previous).
- * @param <T> timeline item type
- */
-public interface Timeline<T> {
-
-    /**
-     * Loads items with position greater than (above) minPosition. If minPosition is null, loads
-     * the newest items.
-     * @param minPosition minimum position of the items to load (exclusive).
-     * @param cb callback.
-     */
-    void next(Long minPosition, final Callback<TimelineResult<T>> cb);
-
-    /**
-     * Loads items with position less than (below) maxId.
-     * @param maxPosition maximum position of the items to load (exclusive).
-     * @param cb callback.
-     */
-    void previous(Long maxPosition, final Callback<TimelineResult<T>> cb);
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineCursor.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineCursor.java
deleted file mode 100644
index 8813bed9..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineCursor.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.models.Identifiable;
-
-import java.util.List;
-
-/**
- * TimelineCursor represents the position and containsLastItem data from a Timeline response.
- */
-public class TimelineCursor {
-    public final Long minPosition;
-    public final Long maxPosition;
-
-    /**
-     * Constructs a TimelineCursor storing position and containsLastItem data.
-     * @param minPosition the minimum position of items received or Null
-     * @param maxPosition the maximum position of items received or Null
-     */
-    public TimelineCursor(Long minPosition, Long maxPosition) {
-        this.minPosition = minPosition;
-        this.maxPosition = maxPosition;
-    }
-
-    /**
-     * Constructs a TimelineCursor by reading the maxPosition from the start item and the
-     * minPosition from the last item.
-     * @param items items from the maxPosition item to the minPosition item
-     */
-    TimelineCursor(List<? extends Identifiable> items) {
-        this.minPosition = items.size() > 0 ? items.get(items.size() - 1).getId() : null;
-        this.maxPosition = items.size() > 0 ? items.get(0).getId() : null;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineDelegate.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineDelegate.java
deleted file mode 100644
index e8803cca..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineDelegate.java
+++ /dev/null
@@ -1,327 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.database.DataSetObservable;
-import android.database.DataSetObserver;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Identifiable;
-
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * TimelineDelegate manages timeline data items and loads items from a Timeline.
- * @param <T> the item type
- */
-class TimelineDelegate<T extends Identifiable> {
-    // once capacity is exceeded, additional items will not be loaded
-    static final long CAPACITY = 200L;
-    // timeline that next and previous items are loaded from
-    final Timeline<T> timeline;
-    // Observable for Adapter DataSetObservers (for ListViews)
-    final DataSetObservable listAdapterObservable;
-    final TimelineStateHolder timelineStateHolder;
-    List<T> itemList;
-
-    /**
-     * Constructs a TimelineDelegate with a timeline for requesting data.
-     * @param timeline Timeline source
-     * @throws java.lang.IllegalArgumentException if timeline is null
-     */
-    TimelineDelegate(Timeline<T> timeline) {
-        this(timeline, null, null);
-    }
-
-    TimelineDelegate(Timeline<T> timeline, DataSetObservable observable, List<T> items) {
-        if (timeline == null) {
-            throw new IllegalArgumentException("Timeline must not be null");
-        }
-        this.timeline = timeline;
-        this.timelineStateHolder = new TimelineStateHolder();
-        if (observable == null) {
-            listAdapterObservable = new DataSetObservable();
-        } else {
-            listAdapterObservable = observable;
-        }
-
-        if (items == null) {
-            itemList = new ArrayList<>();
-        } else {
-            itemList = items;
-        }
-    }
-
-    /**
-     * Triggers loading the latest items and calls through to the developer callback. If items are
-     * received, they replace existing items.
-     */
-    public void refresh(Callback<TimelineResult<T>> developerCb) {
-        // reset scrollStateHolder cursors to be null, loadNext will get latest items
-        timelineStateHolder.resetCursors();
-        // load latest timeline items and replace existing items
-        loadNext(timelineStateHolder.positionForNext(),
-                new RefreshCallback(developerCb, timelineStateHolder));
-    }
-
-    /**
-     * Triggers loading next items and calls through to the developer callback.
-     */
-    public void next(Callback<TimelineResult<T>> developerCb) {
-        loadNext(timelineStateHolder.positionForNext(),
-                new NextCallback(developerCb, timelineStateHolder));
-    }
-
-    /**
-     * Triggers loading previous items.
-     */
-    public void previous() {
-        loadPrevious(timelineStateHolder.positionForPrevious(),
-                new PreviousCallback(timelineStateHolder));
-    }
-
-    /**
-     * Returns the number of items in the data set.
-     * @return Count of items.
-     */
-    public int getCount() {
-        return itemList.size();
-    }
-
-
-    public Timeline getTimeline() {
-        return timeline;
-    }
-
-    /**
-     * Gets the data item associated with the specified position in the data set.
-     * @param position The position of the item within the adapter's data set.
-     * @return The data at the specified position.
-     */
-    public T getItem(int position) {
-        if (isLastPosition(position)) {
-            previous();
-        }
-        return itemList.get(position);
-    }
-
-    /**
-     * Gets the row id associated with the specified position in the list.
-     * @param position The position of the item within the adapter's data set.
-     * @return The id of the item at the specified position.
-     */
-    public long getItemId(int position) {
-        final Identifiable item = itemList.get(position);
-        return item.getId();
-    }
-
-    /**
-     * Sets all items in the itemList with the item id to be item. If no items with the same id
-     * are found, no changes are made.
-     * @param item the updated item to set in the itemList
-     */
-    public void setItemById(T item) {
-        for (int i = 0; i < itemList.size(); i++) {
-            if (item.getId() == itemList.get(i).getId()) {
-                itemList.set(i, item);
-            }
-        }
-        notifyDataSetChanged();
-    }
-
-    /**
-     * Returns true if the itemList size is below the MAX_ITEMS capacity, false otherwise.
-     */
-    boolean withinMaxCapacity() {
-        return itemList.size() < CAPACITY;
-    }
-
-    /**
-     * Returns true if the position is for the last item in itemList, false otherwise.
-     */
-    boolean isLastPosition(int position) {
-        return position == (itemList.size() - 1);
-    }
-
-    /**
-     * Checks the capacity and sets requestInFlight before calling timeline.next.
-     */
-    void loadNext(Long minPosition, Callback<TimelineResult<T>> cb) {
-        if (withinMaxCapacity()) {
-            if (timelineStateHolder.startTimelineRequest()) {
-                timeline.next(minPosition, cb);
-            } else {
-                cb.failure(new TwitterException("Request already in flight"));
-            }
-        } else {
-            cb.failure(new TwitterException("Max capacity reached"));
-        }
-    }
-
-    /**
-     * Checks the capacity and sets requestInFlight before calling timeline.previous.
-     */
-    void loadPrevious(Long maxPosition, Callback<TimelineResult<T>> cb) {
-        if (withinMaxCapacity()) {
-            if (timelineStateHolder.startTimelineRequest()) {
-                timeline.previous(maxPosition, cb);
-            } else {
-                cb.failure(new TwitterException("Request already in flight"));
-            }
-        } else {
-            cb.failure(new TwitterException("Max capacity reached"));
-        }
-    }
-
-    /**
-     * TimelineDelegate.DefaultCallback is a Callback which handles setting requestInFlight to
-     * false on both success and failure and calling through to a wrapped developer Callback.
-     * Subclass methods must call through to the parent method after their custom implementation.
-     */
-    class DefaultCallback extends Callback<TimelineResult<T>> {
-        final Callback<TimelineResult<T>> developerCallback;
-        final TimelineStateHolder timelineStateHolder;
-
-        DefaultCallback(Callback<TimelineResult<T>> developerCb,
-                        TimelineStateHolder timelineStateHolder) {
-            this.developerCallback = developerCb;
-            this.timelineStateHolder = timelineStateHolder;
-        }
-
-        @Override
-        public void success(Result<TimelineResult<T>> result) {
-            timelineStateHolder.finishTimelineRequest();
-            if (developerCallback != null) {
-                developerCallback.success(result);
-            }
-        }
-
-        @Override
-        public void failure(TwitterException exception) {
-            timelineStateHolder.finishTimelineRequest();
-            if (developerCallback != null) {
-                developerCallback.failure(exception);
-            }
-        }
-    }
-
-    /**
-     * Handles receiving next timeline items. Prepends received items to listItems, updates the
-     * scrollStateHolder nextCursor, and calls notifyDataSetChanged.
-     */
-    class NextCallback extends DefaultCallback {
-
-        NextCallback(Callback<TimelineResult<T>> developerCb,
-                TimelineStateHolder timelineStateHolder) {
-            super(developerCb, timelineStateHolder);
-        }
-
-        @Override
-        public void success(Result<TimelineResult<T>> result) {
-            if (result.data.items.size() > 0) {
-                final ArrayList<T> receivedItems = new ArrayList<>(result.data.items);
-                receivedItems.addAll(itemList);
-                itemList = receivedItems;
-                notifyDataSetChanged();
-                timelineStateHolder.setNextCursor(result.data.timelineCursor);
-            }
-            // do nothing when zero items are received. Subsequent 'next' call does not change.
-            super.success(result);
-        }
-    }
-
-    /**
-     * Handles receiving latest timeline items. If timeline items are received, clears listItems,
-     * sets received items, updates the scrollStateHolder nextCursor, and calls
-     * notifyDataSetChanged. If the results have no items, does nothing.
-     */
-    class RefreshCallback extends NextCallback {
-
-        RefreshCallback(Callback<TimelineResult<T>> developerCb,
-                TimelineStateHolder timelineStateHolder) {
-            super(developerCb, timelineStateHolder);
-        }
-
-        @Override
-        public void success(Result<TimelineResult<T>> result) {
-            if (result.data.items.size() > 0) {
-                itemList.clear();
-            }
-            super.success(result);
-        }
-    }
-
-    /**
-     * Handles appending listItems and updating the scrollStateHolder previousCursor.
-     */
-    class PreviousCallback extends DefaultCallback {
-
-        PreviousCallback(TimelineStateHolder timelineStateHolder) {
-            super(null, timelineStateHolder);
-        }
-
-        @Override
-        public void success(Result<TimelineResult<T>> result) {
-            if (result.data.items.size() > 0) {
-                itemList.addAll(result.data.items);
-                notifyDataSetChanged();
-                timelineStateHolder.setPreviousCursor(result.data.timelineCursor);
-            }
-            // do nothing when zero items are received. Subsequent 'next' call does not change.
-            super.success(result);
-        }
-    }
-
-    /* Support Adapter DataSetObservers, based on BaseAdapter */
-
-    /**
-     * Registers an observer that is called when changes happen to the managed data items.
-     * @param observer The object that will be notified when the data set changes.
-     */
-    public void registerDataSetObserver(DataSetObserver observer) {
-        listAdapterObservable.registerObserver(observer);
-    }
-
-    /**
-     * Unregister an observer that has previously been registered via
-     * registerDataSetObserver(DataSetObserver).
-     * @param observer The object to unregister.
-     */
-    public void unregisterDataSetObserver(DataSetObserver observer) {
-        listAdapterObservable.unregisterObserver(observer);
-    }
-
-    /**
-     * Notifies the attached observers that the underlying data has been changed and any View
-     * reflecting the data set should refresh itself.
-     */
-    public void notifyDataSetChanged() {
-        listAdapterObservable.notifyChanged();
-    }
-
-    /**
-     * Notifies the attached observers that the underlying data is not longer valid or available.
-     * Once invoked, this adapter is no longer valid and should not report further data set changes.
-     */
-    public void notifyDataSetInvalidated() {
-        listAdapterObservable.notifyInvalidated();
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineFilter.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineFilter.java
deleted file mode 100644
index e3615718..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineFilter.java
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.models.Tweet;
-
-import java.util.List;
-
-/**
- * TimelineFilter used to filter tweets from a timeline.
- */
-public interface TimelineFilter {
-
-    /**
-     * Filter tweets from timeline with given set of constraints.
-     *
-     * @param tweets list of tweets.
-     */
-    List<Tweet> filter(List<Tweet> tweets);
-
-    /**
-     * Total count of constraints applied to the timeline.
-     */
-    int totalFilters();
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineListAdapter.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineListAdapter.java
deleted file mode 100644
index 027e6244..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineListAdapter.java
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.database.DataSetObserver;
-import android.widget.BaseAdapter;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.models.Identifiable;
-
-/**
- * TimelineListAdapter is a ListAdapter providing timeline items for ListViews.
- * Concrete subclasses must define a type parameter and implement getView.
- */
-abstract class TimelineListAdapter<T extends Identifiable> extends BaseAdapter {
-    protected final Context context;
-    protected final TimelineDelegate<T> delegate;
-
-    /**
-     * Constructs a TimelineListAdapter for the given Timeline.
-     * @param context the context for row views.
-     * @param timeline a Timeline providing access to timeline data items.
-     * @throws java.lang.IllegalArgumentException if context or timeline is null
-     */
-    TimelineListAdapter(Context context, Timeline<T> timeline) {
-        this(context, new TimelineDelegate<>(timeline));
-    }
-
-    TimelineListAdapter(Context context, TimelineDelegate<T> delegate) {
-        if (context == null) {
-            throw new IllegalArgumentException("Context must not be null");
-        }
-        this.context = context;
-        this.delegate = delegate;
-        delegate.refresh(null);
-    }
-
-    /**
-     * Clears the items and loads the latest Timeline items.
-     */
-    public void refresh(Callback<TimelineResult<T>> cb) {
-        delegate.refresh(cb);
-    }
-
-    @Override
-    public int getCount() {
-        return delegate.getCount();
-    }
-
-    @Override
-    public T getItem(int position) {
-        return delegate.getItem(position);
-    }
-
-    @Override
-    public long getItemId(int position) {
-        return delegate.getItemId(position);
-    }
-
-    @Override
-    public void registerDataSetObserver(DataSetObserver observer) {
-        delegate.registerDataSetObserver(observer);
-    }
-
-    @Override
-    public void unregisterDataSetObserver(DataSetObserver observer) {
-        delegate.unregisterDataSetObserver(observer);
-    }
-
-    @Override
-    public void notifyDataSetChanged() {
-        delegate.notifyDataSetChanged();
-    }
-
-    @Override
-    public void notifyDataSetInvalidated() {
-        delegate.notifyDataSetInvalidated();
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineResult.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineResult.java
deleted file mode 100644
index b8c16d78..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineResult.java
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import java.util.List;
-
-/**
- * TimelineResult represents timeline items and the TimelineCursor from a Timeline response.
- * @param <T> timeline item type
- */
-public class TimelineResult<T> {
-
-    public final TimelineCursor timelineCursor;
-    public final List<T> items;
-
-    /**
-     * Constructs a TimelineResult storing item and cursor data.
-     * @param timelineCursor cursor representing position and containsLastItem data
-     * @param items timeline items
-     */
-    public TimelineResult(TimelineCursor timelineCursor, List<T> items) {
-        this.timelineCursor = timelineCursor;
-        this.items = items;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineStateHolder.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineStateHolder.java
deleted file mode 100644
index eca4638b..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineStateHolder.java
+++ /dev/null
@@ -1,110 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import java.util.concurrent.atomic.AtomicBoolean;
-
-/**
- * Component which holds a TimelineAdapter's data about whether a request is in flight and the
- * scroll position TimelineCursors.
- */
-class TimelineStateHolder {
-    // cursor for Timeline 'next' calls
-    TimelineCursor nextCursor;
-    // cursor for Timeline 'previous' calls
-    TimelineCursor previousCursor;
-    // true while a request is in flight, false otherwise
-    public final AtomicBoolean requestInFlight = new AtomicBoolean(false);
-
-    TimelineStateHolder() {
-        // intentionally blank
-    }
-
-    /* for testing */
-    TimelineStateHolder(TimelineCursor nextCursor, TimelineCursor previousCursor) {
-        this.nextCursor = nextCursor;
-        this.previousCursor = previousCursor;
-    }
-
-    /**
-     * Nulls the nextCursor and previousCursor
-     */
-    public void resetCursors() {
-        nextCursor = null;
-        previousCursor = null;
-    }
-
-    /**
-     * Returns the position to use for the subsequent Timeline.next call.
-     */
-    public Long positionForNext() {
-        return nextCursor == null ? null : nextCursor.maxPosition;
-    }
-
-    /**
-     * Returns the position to use for the subsequent Timeline.previous call.
-     */
-    public Long positionForPrevious() {
-        return previousCursor == null ? null : previousCursor.minPosition;
-    }
-
-    /**
-     * Updates the nextCursor
-     */
-    public void setNextCursor(TimelineCursor timelineCursor) {
-        nextCursor = timelineCursor;
-        setCursorsIfNull(timelineCursor);
-    }
-
-    /**
-     * Updates the previousCursor.
-     */
-    public void setPreviousCursor(TimelineCursor timelineCursor) {
-        previousCursor = timelineCursor;
-        setCursorsIfNull(timelineCursor);
-    }
-
-    /**
-     * If a nextCursor or previousCursor is null, sets it to timelineCursor. Should be called by
-     * setNextCursor and setPreviousCursor to handle the very first timeline load which sets
-     * both cursors.
-     */
-    public void setCursorsIfNull(TimelineCursor timelineCursor) {
-        if (nextCursor == null) {
-            nextCursor = timelineCursor;
-        }
-        if (previousCursor == null) {
-            previousCursor = timelineCursor;
-        }
-    }
-
-    /**
-     * Returns true if a timeline request is not in flight, false otherwise. If true, a caller
-     * must later call finishTimelineRequest to remove the requestInFlight lock.
-     */
-    public boolean startTimelineRequest() {
-        return requestInFlight.compareAndSet(false, true);
-    }
-
-    /**
-     * Unconditionally sets requestInFlight to false.
-     */
-    public void finishTimelineRequest() {
-        requestInFlight.set(false);
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ToggleImageButton.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ToggleImageButton.java
deleted file mode 100644
index 51bbd12c..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ToggleImageButton.java
+++ /dev/null
@@ -1,112 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.content.res.TypedArray;
-import android.util.AttributeSet;
-import android.widget.ImageButton;
-
-/**
- * Display on/off states (ie: Favorite or Retweet action buttons) as an {@link ImageButton}.
- *
- * The content description for the on and off states is defined by using the
- * {@code twitter:contentDescriptionOn} and {@code twitter:contentDescriptionOff} attributes.
- *
- * By default the button will be toggled when clicked. This behaviour can be prevented by setting
- * the {@code twitter:toggleOnClick} attribute to false.
- *
- * @attr ref android.R.styleable#ToggleImageButton_on
- * @attr ref android.R.styleable#ToggleImageButton_contentDescriptionOn
- * @attr ref android.R.styleable#ToggleImageButton_contentDescriptionff
- * @attr ref android.R.styleable#ToggleImageButton_toggleOnClick
- */
-public class ToggleImageButton extends ImageButton {
-    private static final int[] STATE_TOGGLED_ON = {R.attr.state_toggled_on};
-
-    boolean isToggledOn;
-    String contentDescriptionOn;
-    String contentDescriptionOff;
-    final boolean toggleOnClick;
-
-    public ToggleImageButton(Context context) {
-        this(context, null);
-    }
-
-    public ToggleImageButton(Context context, AttributeSet attrs) {
-        this(context, attrs, 0);
-    }
-
-    public ToggleImageButton(Context context, AttributeSet attrs, int defStyle) {
-        super(context, attrs, defStyle);
-
-        TypedArray a = null;
-        try {
-            a = context.getTheme().obtainStyledAttributes(attrs,
-                    R.styleable.ToggleImageButton, defStyle, 0);
-            final String contentDescriptionOn =
-                    a.getString(R.styleable.ToggleImageButton_contentDescriptionOn);
-            final String contentDescriptionOff =
-                    a.getString(R.styleable.ToggleImageButton_contentDescriptionOff);
-
-            this.contentDescriptionOn = contentDescriptionOn == null ?
-                    (String) getContentDescription() : contentDescriptionOn;
-            this.contentDescriptionOff = contentDescriptionOff == null ?
-                    (String) getContentDescription() : contentDescriptionOff;
-
-            toggleOnClick = a.getBoolean(R.styleable.ToggleImageButton_toggleOnClick, true);
-
-            setToggledOn(false);
-        } finally {
-            if (a != null) {
-                a.recycle();
-            }
-        }
-    }
-
-    @Override
-    public int[] onCreateDrawableState(int extraSpace) {
-        final int[] drawableState = super.onCreateDrawableState(extraSpace + 2);
-        if (isToggledOn) {
-            mergeDrawableStates(drawableState, STATE_TOGGLED_ON);
-        }
-        return drawableState;
-    }
-
-    @Override
-    public boolean performClick() {
-        if (toggleOnClick) {
-            toggle();
-        }
-        return super.performClick();
-    }
-
-    public void setToggledOn(boolean isToggledOn) {
-        this.isToggledOn = isToggledOn;
-        setContentDescription(isToggledOn ? contentDescriptionOn : contentDescriptionOff);
-        refreshDrawableState();
-    }
-
-    public void toggle() {
-        setToggledOn(!isToggledOn);
-    }
-
-    public boolean isToggledOn() {
-        return isToggledOn;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetActionBarView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetActionBarView.java
deleted file mode 100644
index 9fb7619d..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetActionBarView.java
+++ /dev/null
@@ -1,102 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.util.AttributeSet;
-import android.widget.ImageButton;
-import android.widget.LinearLayout;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.models.Tweet;
-
-public class TweetActionBarView extends LinearLayout {
-    final DependencyProvider dependencyProvider;
-    ToggleImageButton likeButton;
-    ImageButton shareButton;
-    Callback<Tweet> actionCallback;
-
-    public TweetActionBarView(Context context) {
-        this(context, null, new DependencyProvider());
-    }
-
-    public TweetActionBarView(Context context, AttributeSet attrs) {
-        this(context, attrs, new DependencyProvider());
-    }
-
-    TweetActionBarView(Context context, AttributeSet attrs, DependencyProvider dependencyProvider) {
-        super(context, attrs);
-        this.dependencyProvider = dependencyProvider;
-    }
-
-    @Override
-    protected void onFinishInflate() {
-        super.onFinishInflate();
-        findSubviews();
-    }
-
-    /*
-     * Sets the callback to call when a Tweet Action (favorite, unfavorite) is performed.
-     */
-    void setOnActionCallback(Callback<Tweet> actionCallback) {
-        this.actionCallback = actionCallback;
-    }
-
-    void findSubviews() {
-        likeButton = findViewById(R.id.tw__tweet_like_button);
-        shareButton = findViewById(R.id.tw__tweet_share_button);
-    }
-
-    /*
-     * Setup action bar buttons with Tweet and action performer.
-     * @param tweet Tweet source for whether an action has been performed (e.g. isFavorited?)
-     */
-    void setTweet(Tweet tweet) {
-        setLike(tweet);
-        setShare(tweet);
-    }
-
-    void setLike(Tweet tweet) {
-        final TweetUi tweetUi = dependencyProvider.getTweetUi();
-        if (tweet != null) {
-            likeButton.setToggledOn(tweet.favorited);
-            final LikeTweetAction likeTweetAction = new LikeTweetAction(tweet,
-                    tweetUi, actionCallback);
-            likeButton.setOnClickListener(likeTweetAction);
-        }
-    }
-
-    void setShare(Tweet tweet) {
-        final TweetUi tweetUi = dependencyProvider.getTweetUi();
-        if (tweet != null) {
-            shareButton.setOnClickListener(new ShareTweetAction(tweet, tweetUi));
-        }
-    }
-
-    /**
-     * This is a mockable class that extracts our tight coupling with the TweetUi singleton.
-     */
-    static class DependencyProvider {
-        /**
-         * Return TweetRepository
-         */
-        TweetUi getTweetUi() {
-            return TweetUi.getInstance();
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetDateUtils.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetDateUtils.java
deleted file mode 100644
index 506a4856..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetDateUtils.java
+++ /dev/null
@@ -1,135 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.res.Resources;
-import android.support.v4.util.SparseArrayCompat;
-import android.text.format.DateUtils;
-
-import java.text.DateFormat;
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
-import java.util.Calendar;
-import java.util.Date;
-import java.util.Locale;
-
-// Cribbed from twitter-android-internal, renamed and formatted to our standards
-// methods here should only be accessed on the main thread
-final class TweetDateUtils {
-    // Sat Mar 14 02:34:20 +0000 2009
-    static final SimpleDateFormat DATE_TIME_RFC822
-            = new SimpleDateFormat("EEE MMM dd HH:mm:ss Z yyyy", Locale.ENGLISH);
-    static final DateFormatter RELATIVE_DATE_FORMAT = new DateFormatter();
-    static final long INVALID_DATE = -1;
-
-    private TweetDateUtils() {}
-
-    static long apiTimeToLong(String apiTime) {
-        if (apiTime == null) return INVALID_DATE;
-
-        try {
-            return DATE_TIME_RFC822.parse(apiTime).getTime();
-        } catch (ParseException e) {
-            return INVALID_DATE;
-        }
-    }
-
-    static boolean isValidTimestamp(String timestamp) {
-        return TweetDateUtils.apiTimeToLong(timestamp) != TweetDateUtils.INVALID_DATE;
-    }
-
-    /**
-     * @return the given timestamp with a prepended "•"
-     */
-    static String dotPrefix(String timestamp) {
-        return "• " + timestamp;
-    }
-
-    /**
-     * This method is not thread safe. It has been modified from the original to not rely on global
-     * time state. If a timestamp is in the future we return it as an absolute date string. Within
-     * the same second we return 0s
-     *
-     * @param res resource
-     * @param currentTimeMillis timestamp for offset
-     * @param timestamp timestamp
-     * @return the relative time string
-     */
-    static String getRelativeTimeString(Resources res, long currentTimeMillis, long timestamp) {
-        final long diff = currentTimeMillis - timestamp;
-        if (diff >= 0) {
-            if (diff < DateUtils.MINUTE_IN_MILLIS) { // Less than a minute ago
-                final int secs = (int) (diff / 1000);
-                return res.getQuantityString(R.plurals.tw__time_secs, secs, secs);
-            } else if (diff < DateUtils.HOUR_IN_MILLIS) { // Less than an hour ago
-                final int mins = (int) (diff / DateUtils.MINUTE_IN_MILLIS);
-                return res.getQuantityString(R.plurals.tw__time_mins, mins, mins);
-            } else if (diff < DateUtils.DAY_IN_MILLIS) { // Less than a day ago
-                final int hours = (int) (diff / DateUtils.HOUR_IN_MILLIS);
-                return res.getQuantityString(R.plurals.tw__time_hours, hours, hours);
-            } else {
-                final Calendar now = Calendar.getInstance();
-                now.setTimeInMillis(currentTimeMillis);
-                final Calendar c = Calendar.getInstance();
-                c.setTimeInMillis(timestamp);
-                final Date d = new Date(timestamp);
-
-                if (now.get(Calendar.YEAR) == c.get(Calendar.YEAR)) {
-                    // Same year
-                    return RELATIVE_DATE_FORMAT.formatShortDateString(res, d);
-                } else {
-                    // Outside of our year
-                    return RELATIVE_DATE_FORMAT.formatLongDateString(res, d);
-                }
-            }
-        }
-        return RELATIVE_DATE_FORMAT.formatLongDateString(res, new Date(timestamp));
-    }
-
-    static class DateFormatter {
-        private final SparseArrayCompat<SimpleDateFormat> dateFormatArray =
-                new SparseArrayCompat<>();
-        private Locale currentLocale;
-
-        synchronized String formatLongDateString(Resources res, Date date) {
-            return getDateFormat(res, R.string.tw__relative_date_format_long).format(date);
-        }
-
-        synchronized String formatShortDateString(Resources res, Date date) {
-            return getDateFormat(res, R.string.tw__relative_date_format_short).format(date);
-        }
-
-        private synchronized DateFormat getDateFormat(Resources res, int patternId) {
-
-            // Check if the locale changed, reference check for performance
-            if (currentLocale == null || currentLocale != res.getConfiguration().locale) {
-                currentLocale = res.getConfiguration().locale;
-                dateFormatArray.clear();
-            }
-
-            SimpleDateFormat format = dateFormatArray.get(patternId);
-            if (format == null) {
-                // Create format if not cached
-                final String pattern = res.getString(patternId);
-                format = new SimpleDateFormat(pattern, Locale.getDefault());
-                dateFormatArray.put(patternId, format);
-            }
-            return format;
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetLinkClickListener.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetLinkClickListener.java
deleted file mode 100644
index b1ab0e6a..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetLinkClickListener.java
+++ /dev/null
@@ -1,32 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.models.Tweet;
-
-/**
- * Interface to be invoked when URL is clicked.
- */
-public interface TweetLinkClickListener {
-    /**
-     * Called when URL clicked.
-     * @param tweet The Tweet that was clicked.
-     * @param url The URL that was clicked.
-     */
-    void onLinkClick(Tweet tweet, String url);
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetMediaClickListener.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetMediaClickListener.java
deleted file mode 100644
index 9a629a3f..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetMediaClickListener.java
+++ /dev/null
@@ -1,34 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.core.models.Tweet;
-
-/**
- * Interface to be invoked when media is clicked.
- */
-public interface TweetMediaClickListener {
-
-    /**
-     * Called when media clicked.
-     * @param tweet The Tweet that was clicked.
-     * @param entity The entity that was clicked.
-     */
-    void onMediaEntityClick(Tweet tweet, MediaEntity entity);
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetRepository.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetRepository.java
deleted file mode 100644
index d91adaec..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetRepository.java
+++ /dev/null
@@ -1,234 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.os.Handler;
-import android.support.v4.util.LruCache;
-import android.text.TextUtils;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.SessionManager;
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.TwitterAuthException;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import java.util.List;
-
-
-/**
- * Encapsulates Tweet API access. Tweet loads are read through a thread safe LruCache.
- */
-class TweetRepository {
-    // Cache size units are in number of entries, an average Tweet is roughly 900 bytes in memory
-    private static final int DEFAULT_CACHE_SIZE = 20;
-
-    private final TwitterCore twitterCore;
-    private final Handler mainHandler;
-    private final SessionManager<TwitterSession> userSessionManagers;
-
-    // leave this package accessible for testing
-    final LruCache<Long, Tweet> tweetCache;
-    final LruCache<Long, FormattedTweetText> formatCache;
-
-    TweetRepository(Handler mainHandler, SessionManager<TwitterSession> userSessionManagers) {
-        this(mainHandler, userSessionManagers, TwitterCore.getInstance());
-    }
-
-    // Testing only
-    TweetRepository(Handler mainHandler, SessionManager<TwitterSession> userSessionManagers,
-            TwitterCore twitterCore) {
-        this.twitterCore = twitterCore;
-        this.mainHandler = mainHandler;
-        this.userSessionManagers = userSessionManagers;
-        tweetCache = new LruCache<>(DEFAULT_CACHE_SIZE);
-        formatCache = new LruCache<>(DEFAULT_CACHE_SIZE);
-    }
-
-    /**
-     * This method will cache formatted tweet values to ensure we don't slow down rendering
-     *
-     * @param tweet the Tweet that will be formatted
-     * @return      the formatted values suitable for display, can be null
-     */
-    FormattedTweetText formatTweetText(final Tweet tweet) {
-        if (tweet == null) return null;
-
-        final FormattedTweetText cached = formatCache.get(tweet.id);
-
-        if (cached != null) return cached;
-
-        final FormattedTweetText formattedTweetText = TweetTextUtils.formatTweetText(tweet);
-        if (formattedTweetText != null && !TextUtils.isEmpty(formattedTweetText.text)) {
-            formatCache.put(tweet.id, formattedTweetText);
-        }
-
-        return formattedTweetText;
-    }
-
-    void updateCache(final Tweet tweet) {
-        tweetCache.put(tweet.id, tweet);
-    }
-
-    /**
-     * Callable on the main thread.
-     * @param tweet Tweet to deliver to the client in a Result
-     * @param cb the developer callback
-     */
-    private void deliverTweet(final Tweet tweet, final Callback<Tweet> cb) {
-        if (cb == null) return;
-        mainHandler.post(() -> cb.success(new Result<>(tweet, null)));
-    }
-
-    void favorite(final long tweetId, final Callback<Tweet> cb) {
-        getUserSession(new LoggingCallback<TwitterSession>(cb, Twitter.getLogger()) {
-            @Override
-            public void success(Result<TwitterSession> result) {
-                twitterCore.getApiClient(result.data).getFavoriteService().create(tweetId, false)
-                        .enqueue(cb);
-            }
-        });
-    }
-
-    void unfavorite(final long tweetId, final Callback<Tweet> cb) {
-        getUserSession(new LoggingCallback<TwitterSession>(cb, Twitter.getLogger()) {
-            @Override
-            public void success(Result<TwitterSession> result) {
-                twitterCore.getApiClient(result.data).getFavoriteService().destroy(tweetId, false)
-                        .enqueue(cb);
-            }
-        });
-    }
-
-    void retweet(final long tweetId, final Callback<Tweet> cb) {
-        getUserSession(new LoggingCallback<TwitterSession>(cb, Twitter.getLogger()) {
-            @Override
-            public void success(Result<TwitterSession> result) {
-                twitterCore.getApiClient(result.data).getStatusesService().retweet(tweetId, false)
-                        .enqueue(cb);
-            }
-        });
-    }
-
-    void unretweet(final long tweetId, final Callback<Tweet> cb) {
-        getUserSession(new LoggingCallback<TwitterSession>(cb, Twitter.getLogger()) {
-            @Override
-            public void success(Result<TwitterSession> result) {
-                twitterCore.getApiClient(result.data).getStatusesService().unretweet(tweetId, false)
-                        .enqueue(cb);
-            }
-        });
-    }
-
-    void getUserSession(final Callback<TwitterSession> cb) {
-        final TwitterSession session = userSessionManagers.getActiveSession();
-        if (session == null) {
-            cb.failure(new TwitterAuthException("User authorization required"));
-        } else {
-            cb.success(new Result<>(session, null));
-        }
-    }
-
-    /**
-     * Queues and loads a Tweet from the API statuses/show endpoint. Queue ensures a client with
-     * at least guest auth is obtained before performing the request. Adds the the Tweet from the
-     * response to the cache and provides the Tweet to the callback success method.
-     * @param tweetId Tweet id
-     * @param cb callback
-     */
-    void loadTweet(final long tweetId, final Callback<Tweet> cb) {
-        final Tweet cachedTweet = tweetCache.get(tweetId);
-
-        if (cachedTweet != null) {
-            deliverTweet(cachedTweet, cb);
-            return;
-        }
-
-        twitterCore.getApiClient().getStatusesService()
-                .show(tweetId, null, null, null).enqueue(new SingleTweetCallback(cb));
-    }
-
-    /**
-     * Queues and loads multiple Tweets from the API lookup endpoint. Queue ensures a client with
-     * at least guest auth is obtained before performing the request. Orders the Tweets from the
-     * response and provides them to the callback success method.
-     * @param tweetIds list of Tweet ids
-     * @param cb callback
-     */
-    void loadTweets(final List<Long> tweetIds, final Callback<List<Tweet>> cb) {
-        final String commaSepIds = TextUtils.join(",", tweetIds);
-        twitterCore.getApiClient().getStatusesService().lookup(commaSepIds, null, null, null)
-                .enqueue(new MultiTweetsCallback(tweetIds, cb));
-    }
-
-    /**
-     * Callback updates the single Tweet cache before passing to the given callback on success.
-     * Handles guest auth expired or failing tokens on failure.
-     */
-    class SingleTweetCallback extends Callback<Tweet> {
-        final Callback<Tweet> cb;
-
-        SingleTweetCallback(Callback<Tweet> cb) {
-            this.cb = cb;
-        }
-
-        @Override
-        public void success(Result<Tweet> result) {
-            final Tweet tweet = result.data;
-            updateCache(tweet);
-            if (cb != null) {
-                cb.success(new Result<>(tweet, result.response));
-            }
-        }
-
-        @Override
-        public void failure(TwitterException exception) {
-            cb.failure(exception);
-        }
-    }
-
-    /**
-     * Callback handles sorting Tweets before passing to the given callback on success. Handles
-     * guest auto expired or failing tokens on failure.
-     */
-    class MultiTweetsCallback extends Callback<List<Tweet>> {
-        final Callback<List<Tweet>> cb;
-        final List<Long> tweetIds;
-
-        MultiTweetsCallback(List<Long> tweetIds, Callback<List<Tweet>> cb) {
-            this.cb = cb;
-            this.tweetIds = tweetIds;
-        }
-
-        @Override
-        public void success(Result<List<Tweet>> result) {
-            if (cb != null) {
-                final List<Tweet> sorted = Utils.orderTweets(tweetIds, result.data);
-                cb.success(new Result<>(sorted, result.response));
-            }
-        }
-
-        @Override
-        public void failure(TwitterException exception) {
-            cb.failure(exception);
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTextLinkifier.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTextLinkifier.java
deleted file mode 100644
index 572759ad..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTextLinkifier.java
+++ /dev/null
@@ -1,215 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.text.SpannableStringBuilder;
-import android.text.Spanned;
-import android.text.TextUtils;
-import android.text.style.CharacterStyle;
-import android.view.View;
-
-import com.twitter.sdk.android.core.models.ModelUtils;
-import com.twitter.sdk.android.tweetui.internal.ClickableLinkSpan;
-import com.twitter.sdk.android.tweetui.internal.TweetMediaUtils;
-
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-import java.util.regex.Pattern;
-
-final class TweetTextLinkifier {
-    static final Pattern QUOTED_STATUS_URL =
-            Pattern.compile("^https?://twitter\\.com(/#!)?/\\w+/status/\\d+$");
-    static final Pattern VINE_URL =
-            Pattern.compile("^https?://vine\\.co(/#!)?/v/\\w+$");
-
-    private TweetTextLinkifier() {}
-
-    /**
-     * Returns a charSequence with the display urls substituted in place of the t.co links. It will
-     * strip off the last photo entity, quote Tweet, and Vine card urls in the text. The return
-     * value can be set directly onto a text view.
-     *
-     * @param tweetText             The formatted and adjusted tweet wrapper
-     * @param linkListener          A listener to handle link clicks
-     * @param linkColor             The link color
-     * @param linkHighlightColor    The link background color when pressed
-     * @param stripQuoteTweet       If true we should strip the quote Tweet URL
-     * @param stripVineCard         If true we should strip the Vine card URL
-     * @return                      The Tweet text with displayUrls substituted in
-     */
-    static CharSequence linkifyUrls(FormattedTweetText tweetText,
-                                    final LinkClickListener linkListener,
-                                    final int linkColor, final int linkHighlightColor,
-                                    boolean stripQuoteTweet, boolean stripVineCard) {
-        if (tweetText == null) return null;
-
-        if (TextUtils.isEmpty(tweetText.text)) {
-            return tweetText.text;
-        }
-
-        final SpannableStringBuilder spannable = new SpannableStringBuilder(tweetText.text);
-        final List<FormattedUrlEntity> urls = ModelUtils.getSafeList(tweetText.urlEntities);
-        final List<FormattedMediaEntity> media = ModelUtils.getSafeList(tweetText.mediaEntities);
-        final List<FormattedUrlEntity> hashtags = ModelUtils.getSafeList(tweetText.hashtagEntities);
-        final List<FormattedUrlEntity> mentions = ModelUtils.getSafeList(tweetText.mentionEntities);
-        final List<FormattedUrlEntity> symbols = ModelUtils.getSafeList(tweetText.symbolEntities);
-        /*
-         * We combine and sort the entities here so that we can correctly calculate the offsets
-         * into the text.
-         */
-        final List<FormattedUrlEntity> combined = mergeAndSortEntities(urls, media, hashtags,
-                mentions, symbols);
-        final FormattedUrlEntity strippedEntity = getEntityToStrip(tweetText.text, combined,
-                stripQuoteTweet, stripVineCard);
-
-        addUrlEntities(spannable, combined, strippedEntity, linkListener, linkColor,
-                linkHighlightColor);
-
-        return trimEnd(spannable);
-    }
-
-    /**
-     * Trim trailing whitespaces. Similar to String#trim(), but only for trailing characters.
-     */
-    static CharSequence trimEnd(CharSequence charSequence) {
-        int length = charSequence.length();
-
-        while ((length > 0) && (charSequence.charAt(length - 1) <= ' ')) {
-            length--;
-        }
-
-        // Avoid creating new object if length hasn't changed
-        return length < charSequence.length() ? charSequence.subSequence(0, length) : charSequence;
-    }
-
-    /**
-     * Combines and sorts the two lists of entities, it only considers the start index as the
-     * parameter to sort on because the api guarantees that we are to have non-overlapping entities.
-     *
-     * @param urls  Expected to be non-null
-     * @param media Can be null
-     * @return      Combined and sorted list of urls and media
-     */
-    static List<FormattedUrlEntity> mergeAndSortEntities(final List<FormattedUrlEntity> urls,
-            final List<FormattedMediaEntity> media, final List<FormattedUrlEntity> hashtags,
-            final List<FormattedUrlEntity> mentions, final List<FormattedUrlEntity> symbols) {
-        final ArrayList<FormattedUrlEntity> combined = new ArrayList<>(urls);
-        combined.addAll(media);
-        combined.addAll(hashtags);
-        combined.addAll(mentions);
-        combined.addAll(symbols);
-        Collections.sort(combined, (lhs, rhs) -> {
-            if (lhs == null && rhs != null) return -1;
-            if (lhs != null && rhs == null) return 1;
-            if (lhs == null && rhs == null) return 0;
-            if (lhs.start < rhs.start) return -1;
-            if (lhs.start > rhs.start) return 1;
-
-            return 0;
-        });
-        return combined;
-    }
-
-    /**
-     * Swaps display urls in for t.co urls and adjusts the remaining entity indices.
-     *
-     * @param spannable          The final formatted text that we are building
-     * @param entities           The combined list of media and url entities
-     * @param strippedEntity     The trailing entity that we should strip from the text
-     * @param linkListener       The link click listener to attach to the span
-     * @param linkColor          The link color
-     * @param linkHighlightColor The link background color when pressed
-     */
-    private static void addUrlEntities(final SpannableStringBuilder spannable,
-            final List<FormattedUrlEntity> entities,
-            final FormattedUrlEntity strippedEntity,
-            final LinkClickListener linkListener,
-            final int linkColor, final int linkHighlightColor) {
-        if (entities == null || entities.isEmpty()) return;
-
-        int offset = 0;
-        int len;
-        int start;
-        int end;
-        for (final FormattedUrlEntity url : entities) {
-            start = url.start - offset;
-            end = url.end - offset;
-            if (start >= 0 && end <= spannable.length()) {
-                // replace the last photo url with empty string, we can use the start indices as
-                // as simple check, since none of this will work anyways if we have overlapping
-                // entities
-                if (strippedEntity != null && strippedEntity.start == url.start) {
-                    spannable.replace(start, end, "");
-                    len = end - start;
-                    offset += len;
-                } else if (!TextUtils.isEmpty(url.displayUrl)) {
-                    spannable.replace(start, end, url.displayUrl);
-                    len = end - (start + url.displayUrl.length());
-                    end -= len;
-                    offset += len;
-
-                    final CharacterStyle span = new ClickableLinkSpan(linkHighlightColor,
-                            linkColor, false) {
-                        @Override
-                        public void onClick(View widget) {
-                            if (linkListener == null) return;
-                            linkListener.onUrlClicked(url.url);
-                        }
-                    };
-                    spannable.setSpan(span, start, end, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
-                }
-            }
-        }
-    }
-
-    static FormattedUrlEntity getEntityToStrip(String tweetText, List<FormattedUrlEntity> combined,
-                                               boolean stripQuoteTweet, boolean stripVineCard) {
-        if (combined.isEmpty()) return null;
-
-        final FormattedUrlEntity urlEntity = combined.get(combined.size() - 1);
-        if (stripLtrMarker(tweetText).endsWith(urlEntity.url) && (isPhotoEntity(urlEntity) ||
-                (stripQuoteTweet && isQuotedStatus(urlEntity)) ||
-                (stripVineCard && isVineCard(urlEntity)))) {
-            return urlEntity;
-        }
-
-        return null;
-    }
-
-    static String stripLtrMarker(String tweetText) {
-        if (tweetText.endsWith(Character.toString('\u200E'))) {
-            return tweetText.substring(0, tweetText.length() - 1);
-        }
-
-        return tweetText;
-    }
-
-    static boolean isPhotoEntity(final FormattedUrlEntity urlEntity) {
-        return urlEntity instanceof FormattedMediaEntity &&
-                TweetMediaUtils.PHOTO_TYPE.equals(((FormattedMediaEntity) urlEntity).type);
-    }
-
-    static boolean isQuotedStatus(final FormattedUrlEntity urlEntity) {
-        return QUOTED_STATUS_URL.matcher(urlEntity.expandedUrl).find();
-    }
-
-    static boolean isVineCard(final FormattedUrlEntity urlEntity) {
-        return VINE_URL.matcher(urlEntity.expandedUrl).find();
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTextUtils.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTextUtils.java
deleted file mode 100644
index 0d042f5f..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTextUtils.java
+++ /dev/null
@@ -1,231 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.text.TextUtils;
-
-import com.twitter.sdk.android.core.models.HashtagEntity;
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.core.models.MentionEntity;
-import com.twitter.sdk.android.core.models.SymbolEntity;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.UrlEntity;
-import com.twitter.sdk.android.tweetui.internal.util.HtmlEntities;
-
-import java.util.ArrayList;
-import java.util.List;
-
-final class TweetTextUtils {
-
-    private TweetTextUtils() {}
-
-    /**
-     * Should not be called directly outside of TweetRepository, the return value should be cached
-     * or memoized.
-     *
-     * @param tweet The tweet to format
-     * @return      The formatted Tweet text
-     */
-    static FormattedTweetText formatTweetText(Tweet tweet) {
-        if (tweet == null) return null;
-
-        final FormattedTweetText adjustedTweet = new FormattedTweetText();
-
-        convertEntities(adjustedTweet, tweet);
-        format(adjustedTweet, tweet);
-
-        return adjustedTweet;
-    }
-
-    /**
-     * Populates the list of formatted entities within the formattedTweetText.
-     *
-     * @param formattedTweetText The formatted tweet text that is to be populated
-     * @param tweet The source Tweet
-     */
-    static void convertEntities(FormattedTweetText formattedTweetText, Tweet tweet) {
-        if (tweet.entities == null) return;
-
-        final List<UrlEntity> coreUrls = tweet.entities.urls;
-        if (coreUrls != null) {
-            for (UrlEntity entity : coreUrls) {
-                final FormattedUrlEntity formattedUrlEntity =
-                        FormattedUrlEntity.createFormattedUrlEntity(entity);
-                formattedTweetText.urlEntities.add(formattedUrlEntity);
-            }
-        }
-
-        final List<MediaEntity> coreMedia = tweet.entities.media;
-        if (coreMedia != null) {
-            for (MediaEntity entity : coreMedia) {
-                final FormattedMediaEntity formattedMediaEntity = new FormattedMediaEntity(entity);
-                formattedTweetText.mediaEntities.add(formattedMediaEntity);
-            }
-        }
-
-        final List<HashtagEntity> coreHashtags = tweet.entities.hashtags;
-        if (coreHashtags != null) {
-            for (HashtagEntity entity : coreHashtags) {
-                final FormattedUrlEntity formattedHashtagEntity =
-                        FormattedUrlEntity.createFormattedUrlEntity(entity);
-                formattedTweetText.hashtagEntities.add(formattedHashtagEntity);
-            }
-        }
-
-        final List<MentionEntity> coreMentions = tweet.entities.userMentions;
-        if (coreMentions != null) {
-            for (MentionEntity entity : coreMentions) {
-                final FormattedUrlEntity formattedMentionEntity =
-                        FormattedUrlEntity.createFormattedUrlEntity(entity);
-                formattedTweetText.mentionEntities.add(formattedMentionEntity);
-            }
-        }
-
-        final List<SymbolEntity> coreSymbols = tweet.entities.symbols;
-        if (coreSymbols != null) {
-            for (SymbolEntity entity : coreSymbols) {
-                final FormattedUrlEntity formattedSymbolEntity =
-                        FormattedUrlEntity.createFormattedUrlEntity(entity);
-                formattedTweetText.symbolEntities.add(formattedSymbolEntity);
-            }
-        }
-    }
-
-    /**
-     * Calls the html unescaper and then the method to fix the entity indices errors caused by
-     * emoji/supplementary characters.
-     *
-     * @param formattedTweetText The formatted tweet text that is to be populated
-     * @param tweet The source Tweet
-     */
-    static void format(FormattedTweetText formattedTweetText, Tweet tweet) {
-        if (TextUtils.isEmpty(tweet.text)) return;
-
-        final HtmlEntities.Unescaped u = HtmlEntities.HTML40.unescape(tweet.text);
-        final StringBuilder result = new StringBuilder(u.unescaped);
-
-        adjustIndicesForEscapedChars(formattedTweetText.urlEntities, u.indices);
-        adjustIndicesForEscapedChars(formattedTweetText.mediaEntities, u.indices);
-        adjustIndicesForEscapedChars(formattedTweetText.hashtagEntities, u.indices);
-        adjustIndicesForEscapedChars(formattedTweetText.mentionEntities, u.indices);
-        adjustIndicesForEscapedChars(formattedTweetText.symbolEntities, u.indices);
-        adjustIndicesForSupplementaryChars(result, formattedTweetText);
-        formattedTweetText.text = result.toString();
-    }
-
-    /**
-     * Since the unescaping of html causes for example &amp; to turn into & we need to adjust
-     * the entity indices after that by 4 characters. This loops through the entities and adjusts
-     * them as necessary.
-     *
-     * @param entities The entities that need to be adjusted
-     * @param indices The indices of where there were escaped html chars that we unescaped
-     */
-    static void adjustIndicesForEscapedChars(
-            List<? extends FormattedUrlEntity> entities,
-            List<int[]> indices) {
-        if (entities == null || indices == null || indices.isEmpty()) {
-            return;
-        }
-        final int size = indices.size();
-        int m = 0; // marker
-        int diff = 0; // accumulated difference
-        int inDiff; // end difference for escapes in range
-        int len; // escaped length
-        int start; // escaped start
-        int end; // escaped end
-        int i; // reusable index
-        int[] index;
-        // For each of the entities, update the start and end indices
-        // Note: tweet entities are sorted.
-
-        for (FormattedUrlEntity entity : entities) {
-            inDiff = 0;
-            // Go through the escaped entities' indices
-            for (i = m; i < size; i++) {
-                index = indices.get(i);
-                start = index[0];
-                end = index[1];
-                // len is actually (end - start + 1) - 1
-                len = end - start;
-                if (end < entity.start) {
-                    // bump position of the next marker
-                    diff += len;
-                    m++;
-                } else if (end < entity.end) {
-                    inDiff += len;
-                }
-            }
-            // Once we've accumulated diffs, calc the offset
-            entity.start = entity.start  - (diff + inDiff);
-            entity.end = entity.end - (diff + inDiff);
-        }
-    }
-
-    /**
-     * Adjusts entity indices for supplementary characters (Emoji being the most common example) in
-     * UTF-8 (ones outside of U+0000 to U+FFFF range) are represented as a pair of char values, the
-     * first from the high-surrogates range, and the second from the low-surrogates range.
-     *
-     * @param content The content of the tweet
-     * @param formattedTweetText The formatted tweet text with entities that we need to adjust
-     */
-    static void adjustIndicesForSupplementaryChars(StringBuilder content,
-            FormattedTweetText formattedTweetText) {
-        final List<Integer> highSurrogateIndices = new ArrayList<>();
-        final int len = content.length() - 1;
-        for (int i = 0; i < len; ++i) {
-            if (Character.isHighSurrogate(content.charAt(i))
-                    && Character.isLowSurrogate(content.charAt(i + 1))) {
-                highSurrogateIndices.add(i);
-            }
-        }
-
-        adjustEntitiesWithOffsets(formattedTweetText.urlEntities, highSurrogateIndices);
-        adjustEntitiesWithOffsets(formattedTweetText.mediaEntities, highSurrogateIndices);
-        adjustEntitiesWithOffsets(formattedTweetText.hashtagEntities, highSurrogateIndices);
-        adjustEntitiesWithOffsets(formattedTweetText.mentionEntities, highSurrogateIndices);
-        adjustEntitiesWithOffsets(formattedTweetText.symbolEntities, highSurrogateIndices);
-    }
-
-    /**
-     * Shifts indices by 1 since the Twitter REST Api does not count them correctly for our language
-     * runtime.
-     *
-     * @param entities The entities that need to be adjusted
-     * @param indices The indices in the string where there are supplementary chars
-     */
-    static void adjustEntitiesWithOffsets(List<? extends FormattedUrlEntity> entities,
-            List<Integer> indices) {
-        if (entities == null || indices == null) return;
-        for (FormattedUrlEntity entity : entities) {
-            // find all indices <= start and update offsets by that much
-            final int start = entity.start;
-            int offset = 0;
-            for (Integer index : indices) {
-                if (index - offset <= start) {
-                    offset += 1;
-                } else {
-                    break;
-                }
-            }
-            entity.start = entity.start + offset;
-            entity.end = entity.end + offset;
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTimelineListAdapter.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTimelineListAdapter.java
deleted file mode 100644
index 1e31faa5..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTimelineListAdapter.java
+++ /dev/null
@@ -1,178 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-
-/**
- * TweetTimelineListAdapter is a ListAdapter which can provide Timeline Tweets to ListViews.
- */
-public class TweetTimelineListAdapter extends TimelineListAdapter<Tweet> {
-    protected Callback<Tweet> actionCallback;
-    protected final int styleResId;
-    protected TweetUi tweetUi;
-
-    /**
-     * Constructs a TweetTimelineListAdapter for the given Tweet Timeline.
-     * @param context the context for row views.
-     * @param timeline a Timeline&lt;Tweet&gt; providing access to Tweet data items.
-     * @throws java.lang.IllegalArgumentException if context is null
-     */
-    public TweetTimelineListAdapter(Context context, Timeline<Tweet> timeline) {
-        this(context, timeline, R.style.tw__TweetLightStyle, null);
-    }
-
-    TweetTimelineListAdapter(Context context, Timeline<Tweet> timeline, int styleResId,
-                             Callback<Tweet> cb) {
-        this(context, new TimelineDelegate<>(timeline), styleResId, cb, TweetUi.getInstance());
-    }
-
-    TweetTimelineListAdapter(Context context, TimelineDelegate<Tweet> delegate, int styleResId,
-                             Callback<Tweet> cb, TweetUi tweetUi) {
-        super(context, delegate);
-        this.styleResId = styleResId;
-        this.actionCallback = new ReplaceTweetCallback(delegate, cb);
-        this.tweetUi = tweetUi;
-    }
-
-    /**
-     * Returns a CompactTweetView by default. May be overridden to provide another view for the
-     * Tweet item. If Tweet actions are enabled, be sure to call setOnActionCallback(actionCallback)
-     * on each new subclass of BaseTweetView to ensure proper success and failure handling
-     * for Tweet actions (favorite, unfavorite).
-     */
-    @Override
-    public View getView(int position, View convertView, ViewGroup parent) {
-        View rowView = convertView;
-        final Tweet tweet = getItem(position);
-        if (rowView == null) {
-            final BaseTweetView tv = new CompactTweetView(context, tweet, styleResId);
-            tv.setOnActionCallback(actionCallback);
-            rowView = tv;
-        } else {
-            ((BaseTweetView) rowView).setTweet(tweet);
-        }
-        return rowView;
-    }
-
-    /*
-     * On success, sets the updated Tweet in the TimelineDelegate to replace any old copies
-     * of the same Tweet by id.
-     */
-    static class ReplaceTweetCallback extends Callback<Tweet> {
-        TimelineDelegate<Tweet> delegate;
-        Callback<Tweet> cb;
-
-        ReplaceTweetCallback(TimelineDelegate<Tweet> delegate, Callback<Tweet> cb) {
-            this.delegate = delegate;
-            this.cb = cb;
-        }
-
-        @Override
-        public void success(Result<Tweet> result) {
-            delegate.setItemById(result.data);
-            if (cb != null) {
-                cb.success(result);
-            }
-        }
-
-        @Override
-        public void failure(TwitterException exception) {
-            if (cb != null) {
-                cb.failure(exception);
-            }
-        }
-    }
-
-    /**
-     * TweetTimelineListAdapter Builder
-     */
-    public static class Builder {
-        private Context context;
-        private Timeline<Tweet> timeline;
-        private Callback<Tweet> actionCallback;
-        private TimelineFilter timelineFilter;
-        private int styleResId = R.style.tw__TweetLightStyle;
-
-        /**
-         * Constructs a Builder.
-         * @param context Context for Tweet views.
-         */
-        public Builder(Context context) {
-            this.context = context;
-        }
-
-        /**
-         * Sets the Tweet timeline data source.
-         * @param timeline Timeline of Tweets
-         */
-        public Builder setTimeline(Timeline<Tweet> timeline) {
-            this.timeline = timeline;
-            return this;
-        }
-
-        /**
-         * Sets the Tweet view style by resource id.
-         * @param styleResId resource id of the Tweet view style
-         */
-        public Builder setViewStyle(int styleResId) {
-            this.styleResId = styleResId;
-            return this;
-        }
-
-        /**
-         * Sets the callback to call when a Tweet action is performed on a Tweet view.
-         * @param actionCallback called when a Tweet action is performed.
-         */
-        public Builder setOnActionCallback(Callback<Tweet> actionCallback) {
-            this.actionCallback = actionCallback;
-            return this;
-        }
-
-        /**
-         * Sets the TimelineFilter used to filter tweets from timeline.
-         * @param timelineFilter timelineFilter for timeline
-         */
-        public Builder setTimelineFilter(TimelineFilter timelineFilter) {
-            this.timelineFilter = timelineFilter;
-            return this;
-        }
-
-        /**
-         * Builds a TweetTimelineListAdapter from Builder parameters.
-         * @return a TweetTimelineListAdpater
-         */
-        public TweetTimelineListAdapter build() {
-            if (timelineFilter == null) {
-                return new TweetTimelineListAdapter(context, timeline, styleResId, actionCallback);
-            } else {
-                final FilterTimelineDelegate delegate =
-                        new FilterTimelineDelegate(timeline, timelineFilter);
-                return new TweetTimelineListAdapter(context, delegate, styleResId, actionCallback,
-                        TweetUi.getInstance());
-            }
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTimelineRecyclerViewAdapter.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTimelineRecyclerViewAdapter.java
deleted file mode 100644
index c9ab6ad1..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTimelineRecyclerViewAdapter.java
+++ /dev/null
@@ -1,247 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.database.DataSetObserver;
-import android.support.v7.widget.RecyclerView;
-import android.view.ViewGroup;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetBuilder;
-
-/**
- * TweetTimelineRecyclerViewAdapter is a RecyclerView adapter which can provide Timeline Tweets to
- * RecyclerViews.
- */
-public class TweetTimelineRecyclerViewAdapter extends
-        RecyclerView.Adapter<TweetTimelineRecyclerViewAdapter.TweetViewHolder> {
-
-    protected final Context context;
-    protected final TimelineDelegate<Tweet> timelineDelegate;
-    protected Callback<Tweet> actionCallback;
-    protected final int styleResId;
-    protected TweetUi tweetUi;
-    private int previousCount;
-
-    /**
-     * Constructs a TweetTimelineRecyclerViewAdapter for a RecyclerView implementation of a timeline
-     *
-     * @param context the context for row views.
-     * @param timeline a Timeline&lt;Tweet&gt; providing access to Tweet data items.
-     * @throws java.lang.IllegalArgumentException if context is null
-     */
-    public TweetTimelineRecyclerViewAdapter(Context context, Timeline<Tweet> timeline) {
-        this(context, timeline, R.style.tw__TweetLightStyle, null);
-    }
-
-    protected TweetTimelineRecyclerViewAdapter(Context context, Timeline<Tweet> timeline,
-                                               int styleResId, Callback<Tweet> cb) {
-        this(context, new TimelineDelegate<>(timeline), styleResId, cb, TweetUi.getInstance());
-    }
-
-    TweetTimelineRecyclerViewAdapter(Context context, TimelineDelegate<Tweet> timelineDelegate,
-                                     int styleResId, Callback<Tweet> cb, TweetUi tweetUi) {
-        this(context, timelineDelegate, styleResId);
-        actionCallback = new ReplaceTweetCallback(timelineDelegate, cb);
-        this.tweetUi = tweetUi;
-    }
-
-    TweetTimelineRecyclerViewAdapter(Context context,
-                                     final TimelineDelegate<Tweet> timelineDelegate,
-                                     int styleResId) {
-        if (context == null) {
-            throw new IllegalArgumentException("Context must not be null");
-        }
-        this.context = context;
-        this.timelineDelegate = timelineDelegate;
-        this.styleResId = styleResId;
-
-        this.timelineDelegate.refresh(new Callback<TimelineResult<Tweet>>() {
-            @Override
-            public void success(Result<TimelineResult<Tweet>> result) {
-                notifyDataSetChanged();
-                previousCount = TweetTimelineRecyclerViewAdapter.this.timelineDelegate.getCount();
-            }
-
-            @Override
-            public void failure(TwitterException exception) {
-
-            }
-        });
-
-        final DataSetObserver dataSetObserver = new DataSetObserver() {
-            @Override
-            public void onChanged() {
-                super.onChanged();
-                if (previousCount == 0) {
-                    notifyDataSetChanged();
-                } else {
-                    notifyItemRangeInserted(previousCount,
-                            TweetTimelineRecyclerViewAdapter.this.timelineDelegate.getCount()
-                                    - previousCount);
-                }
-                previousCount = TweetTimelineRecyclerViewAdapter.this.timelineDelegate.getCount();
-            }
-
-            @Override
-            public void onInvalidated() {
-                notifyDataSetChanged();
-                super.onInvalidated();
-            }
-        };
-
-        this.timelineDelegate.registerDataSetObserver(dataSetObserver);
-    }
-
-    public void refresh(Callback<TimelineResult<Tweet>> cb) {
-        timelineDelegate.refresh(cb);
-        previousCount = 0;
-    }
-
-    @Override
-    public TweetViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
-        final Tweet tweet = new TweetBuilder().build();
-        final CompactTweetView compactTweetView = new CompactTweetView(context, tweet, styleResId);
-        compactTweetView.setOnActionCallback(actionCallback);
-        return new TweetViewHolder(compactTweetView);
-    }
-
-    @Override
-    public void onBindViewHolder(TweetViewHolder holder, int position) {
-        final Tweet tweet = timelineDelegate.getItem(position);
-        final CompactTweetView compactTweetView = (CompactTweetView) holder.itemView;
-        compactTweetView.setTweet(tweet);
-    }
-
-    @Override
-    public int getItemCount() {
-        return timelineDelegate.getCount();
-    }
-
-    public static final class TweetViewHolder extends RecyclerView.ViewHolder {
-        public TweetViewHolder(CompactTweetView itemView) {
-            super(itemView);
-        }
-    }
-
-    /*
-     * On success, sets the updated Tweet in the TimelineDelegate to replace any old copies
-     * of the same Tweet by id.
-     */
-    static class ReplaceTweetCallback extends Callback<Tweet> {
-        TimelineDelegate<Tweet> delegate;
-        Callback<Tweet> cb;
-
-        ReplaceTweetCallback(TimelineDelegate<Tweet> delegate, Callback<Tweet> cb) {
-            this.delegate = delegate;
-            this.cb = cb;
-        }
-
-        @Override
-        public void success(Result<Tweet> result) {
-            delegate.setItemById(result.data);
-            if (cb != null) {
-                cb.success(result);
-            }
-        }
-
-        @Override
-        public void failure(TwitterException exception) {
-            if (cb != null) {
-                cb.failure(exception);
-            }
-        }
-    }
-
-    /**
-     * TweetTimelineRecyclerViewAdapter Builder
-     */
-    public static class Builder {
-        private Context context;
-        private Timeline<Tweet> timeline;
-        private Callback<Tweet> actionCallback;
-        private TimelineFilter timelineFilter;
-        private int styleResId = R.style.tw__TweetLightStyle;
-
-        /**
-         * Constructs a Builder.
-         * @param context Context for Tweet views.
-         */
-        public Builder(Context context) {
-            this.context = context;
-        }
-
-        /**
-         * Sets the Tweet timeline data source.
-         * @param timeline Timeline of Tweets
-         */
-        public TweetTimelineRecyclerViewAdapter.Builder setTimeline(Timeline<Tweet> timeline) {
-            this.timeline = timeline;
-            return this;
-        }
-
-        /**
-         * Sets the Tweet view style by resource id.
-         * @param styleResId resource id of the Tweet view style
-         */
-        public TweetTimelineRecyclerViewAdapter.Builder setViewStyle(int styleResId) {
-            this.styleResId = styleResId;
-            return this;
-        }
-
-        /**
-         * Sets the callback to call when a Tweet action is performed on a Tweet view.
-         * @param actionCallback called when a Tweet action is performed.
-         */
-        public TweetTimelineRecyclerViewAdapter.Builder setOnActionCallback(
-                Callback<Tweet> actionCallback) {
-            this.actionCallback = actionCallback;
-            return this;
-        }
-
-        /**
-         * Sets the TimelineFilter used to filter tweets from timeline.
-         * @param timelineFilter timelineFilter for timeline
-         */
-        public TweetTimelineRecyclerViewAdapter.Builder setTimelineFilter(
-                TimelineFilter timelineFilter) {
-            this.timelineFilter = timelineFilter;
-            return this;
-        }
-
-        /**
-         * Builds a TweetTimelineRecyclerViewAdapter from Builder parameters.
-         * @return a TweetTimelineListAdpater
-         */
-        public TweetTimelineRecyclerViewAdapter build() {
-            if (timelineFilter == null) {
-                return new TweetTimelineRecyclerViewAdapter(context, timeline, styleResId,
-                        actionCallback);
-            } else {
-                final FilterTimelineDelegate delegate = new FilterTimelineDelegate(timeline,
-                        timelineFilter);
-                return new TweetTimelineRecyclerViewAdapter(context, delegate, styleResId,
-                        actionCallback, TweetUi.getInstance());
-            }
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetUi.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetUi.java
deleted file mode 100644
index e7b129b7..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetUi.java
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.annotation.SuppressLint;
-import android.content.Context;
-import android.os.Handler;
-import android.os.Looper;
-
-import com.squareup.picasso.Picasso;
-import com.twitter.sdk.android.core.GuestSessionProvider;
-import com.twitter.sdk.android.core.SessionManager;
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterSession;
-
-/**
- * The TweetUi Kit provides views to render Tweets.
- */
-public class TweetUi {
-    @SuppressLint("StaticFieldLeak")
-    static volatile TweetUi instance;
-    static final String LOGTAG = "TweetUi";
-
-    SessionManager<TwitterSession> sessionManager;
-    GuestSessionProvider guestSessionProvider;
-    Context context;
-
-    private TweetRepository tweetRepository;
-    private Picasso imageLoader;
-
-    public static TweetUi getInstance() {
-        if (instance == null) {
-            synchronized (TweetUi.class) {
-                if (instance == null) {
-                    instance = new TweetUi();
-                }
-            }
-        }
-        return instance;
-    }
-
-    TweetUi() {
-        final TwitterCore twitterCore = TwitterCore.getInstance();
-
-        context = Twitter.getInstance().getContext(getIdentifier());
-        sessionManager = twitterCore.getSessionManager();
-        guestSessionProvider = twitterCore.getGuestSessionProvider();
-        tweetRepository = new TweetRepository(new Handler(Looper.getMainLooper()),
-                twitterCore.getSessionManager());
-        imageLoader = Picasso.with(Twitter.getInstance().getContext(getIdentifier()));
-    }
-
-    public String getIdentifier() {
-        return BuildConfig.GROUP + ":" + BuildConfig.ARTIFACT_ID;
-    }
-
-    public String getVersion() {
-        return BuildConfig.VERSION_NAME + "." + BuildConfig.BUILD_NUMBER;
-    }
-
-    TweetRepository getTweetRepository() {
-        return tweetRepository;
-    }
-
-    // Testing purposes only
-    void setTweetRepository(TweetRepository tweetRepository) {
-        this.tweetRepository = tweetRepository;
-    }
-
-    public Picasso getImageLoader() {
-        return imageLoader;
-    }
-
-    // Testing purposes only
-    void setImageLoader(Picasso imageLoader) {
-        this.imageLoader = imageLoader;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetUtils.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetUtils.java
deleted file mode 100644
index 9a02c850..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetUtils.java
+++ /dev/null
@@ -1,169 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.net.Uri;
-import android.text.TextUtils;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import java.util.List;
-import java.util.Locale;
-
-/**
- * Convenience methods for loading Tweets from the API without requiring a user
- * sign in flow.
- */
-public final class TweetUtils {
-    private static final String UNKNOWN_SCREEN_NAME = "twitter_unknown";
-    private static final String TWITTER_URL = "https://twitter.com/";
-    private static final String TWITTER_KIT_REF = "ref_src=twsrc%%5Etwitterkit";
-    private static final String TWEET_URL = TWITTER_URL + "%s/status/%d?" + TWITTER_KIT_REF;
-    private static final String HASHTAG_URL = TWITTER_URL + "hashtag/%s?" + TWITTER_KIT_REF;
-    private static final String PROFILE_URL = TWITTER_URL + "%s?" + TWITTER_KIT_REF;
-    private static final String SYMBOL_URL = TWITTER_URL + "search?q=%%24%s&" + TWITTER_KIT_REF;
-    static final String LOAD_TWEET_DEBUG = "loadTweet failure for Tweet Id %d.";
-
-    private TweetUtils() {}
-
-    /**
-     * Loads a single Tweet by id.
-     * @param tweetId Tweet id
-     * @param cb callback
-     */
-    public static void loadTweet(final long tweetId, final Callback<Tweet> cb) {
-        TweetUi.getInstance().getTweetRepository().loadTweet(tweetId,
-                new LoggingCallback<Tweet>(cb, Twitter.getLogger()) {
-                    @Override
-                    public void success(Result<Tweet> result) {
-                        if (cb != null) {
-                            cb.success(result);
-                        }
-                    }
-                });
-    }
-
-    /**
-     * Loads a List of Tweets by id. Returns Tweets in the order requested.
-     * @param tweetIds List of Tweet ids
-     * @param cb callback
-     */
-    public static void loadTweets(final List<Long> tweetIds, final Callback<List<Tweet>> cb) {
-        TweetUi.getInstance().getTweetRepository().loadTweets(tweetIds,
-                new LoggingCallback<List<Tweet>>(cb, Twitter.getLogger()) {
-                    @Override
-                    public void success(Result<List<Tweet>> result) {
-                        if (cb != null) {
-                            cb.success(result);
-                        }
-                    }
-                });
-    }
-
-    /**
-     * Determines if an accurate permalink can be constructed for the Tweet
-     *
-     * @param tweet a Tweet which may be missing fields for resolving its author
-     * @return Returns true if tweet has a greater than zero id and a screen name
-     */
-    static boolean isTweetResolvable(Tweet tweet) {
-        return tweet != null && tweet.id > 0 && tweet.user != null
-                && !TextUtils.isEmpty(tweet.user.screenName);
-    }
-
-    /**
-     * Returns the Tweet which should be displayed in a TweetView. If the given Tweet is a retweet,
-     * the embedded retweetedStatus Tweet is returned.
-     * @param tweet A tweet from the API
-     * @return either the tweet argument or the Tweet in the retweetedStatus field
-     */
-    static Tweet getDisplayTweet(Tweet tweet) {
-        if (tweet == null || tweet.retweetedStatus == null) {
-            return tweet;
-        } else {
-            return tweet.retweetedStatus;
-        }
-    }
-
-    static boolean showQuoteTweet(Tweet tweet) {
-        return tweet.quotedStatus != null &&
-                tweet.card == null && (tweet.entities == null || tweet.entities.media == null
-                || tweet.entities.media.isEmpty());
-    }
-
-    /**
-     * Builds a permalink url for the given screen name and Tweet id. If we don't have a
-     * screen_name, use the constant UNKNOWN_SCREEN_NAME value and the app or the site will figure
-     * out the redirect. The reason for using twitter_unknown is that only twitter official accounts
-     * can have twitter in their screen name so we'd never be somehow pointing the user to something
-     * potentially inflammatory (see twitter.com/unknown for an example).
-     *
-     * @param screenName The screen name to build the url with
-     * @param tweetId    The id to build the url with
-     * @return           Can be null, otherwise a resolvable permalink to a Tweet.
-     */
-    static Uri getPermalink(String screenName, long tweetId) {
-        if (tweetId <= 0) {
-            return null;
-        }
-
-        final String permalink;
-        if (TextUtils.isEmpty(screenName)) {
-            permalink = String.format(Locale.US, TWEET_URL, UNKNOWN_SCREEN_NAME, tweetId);
-        } else {
-            permalink = String.format(Locale.US, TWEET_URL, screenName, tweetId);
-        }
-        return Uri.parse(permalink);
-    }
-    /**
-     * Builds a permalink for the profile of a given screen name
-     *
-     * @param screenName The screen name to build the url with
-     * @return           Can be null, otherwise a resolvable permalink to a Profile.
-     */
-    static String getProfilePermalink(String screenName) {
-        final String permalink;
-        if (TextUtils.isEmpty(screenName)) {
-            permalink = String.format(Locale.US, PROFILE_URL, UNKNOWN_SCREEN_NAME);
-        } else {
-            permalink = String.format(Locale.US, PROFILE_URL, screenName);
-        }
-        return permalink;
-    }
-
-    /**
-     * Builds a permalink for a hashtag entity
-     * @param text
-     * @return Formatted url string
-     */
-    static String getHashtagPermalink(String text) {
-        return String.format(Locale.US, TweetUtils.HASHTAG_URL, text);
-    }
-
-    /**
-     * Builds a permalink for a symbol entity
-     * @param text
-     * @return Formatted url string
-     */
-    static String getSymbolPermalink(String text) {
-        return String.format(Locale.US, TweetUtils.SYMBOL_URL, text);
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetView.java
deleted file mode 100644
index 9dad2e04..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetView.java
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.util.AttributeSet;
-
-import com.twitter.sdk.android.core.models.Tweet;
-
-public class TweetView extends BaseTweetView {
-    private static final String VIEW_TYPE_NAME = "default";
-    private static final double SQUARE_ASPECT_RATIO = 1.0;
-    private static final double DEFAULT_ASPECT_RATIO_MEDIA_CONTAINER = 3.0 / 2.0;
-
-    public TweetView(Context context, Tweet tweet) {
-        super(context, tweet);
-    }
-
-    public TweetView(Context context, Tweet tweet, int styleResId) {
-        super(context, tweet, styleResId);
-    }
-
-    TweetView(Context context, Tweet tweet, int styleResId, DependencyProvider dependencyProvider) {
-        super(context, tweet, styleResId, dependencyProvider);
-    }
-
-    public TweetView(Context context, AttributeSet attrs) {
-        super(context, attrs);
-    }
-
-    public TweetView(Context context, AttributeSet attrs, int defStyle) {
-        super(context, attrs, defStyle);
-    }
-
-    @Override
-    protected int getLayout() {
-        return R.layout.tw__tweet;
-    }
-
-    /**
-     * Render the Tweet by updating the subviews. For any data that is missing from the Tweet,
-     * invalidate the subview value (e.g. text views set to empty string) for view recycling.
-     * Do not call with render true until inflation has completed.
-     * @throws IllegalArgumentException
-     */
-    @Override
-    void render() {
-        super.render();
-        setVerifiedCheck(tweet);
-    }
-
-    /**
-     * Returns the desired aspect ratio for Tweet that contains photo entities
-     *
-     * @param photoCount total count of photo entities
-     * @return the target image and bitmap width to height aspect ratio
-     */
-    @Override
-    protected double getAspectRatioForPhotoEntity(int photoCount) {
-        if (photoCount == 4) {
-            return SQUARE_ASPECT_RATIO;
-        } else {
-            return DEFAULT_ASPECT_RATIO_MEDIA_CONTAINER;
-        }
-    }
-
-    /**
-     * Sets the verified check if the User is verified. If the User is not verified or if the
-     * verification data is unavailable, remove the check.
-     */
-    private void setVerifiedCheck(Tweet tweet) {
-        if (tweet != null && tweet.user != null && tweet.user.verified) {
-            fullNameView.setCompoundDrawablesWithIntrinsicBounds(0, 0,
-                    R.drawable.tw__ic_tweet_verified, 0);
-        } else {
-            fullNameView.setCompoundDrawablesWithIntrinsicBounds(0, 0, 0, 0);
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TwitterListTimeline.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TwitterListTimeline.java
deleted file mode 100644
index d53ee3d1..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TwitterListTimeline.java
+++ /dev/null
@@ -1,176 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import java.util.List;
-
-import retrofit2.Call;
-
-/**
- * TwitterListTimeline provides a timeline of tweets from the lists/statuses API source.
- */
-public class TwitterListTimeline extends BaseTimeline implements Timeline<Tweet> {
-    final TwitterCore twitterCore;
-    final Long listId;
-    final String slug;
-    final String ownerScreenName;
-    final Long ownerId;
-    final Integer maxItemsPerRequest;
-    final Boolean includeRetweets;
-
-    TwitterListTimeline(TwitterCore twitterCore, Long listId, String slug, Long ownerId,
-        String ownerScreenName, Integer maxItemsPerRequest, Boolean includeRetweets) {
-        this.twitterCore = twitterCore;
-        this.listId = listId;
-        this.slug = slug;
-        this.ownerId = ownerId;
-        this.ownerScreenName = ownerScreenName;
-        this.maxItemsPerRequest = maxItemsPerRequest;
-        this.includeRetweets = includeRetweets;
-    }
-
-    /**
-     * Loads Tweets with id greater than (newer than) sinceId. If sinceId is null, loads the newest
-     * Tweets.
-     * @param sinceId minimum id of the Tweets to load (exclusive).
-     * @param cb callback.
-     */
-    @Override
-    public void next(Long sinceId, Callback<TimelineResult<Tweet>> cb) {
-        createListTimelineRequest(sinceId, null).enqueue(new TweetsCallback(cb));
-    }
-
-    /**
-     * Loads Tweets with id less than (older than) maxId.
-     * @param maxId maximum id of the Tweets to load (exclusive).
-     * @param cb callback.
-     */
-    @Override
-    public void previous(Long maxId, Callback<TimelineResult<Tweet>> cb) {
-        // lists/statuses api provides results which are inclusive of the maxId, decrement the
-        // maxId to get exclusive results
-        createListTimelineRequest(null, decrementMaxId(maxId)).enqueue(new TweetsCallback(cb));
-    }
-
-    Call<List<Tweet>> createListTimelineRequest(final Long sinceId, final Long maxId) {
-        return twitterCore.getApiClient().getListService().statuses(listId, slug,
-                ownerScreenName, ownerId, sinceId, maxId, maxItemsPerRequest, true,
-                includeRetweets);
-    }
-
-    /**
-     * TwitterListTimeline Builder.
-     */
-    public static class Builder {
-        private final TwitterCore twitterCore;
-        private Long listId;
-        private String slug;
-        private Long ownerId;
-        private String ownerScreenName;
-        private Integer maxItemsPerRequest = 30;
-        private Boolean includeRetweets;
-
-        /**
-         * Constructs a Builder.
-         */
-        public Builder() {
-            twitterCore = TwitterCore.getInstance();
-        }
-
-        // For testing
-        Builder(TwitterCore twitterCore) {
-            this.twitterCore = twitterCore;
-        }
-
-        /**
-         * Sets the id for the Twitter List to get Tweets from.
-         * @param id The ID of the Tweet list to get Tweets from.
-         */
-        public Builder id(Long id) {
-            this.listId = id;
-            return this;
-        }
-
-        /**
-         * Sets the List slug name and owner id for the TwitterListTimeline.
-         * @param slug The list slug name (e.g. 'textile-engineers').
-         * @param ownerId The list owner Twitter user id.
-         */
-        public Builder slugWithOwnerId(String slug, Long ownerId) {
-            this.slug = slug;
-            this.ownerId = ownerId;
-            return this;
-        }
-
-        /**
-         * Sets the slug name and owner screen name for the TwitterListTimeline.
-         * @param slug The list slug name (e.g. "textile-engineers").
-         * @param ownerScreenName The list owner screen name (e.g. "twitterdev").
-         */
-        public Builder slugWithOwnerScreenName(String slug, String ownerScreenName) {
-            this.slug = slug;
-            this.ownerScreenName = ownerScreenName;
-            return this;
-        }
-
-        /**
-         * Sets the number of Tweets returned per request for the TwitterListTimeline.
-         * @param maxItemsPerRequest The number of tweets to return per request.
-         */
-        public Builder maxItemsPerRequest(Integer maxItemsPerRequest) {
-            this.maxItemsPerRequest = maxItemsPerRequest;
-            return this;
-        }
-
-        /**
-         * Sets whether to includeRetweets for the TwitterListTimeline. Defaults to true.
-         * @param includeRetweets When set to false, the timeline will strip any native retweets
-         * (though they will still count toward both the maximal length of the timeline and the
-         * slice selected by the count parameter).
-         */
-        public Builder includeRetweets(Boolean includeRetweets) {
-            this.includeRetweets = includeRetweets;
-            return this;
-        }
-
-        /**
-         * Builds a TwitterListTimeline from the Builder parameters.
-         * @return a TwitterListTimeline.
-         * @throws java.lang.IllegalStateException if id or slug/owner pair is not set.
-         */
-        public TwitterListTimeline build() {
-            // user must provide either an id or slug, not both
-            if (!(listId == null ^ slug == null)) {
-                throw new IllegalStateException("must specify either a list id or slug/owner pair");
-            }
-
-            // user provides a slug, but ownerId and ownerScreenName are null
-            if (slug != null && ownerId == null && ownerScreenName == null) {
-                throw new IllegalStateException(
-                        "slug/owner pair must set owner via ownerId or ownerScreenName");
-            }
-
-            return new TwitterListTimeline(twitterCore, listId, slug, ownerId, ownerScreenName,
-                    maxItemsPerRequest, includeRetweets);
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/UserTimeline.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/UserTimeline.java
deleted file mode 100644
index 81ab4c12..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/UserTimeline.java
+++ /dev/null
@@ -1,160 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import java.util.List;
-
-import retrofit2.Call;
-
-/**
- * UserTimeline provides a timeline of tweets from the statuses/userTimeline API source.
- */
-public class UserTimeline extends BaseTimeline implements Timeline<Tweet> {
-    final TwitterCore twitterCore;
-    final Long userId;
-    final String screenName;
-    final Integer maxItemsPerRequest;
-    final Boolean includeReplies;
-    final Boolean includeRetweets;
-
-    UserTimeline(TwitterCore twitterCore, Long userId, String screenName,
-                 Integer maxItemsPerRequest, Boolean includeReplies, Boolean includeRetweets) {
-        this.twitterCore = twitterCore;
-        this.userId = userId;
-        this.screenName = screenName;
-        this.maxItemsPerRequest = maxItemsPerRequest;
-        // null includeReplies should default to false
-        this.includeReplies = includeReplies == null ? false : includeReplies;
-        this.includeRetweets = includeRetweets;
-    }
-
-    /**
-     * Loads Tweets with id greater than (newer than) sinceId. If sinceId is null, loads the newest
-     * Tweets.
-     * @param sinceId minimum id of the Tweets to load (exclusive).
-     * @param cb callback.
-     */
-    @Override
-    public void next(Long sinceId, Callback<TimelineResult<Tweet>> cb) {
-        createUserTimelineRequest(sinceId, null).enqueue(new TweetsCallback(cb));
-    }
-
-    /**
-     * Loads Tweets with id less than (older than) maxId.
-     * @param maxId maximum id of the Tweets to load (exclusive).
-     * @param cb callback.
-     */
-    @Override
-    public void previous(Long maxId, Callback<TimelineResult<Tweet>> cb) {
-        // user timeline api provides results which are inclusive, decrement the maxId to get
-        // exclusive results
-        createUserTimelineRequest(null, decrementMaxId(maxId)).enqueue(new TweetsCallback(cb));
-    }
-
-    Call<List<Tweet>> createUserTimelineRequest(final Long sinceId, final Long maxId) {
-        return twitterCore.getApiClient().getStatusesService().userTimeline(userId,
-                screenName, maxItemsPerRequest, sinceId, maxId, false, !includeReplies, null,
-                includeRetweets);
-    }
-
-    /**
-     * UserTimeline Builder.
-     */
-    public static class Builder {
-        private final TwitterCore twitterCore;
-        private Long userId;
-        private String screenName;
-        private Integer maxItemsPerRequest = 30;
-        private Boolean includeReplies;
-        private Boolean includeRetweets;
-
-        /**
-         * Constructs a Builder.
-         */
-        public Builder() {
-            twitterCore = TwitterCore.getInstance();
-        }
-
-        // For testing
-        Builder(TwitterCore twitterCore) {
-            this.twitterCore = twitterCore;
-        }
-
-        /**
-         * Sets the userId for the UserTimeline.
-         * @param userId The ID of the user for whom to return results for.
-         */
-        public Builder userId(Long userId) {
-            this.userId = userId;
-            return this;
-        }
-
-        /**
-         * Sets the screenName for the UserTimeline.
-         * @param screenName The screen name of the user for whom to return results for.
-         */
-        public Builder screenName(String screenName) {
-            this.screenName = screenName;
-            return this;
-        }
-
-        /**
-         * Sets the number of Tweets returned per request for the UserTimeline.
-         * @param maxItemsPerRequest The number of tweets to return per request, up to a maximum of
-         * 200.
-         */
-        public Builder maxItemsPerRequest(Integer maxItemsPerRequest) {
-            this.maxItemsPerRequest = maxItemsPerRequest;
-            return this;
-        }
-
-        /**
-         * Sets whether to includeReplies for the UserTimeline. Defaults to false.
-         * @param includeReplies true to allow replies to be included in the returned timeline
-         * result.
-         */
-        public Builder includeReplies(Boolean includeReplies) {
-            this.includeReplies = includeReplies;
-            return this;
-        }
-
-        /**
-         * Sets whether to includeRetweets for the UserTimeline. Defaults to true.
-         * @param includeRetweets When set to false, the timeline will strip any native retweets
-         * (though they will still count toward both the maximal length of the timeline and the
-         * slice selected by the count parameter).
-         */
-        public Builder includeRetweets(Boolean includeRetweets) {
-            this.includeRetweets = includeRetweets;
-            return this;
-        }
-
-        /**
-         * Builds a UserTimeline from the Builder parameters.
-         * @return a UserTimeline.
-         */
-        public UserTimeline build() {
-            return new UserTimeline(twitterCore, userId, screenName, maxItemsPerRequest,
-                    includeReplies, includeRetweets);
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/Utils.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/Utils.java
deleted file mode 100644
index f0cdfc27..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/Utils.java
+++ /dev/null
@@ -1,72 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.models.Tweet;
-
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-
-final class Utils {
-    private Utils() {}
-
-    static Long numberOrDefault(String candidate, long defaultLong) {
-        try {
-            return Long.parseLong(candidate);
-        } catch (NumberFormatException e) {
-            return defaultLong;
-        }
-    }
-
-    static String stringOrEmpty(String candidate) {
-        return stringOrDefault(candidate, "");
-    }
-
-    static String stringOrDefault(String candidate, String defaultString) {
-        return (candidate != null) ? candidate : defaultString;
-    }
-
-    static CharSequence charSeqOrEmpty(CharSequence candidate) {
-        return charSeqOrDefault(candidate, "");
-    }
-
-    static CharSequence charSeqOrDefault(CharSequence candidate, CharSequence defaultSequence) {
-        return (candidate != null) ? candidate : defaultSequence;
-    }
-
-    /**
-     * Orders tweets by the tweetIds order. If tweetIds contains duplicates, the result Tweet list
-     * will duplicate Tweets accordingly.
-     * @param tweetIds ordered list of Tweet ids
-     * @param tweets unordered list of Tweet results
-     */
-    static List<Tweet> orderTweets(List<Long> tweetIds, List<Tweet> tweets) {
-        final HashMap<Long, Tweet> idToTweet = new HashMap<>();
-        final ArrayList<Tweet> ordered = new ArrayList<>();
-        for (Tweet tweet: tweets) {
-            idToTweet.put(tweet.id, tweet);
-        }
-        for (Long id: tweetIds) {
-            if (idToTweet.containsKey(id)) {
-                ordered.add(idToTweet.get(id));
-            }
-        }
-        return ordered;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/AnimationUtils.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/AnimationUtils.java
deleted file mode 100644
index 65bc20c8..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/AnimationUtils.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.animation.Animator;
-import android.animation.AnimatorListenerAdapter;
-import android.view.View;
-import android.view.ViewPropertyAnimator;
-
-class AnimationUtils {
-    public static ViewPropertyAnimator fadeOut(final View from, int duration) {
-        if (from.getVisibility() == View.VISIBLE) {
-            from.clearAnimation();
-            final ViewPropertyAnimator animator = from.animate();
-            animator.alpha(0f)
-                    .setDuration(duration)
-                    .setListener(new AnimatorListenerAdapter() {
-                        @Override
-                        public void onAnimationEnd(Animator animation) {
-                            from.setVisibility(View.INVISIBLE);
-                            from.setAlpha(1f);
-                        }
-                    });
-            return animator;
-        }
-        return null;
-    }
-
-    public static ViewPropertyAnimator fadeIn(View to, int duration) {
-        if (to.getVisibility() != View.VISIBLE) {
-            to.setAlpha(0f);
-            to.setVisibility(View.VISIBLE);
-        }
-        to.clearAnimation();
-        final ViewPropertyAnimator animator = to.animate();
-        animator.alpha(1f)
-                .setDuration(duration)
-                .setListener(null);
-        return animator;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/AspectRatioFrameLayout.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/AspectRatioFrameLayout.java
deleted file mode 100644
index 9ca3c3bb..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/AspectRatioFrameLayout.java
+++ /dev/null
@@ -1,100 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.content.Context;
-import android.content.res.TypedArray;
-import android.util.AttributeSet;
-import android.view.View;
-import android.widget.FrameLayout;
-
-import com.twitter.sdk.android.tweetui.R;
-
-public class AspectRatioFrameLayout extends FrameLayout {
-
-    private static final float DEFAULT_ASPECT_RATIO = 1.0f;
-    private static final int DEFAULT_ADJUST_DIMENSION = 0;
-
-    static final int ADJUST_DIMENSION_HEIGHT = 0;
-    static final int ADJUST_DIMENSION_WIDTH = 1;
-
-    protected double aspectRatio;
-    private int dimensionToAdjust;      // ADJUST_DIMENSION_HEIGHT or ADJUST_DIMENSION_WIDTH
-
-    public AspectRatioFrameLayout(Context context) {
-        this(context, null);
-    }
-
-    public AspectRatioFrameLayout(Context context, AttributeSet attrs) {
-        this(context, attrs, 0);
-    }
-
-    public AspectRatioFrameLayout(Context context, AttributeSet attrs, int defStyle) {
-        super(context, attrs, defStyle);
-        initAttributes(defStyle);
-    }
-
-    private void initAttributes(int styleResId) {
-        final TypedArray a = getContext().getTheme().obtainStyledAttributes(styleResId,
-                R.styleable.AspectRatioFrameLayout);
-        try {
-            aspectRatio = a.getFloat(
-                    R.styleable.AspectRatioFrameLayout_tw__frame_layout_aspect_ratio,
-                    DEFAULT_ASPECT_RATIO);
-            dimensionToAdjust = a.getInt(
-                    R.styleable.AspectRatioFrameLayout_tw__frame_layout_dimension_to_adjust,
-                    DEFAULT_ADJUST_DIMENSION);
-        } finally {
-            a.recycle();
-        }
-    }
-
-    public void setAspectRatio(final double aspectRatio) {
-        this.aspectRatio = aspectRatio;
-    }
-
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        final int width;
-        final int height;
-        final int horizontalPadding = getPaddingLeft() + getPaddingRight();
-        final int verticalPadding = getPaddingBottom() + getPaddingTop();
-
-       if (dimensionToAdjust == ADJUST_DIMENSION_HEIGHT) {
-           if (View.MeasureSpec.getMode(widthMeasureSpec) == View.MeasureSpec.EXACTLY) {
-               width = View.MeasureSpec.getSize(widthMeasureSpec) - horizontalPadding;
-           } else {
-               super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-               width = getMeasuredWidth() - horizontalPadding;
-           }
-           height = (int) (width / aspectRatio);
-       } else {
-           if (MeasureSpec.getMode(heightMeasureSpec) == MeasureSpec.EXACTLY) {
-               height = MeasureSpec.getSize(heightMeasureSpec) - verticalPadding;
-           } else {
-               super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-               height = getMeasuredHeight() - verticalPadding;
-           }
-           width = (int) (height * aspectRatio);
-       }
-
-        super.onMeasure(
-            View.MeasureSpec.makeMeasureSpec(width + horizontalPadding, View.MeasureSpec.EXACTLY),
-            View.MeasureSpec.makeMeasureSpec(height + verticalPadding, View.MeasureSpec.EXACTLY));
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/ClickableLinkSpan.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/ClickableLinkSpan.java
deleted file mode 100644
index 24618156..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/ClickableLinkSpan.java
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.graphics.Color;
-import android.text.TextPaint;
-import android.text.style.ClickableSpan;
-
-/**
- * A span that can be clicked. Use with {@link SpanClickHandler}.
- */
-public abstract class ClickableLinkSpan extends ClickableSpan implements HighlightedClickableSpan {
-
-    public final int linkColor;
-    private final int selectedColor;
-    private final boolean colored;
-    private final boolean underlined;
-    private boolean selected;
-
-    public ClickableLinkSpan(int selectedColor, int linkColor, boolean underlined) {
-        this(selectedColor, linkColor, true, underlined);
-    }
-
-    ClickableLinkSpan(int selectedColor, int linkColor, boolean colored, boolean underlined) {
-        this.selectedColor = selectedColor;
-        this.linkColor = linkColor;
-        this.colored = colored;
-        this.underlined = underlined;
-    }
-
-    @Override
-    public void updateDrawState(TextPaint ds) {
-        if (colored) {
-            ds.setColor(linkColor);
-        } else {
-            ds.setColor(ds.linkColor);
-        }
-
-        if (selected) {
-            ds.bgColor = selectedColor;
-        } else {
-            ds.bgColor = Color.TRANSPARENT;
-        }
-
-        if (underlined) {
-            ds.setUnderlineText(true);
-        }
-    }
-
-    @Override
-    public void select(boolean selected) {
-        this.selected = selected;
-    }
-
-    @Override
-    public boolean isSelected() {
-        return selected;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/GalleryImageView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/GalleryImageView.java
deleted file mode 100644
index 38e4e2da..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/GalleryImageView.java
+++ /dev/null
@@ -1,78 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.content.Context;
-import android.graphics.Bitmap;
-import android.graphics.drawable.Drawable;
-import android.view.Gravity;
-import android.view.View;
-import android.widget.FrameLayout;
-import android.widget.ProgressBar;
-
-import com.squareup.picasso.Picasso;
-import com.squareup.picasso.Target;
-
-public class GalleryImageView extends FrameLayout implements Target {
-    final MultiTouchImageView imageView;
-    final ProgressBar progressBar;
-
-    public GalleryImageView(Context context) {
-        this(context, new MultiTouchImageView(context), new ProgressBar(context));
-    }
-
-    GalleryImageView(Context context, MultiTouchImageView imageView, ProgressBar progressBar) {
-        super(context);
-
-        this.imageView = imageView;
-        this.progressBar = progressBar;
-
-        LayoutParams params = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT,
-                Gravity.CENTER);
-        progressBar.setLayoutParams(params);
-        addView(progressBar);
-
-        params = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT,
-                Gravity.CENTER);
-        imageView.setLayoutParams(params);
-        addView(imageView);
-    }
-
-    public void setSwipeToDismissCallback(SwipeToDismissTouchListener.Callback callback) {
-        final View.OnTouchListener listener =
-                SwipeToDismissTouchListener.createFromView(imageView, callback);
-        imageView.setOnTouchListener(listener);
-    }
-
-    @Override
-    public void onBitmapLoaded(Bitmap bitmap, Picasso.LoadedFrom from) {
-        imageView.setImageBitmap(bitmap);
-        progressBar.setVisibility(View.GONE);
-    }
-
-    @Override
-    public void onBitmapFailed(Drawable errorDrawable) {
-
-    }
-
-    @Override
-    public void onPrepareLoad(Drawable placeHolderDrawable) {
-        imageView.setImageResource(android.R.color.transparent);
-        progressBar.setVisibility(View.VISIBLE);
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/HighlightedClickableSpan.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/HighlightedClickableSpan.java
deleted file mode 100644
index 3b398f16..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/HighlightedClickableSpan.java
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.view.View;
-
-/**
- * An interface for spans that can be clicked and highlighted on selection. In order to respond to actions
- * on spans that implement this interface, use {@link SpanClickHandler}.
- */
-public interface HighlightedClickableSpan {
-    /**
-     * Triggered if the span is clicked.
-     */
-    void onClick(View view);
-
-    /**
-     * Called when the span is clicked and released.
-     */
-    void select(boolean selected);
-
-    /**
-     * Returns the selection status of the span.
-     */
-    boolean isSelected();
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/MediaBadgeView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/MediaBadgeView.java
deleted file mode 100644
index a41a1ae0..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/MediaBadgeView.java
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.content.Context;
-import android.graphics.drawable.Drawable;
-import android.util.AttributeSet;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.FrameLayout;
-import android.widget.ImageView;
-import android.widget.TextView;
-
-import com.twitter.sdk.android.core.internal.VineCardUtils;
-import com.twitter.sdk.android.core.models.Card;
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.tweetui.R;
-
-public class MediaBadgeView extends FrameLayout {
-    TextView videoDuration;
-    ImageView badge;
-
-    public MediaBadgeView(Context context) {
-        this(context, null);
-    }
-
-    public MediaBadgeView(Context context, AttributeSet attrs) {
-        this(context, attrs, 0);
-    }
-
-    public MediaBadgeView(Context context, AttributeSet attrs, int defStyleAttr) {
-        super(context, attrs, defStyleAttr);
-
-        initSubViews(context);
-    }
-
-    void initSubViews(Context context) {
-        final LayoutInflater inflater = (LayoutInflater) context
-                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-        final View view = inflater.inflate(R.layout.tw__media_badge, this, true);
-
-        videoDuration = view.findViewById(R.id.tw__video_duration);
-        badge = view.findViewById(R.id.tw__gif_badge);
-    }
-
-    public void setMediaEntity(MediaEntity entity) {
-        if (TweetMediaUtils.GIF_TYPE.equals(entity.type)) {
-            setBadge(getResources().getDrawable(R.drawable.tw__gif_badge));
-        } else if (TweetMediaUtils.VIDEO_TYPE.equals(entity.type)) {
-            final long duration = entity.videoInfo == null ? 0 : entity.videoInfo.durationMillis;
-            setText(duration);
-        } else {
-            setEmpty();
-        }
-    }
-
-    public void setCard(Card card) {
-        if (VineCardUtils.isVine(card)) {
-            setBadge(getResources().getDrawable(R.drawable.tw__vine_badge));
-        } else {
-            setEmpty();
-        }
-    }
-
-    void setText(long duration) {
-        videoDuration.setVisibility(View.VISIBLE);
-        badge.setVisibility(View.GONE);
-
-        videoDuration.setText(MediaTimeUtils.getPlaybackTime(duration));
-    }
-
-    void setBadge(Drawable drawable) {
-        badge.setVisibility(View.VISIBLE);
-        videoDuration.setVisibility(View.GONE);
-
-        badge.setImageDrawable(drawable);
-    }
-
-    void setEmpty() {
-        videoDuration.setVisibility(View.GONE);
-        badge.setVisibility(View.GONE);
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/MediaTimeUtils.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/MediaTimeUtils.java
deleted file mode 100644
index 1edfedd7..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/MediaTimeUtils.java
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import java.util.Locale;
-
-final class MediaTimeUtils {
-    private static final String TIME_FORMAT_LONG = "%1$d:%2$02d:%3$02d";
-    private static final String TIME_FORMAT_SHORT = "%1$d:%2$02d";
-
-    private MediaTimeUtils() {}
-
-    static String getPlaybackTime(long timeMillis) {
-        final int timeSeconds = (int) (timeMillis / 1000);
-        final int seconds = timeSeconds % 60;
-        final int minutes = (timeSeconds / 60) % 60;
-        final int hours = timeSeconds / 3600;
-
-        if (hours > 0) {
-            return String.format(Locale.getDefault(), TIME_FORMAT_LONG, hours, minutes, seconds);
-        } else {
-            return String.format(Locale.getDefault(), TIME_FORMAT_SHORT, minutes, seconds);
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/MultiTouchImageView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/MultiTouchImageView.java
deleted file mode 100644
index f78f5c75..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/MultiTouchImageView.java
+++ /dev/null
@@ -1,247 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.animation.ValueAnimator;
-import android.content.Context;
-import android.graphics.Matrix;
-import android.graphics.RectF;
-import android.graphics.drawable.Drawable;
-import android.util.AttributeSet;
-import android.view.GestureDetector;
-import android.view.MotionEvent;
-import android.view.ScaleGestureDetector;
-import android.view.ViewParent;
-import android.view.animation.AccelerateDecelerateInterpolator;
-import android.widget.ImageView;
-
-public class MultiTouchImageView extends ImageView
-        implements SwipeToDismissTouchListener.SwipeableViewProvider {
-    private static final long SCALE_ANIMATION_DURATION = 300L;
-    private static final float DOUBLE_TAP_SCALE_FACTOR = 2.0f;
-    private static final float MINIMUM_SCALE_FACTOR = 1.0f;
-
-    final ScaleGestureDetector scaleGestureDetector;
-    final GestureDetector gestureDetector;
-
-    final Matrix drawMatrix = new Matrix();
-    final Matrix baseMatrix = new Matrix();
-    final Matrix updateMatrix = new Matrix();
-    final RectF viewRect = new RectF();
-
-    // Used to avoid allocating new objects
-    final RectF drawRect = new RectF();
-    final float[] matrixValues = new float[9];
-
-    boolean allowIntercept;
-
-    public MultiTouchImageView(Context context) {
-        this(context, null);
-    }
-
-    public MultiTouchImageView(Context context, AttributeSet attrs) {
-        this(context, attrs, 0);
-    }
-
-    public MultiTouchImageView(Context context, AttributeSet attrs, int defStyleAttr) {
-        super(context, attrs, defStyleAttr);
-
-        scaleGestureDetector = new ScaleGestureDetector(context, new ScaleGestureDetector
-                .SimpleOnScaleGestureListener() {
-            @Override
-            public boolean onScale(ScaleGestureDetector scaleGestureDetector) {
-                setScale(scaleGestureDetector.getScaleFactor(), scaleGestureDetector.getFocusX(),
-                        scaleGestureDetector.getFocusY());
-                setImageMatrix();
-                return true;
-            }
-
-            @Override
-            public void onScaleEnd(ScaleGestureDetector detector) {
-                if (getScale() < MINIMUM_SCALE_FACTOR) {
-                    reset();
-                    setImageMatrix();
-                }
-            }
-        });
-
-        gestureDetector = new GestureDetector(context, new GestureDetector
-                .SimpleOnGestureListener() {
-            @Override
-            public boolean onScroll(MotionEvent e1, MotionEvent e2, float dx, float dy) {
-                setTranslate(-dx, -dy);
-                setImageMatrix();
-
-                if (allowIntercept && !scaleGestureDetector.isInProgress()) {
-                    requestDisallowInterceptTouchEvent(false);
-                }
-
-                return true;
-            }
-
-            @Override
-            public boolean onDoubleTap(MotionEvent e) {
-                if (getScale() > MINIMUM_SCALE_FACTOR) {
-                    animateScale(getScale(), MINIMUM_SCALE_FACTOR, e.getX(), e.getY());
-                } else {
-                    animateScale(getScale(), DOUBLE_TAP_SCALE_FACTOR, e.getX(), e.getY());
-                }
-                return true;
-            }
-        });
-    }
-
-    boolean isInitializationComplete() {
-        final Drawable drawable = getDrawable();
-        return drawable != null && drawable.getIntrinsicWidth() > 0;
-    }
-
-    @Override
-    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
-        super.onLayout(changed, left, top, right, bottom);
-        if (isInitializationComplete()) {
-            initializeViewRect();
-            initializeBaseMatrix(getDrawable());
-            setImageMatrix();
-        }
-    }
-
-    void initializeViewRect() {
-        viewRect.set(getPaddingLeft(), getPaddingTop(), getWidth() - getPaddingRight(),
-                getHeight() - getPaddingBottom());
-    }
-
-    void initializeBaseMatrix(Drawable drawable) {
-        final int drawableWidth = drawable.getIntrinsicWidth();
-        final int drawableHeight = drawable.getIntrinsicHeight();
-        final RectF srcRect = new RectF(0, 0, drawableWidth, drawableHeight);
-
-        baseMatrix.reset();
-        baseMatrix.setRectToRect(srcRect, viewRect, Matrix.ScaleToFit.CENTER);
-    }
-
-    @Override
-    public boolean onTouchEvent(MotionEvent event) {
-        if (!isInitializationComplete()) {
-            return false;
-        }
-
-        // Do not allow touch events to be intercepted (usually for gallery swipes) by default
-        requestDisallowInterceptTouchEvent(true);
-
-        boolean retVal = scaleGestureDetector.onTouchEvent(event);
-        retVal = gestureDetector.onTouchEvent(event) || retVal;
-        return retVal || super.onTouchEvent(event);
-    }
-
-    void requestDisallowInterceptTouchEvent(boolean disallowIntercept) {
-        final ViewParent parent = getParent();
-        if (parent != null) {
-            parent.requestDisallowInterceptTouchEvent(disallowIntercept);
-        }
-    }
-
-    void setScale(float ds, float px, float py) {
-        updateMatrix.postScale(ds, ds, px, py);
-    }
-
-    float getScale() {
-        updateMatrix.getValues(matrixValues);
-        return matrixValues[Matrix.MSCALE_X];
-    }
-
-    void setTranslate(float dx, float dy) {
-        updateMatrix.postTranslate(dx, dy);
-    }
-
-    void reset() {
-        updateMatrix.reset();
-    }
-
-    void updateMatrixBounds() {
-        final RectF rect = getDrawRect(getDrawMatrix());
-        float dy = 0;
-        float dx = 0;
-
-        if (rect.height() <= viewRect.height()) {
-            dy = (viewRect.height() - rect.height()) / 2 - rect.top;
-        } else if (rect.top > 0) {
-            dy = -rect.top;
-        } else if (rect.bottom < viewRect.height()) {
-            dy = viewRect.height() - rect.bottom;
-        }
-
-        if (rect.width() <= viewRect.width()) {
-            allowIntercept = true;
-            dx = (viewRect.width() - rect.width()) / 2 - rect.left;
-        } else if (rect.left > 0) {
-            allowIntercept = true;
-            dx = -rect.left;
-        } else if (rect.right < viewRect.width()) {
-            allowIntercept = true;
-            dx = viewRect.width() - rect.right;
-        } else {
-            allowIntercept = false;
-        }
-
-        setTranslate(dx, dy);
-    }
-
-    RectF getDrawRect(Matrix matrix) {
-        final Drawable drawable = getDrawable();
-        if (drawable != null) {
-            drawRect.set(0, 0, drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight());
-            matrix.mapRect(drawRect);
-        }
-
-        return drawRect;
-    }
-
-    Matrix getDrawMatrix() {
-        drawMatrix.set(baseMatrix);
-        drawMatrix.postConcat(updateMatrix);
-
-        return drawMatrix;
-    }
-
-    void setImageMatrix() {
-        updateMatrixBounds();
-        setScaleType(ScaleType.MATRIX);
-        setImageMatrix(getDrawMatrix());
-    }
-
-    void animateScale(float start, float end, final float px, final float py) {
-        final ValueAnimator animator = ValueAnimator.ofFloat(start, end);
-
-        animator.setDuration(SCALE_ANIMATION_DURATION);
-        animator.setInterpolator(new AccelerateDecelerateInterpolator());
-        animator.addUpdateListener(valueAnimator -> {
-            final float scale = (float) valueAnimator.getAnimatedValue();
-            final float ds = scale / getScale();
-
-            setScale(ds, px, py);
-            setImageMatrix();
-        });
-        animator.start();
-    }
-
-    @Override
-    public boolean canBeSwiped() {
-        return getScale() == 1f;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/OverlayImageView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/OverlayImageView.java
deleted file mode 100644
index 7e43d3e6..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/OverlayImageView.java
+++ /dev/null
@@ -1,128 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.content.Context;
-import android.graphics.Canvas;
-import android.graphics.drawable.Drawable;
-import android.util.AttributeSet;
-import android.widget.ImageView;
-
-/**
- * An ImageView subclass that take a {@link android.graphics.drawable.Drawable} and draws it on top
- * the ImageView content.
- */
-public class OverlayImageView extends ImageView {
-    Overlay overlay = new Overlay(null);
-
-    public OverlayImageView(Context context) {
-        super(context);
-    }
-
-    public OverlayImageView(Context context, AttributeSet attrs) {
-        super(context, attrs);
-    }
-
-    @Override
-    protected void onDraw(Canvas canvas) {
-        super.onDraw(canvas);
-        overlay.draw(canvas);
-    }
-
-    @Override
-    protected void drawableStateChanged() {
-        super.drawableStateChanged();
-        overlay.setDrawableState(getDrawableState());
-    }
-
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-        overlay.setDrawableBounds(getMeasuredWidth(), getMeasuredHeight());
-    }
-
-    @Override
-    protected void onSizeChanged(int width, int height, int oldWidth, int oldHeight) {
-        super.onSizeChanged(width, height, oldWidth, oldHeight);
-        overlay.setDrawableBounds(width, height);
-    }
-
-    @Override
-    public void invalidateDrawable(Drawable drawable) {
-        if (drawable == overlay.drawable) {
-            invalidate();
-        } else {
-            super.invalidateDrawable(drawable);
-        }
-    }
-
-    /*
-     * Sets the drawable to be drawn on top the ImageView content.
-     *
-     * @param drawable The drawable
-     */
-    public void setOverlayDrawable(Drawable drawable) {
-        if (drawable != overlay.drawable) {
-            overlay.cleanupDrawable(this);
-            if (drawable != null) {
-                drawable.setCallback(this);
-            }
-
-            overlay = new Overlay(drawable);
-            overlay.setDrawableState(getDrawableState());
-            requestLayout();
-        }
-    }
-
-    /**
-     * Takes a {@link android.graphics.drawable.Drawable} and draws it on top the ImageView content.
-     * The overlay drawable will respect the view's current state so a selector can be passed in.
-     */
-    protected static class Overlay {
-        final Drawable drawable;
-
-        Overlay(Drawable drawable) {
-            this.drawable = drawable;
-        }
-
-        protected void cleanupDrawable(ImageView imageView) {
-            if (drawable != null) {
-                drawable.setCallback(null);
-                imageView.unscheduleDrawable(drawable);
-            }
-        }
-
-        protected void setDrawableBounds(int width, int height) {
-            if (drawable != null) {
-                drawable.setBounds(0, 0, width, height);
-            }
-        }
-
-        protected void setDrawableState(int[] state) {
-            if (drawable != null && drawable.isStateful()) {
-                drawable.setState(state);
-            }
-        }
-
-        protected void draw(Canvas canvas) {
-            if (drawable != null) {
-                drawable.draw(canvas);
-            }
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/SpanClickHandler.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/SpanClickHandler.java
deleted file mode 100644
index 8c6239d8..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/SpanClickHandler.java
+++ /dev/null
@@ -1,135 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.text.Layout;
-import android.text.Spanned;
-import android.view.MotionEvent;
-import android.view.View;
-import android.widget.TextView;
-
-/**
- * A helper class that enables support for clicks on spans in a the text of a
- * {@link android.widget.TextView} or a {@link android.text.Layout}. The text in the layout must
- * be of type Spanned, and the spans need to implement {@link HighlightedClickableSpan}.
- */
-public class SpanClickHandler {
-    private final View view;
-    private Layout layout;
-    private float left;
-    private float top;
-
-    private HighlightedClickableSpan highlightedClickableSpan;
-
-    public static void enableClicksOnSpans(TextView textView) {
-        final SpanClickHandler helper = new SpanClickHandler(textView, null);
-        textView.setOnTouchListener((view, event) -> {
-            final TextView textView1 = (TextView) view;
-            final Layout layout = textView1.getLayout();
-            if (layout != null) {
-                helper.layout = layout;
-                helper.left = textView1.getTotalPaddingLeft() + textView1.getScrollX();
-                helper.top = textView1.getTotalPaddingTop() + textView1.getScrollY();
-                return helper.handleTouchEvent(event);
-            }
-            return false;
-        });
-    }
-
-    /**
-     * Creates an instance of this helper for a layout and its containing view.
-     */
-    public SpanClickHandler(View view, Layout layout) {
-        this.view = view;
-        this.layout = layout;
-    }
-
-    /**
-     * Takes a motion event from the processing view and check for clicks on
-     * any of the clickable spans in the layout.
-     * @param event The motion event.
-     * @return true if the event has been handled.
-     */
-    public boolean handleTouchEvent(MotionEvent event) {
-        final CharSequence text = layout.getText();
-        final Spanned spannedText = text instanceof Spanned ? (Spanned) text : null;
-        if (spannedText == null) {
-            return false;
-        }
-
-        final int action = (event.getAction() & MotionEvent.ACTION_MASK);
-        final int x = (int) (event.getX() - left);
-        final int y = (int) (event.getY() - top);
-
-        if (x < 0 || x >= layout.getWidth() || y < 0 || y >= layout.getHeight()) {
-            deselectSpan();
-            return false;
-        }
-
-        // Get the clicked line and check x is within the text on this line.
-        final int line = layout.getLineForVertical(y);
-        if (x < layout.getLineLeft(line) || x > layout.getLineRight(line)) {
-            deselectSpan();
-            return false;
-        }
-
-        if (action == MotionEvent.ACTION_DOWN) {
-            final int offset = layout.getOffsetForHorizontal(line, x);
-            final HighlightedClickableSpan[] span = spannedText.getSpans(offset, offset,
-                    HighlightedClickableSpan.class);
-            if (span.length > 0) {
-                selectSpan(span[0]);
-                return true;
-            }
-        } else if (action == MotionEvent.ACTION_UP) {
-            final HighlightedClickableSpan selectedSpan = highlightedClickableSpan;
-            if (selectedSpan != null) {
-                selectedSpan.onClick(view);
-                deselectSpan();
-                return true;
-            }
-        }
-        return false;
-    }
-
-    /**
-     * Selects the given span.
-     */
-    private void selectSpan(HighlightedClickableSpan span) {
-        span.select(true);
-        highlightedClickableSpan = span;
-        invalidate();
-    }
-
-    /**
-     * Deselects the currently selected link, if there is one.
-     */
-    private void deselectSpan() {
-        final HighlightedClickableSpan selectedSpan = highlightedClickableSpan;
-        if (selectedSpan != null && selectedSpan.isSelected()) {
-            selectedSpan.select(false);
-            highlightedClickableSpan = null;
-            invalidate();
-        }
-    }
-
-    private void invalidate() {
-        view.invalidate((int) left, (int) top, (int) left + layout.getWidth(),
-                (int) top + layout.getHeight());
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/SwipeToDismissTouchListener.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/SwipeToDismissTouchListener.java
deleted file mode 100644
index 9c23d129..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/SwipeToDismissTouchListener.java
+++ /dev/null
@@ -1,240 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.animation.ObjectAnimator;
-import android.annotation.SuppressLint;
-import android.view.MotionEvent;
-import android.view.View;
-import android.view.ViewConfiguration;
-
-public class SwipeToDismissTouchListener implements View.OnTouchListener {
-    private int touchSlop;
-    private float initialY;
-    private final float maxTranslate;
-    private final float closeThreshold;
-    private Callback callback;
-    private float lastX;
-    private float lastY;
-    private int pointerIndex;
-    private boolean isMoving;
-
-    public static SwipeToDismissTouchListener createFromView(View view, Callback listener) {
-        return new SwipeToDismissTouchListener(listener,
-                ViewConfiguration.get(view.getContext()).getScaledTouchSlop(),
-                view.getContext().getResources().getDisplayMetrics().heightPixels * 0.5f);
-    }
-
-    SwipeToDismissTouchListener(Callback listener, int touchSlop, float maxTranslate) {
-        // If swiping more than 20% of the max distance, trigger the dismiss listener.
-        this(listener, touchSlop, maxTranslate, maxTranslate * 0.2f);
-    }
-
-    SwipeToDismissTouchListener(Callback listener, int touchSlop, float maxTranslate,
-            float closeThreshold) {
-        setCallback(listener);
-        this.touchSlop = touchSlop;
-        this.maxTranslate = maxTranslate;
-        this.closeThreshold = closeThreshold;
-    }
-
-    @Override
-    @SuppressLint("ClickableViewAccessibility")
-    public boolean onTouch(View v, MotionEvent event) {
-        boolean viewClosed = false;
-        if (!(v instanceof SwipeableViewProvider) || ((SwipeableViewProvider) v).canBeSwiped() ||
-                isMoving()) {
-            viewClosed = handleTouchEvent(v, event);
-        }
-
-        // If the view is not being closed due to the touch event, give the touch event back to the
-        // target view in case they have their own custom touch handling
-        return viewClosed || v.onTouchEvent(event);
-    }
-
-    /**
-     * Handles the incoming motion event, possibly translating or closing the swipeable view.
-     *
-     * @param event The incoming motion event.
-     * @return true if the motion event results in the view closing, false otherwise.
-     */
-    boolean handleTouchEvent(View swipeableView, MotionEvent event) {
-        boolean viewClosed = false;
-
-        switch (event.getActionMasked()) {
-            case MotionEvent.ACTION_DOWN: {
-                lastX = event.getRawX();
-                initialY = lastY = event.getRawY();
-                isMoving = false;
-                pointerIndex = event.getPointerId(event.getPointerCount() - 1);
-                break;
-            }
-            case MotionEvent.ACTION_MOVE: {
-                final float currentX = event.getRawX();
-                final float currentY = event.getRawY();
-                final float initialDeltaY = currentY - initialY;
-                final float deltaX = currentX - lastX;
-                final float deltaY = currentY - lastY;
-                lastX = currentX;
-                lastY = currentY;
-                if (isValidPointer(event) &&
-                        (isMoving || (hasMovedEnoughInProperYDirection(initialDeltaY) &&
-                                hasMovedMoreInYDirectionThanX(deltaX, deltaY)))) {
-                    isMoving = true;
-                    moveView(swipeableView, deltaY);
-                }
-                break;
-            }
-            case MotionEvent.ACTION_POINTER_DOWN:{
-                settleView(swipeableView);
-                isMoving = false;
-                pointerIndex = -1; // invalidate pointer index until next ACTION_DOWN
-                break;
-            }
-            case MotionEvent.ACTION_UP:
-            case MotionEvent.ACTION_CANCEL: {
-                if (isValidPointer(event)) {
-                    if (isMoving) {
-                        viewClosed = settleOrCloseView(swipeableView);
-                    }
-                }
-                isMoving = false;
-                break;
-            }
-            default: {
-                break;
-            }
-        }
-
-        return viewClosed;
-    }
-
-    /**
-     * @param initialDeltaY the delta between the initial Y position and the current Y position.
-     * @return if the scroll has moved far enough in the proper direction to start tracking a swipe to dismiss.
-     */
-    boolean hasMovedEnoughInProperYDirection(float initialDeltaY) {
-        return Math.abs(initialDeltaY) > touchSlop;
-    }
-
-    /**
-     * @param deltaX the delta between the last X position and the current X position.
-     * @param deltaY the delta between the last Y position and the current Y position.
-     * @return if the swipe gesture has moved more in the Y direction than the X direction.
-     */
-    boolean hasMovedMoreInYDirectionThanX(float deltaX, float deltaY) {
-        return Math.abs(deltaY) > Math.abs(deltaX);
-    }
-
-    /**
-     * @return if we are currently tracking a swipe to dismiss gesture.
-     */
-    boolean isMoving() {
-        return isMoving;
-    }
-
-    boolean isValidPointer(MotionEvent event) {
-        return pointerIndex >= 0 && event.getPointerCount() == 1;
-    }
-
-    /**
-     * Determines whether or not to settle or close the view based on the current view translation.
-     *
-     * @return true if the view was closed, otherwise false.
-     */
-    boolean settleOrCloseView(View swipeableView) {
-        final float currentY = swipeableView.getTranslationY();
-        if (currentY > closeThreshold || currentY < -closeThreshold) {
-            if (callback != null) {
-                callback.onDismiss();
-            }
-
-            return true;
-        } else {
-            settleView(swipeableView);
-            return false;
-        }
-    }
-
-    void settleView(View swipeableView) {
-        if (swipeableView.getTranslationY() != 0) {
-            final ObjectAnimator animator =
-                    ObjectAnimator.ofFloat(swipeableView, View.TRANSLATION_Y, 0).setDuration(100);
-            animator.addUpdateListener(animation -> {
-                final float targetY = (Float) animation.getAnimatedValue();
-                if (callback != null) {
-                    callback.onMove(targetY);
-                }
-            });
-            animator.start();
-        }
-    }
-
-    void moveView(View swipeableView, float deltaY) {
-        final float currentY = swipeableView.getTranslationY();
-        final float deltaWithTension = (float) (deltaY * calculateTension(currentY));
-        final float targetY = bound(currentY + deltaWithTension);
-        swipeableView.setTranslationY(targetY);
-        if (callback != null) {
-            callback.onMove(targetY);
-        }
-    }
-
-    double calculateTension(float targetY) {
-        // energy = 1 / 2 * k * x^2
-        // but since we only want a coefficient from 0 to 1 we can ignore the constants.
-        final float distance = Math.abs(targetY);
-        final float maxDistance = closeThreshold * 2f;
-        final double tension = Math.pow(distance, 2);
-        final double maxTension = Math.pow(maxDistance, 2);
-        final double tensionCoeff = 1 - (tension / maxTension);
-        return tensionCoeff;
-    }
-
-    float bound(float y) {
-        if (y < -maxTranslate) {
-            return -maxTranslate;
-        } else if (y > maxTranslate) {
-            return maxTranslate;
-        }
-        return y;
-    }
-
-    public void setCallback(Callback listener) {
-        this.callback = listener;
-    }
-
-    public interface Callback {
-        void onDismiss();
-
-        void onMove(float translationY);
-    }
-
-    /**
-     * Implement this interface to allow or disallow swipe to dismiss behavior
-     */
-    public interface SwipeableViewProvider {
-        /**
-         * Determines if a view can be swiped away
-         * ATTENTION: this will be called on every touchEvent, don't do any expensive operation in this method
-         *
-         * @return true if the view can be moved/dismissed, false otherwise
-         */
-        boolean canBeSwiped();
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/TweetMediaUtils.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/TweetMediaUtils.java
deleted file mode 100644
index b081f679..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/TweetMediaUtils.java
+++ /dev/null
@@ -1,174 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.os.Build;
-
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetEntities;
-import com.twitter.sdk.android.core.models.VideoInfo;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public final class TweetMediaUtils {
-    public static final String PHOTO_TYPE = "photo";
-    public static final String VIDEO_TYPE = "video";
-    public static final String GIF_TYPE = "animated_gif";
-    private static final String CONTENT_TYPE_MP4 = "video/mp4";
-    private static final String CONTENT_TYPE_HLS = "application/x-mpegURL";
-    private static final int LOOP_VIDEO_IN_MILLIS = 6500;
-
-    private TweetMediaUtils() {
-    }
-
-    /**
-     * This method gets the last photo entity out of the tweet, this is the photo to display inline
-     *
-     * @param tweet The Tweet
-     * @return The last photo entity of Tweet
-     */
-    public static MediaEntity getPhotoEntity(Tweet tweet) {
-        final List<MediaEntity> mediaEntityList = getAllMediaEntities(tweet);
-        for (int i = mediaEntityList.size() - 1; i >= 0; i--) {
-            final MediaEntity entity = mediaEntityList.get(i);
-            if (entity.type != null && isPhotoType(entity)) {
-                return entity;
-            }
-        }
-        return null;
-    }
-
-    /**
-     * This method gets the all the photos from the tweet, which are used to display inline
-     *
-     * @param tweet The Tweet
-     * @return Photo entities of Tweet
-     */
-    public static List<MediaEntity> getPhotoEntities(Tweet tweet) {
-        final List<MediaEntity> photoEntities = new ArrayList<>();
-        final TweetEntities extendedEntities = tweet.extendedEntities;
-
-        if (extendedEntities != null && extendedEntities.media != null
-                && extendedEntities.media.size() > 0) {
-            for (int i = 0; i <= extendedEntities.media.size() - 1; i++) {
-                final MediaEntity entity = extendedEntities.media.get(i);
-                if (entity.type != null && isPhotoType(entity)) {
-                    photoEntities.add(entity);
-                }
-            }
-            return photoEntities;
-        }
-
-        return photoEntities;
-    }
-
-    /**
-     * Returns true if there is a media entity with the type of "photo"
-     *
-     * @param tweet The Tweet entities
-     * @return true if there is a media entity with the type of "photo"
-     */
-    public static boolean hasPhoto(Tweet tweet) {
-        return getPhotoEntity(tweet) != null;
-    }
-
-    /**
-     * This method gets the first video or animated gif entity out of the tweet, this is the video
-     * to display inline
-     *
-     * @param tweet The Tweet
-     * @return The last photo entity of Tweet
-     */
-    public static MediaEntity getVideoEntity(Tweet tweet) {
-        for (MediaEntity mediaEntity : getAllMediaEntities(tweet)) {
-            if (mediaEntity.type != null && isVideoType(mediaEntity)) {
-                return mediaEntity;
-            }
-        }
-
-        return null;
-    }
-
-    /**
-     * Returns true if there is a media entity with the type of "video" or "animated_gif" and
-     * playback is supported.
-     *
-     * @param tweet The Tweet
-     * @return true if there is a media entity with the type of "video" or "animated_gif" and
-     * playback is supported
-     */
-    public static boolean hasSupportedVideo(Tweet tweet) {
-        final MediaEntity entity = getVideoEntity(tweet);
-        return entity != null && getSupportedVariant(entity) != null;
-    }
-
-    static boolean isPhotoType(MediaEntity mediaEntity) {
-        return PHOTO_TYPE.equals(mediaEntity.type);
-
-    }
-
-    static boolean isVideoType(MediaEntity mediaEntity) {
-        return VIDEO_TYPE.equals(mediaEntity.type) || GIF_TYPE.equals(mediaEntity.type);
-    }
-
-    public static VideoInfo.Variant getSupportedVariant(MediaEntity mediaEntity) {
-        for (VideoInfo.Variant variant : mediaEntity.videoInfo.variants) {
-            if (isVariantSupported(variant)) {
-                return variant;
-            }
-        }
-
-        return null;
-    }
-
-    public static boolean isLooping(MediaEntity mediaEntity) {
-        return GIF_TYPE.equals(mediaEntity.type) ||
-                VIDEO_TYPE.endsWith(mediaEntity.type) &&
-                mediaEntity.videoInfo.durationMillis < LOOP_VIDEO_IN_MILLIS;
-    }
-
-    public static boolean showVideoControls(MediaEntity mediaEntity) {
-        return !GIF_TYPE.equals(mediaEntity.type);
-    }
-
-    static boolean isVariantSupported(VideoInfo.Variant variant) {
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP &&
-                CONTENT_TYPE_HLS.equals(variant.contentType)) {
-            return true;
-        } else if (CONTENT_TYPE_MP4.equals(variant.contentType)) {
-            return true;
-        }
-
-        return false;
-    }
-
-    static List<MediaEntity> getAllMediaEntities(Tweet tweet) {
-        final List<MediaEntity> entities = new ArrayList<>();
-        if (tweet.entities != null && tweet.entities.media != null) {
-            entities.addAll(tweet.entities.media);
-        }
-
-        if (tweet.extendedEntities != null && tweet.extendedEntities.media != null) {
-            entities.addAll(tweet.extendedEntities.media);
-        }
-
-        return entities;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/TweetMediaView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/TweetMediaView.java
deleted file mode 100644
index 861f0356..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/TweetMediaView.java
+++ /dev/null
@@ -1,465 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.content.Context;
-import android.content.Intent;
-import android.graphics.Canvas;
-import android.graphics.Color;
-import android.graphics.Path;
-import android.graphics.RectF;
-import android.os.Build;
-import android.text.TextUtils;
-import android.util.AttributeSet;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ImageView;
-
-import com.squareup.picasso.Picasso;
-import com.twitter.sdk.android.core.IntentUtils;
-import com.twitter.sdk.android.core.internal.VineCardUtils;
-import com.twitter.sdk.android.core.models.Card;
-import com.twitter.sdk.android.core.models.ImageValue;
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.VideoInfo;
-import com.twitter.sdk.android.tweetui.GalleryActivity;
-import com.twitter.sdk.android.tweetui.PlayerActivity;
-import com.twitter.sdk.android.tweetui.R;
-import com.twitter.sdk.android.tweetui.TweetMediaClickListener;
-import com.twitter.sdk.android.tweetui.TweetUi;
-
-import java.lang.ref.WeakReference;
-import java.util.Collections;
-import java.util.List;
-
-public class TweetMediaView extends ViewGroup implements View.OnClickListener {
-
-    static final int MAX_IMAGE_VIEW_COUNT = 4;
-    static final String SIZED_IMAGE_SMALL = ":small";
-
-    private final OverlayImageView[] imageViews = new OverlayImageView[MAX_IMAGE_VIEW_COUNT];
-    private List<MediaEntity> mediaEntities = Collections.emptyList();
-    private final Path path = new Path();
-    private final RectF rect = new RectF();
-    private final int mediaDividerSize;
-    private int imageCount;
-    final float [] radii = new float[8];
-    int mediaBgColor = Color.BLACK;
-    int photoErrorResId;
-    final DependencyProvider dependencyProvider;
-    boolean internalRoundedCornersEnabled;
-    TweetMediaClickListener tweetMediaClickListener;
-    Tweet tweet;
-
-    public TweetMediaView(Context context) {
-        this(context, null);
-    }
-
-    public TweetMediaView(Context context, AttributeSet attrs) {
-        this(context, attrs, new DependencyProvider());
-    }
-
-    TweetMediaView(Context context, AttributeSet attrs, DependencyProvider dependencyProvider) {
-        super(context, attrs);
-
-        this.dependencyProvider =  dependencyProvider;
-        mediaDividerSize = getResources().getDimensionPixelSize
-                (R.dimen.tw__media_view_divider_size);
-        photoErrorResId = R.drawable.tw__ic_tweet_photo_error_dark;
-    }
-
-    public void setRoundedCornersRadii(int topLeft, int topRight, int bottomRight, int bottomLeft) {
-        radii[0] = topLeft;
-        radii[1] = topLeft;
-        radii[2] = topRight;
-        radii[3] = topRight;
-        radii[4] = bottomRight;
-        radii[5] = bottomRight;
-        radii[6] = bottomLeft;
-        radii[7] = bottomLeft;
-
-        requestLayout();
-    }
-
-    public void setMediaBgColor(int mediaBgColor) {
-        this.mediaBgColor = mediaBgColor;
-    }
-
-    public void setTweetMediaClickListener(TweetMediaClickListener tweetMediaClickListener) {
-        this.tweetMediaClickListener = tweetMediaClickListener;
-    }
-
-    public void setPhotoErrorResId(int photoErrorResId) {
-        this.photoErrorResId = photoErrorResId;
-    }
-
-    @Override
-    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
-        if (imageCount > 0) {
-            layoutImages();
-        }
-    }
-
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        final Size size;
-        if (imageCount > 0) {
-            size = measureImages(widthMeasureSpec, heightMeasureSpec);
-        } else {
-            size = Size.EMPTY;
-        }
-        setMeasuredDimension(size.width, size.height);
-    }
-
-    @Override
-    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
-        super.onSizeChanged(w, h, oldw, oldh);
-
-        path.reset();
-        rect.set(0, 0, w, h);
-        path.addRoundRect(rect, radii, Path.Direction.CW);
-        path.close();
-    }
-
-    @Override
-    protected void dispatchDraw(Canvas canvas) {
-        if (internalRoundedCornersEnabled &&
-                Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {
-            final int saveState = canvas.save();
-            canvas.clipPath(path);
-            super.dispatchDraw(canvas);
-            canvas.restoreToCount(saveState);
-        } else {
-            super.dispatchDraw(canvas);
-        }
-    }
-
-    @Override
-    public void onClick(View view) {
-        final Integer mediaEntityIndex = (Integer) view.getTag(R.id.tw__entity_index);
-        if (tweetMediaClickListener != null) {
-            final MediaEntity mediaEntity;
-            if (!mediaEntities.isEmpty()) {
-                mediaEntity = mediaEntities.get(mediaEntityIndex);
-            } else {
-                mediaEntity = null;
-            }
-
-            tweetMediaClickListener.onMediaEntityClick(tweet, mediaEntity);
-        } else if (!mediaEntities.isEmpty()) {
-            final MediaEntity mediaEntity = mediaEntities.get(mediaEntityIndex);
-            if (TweetMediaUtils.isVideoType(mediaEntity)) {
-                launchVideoPlayer(mediaEntity);
-            } else if (TweetMediaUtils.isPhotoType(mediaEntity)) {
-                launchPhotoGallery(mediaEntityIndex);
-            }
-        } else {
-            launchVideoPlayer(tweet);
-        }
-    }
-
-    public void launchVideoPlayer(MediaEntity entity) {
-        final VideoInfo.Variant variant = TweetMediaUtils.getSupportedVariant(entity);
-        if (variant != null) {
-            final Intent intent = new Intent(getContext(), PlayerActivity.class);
-            final boolean looping = TweetMediaUtils.isLooping(entity);
-            final boolean showControls = TweetMediaUtils.showVideoControls(entity);
-            final String url = TweetMediaUtils.getSupportedVariant(entity).url;
-            final PlayerActivity.PlayerItem item =
-                    new PlayerActivity.PlayerItem(url, looping, showControls, null, null);
-            intent.putExtra(PlayerActivity.PLAYER_ITEM, item);
-
-            IntentUtils.safeStartActivity(getContext(), intent);
-        }
-    }
-
-    public void launchVideoPlayer(Tweet tweet) {
-        final Card card = tweet.card;
-        final Intent intent = new Intent(getContext(), PlayerActivity.class);
-        final String playerStreamUrl = VineCardUtils.getStreamUrl(card);
-
-        final PlayerActivity.PlayerItem playerItem =
-                new PlayerActivity.PlayerItem(playerStreamUrl, true, false, null, null);
-        intent.putExtra(PlayerActivity.PLAYER_ITEM, playerItem);
-
-        IntentUtils.safeStartActivity(getContext(), intent);
-    }
-
-    public void launchPhotoGallery(int mediaEntityIndex) {
-        final Intent intent = new Intent(getContext(), GalleryActivity.class);
-        final GalleryActivity.GalleryItem item =
-                new GalleryActivity.GalleryItem(tweet.id, mediaEntityIndex, mediaEntities);
-        intent.putExtra(GalleryActivity.GALLERY_ITEM, item);
-        IntentUtils.safeStartActivity(getContext(), intent);
-    }
-
-    public void setTweetMediaEntities(Tweet tweet, List<MediaEntity> mediaEntities) {
-        if (tweet == null || mediaEntities == null || mediaEntities.isEmpty() ||
-                mediaEntities.equals(this.mediaEntities)) {
-            return;
-        }
-
-        this.tweet = tweet;
-        this.mediaEntities = mediaEntities;
-
-        clearImageViews();
-        initializeImageViews(mediaEntities);
-
-        internalRoundedCornersEnabled = TweetMediaUtils.isPhotoType(mediaEntities.get(0));
-
-        requestLayout();
-    }
-
-    public void setVineCard(Tweet tweet) {
-        if (tweet == null || tweet.card == null || !VineCardUtils.isVine(tweet.card)) {
-            return;
-        }
-
-        this.tweet = tweet;
-        this.mediaEntities = Collections.emptyList();
-
-        clearImageViews();
-        initializeImageViews(tweet.card);
-
-        internalRoundedCornersEnabled = false;
-
-        requestLayout();
-    }
-
-    Size measureImages(int widthMeasureSpec, int heightMeasureSpec) {
-        final int width = MeasureSpec.getSize(widthMeasureSpec);
-        final int height = MeasureSpec.getSize(heightMeasureSpec);
-        final int halfWidth = (width - mediaDividerSize) / 2;
-        final int halfHeight = (height - mediaDividerSize) / 2;
-        switch (imageCount) {
-            case 1:
-                measureImageView(0, width, height);
-                break;
-            case 2:
-                measureImageView(0, halfWidth, height);
-                measureImageView(1, halfWidth, height);
-                break;
-            case 3:
-                measureImageView(0, halfWidth, height);
-                measureImageView(1, halfWidth, halfHeight);
-                measureImageView(2, halfWidth, halfHeight);
-                break;
-            case 4:
-                measureImageView(0, halfWidth, halfHeight);
-                measureImageView(1, halfWidth, halfHeight);
-                measureImageView(2, halfWidth, halfHeight);
-                measureImageView(3, halfWidth, halfHeight);
-                break;
-            default:
-                break;
-        }
-        return Size.fromSize(width, height);
-    }
-
-    void measureImageView(int i, int width, int height) {
-        imageViews[i].measure(
-                MeasureSpec.makeMeasureSpec(width, MeasureSpec.EXACTLY),
-                MeasureSpec.makeMeasureSpec(height, MeasureSpec.EXACTLY));
-    }
-
-    void layoutImages() {
-        final int width = getMeasuredWidth();
-        final int height = getMeasuredHeight();
-        final int halfWidth = (width - mediaDividerSize) / 2;
-        final int halfHeight = (height - mediaDividerSize) / 2;
-        final int middle = halfWidth + mediaDividerSize;
-        switch (imageCount) {
-            case 1:
-                layoutImage(0, 0, 0, width, height);
-                break;
-            case 2:
-                layoutImage(0, 0, 0, halfWidth, height);
-                layoutImage(1, halfWidth + mediaDividerSize, 0, width, height);
-                break;
-            case 3:
-                layoutImage(0, 0, 0, halfWidth, height);
-                layoutImage(1, middle, 0, width, halfHeight);
-                layoutImage(2, middle, halfHeight + mediaDividerSize, width, height);
-                break;
-            case 4:
-                layoutImage(0, 0, 0, halfWidth, halfHeight);
-                layoutImage(2, 0, halfHeight + mediaDividerSize, halfWidth, height);
-                layoutImage(1, middle, 0, width, halfHeight);
-                layoutImage(3, middle, halfHeight + mediaDividerSize, width, height);
-                break;
-            default:
-                break;
-        }
-    }
-
-    void layoutImage(int i, int left, int top, int right, int bottom) {
-        final ImageView view = imageViews[i];
-        if (view.getLeft() == left && view.getTop() == top && view.getRight() == right
-                && view.getBottom() == bottom) {
-            return;
-        }
-
-        view.layout(left, top, right, bottom);
-    }
-
-    void clearImageViews() {
-        for (int index = 0; index < imageCount; index++) {
-            final ImageView imageView = imageViews[index];
-            if (imageView != null) {
-                imageView.setVisibility(GONE);
-            }
-        }
-        imageCount = 0;
-    }
-
-    void initializeImageViews(List<MediaEntity> mediaEntities) {
-        imageCount = Math.min(MAX_IMAGE_VIEW_COUNT, mediaEntities.size());
-
-        for (int index = 0; index < imageCount; index++) {
-            final OverlayImageView imageView = getOrCreateImageView(index);
-
-            final MediaEntity mediaEntity = mediaEntities.get(index);
-            setAltText(imageView, mediaEntity.altText);
-            setMediaImage(imageView, getSizedImagePath(mediaEntity));
-            setOverlayImage(imageView, TweetMediaUtils.isVideoType(mediaEntity));
-        }
-    }
-
-    void initializeImageViews(Card card) {
-        imageCount = 1;
-
-        final OverlayImageView imageView = getOrCreateImageView(0);
-
-        final ImageValue imageValue = VineCardUtils.getImageValue(card);
-        setAltText(imageView, imageValue.alt);
-        setMediaImage(imageView, imageValue.url);
-        setOverlayImage(imageView, true);
-    }
-
-    OverlayImageView getOrCreateImageView(int index) {
-        OverlayImageView imageView = imageViews[index];
-        if (imageView == null) {
-            imageView = new OverlayImageView(getContext());
-            imageView.setLayoutParams(generateDefaultLayoutParams());
-            imageView.setOnClickListener(this);
-            imageViews[index] = imageView;
-            addView(imageView, index);
-        } else {
-            measureImageView(index, 0, 0);
-            layoutImage(index, 0, 0, 0, 0);
-        }
-
-        imageView.setVisibility(VISIBLE);
-        imageView.setBackgroundColor(mediaBgColor);
-        imageView.setTag(R.id.tw__entity_index, index);
-
-        return imageView;
-    }
-
-
-    String getSizedImagePath(MediaEntity mediaEntity) {
-        if (imageCount > 1) {
-           return mediaEntity.mediaUrlHttps + SIZED_IMAGE_SMALL;
-        }
-        return mediaEntity.mediaUrlHttps;   // defaults to :medium
-    }
-
-    void setAltText(ImageView imageView, String description) {
-        if (!TextUtils.isEmpty(description)) {
-            imageView.setContentDescription(description);
-        } else {
-            imageView.setContentDescription(getResources().getString(R.string.tw__tweet_media));
-        }
-    }
-
-    void setOverlayImage(OverlayImageView imageView, boolean isVideo) {
-        if (isVideo) {
-            imageView.setOverlayDrawable(getContext().getResources()
-                    .getDrawable(R.drawable.tw__player_overlay));
-        } else {
-            imageView.setOverlayDrawable(null);
-        }
-    }
-
-    void setMediaImage(ImageView imageView, String imagePath) {
-        final Picasso imageLoader = dependencyProvider.getImageLoader();
-        if (imageLoader == null) return;
-
-        imageLoader.load(imagePath)
-                .fit()
-                .centerCrop()
-                .error(photoErrorResId)
-                .into(imageView, new PicassoCallback(imageView));
-    }
-
-    /**
-     * Picasso Callback which clears the ImageView's background onSuccess. This is done to reduce
-     * overdraw. A weak reference is used to avoid leaking the Activity context because the Callback
-     * will be strongly referenced by Picasso.
-     */
-    static class PicassoCallback implements com.squareup.picasso.Callback {
-        final WeakReference<ImageView> imageViewWeakReference;
-
-        PicassoCallback(ImageView imageView) {
-            imageViewWeakReference = new WeakReference<>(imageView);
-        }
-
-        @Override
-        public void onSuccess() {
-            final ImageView imageView = imageViewWeakReference.get();
-            if (imageView != null) {
-                imageView.setBackgroundResource(android.R.color.transparent);
-            }
-        }
-
-        @Override
-        public void onError() { /* intentionally blank */ }
-    }
-
-    static class Size {
-        static final Size EMPTY = new Size();
-        final int width;
-        final int height;
-
-        private Size() {
-            this(0, 0);
-        }
-
-        private Size(int width, int height) {
-            this.width = width;
-            this.height = height;
-        }
-
-        static Size fromSize(int w, int h) {
-            final int boundedWidth = Math.max(w, 0);
-            final int boundedHeight = Math.max(h, 0);
-            return boundedWidth != 0 || boundedHeight != 0 ?
-                    new Size(boundedWidth, boundedHeight) : EMPTY;
-        }
-    }
-
-    static class DependencyProvider {
-        /**
-         * Can be null if run before TweetUi#doInBackground completes
-         */
-        Picasso getImageLoader() {
-            return TweetUi.getInstance().getImageLoader();
-        }
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/VideoControlView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/VideoControlView.java
deleted file mode 100644
index cb9f6d82..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/VideoControlView.java
+++ /dev/null
@@ -1,223 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.annotation.SuppressLint;
-import android.content.Context;
-import android.os.Handler;
-import android.os.Message;
-import android.util.AttributeSet;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.widget.FrameLayout;
-import android.widget.ImageButton;
-import android.widget.SeekBar;
-import android.widget.TextView;
-
-import com.twitter.sdk.android.tweetui.R;
-
-public class VideoControlView extends FrameLayout {
-    static final long PROGRESS_BAR_TICKS = 1000L;
-    static final int FADE_DURATION_MS = 150;
-    private static final int SHOW_PROGRESS_MSG = 1001;
-
-    MediaPlayerControl player;
-    ImageButton stateControl;
-    TextView currentTime;
-    TextView duration;
-    SeekBar seekBar;
-
-    @SuppressLint("HandlerLeak")
-    private final Handler handler = new Handler() {
-        @Override
-        public void handleMessage(Message msg) {
-            if (msg.what == SHOW_PROGRESS_MSG) {
-                if (player == null) {
-                    return;
-                }
-                updateProgress();
-                updateStateControl();
-                if (isShowing() && player.isPlaying()) {
-                    msg = obtainMessage(SHOW_PROGRESS_MSG);
-                    sendMessageDelayed(msg, 500);
-                }
-            }
-        }
-    };
-
-    public VideoControlView(Context context) {
-        super(context);
-    }
-
-    public VideoControlView(Context context, AttributeSet attrs) {
-        super(context, attrs);
-    }
-
-    public VideoControlView(Context context, AttributeSet attrs, int defStyleAttr) {
-        super(context, attrs, defStyleAttr);
-    }
-
-    public void setMediaPlayer(MediaPlayerControl player) {
-        this.player = player;
-    }
-
-    @Override
-    protected void onFinishInflate() {
-        super.onFinishInflate();
-        initSubviews();
-    }
-
-    void initSubviews() {
-        final LayoutInflater inflater = (LayoutInflater) getContext()
-                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-        inflater.inflate(R.layout.tw__video_control, this);
-
-        stateControl = findViewById(R.id.tw__state_control);
-        currentTime = findViewById(R.id.tw__current_time);
-        duration = findViewById(R.id.tw__duration);
-        seekBar = findViewById(R.id.tw__progress);
-
-        seekBar.setMax((int) PROGRESS_BAR_TICKS);
-        seekBar.setOnSeekBarChangeListener(createProgressChangeListener());
-        stateControl.setOnClickListener(createStateControlClickListener());
-
-        setDuration(0);
-        setCurrentTime(0);
-        setProgress(0, 0, 0);
-    }
-
-    OnClickListener createStateControlClickListener() {
-        return view -> {
-            if (player.isPlaying()) {
-                player.pause();
-            } else {
-                player.start();
-            }
-            show();
-        };
-    }
-
-    SeekBar.OnSeekBarChangeListener createProgressChangeListener() {
-        return new SeekBar.OnSeekBarChangeListener() {
-            @Override
-            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
-                if (!fromUser) {
-                    return;
-                }
-
-                final int duration = player.getDuration();
-                final long position = (duration * progress) / PROGRESS_BAR_TICKS;
-                player.seekTo((int) position);
-                setCurrentTime((int) position);
-            }
-
-            @Override
-            public void onStartTrackingTouch(SeekBar seekBar) {
-                handler.removeMessages(SHOW_PROGRESS_MSG);
-            }
-
-            @Override
-            public void onStopTrackingTouch(SeekBar seekBar) {
-                handler.sendEmptyMessage(SHOW_PROGRESS_MSG);
-            }
-        };
-    }
-
-    void updateProgress() {
-        final int duration = player.getDuration();
-        final int currentTime = player.getCurrentPosition();
-        final int bufferPercentage = player.getBufferPercentage();
-        setDuration(duration);
-        setCurrentTime(currentTime);
-        setProgress(currentTime, duration, bufferPercentage);
-    }
-
-    void setDuration(int durationMillis) {
-        duration.setText(MediaTimeUtils.getPlaybackTime(durationMillis));
-    }
-
-    void setCurrentTime(int currentTimeMillis) {
-        currentTime.setText(MediaTimeUtils.getPlaybackTime(currentTimeMillis));
-    }
-
-    void setProgress(int currentTimeMillis, int durationMillis, int bufferPercentage) {
-        final long pos = durationMillis > 0 ?
-                PROGRESS_BAR_TICKS * currentTimeMillis / durationMillis : 0;
-        seekBar.setProgress((int) pos);
-        seekBar.setSecondaryProgress(bufferPercentage * 10);
-    }
-
-    void updateStateControl() {
-        if (player.isPlaying()) {
-            setPauseDrawable();
-        } else if (player.getCurrentPosition() > Math.max(player.getDuration() - 500, 0)) {
-            setReplayDrawable();
-        } else {
-            setPlayDrawable();
-        }
-    }
-
-    void setPlayDrawable() {
-        stateControl.setImageResource(R.drawable.tw__video_play_btn);
-        stateControl.setContentDescription(getContext().getString(R.string.tw__play));
-    }
-
-    void setPauseDrawable() {
-        stateControl.setImageResource(R.drawable.tw__video_pause_btn);
-        stateControl.setContentDescription(getContext().getString(R.string.tw__pause));
-    }
-
-    void setReplayDrawable() {
-        stateControl.setImageResource(R.drawable.tw__video_replay_btn);
-        stateControl.setContentDescription(getContext().getString(R.string.tw__replay));
-    }
-
-    void hide() {
-        handler.removeMessages(SHOW_PROGRESS_MSG);
-        AnimationUtils.fadeOut(this, FADE_DURATION_MS);
-    }
-
-    void show() {
-        handler.sendEmptyMessage(SHOW_PROGRESS_MSG);
-        AnimationUtils.fadeIn(this, FADE_DURATION_MS);
-    }
-
-    public boolean isShowing() {
-        return getVisibility() == View.VISIBLE;
-    }
-
-    public void update() {
-        handler.sendEmptyMessage(SHOW_PROGRESS_MSG);
-    }
-
-    public interface MediaPlayerControl {
-        void start();
-
-        void pause();
-
-        int getDuration();
-
-        int getCurrentPosition();
-
-        void seekTo(int position);
-
-        boolean isPlaying();
-
-        int getBufferPercentage();
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/VideoView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/VideoView.java
deleted file mode 100644
index 0c9f3e9c..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/VideoView.java
+++ /dev/null
@@ -1,577 +0,0 @@
-/*
- * Copyright (C) 2006 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-/*
- * Pulled from AOSP. Removed features that depend on internal APIs.
- *
- * See: https://android.googlesource.com/platform/frameworks/base/+/926ebb860a8b5cbdec17f07404272be7c484fd79/core/java/android/widget/VideoView.java
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.content.Context;
-import android.media.AudioManager;
-import android.media.MediaPlayer;
-import android.media.MediaPlayer.OnCompletionListener;
-import android.media.MediaPlayer.OnErrorListener;
-import android.media.MediaPlayer.OnInfoListener;
-import android.net.Uri;
-import android.util.AttributeSet;
-import android.util.Log;
-import android.view.GestureDetector;
-import android.view.KeyEvent;
-import android.view.MotionEvent;
-import android.view.SurfaceHolder;
-import android.view.SurfaceView;
-
-/**
- * Displays a video file.  The VideoView class
- * can load images from various sources (such as resources or content
- * providers), takes care of computing its measurement from the video so that
- * it can be used in any layout manager, and provides various display options
- * such as scaling and tinting.<p>
- * <p/>
- * <em>Note: VideoView does not retain its full state when going into the
- * background.</em>  In particular, it does not restore the current play state,
- * play position, or selected tracks.  Applications should
- * save and restore these on their own in
- * {@link android.app.Activity#onSaveInstanceState} and
- * {@link android.app.Activity#onRestoreInstanceState}.
- */
-public class VideoView extends SurfaceView
-        implements VideoControlView.MediaPlayerControl {
-    private String TAG = "VideoView";
-    // settable by the client
-    private Uri mUri;
-    // all possible internal states
-    private static final int STATE_ERROR = -1;
-    private static final int STATE_IDLE = 0;
-    private static final int STATE_PREPARING = 1;
-    private static final int STATE_PREPARED = 2;
-    private static final int STATE_PLAYING = 3;
-    private static final int STATE_PAUSED = 4;
-    private static final int STATE_PLAYBACK_COMPLETED = 5;
-    // mCurrentState is a VideoView object's current state.
-    // mTargetState is the state that a method caller intends to reach.
-    // For instance, regardless the VideoView object's current state,
-    // calling pause() intends to bring the object to a target state
-    // of STATE_PAUSED.
-    private int mCurrentState = STATE_IDLE;
-    private int mTargetState = STATE_IDLE;
-    // All the stuff we need for playing and showing a video
-    private SurfaceHolder mSurfaceHolder = null;
-    private MediaPlayer mMediaPlayer = null;
-    private int mAudioSession;
-    private int mVideoWidth;
-    private int mVideoHeight;
-    private int mSurfaceWidth;
-    private int mSurfaceHeight;
-    private VideoControlView mMediaController;
-    private OnCompletionListener mOnCompletionListener;
-    private MediaPlayer.OnPreparedListener mOnPreparedListener;
-    private int mCurrentBufferPercentage;
-    private OnErrorListener mOnErrorListener;
-    private OnInfoListener mOnInfoListener;
-    private int mSeekWhenPrepared;  // recording the seek position while preparing
-    private boolean mLooping;
-
-    public VideoView(Context context) {
-        super(context);
-        initVideoView();
-    }
-
-    public VideoView(Context context, AttributeSet attrs) {
-        this(context, attrs, 0);
-    }
-
-    public VideoView(Context context, AttributeSet attrs, int defStyleAttr) {
-        super(context, attrs, defStyleAttr);
-        initVideoView();
-    }
-
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        //Log.i("@@@@", "onMeasure(" + MeasureSpec.toString(widthMeasureSpec) + ", "
-        //        + MeasureSpec.toString(heightMeasureSpec) + ")");
-        int width = getDefaultSize(mVideoWidth, widthMeasureSpec);
-        int height = getDefaultSize(mVideoHeight, heightMeasureSpec);
-        if (mVideoWidth > 0 && mVideoHeight > 0) {
-            int widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);
-            int widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);
-            int heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);
-            int heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);
-            if (widthSpecMode == MeasureSpec.EXACTLY && heightSpecMode == MeasureSpec.EXACTLY) {
-                // the size is fixed
-                width = widthSpecSize;
-                height = heightSpecSize;
-                // for compatibility, we adjust size based on aspect ratio
-                if (mVideoWidth * height < width * mVideoHeight) {
-                    //Log.i("@@@", "image too wide, correcting");
-                    width = height * mVideoWidth / mVideoHeight;
-                } else if (mVideoWidth * height > width * mVideoHeight) {
-                    //Log.i("@@@", "image too tall, correcting");
-                    height = width * mVideoHeight / mVideoWidth;
-                }
-            } else if (widthSpecMode == MeasureSpec.EXACTLY) {
-                // only the width is fixed, adjust the height to match aspect ratio if possible
-                width = widthSpecSize;
-                height = width * mVideoHeight / mVideoWidth;
-                if (heightSpecMode == MeasureSpec.AT_MOST && height > heightSpecSize) {
-                    // couldn't match aspect ratio within the constraints
-                    height = heightSpecSize;
-                }
-            } else if (heightSpecMode == MeasureSpec.EXACTLY) {
-                // only the height is fixed, adjust the width to match aspect ratio if possible
-                height = heightSpecSize;
-                width = height * mVideoWidth / mVideoHeight;
-                if (widthSpecMode == MeasureSpec.AT_MOST && width > widthSpecSize) {
-                    // couldn't match aspect ratio within the constraints
-                    width = widthSpecSize;
-                }
-            } else {
-                // neither the width nor the height are fixed, try to use actual video size
-                width = mVideoWidth;
-                height = mVideoHeight;
-                if (heightSpecMode == MeasureSpec.AT_MOST && height > heightSpecSize) {
-                    // too tall, decrease both width and height
-                    height = heightSpecSize;
-                    width = height * mVideoWidth / mVideoHeight;
-                }
-                if (widthSpecMode == MeasureSpec.AT_MOST && width > widthSpecSize) {
-                    // too wide, decrease both width and height
-                    width = widthSpecSize;
-                    height = width * mVideoHeight / mVideoWidth;
-                }
-            }
-        }
-
-        setMeasuredDimension(width, height);
-    }
-
-    private void initVideoView() {
-        mVideoWidth = 0;
-        mVideoHeight = 0;
-        getHolder().addCallback(mSHCallback);
-        getHolder().setType(SurfaceHolder.SURFACE_TYPE_PUSH_BUFFERS);
-        setFocusable(true);
-        setFocusableInTouchMode(true);
-        setClickable(true);
-        requestFocus();
-        mCurrentState = STATE_IDLE;
-        mTargetState = STATE_IDLE;
-    }
-
-    /**
-     * Sets video URI.
-     *
-     * @param uri the URI of the video.
-     */
-    public void setVideoURI(Uri uri, boolean looping) {
-        mUri = uri;
-        mLooping = looping;
-        mSeekWhenPrepared = 0;
-        openVideo();
-        requestLayout();
-        invalidate();
-    }
-
-    public void stopPlayback() {
-        if (mMediaPlayer != null) {
-            mMediaPlayer.stop();
-            mMediaPlayer.release();
-            mMediaPlayer = null;
-            mCurrentState = STATE_IDLE;
-            mTargetState = STATE_IDLE;
-        }
-    }
-
-    private void openVideo() {
-        if (mUri == null || mSurfaceHolder == null) {
-            // not ready for playback just yet, will try again later
-            return;
-        }
-        // we shouldn't clear the target state, because somebody might have
-        // called start() previously
-        release(false);
-        try {
-            mMediaPlayer = new MediaPlayer();
-            if (mAudioSession != 0) {
-                mMediaPlayer.setAudioSessionId(mAudioSession);
-            } else {
-                mAudioSession = mMediaPlayer.getAudioSessionId();
-            }
-            mMediaPlayer.setOnPreparedListener(mPreparedListener);
-            mMediaPlayer.setOnVideoSizeChangedListener(mSizeChangedListener);
-            mMediaPlayer.setOnCompletionListener(mCompletionListener);
-            mMediaPlayer.setOnErrorListener(mErrorListener);
-            mMediaPlayer.setOnInfoListener(mInfoListener);
-            mMediaPlayer.setOnBufferingUpdateListener(mBufferingUpdateListener);
-            mCurrentBufferPercentage = 0;
-            mMediaPlayer.setLooping(mLooping);
-            mMediaPlayer.setDataSource(getContext(), mUri);
-            mMediaPlayer.setDisplay(mSurfaceHolder);
-            mMediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);
-            mMediaPlayer.setScreenOnWhilePlaying(true);
-            mMediaPlayer.prepareAsync();
-
-            // we don't set the target state here either, but preserve the
-            // target state that was there before.
-            mCurrentState = STATE_PREPARING;
-            attachMediaController();
-        } catch (Exception ex) {
-            Log.w(TAG, "Unable to open content: " + mUri, ex);
-            mCurrentState = STATE_ERROR;
-            mTargetState = STATE_ERROR;
-            mErrorListener.onError(mMediaPlayer, MediaPlayer.MEDIA_ERROR_UNKNOWN, 0);
-        }
-    }
-
-    public void setMediaController(VideoControlView controller) {
-        if (mMediaController != null) {
-            mMediaController.hide();
-        }
-        mMediaController = controller;
-        attachMediaController();
-    }
-
-    private void attachMediaController() {
-        if (mMediaPlayer != null && mMediaController != null) {
-            mMediaController.setMediaPlayer(this);
-            mMediaController.setEnabled(isInPlaybackState());
-        }
-    }
-
-    MediaPlayer.OnVideoSizeChangedListener mSizeChangedListener =
-            new MediaPlayer.OnVideoSizeChangedListener() {
-                public void onVideoSizeChanged(MediaPlayer mp, int width, int height) {
-                    mVideoWidth = mp.getVideoWidth();
-                    mVideoHeight = mp.getVideoHeight();
-                    if (mVideoWidth != 0 && mVideoHeight != 0) {
-                        getHolder().setFixedSize(mVideoWidth, mVideoHeight);
-                        requestLayout();
-                    }
-                }
-            };
-    MediaPlayer.OnPreparedListener mPreparedListener = new MediaPlayer.OnPreparedListener() {
-        public void onPrepared(MediaPlayer mp) {
-            mCurrentState = STATE_PREPARED;
-
-            if (mOnPreparedListener != null) {
-                mOnPreparedListener.onPrepared(mMediaPlayer);
-            }
-            if (mMediaController != null) {
-                mMediaController.setEnabled(true);
-            }
-            mVideoWidth = mp.getVideoWidth();
-            mVideoHeight = mp.getVideoHeight();
-            int seekToPosition = mSeekWhenPrepared;  // mSeekWhenPrepared may be changed after
-            // seekTo() call
-            if (seekToPosition != 0) {
-                seekTo(seekToPosition);
-            }
-            if (mVideoWidth != 0 && mVideoHeight != 0) {
-                //Log.i("@@@@", "video size: " + mVideoWidth +"/"+ mVideoHeight);
-                getHolder().setFixedSize(mVideoWidth, mVideoHeight);
-                if (mSurfaceWidth == mVideoWidth && mSurfaceHeight == mVideoHeight) {
-                    // We didn't actually change the size (it was already at the size
-                    // we need), so we won't get a "surface changed" callback, so
-                    // start the video here instead of in the callback.
-                    if (mTargetState == STATE_PLAYING) {
-                        start();
-                        if (mMediaController != null) {
-                            mMediaController.show();
-                        }
-                    } else if (!isPlaying() &&
-                            (seekToPosition != 0 || getCurrentPosition() > 0)) {
-                        if (mMediaController != null) {
-                            // Show the media controls when we're paused into a video and make
-                            // 'em stick.
-                            mMediaController.show();
-                        }
-                    }
-                }
-            } else {
-                // We don't know the video size yet, but should start anyway.
-                // The video size might be reported to us later.
-                if (mTargetState == STATE_PLAYING) {
-                    start();
-                }
-            }
-        }
-    };
-    private MediaPlayer.OnCompletionListener mCompletionListener =
-            new MediaPlayer.OnCompletionListener() {
-                public void onCompletion(MediaPlayer mp) {
-                    mCurrentState = STATE_PLAYBACK_COMPLETED;
-                    mTargetState = STATE_PLAYBACK_COMPLETED;
-                    if (mOnCompletionListener != null) {
-                        mOnCompletionListener.onCompletion(mMediaPlayer);
-                    }
-                }
-            };
-    private MediaPlayer.OnInfoListener mInfoListener =
-            new MediaPlayer.OnInfoListener() {
-                public boolean onInfo(MediaPlayer mp, int arg1, int arg2) {
-                    if (mOnInfoListener != null) {
-                        mOnInfoListener.onInfo(mp, arg1, arg2);
-                    }
-                    return true;
-                }
-            };
-    private MediaPlayer.OnErrorListener mErrorListener =
-            new MediaPlayer.OnErrorListener() {
-                public boolean onError(MediaPlayer mp, int framework_err, int impl_err) {
-                    Log.d(TAG, "Error: " + framework_err + "," + impl_err);
-                    mCurrentState = STATE_ERROR;
-                    mTargetState = STATE_ERROR;
-                    if (mMediaController != null) {
-                        mMediaController.hide();
-                    }
-                    /* If an error handler has been supplied, use it and finish. */
-                    if (mOnErrorListener != null) {
-                        if (mOnErrorListener.onError(mMediaPlayer, framework_err, impl_err)) {
-                            return true;
-                        }
-                    }
-
-                    return true;
-                }
-            };
-    private MediaPlayer.OnBufferingUpdateListener mBufferingUpdateListener =
-            new MediaPlayer.OnBufferingUpdateListener() {
-                public void onBufferingUpdate(MediaPlayer mp, int percent) {
-                    mCurrentBufferPercentage = percent;
-                }
-            };
-
-    private GestureDetector gestureDetector = new GestureDetector(getContext(),
-            new GestureDetector.SimpleOnGestureListener() {
-        @Override
-        public boolean onSingleTapUp(MotionEvent e) {
-            if (isInPlaybackState() && mMediaController != null) {
-                toggleMediaControlsVisiblity();
-            }
-            return false;
-        }
-    });
-
-    @Override
-    public boolean onTouchEvent(MotionEvent ev) {
-        final boolean retVal = gestureDetector.onTouchEvent(ev);
-        return retVal || super.onTouchEvent(ev);
-    }
-
-    /**
-     * Register a callback to be invoked when the media file
-     * is loaded and ready to go.
-     *
-     * @param l The callback that will be run
-     */
-    public void setOnPreparedListener(MediaPlayer.OnPreparedListener l) {
-        mOnPreparedListener = l;
-    }
-
-    /**
-     * Register a callback to be invoked when the end of a media file
-     * has been reached during playback.
-     *
-     * @param l The callback that will be run
-     */
-    public void setOnCompletionListener(OnCompletionListener l) {
-        mOnCompletionListener = l;
-    }
-
-    /**
-     * Register a callback to be invoked when an error occurs
-     * during playback or setup.  If no listener is specified,
-     * or if the listener returned false, VideoView will inform
-     * the user of any errors.
-     *
-     * @param l The callback that will be run
-     */
-    public void setOnErrorListener(OnErrorListener l) {
-        mOnErrorListener = l;
-    }
-
-    /**
-     * Register a callback to be invoked when an informational event
-     * occurs during playback or setup.
-     *
-     * @param l The callback that will be run
-     */
-    public void setOnInfoListener(OnInfoListener l) {
-        mOnInfoListener = l;
-    }
-
-    SurfaceHolder.Callback mSHCallback = new SurfaceHolder.Callback() {
-        public void surfaceChanged(SurfaceHolder holder, int format,
-                int w, int h) {
-            mSurfaceWidth = w;
-            mSurfaceHeight = h;
-            boolean isValidState = (mTargetState == STATE_PLAYING);
-            boolean hasValidSize = (mVideoWidth == w && mVideoHeight == h);
-            if (mMediaPlayer != null && isValidState && hasValidSize) {
-                if (mSeekWhenPrepared != 0) {
-                    seekTo(mSeekWhenPrepared);
-                }
-                start();
-                if (mMediaController != null) {
-                    mMediaController.show();
-                }
-            }
-        }
-
-        public void surfaceCreated(SurfaceHolder holder) {
-            mSurfaceHolder = holder;
-            openVideo();
-        }
-
-        public void surfaceDestroyed(SurfaceHolder holder) {
-            // after we return from this we can't use the surface any more
-            mSurfaceHolder = null;
-            if (mMediaController != null) mMediaController.hide();
-            release(true);
-        }
-    };
-
-    /*
-     * release the media player in any state
-     */
-    private void release(boolean cleartargetstate) {
-        if (mMediaPlayer != null) {
-            mMediaPlayer.reset();
-            mMediaPlayer.release();
-            mMediaPlayer = null;
-            mCurrentState = STATE_IDLE;
-            if (cleartargetstate) {
-                mTargetState = STATE_IDLE;
-            }
-        }
-    }
-
-    @Override
-    public boolean onKeyDown(int keyCode, KeyEvent event) {
-        boolean isKeyCodeSupported = keyCode != KeyEvent.KEYCODE_BACK &&
-                keyCode != KeyEvent.KEYCODE_VOLUME_UP &&
-                keyCode != KeyEvent.KEYCODE_VOLUME_DOWN &&
-                keyCode != KeyEvent.KEYCODE_MENU &&
-                keyCode != KeyEvent.KEYCODE_CALL &&
-                keyCode != KeyEvent.KEYCODE_ENDCALL;
-        if (isInPlaybackState() && isKeyCodeSupported && mMediaController != null) {
-            if (keyCode == KeyEvent.KEYCODE_HEADSETHOOK ||
-                    keyCode == KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE) {
-                if (mMediaPlayer.isPlaying()) {
-                    pause();
-                    mMediaController.show();
-                } else {
-                    start();
-                    mMediaController.hide();
-                }
-                return true;
-            } else if (keyCode == KeyEvent.KEYCODE_MEDIA_PLAY) {
-                if (!mMediaPlayer.isPlaying()) {
-                    start();
-                    mMediaController.hide();
-                }
-                return true;
-            } else if (keyCode == KeyEvent.KEYCODE_MEDIA_STOP
-                    || keyCode == KeyEvent.KEYCODE_MEDIA_PAUSE) {
-                if (mMediaPlayer.isPlaying()) {
-                    pause();
-                    mMediaController.show();
-                }
-                return true;
-            } else {
-                toggleMediaControlsVisiblity();
-            }
-        }
-        return super.onKeyDown(keyCode, event);
-    }
-
-    private void toggleMediaControlsVisiblity() {
-        if (mMediaController.isShowing()) {
-            mMediaController.hide();
-        } else {
-            mMediaController.show();
-        }
-    }
-
-    @Override
-    public void start() {
-        if (isInPlaybackState()) {
-            mMediaPlayer.start();
-            mCurrentState = STATE_PLAYING;
-        }
-        mTargetState = STATE_PLAYING;
-    }
-
-    @Override
-    public void pause() {
-        if (isInPlaybackState()) {
-            if (mMediaPlayer.isPlaying()) {
-                mMediaPlayer.pause();
-                mCurrentState = STATE_PAUSED;
-            }
-        }
-        mTargetState = STATE_PAUSED;
-    }
-
-    @Override
-    public int getDuration() {
-        if (isInPlaybackState()) {
-            return mMediaPlayer.getDuration();
-        }
-        return -1;
-    }
-
-    @Override
-    public int getCurrentPosition() {
-        if (isInPlaybackState()) {
-            return mMediaPlayer.getCurrentPosition();
-        }
-        return 0;
-    }
-
-    @Override
-    public void seekTo(int msec) {
-        if (isInPlaybackState()) {
-            mMediaPlayer.seekTo(msec);
-            mSeekWhenPrepared = 0;
-        } else {
-            mSeekWhenPrepared = msec;
-        }
-    }
-
-    @Override
-    public boolean isPlaying() {
-        return isInPlaybackState() && mMediaPlayer.isPlaying();
-    }
-
-    @Override
-    public int getBufferPercentage() {
-        if (mMediaPlayer != null) {
-            return mCurrentBufferPercentage;
-        }
-        return 0;
-    }
-
-    private boolean isInPlaybackState() {
-        return (mMediaPlayer != null &&
-                mCurrentState != STATE_ERROR &&
-                mCurrentState != STATE_IDLE &&
-                mCurrentState != STATE_PREPARING);
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/ViewPagerFixed.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/ViewPagerFixed.java
deleted file mode 100644
index dd6fed56..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/ViewPagerFixed.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.content.Context;
-import android.util.AttributeSet;
-import android.view.MotionEvent;
-
-/**
- * ViewPagerFixed - Prevents ViewPager from crashing on repeated multi-touch gestures (zoom in/out)
- */
-public class ViewPagerFixed extends android.support.v4.view.ViewPager {
-
-    public ViewPagerFixed(Context context) {
-        super(context);
-    }
-
-    public ViewPagerFixed(Context context, AttributeSet attrs) {
-        super(context, attrs);
-    }
-
-    @Override
-    public boolean onTouchEvent(MotionEvent ev) {
-        try {
-            return super.onTouchEvent(ev);
-        } catch (IllegalArgumentException ex) {
-            ex.printStackTrace();
-        }
-        return false;
-    }
-
-    @Override
-    public boolean onInterceptTouchEvent(MotionEvent ev) {
-        try {
-            return super.onInterceptTouchEvent(ev);
-        } catch (IllegalArgumentException ex) {
-            ex.printStackTrace();
-        }
-        return false;
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/HtmlEntities.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/HtmlEntities.java
deleted file mode 100644
index df31459d..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/HtmlEntities.java
+++ /dev/null
@@ -1,1053 +0,0 @@
-/*
- * Copyright 2002-2004 The Apache Software Foundation.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.twitter.sdk.android.tweetui.internal.util;
-
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.Map;
-
-/**
- * <p>
- * Provides HTML and XML entity utilities.
- * </p>
- *
- * @see <a
- *      href="http://hotwired.lycos.com/webmonkey/reference/special_characters/">ISO
- *      Entities</a>
- * @see </br><a href="http://www.w3.org/TR/REC-html32#latin1">HTML 3.2 Character
- *      Entities for ISO Latin-1</a>
- * @see </br><a href="http://www.w3.org/TR/REC-html40/sgml/entities.html">HTML
- *      4.0 Character entity references</a>
- * @see </br><a href="http://www.w3.org/TR/html401/charset.html#h-5.3">HTML 4.01
- *      Character References</a>
- * @see </br><a
- *      href="http://www.w3.org/TR/html401/charset.html#code-position">HTML 4.01
- *      Code positions</a>
- * @author <a href="mailto:alex@purpletech.com">Alexander Day Chaffee</a>
- * @author <a href="mailto:ggregory@seagullsw.com">Gary Gregory</a>
- * @since 2.0
- * @version $Id: Entities.java,v 1.17 2004/02/18 22:59:50 ggregory Exp $
- */
-public class HtmlEntities {
-    /**
-     * <p>
-     * The set of entities supported by HTML 4.0.
-     * </p>
-     */
-    public static final HtmlEntities HTML40;
-
-    /*
-     * private static final String[][] APOS_ARRAY = { {"apos", "39"}, // XML
-     * apostrophe };
-     */
-    // package scoped for testing
-    static final String[][] ISO8859_1_ARRAY = {
-            {
-                    "nbsp", "160"
-            }, // non-breaking space
-            {
-                    "iexcl", "161"
-            }, // inverted exclamation mark
-            {
-                    "cent", "162"
-            }, // cent sign
-            {
-                    "pound", "163"
-            }, // pound sign
-            {
-                    "curren", "164"
-            }, // currency sign
-            {
-                    "yen", "165"
-            }, // yen sign = yuan sign
-            {
-                    "brvbar", "166"
-            }, // broken bar = broken vertical bar
-            {
-                    "sect", "167"
-            }, // section sign
-            {
-                    "uml", "168"
-            }, // diaeresis = spacing diaeresis
-            {
-                    "copy", "169"
-            }, // - copyright sign
-            {
-                    "ordf", "170"
-            }, // feminine ordinal indicator
-            {
-                    "laquo", "171"
-            }, // left-pointing double angle quotation mark = left pointing
-            // guillemet
-            {
-                    "not", "172"
-            }, // not sign
-            {
-                    "shy", "173"
-            }, // soft hyphen = discretionary hyphen
-            {
-                    "reg", "174"
-            }, // - registered trademark sign
-            {
-                    "macr", "175"
-            }, // macron = spacing macron = overline = APL overbar
-            {
-                    "deg", "176"
-            }, // degree sign
-            {
-                    "plusmn", "177"
-            }, // plus-minus sign = plus-or-minus sign
-            {
-                    "sup2", "178"
-            }, // superscript two = superscript digit two = squared
-            {
-                    "sup3", "179"
-            }, // superscript three = superscript digit three = cubed
-            {
-                    "acute", "180"
-            }, // acute accent = spacing acute
-            {
-                    "micro", "181"
-            }, // micro sign
-            {
-                    "para", "182"
-            }, // pilcrow sign = paragraph sign
-            {
-                    "middot", "183"
-            }, // middle dot = Georgian comma = Greek middle dot
-            {
-                    "cedil", "184"
-            }, // cedilla = spacing cedilla
-            {
-                    "sup1", "185"
-            }, // superscript one = superscript digit one
-            {
-                    "ordm", "186"
-            }, // masculine ordinal indicator
-            {
-                    "raquo", "187"
-            }, // right-pointing double angle quotation mark = right pointing
-            // guillemet
-            {
-                    "frac14", "188"
-            }, // vulgar fraction one quarter = fraction one quarter
-            {
-                    "frac12", "189"
-            }, // vulgar fraction one half = fraction one half
-            {
-                    "frac34", "190"
-            }, // vulgar fraction three quarters = fraction three quarters
-            {
-                    "iquest", "191"
-            }, // inverted question mark = turned question mark
-            {
-                    "Agrave", "192"
-            }, // - uppercase A, grave accent
-            {
-                    "Aacute", "193"
-            }, // - uppercase A, acute accent
-            {
-                    "Acirc", "194"
-            }, // - uppercase A, circumflex accent
-            {
-                    "Atilde", "195"
-            }, // - uppercase A, tilde
-            {
-                    "Auml", "196"
-            }, // - uppercase A, umlaut
-            {
-                    "Aring", "197"
-            }, // - uppercase A, ring
-            {
-                    "AElig", "198"
-            }, // - uppercase AE
-            {
-                    "Ccedil", "199"
-            }, // - uppercase C, cedilla
-            {
-                    "Egrave", "200"
-            }, // - uppercase E, grave accent
-            {
-                    "Eacute", "201"
-            }, // - uppercase E, acute accent
-            {
-                    "Ecirc", "202"
-            }, // - uppercase E, circumflex accent
-            {
-                    "Euml", "203"
-            }, // - uppercase E, umlaut
-            {
-                    "Igrave", "204"
-            }, // - uppercase I, grave accent
-            {
-                    "Iacute", "205"
-            }, // - uppercase I, acute accent
-            {
-                    "Icirc", "206"
-            }, // - uppercase I, circumflex accent
-            {
-                    "Iuml", "207"
-            }, // - uppercase I, umlaut
-            {
-                    "ETH", "208"
-            }, // - uppercase Eth, Icelandic
-            {
-                    "Ntilde", "209"
-            }, // - uppercase N, tilde
-            {
-                    "Ograve", "210"
-            }, // - uppercase O, grave accent
-            {
-                    "Oacute", "211"
-            }, // - uppercase O, acute accent
-            {
-                    "Ocirc", "212"
-            }, // - uppercase O, circumflex accent
-            {
-                    "Otilde", "213"
-            }, // - uppercase O, tilde
-            {
-                    "Ouml", "214"
-            }, // - uppercase O, umlaut
-            {
-                    "times", "215"
-            }, // multiplication sign
-            {
-                    "Oslash", "216"
-            }, // - uppercase O, slash
-            {
-                    "Ugrave", "217"
-            }, // - uppercase U, grave accent
-            {
-                    "Uacute", "218"
-            }, // - uppercase U, acute accent
-            {
-                    "Ucirc", "219"
-            }, // - uppercase U, circumflex accent
-            {
-                    "Uuml", "220"
-            }, // - uppercase U, umlaut
-            {
-                    "Yacute", "221"
-            }, // - uppercase Y, acute accent
-            {
-                    "THORN", "222"
-            }, // - uppercase THORN, Icelandic
-            {
-                    "szlig", "223"
-            }, // - lowercase sharps, German
-            {
-                    "agrave", "224"
-            }, // - lowercase a, grave accent
-            {
-                    "aacute", "225"
-            }, // - lowercase a, acute accent
-            {
-                    "acirc", "226"
-            }, // - lowercase a, circumflex accent
-            {
-                    "atilde", "227"
-            }, // - lowercase a, tilde
-            {
-                    "auml", "228"
-            }, // - lowercase a, umlaut
-            {
-                    "aring", "229"
-            }, // - lowercase a, ring
-            {
-                    "aelig", "230"
-            }, // - lowercase ae
-            {
-                    "ccedil", "231"
-            }, // - lowercase c, cedilla
-            {
-                    "egrave", "232"
-            }, // - lowercase e, grave accent
-            {
-                    "eacute", "233"
-            }, // - lowercase e, acute accent
-            {
-                    "ecirc", "234"
-            }, // - lowercase e, circumflex accent
-            {
-                    "euml", "235"
-            }, // - lowercase e, umlaut
-            {
-                    "igrave", "236"
-            }, // - lowercase i, grave accent
-            {
-                    "iacute", "237"
-            }, // - lowercase i, acute accent
-            {
-                    "icirc", "238"
-            }, // - lowercase i, circumflex accent
-            {
-                    "iuml", "239"
-            }, // - lowercase i, umlaut
-            {
-                    "eth", "240"
-            }, // - lowercase eth, Icelandic
-            {
-                    "ntilde", "241"
-            }, // - lowercase n, tilde
-            {
-                    "ograve", "242"
-            }, // - lowercase o, grave accent
-            {
-                    "oacute", "243"
-            }, // - lowercase o, acute accent
-            {
-                    "ocirc", "244"
-            }, // - lowercase o, circumflex accent
-            {
-                    "otilde", "245"
-            }, // - lowercase o, tilde
-            {
-                    "ouml", "246"
-            }, // - lowercase o, umlaut
-            {
-                    "divide", "247"
-            }, // division sign
-            {
-                    "oslash", "248"
-            }, // - lowercase o, slash
-            {
-                    "ugrave", "249"
-            }, // - lowercase u, grave accent
-            {
-                    "uacute", "250"
-            }, // - lowercase u, acute accent
-            {
-                    "ucirc", "251"
-            }, // - lowercase u, circumflex accent
-            {
-                    "uuml", "252"
-            }, // - lowercase u, umlaut
-            {
-                    "yacute", "253"
-            }, // - lowercase y, acute accent
-            {
-                    "thorn", "254"
-            }, // - lowercase thorn, Icelandic
-            {
-                    "yuml", "255"
-            }, // - lowercase y, umlaut
-    };
-
-    // http://www.w3.org/TR/REC-html40/sgml/entities.html
-    // package scoped for testing
-    static final String[][] HTML40_ARRAY = {
-            // <!-- Latin Extended-B -->
-            {
-                    "fnof", "402"
-            }, // latin small f with hook = function= florin, U+0192 ISOtech -->
-            // <!-- Greek -->
-            {
-                    "Alpha", "913"
-            }, // greek capital letter alpha, U+0391 -->
-            {
-                    "Beta", "914"
-            }, // greek capital letter beta, U+0392 -->
-            {
-                    "Gamma", "915"
-            }, // greek capital letter gamma,U+0393 ISOgrk3 -->
-            {
-                    "Delta", "916"
-            }, // greek capital letter delta,U+0394 ISOgrk3 -->
-            {
-                    "Epsilon", "917"
-            }, // greek capital letter epsilon, U+0395 -->
-            {
-                    "Zeta", "918"
-            }, // greek capital letter zeta, U+0396 -->
-            {
-                    "Eta", "919"
-            }, // greek capital letter eta, U+0397 -->
-            {
-                    "Theta", "920"
-            }, // greek capital letter theta,U+0398 ISOgrk3 -->
-            {
-                    "Iota", "921"
-            }, // greek capital letter iota, U+0399 -->
-            {
-                    "Kappa", "922"
-            }, // greek capital letter kappa, U+039A -->
-            {
-                    "Lambda", "923"
-            }, // greek capital letter lambda,U+039B ISOgrk3 -->
-            {
-                    "Mu", "924"
-            }, // greek capital letter mu, U+039C -->
-            {
-                    "Nu", "925"
-            }, // greek capital letter nu, U+039D -->
-            {
-                    "Xi", "926"
-            }, // greek capital letter xi, U+039E ISOgrk3 -->
-            {
-                    "Omicron", "927"
-            }, // greek capital letter omicron, U+039F -->
-            {
-                    "Pi", "928"
-            }, // greek capital letter pi, U+03A0 ISOgrk3 -->
-            {
-                    "Rho", "929"
-            }, // greek capital letter rho, U+03A1 -->
-            // <!-- there is no Sigmaf, and no U+03A2 character either -->
-            {
-                    "Sigma", "931"
-            }, // greek capital letter sigma,U+03A3 ISOgrk3 -->
-            {
-                    "Tau", "932"
-            }, // greek capital letter tau, U+03A4 -->
-            {
-                    "Upsilon", "933"
-            }, // greek capital letter upsilon,U+03A5 ISOgrk3 -->
-            {
-                    "Phi", "934"
-            }, // greek capital letter phi,U+03A6 ISOgrk3 -->
-            {
-                    "Chi", "935"
-            }, // greek capital letter chi, U+03A7 -->
-            {
-                    "Psi", "936"
-            }, // greek capital letter psi,U+03A8 ISOgrk3 -->
-            {
-                    "Omega", "937"
-            }, // greek capital letter omega,U+03A9 ISOgrk3 -->
-            {
-                    "alpha", "945"
-            }, // greek small letter alpha,U+03B1 ISOgrk3 -->
-            {
-                    "beta", "946"
-            }, // greek small letter beta, U+03B2 ISOgrk3 -->
-            {
-                    "gamma", "947"
-            }, // greek small letter gamma,U+03B3 ISOgrk3 -->
-            {
-                    "delta", "948"
-            }, // greek small letter delta,U+03B4 ISOgrk3 -->
-            {
-                    "epsilon", "949"
-            }, // greek small letter epsilon,U+03B5 ISOgrk3 -->
-            {
-                    "zeta", "950"
-            }, // greek small letter zeta, U+03B6 ISOgrk3 -->
-            {
-                    "eta", "951"
-            }, // greek small letter eta, U+03B7 ISOgrk3 -->
-            {
-                    "theta", "952"
-            }, // greek small letter theta,U+03B8 ISOgrk3 -->
-            {
-                    "iota", "953"
-            }, // greek small letter iota, U+03B9 ISOgrk3 -->
-            {
-                    "kappa", "954"
-            }, // greek small letter kappa,U+03BA ISOgrk3 -->
-            {
-                    "lambda", "955"
-            }, // greek small letter lambda,U+03BB ISOgrk3 -->
-            {
-                    "mu", "956"
-            }, // greek small letter mu, U+03BC ISOgrk3 -->
-            {
-                    "nu", "957"
-            }, // greek small letter nu, U+03BD ISOgrk3 -->
-            {
-                    "xi", "958"
-            }, // greek small letter xi, U+03BE ISOgrk3 -->
-            {
-                    "omicron", "959"
-            }, // greek small letter omicron, U+03BF NEW -->
-            {
-                    "pi", "960"
-            }, // greek small letter pi, U+03C0 ISOgrk3 -->
-            {
-                    "rho", "961"
-            }, // greek small letter rho, U+03C1 ISOgrk3 -->
-            {
-                    "sigmaf", "962"
-            }, // greek small letter final sigma,U+03C2 ISOgrk3 -->
-            {
-                    "sigma", "963"
-            }, // greek small letter sigma,U+03C3 ISOgrk3 -->
-            {
-                    "tau", "964"
-            }, // greek small letter tau, U+03C4 ISOgrk3 -->
-            {
-                    "upsilon", "965"
-            }, // greek small letter upsilon,U+03C5 ISOgrk3 -->
-            {
-                    "phi", "966"
-            }, // greek small letter phi, U+03C6 ISOgrk3 -->
-            {
-                    "chi", "967"
-            }, // greek small letter chi, U+03C7 ISOgrk3 -->
-            {
-                    "psi", "968"
-            }, // greek small letter psi, U+03C8 ISOgrk3 -->
-            {
-                    "omega", "969"
-            }, // greek small letter omega,U+03C9 ISOgrk3 -->
-            {
-                    "thetasym", "977"
-            }, // greek small letter theta symbol,U+03D1 NEW -->
-            {
-                    "upsih", "978"
-            }, // greek upsilon with hook symbol,U+03D2 NEW -->
-            {
-                    "piv", "982"
-            }, // greek pi symbol, U+03D6 ISOgrk3 -->
-            // <!-- General Punctuation -->
-            {
-                    "bull", "8226"
-            }, // bullet = black small circle,U+2022 ISOpub -->
-            // <!-- bullet is NOT the same as bullet operator, U+2219 -->
-            {
-                    "hellip", "8230"
-            }, // horizontal ellipsis = three dot leader,U+2026 ISOpub -->
-            {
-                    "prime", "8242"
-            }, // prime = minutes = feet, U+2032 ISOtech -->
-            {
-                    "Prime", "8243"
-            }, // double prime = seconds = inches,U+2033 ISOtech -->
-            {
-                    "oline", "8254"
-            }, // overline = spacing overscore,U+203E NEW -->
-            {
-                    "frasl", "8260"
-            }, // fraction slash, U+2044 NEW -->
-            // <!-- Letterlike Symbols -->
-            {
-                    "weierp", "8472"
-            }, // script capital P = power set= Weierstrass p, U+2118 ISOamso
-            // -->
-            {
-                    "image", "8465"
-            }, // blackletter capital I = imaginary part,U+2111 ISOamso -->
-            {
-                    "real", "8476"
-            }, // blackletter capital R = real part symbol,U+211C ISOamso -->
-            {
-                    "trade", "8482"
-            }, // trade mark sign, U+2122 ISOnum -->
-            {
-                    "alefsym", "8501"
-            }, // alef symbol = first transfinite cardinal,U+2135 NEW -->
-            // <!-- alef symbol is NOT the same as hebrew letter alef,U+05D0
-            // although the same glyph could be used to depict both characters
-            // -->
-            // <!-- Arrows -->
-            {
-                    "larr", "8592"
-            }, // leftwards arrow, U+2190 ISOnum -->
-            {
-                    "uarr", "8593"
-            }, // upwards arrow, U+2191 ISOnum-->
-            {
-                    "rarr", "8594"
-            }, // rightwards arrow, U+2192 ISOnum -->
-            {
-                    "darr", "8595"
-            }, // downwards arrow, U+2193 ISOnum -->
-            {
-                    "harr", "8596"
-            }, // left right arrow, U+2194 ISOamsa -->
-            {
-                    "crarr", "8629"
-            }, // downwards arrow with corner leftwards= carriage return, U+21B5
-            // NEW -->
-            {
-                    "lArr", "8656"
-            }, // leftwards double arrow, U+21D0 ISOtech -->
-            // <!-- ISO 10646 does not say that lArr is the same as the 'is
-            // implied by' arrowbut also does not have any other character for
-            // that function. So ? lArr canbe used for 'is implied by' as
-            // ISOtech suggests -->
-            {
-                    "uArr", "8657"
-            }, // upwards double arrow, U+21D1 ISOamsa -->
-            {
-                    "rArr", "8658"
-            }, // rightwards double arrow,U+21D2 ISOtech -->
-            // <!-- ISO 10646 does not say this is the 'implies' character but
-            // does not have another character with this function so ?rArr can
-            // be used for 'implies' as ISOtech suggests -->
-            {
-                    "dArr", "8659"
-            }, // downwards double arrow, U+21D3 ISOamsa -->
-            {
-                    "hArr", "8660"
-            }, // left right double arrow,U+21D4 ISOamsa -->
-            // <!-- Mathematical Operators -->
-            {
-                    "forall", "8704"
-            }, // for all, U+2200 ISOtech -->
-            {
-                    "part", "8706"
-            }, // partial differential, U+2202 ISOtech -->
-            {
-                    "exist", "8707"
-            }, // there exists, U+2203 ISOtech -->
-            {
-                    "empty", "8709"
-            }, // empty set = null set = diameter,U+2205 ISOamso -->
-            {
-                    "nabla", "8711"
-            }, // nabla = backward difference,U+2207 ISOtech -->
-            {
-                    "isin", "8712"
-            }, // element of, U+2208 ISOtech -->
-            {
-                    "notin", "8713"
-            }, // not an element of, U+2209 ISOtech -->
-            {
-                    "ni", "8715"
-            }, // contains as member, U+220B ISOtech -->
-            // <!-- should there be a more memorable name than 'ni'? -->
-            {
-                    "prod", "8719"
-            }, // n-ary product = product sign,U+220F ISOamsb -->
-            // <!-- prod is NOT the same character as U+03A0 'greek capital
-            // letter pi' though the same glyph might be used for both -->
-            {
-                    "sum", "8721"
-            }, // n-ary summation, U+2211 ISOamsb -->
-            // <!-- sum is NOT the same character as U+03A3 'greek capital
-            // letter sigma' though the same glyph might be used for both -->
-            {
-                    "minus", "8722"
-            }, // minus sign, U+2212 ISOtech -->
-            {
-                    "lowast", "8727"
-            }, // asterisk operator, U+2217 ISOtech -->
-            {
-                    "radic", "8730"
-            }, // square root = radical sign,U+221A ISOtech -->
-            {
-                    "prop", "8733"
-            }, // proportional to, U+221D ISOtech -->
-            {
-                    "infin", "8734"
-            }, // infinity, U+221E ISOtech -->
-            {
-                    "ang", "8736"
-            }, // angle, U+2220 ISOamso -->
-            {
-                    "and", "8743"
-            }, // logical and = wedge, U+2227 ISOtech -->
-            {
-                    "or", "8744"
-            }, // logical or = vee, U+2228 ISOtech -->
-            {
-                    "cap", "8745"
-            }, // intersection = cap, U+2229 ISOtech -->
-            {
-                    "cup", "8746"
-            }, // union = cup, U+222A ISOtech -->
-            {
-                    "int", "8747"
-            }, // integral, U+222B ISOtech -->
-            {
-                    "there4", "8756"
-            }, // therefore, U+2234 ISOtech -->
-            {
-                    "sim", "8764"
-            }, // tilde operator = varies with = similar to,U+223C ISOtech -->
-            // <!-- tilde operator is NOT the same character as the tilde,
-            // U+007E,although the same glyph might be used to represent both
-            // -->
-            {
-                    "cong", "8773"
-            }, // approximately equal to, U+2245 ISOtech -->
-            {
-                    "asymp", "8776"
-            }, // almost equal to = asymptotic to,U+2248 ISOamsr -->
-            {
-                    "ne", "8800"
-            }, // not equal to, U+2260 ISOtech -->
-            {
-                    "equiv", "8801"
-            }, // identical to, U+2261 ISOtech -->
-            {
-                    "le", "8804"
-            }, // less-than or equal to, U+2264 ISOtech -->
-            {
-                    "ge", "8805"
-            }, // greater-than or equal to,U+2265 ISOtech -->
-            {
-                    "sub", "8834"
-            }, // subset of, U+2282 ISOtech -->
-            {
-                    "sup", "8835"
-            }, // superset of, U+2283 ISOtech -->
-            // <!-- note that nsup, 'not a superset of, U+2283' is not covered
-            // by the Symbol font encoding and is not included. Should it be,
-            // for symmetry?It is in ISOamsn --> <!ENTITY nsub", "8836"}, //not
-            // a subset of, U+2284 ISOamsn -->
-            {
-                    "sube", "8838"
-            }, // subset of or equal to, U+2286 ISOtech -->
-            {
-                    "supe", "8839"
-            }, // superset of or equal to,U+2287 ISOtech -->
-            {
-                    "oplus", "8853"
-            }, // circled plus = direct sum,U+2295 ISOamsb -->
-            {
-                    "otimes", "8855"
-            }, // circled times = vector product,U+2297 ISOamsb -->
-            {
-                    "perp", "8869"
-            }, // up tack = orthogonal to = perpendicular,U+22A5 ISOtech -->
-            {
-                    "sdot", "8901"
-            }, // dot operator, U+22C5 ISOamsb -->
-            // <!-- dot operator is NOT the same character as U+00B7 middle dot
-            // -->
-            // <!-- Miscellaneous Technical -->
-            {
-                    "lceil", "8968"
-            }, // left ceiling = apl upstile,U+2308 ISOamsc -->
-            {
-                    "rceil", "8969"
-            }, // right ceiling, U+2309 ISOamsc -->
-            {
-                    "lfloor", "8970"
-            }, // left floor = apl downstile,U+230A ISOamsc -->
-            {
-                    "rfloor", "8971"
-            }, // right floor, U+230B ISOamsc -->
-            {
-                    "lang", "9001"
-            }, // left-pointing angle bracket = bra,U+2329 ISOtech -->
-            // <!-- lang is NOT the same character as U+003C 'less than' or
-            // U+2039 'single left-pointing angle quotation mark' -->
-            {
-                    "rang", "9002"
-            }, // right-pointing angle bracket = ket,U+232A ISOtech -->
-            // <!-- rang is NOT the same character as U+003E 'greater than' or
-            // U+203A 'single right-pointing angle quotation mark' -->
-            // <!-- Geometric Shapes -->
-            {
-                    "loz", "9674"
-            }, // lozenge, U+25CA ISOpub -->
-            // <!-- Miscellaneous Symbols -->
-            {
-                    "spades", "9824"
-            }, // black spade suit, U+2660 ISOpub -->
-            // <!-- black here seems to mean filled as opposed to hollow -->
-            {
-                    "clubs", "9827"
-            }, // black club suit = shamrock,U+2663 ISOpub -->
-            {
-                    "hearts", "9829"
-            }, // black heart suit = valentine,U+2665 ISOpub -->
-            {
-                    "diams", "9830"
-            }, // black diamond suit, U+2666 ISOpub -->
-
-            // <!-- Latin Extended-A -->
-            {
-                    "OElig", "338"
-            }, // -- latin capital ligature OE,U+0152 ISOlat2 -->
-            {
-                    "oelig", "339"
-            }, // -- latin small ligature oe, U+0153 ISOlat2 -->
-            // <!-- ligature is a misnomer, this is a separate character in some
-            // languages -->
-            {
-                    "Scaron", "352"
-            }, // -- latin capital letter S with caron,U+0160 ISOlat2 -->
-            {
-                    "scaron", "353"
-            }, // -- latin small letter s with caron,U+0161 ISOlat2 -->
-            {
-                    "Yuml", "376"
-            }, // -- latin capital letter Y with diaeresis,U+0178 ISOlat2 -->
-            // <!-- Spacing Modifier Letters -->
-            {
-                    "circ", "710"
-            }, // -- modifier letter circumflex accent,U+02C6 ISOpub -->
-            {
-                    "tilde", "732"
-            }, // small tilde, U+02DC ISOdia -->
-            // <!-- General Punctuation -->
-            {
-                    "ensp", "8194"
-            }, // en space, U+2002 ISOpub -->
-            {
-                    "emsp", "8195"
-            }, // em space, U+2003 ISOpub -->
-            {
-                    "thinsp", "8201"
-            }, // thin space, U+2009 ISOpub -->
-            {
-                    "zwnj", "8204"
-            }, // zero width non-joiner,U+200C NEW RFC 2070 -->
-            {
-                    "zwj", "8205"
-            }, // zero width joiner, U+200D NEW RFC 2070 -->
-            {
-                    "lrm", "8206"
-            }, // left-to-right mark, U+200E NEW RFC 2070 -->
-            {
-                    "rlm", "8207"
-            }, // right-to-left mark, U+200F NEW RFC 2070 -->
-            {
-                    "ndash", "8211"
-            }, // en dash, U+2013 ISOpub -->
-            {
-                    "mdash", "8212"
-            }, // em dash, U+2014 ISOpub -->
-            {
-                    "lsquo", "8216"
-            }, // left single quotation mark,U+2018 ISOnum -->
-            {
-                    "rsquo", "8217"
-            }, // right single quotation mark,U+2019 ISOnum -->
-            {
-                    "sbquo", "8218"
-            }, // single low-9 quotation mark, U+201A NEW -->
-            {
-                    "ldquo", "8220"
-            }, // left double quotation mark,U+201C ISOnum -->
-            {
-                    "rdquo", "8221"
-            }, // right double quotation mark,U+201D ISOnum -->
-            {
-                    "bdquo", "8222"
-            }, // double low-9 quotation mark, U+201E NEW -->
-            {
-                    "dagger", "8224"
-            }, // dagger, U+2020 ISOpub -->
-            {
-                    "Dagger", "8225"
-            }, // double dagger, U+2021 ISOpub -->
-            {
-                    "permil", "8240"
-            }, // per mille sign, U+2030 ISOtech -->
-            {
-                    "lsaquo", "8249"
-            }, // single left-pointing angle quotation mark,U+2039 ISO proposed
-            // -->
-            // <!-- lsaquo is proposed but not yet ISO standardized -->
-            {
-                    "rsaquo", "8250"
-            }, // single right-pointing angle quotation mark,U+203A ISO proposed
-            // -->
-            // <!-- rsaquo is proposed but not yet ISO standardized -->
-            {
-                    "euro", "8364"
-            }, // -- euro sign, U+20AC NEW -->
-    };
-
-    private static final String[][] BASIC_ARRAY = {
-            {
-                    "quot", "34"
-            }, // " - double-quote
-            {
-                    "amp", "38"
-            }, // & - ampersand
-            {
-                    "lt", "60"
-            }, // < - less-than
-            {
-                    "gt", "62"
-            }, // > - greater-than
-    };
-
-    // package scoped for testing
-    final EntityMap map = new HtmlEntities.LookupEntityMap();
-
-    /*
-     * static { XML = new Entities(); XML.addEntities(BASIC_ARRAY);
-     * XML.addEntities(APOS_ARRAY); }
-     */
-    /*
-     * static { HTML32 = new Entities(); HTML32.addEntities(BASIC_ARRAY);
-     * HTML32.addEntities(ISO8859_1_ARRAY); }
-     */
-    static {
-        HTML40 = new HtmlEntities();
-        fillWithHtml40Entities(HTML40);
-    }
-
-    static void fillWithHtml40Entities(HtmlEntities entities) {
-        entities.addEntities(BASIC_ARRAY);
-        entities.addEntities(ISO8859_1_ARRAY);
-        entities.addEntities(HTML40_ARRAY);
-    }
-
-    interface EntityMap {
-        void add(String name, int value);
-
-        String name(int value);
-
-        int value(String name);
-    }
-
-    static class PrimitiveEntityMap implements EntityMap {
-        @SuppressWarnings("unchecked")
-        private final Map mapNameToValue = new HashMap();
-
-        private final IntHashMap mapValueToName = new IntHashMap();
-
-        @SuppressWarnings("unchecked")
-        public void add(String name, int value) {
-            mapNameToValue.put(name, value);
-            mapValueToName.put(value, name);
-        }
-
-        public String name(int value) {
-            return (String) mapValueToName.get(value);
-        }
-
-        public int value(String name) {
-            final Object value = mapNameToValue.get(name);
-            if (value == null) {
-                return -1;
-            }
-            return ((Integer) value).intValue();
-        }
-    }
-
-    static class LookupEntityMap extends PrimitiveEntityMap {
-        private static final int LOOKUP_TABLE_SIZE = 256;
-
-        private String[] lookupTable;
-
-        @Override
-        public String name(int value) {
-            if (value < LOOKUP_TABLE_SIZE) {
-                return lookupTable()[value];
-            }
-            return super.name(value);
-        }
-
-        private String[] lookupTable() {
-            if (lookupTable == null) {
-                createLookupTable();
-            }
-            return lookupTable;
-        }
-
-        private void createLookupTable() {
-            lookupTable = new String[LOOKUP_TABLE_SIZE];
-            for (int i = 0; i < LOOKUP_TABLE_SIZE; ++i) {
-                lookupTable[i] = super.name(i);
-            }
-        }
-    }
-
-    /**
-     * The result of an unescape. Keeps an array of indices[start][end] on the original input that
-     * was escaped.
-     */
-    public static final class Unescaped {
-        public final String unescaped;
-        // An ordered list of start/end indices
-        public final ArrayList<int[]> indices;
-
-        public Unescaped(String unescaped, ArrayList<int[]> indices) {
-            this.unescaped = unescaped;
-            this.indices = indices;
-        }
-    }
-
-    public void addEntities(String[][] entityArray) {
-        for (String[] anEntityArray : entityArray) {
-            addEntity(anEntityArray[0], Integer.parseInt(anEntityArray[1]));
-        }
-    }
-
-    public void addEntity(String name, int value) {
-        map.add(name, value);
-    }
-
-    public int entityValue(String name) {
-        return map.value(name);
-    }
-
-    /**
-     * <p>
-     * Unescapes the entities in a <code>String</code>.
-     * </p>
-     * <p>
-     * For example, if you have called addEntity(&quot;foo&quot;, 0xA1),
-     * unescape(&quot;&amp;foo;&quot;) will return &quot;\u00A1&quot;
-     * </p>
-     *
-     * @param str The <code>String</code> to escape.
-     * @return A new escaped <code>String</code>.
-     */
-    public Unescaped unescape(String str) {
-        final int length = str.length();
-        final StringBuilder buf = new StringBuilder(length);
-        final ArrayList<int[]> indices = new ArrayList<>(5);
-        int i;
-        for (i = 0; i < length; ++i) {
-            final char ch = str.charAt(i);
-            if (ch == '&') {
-                final int semi = str.indexOf(';', i + 1);
-                if (semi == -1) {
-                    buf.append(ch);
-                    continue;
-                }
-                final String entityName = str.substring(i + 1, semi);
-                final int entityNameLength = entityName.length();
-                int entityValue = -1;
-                if (entityNameLength > 0) {
-                    if (entityName.charAt(0) == '#' && entityNameLength > 1) {
-                        final char charAt1 = entityName.charAt(1);
-                        try {
-                            if (charAt1 == 'x' || charAt1 == 'X') {
-                                if (entityNameLength > 2) {
-                                    entityValue = Integer.valueOf(entityName.substring(2), 16)
-                                            .intValue();
-                                }
-                            } else {
-                                entityValue = Integer.parseInt(entityName.substring(1));
-                            }
-                        } catch (Exception ignore) {
-                        }
-                    } else {
-                        entityValue = this.entityValue(entityName);
-                    }
-                }
-                if (entityValue == -1) {
-                    buf.append('&');
-                    final int amp = entityName.indexOf('&');
-                    if (amp == -1) {
-                        buf.append(entityName);
-                        buf.append(';');
-                        i = semi;
-                    }
-                } else {
-                    buf.append((char) (entityValue));
-                    indices.add(new int[] { i, semi });
-                    i = semi;
-                }
-            } else {
-                buf.append(ch);
-            }
-        }
-        return new Unescaped(buf.toString(), indices);
-    }
-}
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/IntHashMap.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/IntHashMap.java
deleted file mode 100644
index f574a1ed..00000000
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/IntHashMap.java
+++ /dev/null
@@ -1,391 +0,0 @@
-/*
- * Copyright 2002-2004 The Apache Software Foundation.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.twitter.sdk.android.tweetui.internal.util;
-/**
- * <p>
- * A hash map that uses primitive ints for the key rather than objects.
- * </p>
- * <p>
- * Note that this class is for internal optimization purposes only, and may not
- * be supported in future releases of Jakarta Commons Lang. Utilities of this
- * sort may be included in future releases of Jakarta Commons Collections.
- * </p>
- *
- * @author Justin Couch
- * @author Alex Chaffee (alex@apache.org)
- * @author Stephen Colebourne
- * @since 2.0
- * @version $Revision: 1.6 $
- * @see java.util.HashMap
- */
-public class IntHashMap {
-
-    /**
-     * The hash table data.
-     */
-    private Entry[] table;
-
-    /**
-     * The total number of entries in the hash table.
-     */
-    private int count;
-
-    /**
-     * The table is rehashed when its size exceeds this threshold. (The value of
-     * this field is (int)(capacity * loadFactor).)
-     *
-     * @serial
-     */
-    private int threshold;
-
-    /**
-     * The load factor for the hashtable.
-     *
-     * @serial
-     */
-    private float loadFactor;
-
-    /**
-     * <p>
-     * Innerclass that acts as a datastructure to create a new entry in the
-     * table.
-     * </p>
-     */
-    private static class Entry {
-        public final int hash;
-
-        @SuppressWarnings("unused")
-        public int key;
-
-        public Object value;
-
-        public Entry next;
-
-        /**
-         * <p>
-         * Create a new entry with the given values.
-         * </p>
-         *
-         * @param hash The code used to hash the object with
-         * @param key The key used to enter this in the table
-         * @param value The value for this key
-         * @param next A reference to the next entry in the table
-         */
-        protected Entry(int hash, int key, Object value, Entry next) {
-            this.hash = hash;
-            this.key = key;
-            this.value = value;
-            this.next = next;
-        }
-    }
-
-    /**
-     * <p>
-     * Constructs a new, empty hashtable with a default capacity and load
-     * factor, which is <code>20</code> and <code>0.75</code> respectively.
-     * </p>
-     */
-    public IntHashMap() {
-        this(20, 0.75f);
-    }
-
-    /**
-     * <p>
-     * Constructs a new, empty hashtable with the specified initial capacity and
-     * default load factor, which is <code>0.75</code>.
-     * </p>
-     *
-     * @param initialCapacity the initial capacity of the hashtable.
-     * @throws IllegalArgumentException if the initial capacity is less than
-     *             zero.
-     */
-    public IntHashMap(int initialCapacity) {
-        this(initialCapacity, 0.75f);
-    }
-
-    /**
-     * <p>
-     * Constructs a new, empty hashtable with the specified initial capacity and
-     * the specified load factor.
-     * </p>
-     *
-     * @param initialCapacity the initial capacity of the hashtable.
-     * @param loadFactor the load factor of the hashtable.
-     * @throws IllegalArgumentException if the initial capacity is less than
-     *             zero, or if the load factor is nonpositive.
-     */
-    public IntHashMap(int initialCapacity, float loadFactor) {
-        super();
-        if (initialCapacity < 0) {
-            throw new IllegalArgumentException("Illegal Capacity: " + initialCapacity);
-        }
-        if (loadFactor <= 0) {
-            throw new IllegalArgumentException("Illegal Load: " + loadFactor);
-        }
-        if (initialCapacity == 0) {
-            initialCapacity = 1;
-        }
-
-        this.loadFactor = loadFactor;
-        table = new Entry[initialCapacity];
-        threshold = (int) (initialCapacity * loadFactor);
-    }
-
-    /**
-     * <p>
-     * Returns the number of keys in this hashtable.
-     * </p>
-     *
-     * @return the number of keys in this hashtable.
-     */
-    public int size() {
-        return count;
-    }
-
-    /**
-     * <p>
-     * Tests if this hashtable maps no keys to values.
-     * </p>
-     *
-     * @return <code>true</code> if this hashtable maps no keys to values;
-     *         <code>false</code> otherwise.
-     */
-    public boolean isEmpty() {
-        return count == 0;
-    }
-
-    /**
-     * <p>
-     * Tests if some key maps into the specified value in this hashtable. This
-     * operation is more expensive than the <code>containsKey</code> method.
-     * </p>
-     * <p>
-     * Note that this method is identical in functionality to containsValue,
-     * (which is part of the Map interface in the collections framework).
-     * </p>
-     *
-     * @param value a value to search for.
-     * @return <code>true</code> if and only if some key maps to the
-     *         <code>value</code> argument in this hashtable as determined by
-     *         the <tt>equals</tt> method; <code>false</code> otherwise.
-     * @throws NullPointerException if the value is <code>null</code>.
-     * @see #containsKey(int)
-     * @see #containsValue(Object)
-     * @see java.util.Map
-     */
-    public boolean contains(Object value) {
-        if (value == null) {
-            throw new NullPointerException();
-        }
-
-        final Entry[] tab = table;
-        for (int i = tab.length; i-- > 0;) {
-            for (Entry e = tab[i]; e != null; e = e.next) {
-                if (e.value.equals(value)) {
-                    return true;
-                }
-            }
-        }
-        return false;
-    }
-
-    /**
-     * <p>
-     * Returns <code>true</code> if this HashMap maps one or more keys to this
-     * value.
-     * </p>
-     * <p>
-     * Note that this method is identical in functionality to contains (which
-     * predates the Map interface).
-     * </p>
-     *
-     * @param value value whose presence in this HashMap is to be tested.
-     * @see java.util.Map
-     * @since JDK1.2
-     */
-    public boolean containsValue(Object value) {
-        return contains(value);
-    }
-
-    /**
-     * <p>
-     * Tests if the specified object is a key in this hashtable.
-     * </p>
-     *
-     * @param key possible key.
-     * @return <code>true</code> if and only if the specified object is a key in
-     *         this hashtable, as determined by the <tt>equals</tt> method;
-     *         <code>false</code> otherwise.
-     * @see #contains(Object)
-     */
-    public boolean containsKey(int key) {
-        final Entry[] tab = table;
-        final int hash = key;
-        final int index = (hash & 0x7FFFFFFF) % tab.length;
-        for (Entry e = tab[index]; e != null; e = e.next) {
-            if (e.hash == hash) {
-                return true;
-            }
-        }
-        return false;
-    }
-
-    /**
-     * <p>
-     * Returns the value to which the specified key is mapped in this map.
-     * </p>
-     *
-     * @param key a key in the hashtable.
-     * @return the value to which the key is mapped in this hashtable;
-     *         <code>null</code> if the key is not mapped to any value in this
-     *         hashtable.
-     * @see #put(int, Object)
-     */
-    public Object get(int key) {
-        final Entry[] tab = table;
-        final int hash = key;
-        final int index = (hash & 0x7FFFFFFF) % tab.length;
-        for (Entry e = tab[index]; e != null; e = e.next) {
-            if (e.hash == hash) {
-                return e.value;
-            }
-        }
-        return null;
-    }
-
-    /**
-     * <p>
-     * Increases the capacity of and internally reorganizes this hashtable, in
-     * order to accommodate and access its entries more efficiently.
-     * </p>
-     * <p>
-     * This method is called automatically when the number of keys in the
-     * hashtable exceeds this hashtable's capacity and load factor.
-     * </p>
-     */
-    protected void rehash() {
-        final int oldCapacity = table.length;
-        final Entry[] oldMap = table;
-
-        final int newCapacity = oldCapacity * 2 + 1;
-        final Entry[] newMap = new Entry[newCapacity];
-
-        threshold = (int) (newCapacity * loadFactor);
-        table = newMap;
-
-        for (int i = oldCapacity; i-- > 0;) {
-            for (Entry old = oldMap[i]; old != null;) {
-                final Entry e = old;
-                old = old.next;
-
-                final int index = (e.hash & 0x7FFFFFFF) % newCapacity;
-                e.next = newMap[index];
-                newMap[index] = e;
-            }
-        }
-    }
-
-    /**
-     * <p>
-     * Maps the specified <code>key</code> to the specified <code>value</code>
-     * in this hashtable. The key cannot be <code>null</code>.
-     * </p>
-     * <p>
-     * The value can be retrieved by calling the <code>get</code> method with a
-     * key that is equal to the original key.
-     * </p>
-     *
-     * @param key the hashtable key.
-     * @param value the value.
-     * @return the previous value of the specified key in this hashtable, or
-     *         <code>null</code> if it did not have one.
-     * @throws NullPointerException if the key is <code>null</code>.
-     * @see #get(int)
-     */
-    public Object put(int key, Object value) {
-        // Makes sure the key is not already in the hashtable.
-        Entry[] tab = table;
-        final int hash = key;
-        int index = (hash & 0x7FFFFFFF) % tab.length;
-        for (Entry e = tab[index]; e != null; e = e.next) {
-            if (e.hash == hash) {
-                final Object old = e.value;
-                e.value = value;
-                return old;
-            }
-        }
-
-        if (count >= threshold) {
-            // Rehash the table if the threshold is exceeded
-            rehash();
-
-            tab = table;
-            index = (hash & 0x7FFFFFFF) % tab.length;
-        }
-
-        // Creates the new entry.
-        final Entry e = new Entry(hash, key, value, tab[index]);
-        tab[index] = e;
-        count++;
-        return null;
-    }
-
-    /**
-     * <p>
-     * Removes the key (and its corresponding value) from this hashtable.
-     * </p>
-     * <p>
-     * This method does nothing if the key is not present in the hashtable.
-     * </p>
-     *
-     * @param key the key that needs to be removed.
-     * @return the value to which the key had been mapped in this hashtable, or
-     *         <code>null</code> if the key did not have a mapping.
-     */
-    public Object remove(int key) {
-        final Entry[] tab = table;
-        final int hash = key;
-        final int index = (hash & 0x7FFFFFFF) % tab.length;
-        for (Entry e = tab[index], prev = null; e != null; prev = e, e = e.next) {
-            if (e.hash == hash) {
-                if (prev != null) {
-                    prev.next = e.next;
-                } else {
-                    tab[index] = e.next;
-                }
-                count--;
-                final Object oldValue = e.value;
-                e.value = null;
-                return oldValue;
-            }
-        }
-        return null;
-    }
-
-    /**
-     * <p>
-     * Clears this hashtable so that it contains no keys.
-     * </p>
-     */
-    public synchronized void clear() {
-        final Entry[] tab = table;
-        for (int index = tab.length; --index >= 0;) {
-            tab[index] = null;
-        }
-        count = 0;
-    }
-}
diff --git a/tweet-ui/src/main/res/anim/tw__accelerate_cubic.xml b/tweet-ui/src/main/res/anim/tw__accelerate_cubic.xml
deleted file mode 100644
index 851f5bcf..00000000
--- a/tweet-ui/src/main/res/anim/tw__accelerate_cubic.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<accelerateInterpolator xmlns:android="http://schemas.android.com/apk/res/android"
-                        android:factor="1.5"/>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/anim/tw__slide_out.xml b/tweet-ui/src/main/res/anim/tw__slide_out.xml
deleted file mode 100644
index 0e00d994..00000000
--- a/tweet-ui/src/main/res/anim/tw__slide_out.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<set xmlns:android="http://schemas.android.com/apk/res/android">
-    <translate xmlns:android="http://schemas.android.com/apk/res/android"
-               android:fromYDelta="0%"
-               android:toXDelta="100%"
-               android:interpolator="@anim/tw__accelerate_cubic"
-               android:duration="250"/>
-</set>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__action_heart_off_default.png b/tweet-ui/src/main/res/drawable-hdpi/tw__action_heart_off_default.png
deleted file mode 100644
index fb090f91..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__action_heart_off_default.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__action_heart_on_default.png b/tweet-ui/src/main/res/drawable-hdpi/tw__action_heart_on_default.png
deleted file mode 100644
index 5f5a5c97..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__action_heart_on_default.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_gif_badge.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_gif_badge.png
deleted file mode 100644
index da25ee0b..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_gif_badge.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_inline_share.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_inline_share.png
deleted file mode 100644
index 77a2b407..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_inline_share.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_logo_blue.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_logo_blue.png
deleted file mode 100644
index 416fe3ba..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_logo_blue.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_logo_white.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_logo_white.png
deleted file mode 100644
index a33b25d3..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_logo_white.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_play_default.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_play_default.png
deleted file mode 100644
index 46b7cdbb..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_play_default.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_play_pressed.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_play_pressed.png
deleted file mode 100644
index 8fc450df..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_play_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_retweet_dark.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_retweet_dark.png
deleted file mode 100644
index e4454b30..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_retweet_dark.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_retweet_light.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_retweet_light.png
deleted file mode 100644
index cbe67c1f..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_retweet_light.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_seekbar_bg.9.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_seekbar_bg.9.png
deleted file mode 100644
index 27498840..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_seekbar_bg.9.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_seekbar_progress_bg.9.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_seekbar_progress_bg.9.png
deleted file mode 100644
index 060cc7db..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_seekbar_progress_bg.9.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_seekbar_secondary_bg.9.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_seekbar_secondary_bg.9.png
deleted file mode 100644
index 19d1876e..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_seekbar_secondary_bg.9.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_tweet_photo_error_dark.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_tweet_photo_error_dark.png
deleted file mode 100644
index 694646c4..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_tweet_photo_error_dark.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_tweet_photo_error_light.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_tweet_photo_error_light.png
deleted file mode 100644
index 1ed7f38d..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_tweet_photo_error_light.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_tweet_verified.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_tweet_verified.png
deleted file mode 100644
index 3646e856..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_tweet_verified.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_pause.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_pause.png
deleted file mode 100644
index 1cb41e1c..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_pause.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_pause_pressed.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_pause_pressed.png
deleted file mode 100644
index 1ea66c70..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_pause_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_play.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_play.png
deleted file mode 100644
index a6e68a7b..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_play.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_play_pressed.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_play_pressed.png
deleted file mode 100644
index 07c9f2c5..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_play_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_replay.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_replay.png
deleted file mode 100644
index 194d15f7..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_replay.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_replay_pressed.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_replay_pressed.png
deleted file mode 100644
index 1570a17e..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_video_replay_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_vine_badge.png b/tweet-ui/src/main/res/drawable-hdpi/tw__ic_vine_badge.png
deleted file mode 100644
index 5e50ffa3..00000000
Binary files a/tweet-ui/src/main/res/drawable-hdpi/tw__ic_vine_badge.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__action_heart_off_default.png b/tweet-ui/src/main/res/drawable-mdpi/tw__action_heart_off_default.png
deleted file mode 100644
index 4f39ebeb..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__action_heart_off_default.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__action_heart_on_default.png b/tweet-ui/src/main/res/drawable-mdpi/tw__action_heart_on_default.png
deleted file mode 100644
index 860ce50d..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__action_heart_on_default.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_gif_badge.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_gif_badge.png
deleted file mode 100644
index 2a368fb5..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_gif_badge.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_inline_share.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_inline_share.png
deleted file mode 100644
index e2350a34..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_inline_share.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_logo_blue.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_logo_blue.png
deleted file mode 100644
index 695512f0..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_logo_blue.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_logo_white.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_logo_white.png
deleted file mode 100644
index b7e4f7c9..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_logo_white.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_play_default.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_play_default.png
deleted file mode 100644
index b3be264c..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_play_default.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_play_pressed.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_play_pressed.png
deleted file mode 100644
index 7db94db5..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_play_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_retweet_dark.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_retweet_dark.png
deleted file mode 100644
index 8243c452..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_retweet_dark.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_retweet_light.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_retweet_light.png
deleted file mode 100644
index 57db5fbf..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_retweet_light.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_seekbar_bg.9.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_seekbar_bg.9.png
deleted file mode 100644
index a7a01558..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_seekbar_bg.9.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_seekbar_progress_bg.9.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_seekbar_progress_bg.9.png
deleted file mode 100644
index 557983be..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_seekbar_progress_bg.9.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_seekbar_secondary_bg.9.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_seekbar_secondary_bg.9.png
deleted file mode 100644
index d33766d6..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_seekbar_secondary_bg.9.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_tweet_photo_error_dark.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_tweet_photo_error_dark.png
deleted file mode 100644
index eec65054..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_tweet_photo_error_dark.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_tweet_photo_error_light.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_tweet_photo_error_light.png
deleted file mode 100644
index ea57fc32..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_tweet_photo_error_light.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_tweet_verified.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_tweet_verified.png
deleted file mode 100644
index 4b9a8135..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_tweet_verified.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_pause.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_pause.png
deleted file mode 100644
index 76b99484..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_pause.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_pause_pressed.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_pause_pressed.png
deleted file mode 100644
index 06ab0fbe..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_pause_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_play.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_play.png
deleted file mode 100644
index 0fbc5199..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_play.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_play_pressed.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_play_pressed.png
deleted file mode 100644
index f02bb141..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_play_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_replay.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_replay.png
deleted file mode 100644
index c6f2c394..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_replay.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_replay_pressed.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_replay_pressed.png
deleted file mode 100644
index 7e1e5398..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_video_replay_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_vine_badge.png b/tweet-ui/src/main/res/drawable-mdpi/tw__ic_vine_badge.png
deleted file mode 100644
index 4aab0abd..00000000
Binary files a/tweet-ui/src/main/res/drawable-mdpi/tw__ic_vine_badge.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-v18/tw__quote_tweet_border.xml b/tweet-ui/src/main/res/drawable-v18/tw__quote_tweet_border.xml
deleted file mode 100644
index ea98d654..00000000
--- a/tweet-ui/src/main/res/drawable-v18/tw__quote_tweet_border.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <solid android:color="@android:color/transparent"/>
-    <stroke
-        android:width="@dimen/tw__quote_tweet_border_width"
-        android:color="@color/tw__light_gray" />
-    <corners android:radius="@dimen/tw__media_view_radius"/>
-</shape>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable-v21/tw__like_action.xml b/tweet-ui/src/main/res/drawable-v21/tw__like_action.xml
deleted file mode 100644
index 32c0b997..00000000
--- a/tweet-ui/src/main/res/drawable-v21/tw__like_action.xml
+++ /dev/null
@@ -1,218 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<animated-selector xmlns:android="http://schemas.android.com/apk/res/android"
-        xmlns:twitter="http://schemas.android.com/apk/res-auto">
-
-    <item
-        android:id="@+id/heart_on"
-        twitter:state_toggled_on="true">
-        <bitmap android:src="@drawable/tw__action_heart_on_default"/>
-    </item>
-
-    <item
-        android:id="@+id/heart_off">
-        <bitmap android:src="@drawable/tw__action_heart_off_default"/>
-    </item>
-
-    <transition
-        android:fromId="@+id/heart_off"
-        android:toId="@+id/heart_on">
-        <animation-list>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00000"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00001"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00002"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00003"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00004"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00005"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00006"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00007"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00008"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00009"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00010"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00011"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00012"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00013"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00014"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00015"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00016"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00017"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00018"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00019"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00020"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00021"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00022"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00023"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00024"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00025"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00026"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00027"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00028"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00029"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00030"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00031"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00032"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00033"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00034"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00035"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00036"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00037"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00038"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00039"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00040"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00041"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00042"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00043"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00044"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00045"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00046"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00047"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00048"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00049"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00050"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00051"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00052"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00053"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00054"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00055"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00056"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00057"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00058"/>
-            </item>
-            <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00059"/>
-            </item>
-        </animation-list>
-    </transition>
-</animated-selector>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__action_heart_off_default.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__action_heart_off_default.png
deleted file mode 100644
index 8bbd4bf4..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__action_heart_off_default.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__action_heart_on_default.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__action_heart_on_default.png
deleted file mode 100644
index 8d0bb19e..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__action_heart_on_default.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00000.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00000.png
deleted file mode 100644
index f111c058..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00000.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00001.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00001.png
deleted file mode 100644
index 4d765b4d..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00001.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00002.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00002.png
deleted file mode 100644
index 9d3cdab2..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00002.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00003.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00003.png
deleted file mode 100644
index 24a6d31a..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00003.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00004.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00004.png
deleted file mode 100644
index 00b3af94..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00004.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00005.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00005.png
deleted file mode 100644
index 917e4b4d..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00005.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00006.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00006.png
deleted file mode 100644
index f3fc82ee..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00006.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00007.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00007.png
deleted file mode 100644
index c16c5ac0..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00007.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00008.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00008.png
deleted file mode 100644
index a3cd18eb..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00008.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00009.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00009.png
deleted file mode 100644
index 04528ffd..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00009.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00010.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00010.png
deleted file mode 100644
index 50a2a875..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00010.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00011.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00011.png
deleted file mode 100644
index 8359139b..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00011.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00012.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00012.png
deleted file mode 100644
index acc46ce5..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00012.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00013.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00013.png
deleted file mode 100644
index 6add7bfc..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00013.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00014.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00014.png
deleted file mode 100644
index cbb34cd7..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00014.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00015.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00015.png
deleted file mode 100644
index fa5583dd..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00015.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00016.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00016.png
deleted file mode 100644
index 6993740c..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00016.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00017.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00017.png
deleted file mode 100644
index b93a7f90..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00017.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00018.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00018.png
deleted file mode 100644
index dc7e0bc5..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00018.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00019.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00019.png
deleted file mode 100644
index d816a523..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00019.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00020.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00020.png
deleted file mode 100644
index 61de2774..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00020.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00021.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00021.png
deleted file mode 100644
index 6df56b17..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00021.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00022.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00022.png
deleted file mode 100644
index 1033cb1e..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00022.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00023.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00023.png
deleted file mode 100644
index 073ce3ec..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00023.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00024.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00024.png
deleted file mode 100644
index 744db89a..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00024.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00025.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00025.png
deleted file mode 100644
index cbc0666d..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00025.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00026.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00026.png
deleted file mode 100644
index 07a9da11..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00026.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00027.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00027.png
deleted file mode 100644
index e0f879b2..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00027.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00028.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00028.png
deleted file mode 100644
index 26c731a1..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00028.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00029.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00029.png
deleted file mode 100644
index dccd3e04..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00029.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00030.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00030.png
deleted file mode 100644
index a6a0e8ec..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00030.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00031.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00031.png
deleted file mode 100644
index 02b5a64b..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00031.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00032.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00032.png
deleted file mode 100644
index 1925e9bb..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00032.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00033.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00033.png
deleted file mode 100644
index c829c3cb..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00033.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00034.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00034.png
deleted file mode 100644
index 54e1cecf..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00034.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00035.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00035.png
deleted file mode 100644
index bb1f9c49..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00035.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00036.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00036.png
deleted file mode 100644
index cf46813b..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00036.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00037.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00037.png
deleted file mode 100644
index 1a89d2d3..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00037.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00038.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00038.png
deleted file mode 100644
index 86e64e4c..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00038.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00039.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00039.png
deleted file mode 100644
index e6b735d3..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00039.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00040.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00040.png
deleted file mode 100644
index eda93272..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00040.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00041.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00041.png
deleted file mode 100644
index 99951aed..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00041.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00042.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00042.png
deleted file mode 100644
index ea119edd..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00042.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00043.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00043.png
deleted file mode 100644
index 1ce3ebe0..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00043.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00044.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00044.png
deleted file mode 100644
index 679c086d..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00044.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00045.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00045.png
deleted file mode 100644
index b352498b..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00045.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00046.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00046.png
deleted file mode 100644
index 60c81f5f..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00046.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00047.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00047.png
deleted file mode 100644
index 9063b3f7..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00047.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00048.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00048.png
deleted file mode 100644
index ad58f245..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00048.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00049.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00049.png
deleted file mode 100644
index 994a34e9..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00049.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00050.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00050.png
deleted file mode 100644
index 43ccfe3e..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00050.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00051.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00051.png
deleted file mode 100644
index 1e652409..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00051.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00052.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00052.png
deleted file mode 100644
index 61df1c56..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00052.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00053.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00053.png
deleted file mode 100644
index 484815c4..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00053.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00054.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00054.png
deleted file mode 100644
index f3064b93..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00054.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00055.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00055.png
deleted file mode 100644
index 4bd16953..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00055.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00056.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00056.png
deleted file mode 100644
index 54301bb5..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00056.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00057.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00057.png
deleted file mode 100644
index 48e1d7ea..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00057.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00058.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00058.png
deleted file mode 100644
index 102e0802..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00058.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00059.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00059.png
deleted file mode 100644
index da6eea10..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__heart_animation_detail_60fps_00059.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_gif_badge.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_gif_badge.png
deleted file mode 100644
index ffbbc978..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_gif_badge.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_inline_share.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_inline_share.png
deleted file mode 100644
index 7779cbfc..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_inline_share.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_logo_blue.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_logo_blue.png
deleted file mode 100644
index dc53eef1..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_logo_blue.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_logo_white.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_logo_white.png
deleted file mode 100644
index bbfbee7f..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_logo_white.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_play_default.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_play_default.png
deleted file mode 100644
index bd1036a9..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_play_default.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_play_pressed.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_play_pressed.png
deleted file mode 100644
index af40dfae..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_play_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_retweet_dark.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_retweet_dark.png
deleted file mode 100644
index dd9aa937..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_retweet_dark.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_retweet_light.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_retweet_light.png
deleted file mode 100644
index 5a33b9ac..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_retweet_light.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_seekbar_bg.9.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_seekbar_bg.9.png
deleted file mode 100644
index 8e6099ed..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_seekbar_bg.9.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_seekbar_progress_bg.9.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_seekbar_progress_bg.9.png
deleted file mode 100644
index e345a203..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_seekbar_progress_bg.9.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_seekbar_secondary_bg.9.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_seekbar_secondary_bg.9.png
deleted file mode 100644
index b80328c8..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_seekbar_secondary_bg.9.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_tweet_photo_error_dark.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_tweet_photo_error_dark.png
deleted file mode 100644
index c14e96c9..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_tweet_photo_error_dark.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_tweet_photo_error_light.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_tweet_photo_error_light.png
deleted file mode 100644
index 0bfc026c..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_tweet_photo_error_light.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_tweet_verified.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_tweet_verified.png
deleted file mode 100644
index b8a32c96..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_tweet_verified.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_pause.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_pause.png
deleted file mode 100644
index c3599639..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_pause.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_pause_pressed.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_pause_pressed.png
deleted file mode 100644
index b424575e..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_pause_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_play.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_play.png
deleted file mode 100644
index 048f86af..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_play.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_play_pressed.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_play_pressed.png
deleted file mode 100644
index 228ddc67..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_play_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_replay.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_replay.png
deleted file mode 100644
index 1961b092..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_replay.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_replay_pressed.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_replay_pressed.png
deleted file mode 100644
index fc87a311..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_video_replay_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_vine_badge.png b/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_vine_badge.png
deleted file mode 100644
index 09138238..00000000
Binary files a/tweet-ui/src/main/res/drawable-xhdpi/tw__ic_vine_badge.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__action_heart_off_default.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__action_heart_off_default.png
deleted file mode 100644
index 2982aa85..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__action_heart_off_default.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__action_heart_on_default.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__action_heart_on_default.png
deleted file mode 100644
index 3c173c91..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__action_heart_on_default.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_gif_badge.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_gif_badge.png
deleted file mode 100644
index 76d830be..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_gif_badge.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_inline_share.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_inline_share.png
deleted file mode 100644
index d5fdf5a1..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_inline_share.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_logo_blue.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_logo_blue.png
deleted file mode 100644
index 66297aca..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_logo_blue.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_logo_white.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_logo_white.png
deleted file mode 100644
index 9d039f5e..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_logo_white.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_play_default.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_play_default.png
deleted file mode 100644
index 063e6f87..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_play_default.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_play_pressed.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_play_pressed.png
deleted file mode 100644
index a10b4584..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_play_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_retweet_dark.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_retweet_dark.png
deleted file mode 100644
index 0707a13e..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_retweet_dark.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_retweet_light.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_retweet_light.png
deleted file mode 100644
index 4dda2589..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_retweet_light.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_seekbar_bg.9.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_seekbar_bg.9.png
deleted file mode 100644
index 00f570f8..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_seekbar_bg.9.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_seekbar_progress_bg.9.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_seekbar_progress_bg.9.png
deleted file mode 100644
index df176453..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_seekbar_progress_bg.9.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_seekbar_secondary_bg.9.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_seekbar_secondary_bg.9.png
deleted file mode 100644
index 7a7d9a4b..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_seekbar_secondary_bg.9.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_tweet_photo_error_dark.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_tweet_photo_error_dark.png
deleted file mode 100644
index 6122de19..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_tweet_photo_error_dark.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_tweet_photo_error_light.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_tweet_photo_error_light.png
deleted file mode 100644
index 2f4aff89..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_tweet_photo_error_light.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_tweet_verified.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_tweet_verified.png
deleted file mode 100644
index af8c4105..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_tweet_verified.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_pause.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_pause.png
deleted file mode 100644
index 3828d5de..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_pause.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_pause_pressed.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_pause_pressed.png
deleted file mode 100644
index 670e56d3..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_pause_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_play.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_play.png
deleted file mode 100644
index 3a985afe..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_play.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_play_pressed.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_play_pressed.png
deleted file mode 100644
index 6436eba0..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_play_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_replay.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_replay.png
deleted file mode 100644
index 2dacf3a6..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_replay.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_replay_pressed.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_replay_pressed.png
deleted file mode 100644
index 94d32e88..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_video_replay_pressed.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_vine_badge.png b/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_vine_badge.png
deleted file mode 100644
index 9da5a5d4..00000000
Binary files a/tweet-ui/src/main/res/drawable-xxhdpi/tw__ic_vine_badge.png and /dev/null differ
diff --git a/tweet-ui/src/main/res/drawable/tw__bg_media_badge.xml b/tweet-ui/src/main/res/drawable/tw__bg_media_badge.xml
deleted file mode 100644
index 60d9f919..00000000
--- a/tweet-ui/src/main/res/drawable/tw__bg_media_badge.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<shape xmlns:android="http://schemas.android.com/apk/res/android"
-    android:shape="rectangle">
-    <corners android:radius="2dp"/>
-    <solid android:color="#4d000000"/>
-</shape>
diff --git a/tweet-ui/src/main/res/drawable/tw__call_to_action.xml b/tweet-ui/src/main/res/drawable/tw__call_to_action.xml
deleted file mode 100644
index 8ef32796..00000000
--- a/tweet-ui/src/main/res/drawable/tw__call_to_action.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<shape xmlns:android="http://schemas.android.com/apk/res/android" >
-    <stroke
-        android:width="@dimen/tw__cta_border_size"
-        android:color="@color/tw__cta_border_color"/>
-
-    <solid android:color="@android:color/transparent"/>
-
-    <corners android:radius="@dimen/tw__cta_radius"/>
-</shape>
diff --git a/tweet-ui/src/main/res/drawable/tw__gif_badge.xml b/tweet-ui/src/main/res/drawable/tw__gif_badge.xml
deleted file mode 100644
index adc92885..00000000
--- a/tweet-ui/src/main/res/drawable/tw__gif_badge.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:drawable="@drawable/tw__bg_media_badge"/>
-    <item
-        android:left="@dimen/tw__badge_padding"
-        android:bottom="@dimen/tw__badge_padding"
-        android:right="@dimen/tw__badge_padding"
-        android:top="@dimen/tw__badge_padding">
-        <bitmap android:src="@drawable/tw__ic_gif_badge"/>
-    </item>
-</layer-list>
diff --git a/tweet-ui/src/main/res/drawable/tw__like_action.xml b/tweet-ui/src/main/res/drawable/tw__like_action.xml
deleted file mode 100644
index 45510374..00000000
--- a/tweet-ui/src/main/res/drawable/tw__like_action.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android"
-          xmlns:twitter="http://schemas.android.com/apk/res-auto">
-    <item twitter:state_toggled_on="true"
-          android:drawable="@drawable/tw__action_heart_on_default"/>
-
-    <item android:state_enabled="false"
-          android:drawable="@drawable/tw__action_heart_off_default"/>
-</selector>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__player_overlay.xml b/tweet-ui/src/main/res/drawable/tw__player_overlay.xml
deleted file mode 100644
index cb5c8e7d..00000000
--- a/tweet-ui/src/main/res/drawable/tw__player_overlay.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_pressed="true">
-        <bitmap android:src="@drawable/tw__ic_play_pressed" android:gravity="center"/>
-    </item>
-    <item>
-        <bitmap android:src="@drawable/tw__ic_play_default" android:gravity="center"/>
-    </item>
-</selector>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__quote_tweet_border.xml b/tweet-ui/src/main/res/drawable/tw__quote_tweet_border.xml
deleted file mode 100644
index 6dd55ac9..00000000
--- a/tweet-ui/src/main/res/drawable/tw__quote_tweet_border.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <solid android:color="@android:color/transparent"/>
-    <stroke
-        android:width="@dimen/tw__quote_tweet_border_width"
-        android:color="@color/tw__light_gray" />
-</shape>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__seekbar_thumb.xml b/tweet-ui/src/main/res/drawable/tw__seekbar_thumb.xml
deleted file mode 100644
index b0e920c7..00000000
--- a/tweet-ui/src/main/res/drawable/tw__seekbar_thumb.xml
+++ /dev/null
@@ -1,51 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-    <item>
-        <shape android:shape="rectangle">
-            <solid android:color="@android:color/transparent"/>
-            <size
-                android:height="@dimen/tw__seekbar_thumb_size"
-                android:width="@dimen/tw__seekbar_thumb_size" />
-        </shape>
-    </item>
-    <!-- pre-Lollipop does not like padding on root layer-lists so we need to set the position
-        explicitly -->
-    <item
-        android:left="@dimen/tw__seekbar_thumb_outer_padding"
-        android:top="@dimen/tw__seekbar_thumb_outer_padding"
-        android:right="@dimen/tw__seekbar_thumb_outer_padding"
-        android:bottom="@dimen/tw__seekbar_thumb_outer_padding">
-        <shape android:shape="oval">
-            <solid
-                android:color="@color/tw__seekbar_thumb_outer_color"/>
-        </shape>
-    </item>
-    <!-- pre-Lollipop does not like padding on root layer-lists so we need to set the position
-            explicitly -->
-    <item
-        android:left="@dimen/tw__seekbar_thumb_inner_padding"
-        android:top="@dimen/tw__seekbar_thumb_inner_padding"
-        android:right="@dimen/tw__seekbar_thumb_inner_padding"
-        android:bottom="@dimen/tw__seekbar_thumb_inner_padding">
-        <shape android:shape="oval">
-            <solid
-                android:color="@color/tw__seekbar_thumb_inner_color"/>
-        </shape>
-    </item>
-</layer-list>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__share_action.xml b/tweet-ui/src/main/res/drawable/tw__share_action.xml
deleted file mode 100644
index 50df9a39..00000000
--- a/tweet-ui/src/main/res/drawable/tw__share_action.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:drawable="@drawable/tw__ic_inline_share"/>
-</selector>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__video_pause_btn.xml b/tweet-ui/src/main/res/drawable/tw__video_pause_btn.xml
deleted file mode 100644
index ec1bee77..00000000
--- a/tweet-ui/src/main/res/drawable/tw__video_pause_btn.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_pressed="true"
-          android:drawable="@drawable/tw__ic_video_pause_pressed"/>
-    <item android:drawable="@drawable/tw__ic_video_pause"/>
-</selector>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__video_play_btn.xml b/tweet-ui/src/main/res/drawable/tw__video_play_btn.xml
deleted file mode 100644
index e45598af..00000000
--- a/tweet-ui/src/main/res/drawable/tw__video_play_btn.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_pressed="true"
-          android:drawable="@drawable/tw__ic_video_play_pressed"/>
-    <item android:drawable="@drawable/tw__ic_video_play"/>
-</selector>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__video_replay_btn.xml b/tweet-ui/src/main/res/drawable/tw__video_replay_btn.xml
deleted file mode 100644
index a9c90eac..00000000
--- a/tweet-ui/src/main/res/drawable/tw__video_replay_btn.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_pressed="true"
-          android:drawable="@drawable/tw__ic_video_replay_pressed"/>
-    <item android:drawable="@drawable/tw__ic_video_replay"/>
-</selector>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__video_seekbar.xml b/tweet-ui/src/main/res/drawable/tw__video_seekbar.xml
deleted file mode 100644
index 7d73019f..00000000
--- a/tweet-ui/src/main/res/drawable/tw__video_seekbar.xml
+++ /dev/null
@@ -1,36 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <item
-        android:id="@android:id/background"
-        android:drawable="@drawable/tw__ic_seekbar_bg"/>
-
-    <item android:id="@android:id/secondaryProgress">
-        <scale
-            android:drawable="@drawable/tw__ic_seekbar_secondary_bg"
-            android:scaleWidth="100%"/>
-    </item>
-
-    <item android:id="@android:id/progress">
-        <scale
-            android:drawable="@drawable/tw__ic_seekbar_progress_bg"
-            android:scaleWidth="100%"/>
-    </item>
-
-</layer-list>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__vine_badge.xml b/tweet-ui/src/main/res/drawable/tw__vine_badge.xml
deleted file mode 100644
index ebb03414..00000000
--- a/tweet-ui/src/main/res/drawable/tw__vine_badge.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:drawable="@drawable/tw__bg_media_badge"/>
-    <item
-        android:left="@dimen/tw__badge_padding"
-        android:bottom="@dimen/tw__badge_padding"
-        android:right="@dimen/tw__badge_padding"
-        android:top="@dimen/tw__badge_padding">
-        <bitmap android:src="@drawable/tw__ic_vine_badge"/>
-    </item>
-</layer-list>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/layout/tw__action_bar.xml b/tweet-ui/src/main/res/layout/tw__action_bar.xml
deleted file mode 100644
index a88f064c..00000000
--- a/tweet-ui/src/main/res/layout/tw__action_bar.xml
+++ /dev/null
@@ -1,43 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<com.twitter.sdk.android.tweetui.TweetActionBarView
-    android:id="@+id/tw__tweet_action_bar"
-    style="@style/tw__TweetFillWidth"
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    xmlns:twitter="http://schemas.android.com/apk/res-auto"
-    android:orientation="horizontal"
-    android:visibility="gone"
-    tools:visibility="visible">
-
-    <com.twitter.sdk.android.tweetui.ToggleImageButton
-        android:id="@+id/tw__tweet_like_button"
-        style="@style/tw__TweetActionButton.Heart"
-        android:src="@drawable/tw__like_action"
-        twitter:contentDescriptionOff="@string/tw__like_tweet"
-        twitter:contentDescriptionOn="@string/tw__liked_tweet"
-        android:layout_marginRight="@dimen/tw__tweet_action_button_spacing"
-        android:layout_marginEnd="@dimen/tw__tweet_action_button_spacing"/>
-
-    <ImageButton
-        android:id="@+id/tw__tweet_share_button"
-        style="@style/tw__TweetActionButton.Share"
-        android:contentDescription="@string/tw__share_tweet"
-        android:src="@drawable/tw__share_action"/>
-
-</com.twitter.sdk.android.tweetui.TweetActionBarView>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/layout/tw__gallery_activity.xml b/tweet-ui/src/main/res/layout/tw__gallery_activity.xml
deleted file mode 100644
index f49bc651..00000000
--- a/tweet-ui/src/main/res/layout/tw__gallery_activity.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<merge xmlns:android="http://schemas.android.com/apk/res/android"
-       android:layout_width="match_parent"
-       android:layout_height="match_parent">
-
-    <com.twitter.sdk.android.tweetui.internal.ViewPagerFixed
-        android:id="@+id/tw__view_pager"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"/>
-</merge>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/layout/tw__media_badge.xml b/tweet-ui/src/main/res/layout/tw__media_badge.xml
deleted file mode 100644
index 129703f7..00000000
--- a/tweet-ui/src/main/res/layout/tw__media_badge.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<merge
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <ImageView
-        tools:ignore="ContentDescription"
-        android:id="@+id/tw__gif_badge"
-        style="@style/tw__Badge"/>
-
-    <TextView
-        android:id="@+id/tw__video_duration"
-        style="@style/tw__Badge.VideoDuration" />
-</merge>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/layout/tw__player_activity.xml b/tweet-ui/src/main/res/layout/tw__player_activity.xml
deleted file mode 100644
index 818c782e..00000000
--- a/tweet-ui/src/main/res/layout/tw__player_activity.xml
+++ /dev/null
@@ -1,49 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<merge xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <com.twitter.sdk.android.tweetui.internal.VideoView
-        android:id="@+id/video_view"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_gravity="center"/>
-
-    <ProgressBar
-        android:id="@+id/video_progress_view"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="center"/>
-
-    <com.twitter.sdk.android.tweetui.internal.VideoControlView
-        android:id="@+id/video_control_view"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_gravity="bottom"/>
-
-    <TextView
-        android:id="@+id/call_to_action_view"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="top|center"
-        android:padding="@dimen/tw__cta_padding"
-        android:layout_marginTop="@dimen/tw__cta_margin_top"
-        android:textSize="@dimen/tw__text_size_medium"
-        android:textColor="@color/tw__cta_text_color"
-        android:background="@drawable/tw__call_to_action"
-        android:visibility="gone"/>
-</merge>
diff --git a/tweet-ui/src/main/res/layout/tw__tweet.xml b/tweet-ui/src/main/res/layout/tw__tweet.xml
deleted file mode 100644
index f493c16c..00000000
--- a/tweet-ui/src/main/res/layout/tw__tweet.xml
+++ /dev/null
@@ -1,112 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<merge xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    style="@style/tw__TweetFillWidth"
-    tools:parentTag="RelativeLayout">
-
-    <com.twitter.sdk.android.tweetui.internal.AspectRatioFrameLayout
-        android:id="@+id/tw__aspect_ratio_media_container"
-        style="@style/tw__TweetMediaContainer">
-
-        <com.twitter.sdk.android.tweetui.internal.TweetMediaView
-            android:id="@+id/tweet_media_view"
-            style="@style/tw__TweetMedia"/>
-
-        <com.twitter.sdk.android.tweetui.internal.MediaBadgeView
-            android:id="@+id/tw__tweet_media_badge"
-            style="@style/tw__TweetBadge" />
-    </com.twitter.sdk.android.tweetui.internal.AspectRatioFrameLayout>
-
-    <TextView
-        android:id="@+id/tw__tweet_retweeted_by"
-        android:layout_below="@id/tw__aspect_ratio_media_container"
-        style="@style/tw__TweetRetweetedBy"
-        tools:text="Retweeted by Jack"
-        tools:visibility="visible"/>
-
-    <ImageView
-        tools:ignore="ContentDescription"
-        android:id="@+id/tw__tweet_author_avatar"
-        style="@style/tw__TweetAvatar"
-        android:layout_below="@id/tw__tweet_retweeted_by"
-        tools:src="#CCCCCC"/>
-
-    <TextView
-        android:id="@+id/tw__tweet_author_full_name"
-        style="@style/tw__TweetFullName"
-        android:layout_below="@id/tw__tweet_retweeted_by"
-        android:layout_toRightOf="@id/tw__tweet_author_avatar"
-        android:layout_toEndOf="@id/tw__tweet_author_avatar"
-        tools:drawableRight="@drawable/tw__ic_tweet_verified"
-        tools:drawableEnd="@drawable/tw__ic_tweet_verified"
-        tools:text="Jack"/>
-
-    <ImageView
-        tools:ignore="ContentDescription"
-        android:id="@+id/tw__twitter_logo"
-        style="@style/tw__TwitterLogo"
-        android:layout_alignParentRight="true"
-        android:layout_alignParentEnd="true"
-        android:layout_below="@id/tw__tweet_retweeted_by"/>
-
-    <TextView
-        android:id="@+id/tw__tweet_author_screen_name"
-        style="@style/tw__TweetScreenName"
-        android:layout_below="@id/tw__tweet_author_full_name"
-        android:layout_alignBottom="@id/tw__tweet_author_avatar"
-        android:layout_toRightOf="@id/tw__tweet_author_avatar"
-        android:layout_toEndOf="@id/tw__tweet_author_avatar"
-        tools:text="\@jack"/>
-
-    <TextView
-        android:id="@+id/tw__tweet_timestamp"
-        style="@style/tw__TweetTimestamp"
-        android:layout_below="@id/tw__tweet_author_full_name"
-        android:layout_alignBottom="@id/tw__tweet_author_screen_name"
-        android:layout_toRightOf="@id/tw__tweet_author_screen_name"
-        android:layout_toEndOf="@id/tw__tweet_author_screen_name"
-        tools:text="• 03/21/2006"/>
-
-    <TextView
-        android:id="@+id/tw__tweet_text"
-        style="@style/tw__TweetText"
-        android:layout_below="@id/tw__tweet_author_avatar"
-        android:visibility="gone"
-        tools:text="just setting up my twttr"
-        tools:visibility="visible"/>
-
-    <FrameLayout
-        android:id="@+id/quote_tweet_holder"
-        style="@style/tw__QuoteTweetContainer"
-        android:layout_below="@id/tw__tweet_text"/>
-
-    <include
-        style="@style/tw__TweetActionButtonBar"
-        layout="@layout/tw__action_bar"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_below="@id/quote_tweet_holder"/>
-
-    <View
-        android:id="@+id/bottom_separator"
-        android:layout_width="match_parent"
-        android:layout_height="@dimen/tw__tweet_container_bottom_separator"
-        android:layout_below="@id/quote_tweet_holder"/>
-
-</merge>
diff --git a/tweet-ui/src/main/res/layout/tw__tweet_compact.xml b/tweet-ui/src/main/res/layout/tw__tweet_compact.xml
deleted file mode 100644
index 15eaf475..00000000
--- a/tweet-ui/src/main/res/layout/tw__tweet_compact.xml
+++ /dev/null
@@ -1,118 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<!--Tweet container-->
-<merge xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    style="@style/tw__TweetFillWidth"
-    tools:parentTag="RelativeLayout">
-
-    <TextView
-        android:id="@+id/tw__tweet_retweeted_by"
-        android:layout_alignLeft="@+id/tw__author_attribution"
-        android:layout_alignStart="@+id/tw__author_attribution"
-        style="@style/tw__TweetRetweetedBy.Compact"
-        tools:text="Retweeted by Jack"
-        tools:visibility="visible"/>
-
-    <ImageView
-        tools:ignore="ContentDescription"
-        android:id="@+id/tw__tweet_author_avatar"
-        android:layout_below="@id/tw__tweet_retweeted_by"
-        style="@style/tw__TweetAvatar.Compact"
-        tools:src="#CCCCCC"/>
-
-    <!--Name and timestamp don't ellipsize, but @username in the middle does ellipsize-->
-    <LinearLayout
-        android:id="@+id/tw__author_attribution"
-        style="@style/tw__CompactAttributionLine"
-        android:layout_below="@id/tw__tweet_retweeted_by"
-        android:layout_toRightOf="@id/tw__tweet_author_avatar"
-        android:layout_toEndOf="@id/tw__tweet_author_avatar">
-
-        <TextView
-            android:id="@+id/tw__tweet_author_full_name"
-            style="@style/tw__TweetFullName.Compact"
-            tools:text="Jack"/>
-
-        <TextView
-            android:id="@+id/tw__tweet_author_screen_name"
-            style="@style/tw__TweetScreenName.Compact"
-            tools:text="\@jack"/>
-
-        <TextView
-            android:id="@+id/tw__tweet_timestamp"
-            style="@style/tw__TweetTimestamp.Compact"
-            tools:text="• 03/21/2006"/>
-
-    </LinearLayout>
-
-    <ImageView
-        tools:ignore="ContentDescription"
-        android:id="@+id/tw__twitter_logo"
-        style="@style/tw__TwitterLogo.Compact"
-        android:layout_below="@id/tw__tweet_retweeted_by"
-        android:layout_alignParentRight="true"
-        android:layout_alignParentEnd="true"/>
-
-    <com.twitter.sdk.android.tweetui.internal.AspectRatioFrameLayout
-        android:id="@+id/tw__aspect_ratio_media_container"
-        style="@style/tw__TweetMediaContainer.Compact"
-        android:layout_alignLeft="@id/tw__author_attribution"
-        android:layout_alignStart="@id/tw__author_attribution"
-        android:layout_below="@id/tw__author_attribution" >
-
-        <com.twitter.sdk.android.tweetui.internal.TweetMediaView
-            android:id="@+id/tweet_media_view"
-            style="@style/tw__TweetMedia"/>
-
-        <com.twitter.sdk.android.tweetui.internal.MediaBadgeView
-            android:id="@+id/tw__tweet_media_badge"
-            style="@style/tw__TweetBadge" />
-    </com.twitter.sdk.android.tweetui.internal.AspectRatioFrameLayout>
-
-    <TextView
-        android:id="@+id/tw__tweet_text"
-        style="@style/tw__TweetText.Compact"
-        android:layout_below="@id/tw__aspect_ratio_media_container"
-        android:layout_toRightOf="@id/tw__tweet_author_avatar"
-        android:layout_toEndOf="@id/tw__tweet_author_avatar"
-        tools:text="just setting up my twttr"/>
-
-    <FrameLayout
-        android:id="@+id/quote_tweet_holder"
-        style="@style/tw__QuoteTweetContainer.Compact"
-        android:layout_below="@id/tw__tweet_text"
-        android:layout_toEndOf="@id/tw__tweet_author_avatar"
-        android:layout_toRightOf="@id/tw__tweet_author_avatar" />
-
-    <include
-        style="@style/tw__TweetActionButtonBar.Compact"
-        layout="@layout/tw__action_bar"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_below="@id/quote_tweet_holder"
-        android:layout_toEndOf="@id/tw__tweet_author_avatar"
-        android:layout_toRightOf="@id/tw__tweet_author_avatar"/>
-
-    <View
-        android:id="@+id/bottom_separator"
-        android:layout_width="match_parent"
-        android:layout_height="@dimen/tw__compact_tweet_container_bottom_separator"
-        android:layout_below="@id/quote_tweet_holder"/>
-
-</merge>
diff --git a/tweet-ui/src/main/res/layout/tw__tweet_quote.xml b/tweet-ui/src/main/res/layout/tw__tweet_quote.xml
deleted file mode 100644
index e6f75f08..00000000
--- a/tweet-ui/src/main/res/layout/tw__tweet_quote.xml
+++ /dev/null
@@ -1,67 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<!--Tweet container-->
-<merge xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    style="@style/tw__TweetFillWidth"
-    tools:parentTag="RelativeLayout">
-
-    <!--Name doesn't ellipsize, but @username does ellipsize-->
-    <LinearLayout
-        android:id="@+id/tw__author_attribution"
-        style="@style/tw__QuoteAttributionLine"
-        android:layout_alignParentLeft="true"
-        android:layout_alignParentStart="true"
-        android:layout_alignParentTop="true">
-
-        <TextView
-            android:id="@+id/tw__tweet_author_full_name"
-            style="@style/tw__TweetFullName.Compact"
-            tools:text="Jack" />
-
-        <TextView
-            android:id="@+id/tw__tweet_author_screen_name"
-            style="@style/tw__TweetScreenName.Compact"
-            tools:text="\@jack" />
-    </LinearLayout>
-
-    <TextView
-        android:id="@+id/tw__tweet_text"
-        style="@style/tw__TweetText.Quote"
-        android:layout_alignParentEnd="true"
-        android:layout_alignParentRight="true"
-        android:layout_below="@+id/tw__author_attribution"
-        tools:text="just setting up my twttr" />
-
-    <com.twitter.sdk.android.tweetui.internal.AspectRatioFrameLayout
-        android:id="@+id/tw__aspect_ratio_media_container"
-        style="@style/tw__TweetMediaContainer.Quote"
-        android:layout_alignParentEnd="true"
-        android:layout_alignParentRight="true"
-        android:layout_below="@id/tw__tweet_text">
-
-        <com.twitter.sdk.android.tweetui.internal.TweetMediaView
-            android:id="@+id/tweet_media_view"
-            style="@style/tw__TweetMedia" />
-
-        <com.twitter.sdk.android.tweetui.internal.MediaBadgeView
-            android:id="@+id/tw__tweet_media_badge"
-            style="@style/tw__TweetBadge" />
-    </com.twitter.sdk.android.tweetui.internal.AspectRatioFrameLayout>
-
-</merge>
diff --git a/tweet-ui/src/main/res/layout/tw__video_control.xml b/tweet-ui/src/main/res/layout/tw__video_control.xml
deleted file mode 100644
index a108fa4f..00000000
--- a/tweet-ui/src/main/res/layout/tw__video_control.xml
+++ /dev/null
@@ -1,68 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="@dimen/tw__video_control_height">
-
-    <ImageButton
-        android:id="@+id/tw__state_control"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_alignParentLeft="true"
-        android:layout_centerVertical="true"
-        android:background="@null"
-        android:paddingTop="4dp"
-        android:src="@drawable/tw__video_pause_btn"
-        android:contentDescription="@string/tw__pause"/>
-
-    <TextView
-        android:id="@+id/tw__current_time"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_centerVertical="true"
-        android:layout_toRightOf="@id/tw__state_control"
-        android:textColor="@android:color/white"
-        android:textSize="@dimen/tw__video_control_text_size"
-        tools:text="0:01"/>
-
-    <SeekBar
-        tools:ignore="UnusedAttribute"
-        android:id="@+id/tw__progress"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_centerVertical="true"
-        android:layout_toLeftOf="@+id/tw__duration"
-        android:layout_toRightOf="@+id/tw__current_time"
-        android:background="@null"
-        android:splitTrack="false"
-        android:progressDrawable="@drawable/tw__video_seekbar"
-        android:thumb="@drawable/tw__seekbar_thumb"/>
-
-    <TextView
-        android:id="@+id/tw__duration"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_alignParentRight="true"
-        android:layout_centerVertical="true"
-        android:textColor="@android:color/white"
-        android:textSize="@dimen/tw__video_control_text_size"
-        android:layout_marginRight="10dp"
-        tools:text="1:00"/>
-</RelativeLayout>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-ar/const_strings.xml b/tweet-ui/src/main/res/values-ar/const_strings.xml
deleted file mode 100644
index ad9f5578..00000000
--- a/tweet-ui/src/main/res/values-ar/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d/M/y</string>
-    <string name="tw__relative_date_format_short">d MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-ar/plurals.xml b/tweet-ui/src/main/res/values-ar/plurals.xml
deleted file mode 100644
index dbe7a14b..00000000
--- a/tweet-ui/src/main/res/values-ar/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 س</item>
-        <item quantity="other">%d س</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 د</item>
-        <item quantity="other">%d د</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 ث</item>
-        <item quantity="other">%d ث</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ar/strings.xml b/tweet-ui/src/main/res/values-ar/strings.xml
deleted file mode 100644
index 7bb2f945..00000000
--- a/tweet-ui/src/main/res/values-ar/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">إعجاب بالتغريدة</string>
-    <string name="tw__liked_tweet">إلغاء الإعجاب</string>
-    <string name="tw__loading_tweet">يتم تحميل التغريدة</string>
-    <string name="tw__pause">توقف</string>
-    <string name="tw__play">تشغيل</string>
-    <string name="tw__replay">إعادة التشغيل</string>
-    <string name="tw__retweeted_by_format">مُعاد تغريدها بواسطة %1$s</string>
-    <string name="tw__share_content_format">اطلع على تغريدة ‎\@%1$s\: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">تغريدة من %1$s (‎\@%2$s)</string>
-    <string name="tw__share_tweet">مشاركة التغريدة</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">تغريدة وسائط</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-bg/plurals.xml b/tweet-ui/src/main/res/values-bg/plurals.xml
deleted file mode 100644
index edede39d..00000000
--- a/tweet-ui/src/main/res/values-bg/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 ч</item>
-        <item quantity="other">%d ч</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 мин</item>
-        <item quantity="other">%d мин</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 сек</item>
-        <item quantity="other">%d сек</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-bg/strings.xml b/tweet-ui/src/main/res/values-bg/strings.xml
deleted file mode 100644
index 90c17ba5..00000000
--- a/tweet-ui/src/main/res/values-bg/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Харесване на туита</string>
-    <string name="tw__liked_tweet">Отмяна на харесването</string>
-    <string name="tw__loading_tweet">Туитът се зарежда</string>
-    <string name="tw__pause">пауза</string>
-    <string name="tw__play">пускане</string>
-    <string name="tw__replay">повторение</string>
-    <string name="tw__retweeted_by_format">Ретуитнато от %1$s</string>
-    <string name="tw__share_content_format">Виж туита на \@%1$s: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Туит от %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Споделяне на туита</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Туитване на мултимедия</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-bn/plurals.xml b/tweet-ui/src/main/res/values-bn/plurals.xml
deleted file mode 100644
index a18b292a..00000000
--- a/tweet-ui/src/main/res/values-bn/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1ঘ</item>
-        <item quantity="other">%dঘ</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1মি</item>
-        <item quantity="other">%dমি</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1সে</item>
-        <item quantity="other">%dসেকেন্ড</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-bn/strings.xml b/tweet-ui/src/main/res/values-bn/strings.xml
deleted file mode 100644
index fd145a02..00000000
--- a/tweet-ui/src/main/res/values-bn/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">টুইট পছন্দ করুন</string>
-    <string name="tw__liked_tweet">পছন্দ ফিরিয়ে নিন</string>
-    <string name="tw__loading_tweet">টুইট লোড হচ্ছে</string>
-    <string name="tw__pause">বিরতি</string>
-    <string name="tw__play">প্লে</string>
-    <string name="tw__replay">রিপ্লে</string>
-    <string name="tw__retweeted_by_format">%1$s পুনঃটুইট করেছেন</string>
-    <string name="tw__share_content_format">\@%1$s -এর টুইট দেখুন: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">%1$s (\@%2$s) থেকে টুইট</string>
-    <string name="tw__share_tweet">টুইট ভাগ করুন</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">টুইট মিডিয়া</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ca/plurals.xml b/tweet-ui/src/main/res/values-ca/plurals.xml
deleted file mode 100644
index ee8db2dc..00000000
--- a/tweet-ui/src/main/res/values-ca/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 h</item>
-        <item quantity="other">%d h</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 m</item>
-        <item quantity="other">%d m</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 s</item>
-        <item quantity="other">%d s</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ca/strings.xml b/tweet-ui/src/main/res/values-ca/strings.xml
deleted file mode 100644
index 69229e5e..00000000
--- a/tweet-ui/src/main/res/values-ca/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">M\'agrada el tuit</string>
-    <string name="tw__liked_tweet">Desfés l\'agradament</string>
-    <string name="tw__loading_tweet">S\'està carregant el tuit</string>
-    <string name="tw__pause">atura temporalment</string>
-    <string name="tw__play">reprodueix</string>
-    <string name="tw__replay">torna a reproduir</string>
-    <string name="tw__retweeted_by_format">Retuitat per %1$s</string>
-    <string name="tw__share_content_format">Dóna un cop d\'ull al tuit de \@%1$s: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tuit de %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Comparteix el tuit</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Tuit amb contingut multimèdia</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-cs/plurals.xml b/tweet-ui/src/main/res/values-cs/plurals.xml
deleted file mode 100644
index 27ed8331..00000000
--- a/tweet-ui/src/main/res/values-cs/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 h</item>
-        <item quantity="other">%d h</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 min</item>
-        <item quantity="other">%d min</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 s</item>
-        <item quantity="other">%d s</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-cs/strings.xml b/tweet-ui/src/main/res/values-cs/strings.xml
deleted file mode 100644
index d9f75a4e..00000000
--- a/tweet-ui/src/main/res/values-cs/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Lajknout Tweet</string>
-    <string name="tw__liked_tweet">Vzít lajk zpět</string>
-    <string name="tw__loading_tweet">Načítání tweetu</string>
-    <string name="tw__pause">pozastavit</string>
-    <string name="tw__play">přehrát</string>
-    <string name="tw__replay">přehrát od začátku</string>
-    <string name="tw__retweeted_by_format">Retweetnul uživatel %1$s</string>
-    <string name="tw__share_content_format">Podívejte se na tweet uživatele \@%1$s: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet od uživatele %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Sdílet tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Tweetnout média</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-da/const_strings.xml b/tweet-ui/src/main/res/values-da/const_strings.xml
deleted file mode 100644
index 9e062d91..00000000
--- a/tweet-ui/src/main/res/values-da/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d/M/y</string>
-    <string name="tw__relative_date_format_short">d. MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-da/plurals.xml b/tweet-ui/src/main/res/values-da/plurals.xml
deleted file mode 100644
index 32cd0864..00000000
--- a/tweet-ui/src/main/res/values-da/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1t</item>
-        <item quantity="other">%dt</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1m</item>
-        <item quantity="other">%dm</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1s</item>
-        <item quantity="other">%ds</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-da/strings.xml b/tweet-ui/src/main/res/values-da/strings.xml
deleted file mode 100644
index d59d8fd6..00000000
--- a/tweet-ui/src/main/res/values-da/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Like Tweet</string>
-    <string name="tw__liked_tweet">Fjern like</string>
-    <string name="tw__loading_tweet">Indlæser tweet</string>
-    <string name="tw__pause">pause</string>
-    <string name="tw__play">afspil</string>
-    <string name="tw__replay">afspil igen</string>
-    <string name="tw__retweeted_by_format">Retweetet af %1$s</string>
-    <string name="tw__share_content_format">Tjek \@%1$s\s tweet: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet fra %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Del tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Tweet-medie</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-de/const_strings.xml b/tweet-ui/src/main/res/values-de/const_strings.xml
deleted file mode 100644
index e6f35e0e..00000000
--- a/tweet-ui/src/main/res/values-de/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d.M.y</string>
-    <string name="tw__relative_date_format_short">d. MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-de/plurals.xml b/tweet-ui/src/main/res/values-de/plurals.xml
deleted file mode 100644
index 84252f1c..00000000
--- a/tweet-ui/src/main/res/values-de/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 Std.</item>
-        <item quantity="other">%d Std.</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 Min.</item>
-        <item quantity="other">%d Min.</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 Sek.</item>
-        <item quantity="other">%d Sek.</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-de/strings.xml b/tweet-ui/src/main/res/values-de/strings.xml
deleted file mode 100644
index bde0ec08..00000000
--- a/tweet-ui/src/main/res/values-de/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Tweet gefällt mir</string>
-    <string name="tw__liked_tweet">Gefällt mir nicht mehr</string>
-    <string name="tw__loading_tweet">Tweet wird geladen</string>
-    <string name="tw__pause">Pause</string>
-    <string name="tw__play">Abspielen</string>
-    <string name="tw__replay">Erneut abspielen</string>
-    <string name="tw__retweeted_by_format">Retweetet von %1$s</string>
-    <string name="tw__share_content_format">Sieh Dir den Tweet von \@%1$s an: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet von %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Tweet teilen</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Medien twittern</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-el/plurals.xml b/tweet-ui/src/main/res/values-el/plurals.xml
deleted file mode 100644
index c566b017..00000000
--- a/tweet-ui/src/main/res/values-el/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1ω</item>
-        <item quantity="other">%dω</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1λ</item>
-        <item quantity="other">%dλ</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1δ</item>
-        <item quantity="other">%dδ</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-el/strings.xml b/tweet-ui/src/main/res/values-el/strings.xml
deleted file mode 100644
index 1aedcb6d..00000000
--- a/tweet-ui/src/main/res/values-el/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Μου αρέσει αυτό το Tweet</string>
-    <string name="tw__liked_tweet">Αναίρεση επιλογής \"Μου αρέσει\"</string>
-    <string name="tw__loading_tweet">Φόρτωση Tweet</string>
-    <string name="tw__pause">παύση</string>
-    <string name="tw__play">αναπαραγωγή</string>
-    <string name="tw__replay">εκ νέου αναπαραγωγή</string>
-    <string name="tw__retweeted_by_format">Έγινε Retweet από το χρήστη %1$s</string>
-    <string name="tw__share_content_format">Δείτε το Tweet του χρήστη  \@%1$s https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet από το χρήστη %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Κοινοποίηση Tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Γράψτε ένα Tweet με πολυμέσο</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-en-rGB/const_strings.xml b/tweet-ui/src/main/res/values-en-rGB/const_strings.xml
deleted file mode 100644
index 5d6e8ad7..00000000
--- a/tweet-ui/src/main/res/values-en-rGB/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">dd/MM/y</string>
-    <string name="tw__relative_date_format_short">d MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-en-rGB/plurals.xml b/tweet-ui/src/main/res/values-en-rGB/plurals.xml
deleted file mode 100644
index b47e70aa..00000000
--- a/tweet-ui/src/main/res/values-en-rGB/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1h</item>
-        <item quantity="other">%dh</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1m</item>
-        <item quantity="other">%dm</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1s</item>
-        <item quantity="other">%ds</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-en-rGB/strings.xml b/tweet-ui/src/main/res/values-en-rGB/strings.xml
deleted file mode 100644
index b87dc1fa..00000000
--- a/tweet-ui/src/main/res/values-en-rGB/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Like Tweet</string>
-    <string name="tw__liked_tweet">Undo Like</string>
-    <string name="tw__loading_tweet">Loading Tweet</string>
-    <string name="tw__pause">pause</string>
-    <string name="tw__play">play</string>
-    <string name="tw__replay">replay</string>
-    <string name="tw__retweeted_by_format">Retweeted by %1$s</string>
-    <string name="tw__share_content_format">Check out \@%1$s\'s Tweet: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet from %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Share Tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Tweet Media</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-en-rSS/const_strings.xml b/tweet-ui/src/main/res/values-en-rSS/const_strings.xml
deleted file mode 100644
index bba1e7d9..00000000
--- a/tweet-ui/src/main/res/values-en-rSS/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">[[59353]] MM/dd/yy</string>
-    <string name="tw__relative_date_format_short">[[59352]] MMM dd</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-en-rSS/plurals.xml b/tweet-ui/src/main/res/values-en-rSS/plurals.xml
deleted file mode 100644
index ad5d04b5..00000000
--- a/tweet-ui/src/main/res/values-en-rSS/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">[[59358]] 1h</item>
-        <item quantity="other">[[59359]] %dh</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">[[59356]] 1m</item>
-        <item quantity="other">[[59357]] %dm</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">[[59354]] 1s</item>
-        <item quantity="other">[[59355]] %ds</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-en-rSS/strings.xml b/tweet-ui/src/main/res/values-en-rSS/strings.xml
deleted file mode 100644
index 9c6254e5..00000000
--- a/tweet-ui/src/main/res/values-en-rSS/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">[[141901]] Like Tweet</string>
-    <string name="tw__liked_tweet">[[141902]] Undo Like</string>
-    <string name="tw__loading_tweet">[[60974]] Loading Tweet</string>
-    <string name="tw__pause">[[147607]] pause</string>
-    <string name="tw__play">[[147606]] play</string>
-    <string name="tw__replay">[[147608]] replay</string>
-    <string name="tw__retweeted_by_format">[[99301]] Retweeted by %1$s</string>
-    <string name="tw__share_content_format">[[60977]] Check out \@%1$s\'s Tweet: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">[[60978]] Tweet from %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">[[60976]] Share Tweet</string>
-    <string name="tw__tweet_content_description">[[60975]] %1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">[[156357]] Tweet Media</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-es/const_strings.xml b/tweet-ui/src/main/res/values-es/const_strings.xml
deleted file mode 100644
index da1b5adc..00000000
--- a/tweet-ui/src/main/res/values-es/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d/M/y</string>
-    <string name="tw__relative_date_format_short">d \'de\' MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-es/plurals.xml b/tweet-ui/src/main/res/values-es/plurals.xml
deleted file mode 100644
index 4c8efb73..00000000
--- a/tweet-ui/src/main/res/values-es/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 h</item>
-        <item quantity="other">%dh</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 m</item>
-        <item quantity="other">%dm</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 s</item>
-        <item quantity="other">%ds</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-es/strings.xml b/tweet-ui/src/main/res/values-es/strings.xml
deleted file mode 100644
index cca0a0de..00000000
--- a/tweet-ui/src/main/res/values-es/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Darle Me gusta al Tweet</string>
-    <string name="tw__liked_tweet">Deshacer Me gusta</string>
-    <string name="tw__loading_tweet">Cargando Tweet</string>
-    <string name="tw__pause">pausar</string>
-    <string name="tw__play">reproducir</string>
-    <string name="tw__replay">repetir</string>
-    <string name="tw__retweeted_by_format">Retwitteado por %1$s</string>
-    <string name="tw__share_content_format">Échale un vistazo al Tweet de \@%1$s\: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet de %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Compartir Tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Tweets con contenido multimedia</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-fa/const_strings.xml b/tweet-ui/src/main/res/values-fa/const_strings.xml
deleted file mode 100644
index e9678377..00000000
--- a/tweet-ui/src/main/res/values-fa/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">y/M/d</string>
-    <string name="tw__relative_date_format_short">d LLL</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-fa/plurals.xml b/tweet-ui/src/main/res/values-fa/plurals.xml
deleted file mode 100644
index ed52a06c..00000000
--- a/tweet-ui/src/main/res/values-fa/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 ساعت</item>
-        <item quantity="other">%d ساعت</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 دقیقه</item>
-        <item quantity="other">%d دقیقه</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 ثانیه</item>
-        <item quantity="other">%d ثانیه</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-fa/strings.xml b/tweet-ui/src/main/res/values-fa/strings.xml
deleted file mode 100644
index a92ead09..00000000
--- a/tweet-ui/src/main/res/values-fa/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">پسندیدن توییت</string>
-    <string name="tw__liked_tweet">لغو پسندیدن</string>
-    <string name="tw__loading_tweet">بارگیری توییت</string>
-    <string name="tw__pause">توقف موقت</string>
-    <string name="tw__play">پخش</string>
-    <string name="tw__replay">پخش مجدد</string>
-    <string name="tw__retweeted_by_format">بازتوییت‌شده توسط %1$s</string>
-    <string name="tw__share_content_format">توییت ‎\@%1$s را بر‌رسی کنید: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">توییت‌ از %1$s (‎\@%2$s)</string>
-    <string name="tw__share_tweet">به اشتراک‌گذاری توییت</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">محتوای چند رسانه‌ای توییت</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-fi/const_strings.xml b/tweet-ui/src/main/res/values-fi/const_strings.xml
deleted file mode 100644
index e6f35e0e..00000000
--- a/tweet-ui/src/main/res/values-fi/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d.M.y</string>
-    <string name="tw__relative_date_format_short">d. MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-fi/plurals.xml b/tweet-ui/src/main/res/values-fi/plurals.xml
deleted file mode 100644
index 27ed8331..00000000
--- a/tweet-ui/src/main/res/values-fi/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 h</item>
-        <item quantity="other">%d h</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 min</item>
-        <item quantity="other">%d min</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 s</item>
-        <item quantity="other">%d s</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-fi/strings.xml b/tweet-ui/src/main/res/values-fi/strings.xml
deleted file mode 100644
index 3bd30782..00000000
--- a/tweet-ui/src/main/res/values-fi/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Tykkää twiitistä</string>
-    <string name="tw__liked_tweet">Kumoa tykkäys</string>
-    <string name="tw__loading_tweet">Ladataan twiittiä</string>
-    <string name="tw__pause">pysäytä</string>
-    <string name="tw__play">toista</string>
-    <string name="tw__replay">toista uudelleen</string>
-    <string name="tw__retweeted_by_format">Uudelleentwiitannut %1$s</string>
-    <string name="tw__share_content_format">Katso käyttäjän \@%1$s twiitti: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Twiitti käyttäjältä %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Jaa twiitti</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Twiitin mediasisältö</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-fr/const_strings.xml b/tweet-ui/src/main/res/values-fr/const_strings.xml
deleted file mode 100644
index ad9f5578..00000000
--- a/tweet-ui/src/main/res/values-fr/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d/M/y</string>
-    <string name="tw__relative_date_format_short">d MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-fr/plurals.xml b/tweet-ui/src/main/res/values-fr/plurals.xml
deleted file mode 100644
index ee8db2dc..00000000
--- a/tweet-ui/src/main/res/values-fr/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 h</item>
-        <item quantity="other">%d h</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 m</item>
-        <item quantity="other">%d m</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 s</item>
-        <item quantity="other">%d s</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-fr/strings.xml b/tweet-ui/src/main/res/values-fr/strings.xml
deleted file mode 100644
index ff3f70e9..00000000
--- a/tweet-ui/src/main/res/values-fr/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Aimer le Tweet</string>
-    <string name="tw__liked_tweet">Ne plus aimer</string>
-    <string name="tw__loading_tweet">Chargement du Tweet</string>
-    <string name="tw__pause">pause</string>
-    <string name="tw__play">lire</string>
-    <string name="tw__replay">relire</string>
-    <string name="tw__retweeted_by_format">Retweeté par %1$s</string>
-    <string name="tw__share_content_format">Lisez le Tweet de \@%1$s : https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet de %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Partager le Tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Média du Tweet</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-gu/plurals.xml b/tweet-ui/src/main/res/values-gu/plurals.xml
deleted file mode 100644
index b47e70aa..00000000
--- a/tweet-ui/src/main/res/values-gu/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1h</item>
-        <item quantity="other">%dh</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1m</item>
-        <item quantity="other">%dm</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1s</item>
-        <item quantity="other">%ds</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-gu/strings.xml b/tweet-ui/src/main/res/values-gu/strings.xml
deleted file mode 100644
index 2e725d17..00000000
--- a/tweet-ui/src/main/res/values-gu/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">ટ્વીટ લાઈક કરો</string>
-    <string name="tw__liked_tweet">લાઈક પૂર્વવત કરો</string>
-    <string name="tw__loading_tweet">ટ્વીટ લોડ થઈ રહી છે</string>
-    <string name="tw__pause">અટકાવો</string>
-    <string name="tw__play">પ્લે કરો</string>
-    <string name="tw__replay">પુન પ્લે કરો</string>
-    <string name="tw__retweeted_by_format">%1$s દ્વારા પુનટ્વીટ કરાઈ</string>
-    <string name="tw__share_content_format">\@%1$s\ની ટ્વીટ તપાસો: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">%1$s (\@%2$s) તરફથી ટ્વીટ</string>
-    <string name="tw__share_tweet">ટ્વીટ શેર કરો</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">ટ્વીટ મીડિયા</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-hi/const_strings.xml b/tweet-ui/src/main/res/values-hi/const_strings.xml
deleted file mode 100644
index 72b7e472..00000000
--- a/tweet-ui/src/main/res/values-hi/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d.M.y</string>
-    <string name="tw__relative_date_format_short">d MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-hi/plurals.xml b/tweet-ui/src/main/res/values-hi/plurals.xml
deleted file mode 100644
index ed79fc2e..00000000
--- a/tweet-ui/src/main/res/values-hi/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 घंटा</item>
-        <item quantity="other">%d घंटे</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 क्षण</item>
-        <item quantity="other">%d क्षण</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 पल</item>
-        <item quantity="other">%d पल</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-hi/strings.xml b/tweet-ui/src/main/res/values-hi/strings.xml
deleted file mode 100644
index 4744f289..00000000
--- a/tweet-ui/src/main/res/values-hi/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">ट्वीट पसंद करें</string>
-    <string name="tw__liked_tweet">पसंद पूर्ववत करें</string>
-    <string name="tw__loading_tweet">ट्वीट लोड हो रहे हैं</string>
-    <string name="tw__pause">विराम</string>
-    <string name="tw__play">चलाएँ</string>
-    <string name="tw__replay">रीप्ले</string>
-    <string name="tw__retweeted_by_format">%1$s द्वारा रीट्विट</string>
-    <string name="tw__share_content_format">\@%1$s के ट्वीट पर नजर डालें: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">%1$s (\@%2$s) से ट्वीट</string>
-    <string name="tw__share_tweet">ट्वीट साझा करें</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">ट्वीट मीडिया</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-hr/plurals.xml b/tweet-ui/src/main/res/values-hr/plurals.xml
deleted file mode 100644
index 27ed8331..00000000
--- a/tweet-ui/src/main/res/values-hr/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 h</item>
-        <item quantity="other">%d h</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 min</item>
-        <item quantity="other">%d min</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 s</item>
-        <item quantity="other">%d s</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-hr/strings.xml b/tweet-ui/src/main/res/values-hr/strings.xml
deleted file mode 100644
index cf6033c6..00000000
--- a/tweet-ui/src/main/res/values-hr/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Označi Tweet oznakom \"sviđa mi se\"</string>
-    <string name="tw__liked_tweet">Poništi oznaku \"sviđa mi se\"</string>
-    <string name="tw__loading_tweet">Učitavanje tweeta</string>
-    <string name="tw__pause">pauziraj</string>
-    <string name="tw__play">reproduciraj</string>
-    <string name="tw__replay">ponovno reproduciraj</string>
-    <string name="tw__retweeted_by_format">%1$s je proslijedio/la Tweet</string>
-    <string name="tw__share_content_format">Pogledajte Tweet korisnika/ce \@%1$s: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet korisnika/ce %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Podijeli Tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Medijski sadržaji u tweetu</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-hu/const_strings.xml b/tweet-ui/src/main/res/values-hu/const_strings.xml
deleted file mode 100644
index efaa2f62..00000000
--- a/tweet-ui/src/main/res/values-hu/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">y. MM. dd.</string>
-    <string name="tw__relative_date_format_short">MMM d.</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-hu/plurals.xml b/tweet-ui/src/main/res/values-hu/plurals.xml
deleted file mode 100644
index aa397c8c..00000000
--- a/tweet-ui/src/main/res/values-hu/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 ó</item>
-        <item quantity="other">%d ó</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 p</item>
-        <item quantity="other">%d p</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 mp</item>
-        <item quantity="other">%d mp</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-hu/strings.xml b/tweet-ui/src/main/res/values-hu/strings.xml
deleted file mode 100644
index ff882a10..00000000
--- a/tweet-ui/src/main/res/values-hu/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Tweet kedvelése</string>
-    <string name="tw__liked_tweet">Tweet kedvelésének visszavonása</string>
-    <string name="tw__loading_tweet">Tweet betöltése</string>
-    <string name="tw__pause">szünet</string>
-    <string name="tw__play">lejátszás</string>
-    <string name="tw__replay">lejátszás ismét</string>
-    <string name="tw__retweeted_by_format">%1$s retweetelte</string>
-    <string name="tw__share_content_format">Nézd meg \@%1$s\ felhasználó tweetjét: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet %1$s (\@%2$s) felhasználótól</string>
-    <string name="tw__share_tweet">Tweet megosztása</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Média tweetelése</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-in/const_strings.xml b/tweet-ui/src/main/res/values-in/const_strings.xml
deleted file mode 100644
index ad9f5578..00000000
--- a/tweet-ui/src/main/res/values-in/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d/M/y</string>
-    <string name="tw__relative_date_format_short">d MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-in/plurals.xml b/tweet-ui/src/main/res/values-in/plurals.xml
deleted file mode 100644
index e05b8830..00000000
--- a/tweet-ui/src/main/res/values-in/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 jam</item>
-        <item quantity="other">%d jam</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 mnt</item>
-        <item quantity="other">%d mnt</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 dtk</item>
-        <item quantity="other">%d dtk</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-in/strings.xml b/tweet-ui/src/main/res/values-in/strings.xml
deleted file mode 100644
index 99bc91d0..00000000
--- a/tweet-ui/src/main/res/values-in/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Menyukai Tweet</string>
-    <string name="tw__liked_tweet">Batal Suka</string>
-    <string name="tw__loading_tweet">Memuat Tweet</string>
-    <string name="tw__pause">jeda</string>
-    <string name="tw__play">putar</string>
-    <string name="tw__replay">putar ulang</string>
-    <string name="tw__retweeted_by_format">Di-retweet oleh %1$s</string>
-    <string name="tw__share_content_format">Lihat Tweet \@%1$s: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet dari %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Sebarkan Tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Media Tweet</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-it/const_strings.xml b/tweet-ui/src/main/res/values-it/const_strings.xml
deleted file mode 100644
index ad9f5578..00000000
--- a/tweet-ui/src/main/res/values-it/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d/M/y</string>
-    <string name="tw__relative_date_format_short">d MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-it/plurals.xml b/tweet-ui/src/main/res/values-it/plurals.xml
deleted file mode 100644
index b47e70aa..00000000
--- a/tweet-ui/src/main/res/values-it/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1h</item>
-        <item quantity="other">%dh</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1m</item>
-        <item quantity="other">%dm</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1s</item>
-        <item quantity="other">%ds</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-it/strings.xml b/tweet-ui/src/main/res/values-it/strings.xml
deleted file mode 100644
index a0c7dc43..00000000
--- a/tweet-ui/src/main/res/values-it/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Metti Mi Piace al Tweet</string>
-    <string name="tw__liked_tweet">Non mi piace più</string>
-    <string name="tw__loading_tweet">Caricamento del Tweet in corso</string>
-    <string name="tw__pause">pausa</string>
-    <string name="tw__play">riproduci</string>
-    <string name="tw__replay">replay</string>
-    <string name="tw__retweeted_by_format">Ritwittato da %1$s</string>
-    <string name="tw__share_content_format">Dai un\'occhiata al Tweet di \@%1$s: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet da %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Condividi Tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Contenuti dei Tweet</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-iw/const_strings.xml b/tweet-ui/src/main/res/values-iw/const_strings.xml
deleted file mode 100644
index e6f35e0e..00000000
--- a/tweet-ui/src/main/res/values-iw/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d.M.y</string>
-    <string name="tw__relative_date_format_short">d. MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-iw/plurals.xml b/tweet-ui/src/main/res/values-iw/plurals.xml
deleted file mode 100644
index c7cf43e3..00000000
--- a/tweet-ui/src/main/res/values-iw/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">שעה אחת</item>
-        <item quantity="other">%d שעות</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">דקה אחת</item>
-        <item quantity="other">%d דקות</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">שנייה אחת</item>
-        <item quantity="other">%d שניות</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-iw/strings.xml b/tweet-ui/src/main/res/values-iw/strings.xml
deleted file mode 100644
index b6fb23e4..00000000
--- a/tweet-ui/src/main/res/values-iw/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">סמן ציוץ כאהוב</string>
-    <string name="tw__liked_tweet">בטל סימון כאהוב</string>
-    <string name="tw__loading_tweet">טוען ציוץ</string>
-    <string name="tw__pause">לעצור</string>
-    <string name="tw__play">לנגן</string>
-    <string name="tw__replay">לנגן מחדש</string>
-    <string name="tw__retweeted_by_format">צויץ מחדש על-ידי %1$s</string>
-    <string name="tw__share_content_format">בוא לראות את הציוץ של ‎\@%1$s‏: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">ציוץ של %1$s‏ (‎\@%2$s)</string>
-    <string name="tw__share_tweet">שתף ציוץ</string>
-    <string name="tw__tweet_content_description">%1$s‏. %2$s‏. %3$s</string>
-    <string name="tw__tweet_media">המדיה של הציוץ</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ja/const_strings.xml b/tweet-ui/src/main/res/values-ja/const_strings.xml
deleted file mode 100644
index 4d5f965f..00000000
--- a/tweet-ui/src/main/res/values-ja/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">y/M/d</string>
-    <string name="tw__relative_date_format_short">M月d日</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-ja/plurals.xml b/tweet-ui/src/main/res/values-ja/plurals.xml
deleted file mode 100644
index 0d496edd..00000000
--- a/tweet-ui/src/main/res/values-ja/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1時間</item>
-        <item quantity="other">%d時間</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1分</item>
-        <item quantity="other">%d分</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1秒</item>
-        <item quantity="other">%d秒</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ja/strings.xml b/tweet-ui/src/main/res/values-ja/strings.xml
deleted file mode 100644
index e77a9d1f..00000000
--- a/tweet-ui/src/main/res/values-ja/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">ツイートにいいねする</string>
-    <string name="tw__liked_tweet">いいねを取り消す</string>
-    <string name="tw__loading_tweet">ツイートを読込中</string>
-    <string name="tw__pause">一時停止</string>
-    <string name="tw__play">再生</string>
-    <string name="tw__replay">リプレイ</string>
-    <string name="tw__retweeted_by_format">%1$sさんがリツイート</string>
-    <string name="tw__share_content_format">\@%1$sさんのツイートをチェックしましょう　 https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">%1$s (\@%2$s)さんからのツイート</string>
-    <string name="tw__share_tweet">ツイートを共有</string>
-    <string name="tw__tweet_content_description">%1$s、 %2$s、 %3$s。</string>
-    <string name="tw__tweet_media">画像/動画を投稿</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-kn/plurals.xml b/tweet-ui/src/main/res/values-kn/plurals.xml
deleted file mode 100644
index 8413611d..00000000
--- a/tweet-ui/src/main/res/values-kn/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1ಗಂ</item>
-        <item quantity="other">%dಗಂ</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1ನಿ</item>
-        <item quantity="other">%dನಿ</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1ಗಳು</item>
-        <item quantity="other">%dಗಳು</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-kn/strings.xml b/tweet-ui/src/main/res/values-kn/strings.xml
deleted file mode 100644
index 3fcdc84d..00000000
--- a/tweet-ui/src/main/res/values-kn/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">ಟ್ವೀಟ್ ಇಷ್ಟಪಡಿ</string>
-    <string name="tw__liked_tweet">ಇಷ್ಟಪಡಿ ರದ್ದುಮಾಡು</string>
-    <string name="tw__loading_tweet">ಟ್ವೀಟ್ ಲೋಡ್ ಮಾಡಲಾಗುತ್ತಿದೆ</string>
-    <string name="tw__pause">ವಿರಾಮ</string>
-    <string name="tw__play">ಪ್ಲೇ</string>
-    <string name="tw__replay">ಮರುಪ್ಲೇ</string>
-    <string name="tw__retweeted_by_format">%1$s ಇಂದ ಮರುಟ್ವೀಟಿಸಲ್ಪಟ್ಟಿದೆ</string>
-    <string name="tw__share_content_format">ಪರಿಶೀಲಿಸಿ \@%1$s\'s ಟ್ವೀಟ್: https://twitter.com/%1$s/ಸ್ಥಿತಿ/%2$s</string>
-    <string name="tw__share_subject_format">%1$s (\@%2$s) ಇಂದ ಟ್ವೀಟ್</string>
-    <string name="tw__share_tweet">ಟ್ವೀಟ್ ಹಂಚಿಕೊಳ್ಳಿ</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">ಟ್ವೀಟ್ ಮಾಧ್ಯಮ</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ko/const_strings.xml b/tweet-ui/src/main/res/values-ko/const_strings.xml
deleted file mode 100644
index 05624830..00000000
--- a/tweet-ui/src/main/res/values-ko/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">yy/MM/dd</string>
-    <string name="tw__relative_date_format_short">MMM d일</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-ko/plurals.xml b/tweet-ui/src/main/res/values-ko/plurals.xml
deleted file mode 100644
index bc2b4c4a..00000000
--- a/tweet-ui/src/main/res/values-ko/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1시간</item>
-        <item quantity="other">%d시간</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1분</item>
-        <item quantity="other">%d분</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1초</item>
-        <item quantity="other">%d초</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ko/strings.xml b/tweet-ui/src/main/res/values-ko/strings.xml
deleted file mode 100644
index caaa29c0..00000000
--- a/tweet-ui/src/main/res/values-ko/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">마음에 들어요</string>
-    <string name="tw__liked_tweet">마음에 들어요 취소</string>
-    <string name="tw__loading_tweet">트윗을 불러오는 중</string>
-    <string name="tw__pause">일시 정지</string>
-    <string name="tw__play">재생</string>
-    <string name="tw__replay">재시작</string>
-    <string name="tw__retweeted_by_format">%1$s 님이 리트윗함</string>
-    <string name="tw__share_content_format">\@%1$s 님의 트윗 보기: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">%1$s (\@%2$s) 님의 트윗</string>
-    <string name="tw__share_tweet">트윗 공유하기</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">트윗 미디어</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-mr/plurals.xml b/tweet-ui/src/main/res/values-mr/plurals.xml
deleted file mode 100644
index c9dbf21f..00000000
--- a/tweet-ui/src/main/res/values-mr/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1h</item>
-        <item quantity="other">%dh</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 m</item>
-        <item quantity="other">%dm</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 सेकंद</item>
-        <item quantity="other">%ds</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-mr/strings.xml b/tweet-ui/src/main/res/values-mr/strings.xml
deleted file mode 100644
index bedcf024..00000000
--- a/tweet-ui/src/main/res/values-mr/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">ट्विट पसंत करा</string>
-    <string name="tw__liked_tweet">पसंती पूर्ववत करा</string>
-    <string name="tw__loading_tweet">ट्विट लोड करीत आहे</string>
-    <string name="tw__pause">पॉज</string>
-    <string name="tw__play">प्ले</string>
-    <string name="tw__replay">रिप्ले</string>
-    <string name="tw__retweeted_by_format">%1$s द्वारे पुन्हा ट्विट केलेले</string>
-    <string name="tw__share_content_format">\@%1$s\ चे ट्विट पाहा: https://twitter.com/%1$s/स्थिती/%2$s</string>
-    <string name="tw__share_subject_format">%1$s (\@%2$s) कडील ट्विट</string>
-    <string name="tw__share_tweet">ट्विट शेअर करा</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">ट्विट मिडिया</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ms/const_strings.xml b/tweet-ui/src/main/res/values-ms/const_strings.xml
deleted file mode 100644
index ad9f5578..00000000
--- a/tweet-ui/src/main/res/values-ms/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d/M/y</string>
-    <string name="tw__relative_date_format_short">d MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-ms/plurals.xml b/tweet-ui/src/main/res/values-ms/plurals.xml
deleted file mode 100644
index 8d7b6988..00000000
--- a/tweet-ui/src/main/res/values-ms/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1j</item>
-        <item quantity="other">%dh</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1m</item>
-        <item quantity="other">%dm</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1s</item>
-        <item quantity="other">%ds</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ms/strings.xml b/tweet-ui/src/main/res/values-ms/strings.xml
deleted file mode 100644
index ac9e6285..00000000
--- a/tweet-ui/src/main/res/values-ms/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Suka Tweet</string>
-    <string name="tw__liked_tweet">Batal Suka</string>
-    <string name="tw__loading_tweet">Memuatkan Tweet</string>
-    <string name="tw__pause">jeda</string>
-    <string name="tw__play">main</string>
-    <string name="tw__replay">ulang main</string>
-    <string name="tw__retweeted_by_format">Ditweet semula oleh %1$s</string>
-    <string name="tw__share_content_format">Semak Tweet \@%1$s\ : https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet daripada %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Kongsi Tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Media Tweet</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-nb/const_strings.xml b/tweet-ui/src/main/res/values-nb/const_strings.xml
deleted file mode 100644
index e6f35e0e..00000000
--- a/tweet-ui/src/main/res/values-nb/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d.M.y</string>
-    <string name="tw__relative_date_format_short">d. MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-nb/plurals.xml b/tweet-ui/src/main/res/values-nb/plurals.xml
deleted file mode 100644
index 4d390eb6..00000000
--- a/tweet-ui/src/main/res/values-nb/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 t</item>
-        <item quantity="other">%d t</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 m</item>
-        <item quantity="other">%d m</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 s</item>
-        <item quantity="other">%d s</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-nb/strings.xml b/tweet-ui/src/main/res/values-nb/strings.xml
deleted file mode 100644
index 49392696..00000000
--- a/tweet-ui/src/main/res/values-nb/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Lik Tweet</string>
-    <string name="tw__liked_tweet">Angre Liker</string>
-    <string name="tw__loading_tweet">Laster inn tweeten</string>
-    <string name="tw__pause">pause</string>
-    <string name="tw__play">spill</string>
-    <string name="tw__replay">spill på nytt</string>
-    <string name="tw__retweeted_by_format">Retweetet av %1$s</string>
-    <string name="tw__share_content_format">Sjekk \@%1$s\s tweet: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet fra %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Del tweeten</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Tweet-medium</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-nl/const_strings.xml b/tweet-ui/src/main/res/values-nl/const_strings.xml
deleted file mode 100644
index 187f9395..00000000
--- a/tweet-ui/src/main/res/values-nl/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d-M-y</string>
-    <string name="tw__relative_date_format_short">d MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-nl/plurals.xml b/tweet-ui/src/main/res/values-nl/plurals.xml
deleted file mode 100644
index 84465c3d..00000000
--- a/tweet-ui/src/main/res/values-nl/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1u</item>
-        <item quantity="other">%du</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1m</item>
-        <item quantity="other">%dm</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1s</item>
-        <item quantity="other">%ds</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-nl/strings.xml b/tweet-ui/src/main/res/values-nl/strings.xml
deleted file mode 100644
index 0479a749..00000000
--- a/tweet-ui/src/main/res/values-nl/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Tweet leuk vinden</string>
-    <string name="tw__liked_tweet">Niet meer leuk</string>
-    <string name="tw__loading_tweet">Tweet laden…</string>
-    <string name="tw__pause">pauzeren</string>
-    <string name="tw__play">afspelen</string>
-    <string name="tw__replay">opnieuw afspelen</string>
-    <string name="tw__retweeted_by_format">Geretweet door %1$s</string>
-    <string name="tw__share_content_format">Bekijk de Tweet van \@%1$s: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet van %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Tweet delen</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Tweetmedia</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-pl/const_strings.xml b/tweet-ui/src/main/res/values-pl/const_strings.xml
deleted file mode 100644
index 50d37422..00000000
--- a/tweet-ui/src/main/res/values-pl/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d.MM.y</string>
-    <string name="tw__relative_date_format_short">d MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-pl/plurals.xml b/tweet-ui/src/main/res/values-pl/plurals.xml
deleted file mode 100644
index e1b6b0e8..00000000
--- a/tweet-ui/src/main/res/values-pl/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 godz.</item>
-        <item quantity="other">%d godz.</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 min</item>
-        <item quantity="other">%d min</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 s</item>
-        <item quantity="other">%d s</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-pl/strings.xml b/tweet-ui/src/main/res/values-pl/strings.xml
deleted file mode 100644
index 0876770d..00000000
--- a/tweet-ui/src/main/res/values-pl/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Polub Tweet</string>
-    <string name="tw__liked_tweet">Nie lubię</string>
-    <string name="tw__loading_tweet">Wczytywanie tweeta</string>
-    <string name="tw__pause">zatrzymaj</string>
-    <string name="tw__play">odtwórz</string>
-    <string name="tw__replay">odtwórz ponownie</string>
-    <string name="tw__retweeted_by_format">Podane dalej przez %1$s</string>
-    <string name="tw__share_content_format">Zobacz tweet od \@%1$s\: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet od użytkownika %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Udostępnij tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Multimedia z Tweeta</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-pt/const_strings.xml b/tweet-ui/src/main/res/values-pt/const_strings.xml
deleted file mode 100644
index cc7271bf..00000000
--- a/tweet-ui/src/main/res/values-pt/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d.MM.y</string>
-    <string name="tw__relative_date_format_short">d \'de\' MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-pt/plurals.xml b/tweet-ui/src/main/res/values-pt/plurals.xml
deleted file mode 100644
index b47e70aa..00000000
--- a/tweet-ui/src/main/res/values-pt/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1h</item>
-        <item quantity="other">%dh</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1m</item>
-        <item quantity="other">%dm</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1s</item>
-        <item quantity="other">%ds</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-pt/strings.xml b/tweet-ui/src/main/res/values-pt/strings.xml
deleted file mode 100644
index 2bce9547..00000000
--- a/tweet-ui/src/main/res/values-pt/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Curtir Tweet</string>
-    <string name="tw__liked_tweet">Descurtir.</string>
-    <string name="tw__loading_tweet">Carregando Tweet</string>
-    <string name="tw__pause">pausar</string>
-    <string name="tw__play">reproduzir</string>
-    <string name="tw__replay">repetir</string>
-    <string name="tw__retweeted_by_format">Retweetado por %1$s</string>
-    <string name="tw__share_content_format">Confira o Tweet de \@%1$s: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet de %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Compartilhar Tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Mídia do Tweet</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ro/const_strings.xml b/tweet-ui/src/main/res/values-ro/const_strings.xml
deleted file mode 100644
index ac63c5da..00000000
--- a/tweet-ui/src/main/res/values-ro/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">dd/MM/yy</string>
-    <string name="tw__relative_date_format_short">dd MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-ro/plurals.xml b/tweet-ui/src/main/res/values-ro/plurals.xml
deleted file mode 100644
index ee8db2dc..00000000
--- a/tweet-ui/src/main/res/values-ro/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 h</item>
-        <item quantity="other">%d h</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 m</item>
-        <item quantity="other">%d m</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 s</item>
-        <item quantity="other">%d s</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ro/strings.xml b/tweet-ui/src/main/res/values-ro/strings.xml
deleted file mode 100644
index 84fb5894..00000000
--- a/tweet-ui/src/main/res/values-ro/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Apreciază Tweetul</string>
-    <string name="tw__liked_tweet">Anulează aprecierea</string>
-    <string name="tw__loading_tweet">Se încarcă Tweetul</string>
-    <string name="tw__pause">pauză</string>
-    <string name="tw__play">redă</string>
-    <string name="tw__replay">redă din nou</string>
-    <string name="tw__retweeted_by_format">Redistribuit de %1$s</string>
-    <string name="tw__share_content_format">Vezi Tweetul lui \@%1$s: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet de la %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Distribuie Tweetul</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Tweet cu conținut media</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ru/const_strings.xml b/tweet-ui/src/main/res/values-ru/const_strings.xml
deleted file mode 100644
index a330c88a..00000000
--- a/tweet-ui/src/main/res/values-ru/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">dd.MM.y</string>
-    <string name="tw__relative_date_format_short">d MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-ru/plurals.xml b/tweet-ui/src/main/res/values-ru/plurals.xml
deleted file mode 100644
index 536d2a91..00000000
--- a/tweet-ui/src/main/res/values-ru/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 ч</item>
-        <item quantity="other">%d ч</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 мин</item>
-        <item quantity="other">%d мин</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 с</item>
-        <item quantity="other">%d с</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ru/strings.xml b/tweet-ui/src/main/res/values-ru/strings.xml
deleted file mode 100644
index 9c33d8c7..00000000
--- a/tweet-ui/src/main/res/values-ru/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Мне нравится</string>
-    <string name="tw__liked_tweet">Не нравится</string>
-    <string name="tw__loading_tweet">Загрузка твита</string>
-    <string name="tw__pause">приостановить</string>
-    <string name="tw__play">воспроизвести</string>
-    <string name="tw__replay">повторно воспроизвести</string>
-    <string name="tw__retweeted_by_format">Ретвитнуто пользователем %1$s</string>
-    <string name="tw__share_content_format">Посмотрите твит пользователя \@%1$s: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Твит от %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Поделиться твитом</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Медиафайл в твите</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-sk/plurals.xml b/tweet-ui/src/main/res/values-sk/plurals.xml
deleted file mode 100644
index 27ed8331..00000000
--- a/tweet-ui/src/main/res/values-sk/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 h</item>
-        <item quantity="other">%d h</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 min</item>
-        <item quantity="other">%d min</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 s</item>
-        <item quantity="other">%d s</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-sk/strings.xml b/tweet-ui/src/main/res/values-sk/strings.xml
deleted file mode 100644
index c799bb54..00000000
--- a/tweet-ui/src/main/res/values-sk/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Obľúbiť si Tweet</string>
-    <string name="tw__liked_tweet">Zrušiť označenie Páči sa mi to</string>
-    <string name="tw__loading_tweet">Načítava sa Tweet</string>
-    <string name="tw__pause">pozastaviť</string>
-    <string name="tw__play">prehrať</string>
-    <string name="tw__replay">prehrať znova</string>
-    <string name="tw__retweeted_by_format">Retweetnuté používateľom %1$s</string>
-    <string name="tw__share_content_format">Pozrite si Tweet od používateľa \@%1$s\: https://twitter.com/%1$s/stav/%2$s</string>
-    <string name="tw__share_subject_format">Tweet od používateľa %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Zdieľať Tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Tweetnuť médiá</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-sr/plurals.xml b/tweet-ui/src/main/res/values-sr/plurals.xml
deleted file mode 100644
index a6baf884..00000000
--- a/tweet-ui/src/main/res/values-sr/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1с</item>
-        <item quantity="other">%dс</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1м</item>
-        <item quantity="other">%dм</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1с</item>
-        <item quantity="other">%dс</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-sr/strings.xml b/tweet-ui/src/main/res/values-sr/strings.xml
deleted file mode 100644
index abd68108..00000000
--- a/tweet-ui/src/main/res/values-sr/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Свиђа ти се твит</string>
-    <string name="tw__liked_tweet">Опозови свиђање</string>
-    <string name="tw__loading_tweet">Учитавање твита</string>
-    <string name="tw__pause">пауза</string>
-    <string name="tw__play">пусти</string>
-    <string name="tw__replay">понови</string>
-    <string name="tw__retweeted_by_format">Ретвитовано од стране %1$s</string>
-    <string name="tw__share_content_format">Провери твит \@%1$s: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Твит од %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Подели твит</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Mедиј из твита</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-sv/const_strings.xml b/tweet-ui/src/main/res/values-sv/const_strings.xml
deleted file mode 100644
index 72b7e472..00000000
--- a/tweet-ui/src/main/res/values-sv/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d.M.y</string>
-    <string name="tw__relative_date_format_short">d MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-sv/plurals.xml b/tweet-ui/src/main/res/values-sv/plurals.xml
deleted file mode 100644
index b47e70aa..00000000
--- a/tweet-ui/src/main/res/values-sv/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1h</item>
-        <item quantity="other">%dh</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1m</item>
-        <item quantity="other">%dm</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1s</item>
-        <item quantity="other">%ds</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-sv/strings.xml b/tweet-ui/src/main/res/values-sv/strings.xml
deleted file mode 100644
index 097306a5..00000000
--- a/tweet-ui/src/main/res/values-sv/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Gilla Tweet</string>
-    <string name="tw__liked_tweet">Ångra gillamarkeringen</string>
-    <string name="tw__loading_tweet">Läser in tweeten</string>
-    <string name="tw__pause">pausa</string>
-    <string name="tw__play">spela</string>
-    <string name="tw__replay">spela om</string>
-    <string name="tw__retweeted_by_format">Retweetad av %1$s</string>
-    <string name="tw__share_content_format">Kolla in \@%1$ss tweet: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet från %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Dela tweeten</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Tweetmedia</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ta/plurals.xml b/tweet-ui/src/main/res/values-ta/plurals.xml
deleted file mode 100644
index fd6a860b..00000000
--- a/tweet-ui/src/main/res/values-ta/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1மணி</item>
-        <item quantity="other">%dமணி</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1நி</item>
-        <item quantity="other">%dநி</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1நொ</item>
-        <item quantity="other">%dநொ</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ta/strings.xml b/tweet-ui/src/main/res/values-ta/strings.xml
deleted file mode 100644
index d2b314f0..00000000
--- a/tweet-ui/src/main/res/values-ta/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">கீச்சை விரும்பு</string>
-    <string name="tw__liked_tweet">விரும்பியதை செயல்தவிர்</string>
-    <string name="tw__loading_tweet">ட்விட்டை ஏற்றுகிறது</string>
-    <string name="tw__pause">இடைநிறுத்து</string>
-    <string name="tw__play">இயக்கு</string>
-    <string name="tw__replay">மீண்டும் இயக்கு</string>
-    <string name="tw__retweeted_by_format">%1$s -ஆல் மறுட்விட் செய்யப்பட்டது</string>
-    <string name="tw__share_content_format">\@%1$s\ -இன் ட்விட்டைக் காணுங்கள்: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">%1$s (\@%2$s) -இடமிருந்து ட்விட்</string>
-    <string name="tw__share_tweet">ட்விட்டைப் பகிர்</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">கீச்சு ஊடகம்</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-th/const_strings.xml b/tweet-ui/src/main/res/values-th/const_strings.xml
deleted file mode 100644
index ad9f5578..00000000
--- a/tweet-ui/src/main/res/values-th/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d/M/y</string>
-    <string name="tw__relative_date_format_short">d MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-th/plurals.xml b/tweet-ui/src/main/res/values-th/plurals.xml
deleted file mode 100644
index a027fadb..00000000
--- a/tweet-ui/src/main/res/values-th/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1ชม.</item>
-        <item quantity="other">%d ชม.</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 นาที</item>
-        <item quantity="other">%d นาที</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1วิ</item>
-        <item quantity="other">%d วิ</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-th/strings.xml b/tweet-ui/src/main/res/values-th/strings.xml
deleted file mode 100644
index 016b2c2f..00000000
--- a/tweet-ui/src/main/res/values-th/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">ชื่นชอบทวีต</string>
-    <string name="tw__liked_tweet">เลิกชื่นชอบ</string>
-    <string name="tw__loading_tweet">กำลังโหลดทวีต</string>
-    <string name="tw__pause">หยุดชั่วคราว</string>
-    <string name="tw__play">เล่น</string>
-    <string name="tw__replay">เล่นซ้ำ</string>
-    <string name="tw__retweeted_by_format">ถูกรีทวีตโดย %1$s</string>
-    <string name="tw__share_content_format">ดูทวีตของ \@%1$s: Tweet: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">ทวีตจาก %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">แบ่งปันทวีต</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">ทวีตสื่อ</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-tl/const_strings.xml b/tweet-ui/src/main/res/values-tl/const_strings.xml
deleted file mode 100644
index ad9f5578..00000000
--- a/tweet-ui/src/main/res/values-tl/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d/M/y</string>
-    <string name="tw__relative_date_format_short">d MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-tl/plurals.xml b/tweet-ui/src/main/res/values-tl/plurals.xml
deleted file mode 100644
index b47e70aa..00000000
--- a/tweet-ui/src/main/res/values-tl/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1h</item>
-        <item quantity="other">%dh</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1m</item>
-        <item quantity="other">%dm</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1s</item>
-        <item quantity="other">%ds</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-tl/strings.xml b/tweet-ui/src/main/res/values-tl/strings.xml
deleted file mode 100644
index 274e82a6..00000000
--- a/tweet-ui/src/main/res/values-tl/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Gustuhin ang Tweet</string>
-    <string name="tw__liked_tweet">I-undo ang Gusto</string>
-    <string name="tw__loading_tweet">Naglo-load ng Tweet</string>
-    <string name="tw__pause">i-pause</string>
-    <string name="tw__play">i-play</string>
-    <string name="tw__replay">i-play muli</string>
-    <string name="tw__retweeted_by_format">Ni-retweet ni %1$s</string>
-    <string name="tw__share_content_format">Tingnan \@%1$s\'s Tweet: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet mula kay %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Ibahagi ang Tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Media ng Tweet</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-tr/const_strings.xml b/tweet-ui/src/main/res/values-tr/const_strings.xml
deleted file mode 100644
index a330c88a..00000000
--- a/tweet-ui/src/main/res/values-tr/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">dd.MM.y</string>
-    <string name="tw__relative_date_format_short">d MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-tr/plurals.xml b/tweet-ui/src/main/res/values-tr/plurals.xml
deleted file mode 100644
index 54327480..00000000
--- a/tweet-ui/src/main/res/values-tr/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1s</item>
-        <item quantity="other">%ds</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1d</item>
-        <item quantity="other">%dd</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1s</item>
-        <item quantity="other">%d</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-tr/strings.xml b/tweet-ui/src/main/res/values-tr/strings.xml
deleted file mode 100644
index 1c04c18d..00000000
--- a/tweet-ui/src/main/res/values-tr/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Tweet Beğen</string>
-    <string name="tw__liked_tweet">Beğenmekten Vazgeç</string>
-    <string name="tw__loading_tweet">Tweet Yükleniyor</string>
-    <string name="tw__pause">duraklat</string>
-    <string name="tw__play">oynat</string>
-    <string name="tw__replay">tekrar oynat</string>
-    <string name="tw__retweeted_by_format">%1$s tarafından Retweetlendi</string>
-    <string name="tw__share_content_format">\@%1$s adlı kişinin Tweetini incele: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet gönderen: %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Tweet Paylaş</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Tweet Medyası</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-uk/plurals.xml b/tweet-ui/src/main/res/values-uk/plurals.xml
deleted file mode 100644
index c82e7480..00000000
--- a/tweet-ui/src/main/res/values-uk/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 год</item>
-        <item quantity="other">%d год</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 хв</item>
-        <item quantity="other">%d хв</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1 с</item>
-        <item quantity="other">%d с</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-uk/strings.xml b/tweet-ui/src/main/res/values-uk/strings.xml
deleted file mode 100644
index 9376d6c8..00000000
--- a/tweet-ui/src/main/res/values-uk/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Вподобати твіт</string>
-    <string name="tw__liked_tweet">Скасувати вподобання</string>
-    <string name="tw__loading_tweet">Завантаження твіта</string>
-    <string name="tw__pause">призупинити</string>
-    <string name="tw__play">відтворити</string>
-    <string name="tw__replay">повторити</string>
-    <string name="tw__retweeted_by_format">Ретвітнуто користувачем(кою) %1$s</string>
-    <string name="tw__share_content_format">Подивіться-но твіт від \@%1$s: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Твіт від %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Поділитися твітом</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Медіафайли твітів</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ur/const_strings.xml b/tweet-ui/src/main/res/values-ur/const_strings.xml
deleted file mode 100644
index ad9f5578..00000000
--- a/tweet-ui/src/main/res/values-ur/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">d/M/y</string>
-    <string name="tw__relative_date_format_short">d MMM</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-ur/plurals.xml b/tweet-ui/src/main/res/values-ur/plurals.xml
deleted file mode 100644
index 0339a3fa..00000000
--- a/tweet-ui/src/main/res/values-ur/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 گھنٹہ</item>
-        <item quantity="other">%d گھنٹے</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1منٹ</item>
-        <item quantity="other">%dمنٹ</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">پہلا</item>
-        <item quantity="other">%dسیکنڈ</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-ur/strings.xml b/tweet-ui/src/main/res/values-ur/strings.xml
deleted file mode 100644
index 5599e18f..00000000
--- a/tweet-ui/src/main/res/values-ur/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">ٹویٹ پسند کریں</string>
-    <string name="tw__liked_tweet">پسند کو منسوخ کریں</string>
-    <string name="tw__loading_tweet">ٹویٹ لوڈ ہو رہی ہے</string>
-    <string name="tw__pause">روکیں</string>
-    <string name="tw__play">چلائیں</string>
-    <string name="tw__replay">دوبارہ چلائیں</string>
-    <string name="tw__retweeted_by_format">%1$s کی ریٹویٹ کردہ</string>
-    <string name="tw__share_content_format">‎\@%1$s کی ٹویٹ دیکھیں: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">%1$s (‎\@%2$s) کی ٹویٹ</string>
-    <string name="tw__share_tweet">ٹویٹ شیئر کریں</string>
-    <string name="tw__tweet_content_description">%1$s۔ %2$s۔ %3$s۔</string>
-    <string name="tw__tweet_media">میڈیا ٹویٹ کریں</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-v21/themes.xml b/tweet-ui/src/main/res/values-v21/themes.xml
deleted file mode 100644
index 171013ec..00000000
--- a/tweet-ui/src/main/res/values-v21/themes.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <style name="MediaTheme" parent="@android:style/Theme.Material.NoActionBar" >
-        <item name="android:windowBackground">@android:color/black</item>
-    </style>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-v21/tw_tweet_text_styles.xml b/tweet-ui/src/main/res/values-v21/tw_tweet_text_styles.xml
deleted file mode 100644
index b0c14d29..00000000
--- a/tweet-ui/src/main/res/values-v21/tw_tweet_text_styles.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-
-    <style name="tw__TweetFullName" parent="tw__TweetFullNameBase">
-        <item name="android:fontFamily">sans-serif-medium</item>
-    </style>
-
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-vi/plurals.xml b/tweet-ui/src/main/res/values-vi/plurals.xml
deleted file mode 100644
index 8fb324dc..00000000
--- a/tweet-ui/src/main/res/values-vi/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1giờ</item>
-        <item quantity="other">%dgiờ</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1phút</item>
-        <item quantity="other">%dphút</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1giây</item>
-        <item quantity="other">%dgiây</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-vi/strings.xml b/tweet-ui/src/main/res/values-vi/strings.xml
deleted file mode 100644
index 40d3cf0f..00000000
--- a/tweet-ui/src/main/res/values-vi/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">Thích Tweet</string>
-    <string name="tw__liked_tweet">Hoàn tác Thích</string>
-    <string name="tw__loading_tweet">Đang tải Tweet</string>
-    <string name="tw__pause">dừng lại</string>
-    <string name="tw__play">phát</string>
-    <string name="tw__replay">phát lại</string>
-    <string name="tw__retweeted_by_format">Đã Tweet lại bởi %1$s</string>
-    <string name="tw__share_content_format">Hãy xem Tweet của \@%1$s: https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">Tweet từ %1$s (\@%2$s)</string>
-    <string name="tw__share_tweet">Chia sẻ Tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">Tweet Phương tiện</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-zh-rCN/const_strings.xml b/tweet-ui/src/main/res/values-zh-rCN/const_strings.xml
deleted file mode 100644
index 4d5f965f..00000000
--- a/tweet-ui/src/main/res/values-zh-rCN/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">y/M/d</string>
-    <string name="tw__relative_date_format_short">M月d日</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-zh-rCN/plurals.xml b/tweet-ui/src/main/res/values-zh-rCN/plurals.xml
deleted file mode 100644
index b5cc270a..00000000
--- a/tweet-ui/src/main/res/values-zh-rCN/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1时</item>
-        <item quantity="other">%d时</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1分</item>
-        <item quantity="other">%d分</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1秒</item>
-        <item quantity="other">%d秒</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-zh-rCN/strings.xml b/tweet-ui/src/main/res/values-zh-rCN/strings.xml
deleted file mode 100644
index f3ff2816..00000000
--- a/tweet-ui/src/main/res/values-zh-rCN/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">喜欢推文</string>
-    <string name="tw__liked_tweet">取消喜欢</string>
-    <string name="tw__loading_tweet">加载推文</string>
-    <string name="tw__pause">暂停</string>
-    <string name="tw__play">播放</string>
-    <string name="tw__replay">重播</string>
-    <string name="tw__retweeted_by_format">由 %1$s 转推</string>
-    <string name="tw__share_content_format">看看 \@%1$s 的推文：https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">来自 %1$s 的推文 (\@%2$s)</string>
-    <string name="tw__share_tweet">分享推文</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-    <string name="tw__tweet_media">推文媒体</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values-zh-rTW/const_strings.xml b/tweet-ui/src/main/res/values-zh-rTW/const_strings.xml
deleted file mode 100644
index 4d5f965f..00000000
--- a/tweet-ui/src/main/res/values-zh-rTW/const_strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <string name="tw__relative_date_format_long">y/M/d</string>
-    <string name="tw__relative_date_format_short">M月d日</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-zh-rTW/plurals.xml b/tweet-ui/src/main/res/values-zh-rTW/plurals.xml
deleted file mode 100644
index d3e9abf7..00000000
--- a/tweet-ui/src/main/res/values-zh-rTW/plurals.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <plurals name="tw__time_hours">
-        <item quantity="one">1 小時</item>
-        <item quantity="other">%d 小時</item>
-    </plurals>
-    <plurals name="tw__time_mins">
-        <item quantity="one">1 分鐘</item>
-        <item quantity="other">%d 分鐘</item>
-    </plurals>
-    <plurals name="tw__time_secs">
-        <item quantity="one">1  秒</item>
-        <item quantity="other">%d 秒</item>
-    </plurals>
-</resources>
diff --git a/tweet-ui/src/main/res/values-zh-rTW/strings.xml b/tweet-ui/src/main/res/values-zh-rTW/strings.xml
deleted file mode 100644
index 3d90f9ad..00000000
--- a/tweet-ui/src/main/res/values-zh-rTW/strings.xml
+++ /dev/null
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__like_tweet">喜歡推文</string>
-    <string name="tw__liked_tweet">取消喜歡</string>
-    <string name="tw__loading_tweet">正在載入推文</string>
-    <string name="tw__pause">暫停</string>
-    <string name="tw__play">播放</string>
-    <string name="tw__replay">重播</string>
-    <string name="tw__retweeted_by_format">由 %1$s 轉推</string>
-    <string name="tw__share_content_format">查看 \@%1$s 的推文：https://twitter.com/%1$s/status/%2$s</string>
-    <string name="tw__share_subject_format">來自 %1$s (\@%2$s) 的推文</string>
-    <string name="tw__share_tweet">分享推文</string>
-    <string name="tw__tweet_content_description">%1$s。%2$s。%3$s。</string>
-    <string name="tw__tweet_media">推文媒體</string>
-</resources>
diff --git a/tweet-ui/src/main/res/values/attrs.xml b/tweet-ui/src/main/res/values/attrs.xml
deleted file mode 100644
index 1c20b730..00000000
--- a/tweet-ui/src/main/res/values/attrs.xml
+++ /dev/null
@@ -1,43 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <declare-styleable name="tw__TweetView">
-        <attr name="tw__tweet_id" format="string"/>
-        <!--style attributes-->
-        <attr name="tw__container_bg_color" format="color"/>
-        <attr name="tw__primary_text_color" format="color"/>
-        <attr name="tw__action_color" format="color"/>
-        <attr name="tw__action_highlight_color" format="color"/>
-        <attr name="tw__tweet_actions_enabled" format="boolean" />
-    </declare-styleable>
-
-    <declare-styleable name="ToggleImageButton">
-        <attr name="state_toggled_on" format="boolean"/>
-        <attr name="contentDescriptionOn" format="string"/>
-        <attr name="contentDescriptionOff" format="string"/>
-        <attr name="toggleOnClick" format="boolean"/>
-    </declare-styleable>
-
-    <declare-styleable name="AspectRatioFrameLayout">
-        <attr name="tw__frame_layout_aspect_ratio" format="float"/>
-        <attr name="tw__frame_layout_dimension_to_adjust" format="enum">
-            <enum name="height" value="0"/>
-            <enum name="width" value="1"/>
-        </attr>
-    </declare-styleable>
-</resources>
diff --git a/tweet-ui/src/main/res/values/colors.xml b/tweet-ui/src/main/res/values/colors.xml
deleted file mode 100644
index e3414f17..00000000
--- a/tweet-ui/src/main/res/values/colors.xml
+++ /dev/null
@@ -1,37 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<!-- see go/colors -->
-<resources>
-    <color name="tw__tweet_action_color">#55acee</color>
-    <color name="tw__tweet_action_light_highlight_color">#ebeef0</color>
-    <color name="tw__tweet_action_dark_highlight_color">#667580</color>
-
-    <color name="tw__tweet_light_container_bg_color">#ffffff</color>
-    <color name="tw__tweet_light_primary_text_color">#292f33</color>
-
-    <color name="tw__tweet_dark_container_bg_color">#d9000000</color>
-    <color name="tw__tweet_dark_primary_text_color">#e1ffffff</color>
-
-    <color name="tw__seekbar_thumb_outer_color">#4dffffff</color>
-    <color name="tw__seekbar_thumb_inner_color">#ffffffff</color>
-
-    <color name="tw__cta_border_color">@android:color/white</color>
-    <color name="tw__cta_text_color">@android:color/white</color>
-
-    <color name="tw__black_opacity_10">#1a000000</color>
-</resources>
diff --git a/tweet-ui/src/main/res/values/const_strings.xml b/tweet-ui/src/main/res/values/const_strings.xml
deleted file mode 100644
index 48c907b0..00000000
--- a/tweet-ui/src/main/res/values/const_strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <!--Date Format strings-->
-    <!--These strings are in here because we pull translations manually from twitter-cldr-->
-    <string name="tw__relative_date_format_short">MMM dd</string>
-    <string name="tw__relative_date_format_long">MM/dd/yy</string>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values/dimens.xml b/tweet-ui/src/main/res/values/dimens.xml
deleted file mode 100644
index f0ec258f..00000000
--- a/tweet-ui/src/main/res/values/dimens.xml
+++ /dev/null
@@ -1,139 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-
-    <!--TweetView-->
-
-    <!--Container-->
-    <dimen name="tw__tweet_container_bottom_separator">18dp</dimen>
-    <!--Retweeted By line-->
-    <dimen name="tw__tweet_retweeted_by_margin_top">10dp</dimen>
-    <dimen name="tw__tweet_retweeted_by_margin_bottom">-10dp</dimen>
-    <dimen name="tw__tweet_retweeted_by_margin_left">20dp</dimen>
-    <dimen name="tw__tweet_retweeted_by_drawable_padding">3dp</dimen>
-
-    <!--Tweet Author Avatar-->
-    <dimen name="tw__tweet_avatar_size">36dp</dimen>
-    <dimen name="tw__tweet_avatar_margin_top">18dp</dimen>
-    <dimen name="tw__tweet_avatar_margin_left">20dp</dimen>
-    <dimen name="tw__tweet_avatar_margin_right">8dp</dimen>
-    <!--Twitter Logo-->
-    <dimen name="tw__tweet_logo_margin_top">18dp</dimen>
-    <dimen name="tw__tweet_logo_margin_right">20dp</dimen>
-    <!--Tweet Author Attribution-->
-    <dimen name="tw__tweet_full_name_margin_right">36dp</dimen>
-    <dimen name="tw__tweet_full_name_margin_top">15dp</dimen>
-    <dimen name="tw__tweet_full_name_drawable_padding">3dp</dimen>
-    <dimen name="tw__tweet_screen_name_margin_top">-4dp</dimen>
-    <dimen name="tw__tweet_screen_name_margin_bottom">1dp</dimen>
-    <dimen name="tw__tweet_timestamp_margin_top">-4dp</dimen>
-    <dimen name="tw__tweet_timestamp_padding_left">4dp</dimen>
-    <!--Tweet text-->
-    <dimen name="tw__tweet_text_margin_top">12dp</dimen>
-    <dimen name="tw__tweet_text_margin_left">20dp</dimen>
-    <dimen name="tw__tweet_text_margin_right">20dp</dimen>
-    <!--Tweet actions-->
-    <dimen name="tw__tweet_action_button_spacing">40dp</dimen>
-    <dimen name="tw__tweet_action_bar_offset_bottom">-2dp</dimen>
-    <dimen name="tw__tweet_action_bar_offset_left">8dp</dimen>
-    <dimen name="tw__tweet_action_button_margin_top">-4dp</dimen>
-    <dimen name="tw__tweet_action_heart_size">43dp</dimen>
-    <dimen name="tw__tweet_action_share_padding">14dp</dimen>
-
-    <!--Tweet Media-->
-    <dimen name="tw__tweet_media_badge_margin">4dp</dimen>
-    <dimen name="tw__badge_padding">4dp</dimen>
-    <dimen name="tw__media_view_divider_size">1dp</dimen>
-    <dimen name="tw__media_view_radius">5dp</dimen>
-
-    <!-- CTA -->
-    <dimen name="tw__cta_margin_top">12dp</dimen>
-    <dimen name="tw__cta_padding">8dp</dimen>
-    <dimen name="tw__cta_border_size">1dp</dimen>
-    <dimen name="tw__cta_radius">14dp</dimen>
-
-    <!-- Quote Tweet container -->
-    <dimen name="tw__tweet_quote_tweet_margin_horizontal">20dp</dimen>
-    <dimen name="tw__tweet_quote_tweet_margin_top">8dp</dimen>
-
-    <!--CompactTweetView-->
-    <!--Container-->
-    <dimen name="tw__compact_tweet_container_padding_top">10.5dp</dimen>
-    <dimen name="tw__compact_tweet_container_bottom_separator">13dp</dimen>
-    <!--Retweeted By line-->
-    <dimen name="tw__compact_tweet_retweeted_by_margin_left">-25dp</dimen>
-    <dimen name="tw__compact_tweet_retweeted_by_margin_top">0dp</dimen>
-    <dimen name="tw__compact_tweet_retweeted_by_margin_bottom">0dp</dimen>
-    <dimen name="tw__compact_tweet_retweeted_by_drawable_padding">7dp</dimen>
-
-    <!--Tweet Author Avatar-->
-    <dimen name="tw__compact_tweet_avatar_margin_top">5.5dp</dimen>
-    <dimen name="tw__compact_tweet_avatar_margin_left">12dp</dimen>
-    <dimen name="tw__compact_tweet_avatar_margin_right">8dp</dimen>
-    <!--Twitter Logo-->
-    <dimen name="tw__compact_tweet_logo_margin_top">5dp</dimen>
-    <dimen name="tw__compact_tweet_logo_margin_right">12dp</dimen>
-    <!--Tweet Author Attribution-->
-    <dimen name="tw__compact_tweet_full_name_margin_right">0dp</dimen>
-    <dimen name="tw__compact_tweet_attribution_line_margin_right">36dp</dimen>
-    <dimen name="tw__compact_tweet_full_name_margin_top">0dp</dimen>
-    <dimen name="tw__compact_tweet_screen_name_layout_width">0dp</dimen>
-    <dimen name="tw__compact_tweet_screen_name_margin_top">0dp</dimen>
-    <dimen name="tw__compact_tweet_screen_name_margin_bottom">0dp</dimen>
-    <dimen name="tw__compact_tweet_screen_name_padding_left">3dp</dimen>
-    <dimen name="tw__compact_tweet_timestamp_margin_top">0dp</dimen>
-    <!--Tweet Media-->
-    <dimen name="tw__compact_tweet_media_margin_top">7dp</dimen>
-    <dimen name="tw__compact_tweet_media_margin_right">12dp</dimen>
-    <dimen name="tw__compact_tweet_media_margin_bottom">3dp</dimen>
-    <!--Tweet text-->
-    <dimen name="tw__compact_tweet_text_margin_top">1dp</dimen>
-    <dimen name="tw__compact_tweet_text_margin_left">0dp</dimen>
-    <dimen name="tw__compact_tweet_text_margin_right">12dp</dimen>
-    <!--Tweet actions-->
-    <dimen name="tw__compact_tweet_action_bar_offset_left">-12dp</dimen>
-    <!-- Quote Tweet container -->
-    <dimen name="tw__compact_tweet_quote_tweet_margin_left">0dp</dimen>
-    <dimen name="tw__compact_tweet_quote_tweet_margin_right">12dp</dimen>
-
-    <!-- Quote Tweet -->
-    <dimen name="tw__quote_tweet_media_margin_horizontal">1dp</dimen>
-    <dimen name="tw__quote_tweet_media_margin_bottom">1dp</dimen>
-    <dimen name="tw__quote_tweet_text_margin_horizontal">8dp</dimen>
-    <dimen name="tw__quote_tweet_text_margin_bottom">8dp</dimen>
-    <dimen name="tw__quote_tweet_attribution_text_margin_horizontal">8dp</dimen>
-    <dimen name="tw__quote_tweet_attribution_text_margin_top">7dp</dimen>
-    <dimen name="tw__quote_tweet_border_width">1dp</dimen>
-
-    <!-- Text sizes -->
-    <!--density-independent(micro 10sp, small 12sp, medium 14sp, large 16sp)-->
-    <dimen name="tw__text_size_large">16sp</dimen>
-    <dimen name="tw__text_size_medium">14sp</dimen>
-    <dimen name="tw__text_size_small">12sp</dimen>
-
-    <!-- Video controls -->
-    <dimen name="tw__seekbar_thumb_size">32dp</dimen>
-    <dimen name="tw__seekbar_thumb_outer_padding">7dp</dimen>
-    <dimen name="tw__seekbar_thumb_inner_padding">13dp</dimen>
-    <dimen name="tw__video_control_height">32dp</dimen>
-    <dimen name="tw__video_control_text_size">13sp</dimen>
-
-    <!-- Gallery sizes -->
-    <dimen name="tw__gallery_page_margin">12dp</dimen>
-</resources>
diff --git a/tweet-ui/src/main/res/values/ids.xml b/tweet-ui/src/main/res/values/ids.xml
deleted file mode 100644
index e96574d8..00000000
--- a/tweet-ui/src/main/res/values/ids.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <item name="tw__entity_index" type="id" />
-</resources>
diff --git a/tweet-ui/src/main/res/values/plurals.xml b/tweet-ui/src/main/res/values/plurals.xml
deleted file mode 100644
index 2e903aad..00000000
--- a/tweet-ui/src/main/res/values/plurals.xml
+++ /dev/null
@@ -1,34 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <!-- 1s / 5s -->
-    <plurals name="tw__time_secs">
-        <item quantity="one">1s</item>
-        <item quantity="other">%ds</item>
-    </plurals>
-    <!-- 1m / 5m -->
-    <plurals name="tw__time_mins">
-        <item quantity="one">1m</item>
-        <item quantity="other">%dm</item>
-    </plurals>
-    <!-- 1h / 5h -->
-    <plurals name="tw__time_hours">
-        <item quantity="one">1h</item>
-        <item quantity="other">%dh</item>
-    </plurals>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values/public.xml b/tweet-ui/src/main/res/values/public.xml
deleted file mode 100644
index 69b77dce..00000000
--- a/tweet-ui/src/main/res/values/public.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <!--suppress UnusedResources -->
-    <public type="style" name="tw__TweetLightStyle"/>
-    <!--suppress UnusedResources -->
-    <public type="style" name="tw__TweetLightWithActionsStyle"/>
-    <!--suppress UnusedResources -->
-    <public type="style" name="tw__TweetDarkStyle"/>
-    <!--suppress UnusedResources -->
-    <public type="style" name="tw__TweetDarkWithActionsStyle"/>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values/strings.xml b/tweet-ui/src/main/res/values/strings.xml
deleted file mode 100644
index d388883a..00000000
--- a/tweet-ui/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,42 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-
-    <!--Accessibility strings-->
-    <string name="tw__loading_tweet">Loading Tweet</string>
-    <string name="tw__tweet_content_description">%1$s. %2$s. %3$s.</string>
-
-    <!--Retweeted By string-->
-    <string name="tw__retweeted_by_format">Retweeted by %1$s</string>
-
-    <!--Tweet action strings-->
-    <string name="tw__like_tweet">Like Tweet</string>
-    <string name="tw__liked_tweet">Undo Like</string>
-    <string name="tw__share_tweet">Share Tweet</string>
-    <string name="tw__share_subject_format">Tweet from %1$s (@%2$s)</string>
-    <string name="tw__share_content_format">Check out @%1$s\'s Tweet: https://twitter.com/%1$s/status/%2$s</string>
-
-    <!--Vine refers to the brand "Vine" and should not be translated-->
-
-    <!--Video player accessibility strings-->
-    <string name="tw__play">play</string>
-    <string name="tw__pause">pause</string>
-    <string name="tw__replay">replay</string>
-    <string name="tw__tweet_media">Tweet Media</string>
-
-</resources>
diff --git a/tweet-ui/src/main/res/values/styles.xml b/tweet-ui/src/main/res/values/styles.xml
deleted file mode 100644
index 2bc94a93..00000000
--- a/tweet-ui/src/main/res/values/styles.xml
+++ /dev/null
@@ -1,42 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-
-    <style name="tw__TweetLightStyle">
-        <item name="tw__container_bg_color">@color/tw__tweet_light_container_bg_color</item>
-        <item name="tw__primary_text_color">@color/tw__tweet_light_primary_text_color</item>
-        <item name="tw__action_color">@color/tw__tweet_action_color</item>
-        <item name="tw__action_highlight_color">@color/tw__tweet_action_light_highlight_color</item>
-    </style>
-
-    <style name="tw__TweetLightWithActionsStyle" parent="tw__TweetLightStyle">
-        <item name="tw__tweet_actions_enabled">true</item>
-    </style>
-
-    <style name="tw__TweetDarkStyle">
-        <item name="tw__container_bg_color">@color/tw__tweet_dark_container_bg_color</item>
-        <item name="tw__primary_text_color">@color/tw__tweet_dark_primary_text_color</item>
-        <item name="tw__action_color">@color/tw__tweet_action_color</item>
-        <item name="tw__action_highlight_color">@color/tw__tweet_action_dark_highlight_color</item>
-    </style>
-
-    <style name="tw__TweetDarkWithActionsStyle" parent="tw__TweetDarkStyle">
-        <item name="tw__tweet_actions_enabled">true</item>
-    </style>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values/themes.xml b/tweet-ui/src/main/res/values/themes.xml
deleted file mode 100644
index 0da0f05f..00000000
--- a/tweet-ui/src/main/res/values/themes.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <style name="MediaTheme" parent="@android:style/Theme.Holo">
-        <item name="android:windowActionBar">false</item>
-        <item name="android:windowNoTitle">true</item>
-        <item name="android:windowBackground">@android:color/black</item>
-    </style>
-</resources>
diff --git a/tweet-ui/src/main/res/values/tw__tweet_actions_styles.xml b/tweet-ui/src/main/res/values/tw__tweet_actions_styles.xml
deleted file mode 100644
index 384d82ab..00000000
--- a/tweet-ui/src/main/res/values/tw__tweet_actions_styles.xml
+++ /dev/null
@@ -1,49 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <style name="tw__TweetActionButton">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_marginTop">@dimen/tw__tweet_action_button_margin_top</item>
-    </style>
-
-    <style name="tw__TweetActionButton.Heart">
-        <item name="android:layout_width">@dimen/tw__tweet_action_heart_size</item>
-        <item name="android:layout_height">@dimen/tw__tweet_action_heart_size</item>
-    </style>
-
-    <style name="tw__TweetActionButton.Share">
-        <item name="android:background">@null</item>
-        <item name="android:padding">@dimen/tw__tweet_action_share_padding</item>
-    </style>
-
-    <style name="tw__TweetActionButtonBar" tools:ignore="NewApi">
-        <item name="android:layout_marginLeft">@dimen/tw__tweet_action_bar_offset_left</item>
-        <item name="android:layout_marginStart">@dimen/tw__tweet_action_bar_offset_left</item>
-        <item name="android:layout_marginBottom">@dimen/tw__tweet_action_bar_offset_bottom</item>
-    </style>
-
-    <style name="tw__TweetActionButtonBar.Compact" tools:ignore="NewApi">
-        <item name="android:layout_marginLeft">@dimen/tw__compact_tweet_action_bar_offset_left</item>
-        <item name="android:layout_marginStart">@dimen/tw__compact_tweet_action_bar_offset_left</item>
-        <item name="android:layout_marginBottom">@dimen/tw__tweet_action_bar_offset_bottom</item>
-    </style>
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values/tw__tweet_layout_styles.xml b/tweet-ui/src/main/res/values/tw__tweet_layout_styles.xml
deleted file mode 100644
index ef52bb9b..00000000
--- a/tweet-ui/src/main/res/values/tw__tweet_layout_styles.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <style name="tw__TweetFillWidth">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">wrap_content</item>
-    </style>
-
-</resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values/tw__tweet_media_styles.xml b/tweet-ui/src/main/res/values/tw__tweet_media_styles.xml
deleted file mode 100644
index b045c722..00000000
--- a/tweet-ui/src/main/res/values/tw__tweet_media_styles.xml
+++ /dev/null
@@ -1,131 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <style name="tw__TweetAvatar" tools:ignore="NewApi">
-        <item name="android:layout_width">@dimen/tw__tweet_avatar_size</item>
-        <item name="android:layout_height">@dimen/tw__tweet_avatar_size</item>
-        <item name="android:layout_marginTop">@dimen/tw__tweet_avatar_margin_top</item>
-        <item name="android:layout_marginLeft">@dimen/tw__tweet_avatar_margin_left</item>
-        <item name="android:layout_marginStart">@dimen/tw__tweet_avatar_margin_left</item>
-        <item name="android:layout_marginRight">@dimen/tw__tweet_avatar_margin_right</item>
-        <item name="android:layout_marginEnd">@dimen/tw__tweet_avatar_margin_right</item>
-        <item name="android:focusable">false</item>
-    </style>
-
-    <style name="tw__TwitterLogo" tools:ignore="NewApi">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_marginTop">@dimen/tw__tweet_logo_margin_top</item>
-        <item name="android:layout_marginRight">@dimen/tw__tweet_logo_margin_right</item>
-        <item name="android:layout_marginEnd">@dimen/tw__tweet_logo_margin_right</item>
-        <item name="android:src">@drawable/tw__ic_logo_blue</item>
-        <item name="android:focusable">false</item>
-    </style>
-
-    <style name="tw__TweetMediaContainer">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:visibility">gone</item>
-    </style>
-
-    <style name="tw__TweetMediaContainer.Compact" tools:ignore="NewApi">
-        <item name="android:layout_marginTop">@dimen/tw__compact_tweet_media_margin_top</item>
-        <item name="android:layout_marginBottom">@dimen/tw__compact_tweet_media_margin_bottom</item>
-        <item name="android:layout_marginRight">@dimen/tw__compact_tweet_media_margin_right</item>
-        <item name="android:layout_marginEnd">@dimen/tw__compact_tweet_media_margin_right</item>
-    </style>
-
-    <style name="tw__TweetMediaContainer.Quote">
-        <item name="android:layout_marginBottom">@dimen/tw__quote_tweet_media_margin_bottom</item>
-        <item name="android:layout_marginRight">@dimen/tw__quote_tweet_media_margin_horizontal</item>
-        <item name="android:layout_marginLeft">@dimen/tw__quote_tweet_media_margin_horizontal</item>
-    </style>
-
-    <style name="tw__QuoteTweetContainer" tools:ignore="NewApi">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:visibility">gone</item>
-        <item name="android:layout_marginLeft">@dimen/tw__tweet_quote_tweet_margin_horizontal</item>
-        <item name="android:layout_marginRight">@dimen/tw__tweet_quote_tweet_margin_horizontal</item>
-        <item name="android:layout_marginTop">@dimen/tw__tweet_quote_tweet_margin_top</item>
-    </style>
-
-    <style name="tw__QuoteTweetContainer.Compact"
-        tools:ignore="NewApi">
-        <item name="android:layout_marginLeft">@dimen/tw__compact_tweet_quote_tweet_margin_left</item>
-        <item name="android:layout_marginStart">@dimen/tw__compact_tweet_quote_tweet_margin_left</item>
-        <item name="android:layout_marginRight">@dimen/tw__compact_tweet_quote_tweet_margin_right</item>
-        <item name="android:layout_marginEnd">@dimen/tw__compact_tweet_quote_tweet_margin_right</item>
-    </style>
-
-    <style name="tw__TweetMedia">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">match_parent</item>
-    </style>
-
-    <style name="tw__Badge">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_gravity">center</item>
-        <item name="android:visibility">gone</item>
-    </style>
-
-    <style name="tw__Badge.VideoDuration">
-        <item name="android:background">@drawable/tw__bg_media_badge</item>
-        <item name="android:includeFontPadding">false</item>
-        <item name="android:padding">2dp</item>
-        <item name="android:textColor">@android:color/white</item>
-        <item name="android:textSize">@dimen/tw__text_size_small</item>
-        <item name="android:textStyle">bold</item>
-    </style>
-
-    <style name="tw__TweetBadge" tools:ignore="NewApi">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_margin">@dimen/tw__tweet_media_badge_margin</item>
-        <item name="android:layout_gravity">bottom|left</item>
-    </style>
-
-    <!--Compact Styles-->
-
-    <style name="tw__TweetAvatar.Compact" parent="tw__TweetAvatar"
-        tools:ignore="NewApi">
-        <item name="android:layout_width">@dimen/tw__tweet_avatar_size</item>
-        <item name="android:layout_height">@dimen/tw__tweet_avatar_size</item>
-        <item name="android:layout_marginTop">@dimen/tw__compact_tweet_avatar_margin_top</item>
-        <item name="android:layout_marginLeft">@dimen/tw__compact_tweet_avatar_margin_left</item>
-        <item name="android:layout_marginStart">@dimen/tw__compact_tweet_avatar_margin_left</item>
-        <item name="android:layout_marginRight">@dimen/tw__compact_tweet_avatar_margin_right</item>
-        <item name="android:layout_marginEnd">@dimen/tw__compact_tweet_avatar_margin_right</item>
-        <item name="android:focusable">false</item>
-    </style>
-
-    <style name="tw__TwitterLogo.Compact"
-        tools:ignore="NewApi">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_marginTop">@dimen/tw__compact_tweet_logo_margin_top</item>
-        <item name="android:layout_marginRight">@dimen/tw__compact_tweet_logo_margin_right</item>
-        <item name="android:layout_marginEnd">@dimen/tw__compact_tweet_logo_margin_right</item>
-        <item name="android:src">@drawable/tw__ic_logo_blue</item>
-    </style>
-
-</resources>
diff --git a/tweet-ui/src/main/res/values/tw__tweet_text_styles.xml b/tweet-ui/src/main/res/values/tw__tweet_text_styles.xml
deleted file mode 100644
index 8c52f926..00000000
--- a/tweet-ui/src/main/res/values/tw__tweet_text_styles.xml
+++ /dev/null
@@ -1,181 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:android="http://schemas.android.com/apk/res/android"
-           xmlns:tools="http://schemas.android.com/tools">
-
-    <style name="tw__TweetRetweetedBy"
-           tools:ignore="NewApi">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_marginTop">@dimen/tw__tweet_retweeted_by_margin_top</item>
-        <item name="android:layout_marginLeft">@dimen/tw__tweet_retweeted_by_margin_left</item>
-        <item name="android:layout_marginStart">@dimen/tw__tweet_retweeted_by_margin_left</item>
-        <item name="android:layout_marginBottom">@dimen/tw__tweet_retweeted_by_margin_bottom</item>
-        <item name="android:drawableLeft">@drawable/tw__ic_retweet_light</item>
-        <item name="android:drawableStart">@drawable/tw__ic_retweet_light</item>
-        <item name="android:drawablePadding">@dimen/tw__tweet_retweeted_by_drawable_padding</item>
-        <item name="android:textSize">@dimen/tw__text_size_medium</item>
-        <item name="android:fontFamily">sans-serif</item>
-        <item name="android:focusable">false</item>
-        <item name="android:singleLine">true</item>
-        <item name="android:ellipsize">end</item>
-        <item name="android:visibility">gone</item>
-    </style>
-
-    <style name="tw__AttributionText"
-           tools:ignore="NewApi">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:textSize">@dimen/tw__text_size_medium</item>
-        <item name="android:fontFamily">sans-serif</item>
-        <item name="android:singleLine">true</item>
-    </style>
-
-    <style name="tw__TweetFullNameBase" parent="tw__AttributionText" tools:ignore="NewApi">
-        <item name="android:layout_marginTop">@dimen/tw__tweet_full_name_margin_top</item>
-        <item name="android:layout_marginRight">@dimen/tw__tweet_full_name_margin_right</item>
-        <item name="android:layout_marginEnd">@dimen/tw__tweet_full_name_margin_right</item>
-        <item name="android:textSize">@dimen/tw__text_size_large</item>
-        <item name="android:textColor">@color/tw__tweet_light_primary_text_color</item>
-        <item name="android:drawablePadding">@dimen/tw__tweet_full_name_drawable_padding</item>
-        <item name="android:focusable">false</item>
-        <item name="android:importantForAccessibility">no</item>
-    </style>
-
-    <style name="tw__TweetFullName" parent="tw__TweetFullNameBase">
-        <item name="android:textStyle">bold</item>
-    </style>
-
-    <!--ScreenName should ellipsize, name and timestamp should not ellipsize-->
-    <style name="tw__TweetScreenName" parent="tw__AttributionText"
-        tools:ignore="NewApi">
-        <item name="android:layout_marginTop">@dimen/tw__tweet_screen_name_margin_top</item>
-        <item name="android:layout_marginBottom">@dimen/tw__tweet_screen_name_margin_bottom</item>
-        <item name="android:ellipsize">end</item>
-        <item name="android:focusable">false</item>
-        <item name="android:importantForAccessibility">no</item>
-    </style>
-
-    <style name="tw__TweetTimestamp" parent="tw__AttributionText"
-        tools:ignore="NewApi">
-        <item name="android:layout_marginTop">@dimen/tw__tweet_timestamp_margin_top</item>
-        <item name="android:paddingLeft">@dimen/tw__tweet_timestamp_padding_left</item>
-        <item name="android:ellipsize">none</item>
-        <item name="android:focusable">false</item>
-        <item name="android:importantForAccessibility">no</item>
-    </style>
-
-    <style name="tw__TweetText"
-        tools:ignore="NewApi">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_marginTop">@dimen/tw__tweet_text_margin_top</item>
-        <item name="android:layout_marginLeft">@dimen/tw__tweet_text_margin_left</item>
-        <item name="android:layout_marginStart">@dimen/tw__tweet_text_margin_left</item>
-        <item name="android:layout_marginRight">@dimen/tw__tweet_text_margin_right</item>
-        <item name="android:layout_marginEnd">@dimen/tw__tweet_text_margin_right</item>
-        <item name="android:fontFamily">sans-serif-light</item>
-        <item name="android:textSize">@dimen/tw__text_size_large</item>
-        <item name="android:lineSpacingExtra">2dp</item>
-        <item name="android:textColor">@color/tw__tweet_light_primary_text_color</item>
-        <item name="android:textColorLink">@color/tw__tweet_action_color</item>
-        <item name="android:focusable">false</item>
-        <item name="android:importantForAccessibility">no</item>
-    </style>
-
-    <!--Compact Styles-->
-
-    <style name="tw__TweetRetweetedBy.Compact"
-        tools:ignore="NewApi">
-        <item name="android:layout_marginLeft">@dimen/tw__compact_tweet_retweeted_by_margin_left</item>
-        <item name="android:layout_marginStart">@dimen/tw__compact_tweet_retweeted_by_margin_left</item>
-        <item name="android:layout_marginBottom">@dimen/tw__compact_tweet_retweeted_by_margin_bottom</item>
-        <item name="android:layout_marginTop">@dimen/tw__compact_tweet_retweeted_by_margin_top</item>
-        <item name="android:drawablePadding">@dimen/tw__compact_tweet_retweeted_by_drawable_padding</item>
-    </style>
-
-    <style name="tw__CompactAttributionLine"
-        tools:ignore="NewApi">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_marginRight">@dimen/tw__compact_tweet_attribution_line_margin_right</item>
-        <item name="android:layout_marginEnd">@dimen/tw__compact_tweet_attribution_line_margin_right</item>
-        <item name="android:importantForAccessibility">noHideDescendants</item>
-    </style>
-
-    <style name="tw__TweetFullName.Compact"
-        tools:ignore="NewApi">
-        <item name="android:layout_marginTop">@dimen/tw__compact_tweet_full_name_margin_top</item>
-        <item name="android:layout_marginRight">@dimen/tw__compact_tweet_full_name_margin_right</item>
-        <item name="android:layout_marginEnd">@dimen/tw__compact_tweet_full_name_margin_right</item>
-        <item name="android:ellipsize">none</item>
-    </style>
-
-    <!--ScreenName should ellipsize, name and timestamp should not ellipsize-->
-    <style name="tw__TweetScreenName.Compact"
-        tools:ignore="NewApi">
-        <item name="android:layout_width">@dimen/tw__compact_tweet_screen_name_layout_width</item>
-        <item name="android:layout_weight">1</item>
-        <item name="android:layout_marginTop">@dimen/tw__compact_tweet_screen_name_margin_top</item>
-        <item name="android:layout_marginBottom">@dimen/tw__compact_tweet_screen_name_margin_bottom</item>
-        <item name="android:paddingLeft">@dimen/tw__compact_tweet_screen_name_padding_left</item>
-        <item name="android:paddingStart">@dimen/tw__compact_tweet_screen_name_padding_left</item>
-        <item name="android:fontFamily">sans-serif-light</item>
-        <item name="android:textSize">@dimen/tw__text_size_medium</item>
-        <item name="android:ellipsize">end</item>
-    </style>
-
-    <style name="tw__TweetTimestamp.Compact"
-        tools:ignore="NewApi">
-        <item name="android:layout_marginTop">@dimen/tw__compact_tweet_timestamp_margin_top</item>
-        <item name="android:fontFamily">sans-serif-light</item>
-        <item name="android:textSize">@dimen/tw__text_size_medium</item>
-        <item name="android:ellipsize">none</item>
-    </style>
-
-    <style name="tw__TweetText.Compact"
-        tools:ignore="NewApi">
-        <item name="android:layout_marginTop">@dimen/tw__compact_tweet_text_margin_top</item>
-        <item name="android:layout_marginLeft">@dimen/tw__compact_tweet_text_margin_left</item>
-        <item name="android:layout_marginStart">@dimen/tw__compact_tweet_text_margin_left</item>
-        <item name="android:layout_marginRight">@dimen/tw__compact_tweet_text_margin_right</item>
-        <item name="android:layout_marginEnd">@dimen/tw__compact_tweet_text_margin_right</item>
-    </style>
-
-    <!-- Quote Tweet Styles -->
-    <style name="tw__QuoteAttributionLine"
-        tools:ignore="NewApi">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:importantForAccessibility">noHideDescendants</item>
-        <item name="android:layout_marginTop">@dimen/tw__quote_tweet_attribution_text_margin_top</item>
-        <item name="android:layout_marginLeft">@dimen/tw__quote_tweet_attribution_text_margin_horizontal</item>
-        <item name="android:layout_marginStart">@dimen/tw__quote_tweet_attribution_text_margin_horizontal</item>
-        <item name="android:layout_marginRight">@dimen/tw__quote_tweet_attribution_text_margin_horizontal</item>
-        <item name="android:layout_marginEnd">@dimen/tw__quote_tweet_attribution_text_margin_horizontal</item>
-    </style>
-
-    <style name="tw__TweetText.Quote" tools:ignore="NewApi">
-        <item name="android:layout_marginTop">@dimen/tw__compact_tweet_text_margin_top</item>
-        <item name="android:layout_marginBottom">@dimen/tw__quote_tweet_text_margin_bottom</item>
-        <item name="android:layout_marginLeft">@dimen/tw__quote_tweet_text_margin_horizontal</item>
-        <item name="android:layout_marginStart">@dimen/tw__quote_tweet_text_margin_horizontal</item>
-        <item name="android:layout_marginRight">@dimen/tw__quote_tweet_text_margin_horizontal</item>
-        <item name="android:layout_marginEnd">@dimen/tw__quote_tweet_text_margin_horizontal</item>
-    </style>
-</resources>
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/BaseTimelineTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/BaseTimelineTest.java
deleted file mode 100644
index 3534bb34..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/BaseTimelineTest.java
+++ /dev/null
@@ -1,41 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNull;
-
-@RunWith(RobolectricTestRunner.class)
-public class BaseTimelineTest {
-    private static final Long TEST_ID = 200L;
-
-    @Test
-    public void testDecrementMaxId_positive() {
-        final Long correctedId = BaseTimeline.decrementMaxId(TEST_ID);
-        assertEquals((Long) (TEST_ID - 1L), correctedId);
-    }
-
-    @Test
-    public void testDecrementMaxId_nullId() {
-        assertNull(BaseTimeline.decrementMaxId(null));
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/BasicTimelineFilterTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/BasicTimelineFilterTest.java
deleted file mode 100644
index 70796263..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/BasicTimelineFilterTest.java
+++ /dev/null
@@ -1,277 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.annotation.SuppressLint;
-
-import com.twitter.sdk.android.core.models.HashtagEntity;
-import com.twitter.sdk.android.core.models.MentionEntity;
-import com.twitter.sdk.android.core.models.SymbolEntity;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetBuilder;
-import com.twitter.sdk.android.core.models.TweetEntities;
-import com.twitter.sdk.android.core.models.UrlEntity;
-import com.twitter.sdk.android.core.models.User;
-import com.twitter.sdk.android.core.models.UserBuilder;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.List;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertTrue;
-
-@RunWith(RobolectricTestRunner.class)
-public class BasicTimelineFilterTest {
-    static final Tweet TEST_TWEET_1 = new TweetBuilder()
-            .setText("Lorem Ipsum is simply dummy text of the printing and typesetting industry.")
-            .setLang("en")
-            .build();
-    static final Tweet TEST_TWEET_2 = new TweetBuilder()
-            .setText("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")
-            .setLang("en")
-            .build();
-    static final Tweet TEST_TWEET_3 = new TweetBuilder()
-            .setText("Donec sodales imperdiet nisi non ullamcorper. Maecenas in turpis ex.")
-            .setLang("en")
-            .build();
-
-    BasicTimelineFilter basicTimelineFilter;
-
-    @Before
-    @SuppressLint("NewApi")
-    public void setUp() throws Exception {
-        final List<String> keywords = Arrays.asList("dummy", "darn", "foobar");
-        final List<String> hashtags = Arrays.asList("cookies", "CookiesAreAwesome");
-        final List<String> handles = Arrays.asList("benward", "vam_si", "ericfrohnhoefer");
-        final List<String> urls = Arrays.asList("Cookiesareawesome.com", "beevil.net");
-        final FilterValues filterValues = new FilterValues(keywords, hashtags, handles, urls);
-
-        basicTimelineFilter = new BasicTimelineFilter(filterValues);
-    }
-
-    @Test
-    public void testFilter() {
-        final List<Tweet> tweets = new ArrayList<>();
-        tweets.add(TEST_TWEET_1);
-        tweets.add(TEST_TWEET_2);
-        tweets.add(TEST_TWEET_3);
-
-        final List<Tweet> filteredTweets = basicTimelineFilter.filter(tweets);
-
-        assertNotNull(filteredTweets);
-        assertEquals(2, filteredTweets.size());
-        assertEquals(TEST_TWEET_2, filteredTweets.get(0));
-        assertEquals(TEST_TWEET_3, filteredTweets.get(0));
-    }
-
-    @Test
-    public void testShouldFilterTweet_withNoMatch() {
-        assertFalse(basicTimelineFilter.shouldFilterTweet(TEST_TWEET_2));
-    }
-
-    @Test
-    public void testShouldFilterTweet_withTextMatch() {
-        assertTrue(basicTimelineFilter.shouldFilterTweet(TEST_TWEET_1));
-    }
-
-    @Test
-    public void testShouldFilterTweet_withEntityMatch() {
-        final UrlEntity entity =
-                new UrlEntity("beevil.net", "http://beevil.net", "beevil.net", 0, 0);
-        final TweetEntities entities =
-                new TweetEntities(Collections.singletonList(entity), null, null, null, null);
-        final Tweet tweet = new TweetBuilder().setText("").setEntities(entities).build();
-
-        assertTrue(basicTimelineFilter.shouldFilterTweet(tweet));
-    }
-
-    @Test
-    public void testShouldFilterTweet_withUserMatch() {
-        final User user = new UserBuilder().setScreenName("EricFrohnhoefer").build();
-        final Tweet tweet = new TweetBuilder().setText("").setUser(user).build();
-
-        assertTrue(basicTimelineFilter.shouldFilterTweet(tweet));
-    }
-
-    @Test
-    public void testContainsMatchingText_withNoMatch() {
-        assertFalse(basicTimelineFilter.containsMatchingText(TEST_TWEET_2));
-    }
-
-    @Test
-    public void testContainsMatchingText_withMatch() {
-        assertTrue(basicTimelineFilter.containsMatchingText(TEST_TWEET_1));
-    }
-
-    @Test
-    public void testContainsMatchingUrl_withNoMatch() {
-        final UrlEntity entity =
-                new UrlEntity("foobar.com", "http://foobar.com", "foobar.com", 0, 0);
-
-        assertFalse(basicTimelineFilter.containsMatchingUrl(Collections.singletonList(entity)));
-    }
-
-    @Test
-    public void testContainsMatchingUrl_withMatch() {
-        final UrlEntity entity = new UrlEntity("Cookiesareawesome.com",
-                "http://Cookiesareawesome.com", "Cookiesareawesome.com", 0, 0);
-
-        assertTrue(basicTimelineFilter.containsMatchingUrl(Collections.singletonList(entity)));
-    }
-
-    @Test
-    public void testContainsMatchingHashtag_withNoMatch() {
-        final HashtagEntity entity = new HashtagEntity("foobar", 0, 0);
-
-        assertFalse(basicTimelineFilter.containsMatchingHashtag(Collections.singletonList(entity)));
-    }
-
-    @Test
-    public void testContainsMatchingHashtag_withMatch() {
-        final HashtagEntity entity = new HashtagEntity("cookies", 0, 0);
-
-        assertTrue(basicTimelineFilter.containsMatchingHashtag(Collections.singletonList(entity)));
-    }
-
-    @Test
-    public void testContainsMatchingSymbol_withNoMatch() {
-        final SymbolEntity entity = new SymbolEntity("foobar", 0, 0);
-
-        assertFalse(basicTimelineFilter.containsMatchingSymbol(Collections.singletonList(entity)));
-    }
-
-    @Test
-    public void testContainsMatchingSymbol_withMatch() {
-        final SymbolEntity entity = new SymbolEntity("cookies", 0, 0);
-
-        assertTrue(basicTimelineFilter.containsMatchingSymbol(Collections.singletonList(entity)));
-    }
-
-    @Test
-    public void testContainsMatchingMention_withNoMatch() {
-        final MentionEntity entity =
-                new MentionEntity(0, "0", "Foo Bar", "FooBar", 0, 0);
-
-        assertFalse(basicTimelineFilter.containsMatchingMention(Collections.singletonList(entity)));
-    }
-
-    @Test
-    public void testContainsMatchingMention_withMatch() {
-        final MentionEntity entity =
-                new MentionEntity(0, "0", "Eric Frohnhoefer", "EricFrohnhoefer", 0, 0);
-
-        assertTrue(basicTimelineFilter.containsMatchingMention(Collections.singletonList(entity)));
-    }
-
-    @Test
-    public void testContainsMatchingScreenName_withNoMatch() {
-        assertFalse(basicTimelineFilter.containsMatchingScreenName("FooBar"));
-    }
-
-    @Test
-    public void testContainsMatchingScreenName_withMatch() {
-        assertTrue(basicTimelineFilter.containsMatchingScreenName("EricFrohnhoefer"));
-    }
-
-    @Test
-    public void testNormalizeHandle() {
-        String twitterHandle = "@twitter";
-        String normalizedHandle = BasicTimelineFilter.normalizeHandle(twitterHandle);
-        assertEquals("twitter", normalizedHandle);
-
-        twitterHandle = "＠twitter";
-        normalizedHandle = BasicTimelineFilter.normalizeHandle(twitterHandle);
-        assertEquals("twitter", normalizedHandle);
-    }
-
-    @Test
-    public void testNormalizeHandleWithoutAtSign() {
-        final String twitterHandle = "twiTTer";
-        final String normalizedHandle = BasicTimelineFilter.normalizeHandle(twitterHandle);
-        assertEquals("twitter", normalizedHandle);
-    }
-
-    @Test
-    public void testNormalizeHashtag() {
-        String hashtag = "#twitter";
-        String normalizedHashtag = BasicTimelineFilter.normalizeHashtag(hashtag);
-        assertEquals("twitter", normalizedHashtag);
-
-        hashtag = "＃twitter";
-        normalizedHashtag = BasicTimelineFilter.normalizeHashtag(hashtag);
-        assertEquals("twitter", normalizedHashtag);
-
-        hashtag = "$TWTR";
-        normalizedHashtag = BasicTimelineFilter.normalizeHashtag(hashtag);
-        assertEquals("TWTR", normalizedHashtag);
-    }
-
-    @Test
-    public void testNormalizeHashtagWithoutHashtag() {
-        final String hashtag = "TWTR";
-        final String normalizedHashtag = BasicTimelineFilter.normalizeHashtag(hashtag);
-        assertEquals(hashtag, normalizedHashtag);
-    }
-
-    @Test
-    public void testNormalizeUrl() {
-        String url = "twitter.com";
-        String normalizedUrl = BasicTimelineFilter.normalizeUrl(url);
-        assertEquals("twitter.com", normalizedUrl);
-
-        url = "dev.twitter.com";
-        normalizedUrl = BasicTimelineFilter.normalizeUrl(url);
-        assertEquals("dev.twitter.com", normalizedUrl);
-
-        url = "http://twitter.com";
-        normalizedUrl = BasicTimelineFilter.normalizeUrl(url);
-        assertEquals("twitter.com", normalizedUrl);
-
-        url = "http://TwiTTer.com";
-        normalizedUrl = BasicTimelineFilter.normalizeUrl(url);
-        assertEquals("twitter.com", normalizedUrl);
-
-        url = "https://twitter.com/test";
-        normalizedUrl = BasicTimelineFilter.normalizeUrl(url);
-        assertEquals("twitter.com", normalizedUrl);
-
-        url = "транспорт.com";
-        normalizedUrl = BasicTimelineFilter.normalizeUrl(url);
-        assertEquals("xn--80a0addceeeh.com", normalizedUrl);
-
-        url = "https://транспорт.com/test";
-        normalizedUrl = BasicTimelineFilter.normalizeUrl(url);
-        assertEquals("xn--80a0addceeeh.com", normalizedUrl);
-    }
-
-    @Test
-    public void testNormalizeUrl_withProhibitedCodePoint() {
-        final String url = "twitter\u180E.com";
-        final String normalizedUrl = BasicTimelineFilter.normalizeUrl(url);
-        assertEquals(url, normalizedUrl);
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/CollectionTimelineTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/CollectionTimelineTest.java
deleted file mode 100644
index 4803e104..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/CollectionTimelineTest.java
+++ /dev/null
@@ -1,283 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetBuilder;
-import com.twitter.sdk.android.core.models.TwitterCollection;
-import com.twitter.sdk.android.core.models.User;
-import com.twitter.sdk.android.core.models.UserBuilder;
-import com.twitter.sdk.android.core.services.CollectionService;
-
-import org.junit.Before;
-import org.junit.Test;
-
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.assertTrue;
-import static org.junit.Assert.fail;
-import static org.mockito.Matchers.eq;
-import static org.mockito.Matchers.isNull;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.spy;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-public class CollectionTimelineTest {
-    private static final String ILLEGAL_TWEET_UI_MESSAGE = "TweetUi instance must not be null";
-    private static final Long TEST_COLLECTION_ID = 393773266801659904L;
-    private static final Integer TEST_ITEMS_PER_REQUEST = 100;
-    private static final Integer REQUIRED_DEFAULT_ITEMS_PER_REQUEST = 30;
-    private static final String REQUIRED_IMPRESSION_SECTION = "collection";
-    private static final Long TEST_MAX_POSITION = 1111L;
-    private static final Long TEST_MIN_POSITION = 1000L;
-    private static final TwitterCollection.Metadata.Position TEST_POSITION
-            = new TwitterCollection.Metadata.Position(TEST_MAX_POSITION, TEST_MIN_POSITION);
-    private static final User TEST_USER_1 = new UserBuilder().setName("foo").setId(40L).build();
-    private static final User TEST_USER_2 = new UserBuilder().setName("bar").setId(41L).build();
-    private static final Tweet TEST_TWEET_1
-            = new TweetBuilder().setId(5858L).setUser(TEST_USER_1).build();
-    private static final Tweet TEST_TWEET_2
-            = new TweetBuilder().setId(8585L).setUser(TEST_USER_1).build();
-    private static final Tweet TEST_TWEET_QUOTE
-            = new TweetBuilder().setId(858909L).setUser(TEST_USER_1).setQuotedStatus(TEST_TWEET_2)
-            .build();
-
-    private Map<Long, Tweet> testTweetMap = new HashMap<>();
-    private Map<Long, User> testUserMap = new HashMap<>();
-    private List<TwitterCollection.TimelineItem> testItems = new ArrayList<>();
-    private List<TwitterCollection.TimelineItem> testItemsRev = new ArrayList<>();
-
-    TwitterCore twitterCore;
-    TwitterApiClient apiClient;
-    CollectionService collectionService;
-
-    @Before
-    public void setUp() throws Exception {
-        testUserMap.put(TEST_USER_1.id, TEST_USER_1);
-        testUserMap.put(TEST_USER_2.id, TEST_USER_2);
-        testTweetMap.put(TEST_TWEET_1.id, TEST_TWEET_1);
-        testTweetMap.put(TEST_TWEET_2.id, TEST_TWEET_2);
-        testTweetMap.put(TEST_TWEET_QUOTE.id, TEST_TWEET_QUOTE);
-        // testItems order Test Tweet 1, then 2
-        testItems.add(new TwitterCollection.TimelineItem(
-                new TwitterCollection.TimelineItem.TweetItem(5858L)));
-        testItems.add(new TwitterCollection.TimelineItem(
-                new TwitterCollection.TimelineItem.TweetItem(8585L)));
-        testItems.add(new TwitterCollection.TimelineItem(
-                new TwitterCollection.TimelineItem.TweetItem(858909L)));
-        // testItemsRev orders Test Tweet 2, then 1
-        testItemsRev.add(new TwitterCollection.TimelineItem(
-                new TwitterCollection.TimelineItem.TweetItem(858909L)));
-        testItemsRev.add(new TwitterCollection.TimelineItem(
-                new TwitterCollection.TimelineItem.TweetItem(8585L)));
-        testItemsRev.add(new TwitterCollection.TimelineItem(
-                new TwitterCollection.TimelineItem.TweetItem(5858L)));
-
-        twitterCore = mock(TwitterCore.class);
-        apiClient = mock(TwitterApiClient.class);
-        collectionService = mock(CollectionService.class, new MockCallAnswer());
-
-        when(apiClient.getCollectionService()).thenReturn(collectionService);
-        when(twitterCore.getApiClient()).thenReturn(apiClient);
-    }
-
-    @Test
-    public void testConstructor() {
-        final CollectionTimeline timeline = new CollectionTimeline(twitterCore, TEST_COLLECTION_ID,
-                TEST_ITEMS_PER_REQUEST);
-        assertEquals(CollectionTimeline.COLLECTION_PREFIX + TEST_COLLECTION_ID,
-                timeline.collectionIdentifier);
-    }
-
-    @Test
-    public void testNext_createsCorrectRequest() {
-        final CollectionTimeline timeline = spy(new CollectionTimeline(twitterCore,
-                TEST_COLLECTION_ID, TEST_ITEMS_PER_REQUEST));
-        timeline.next(TEST_MIN_POSITION, mock(Callback.class));
-        verify(timeline).createCollectionRequest(eq(TEST_MIN_POSITION), isNull(Long.class));
-    }
-
-    @Test
-    public void testPrevious_createsCorrectRequest() {
-        final CollectionTimeline timeline = spy(new CollectionTimeline(twitterCore,
-                TEST_COLLECTION_ID, TEST_ITEMS_PER_REQUEST));
-        timeline.next(TEST_MAX_POSITION, mock(Callback.class));
-        verify(timeline).createCollectionRequest(eq(TEST_MAX_POSITION), isNull(Long.class));
-    }
-
-    @Test
-    public void testCreateCollectionRequest() {
-        // build a timeline with test params
-        final CollectionTimeline timeline = new CollectionTimeline(twitterCore,
-                TEST_COLLECTION_ID, TEST_ITEMS_PER_REQUEST);
-
-        // create a request directly
-        timeline.createCollectionRequest(TEST_MIN_POSITION, TEST_MAX_POSITION);
-
-        // assert collection call is made with the correct arguments
-        verify(twitterCore.getApiClient().getCollectionService()).collection(
-                eq(CollectionTimeline.COLLECTION_PREFIX + TEST_COLLECTION_ID),
-                eq(TEST_ITEMS_PER_REQUEST), eq(TEST_MAX_POSITION), eq(TEST_MIN_POSITION));
-    }
-
-    @Test
-    public void testGetOrderedTweets() {
-        final TwitterCollection.Content contents
-                = new TwitterCollection.Content(testTweetMap, testUserMap);
-        final TwitterCollection.Metadata metadata
-                = new TwitterCollection.Metadata("", TEST_POSITION, testItems);
-        final List<Tweet> tweets = CollectionTimeline.getOrderedTweets(
-                new TwitterCollection(contents, metadata));
-        assertEquals(3, tweets.size());
-        assertEquals(TEST_TWEET_1, tweets.get(0));
-        assertEquals(TEST_TWEET_2, tweets.get(1));
-        assertEquals(TEST_TWEET_QUOTE, tweets.get(2));
-    }
-
-    @Test
-    public void testGetOrderedTweets_respectsTimelineItemsOrder() {
-        final TwitterCollection.Content contents = new TwitterCollection.Content(testTweetMap,
-                testUserMap);
-        final TwitterCollection.Metadata metadata = new TwitterCollection.Metadata("",
-                TEST_POSITION, testItemsRev);
-        final List<Tweet> tweets = CollectionTimeline.getOrderedTweets(
-                new TwitterCollection(contents, metadata));
-        assertEquals(3, tweets.size());
-        assertEquals(TEST_TWEET_QUOTE, tweets.get(0));
-        assertEquals(TEST_TWEET_2, tweets.get(1));
-        assertEquals(TEST_TWEET_1, tweets.get(2));
-    }
-
-    @Test
-    public void testGetOrderedTweets_handlesNull() {
-        TwitterCollection collection = new TwitterCollection(
-            new TwitterCollection.Content(null, testUserMap),
-            new TwitterCollection.Metadata("", TEST_POSITION, testItems));
-        List<Tweet> tweets = CollectionTimeline.getOrderedTweets(collection);
-        assertTrue(tweets.isEmpty());
-        collection = new TwitterCollection(new TwitterCollection.Content(testTweetMap, null),
-                new TwitterCollection.Metadata("", TEST_POSITION, testItems));
-        tweets = CollectionTimeline.getOrderedTweets(collection);
-        assertTrue(tweets.isEmpty());
-        collection = new TwitterCollection(new TwitterCollection.Content(testTweetMap, testUserMap),
-                new TwitterCollection.Metadata("", null, testItems));
-        tweets = CollectionTimeline.getOrderedTweets(collection);
-        assertTrue(tweets.isEmpty());
-        collection = new TwitterCollection(new TwitterCollection.Content(testTweetMap, testUserMap),
-                new TwitterCollection.Metadata("", TEST_POSITION, null));
-        tweets = CollectionTimeline.getOrderedTweets(collection);
-        assertTrue(tweets.isEmpty());
-        collection = new TwitterCollection(new TwitterCollection.Content(testTweetMap, testUserMap),
-                null);
-        tweets = CollectionTimeline.getOrderedTweets(collection);
-        assertTrue(tweets.isEmpty());
-        collection = new TwitterCollection(null, new TwitterCollection.Metadata("", TEST_POSITION,
-                testItems));
-        tweets = CollectionTimeline.getOrderedTweets(collection);
-        assertTrue(tweets.isEmpty());
-        collection = new TwitterCollection(null, null);
-        tweets = CollectionTimeline.getOrderedTweets(collection);
-        assertTrue(tweets.isEmpty());
-        tweets = CollectionTimeline.getOrderedTweets(null);
-        assertTrue(tweets.isEmpty());
-    }
-
-    @Test
-    public void testGetTimelineCursor() {
-        final TwitterCollection.Content contents
-                = new TwitterCollection.Content(testTweetMap, testUserMap);
-        final TwitterCollection.Metadata metadata
-                = new TwitterCollection.Metadata("", TEST_POSITION, testItems);
-        final TimelineCursor cursor = CollectionTimeline.getTimelineCursor(
-                new TwitterCollection(contents, metadata));
-        assertEquals(TEST_MAX_POSITION, cursor.maxPosition);
-        assertEquals(TEST_MIN_POSITION, cursor.minPosition);
-    }
-
-    @Test
-    public void testGetTimelineCursor_handlesNull() {
-        TwitterCollection collection = new TwitterCollection(new TwitterCollection.Content(null,
-                testUserMap), new TwitterCollection.Metadata("", null, testItems));
-        TimelineCursor timelineCursor = CollectionTimeline.getTimelineCursor(collection);
-        assertNull(timelineCursor);
-        collection = new TwitterCollection(new TwitterCollection.Content(null, testUserMap), null);
-        timelineCursor = CollectionTimeline.getTimelineCursor(collection);
-        assertNull(timelineCursor);
-        timelineCursor = CollectionTimeline.getTimelineCursor(null);
-        assertNull(timelineCursor);
-    }
-
-    /* Builder */
-    @Test
-    public void testBuilder() {
-        final CollectionTimeline timeline = new CollectionTimeline.Builder(twitterCore)
-                .id(TEST_COLLECTION_ID)
-                .maxItemsPerRequest(TEST_ITEMS_PER_REQUEST)
-                .build();
-        assertEquals(CollectionTimeline.COLLECTION_PREFIX + TEST_COLLECTION_ID,
-                timeline.collectionIdentifier);
-        assertEquals(TEST_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-    }
-
-    @Test
-    public void testBuilder_defaults() {
-        final CollectionTimeline timeline = new CollectionTimeline.Builder(twitterCore)
-                .id(TEST_COLLECTION_ID)
-                .build();
-        assertEquals(CollectionTimeline.COLLECTION_PREFIX + TEST_COLLECTION_ID,
-                timeline.collectionIdentifier);
-        assertEquals(REQUIRED_DEFAULT_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-    }
-
-    @Test
-    public void testBuilder_id() {
-        final CollectionTimeline timeline = new CollectionTimeline.Builder(twitterCore)
-                .id(TEST_COLLECTION_ID)
-                .build();
-        assertEquals(CollectionTimeline.COLLECTION_PREFIX + TEST_COLLECTION_ID,
-                timeline.collectionIdentifier);
-    }
-
-    @Test
-    public void testBuilder_idNull() {
-        try {
-            new CollectionTimeline.Builder(twitterCore).id(null).build();
-            fail("Expected IllegalStateException");
-        } catch (IllegalStateException e) {
-            assertEquals("collection id must not be null", e.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_maxItemsPerRequest() {
-        final CollectionTimeline timeline = new CollectionTimeline.Builder(twitterCore)
-                .id(TEST_COLLECTION_ID)
-                .maxItemsPerRequest(TEST_ITEMS_PER_REQUEST)
-                .build();
-        assertEquals(TEST_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/ColorUtilsTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/ColorUtilsTest.java
deleted file mode 100644
index aac69f58..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/ColorUtilsTest.java
+++ /dev/null
@@ -1,63 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.graphics.Color;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
-
-@RunWith(RobolectricTestRunner.class)
-public class ColorUtilsTest {
-
-    @Test
-    public void testIsLightColor_blue() {
-        assertFalse(ColorUtils.isLightColor(Color.BLUE));
-    }
-
-    @Test
-    public void testIsLightColor_black() {
-        assertFalse(ColorUtils.isLightColor(Color.BLACK));
-    }
-
-    @Test
-    public void testIsLightColor_white() {
-        assertTrue(ColorUtils.isLightColor(Color.WHITE));
-    }
-
-    @Test
-    public void testCalculateOpacityTransform_zeroOpacity() {
-        assertEquals(Color.WHITE, ColorUtils.calculateOpacityTransform(0, Color.BLUE, Color.WHITE));
-    }
-
-    @Test
-    public void testCalculateOpacityTransform_fullOpacity() {
-        assertEquals(Color.BLUE, ColorUtils.calculateOpacityTransform(1, Color.BLUE, Color.WHITE));
-    }
-
-    @Test
-    public void testCalculateOpacityTransform_returnsFullOpacity() {
-        final int color = ColorUtils.calculateOpacityTransform(0, Color.BLUE, Color.WHITE);
-        assertEquals(0xFF000000, color & 0xFF000000);
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/FixedTweetTimelineTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/FixedTweetTimelineTest.java
deleted file mode 100644
index 42c67639..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/FixedTweetTimelineTest.java
+++ /dev/null
@@ -1,113 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import org.junit.Before;
-import org.junit.Test;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.assertTrue;
-import static org.junit.Assert.fail;
-
-public class FixedTweetTimelineTest {
-    private static final Long ANY_ID = 1234L;
-    private List<Tweet> fixedTweets = new ArrayList<>();
-
-    @Before
-    public void setUp() throws Exception {
-        fixedTweets.add(TestFixtures.TEST_TWEET);
-        fixedTweets.add(TestFixtures.TEST_RETWEET);
-        fixedTweets.add(TestFixtures.TEST_PHOTO_TWEET);
-    }
-
-    @Test
-    public void testConstructor() {
-        final FixedTweetTimeline timeline = new FixedTweetTimeline(fixedTweets);
-        assertNotNull(timeline.tweets);
-        assertEquals(fixedTweets, timeline.tweets);
-    }
-
-    @Test
-    public void testConstructor_nullTweets() {
-        final FixedTweetTimeline timeline = new FixedTweetTimeline(null);
-        assertTrue(timeline.tweets.isEmpty());
-    }
-
-    @Test
-    public void testNext_succeedsWithFixedTweets() {
-        final FixedTweetTimeline timeline = new FixedTweetTimeline(fixedTweets);
-        timeline.next(ANY_ID, new Callback<TimelineResult<Tweet>>() {
-            @Override
-            public void success(Result<TimelineResult<Tweet>> result) {
-                assertEquals(fixedTweets, result.data.items);
-                assertEquals((Long) TestFixtures.TEST_PHOTO_TWEET.getId(),
-                        result.data.timelineCursor.minPosition);
-                assertEquals((Long) TestFixtures.TEST_TWEET.getId(),
-                        result.data.timelineCursor.maxPosition);
-                assertNull(result.response);
-            }
-            @Override
-            public void failure(TwitterException exception) {
-                fail("Expected FixedTweetTimeline next to always succeed.");
-            }
-        });
-    }
-
-    @Test
-    public void testNext_succeedsWithEmptyTweets() {
-        final FixedTweetTimeline timeline = new FixedTweetTimeline(fixedTweets);
-        timeline.previous(ANY_ID, new Callback<TimelineResult<Tweet>>() {
-            @Override
-            public void success(Result<TimelineResult<Tweet>> result) {
-                assertTrue(result.data.items.isEmpty());
-                assertNull(result.data.timelineCursor.maxPosition);
-                assertNull(result.data.timelineCursor.minPosition);
-                assertNull(result.response);
-            }
-
-            @Override
-            public void failure(TwitterException exception) {
-                fail("Expected FixedTweetTimeline previous to always succeed.");
-            }
-        });
-    }
-
-    /* Builder */
-    @Test
-    public void testBuilder() {
-        final FixedTweetTimeline timeline = new FixedTweetTimeline.Builder()
-                .setTweets(fixedTweets).build();
-        assertEquals(fixedTweets, timeline.tweets);
-    }
-
-    @Test
-    public void testBuilder_empty() {
-        final FixedTweetTimeline timeline = new FixedTweetTimeline.Builder().build();
-        assertTrue(timeline.tweets.isEmpty());
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/GalleryAdapterTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/GalleryAdapterTest.java
deleted file mode 100644
index 39b571db..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/GalleryAdapterTest.java
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.tweetui.internal.GalleryImageView;
-import com.twitter.sdk.android.tweetui.internal.SwipeToDismissTouchListener;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.Mock;
-import org.mockito.MockitoAnnotations;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-import java.util.Collections;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertTrue;
-import static org.mockito.Mockito.verify;
-
-@RunWith(RobolectricTestRunner.class)
-public class GalleryAdapterTest {
-    @Mock
-    SwipeToDismissTouchListener.Callback callback;
-    @Mock
-    MediaEntity entity;
-    @Mock
-    View view;
-    @Mock
-    ViewGroup container;
-    GalleryAdapter subject;
-
-    @Before
-    public void setUp() {
-        MockitoAnnotations.initMocks(this);
-
-        subject = new GalleryAdapter(RuntimeEnvironment.application, callback);
-    }
-
-    @Test
-    public void testGetCount_withZeroItems() {
-        assertEquals(0, subject.getCount());
-    }
-
-    @Test
-    public void testGetCount_withOneItems() {
-        subject.addAll(Collections.singletonList(entity));
-        assertEquals(1, subject.getCount());
-    }
-
-    @Test
-    public void testIsViewFromObject_withSameObject() {
-        assertTrue(subject.isViewFromObject(view, view));
-    }
-
-    @Test
-    public void testIsViewFromObject_withDifferentObject() {
-        assertFalse(subject.isViewFromObject(view, entity));
-    }
-
-    @Test
-    public void testInstantiateItem() {
-        subject.addAll(Collections.singletonList(entity));
-        final GalleryImageView result = (GalleryImageView) subject.instantiateItem(container, 0);
-
-        assertNotNull(result);
-        verify(container).addView(result);
-    }
-
-    @Test
-    public void testDestroyItem() {
-        subject.destroyItem(container, 0, view);
-
-        verify(container).removeView(view);
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/LikeTweetActionTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/LikeTweetActionTest.java
deleted file mode 100644
index a7d10873..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/LikeTweetActionTest.java
+++ /dev/null
@@ -1,172 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterApiException;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.internal.TwitterApiConstants;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.ArgumentCaptor;
-import org.robolectric.RobolectricTestRunner;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
-import static org.mockito.Mockito.eq;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-@RunWith(RobolectricTestRunner.class)
-public class LikeTweetActionTest {
-    TweetUi mockTweetUi;
-    TweetRepository mockTweetRepository;
-    Callback<Tweet> mockCallback;
-
-    @Before
-    public void setUp() throws Exception {
-        mockTweetUi = mock(TweetUi.class);
-        mockTweetRepository = mock(TweetRepository.class);
-        when(mockTweetUi.getTweetRepository()).thenReturn(mockTweetRepository);
-        mockCallback = mock(Callback.class);
-    }
-
-    @Test
-    public void testOnClick_performFavorite() {
-        final ArgumentCaptor<LikeTweetAction.LikeCallback> favoriteCbCaptor
-                = ArgumentCaptor.forClass(LikeTweetAction.LikeCallback.class);
-        final LikeTweetAction likeAction = new LikeTweetAction(TestFixtures.TEST_TWEET,
-                mockTweetUi, mockCallback);
-        final ToggleImageButton mockToggleButton = mock(ToggleImageButton.class);
-        // assert that click when tweet is unfavorited
-        // - performs a like action which favorites the correct tweet id
-        // - passes FavoriteCallback with toggle button and tweet references
-        likeAction.onClick(mockToggleButton);
-        verify(mockTweetRepository).favorite(eq(TestFixtures.TEST_TWEET.id),
-                favoriteCbCaptor.capture());
-        assertEquals(mockToggleButton, favoriteCbCaptor.getValue().button);
-        assertFalse(favoriteCbCaptor.getValue().tweet.favorited);
-    }
-
-    @Test
-    public void testOnClick_performUnfavorite() {
-        final ArgumentCaptor<LikeTweetAction.LikeCallback> favoriteCbCaptor
-                = ArgumentCaptor.forClass(LikeTweetAction.LikeCallback.class);
-        final LikeTweetAction favoriteAction = new LikeTweetAction(
-                TestFixtures.TEST_FAVORITED_TWEET, mockTweetUi, mockCallback);
-        final ToggleImageButton mockToggleButton = mock(ToggleImageButton.class);
-        // assert that click when tweet is favorited
-        // - performs an unlike action which unfavorites the correct tweet id
-        // - passes FavoriteCallback with toggle button and tweet references
-        favoriteAction.onClick(mockToggleButton);
-        verify(mockTweetRepository).unfavorite(eq(TestFixtures.TEST_TWEET.id),
-                favoriteCbCaptor.capture());
-        assertEquals(mockToggleButton, favoriteCbCaptor.getValue().button);
-        assertTrue(favoriteCbCaptor.getValue().tweet.favorited);
-    }
-
-    @Test
-    public void testFavoriteCallback_successCallsCallback() {
-        final ToggleImageButton mockToggleButton = mock(ToggleImageButton.class);
-        final Tweet unfavoritedTweet = TestFixtures.TEST_TWEET;
-        final LikeTweetAction.LikeCallback callback
-                = new LikeTweetAction.LikeCallback(mockToggleButton, unfavoritedTweet,
-                mockCallback);
-        final Result<Tweet> successResult = new Result<>(TestFixtures.TEST_FAVORITED_TWEET, null);
-        callback.success(successResult);
-        verify(mockCallback).success(successResult);
-    }
-
-    @Test
-    public void testFavoriteCallback_failureAlreadyFavorited() {
-        final ToggleImageButton mockToggleButton = mock(ToggleImageButton.class);
-        // locally unfavorited, but on server the tweet is favorited
-        final Tweet tweet = TestFixtures.TEST_TWEET;
-        final LikeTweetAction.LikeCallback callback
-                = new LikeTweetAction.LikeCallback(mockToggleButton, tweet,
-                mockCallback);
-        final TwitterApiException alreadyFavoritedException = mock(TwitterApiException.class);
-        when(alreadyFavoritedException.getErrorCode()).thenReturn(
-                TwitterApiConstants.Errors.ALREADY_FAVORITED);
-        // assert that
-        // - the failure is treated as a cb success
-        // - success result Tweet is marked as favorited
-        callback.failure(alreadyFavoritedException);
-        final ArgumentCaptor<Result<Tweet>> resultCaptor
-                = ArgumentCaptor.forClass(Result.class);
-        verify(mockCallback).success(resultCaptor.capture());
-        assertEquals(tweet.getId(), resultCaptor.getValue().data.getId());
-        assertTrue(resultCaptor.getValue().data.favorited);
-    }
-
-    @Test
-    public void testFavoriteCallback_failureAlreadyUnfavorited() {
-        final ToggleImageButton mockToggleButton = mock(ToggleImageButton.class);
-        // locally favorited, but on server the tweet is unfavorited
-        final Tweet tweet = TestFixtures.TEST_FAVORITED_TWEET;
-        final LikeTweetAction.LikeCallback callback
-                = new LikeTweetAction.LikeCallback(mockToggleButton, tweet,
-                mockCallback);
-        final TwitterApiException alreadyUnfavoritedException = mock(TwitterApiException.class);
-        when(alreadyUnfavoritedException.getErrorCode()).thenReturn(
-                TwitterApiConstants.Errors.ALREADY_UNFAVORITED);
-        // assert that
-        // - the failure is treated as a cb success
-        // - success result Tweet is marked as unfavorited
-        callback.failure(alreadyUnfavoritedException);
-        final ArgumentCaptor<Result<Tweet>> resultCaptor
-                = ArgumentCaptor.forClass(Result.class);
-        verify(mockCallback).success(resultCaptor.capture());
-        assertEquals(tweet.getId(), resultCaptor.getValue().data.getId());
-        assertFalse(resultCaptor.getValue().data.favorited);
-    }
-
-    @Test
-    public void testFavoriteCallback_failureOtherTwitterApiException() {
-        final ToggleImageButton mockToggleButton = mock(ToggleImageButton.class);
-        final Tweet favoritedTweet = TestFixtures.TEST_FAVORITED_TWEET;
-        final Callback<Tweet> mockCallback = mock(Callback.class);
-        final LikeTweetAction.LikeCallback callback
-                = new LikeTweetAction.LikeCallback(mockToggleButton, favoritedTweet,
-                mockCallback);
-        final TwitterApiException twitterApiException = mock(TwitterApiException.class);
-        callback.failure(twitterApiException);
-        verify(mockToggleButton).setToggledOn(favoritedTweet.favorited);
-        verify(mockCallback).failure(twitterApiException);
-    }
-
-    @Test
-    public void testFavoriteCallback_failureOtherTwitterException() {
-        final ToggleImageButton mockToggleButton = mock(ToggleImageButton.class);
-        final Tweet unfavoritedTweet = TestFixtures.TEST_TWEET;
-        final Callback<Tweet> mockCallback = mock(Callback.class);
-        final LikeTweetAction.LikeCallback callback
-                = new LikeTweetAction.LikeCallback(mockToggleButton, unfavoritedTweet,
-                mockCallback);
-        final TwitterException twitterException = mock(TwitterException.class);
-        callback.failure(twitterException);
-        verify(mockToggleButton).setToggledOn(unfavoritedTweet.favorited);
-        verify(mockCallback).failure(twitterException);
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/LoggingCallbackTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/LoggingCallbackTest.java
deleted file mode 100644
index 11db8102..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/LoggingCallbackTest.java
+++ /dev/null
@@ -1,80 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Logger;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import static org.junit.Assert.fail;
-import static org.mockito.Matchers.any;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-
-@RunWith(RobolectricTestRunner.class)
-public class LoggingCallbackTest {
-    static final String TEST_MESSAGE = "TEST_MESSAGE";
-
-    @Test
-    public void testFailure_callsCb() {
-        final Callback<Tweet> developerCallback = mock(Callback.class);
-        final LoggingCallback<Tweet> cb
-                = new TestLoggingCallback<>(developerCallback, mock(Logger.class));
-        cb.failure(mock(TwitterException.class));
-        verify(developerCallback).failure(any(TwitterException.class));
-    }
-
-    @Test
-    public void testFailure_handlesNullCb() {
-        final Logger logger = mock(Logger.class);
-        final LoggingCallback<Tweet> cb = new TestLoggingCallback<>(null, logger);
-        try {
-            cb.failure(new TwitterException(TEST_MESSAGE));
-            verify(logger).e(any(String.class), any(String.class), any(Throwable.class));
-        } catch (NullPointerException e) {
-            fail("Should have handled null callback");
-        }
-    }
-
-    @Test
-    public void testFailure_logsFailure() {
-        final Callback<Tweet> developerCallback = mock(Callback.class);
-        final Logger logger = mock(Logger.class);
-        final LoggingCallback<Tweet> cb = new TestLoggingCallback<>(developerCallback, logger);
-        cb.failure(new TwitterException(TEST_MESSAGE));
-        verify(logger).e(any(String.class), any(String.class), any(Throwable.class));
-    }
-
-    public class TestLoggingCallback<T> extends LoggingCallback<T> {
-
-        public TestLoggingCallback(Callback<T> cb, Logger logger) {
-            super(cb, logger);
-        }
-
-        @Override
-        public void success(Result<T> result) {
-            // intentionally blank, implements abstract success method
-        }
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/MockCallAnswer.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/MockCallAnswer.java
deleted file mode 100644
index 2ee9f482..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/MockCallAnswer.java
+++ /dev/null
@@ -1,37 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import org.mockito.Mockito;
-import org.mockito.invocation.InvocationOnMock;
-import org.mockito.stubbing.Answer;
-
-import retrofit2.Call;
-
-import static org.mockito.Mockito.mock;
-
-class MockCallAnswer implements Answer<Object> {
-    @Override
-    public Object answer(InvocationOnMock invocation) throws Throwable {
-        if (invocation.getMethod().getReturnType().equals(Call.class)) {
-            return mock(Call.class);
-        } else {
-            return Mockito.RETURNS_DEFAULTS.answer(invocation);
-        }
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/PlayerControllerTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/PlayerControllerTest.java
deleted file mode 100644
index 0abcf7bd..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/PlayerControllerTest.java
+++ /dev/null
@@ -1,240 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.media.MediaPlayer;
-import android.net.Uri;
-import android.view.View;
-import android.widget.ProgressBar;
-import android.widget.TextView;
-
-import com.twitter.sdk.android.tweetui.internal.SwipeToDismissTouchListener;
-import com.twitter.sdk.android.tweetui.internal.VideoControlView;
-import com.twitter.sdk.android.tweetui.internal.VideoView;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.ArgumentCaptor;
-import org.mockito.Captor;
-import org.mockito.Mock;
-import org.mockito.MockitoAnnotations;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-import static org.junit.Assert.assertEquals;
-import static org.mockito.Matchers.any;
-import static org.mockito.Mockito.doNothing;
-import static org.mockito.Mockito.spy;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-@RunWith(RobolectricTestRunner.class)
-public class PlayerControllerTest {
-    private static final String TEST_CONTENT_URL = "https://example.com";
-    private static final String TEST_CALL_TO_ACTION_URL = "https://example.com";
-    private static final String TEST_CALL_TO_ACTION_TEXT = "Open in";
-    private static final int TEST_SEEK_POSITION = 1000;
-    private static final Uri TEST_URI = Uri.parse(TEST_CONTENT_URL);
-
-    @Mock
-    VideoView videoView;
-    @Mock
-    VideoControlView videoControlView;
-    @Mock
-    ProgressBar videoProgressView;
-    @Mock
-    TextView callToActionView;
-    @Mock
-    View rootView;
-    @Mock
-    SwipeToDismissTouchListener.Callback callback;
-    @Captor
-    private ArgumentCaptor<View.OnClickListener> clickListenerCaptor;
-    @Captor
-    private ArgumentCaptor<MediaPlayer.OnPreparedListener> prepareListenerCaptor;
-    @Captor
-    private ArgumentCaptor<MediaPlayer.OnInfoListener> infoListenerCaptor;
-
-    PlayerController subject;
-    PlayerActivity.PlayerItem playerItem;
-
-    @Before
-    public void setUp() {
-        MockitoAnnotations.initMocks(this);
-        when(videoView.getContext()).thenReturn(RuntimeEnvironment.application);
-        subject = spy(new PlayerController(rootView, videoView, videoControlView,
-                videoProgressView, callToActionView, callback));
-        playerItem = new PlayerActivity.PlayerItem(TEST_CONTENT_URL, false, true, null, null);
-    }
-
-    @Test
-    public void testPrepare() {
-        doNothing().when(subject).setUpMediaControl();
-        subject.prepare(playerItem);
-
-        verify(subject).setUpMediaControl(false, true);
-        verify(videoView).setOnTouchListener(any(View.OnTouchListener.class));
-        verify(videoView).setVideoURI(TEST_URI, false);
-        verify(videoView).requestFocus();
-        verify(videoView).setOnPreparedListener(any(MediaPlayer.OnPreparedListener.class));
-        verify(videoView).setOnInfoListener(any(MediaPlayer.OnInfoListener.class));
-    }
-
-    @Test
-    public void testPrepare_verifyOnPreparedListener() {
-        doNothing().when(subject).setUpMediaControl();
-        subject.prepare(playerItem);
-
-        verify(subject).setUpMediaControl(false, true);
-        verify(videoView).setVideoURI(TEST_URI, false);
-        verify(videoView).requestFocus();
-        verify(videoView).setOnPreparedListener(prepareListenerCaptor.capture());
-        verify(videoView).setOnInfoListener(any(MediaPlayer.OnInfoListener.class));
-        verifyOnPreparedListener(prepareListenerCaptor.getValue());
-    }
-
-    @Test
-    public void testPrepare_setUpCallToActionListener() {
-        doNothing().when(subject).setUpMediaControl();
-
-        final PlayerActivity.PlayerItem itemWithCallToActionUrl =
-                new PlayerActivity.PlayerItem(TEST_CONTENT_URL, false, false,
-                        TEST_CALL_TO_ACTION_TEXT, TEST_CALL_TO_ACTION_URL);
-        subject.prepare(itemWithCallToActionUrl);
-
-        verify(subject).setUpMediaControl(false, false);
-        verify(videoView).setVideoURI(TEST_URI, false);
-        verify(videoView).requestFocus();
-        verify(videoView).setOnPreparedListener(any(MediaPlayer.OnPreparedListener.class));
-        verify(videoView).setOnInfoListener(any(MediaPlayer.OnInfoListener.class));
-
-        verify(callToActionView).setVisibility(View.VISIBLE);
-        verify(callToActionView).setText(TEST_CALL_TO_ACTION_TEXT);
-        verify(callToActionView).setOnClickListener(any(View.OnClickListener.class));
-        verify(rootView).setOnClickListener(any(View.OnClickListener.class));
-    }
-
-    private void verifyOnPreparedListener(MediaPlayer.OnPreparedListener listener) {
-        listener.onPrepared(null);
-        verify(videoProgressView).setVisibility(View.GONE);
-    }
-
-    @Test
-    public void testPrepare_verifyOnInfoListener() {
-        doNothing().when(subject).setUpMediaControl();
-        subject.prepare(playerItem);
-
-        verify(subject).setUpMediaControl(false, true);
-        verify(videoView).setVideoURI(TEST_URI, false);
-        verify(videoView).requestFocus();
-        verify(videoView).setOnPreparedListener(any(MediaPlayer.OnPreparedListener.class));
-        verify(videoView).setOnInfoListener(infoListenerCaptor.capture());
-        verifyOnInfoListener(infoListenerCaptor.getValue());
-    }
-
-    private void verifyOnInfoListener(MediaPlayer.OnInfoListener listener) {
-        listener.onInfo(null, MediaPlayer.MEDIA_INFO_BUFFERING_START, 0);
-        verify(videoProgressView).setVisibility(View.VISIBLE);
-        listener.onInfo(null, MediaPlayer.MEDIA_INFO_BUFFERING_END, 0);
-        verify(videoProgressView).setVisibility(View.GONE);
-    }
-
-    @Test
-    public void testPrepare_withNullEntity() {
-        doNothing().when(subject).setUpMediaControl();
-        subject.prepare(null);
-    }
-
-    @Test
-    public void testSetUpMediaControl_withLooping() {
-        subject.setUpMediaControl(true, false);
-
-        verify(subject).setUpLoopControl();
-    }
-
-    @Test
-    public void testSetUpMediaControl_withLoopingAndControls() {
-        subject.setUpMediaControl(true, true);
-
-        verify(subject).setUpMediaControl();
-    }
-
-    @Test
-    public void testSetUpMediaControl_withOutLooping() {
-        doNothing().when(subject).setUpMediaControl();
-        subject.setUpMediaControl(false, true);
-
-        verify(subject).setUpMediaControl();
-    }
-
-    @Test
-    public void testSetUpLoopControl() {
-        subject.setUpLoopControl();
-
-        verify(videoView).setOnClickListener(clickListenerCaptor.capture());
-        final View.OnClickListener listener = clickListenerCaptor.getValue();
-
-        when(videoView.isPlaying()).thenReturn(false);
-        listener.onClick(null);
-        verify(videoView).start();
-
-        when(videoView.isPlaying()).thenReturn(true);
-        listener.onClick(null);
-        verify(videoView).pause();
-    }
-
-    @Test
-    public void testOnDestroy() {
-        subject.onDestroy();
-
-        verify(videoView).stopPlayback();
-    }
-
-    @Test
-    public void testOnPause() {
-        when(videoView.getCurrentPosition()).thenReturn(TEST_SEEK_POSITION);
-        when(videoView.isPlaying()).thenReturn(true);
-
-        subject.onPause();
-
-        verify(videoView).getCurrentPosition();
-        verify(videoView).isPlaying();
-        assertEquals(true, subject.isPlaying);
-        assertEquals(TEST_SEEK_POSITION, subject.seekPosition);
-    }
-
-    @Test
-    public void testOnResume() {
-        subject.isPlaying = true;
-        subject.seekPosition = TEST_SEEK_POSITION;
-        subject.onResume();
-
-        verify(videoView).start();
-    }
-
-    @Test
-    public void testOnResume_withSeeekPosition() {
-        subject.isPlaying = true;
-        subject.seekPosition = TEST_SEEK_POSITION;
-        subject.onResume();
-
-        verify(videoView).seekTo(TEST_SEEK_POSITION);
-        verify(videoView).start();
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/ReplaceTweetCallbackTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/ReplaceTweetCallbackTest.java
deleted file mode 100644
index 2381cd97..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/ReplaceTweetCallbackTest.java
+++ /dev/null
@@ -1,90 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import static org.junit.Assert.fail;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-
-@RunWith(RobolectricTestRunner.class)
-public class ReplaceTweetCallbackTest {
-    TimelineDelegate<Tweet> mockTimelineDelegate;
-
-    @Before
-    public void setUp() throws Exception {
-        mockTimelineDelegate = mock(TimelineDelegate.class);
-    }
-
-    @Test
-    public void testSuccess() {
-        final Callback<Tweet> cb = mock(Callback.class);
-        final TweetTimelineListAdapter.ReplaceTweetCallback replaceCallback
-                = new TweetTimelineListAdapter.ReplaceTweetCallback(mockTimelineDelegate, cb);
-        final Result<Tweet> successResult = new Result<>(TestFixtures.TEST_TWEET, null);
-        replaceCallback.success(successResult);
-        verify(mockTimelineDelegate).setItemById(TestFixtures.TEST_TWEET);
-        verify(cb).success(successResult);
-    }
-
-    @Test
-    public void testSuccess_handlesNullCallback() {
-        final Callback<Tweet> cb = mock(Callback.class);
-        final TweetTimelineListAdapter.ReplaceTweetCallback replaceCallback
-                = new TweetTimelineListAdapter.ReplaceTweetCallback(mockTimelineDelegate, null);
-        final Result<Tweet> successResult = new Result<>(TestFixtures.TEST_TWEET, null);
-        try {
-            replaceCallback.success(successResult);
-        } catch (NullPointerException e) {
-            fail("Should have handled null callback");
-        }
-        verify(mockTimelineDelegate).setItemById(TestFixtures.TEST_TWEET);
-    }
-
-    @Test
-    public void testFailure() {
-        final Callback<Tweet> cb = mock(Callback.class);
-        final TweetTimelineListAdapter.ReplaceTweetCallback replaceCallback
-                = new TweetTimelineListAdapter.ReplaceTweetCallback(mockTimelineDelegate, cb);
-        final TwitterException exception = mock(TwitterException.class);
-        replaceCallback.failure(exception);
-        verify(cb).failure(exception);
-    }
-
-    @Test
-    public void testFailure_handlesNullCallback() {
-        final Callback<Tweet> cb = mock(Callback.class);
-        final TweetTimelineListAdapter.ReplaceTweetCallback replaceCallback
-                = new TweetTimelineListAdapter.ReplaceTweetCallback(mockTimelineDelegate, null);
-        final TwitterException exception = mock(TwitterException.class);
-        try {
-            replaceCallback.failure(exception);
-        } catch (NullPointerException e) {
-            fail("Should have handled null callback");
-        }
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/ResetTweetCallbackTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/ResetTweetCallbackTest.java
deleted file mode 100644
index b9d9bf7d..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/ResetTweetCallbackTest.java
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import static org.junit.Assert.fail;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-
-@RunWith(RobolectricTestRunner.class)
-public class ResetTweetCallbackTest {
-
-    BaseTweetView mockTweetView;
-    TweetRepository mockTweetRepository;
-
-    @Before
-    public void setUp() throws Exception {
-        mockTweetRepository = mock(TweetRepository.class);
-        mockTweetView = mock(BaseTweetView.class);
-    }
-
-    @Test
-    public void testSuccess() {
-        final Callback<Tweet> developerCallback = mock(Callback.class);
-        final ResetTweetCallback resetCallback = new ResetTweetCallback(mockTweetView,
-                mockTweetRepository, developerCallback);
-        final Result<Tweet> successResult = new Result<>(TestFixtures.TEST_TWEET, null);
-        resetCallback.success(successResult);
-        verify(mockTweetRepository).updateCache(TestFixtures.TEST_TWEET);
-        verify(mockTweetView).setTweet(TestFixtures.TEST_TWEET);
-        verify(developerCallback).success(successResult);
-    }
-
-    @Test
-    public void testSuccess_handlesNullCallback() {
-        final Callback<Tweet> developerCallback = mock(Callback.class);
-        final ResetTweetCallback resetCallback = new ResetTweetCallback(mockTweetView,
-                mockTweetRepository, null);
-        final Result<Tweet> successResult = new Result<>(TestFixtures.TEST_TWEET, null);
-        try {
-            resetCallback.success(successResult);
-        } catch (NullPointerException e) {
-            fail("Should have handled null callback");
-        }
-        verify(mockTweetRepository).updateCache(TestFixtures.TEST_TWEET);
-        verify(mockTweetView).setTweet(TestFixtures.TEST_TWEET);
-    }
-
-    @Test
-    public void testFailure() {
-        final Callback<Tweet> developerCallback = mock(Callback.class);
-        final ResetTweetCallback resetCallback = new ResetTweetCallback(mockTweetView,
-                mockTweetRepository, developerCallback);
-        final TwitterException exception = mock(TwitterException.class);
-        resetCallback.failure(exception);
-        verify(developerCallback).failure(exception);
-    }
-
-    @Test
-    public void testFailure_handlesNullCallback() {
-        final Callback<Tweet> developerCallback = mock(Callback.class);
-        final ResetTweetCallback resetCallback = new ResetTweetCallback(mockTweetView,
-                mockTweetRepository, null);
-        final TwitterException exception = mock(TwitterException.class);
-        try {
-            resetCallback.failure(exception);
-        } catch (NullPointerException e) {
-            fail("Should have handled null callback");
-        }
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/SearchTimelineTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/SearchTimelineTest.java
deleted file mode 100644
index 7aa344b5..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/SearchTimelineTest.java
+++ /dev/null
@@ -1,229 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.services.SearchService;
-import com.twitter.sdk.android.core.services.params.Geocode;
-
-import org.junit.Before;
-import org.junit.Test;
-
-import java.util.Calendar;
-import java.util.Date;
-import java.util.GregorianCalendar;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.assertTrue;
-import static org.junit.Assert.fail;
-import static org.mockito.Mockito.eq;
-import static org.mockito.Mockito.isNull;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.spy;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-public class SearchTimelineTest {
-    private static final String TEST_QUERY = "twitterflock";
-    private static final Geocode TEST_GEOCODE =
-            new Geocode(37.7767902, -122.4164055, 1, Geocode.Distance.MILES);
-    private static final String TEST_FILTER_QUERY = "from:twitter";
-    private static final String TEST_RESULT_TYPE = "popular";
-    private static final String TEST_LANG = "en";
-    private static final String TEST_UNTIL_DATE = "2012-08-20";
-    private static final Date TEST_UNTIL =
-            new GregorianCalendar(2012, Calendar.AUGUST, 20).getTime();
-    private static final Integer REQUIRED_DEFAULT_ITEMS_PER_REQUEST = 30;
-    private static final Integer TEST_ITEMS_PER_REQUEST = 100;
-    private static final Long TEST_SINCE_ID = 1000L;
-    private static final Long TEST_MAX_ID = 1111L;
-    private static final String REQUIRED_IMPRESSION_SECTION = "search";
-
-    TwitterCore twitterCore;
-    TwitterApiClient apiClient;
-    SearchService searchService;
-
-    @Before
-    public void setUp() {
-        twitterCore = mock(TwitterCore.class);
-        apiClient = mock(TwitterApiClient.class);
-        searchService = mock(SearchService.class, new MockCallAnswer());
-
-        when(apiClient.getSearchService()).thenReturn(searchService);
-        when(twitterCore.getApiClient()).thenReturn(apiClient);
-    }
-
-    @Test
-    public void testConstructor() {
-        final SearchTimeline timeline = new SearchTimeline(twitterCore, TEST_QUERY, TEST_GEOCODE,
-                TEST_RESULT_TYPE, TEST_LANG, TEST_ITEMS_PER_REQUEST, TEST_UNTIL_DATE);
-        assertEquals(TEST_QUERY + SearchTimeline.FILTER_RETWEETS, timeline.query);
-        assertEquals(TEST_LANG, timeline.languageCode);
-        assertEquals(TEST_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-        assertEquals(TEST_UNTIL_DATE, timeline.untilDate);
-    }
-
-    @Test
-    // most api arguments should default to Null to allow the backend to determine default behavior
-    public void testConstructor_defaults() {
-        final SearchTimeline timeline = new SearchTimeline(twitterCore, null, null, null, null,
-                null, null);
-        assertNull(timeline.query);
-        assertNull(timeline.languageCode);
-        assertNull(timeline.maxItemsPerRequest);
-        assertNull(timeline.untilDate);
-    }
-
-    @Test
-    // FILTER_RETWEETS modifier should be added to the end of the non-null search queries
-    public void testFilterRetweets() {
-        final SearchTimeline timeline = new SearchTimeline(twitterCore, TEST_QUERY, null, null,
-                null, null, null);
-        assertTrue(timeline.query.endsWith(SearchTimeline.FILTER_RETWEETS));
-    }
-
-    @Test
-    public void testAddFilterRetweets() {
-        final SearchTimeline timeline = new SearchTimeline(twitterCore, TEST_FILTER_QUERY, null,
-                null, null, null, null);
-        assertEquals("from:twitter -filter:retweets", timeline.query);
-    }
-
-    @Test
-    public void testFilterRetweets_nullQuery() {
-        // handle null queries, do not append FILTER_RETWEETS
-        final SearchTimeline timeline = new SearchTimeline(twitterCore, null, null, null, null,
-                null, null);
-        assertNull(timeline.query);
-    }
-
-    @Test
-    public void testNext_createsCorrectRequest() {
-        final SearchTimeline timeline = spy(new SearchTimeline(twitterCore, TEST_QUERY,
-                TEST_GEOCODE, TEST_RESULT_TYPE, TEST_LANG, TEST_ITEMS_PER_REQUEST,
-                TEST_UNTIL_DATE));
-        timeline.next(TEST_SINCE_ID, mock(Callback.class));
-        verify(timeline).createSearchRequest(eq(TEST_SINCE_ID),
-                isNull(Long.class));
-    }
-
-    @Test
-    public void testPrevious_createsCorrectRequest() {
-        final SearchTimeline timeline = spy(new SearchTimeline(twitterCore, TEST_QUERY,
-                TEST_GEOCODE, TEST_RESULT_TYPE, TEST_LANG, TEST_ITEMS_PER_REQUEST,
-                TEST_UNTIL_DATE));
-        timeline.previous(TEST_MAX_ID, mock(Callback.class));
-        // intentionally decrementing the maxId which is passed through to the request
-        verify(timeline).createSearchRequest(isNull(Long.class),
-                eq(TEST_MAX_ID - 1));
-    }
-
-    @Test
-    public void testCreateSearchRequest() {
-        // build a timeline with test params
-        final SearchTimeline timeline = spy(new SearchTimeline(twitterCore, TEST_QUERY, null,
-                TEST_RESULT_TYPE, TEST_LANG, TEST_ITEMS_PER_REQUEST, TEST_UNTIL_DATE));
-        // create a request directly
-        timeline.createSearchRequest(TEST_SINCE_ID, TEST_MAX_ID);
-
-        // assert searchTimeline call is made with the correct arguments
-        verify(twitterCore.getApiClient().getSearchService())
-                .tweets(eq(TEST_QUERY + SearchTimeline.FILTER_RETWEETS),
-                isNull(Geocode.class), eq(TEST_LANG), isNull(String.class),
-                eq(TEST_RESULT_TYPE), eq(TEST_ITEMS_PER_REQUEST), eq(TEST_UNTIL_DATE),
-                eq(TEST_SINCE_ID), eq(TEST_MAX_ID), eq(true));
-    }
-
-    /* Builder */
-    @Test
-    public void testBuilder() {
-        final SearchTimeline timeline = new SearchTimeline.Builder(twitterCore)
-                .query(TEST_QUERY)
-                .geocode(TEST_GEOCODE)
-                .languageCode(TEST_LANG)
-                .maxItemsPerRequest(TEST_ITEMS_PER_REQUEST)
-                .resultType(SearchTimeline.ResultType.POPULAR)
-                .untilDate(TEST_UNTIL)
-                .build();
-        assertEquals(TEST_QUERY + SearchTimeline.FILTER_RETWEETS, timeline.query);
-        assertEquals(TEST_RESULT_TYPE, timeline.resultType);
-        assertEquals(TEST_LANG, timeline.languageCode);
-        assertEquals(TEST_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-        assertEquals(TEST_UNTIL_DATE, timeline.untilDate);
-        assertEquals(TEST_GEOCODE, timeline.geocode);
-    }
-
-    @Test
-    // api arguments should default to Null to allow the backend to determine default behavior
-    public void testBuilder_defaults() {
-        final SearchTimeline timeline = new SearchTimeline.Builder(twitterCore)
-                .query(TEST_QUERY)
-                .build();
-        assertNull(timeline.languageCode);
-        assertEquals(REQUIRED_DEFAULT_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-        assertNull(timeline.untilDate);
-    }
-
-    @Test
-    public void testBuilder_query() {
-        final SearchTimeline timeline = new SearchTimeline.Builder(twitterCore)
-                .query(TEST_QUERY)
-                .build();
-        assertEquals(TEST_QUERY + SearchTimeline.FILTER_RETWEETS, timeline.query);
-    }
-
-    @Test
-    public void testBuilder_nullQuery() {
-        try {
-            new SearchTimeline.Builder(twitterCore).build();
-            fail("Expected IllegalStateException");
-        } catch (IllegalStateException e) {
-            assertEquals("query must not be null", e.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_lang() {
-        final SearchTimeline timeline = new SearchTimeline.Builder(twitterCore)
-                .query(TEST_QUERY)
-                .languageCode(TEST_LANG)
-                .build();
-        assertEquals(TEST_LANG, timeline.languageCode);
-    }
-
-    @Test
-    public void testBuilder_geocode() {
-        final SearchTimeline timeline = new SearchTimeline.Builder(twitterCore)
-                .query(TEST_QUERY)
-                .geocode(TEST_GEOCODE)
-                .build();
-        assertEquals(TEST_GEOCODE, timeline.geocode);
-    }
-
-    @Test
-    public void testBuilder_maxItemsPerRequest() {
-        final SearchTimeline timeline = new SearchTimeline.Builder(twitterCore)
-                .query(TEST_QUERY)
-                .maxItemsPerRequest(TEST_ITEMS_PER_REQUEST)
-                .build();
-        assertEquals(TEST_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/ShareTweetActionTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/ShareTweetActionTest.java
deleted file mode 100644
index 1d90ee3e..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/ShareTweetActionTest.java
+++ /dev/null
@@ -1,134 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.content.pm.ResolveInfo;
-import android.content.res.Resources;
-
-import com.twitter.sdk.android.core.models.TweetBuilder;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import static org.junit.Assert.assertEquals;
-import static org.mockito.Mockito.any;
-import static org.mockito.Mockito.anyInt;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.times;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.verifyNoMoreInteractions;
-import static org.mockito.Mockito.when;
-
-@RunWith(RobolectricTestRunner.class)
-public class ShareTweetActionTest {
-
-    private static final String REQUIRED_SEND_ACTION = Intent.ACTION_SEND;
-    private static final String REQUIRED_MIME_TYPE = "text/plain";
-    private static final String A_SHARE_SUBJECT =
-            "Tweet from " + TestFixtures.TEST_NAME + " (@" + TestFixtures.TEST_SCREEN_NAME + ")";
-    private static final String A_SHARE_TEXT
-            = "Check out @" + TestFixtures.TEST_SCREEN_NAME + "'s Tweet: https://twitter.com/" +
-            TestFixtures.TEST_SCREEN_NAME + "/status/" + TestFixtures.TEST_TWEET.id;
-
-    private ShareTweetAction listener;
-    private Resources resources;
-    private TweetUi mockTweetUi;
-
-    @Before
-    public void setUp() throws Exception {
-        mockTweetUi = mock(TweetUi.class);
-        listener = new ShareTweetAction(TestFixtures.TEST_TWEET, mockTweetUi);
-        resources = RuntimeEnvironment.application.getResources();
-    }
-
-    @Test
-    public void testOnClick_nullTweet() {
-        final ShareTweetAction listener = new ShareTweetAction(null, mockTweetUi);
-        final Context context = mock(Context.class);
-        listener.onClick(context, resources);
-        verify(context, times(0)).startActivity(any(Intent.class));
-        verifyNoMoreInteractions(mockTweetUi);
-    }
-
-    @Test
-    public void testOnClick_nullTweetUser() {
-        final ShareTweetAction listener =
-                new ShareTweetAction(new TweetBuilder().build(), mockTweetUi);
-        final Context context = mock(Context.class);
-        listener.onClick(context, resources);
-        verify(context, times(0)).startActivity(any(Intent.class));
-        verifyNoMoreInteractions(mockTweetUi);
-    }
-
-    @Test
-    public void testOnClick_tweetWithData() {
-        final Context context = createContextWithPackageManager();
-        listener.onClick(context, resources);
-        verify(context, times(1)).startActivity(any(Intent.class));
-    }
-
-    @Test
-    public void testGetShareContent() {
-        final String shareContent = listener.getShareContent(resources);
-        assertEquals(A_SHARE_TEXT, shareContent);
-    }
-
-    @Test
-    public void testGetShareSubject() {
-        final String shareSubject = listener.getShareSubject(resources);
-        assertEquals(A_SHARE_SUBJECT, shareSubject);
-    }
-
-    @Test
-    public void testLaunchShareIntent_startsActivity() {
-        final Intent intent = mock(Intent.class);
-        final Context context = createContextWithPackageManager();
-        listener.launchShareIntent(intent, context);
-        verify(context, times(1)).startActivity(intent);
-    }
-
-    @Test
-    public void testGetShareIntent() {
-        final Intent intent = listener.getShareIntent(A_SHARE_SUBJECT, A_SHARE_TEXT);
-        assertEquals(REQUIRED_SEND_ACTION, intent.getAction());
-        assertEquals(REQUIRED_MIME_TYPE, intent.getType());
-        assertEquals(A_SHARE_SUBJECT, intent.getStringExtra(Intent.EXTRA_SUBJECT));
-        assertEquals(A_SHARE_TEXT, intent.getStringExtra(Intent.EXTRA_TEXT));
-    }
-
-    private Context createContextWithPackageManager() {
-        final Context context = mock(Context.class);
-        final PackageManager pm = mock(PackageManager.class);
-        final List<ResolveInfo> activities = new ArrayList<>();
-        activities.add(mock(ResolveInfo.class));
-
-        when(pm.queryIntentActivities(any(Intent.class), anyInt())).thenReturn(activities);
-        when(context.getPackageManager()).thenReturn(pm);
-
-        return context;
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TestItem.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TestItem.java
deleted file mode 100644
index 9313847d..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TestItem.java
+++ /dev/null
@@ -1,48 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.models.Identifiable;
-
-import java.util.List;
-
-/**
- * A TestItem Identifiable for testing components generic to Identifiable types. Avoids the need
- * to test against a concrete Identifiable.
- */
-public class TestItem implements Identifiable {
-
-    private final long id;
-
-    public TestItem(long id) {
-        this.id = id;
-    }
-
-    @Override
-    public long getId() {
-        return id;
-    }
-
-    public static <T extends List> T populateList(T items, long count) {
-        for (int i = 0; i < count; i++) {
-            // add 1000 just so ids are clearly distinct from position
-            items.add(new TestItem(1000 + i));
-        }
-        return items;
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineCursorTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineCursorTest.java
deleted file mode 100644
index 0f199533..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineCursorTest.java
+++ /dev/null
@@ -1,50 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import static org.junit.Assert.assertEquals;
-
-@RunWith(RobolectricTestRunner.class)
-public class TimelineCursorTest {
-    private static final Long TEST_MAX_POSITION = 200L;
-    private static final Long TEST_MIN_POSITION = 100L;
-
-    @Test
-    public void testConstructor() {
-        final TimelineCursor cursor = new TimelineCursor(TEST_MIN_POSITION, TEST_MAX_POSITION);
-        assertEquals(TEST_MIN_POSITION, cursor.minPosition);
-        assertEquals(TEST_MAX_POSITION, cursor.maxPosition);
-    }
-
-    @Test
-    public void testConstructor_withList() {
-        final List<TestItem> testItems = new ArrayList<>();
-        testItems.add(new TestItem(TEST_MAX_POSITION));
-        testItems.add(new TestItem(TEST_MIN_POSITION));
-        final TimelineCursor cursor = new TimelineCursor(testItems);
-        assertEquals(TEST_MIN_POSITION, cursor.minPosition);
-        assertEquals(TEST_MAX_POSITION, cursor.maxPosition);
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineDelegateTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineDelegateTest.java
deleted file mode 100644
index 4a28a07b..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineDelegateTest.java
+++ /dev/null
@@ -1,687 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.database.DataSetObservable;
-import android.database.DataSetObserver;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.ArgumentCaptor;
-import org.robolectric.RobolectricTestRunner;
-
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-
-import static org.hamcrest.CoreMatchers.not;
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.assertThat;
-import static org.junit.Assert.assertTrue;
-import static org.junit.Assert.fail;
-import static org.mockito.Mockito.any;
-import static org.mockito.Mockito.isNull;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.times;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.verifyZeroInteractions;
-
-@RunWith(RobolectricTestRunner.class)
-public class TimelineDelegateTest {
-    private static final TestItem TEST_ITEM_1 = new TestItem(1111L);
-    private static final TestItem TEST_ITEM_2 = new TestItem(2222L);
-    private static final TestItem TEST_ITEM_3 = new TestItem(3333L);
-    private static final TestItem TEST_ITEM_4 = new TestItem(4444L);
-    private static final int TOTAL_ITEMS = 4;
-    private static final int NUM_ITEMS = 100;
-    private static final int ZERO_ITEMS = 0;
-    private static final Long ANY_POSITION = 1234L;
-    private static final Long TEST_MIN_POSITION = 3333L;
-    private static final Long TEST_MAX_POSITION = 4444L;
-    private static final TimelineCursor TEST_TIMELINE_CURSOR = new TimelineCursor(TEST_MIN_POSITION,
-            TEST_MAX_POSITION);
-    private static final String REQUIRED_MAX_CAPACITY_ERROR = "Max capacity reached";
-    private static final String REQUIRED_REQUEST_IN_FLIGHT_ERROR = "Request already in flight";
-    private static final TwitterException TEST_TWITTER_EXCEPTION
-            = new TwitterException("Some exception");
-
-    private TimelineDelegate<TestItem> delegate;
-    private Timeline<TestItem> mockTimeline;
-    private DataSetObservable mockObservable;
-    private List<TestItem> testItems = new ArrayList<>();
-    // test items for testing prepending and appending to another list
-    private List<TestItem> testExtraItems = new ArrayList<>();
-    private static Result<TimelineResult<TestItem>> testResult;
-
-    @Before
-    public void setUp() throws Exception {
-        mockTimeline = mock(Timeline.class);
-        mockObservable = mock(DataSetObservable.class);
-        // lists of items ordered from larger id to smaller
-        testItems.add(TEST_ITEM_2);
-        testItems.add(TEST_ITEM_1);
-        // extra result items ordered from larger id to smaller
-        testExtraItems.add(TEST_ITEM_4);
-        testExtraItems.add(TEST_ITEM_3);
-        testResult = new Result<>(new TimelineResult<>(TEST_TIMELINE_CURSOR, testItems), null);
-    }
-
-    @Test
-    public void testConstructor() {
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, testItems);
-        assertEquals(mockTimeline, delegate.timeline);
-        assertEquals(mockObservable, delegate.listAdapterObservable);
-        assertEquals(testItems, delegate.itemList);
-        assertNotNull(delegate.timelineStateHolder);
-        // initial positions must be null
-        assertNull(delegate.timelineStateHolder.positionForNext());
-        assertNull(delegate.timelineStateHolder.positionForPrevious());
-    }
-
-    @Test
-    public void testConstructor_defaults() {
-        delegate = new TimelineDelegate<>(mockTimeline);
-        assertEquals(mockTimeline, delegate.timeline);
-        assertNotNull(delegate.listAdapterObservable);
-        assertNotNull(delegate.itemList);
-        assertNotNull(delegate.timelineStateHolder);
-        // initial positions must be null
-        assertNull(delegate.timelineStateHolder.positionForNext());
-        assertNull(delegate.timelineStateHolder.positionForPrevious());
-    }
-
-    @Test
-    public void testConstructor_nullTimeline() {
-        try {
-            delegate = new TimelineDelegate<>(null);
-            fail("IllegalArgumentException expected");
-        } catch (IllegalArgumentException e) {
-            assertEquals("Timeline must not be null", e.getMessage());
-        }
-    }
-
-    @Test
-    public void testGetCount() {
-        delegate = new TimelineDelegate<>(mockTimeline);
-        assertEquals(0, delegate.getCount());
-        delegate = new TimelineDelegate<>(mockTimeline, null, testItems);
-        assertEquals(testItems.size(), delegate.getCount());
-    }
-
-    @Test
-    public void testGetItem() {
-        delegate = new TimelineDelegate<>(mockTimeline, null, testItems);
-        assertEquals(TEST_ITEM_2, delegate.getItem(0));
-        assertEquals(TEST_ITEM_1, delegate.getItem(1));
-    }
-
-    @Test
-    public void testGetLastItem_loadsPrevious() {
-        final Timeline<TestItem> fakeTimeline = new FakeItemTimeline(NUM_ITEMS, ANY_POSITION,
-                ANY_POSITION);
-        delegate = new TimelineDelegate<>(fakeTimeline, mockObservable, null);
-        delegate.refresh(null);
-        // refresh loads latest items (notifyChange)
-        verify(mockObservable).notifyChanged();
-        delegate.getItem(NUM_ITEMS - 1);
-        // assert items are added and notifyChanged is called again
-        assertEquals(2 * NUM_ITEMS, delegate.getCount());
-        verify(mockObservable, times(2)).notifyChanged();
-    }
-
-    @Test
-    public void testGetNonLastItem_doesNotLoadPrevious() {
-        final Timeline<TestItem> fakeTimeline = new FakeItemTimeline(NUM_ITEMS, ANY_POSITION,
-                ANY_POSITION);
-        delegate = new TimelineDelegate<>(fakeTimeline, mockObservable, null);
-        delegate.refresh(null);
-        // refresh loads latest items (notifyChange)
-        verify(mockObservable).notifyChanged();
-        assertEquals(NUM_ITEMS, delegate.getCount());
-        delegate.getItem(1);
-        // assert no items added and notifyChanged is not called again
-        assertEquals(NUM_ITEMS, delegate.getCount());
-        verify(mockObservable, times(1)).notifyChanged();
-    }
-
-    @Test
-    public void testGetItemId() {
-        delegate = new TimelineDelegate<>(mockTimeline, null, testItems);
-        assertEquals(TEST_ITEM_2.getId(), delegate.getItemId(0));
-        assertEquals(TEST_ITEM_1.getId(), delegate.getItemId(1));
-    }
-
-    @Test
-    public void testSetItemById() {
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, testItems);
-        assertEquals(TEST_ITEM_2, delegate.getItem(0));
-        assertEquals(TEST_ITEM_1, delegate.getItem(1));
-        final TestItem differentItemSameId = new TestItem(TEST_ITEM_2.getId());
-        delegate.setItemById(differentItemSameId);
-        assertThat(TEST_ITEM_2, not(delegate.getItem(0)));
-        assertEquals(differentItemSameId, delegate.getItem(0));
-        assertEquals(TEST_ITEM_1, delegate.getItem(1));
-        verify(mockObservable).notifyChanged();
-    }
-
-    @Test
-    public void testWithinMaxCapacity() {
-        delegate = new TimelineDelegate<>(mockTimeline);
-        assertTrue(delegate.withinMaxCapacity());
-        TestItem.populateList(testItems, TimelineDelegate.CAPACITY);
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, testItems);
-        assertFalse(delegate.withinMaxCapacity());
-    }
-
-    @Test
-    public void testIsLastPosition() {
-        testItems = new ArrayList<>();
-        TestItem.populateList(testItems, NUM_ITEMS);
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, testItems);
-        assertFalse(delegate.isLastPosition(0));
-        assertFalse(delegate.isLastPosition(NUM_ITEMS - 2));
-        assertTrue(delegate.isLastPosition(NUM_ITEMS - 1));
-    }
-
-    // reset, next, previous
-
-    @Test
-    public void testRefresh_resetsTimelineCursors() {
-        delegate = new TimelineDelegate<>(mockTimeline);
-        delegate.timelineStateHolder.setNextCursor(new TimelineCursor(ANY_POSITION, ANY_POSITION));
-        delegate.timelineStateHolder.setPreviousCursor(new TimelineCursor(ANY_POSITION,
-                ANY_POSITION));
-        delegate.refresh(null);
-        assertNull(delegate.timelineStateHolder.positionForNext());
-        assertNull(delegate.timelineStateHolder.positionForPrevious());
-    }
-
-    @Test
-    public void testRefresh_callsNextForLatest() {
-        delegate = new TimelineDelegate<>(mockTimeline);
-        delegate.refresh(null);
-        verify(mockTimeline).next(isNull(Long.class), any(TimelineDelegate.NextCallback.class));
-    }
-
-    @Test
-    public void testRefresh_replacesItems() {
-        // refresh replaces initial items
-        final Timeline<TestItem> fakeTimeline = new FakeItemTimeline(NUM_ITEMS, ANY_POSITION,
-                ANY_POSITION);
-        delegate = new TimelineDelegate<>(fakeTimeline, mockObservable, testItems);
-        assertEquals(testItems, delegate.itemList);
-        delegate.refresh(null);
-        // assert that items were replaced and notifyChanged called
-        assertEquals(NUM_ITEMS, delegate.itemList.size());
-        verify(mockObservable).notifyChanged();
-    }
-
-    @Test
-    public void testNext_addsItems() {
-        final Timeline<TestItem> fakeTimeline = new FakeItemTimeline(NUM_ITEMS, ANY_POSITION,
-                ANY_POSITION);
-        delegate = new TimelineDelegate<>(fakeTimeline, mockObservable, null);
-        delegate.refresh(null);
-        // refresh loads latest items (notifyChange)
-        delegate.next(null);
-        // assert items are added and notifyChanges is called again
-        assertEquals(2 * NUM_ITEMS, delegate.getCount());
-        verify(mockObservable, times(2)).notifyChanged();
-    }
-
-    @Test
-    public void testNext_doesNotAddItemsAtBeginningOfTimeline() {
-        // when a Timeline successfully returns an empty set of items, there are no next items (yet)
-        List<TestItem> initialItems = new ArrayList<>();
-        final int INITIAL_COUNT = 5;
-        initialItems = TestItem.populateList(initialItems, INITIAL_COUNT);
-        final Timeline<TestItem> fakeEndTimeline = new FakeItemTimeline(ZERO_ITEMS, ANY_POSITION,
-                ANY_POSITION);
-        delegate = new TimelineDelegate<>(fakeEndTimeline, mockObservable, initialItems);
-        delegate.next(null);
-        // assert no items are added and notifyChanged is not called
-        assertEquals(INITIAL_COUNT, delegate.getCount());
-        verifyZeroInteractions(mockObservable);
-    }
-
-    @Test
-    public void testNext_updatesPositionForNext() {
-        final Timeline<TestItem> fakeTimeline = new FakeItemTimeline(NUM_ITEMS, ANY_POSITION,
-                TEST_MAX_POSITION);
-        delegate = new TimelineDelegate<>(fakeTimeline);
-        assertNull(delegate.timelineStateHolder.positionForPrevious());
-        delegate.next(null);
-        assertEquals(TEST_MAX_POSITION, delegate.timelineStateHolder.positionForNext());
-    }
-
-    @Test
-    public void testNext_doesNotUpdatePositionAtBeginningOfTimeline() {
-        final Timeline<TestItem> fakeEndTimeline = new FakeItemTimeline(ZERO_ITEMS, ANY_POSITION,
-                ANY_POSITION);
-        delegate = new TimelineDelegate<>(fakeEndTimeline);
-        delegate.timelineStateHolder.setPreviousCursor(new TimelineCursor(null, null));
-        delegate.next(null);
-        assertNull(delegate.timelineStateHolder.positionForNext());
-    }
-
-    @Test
-    public void testPrevious_addsItems() {
-        final Timeline<TestItem> fakeTimeline = new FakeItemTimeline(NUM_ITEMS, ANY_POSITION,
-                ANY_POSITION);
-        delegate = new TimelineDelegate<>(fakeTimeline, mockObservable, null);
-        delegate.refresh(null);
-        // refresh loads latest items (notifyChange)
-        delegate.previous();
-        // assert items are added and notifyChanges is called again
-        assertEquals(2 * NUM_ITEMS, delegate.getCount());
-        verify(mockObservable, times(2)).notifyChanged();
-    }
-
-    @Test
-    public void testPrevious_doesNotAddItemsAtEndOfTimeline() {
-        // when a Timeline successfully returns an empty set of items, its end has been reached
-        List<TestItem> initialItems = new ArrayList<>();
-        final int INITIAL_COUNT = 5;
-        initialItems = TestItem.populateList(initialItems, INITIAL_COUNT);
-        final Timeline<TestItem> fakeEndTimeline = new FakeItemTimeline(ZERO_ITEMS, ANY_POSITION,
-                ANY_POSITION);
-        delegate = new TimelineDelegate<>(fakeEndTimeline, mockObservable, initialItems);
-        delegate.previous();
-        // assert no items are added and notifyChanged is not called
-        assertEquals(INITIAL_COUNT, delegate.getCount());
-        verifyZeroInteractions(mockObservable);
-    }
-
-    @Test
-    public void testPrevious_updatesPositionForPrevious() {
-        final Timeline<TestItem> fakeTimeline = new FakeItemTimeline(NUM_ITEMS, TEST_MIN_POSITION,
-                ANY_POSITION);
-        delegate = new TimelineDelegate<>(fakeTimeline);
-        assertNull(delegate.timelineStateHolder.positionForPrevious());
-        delegate.previous();
-        assertEquals(TEST_MIN_POSITION, delegate.timelineStateHolder.positionForPrevious());
-    }
-
-    @Test
-    public void testPrevious_doesNotUpdatePositionAtEndOfTimeline() {
-        final Timeline<TestItem> fakeEndTimeline = new FakeItemTimeline(ZERO_ITEMS, ANY_POSITION,
-                ANY_POSITION);
-        delegate = new TimelineDelegate<>(fakeEndTimeline);
-        delegate.timelineStateHolder.setPreviousCursor(new TimelineCursor(null, null));
-        delegate.previous();
-        assertNull(delegate.timelineStateHolder.positionForPrevious());
-    }
-
-    // loadNext, loadPrevious
-
-    @Test
-    public void testLoadNext() {
-        delegate = new TimelineDelegate<>(mockTimeline);
-        final Callback<TimelineResult<TestItem>> testCb = delegate.new NextCallback(null,
-                delegate.timelineStateHolder);
-        delegate.loadNext(TEST_MIN_POSITION, testCb);
-        verify(mockTimeline).next(TEST_MIN_POSITION, testCb);
-    }
-
-    @Test
-    public void testLoadNext_respectsMaxCapacity() {
-        delegate = new TimelineDelegate<>(mockTimeline);
-        TestItem.populateList(delegate.itemList, TimelineDelegate.CAPACITY);
-        final Callback<TimelineResult<TestItem>> mockCallback = mock(Callback.class);
-        delegate.loadNext(ANY_POSITION, mockCallback);
-        final ArgumentCaptor<TwitterException> exceptionCaptor
-                = ArgumentCaptor.forClass(TwitterException.class);
-        verifyZeroInteractions(mockTimeline);
-        verify(mockCallback).failure(exceptionCaptor.capture());
-        assertEquals(exceptionCaptor.getValue().getMessage(), REQUIRED_MAX_CAPACITY_ERROR);
-    }
-
-    @Test
-    public void testLoadNext_respectsRequestInFlight() {
-        delegate = new TimelineDelegate<>(mockTimeline);
-        delegate.timelineStateHolder.startTimelineRequest();
-        final Callback<TimelineResult<TestItem>> mockCallback = mock(Callback.class);
-        delegate.loadNext(ANY_POSITION, mockCallback);
-        final ArgumentCaptor<TwitterException> exceptionCaptor
-                = ArgumentCaptor.forClass(TwitterException.class);
-        verifyZeroInteractions(mockTimeline);
-        verify(mockCallback).failure(exceptionCaptor.capture());
-        assertEquals(exceptionCaptor.getValue().getMessage(), REQUIRED_REQUEST_IN_FLIGHT_ERROR);
-    }
-
-    @Test
-    public void testLoadPrevious() {
-        delegate = new TimelineDelegate<>(mockTimeline);
-        final Callback<TimelineResult<TestItem>> testCb = delegate.new PreviousCallback(
-                delegate.timelineStateHolder);
-        delegate.loadPrevious(TEST_MAX_POSITION, testCb);
-        verify(mockTimeline).previous(TEST_MAX_POSITION, testCb);
-    }
-
-    @Test
-    public void testLoadPrevious_respectsMaxCapacity() {
-        delegate = new TimelineDelegate<>(mockTimeline);
-        TestItem.populateList(delegate.itemList, TimelineDelegate.CAPACITY);
-        final Callback<TimelineResult<TestItem>> mockCallback = mock(Callback.class);
-        delegate.loadPrevious(ANY_POSITION, mockCallback);
-        final ArgumentCaptor<TwitterException> exceptionCaptor
-                = ArgumentCaptor.forClass(TwitterException.class);
-        verifyZeroInteractions(mockTimeline);
-        verify(mockCallback).failure(exceptionCaptor.capture());
-        assertEquals(exceptionCaptor.getValue().getMessage(), REQUIRED_MAX_CAPACITY_ERROR);
-    }
-
-    @Test
-    public void testLoadPrevious_respectsRequestInFlight() {
-        delegate = new TimelineDelegate<>(mockTimeline);
-        delegate.timelineStateHolder.startTimelineRequest();
-        final Callback<TimelineResult<TestItem>> mockCallback = mock(Callback.class);
-        delegate.loadPrevious(ANY_POSITION, mockCallback);
-        final ArgumentCaptor<TwitterException> exceptionCaptor
-                = ArgumentCaptor.forClass(TwitterException.class);
-        verifyZeroInteractions(mockTimeline);
-        verify(mockCallback).failure(exceptionCaptor.capture());
-        assertEquals(exceptionCaptor.getValue().getMessage(), REQUIRED_REQUEST_IN_FLIGHT_ERROR);
-    }
-
-    /* nested Callbacks */
-
-    // should unconditionally set requestInFlight to false
-    @Test
-    public void testDefaultCallback_successCallsFinishTimelineRequest() {
-        delegate = new TimelineDelegate<>(mockTimeline);
-        final TimelineStateHolder mockHolder = mock(TimelineStateHolder.class);
-        final TimelineDelegate.DefaultCallback cb = delegate.new DefaultCallback(null, mockHolder);
-        cb.success(null);
-        verify(mockHolder).finishTimelineRequest();
-    }
-
-    @Test
-    public void testDefaultCallback_successCallsDeveloperCallback() {
-        final Callback<TimelineResult<TestItem>> developerCb = mock(Callback.class);
-        delegate = new TimelineDelegate<>(mockTimeline);
-        final TimelineDelegate.DefaultCallback cb = delegate.new DefaultCallback(developerCb,
-                delegate.timelineStateHolder);
-        cb.success(testResult);
-        verify(developerCb).success(testResult);
-    }
-
-    @Test
-    public void testDefaultCallback_successHandlesNullDeveloperCallback() {
-        delegate = new TimelineDelegate<>(mockTimeline);
-        final TimelineDelegate.DefaultCallback cb = delegate.new DefaultCallback(null,
-                delegate.timelineStateHolder);
-        try {
-            cb.success(testResult);
-        } catch (NullPointerException e) {
-            fail("Should have handled null callback");
-        }
-    }
-
-    // should unconditionally set requestInFlight to false
-    @Test
-    public void testDefaultCallback_failureCallsFinishTimelineRequest() {
-        delegate = new TimelineDelegate<>(mockTimeline);
-        final TimelineStateHolder mockHolder = mock(TimelineStateHolder.class);
-        final TimelineDelegate.DefaultCallback cb = delegate.new DefaultCallback(null, mockHolder);
-        cb.failure(null);
-        verify(mockHolder).finishTimelineRequest();
-    }
-
-    @Test
-    public void testDefaultCallback_failureCallsDeveloperCallback() {
-        final Callback<TimelineResult<TestItem>> developerCb = mock(Callback.class);
-        delegate = new TimelineDelegate<>(mockTimeline);
-        final TimelineDelegate.DefaultCallback cb = delegate.new DefaultCallback(developerCb,
-                delegate.timelineStateHolder);
-        cb.failure(TEST_TWITTER_EXCEPTION);
-        verify(developerCb).failure(TEST_TWITTER_EXCEPTION);
-    }
-
-    @Test
-    public void testDefaultCallback_failureHandlesNullDeveloperCallback() {
-        delegate = new TimelineDelegate<>(mockTimeline);
-        final TimelineDelegate.DefaultCallback cb = delegate.new DefaultCallback(null,
-                delegate.timelineStateHolder);
-        try {
-            cb.failure(TEST_TWITTER_EXCEPTION);
-        } catch (NullPointerException e) {
-            fail("Should have handled null callback");
-        }
-    }
-
-    // should prepend result items, set next cursor, and call notifyChanged
-    @Test
-    public void testNextCallback_successReceivedItems() {
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, testItems);
-        final TimelineStateHolder timelineStateHolder = new TimelineStateHolder(
-                new TimelineCursor(ANY_POSITION, ANY_POSITION),
-                new TimelineCursor(ANY_POSITION, ANY_POSITION));
-        final TimelineDelegate.NextCallback cb = delegate.new NextCallback(null,
-                timelineStateHolder);
-        cb.success(new Result<>(new TimelineResult<>(TEST_TIMELINE_CURSOR, testExtraItems), null));
-        // assert the next TimelineCursor is set on the ScrollStateHolder, previous unchanged
-        assertEquals(TEST_MAX_POSITION, timelineStateHolder.positionForNext());
-        assertEquals(ANY_POSITION, timelineStateHolder.positionForPrevious());
-        // assert that extra items were prepended in reverse order
-        assertEquals(TOTAL_ITEMS, delegate.itemList.size());
-        assertEquals(TEST_ITEM_4, delegate.getItem(0));
-        assertEquals(TEST_ITEM_3, delegate.getItem(1));
-        assertEquals(TEST_ITEM_2, delegate.getItem(2));
-        assertEquals(TEST_ITEM_1, delegate.getItem(3));
-        // assert observer's notifyChanged is called
-        verify(mockObservable).notifyChanged();
-    }
-
-    // should set both nextCursor and previousCursor to be non-null
-    @Test
-    public void testNextCallback_successFirstReceivedItems() {
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, testItems);
-        final TimelineStateHolder timelineStateHolder = new TimelineStateHolder();
-        final TimelineDelegate.NextCallback cb = delegate.new NextCallback(null,
-                timelineStateHolder);
-        cb.success(new Result<>(new TimelineResult<>(TEST_TIMELINE_CURSOR, testExtraItems), null));
-        // assert the next TimelineCursor is set on the ScrollStateHolder, previous unchanged
-        assertEquals(TEST_MAX_POSITION, timelineStateHolder.positionForNext());
-        assertEquals(TEST_MIN_POSITION, timelineStateHolder.positionForPrevious());
-    }
-
-    // should do nothing
-    @Test
-    public void testNextCallback_successReceivedZeroItems() {
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, testItems);
-        final TimelineStateHolder timelineStateHolder = new TimelineStateHolder();
-        final TimelineDelegate.NextCallback cb = delegate.new NextCallback(null,
-                timelineStateHolder);
-        cb.success(new Result<>(new TimelineResult<>(TEST_TIMELINE_CURSOR, Collections.emptyList()),
-                null));
-        // assert that the cursors and itemList are left unmodified
-        assertNull(timelineStateHolder.positionForNext());
-        assertNull(timelineStateHolder.positionForPrevious());
-        assertEquals(testItems.size(), delegate.itemList.size());
-        verifyZeroInteractions(mockObservable);
-    }
-
-    // should clear items with result items, set next cursor, and call notifyChanged
-    @Test
-    public void testRefreshCallback_successReceivedItems() {
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, testItems);
-        final TimelineStateHolder timelineStateHolder = new TimelineStateHolder(
-                new TimelineCursor(ANY_POSITION, ANY_POSITION),
-                new TimelineCursor(ANY_POSITION, ANY_POSITION));
-        final TimelineDelegate.RefreshCallback cb = delegate.new RefreshCallback(null,
-                timelineStateHolder);
-        cb.success(new Result<>(new TimelineResult<>(TEST_TIMELINE_CURSOR, testExtraItems), null));
-        // assert the next TimelineCursor is set on the ScrollStateHolder, previous unchanged
-        assertEquals(TEST_MAX_POSITION, timelineStateHolder.positionForNext());
-        assertEquals(ANY_POSITION, timelineStateHolder.positionForPrevious());
-        // assert that extra items replaced the old items
-        assertEquals(testExtraItems.size(), delegate.itemList.size());
-        assertEquals(TEST_ITEM_4, delegate.getItem(0));
-        assertEquals(TEST_ITEM_3, delegate.getItem(1));
-        // assert observer's notifyChanged is called
-        verify(mockObservable).notifyChanged();
-    }
-
-    // should do nothing
-    @Test
-    public void testRefreshCallback_successReceivedZeroItems() {
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, testItems);
-        final TimelineStateHolder timelineStateHolder = new TimelineStateHolder();
-        final TimelineDelegate.RefreshCallback cb = delegate.new RefreshCallback(null,
-                timelineStateHolder);
-        cb.success(new Result<>(new TimelineResult<>(TEST_TIMELINE_CURSOR, Collections.emptyList()),
-                null));
-        // assert that the cursors and itemList are left unmodified
-        assertNull(timelineStateHolder.positionForNext());
-        assertNull(timelineStateHolder.positionForPrevious());
-        assertEquals(testItems.size(), delegate.itemList.size());
-        verifyZeroInteractions(mockObservable);
-    }
-
-    // should append result items, set previous cursor, and call notifyChanged
-    @Test
-    public void testPreviousCallback_successReceivedItems() {
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, testItems);
-        final TimelineStateHolder timelineStateHolder = new TimelineStateHolder(
-                new TimelineCursor(ANY_POSITION, ANY_POSITION),
-                new TimelineCursor(ANY_POSITION, ANY_POSITION));
-        final TimelineDelegate.PreviousCallback cb
-                = delegate.new PreviousCallback(timelineStateHolder);
-        cb.success(new Result<>(new TimelineResult<>(TEST_TIMELINE_CURSOR, testExtraItems), null));
-        // assert the previous TimelineCursor is set on the ScrollStateHolder
-        assertEquals(TEST_MIN_POSITION, timelineStateHolder.positionForPrevious());
-        assertEquals(ANY_POSITION, timelineStateHolder.positionForNext());
-        // assert that extra items were appended in order received
-        assertEquals(TOTAL_ITEMS, delegate.itemList.size());
-        assertEquals(TEST_ITEM_2, delegate.getItem(0));
-        assertEquals(TEST_ITEM_1, delegate.getItem(1));
-        assertEquals(TEST_ITEM_4, delegate.getItem(2));
-        assertEquals(TEST_ITEM_3, delegate.getItem(3));
-        // assert observer's notifyChanged is called
-        verify(mockObservable).notifyChanged();
-    }
-
-    // should set both nextCursor and previousCursor to be non-null
-    @Test
-    public void testPreviousCallback_successFirstReceivedItems() {
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, testItems);
-        final TimelineStateHolder timelineStateHolder = new TimelineStateHolder();
-        final TimelineDelegate.PreviousCallback cb
-                = delegate.new PreviousCallback(timelineStateHolder);
-        cb.success(new Result<>(new TimelineResult<>(TEST_TIMELINE_CURSOR, testExtraItems), null));
-        // assert the previous TimelineCursor is set on the ScrollStateHolder
-        assertEquals(TEST_MAX_POSITION, timelineStateHolder.positionForNext());
-        assertEquals(TEST_MIN_POSITION, timelineStateHolder.positionForPrevious());
-    }
-
-
-    // should do nothing
-    @Test
-    public void testPreviousCallback_successReceivedZeroItems() {
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, testItems);
-        final TimelineStateHolder timelineStateHolder = new TimelineStateHolder();
-        final TimelineDelegate.PreviousCallback cb
-                = delegate.new PreviousCallback(timelineStateHolder);
-        cb.success(new Result<>(new TimelineResult<>(TEST_TIMELINE_CURSOR, Collections.emptyList()),
-                null));
-        // assert that the cursors and itemList are left unmodified
-        assertNull(timelineStateHolder.positionForNext());
-        assertNull(timelineStateHolder.positionForPrevious());
-        assertEquals(testItems.size(), delegate.itemList.size());
-        verifyZeroInteractions(mockObservable);
-    }
-
-    /* test DataSetObservable */
-
-    @Test
-    public void testRegisterDataSetObserver() {
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, null);
-        delegate.registerDataSetObserver(mock(DataSetObserver.class));
-        verify(mockObservable, times(1)).registerObserver(any(DataSetObserver.class));
-    }
-
-    @Test
-    public void testUnregisterDataSetObserver() {
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, null);
-        delegate.unregisterDataSetObserver(mock(DataSetObserver.class));
-        verify(mockObservable, times(1)).unregisterObserver(any(DataSetObserver.class));
-    }
-
-    @Test
-    public void testNotifyDataSetChanged() {
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, null);
-        delegate.notifyDataSetChanged();
-        verify(mockObservable, times(1)).notifyChanged();
-    }
-
-    @Test
-    public void testNotifyDataSetInvalidated() {
-        delegate = new TimelineDelegate<>(mockTimeline, mockObservable, null);
-        delegate.notifyDataSetInvalidated();
-        verify(mockObservable, times(1)).notifyInvalidated();
-    }
-
-    /**
-     * Timeline which loads numItems TestItems on each next/previous call. Use zero for numItems
-     * to simulate reaching the end of a finite timeline.
-     */
-    public static class FakeItemTimeline implements Timeline<TestItem> {
-        private long numItems;
-        private Long minPosition;
-        private Long maxPosition;
-
-        /**
-         * Constructs a FakeItemTimeline
-         * @param numItems the number of TestItems to return per call to next/previous
-         * @param minPosition the TimelineCursor minPosition returned by calls to next/previous
-         * @param maxPosition the TimelineCursor maxPosition returned by calls to next/previous
-         */
-        public FakeItemTimeline(long numItems, Long minPosition, Long maxPosition) {
-            this.numItems = numItems;
-            this.minPosition = minPosition;
-            this.maxPosition = maxPosition;
-        }
-
-        @Override
-        public void next(Long sinceId, Callback<TimelineResult<TestItem>> cb) {
-            final List<TestItem> testItems = new ArrayList<>();
-            TestItem.populateList(testItems, numItems);
-            final TimelineResult<TestItem> timelineResult
-                    = new TimelineResult<>(new TimelineCursor(minPosition, maxPosition), testItems);
-            cb.success(new Result<>(timelineResult, null));
-        }
-
-        @Override
-        public void previous(Long maxId, Callback<TimelineResult<TestItem>> cb) {
-            final List<TestItem> testItems = new ArrayList<>();
-            TestItem.populateList(testItems, numItems);
-            final TimelineResult<TestItem> timelineResult
-                    = new TimelineResult<>(new TimelineCursor(minPosition, maxPosition), testItems);
-            cb.success(new Result<>(timelineResult, null));
-        }
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineListAdapterTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineListAdapterTest.java
deleted file mode 100644
index 71d28a66..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineListAdapterTest.java
+++ /dev/null
@@ -1,157 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.database.DataSetObserver;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.models.Identifiable;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.fail;
-import static org.mockito.Matchers.any;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.times;
-import static org.mockito.Mockito.verify;
-
-@RunWith(RobolectricTestRunner.class)
-public class TimelineListAdapterTest {
-    private static final int TEST_POSITION = 10;
-    private TimelineListAdapter<TestItem> listAdapter;
-    private TimelineDelegate<TestItem> mockTimelineDelegate;
-    private Context context;
-
-    @Before
-    public void setUp() throws Exception {
-        mockTimelineDelegate = mock(TestTimelineDelegate.class);
-        context = RuntimeEnvironment.application;
-    }
-
-    @Test
-    public void testConstructor() {
-        listAdapter = new TestTimelineListAdapter<>(context, mockTimelineDelegate);
-        verify(mockTimelineDelegate).refresh(null);
-    }
-
-    @Test
-    public void testConstructor_nullTimeline() {
-        try {
-            new TestTimelineListAdapter<>(context, (Timeline) null);
-            fail("IllegalArgumentException expected");
-        } catch (IllegalArgumentException e) {
-            assertEquals("Timeline must not be null", e.getMessage());
-        }
-    }
-
-    @Test
-    public void testRefresh() {
-        listAdapter = new TestTimelineListAdapter<>(context, mockTimelineDelegate);
-        final Callback<TimelineResult<TestItem>> mockCallback = mock(Callback.class);
-        listAdapter.refresh(mockCallback);
-        verify(mockTimelineDelegate).refresh(mockCallback);
-    }
-
-    @Test
-    public void testGetCount() {
-        listAdapter = new TestTimelineListAdapter<>(context, mockTimelineDelegate);
-        listAdapter.getCount();
-        verify(mockTimelineDelegate).getCount();
-    }
-
-    @Test
-    public void testGetItem() {
-        listAdapter = new TestTimelineListAdapter<>(context, mockTimelineDelegate);
-        listAdapter.getItem(TEST_POSITION);
-        verify(mockTimelineDelegate).getItem(TEST_POSITION);
-    }
-
-    @Test
-    public void testGetItemId() {
-        listAdapter = new TestTimelineListAdapter<>(context, mockTimelineDelegate);
-        listAdapter.getItemId(TEST_POSITION);
-        verify(mockTimelineDelegate).getItemId(TEST_POSITION);
-    }
-
-    @Test
-    public void testRegisterDataSetObserver() {
-        listAdapter = new TestTimelineListAdapter<>(context, mockTimelineDelegate);
-        listAdapter.registerDataSetObserver(mock(DataSetObserver.class));
-        verify(mockTimelineDelegate, times(1)).registerDataSetObserver(any(DataSetObserver.class));
-    }
-
-    @Test
-    public void testUnregisterDataSetObserver() {
-        listAdapter = new TestTimelineListAdapter<>(context, mockTimelineDelegate);
-        listAdapter.unregisterDataSetObserver(mock(DataSetObserver.class));
-        verify(mockTimelineDelegate, times(1))
-                .unregisterDataSetObserver(any(DataSetObserver.class));
-    }
-
-    @Test
-    public void testNotifyDataSetChanged() {
-        listAdapter = new TestTimelineListAdapter<>(context, mockTimelineDelegate);
-        listAdapter.notifyDataSetChanged();
-        verify(mockTimelineDelegate, times(1)).notifyDataSetChanged();
-    }
-
-    @Test
-    public void testNotifyDataSetInvalidated() {
-        listAdapter = new TestTimelineListAdapter<>(context, mockTimelineDelegate);
-        listAdapter.notifyDataSetInvalidated();
-        verify(mockTimelineDelegate, times(1)).notifyDataSetInvalidated();
-    }
-
-    /**
-     * Implement abstract method getView to create a concrete subclass TestTimelineListAdapter so
-     * that TimelineListAdapter non-view related behavior can be tested.
-     */
-    public class TestTimelineListAdapter<T extends Identifiable> extends TimelineListAdapter<T> {
-
-        TestTimelineListAdapter(Context context, Timeline<T> timeline) {
-            super(context, timeline);
-        }
-
-        TestTimelineListAdapter(Context context, TimelineDelegate<T> delegate) {
-           super(context, delegate);
-        }
-
-        @Override
-        public View getView(int position, View convertView, ViewGroup parent) {
-            return null;
-        }
-    }
-
-    /**
-     * Makes class public so it can be mocked on ART runtime.
-     * @param <T>
-     */
-    class TestTimelineDelegate<T extends Identifiable> extends TimelineDelegate {
-        TestTimelineDelegate(Timeline<T> timeline) {
-            super(timeline);
-        }
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineStateHolderTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineStateHolderTest.java
deleted file mode 100644
index b10c1f72..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineStateHolderTest.java
+++ /dev/null
@@ -1,154 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.assertTrue;
-import static org.mockito.Mockito.mock;
-
-@RunWith(RobolectricTestRunner.class)
-public class TimelineStateHolderTest {
-    private static final Long ANY_POSITION = 1234L;
-    private static final Long TEST_MIN_POSITION = 1111L;
-    private static final Long TEST_MAX_POSITION = 3333L;
-    private static final TimelineCursor TEST_TIMELINE_CURSOR = new TimelineCursor(ANY_POSITION,
-            ANY_POSITION);
-
-    private TimelineCursor mockTimelineCursor;
-
-    @Before
-    public void setUp() throws Exception {
-
-        mockTimelineCursor = mock(TimelineCursor.class);
-    }
-
-    @Test
-    public void testConstructor() {
-        final TimelineStateHolder holder = new TimelineStateHolder();
-        assertNull(holder.nextCursor);
-        assertNull(holder.previousCursor);
-        assertFalse(holder.requestInFlight.get());
-    }
-
-    @Test
-    public void testInternalConstructor() {
-        final TimelineStateHolder holder = new TimelineStateHolder(TEST_TIMELINE_CURSOR,
-                TEST_TIMELINE_CURSOR);
-        assertEquals(TEST_TIMELINE_CURSOR, holder.previousCursor);
-        assertEquals(TEST_TIMELINE_CURSOR, holder.nextCursor);
-        assertFalse(holder.requestInFlight.get());
-    }
-
-    @Test
-    public void testResetCursors() {
-        final TimelineStateHolder holder = new TimelineStateHolder(TEST_TIMELINE_CURSOR,
-                TEST_TIMELINE_CURSOR);
-        holder.resetCursors();
-        assertNull(holder.nextCursor);
-        assertNull(holder.previousCursor);
-    }
-
-    @Test
-    public void testPositionForNext() {
-        final TimelineStateHolder holder = new TimelineStateHolder(new TimelineCursor(ANY_POSITION,
-                TEST_MAX_POSITION), mockTimelineCursor);
-        assertEquals(TEST_MAX_POSITION, holder.positionForNext());
-    }
-
-    @Test
-    public void testPositionForNext_nullCursor() {
-        final TimelineStateHolder holder = new TimelineStateHolder(null, mockTimelineCursor);
-        assertNull(holder.positionForNext());
-    }
-
-    @Test
-    public void testSetNextCursor() {
-        final TimelineCursor previousCursor = new TimelineCursor(ANY_POSITION, ANY_POSITION);
-        final TimelineStateHolder holder = new TimelineStateHolder(
-                new TimelineCursor(ANY_POSITION, ANY_POSITION),
-                previousCursor);
-        holder.setNextCursor(TEST_TIMELINE_CURSOR);
-        assertEquals(TEST_TIMELINE_CURSOR, holder.nextCursor);
-        assertEquals(previousCursor, holder.previousCursor);
-    }
-
-    // first next load will set both nextCursor and previousCursor
-    @Test
-    public void testSetNextCursor_firstLoad() {
-        final TimelineStateHolder holder = new TimelineStateHolder();
-        holder.setNextCursor(TEST_TIMELINE_CURSOR);
-        assertEquals(TEST_TIMELINE_CURSOR, holder.nextCursor);
-        assertEquals(TEST_TIMELINE_CURSOR, holder.previousCursor);
-    }
-
-    @Test
-    public void testPositionForPrevious() {
-        final TimelineStateHolder holder = new TimelineStateHolder(mockTimelineCursor,
-                new TimelineCursor(TEST_MIN_POSITION, ANY_POSITION));
-        assertEquals(TEST_MIN_POSITION, holder.positionForPrevious());
-    }
-
-    @Test
-    public void testPositionForPrevious_nullCursor() {
-        final TimelineStateHolder holder = new TimelineStateHolder(mockTimelineCursor, null);
-        assertNull(holder.positionForPrevious());
-    }
-
-    @Test
-    public void testSetPreviousCursor() {
-        final TimelineCursor nextCursor = new TimelineCursor(ANY_POSITION, ANY_POSITION);
-        final TimelineStateHolder holder = new TimelineStateHolder(nextCursor,
-                new TimelineCursor(ANY_POSITION, ANY_POSITION));
-        holder.setPreviousCursor(TEST_TIMELINE_CURSOR);
-        assertEquals(TEST_TIMELINE_CURSOR, holder.previousCursor);
-        assertEquals(nextCursor, holder.nextCursor);
-    }
-
-    // first previous load will set both nextCursor and previousCursor
-    @Test
-    public void testSetPreviousCursor_firstLoad() {
-        final TimelineStateHolder holder = new TimelineStateHolder();
-        holder.setPreviousCursor(TEST_TIMELINE_CURSOR);
-        assertEquals(TEST_TIMELINE_CURSOR, holder.nextCursor);
-        assertEquals(TEST_TIMELINE_CURSOR, holder.previousCursor);
-    }
-
-    @Test
-    public void testStartTimelineRequest() {
-        final TimelineStateHolder holder = new TimelineStateHolder();
-        assertFalse(holder.requestInFlight.get());
-        assertTrue(holder.startTimelineRequest());
-        assertTrue(holder.requestInFlight.get());
-        assertFalse(holder.startTimelineRequest());
-    }
-
-    @Test
-    public void testFinishTimelineRequest() {
-        final TimelineStateHolder holder = new TimelineStateHolder();
-        holder.requestInFlight.set(true);
-        holder.finishTimelineRequest();
-        assertFalse(holder.requestInFlight.get());
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/ToggleImageButtonTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/ToggleImageButtonTest.java
deleted file mode 100644
index 01f66ea4..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/ToggleImageButtonTest.java
+++ /dev/null
@@ -1,114 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.util.AttributeSet;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.Robolectric;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.assertTrue;
-
-@RunWith(RobolectricTestRunner.class)
-public class ToggleImageButtonTest {
-    private static final String CONTENT_DESCRIPTION_ON = "ContentDescriptionOn";
-    private static final String CONTENT_DESCRIPTION_OFF = "ContentDescriptionOff";
-
-    ToggleImageButton createDefaultButton() {
-        return new ToggleImageButton(RuntimeEnvironment.application);
-    }
-
-    ToggleImageButton createButtonWithAttributes() {
-        final AttributeSet attrs = Robolectric.buildAttributeSet()
-                .addAttribute(R.attr.contentDescriptionOff, CONTENT_DESCRIPTION_OFF)
-                .addAttribute(R.attr.contentDescriptionOn, CONTENT_DESCRIPTION_ON)
-                .addAttribute(R.attr.toggleOnClick, "false")
-                .build();
-
-        return new ToggleImageButton(RuntimeEnvironment.application, attrs);
-    }
-
-    @Test
-    public void testInit() {
-        final ToggleImageButton button = createDefaultButton();
-        assertNull(button.contentDescriptionOn);
-        assertNull(button.contentDescriptionOff);
-        assertFalse(button.isToggledOn());
-        assertTrue(button.toggleOnClick);
-    }
-
-    @Test
-    public void testPerformClick() {
-        final ToggleImageButton button = createDefaultButton();
-        assertTrue(button.toggleOnClick);
-        assertFalse(button.isToggledOn());
-        button.performClick();
-        assertTrue(button.isToggledOn());
-    }
-
-    @Test
-    public void testSetToggledOn() {
-        final ToggleImageButton button = createDefaultButton();
-        assertFalse(button.isToggledOn());
-        button.setToggledOn(true);
-        assertTrue(button.isToggledOn());
-    }
-
-    @Test
-    public void testToggle() {
-        final ToggleImageButton button = createDefaultButton();
-        assertFalse(button.isToggledOn());
-        button.toggle();
-        assertTrue(button.isToggledOn());
-    }
-
-    @Test
-    public void testXmlInit() {
-        final ToggleImageButton button = createButtonWithAttributes();
-        assertEquals(CONTENT_DESCRIPTION_ON, button.contentDescriptionOn);
-        assertEquals(CONTENT_DESCRIPTION_OFF, button.contentDescriptionOff);
-        assertFalse(button.isToggledOn());
-        assertEquals(CONTENT_DESCRIPTION_OFF, button.getContentDescription());
-        assertFalse(button.toggleOnClick);
-    }
-
-    @Test
-    public void testPerformClick_toggleOnClickDisabled() {
-        final ToggleImageButton button = createButtonWithAttributes();
-        assertFalse(button.toggleOnClick);
-        assertFalse(button.isToggledOn());
-        button.performClick();
-        assertFalse(button.isToggledOn());
-    }
-
-    @Test
-    public void testSetToggledOn_withContentDescription() {
-        final ToggleImageButton button = createButtonWithAttributes();
-        assertFalse(button.isToggledOn());
-        assertEquals(CONTENT_DESCRIPTION_OFF, button.getContentDescription());
-        button.setToggledOn(true);
-        assertTrue(button.isToggledOn());
-        assertEquals(CONTENT_DESCRIPTION_ON, button.getContentDescription());
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetDateUtilsTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetDateUtilsTest.java
deleted file mode 100644
index 34bc8c6a..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetDateUtilsTest.java
+++ /dev/null
@@ -1,152 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.res.Resources;
-import android.text.format.DateUtils;
-
-import org.junit.After;
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-import java.util.TimeZone;
-
-import static org.junit.Assert.assertEquals;
-
-@RunWith(RobolectricTestRunner.class)
-public class TweetDateUtilsTest {
-    // this is an arbitrary date, but the relative date assertions are all based off of it
-    private static final long NOW_IN_MILLIS = 1395345704198L;
-    private static final long JACKS_FIRST_TWEET_IN_MILLIS = 1142974214000L;
-
-    private Resources resources;
-    private TimeZone realDefaultTimeZone;
-
-    @Before
-    public void setUp() throws Exception {
-        resources = RuntimeEnvironment.application.getResources();
-
-        // force timezone in utc so we get consistent values out of the formatter classes that rely
-        // on using the default timezone. We restore in tearDown whatever the real default timezone
-        // was in order to not interfere with other tests
-        realDefaultTimeZone = TimeZone.getDefault();
-        TimeZone.setDefault(TimeZone.getTimeZone("UTC"));
-        TweetDateUtils.DATE_TIME_RFC822.setTimeZone(TimeZone.getDefault());
-    }
-
-    @After
-    public void tearDown() throws Exception {
-        TimeZone.setDefault(realDefaultTimeZone);
-    }
-
-    @Test
-    public void testApiTimeToLong_jacksFirstTweet() {
-        assertEquals(JACKS_FIRST_TWEET_IN_MILLIS,
-                TweetDateUtils.apiTimeToLong("Tue Mar 21 20:50:14 +0000 2006"));
-    }
-
-    @Test
-    public void testApiTimeToLong_emptyString() {
-        assertEquals(TweetDateUtils.INVALID_DATE,
-                TweetDateUtils.apiTimeToLong(""));
-    }
-
-    @Test
-    public void testApiTimeToLong_nullString() {
-        assertEquals(TweetDateUtils.INVALID_DATE,
-                TweetDateUtils.apiTimeToLong(null));
-    }
-
-    @Test
-    public void testApiTimeToLong_invalidString() {
-        assertEquals(TweetDateUtils.INVALID_DATE,
-                TweetDateUtils.apiTimeToLong("11111"));
-    }
-
-    @Test
-    public void testGetRelativeTimeString_now() {
-        assertEquals("0s",
-                TweetDateUtils.getRelativeTimeString(resources, NOW_IN_MILLIS, NOW_IN_MILLIS));
-    }
-
-    @Test
-    public void testGetRelativeTimeString_secondsAgo() {
-        final long tenSecondsAgo = NOW_IN_MILLIS - DateUtils.SECOND_IN_MILLIS * 10;
-        assertEquals("10s",
-                TweetDateUtils.getRelativeTimeString(resources, NOW_IN_MILLIS, tenSecondsAgo));
-    }
-
-    @Test
-    public void testGetRelativeTimeString_minutesAgo() {
-        final long twoMinutesAgo = NOW_IN_MILLIS - DateUtils.MINUTE_IN_MILLIS * 2;
-        assertEquals("2m",
-                TweetDateUtils.getRelativeTimeString(resources, NOW_IN_MILLIS, twoMinutesAgo));
-    }
-
-    @Test
-    public void testGetRelativeTimeString_hoursAgo() {
-        final long twoHoursAgo = NOW_IN_MILLIS - DateUtils.HOUR_IN_MILLIS * 2;
-        assertEquals("2h",
-                TweetDateUtils.getRelativeTimeString(resources, NOW_IN_MILLIS, twoHoursAgo));
-    }
-
-    @Test
-    public void testGetRelativeTimeString_daysAgo() {
-        final long twoDaysAgo = NOW_IN_MILLIS - DateUtils.DAY_IN_MILLIS * 2;
-        assertEquals("Mar 18",
-                TweetDateUtils.getRelativeTimeString(resources, NOW_IN_MILLIS, twoDaysAgo));
-    }
-
-    @Test
-    public void testGetRelativeTimeString_lessThanAYearAgoWithinSameYear() {
-        final long sixtyDaysAgo = NOW_IN_MILLIS - DateUtils.DAY_IN_MILLIS * 60;
-        assertEquals("Jan 19",
-                TweetDateUtils.getRelativeTimeString(resources, NOW_IN_MILLIS, sixtyDaysAgo));
-    }
-
-    @Test
-    public void testGetRelativeTimeString_moreThanAYearAgo() {
-        final long twoYearsAgo = NOW_IN_MILLIS - DateUtils.DAY_IN_MILLIS * 730;
-        assertEquals("03/20/12",
-                TweetDateUtils.getRelativeTimeString(resources, NOW_IN_MILLIS, twoYearsAgo));
-    }
-
-    @Test
-    public void testGetRelativeTimeString_inTheFuture() {
-        final long twoYearsIntoTheFuture = NOW_IN_MILLIS + DateUtils.DAY_IN_MILLIS * 730;
-        assertEquals("03/19/16",
-                TweetDateUtils.getRelativeTimeString(resources, NOW_IN_MILLIS,
-                        twoYearsIntoTheFuture));
-    }
-
-    @Test
-    public void testGetRelativeTimeString_negativeTime() {
-        final long wayInthePast = -DateUtils.DAY_IN_MILLIS;
-        assertEquals("12/31/69",
-                TweetDateUtils.getRelativeTimeString(resources, NOW_IN_MILLIS, wayInthePast));
-    }
-
-    @Test
-    public void testGetRelativeTimeString_zeroTime() {
-        assertEquals("01/01/70",
-                TweetDateUtils.getRelativeTimeString(resources, NOW_IN_MILLIS, 0));
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetRepositoryTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetRepositoryTest.java
deleted file mode 100644
index c5a46000..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetRepositoryTest.java
+++ /dev/null
@@ -1,138 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.os.Handler;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.SessionManager;
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterAuthException;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.services.FavoriteService;
-import com.twitter.sdk.android.core.services.StatusesService;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.Mockito;
-import org.robolectric.RobolectricTestRunner;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import static org.mockito.Mockito.any;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.times;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-@RunWith(RobolectricTestRunner.class)
-public class TweetRepositoryTest {
-    private static final Long anyId = 123L;
-    private static final List<Long> anyIds = new ArrayList<>();
-    private TwitterCore mockTwitterCore;
-    private TwitterApiClient mockApiClient;
-    private FavoriteService mockFavoriteService;
-    private StatusesService mockStatusesService;
-    private SessionManager<TwitterSession> mockSessionManager;
-    private Handler mockHandler;
-    private TweetRepository tweetRepository;
-
-    @Before
-    public void setUp() throws Exception {
-        anyIds.add(anyId);
-        mockTwitterCore = mock(TwitterCore.class);
-        mockApiClient = mock(TwitterApiClient.class);
-        mockStatusesService = mock(StatusesService.class, Mockito.RETURNS_MOCKS);
-        when(mockApiClient.getStatusesService()).thenReturn(mockStatusesService);
-        mockFavoriteService = mock(FavoriteService.class, Mockito.RETURNS_MOCKS);
-        when(mockApiClient.getFavoriteService()).thenReturn(mockFavoriteService);
-        when(mockTwitterCore.getApiClient(any(TwitterSession.class))).thenReturn(mockApiClient);
-        when(mockTwitterCore.getApiClient()).thenReturn(mockApiClient);
-        mockSessionManager = mock(SessionManager.class);
-        when(mockSessionManager.getActiveSession()).thenReturn(mock(TwitterSession.class));
-        mockHandler = mock(Handler.class);
-        tweetRepository = new TweetRepository(mockHandler, mockSessionManager, mockTwitterCore);
-    }
-
-    @Test
-    public void testFavoriteDelegation() {
-        tweetRepository.favorite(anyId, mock(Callback.class));
-        verify(mockFavoriteService).create(anyId, false);
-    }
-
-    @Test
-    public void testUnfavoriteDelegation() {
-        tweetRepository.unfavorite(anyId, mock(Callback.class));
-        verify(mockFavoriteService).destroy(anyId, false);
-    }
-
-    @Test
-    public void testRetweetDelegation() {
-        tweetRepository.retweet(anyId, mock(Callback.class));
-        verify(mockStatusesService).retweet(anyId, false);
-    }
-
-    @Test
-    public void testUnretweetDelegation() {
-        tweetRepository.unretweet(anyId, mock(Callback.class));
-        verify(mockStatusesService).unretweet(anyId, false);
-    }
-
-    @Test
-    public void testLoadTweetDelegation() {
-        tweetRepository.loadTweet(anyId, mock(Callback.class));
-        verify(mockStatusesService).show(anyId, null, null, null);
-    }
-
-    @Test
-    public void testLoadTweetsDelegation() {
-        tweetRepository.loadTweets(anyIds, mock(Callback.class));
-        verify(mockStatusesService).lookup(anyId.toString(), null, null, null);
-    }
-
-    @Test
-    public void testGetUserSession_withActiveUserSession() {
-        final Callback<TwitterSession> cb = mock(Callback.class);
-        tweetRepository.getUserSession(cb);
-
-        verify(cb).success(any(Result.class));
-    }
-
-    @Test
-    public void testGetUserSession_withNoActiveUserSession() {
-        final Callback<TwitterSession> cb = mock(Callback.class);
-        when(mockSessionManager.getActiveSession()).thenReturn(null);
-        tweetRepository.getUserSession(cb);
-
-        verify(cb).failure(any(TwitterAuthException.class));
-    }
-
-    @Test
-    public void testSingleTweetCallback_callsUpdateCache() {
-        final TweetRepository mockRepo = mock(TweetRepository.class);
-        final TweetRepository.SingleTweetCallback callback
-                = mockRepo.new SingleTweetCallback(null);
-        callback.success(new Result<>(mock(Tweet.class), null));
-        verify(mockRepo, times(1)).updateCache(any(Tweet.class));
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetTextLinkifierTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetTextLinkifierTest.java
deleted file mode 100644
index a027cf42..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetTextLinkifierTest.java
+++ /dev/null
@@ -1,390 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.text.SpannableStringBuilder;
-import android.text.style.ClickableSpan;
-
-import com.twitter.sdk.android.core.models.HashtagEntity;
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.core.models.MentionEntity;
-import com.twitter.sdk.android.core.models.SymbolEntity;
-import com.twitter.sdk.android.core.models.UrlEntity;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertNotEquals;
-import static org.junit.Assert.assertNotSame;
-import static org.junit.Assert.assertSame;
-import static org.junit.Assert.assertTrue;
-import static org.junit.Assert.fail;
-import static org.mockito.Mockito.mock;
-
-@RunWith(RobolectricTestRunner.class)
-public class TweetTextLinkifierTest {
-    static final String BASE_TEXT = "just setting up my twttr";
-    static final String TEST_RLT_STRING = "ייִדיש משלי https://t.co/sfb4Id7esk\u200E";
-
-    @Test
-    public void testLinkifyUrls_nullFormattedTweetText() {
-        try {
-            TweetTextLinkifier.linkifyUrls(null, null, 0, 0, true, true);
-        } catch (Exception e) {
-            fail("threw unexpected exception");
-        }
-    }
-
-    @Test
-    public void testLinkifyUrls_newFormattedTweetText() {
-        try {
-            TweetTextLinkifier.linkifyUrls(new FormattedTweetText(), null, 0, 0, true, true);
-        } catch (Exception e) {
-            fail("threw unexpected exception");
-        }
-    }
-
-    @Test
-    public void testLinkifyUrls_oneUrlEntity() {
-        final String url = "http://t.co/foo";
-        final String displayUrl = "dev.twitter.com";
-        final String fullText = BASE_TEXT + " " + "http://t.co/foo";
-        final UrlEntity urlEntity
-                = EntityFactory.newUrlEntity(fullText, url, displayUrl);
-
-        final FormattedTweetText formattedText = new FormattedTweetText();
-        formattedText.text = fullText;
-        formattedText.urlEntities.add(FormattedUrlEntity.createFormattedUrlEntity(urlEntity));
-
-        final CharSequence linkifiedText
-                = TweetTextLinkifier.linkifyUrls(formattedText, null, 0, 0, true, true);
-        final String displayUrlFromEntity =
-                linkifiedText.subSequence(urlEntity.getStart(), urlEntity.getEnd()).toString();
-        assertEquals(urlEntity.displayUrl, displayUrlFromEntity);
-    }
-
-    @Test
-    public void testLinkifyUrls_oneInvalidUrlEntity() {
-        final String fullText = "";
-        final UrlEntity urlEntity = new UrlEntity("x z", "y", "z", -1, 30);
-        final FormattedTweetText formattedText = new FormattedTweetText();
-        formattedText.text = fullText;
-        formattedText.urlEntities.add(FormattedUrlEntity.createFormattedUrlEntity(urlEntity));
-
-        final CharSequence linkifiedText
-                = TweetTextLinkifier.linkifyUrls(formattedText, null, 0, 0, true, true);
-        assertEquals("", linkifiedText.toString());
-    }
-
-    @Test
-    public void testLinkifyUrls_linkClickListener() {
-        final String url = "http://t.co/foo";
-        final String displayUrl = "dev.twitter.com";
-        final String fullText = BASE_TEXT + " " + "http://t.co/foo";
-
-        final LinkClickListener mockClickListener = mock(LinkClickListener.class);
-
-        final UrlEntity urlEntity =
-                EntityFactory.newUrlEntity(fullText, url, displayUrl);
-        final FormattedTweetText formattedText = new FormattedTweetText();
-        formattedText.text = fullText;
-        formattedText.urlEntities.add(FormattedUrlEntity.createFormattedUrlEntity(urlEntity));
-
-        final SpannableStringBuilder linkifiedText = (SpannableStringBuilder)
-                TweetTextLinkifier.linkifyUrls(formattedText, mockClickListener, 0, 0, true,
-                        true);
-        final ClickableSpan[] clickables =
-                linkifiedText.getSpans(urlEntity.getStart(), urlEntity.getEnd(),
-                        ClickableSpan.class);
-        assertEquals(1, clickables.length);
-    }
-
-    @Test
-    public void testLinkifyHashtags_oneHashtagEntity() {
-        final String hashtag = "TwitterForGood";
-        final String fullHashtag = "#" + hashtag;
-        final String fullText = BASE_TEXT + " " + fullHashtag;
-        final HashtagEntity hashtagEntity = EntityFactory.newHashtagEntity(fullText, hashtag);
-
-        final FormattedTweetText formattedText = new FormattedTweetText();
-        formattedText.text = fullText;
-        formattedText.hashtagEntities.add(FormattedUrlEntity.createFormattedUrlEntity(
-                hashtagEntity));
-
-        final CharSequence linkifiedText
-                = TweetTextLinkifier.linkifyUrls(formattedText, null, 0, 0, true, true);
-        final String displayUrlFromEntity = linkifiedText.subSequence(hashtagEntity.getStart(),
-                        hashtagEntity.getEnd()).toString();
-        assertEquals(fullHashtag, displayUrlFromEntity);
-    }
-
-    @Test
-    public void testLinkifyHashtags_linkClickListener() {
-        final String hashtag = "TwitterForGood";
-        final String fullText = BASE_TEXT + " #" + hashtag;
-
-        final LinkClickListener mockClickListener = mock(LinkClickListener.class);
-
-        final HashtagEntity hashtagEntity = EntityFactory.newHashtagEntity(fullText, hashtag);
-        final FormattedTweetText formattedText = new FormattedTweetText();
-        formattedText.text = fullText;
-        formattedText.hashtagEntities.add(FormattedUrlEntity.createFormattedUrlEntity(
-                hashtagEntity));
-
-        final SpannableStringBuilder linkifiedText = (SpannableStringBuilder)
-                TweetTextLinkifier.linkifyUrls(formattedText, mockClickListener, 0, 0, true,
-                        true);
-        final ClickableSpan[] clickables =
-                linkifiedText.getSpans(hashtagEntity.getStart(), hashtagEntity.getEnd(),
-                        ClickableSpan.class);
-        assertEquals(1, clickables.length);
-    }
-
-    @Test
-    public void testLinkifyMentions_oneMentionEntity() {
-        final String mention = "TwitterDev";
-        final String fullMention = "@" + mention;
-        final String fullText = BASE_TEXT + " " + fullMention;
-        final MentionEntity mentionEntity = EntityFactory.newMentionEntity(fullText, mention);
-
-        final FormattedTweetText formattedText = new FormattedTweetText();
-        formattedText.text = fullText;
-        formattedText.mentionEntities.add(FormattedUrlEntity.createFormattedUrlEntity(
-                mentionEntity));
-
-        final CharSequence linkifiedText
-                = TweetTextLinkifier.linkifyUrls(formattedText, null, 0, 0, true, true);
-        final String displayUrlFromEntity = linkifiedText.subSequence(mentionEntity.getStart(),
-                mentionEntity.getEnd()).toString();
-        assertEquals(fullMention, displayUrlFromEntity);
-    }
-
-    @Test
-    public void testLinkifyMentions_linkClickListener() {
-        final String mention = "TwitterDev";
-        final String fullText = BASE_TEXT + " @" + mention;
-
-        final LinkClickListener mockClickListener = mock(LinkClickListener.class);
-
-        final MentionEntity mentionEntity = EntityFactory.newMentionEntity(fullText, mention);
-        final FormattedTweetText formattedText = new FormattedTweetText();
-        formattedText.text = fullText;
-        formattedText.mentionEntities.add(FormattedUrlEntity.createFormattedUrlEntity(
-                mentionEntity));
-
-        final SpannableStringBuilder linkifiedText = (SpannableStringBuilder)
-                TweetTextLinkifier.linkifyUrls(formattedText, mockClickListener, 0, 0, true,
-                        true);
-        final ClickableSpan[] clickables =
-                linkifiedText.getSpans(mentionEntity.getStart(), mentionEntity.getEnd(),
-                        ClickableSpan.class);
-        assertEquals(1, clickables.length);
-    }
-
-    @Test
-    public void testLinkifySymbols_oneSymbolEntity() {
-        final String symbol = "TWTR";
-        final String fullSymbol = "$" + symbol;
-        final String fullText = BASE_TEXT + " " + fullSymbol;
-        final SymbolEntity symbolEntity = EntityFactory.newSymbolEntity(fullText, symbol);
-
-        final FormattedTweetText formattedText = new FormattedTweetText();
-        formattedText.text = fullText;
-        formattedText.symbolEntities.add(FormattedUrlEntity.createFormattedUrlEntity(
-                symbolEntity));
-
-        final CharSequence linkifiedText
-                = TweetTextLinkifier.linkifyUrls(formattedText, null, 0, 0, true, true);
-        final String displayUrlFromEntity = linkifiedText.subSequence(symbolEntity.getStart(),
-                symbolEntity.getEnd()).toString();
-        assertEquals(fullSymbol, displayUrlFromEntity);
-    }
-
-    @Test
-    public void testLinkifySymbols_linkClickListener() {
-        final String symbol = "TWTR";
-        final String fullText = BASE_TEXT + " $" + symbol;
-
-        final LinkClickListener mockClickListener = mock(LinkClickListener.class);
-
-        final SymbolEntity symbolEntity = EntityFactory.newSymbolEntity(fullText, symbol);
-        final FormattedTweetText formattedText = new FormattedTweetText();
-        formattedText.text = fullText;
-        formattedText.symbolEntities.add(FormattedUrlEntity.createFormattedUrlEntity(
-                symbolEntity));
-
-        final SpannableStringBuilder linkifiedText = (SpannableStringBuilder)
-                TweetTextLinkifier.linkifyUrls(formattedText, mockClickListener, 0, 0, true,
-                        true);
-        final ClickableSpan[] clickables =
-                linkifiedText.getSpans(symbolEntity.getStart(), symbolEntity.getEnd(),
-                        ClickableSpan.class);
-        assertEquals(1, clickables.length);
-    }
-
-    @Test
-    public void testLinkifyUrls_verifyPhotoOnlyStrippedFromEnd() {
-        final FormattedTweetText formattedText = setupPicTwitterEntities();
-        final FormattedMediaEntity lastPhotoUrl = formattedText.mediaEntities.get(0);
-        final CharSequence linkifiedText
-                = TweetTextLinkifier.linkifyUrls(formattedText, null, 0, 0, true, true);
-
-        // make sure we are stripping out a photo entity since it is the only media entity
-        // that we can render inline
-        assertEquals("photo", lastPhotoUrl.type);
-        // assert that we do not strip it here and display it in the middle
-        assertTrue(linkifiedText.toString().contains(lastPhotoUrl.displayUrl));
-    }
-
-    @Test
-    public void testGetEntityToStrip_withLtrMarker() {
-        final String result = TweetTextLinkifier.stripLtrMarker(TEST_RLT_STRING);
-
-        assertNotEquals(TEST_RLT_STRING, result);
-        assertFalse(result.endsWith(Character.toString('\u200E')));
-    }
-
-    @Test
-    public void testGetEntityToStrip_withoutLtrMarker() {
-        final String result = TweetTextLinkifier.stripLtrMarker(BASE_TEXT);
-
-        assertEquals(BASE_TEXT, result);
-        assertFalse(result.endsWith(Character.toString('\u200E')));
-    }
-
-    @Test
-    public void testIsPhotoEntity_withPhotoUrl() {
-        final MediaEntity mediaEntity = new MediaEntity("http://t.co/PFHCdlr4i0", null,
-                "pic.twitter.com/abc", 27, 49, 0L, null, null, null, null, 0L, null, "photo", null,
-                "");
-        final FormattedUrlEntity formattedUrlEntity = new FormattedMediaEntity(mediaEntity);
-
-        assertTrue(TweetTextLinkifier.isPhotoEntity(formattedUrlEntity));
-    }
-
-    @Test
-    public void testIsQuotedStatus_withQuotedStatusUrl() {
-        final UrlEntity urlEntity = new UrlEntity("https://t.co/kMXdOEnVMg",
-                "https://twitter.com/nasajpl/status/634475698174865408",
-                "twitter.com/nasajpl/status\u2026", 50, 72);
-        final FormattedUrlEntity formattedUrlEntity = new FormattedUrlEntity(urlEntity.getStart(),
-                urlEntity.getEnd(), urlEntity.displayUrl, urlEntity.url, urlEntity.expandedUrl);
-        assertTrue(TweetTextLinkifier.isQuotedStatus(formattedUrlEntity));
-    }
-
-    @Test
-    public void testIsVineCard_withVineUrl() {
-        final UrlEntity urlEntity = new UrlEntity("https://t.co/NdpqweoNbi",
-                "https://vine.co/v/eVmZVXbeDK1", "vine.co/v/eVmZVXbeDK1", 1, 23);
-        final FormattedUrlEntity formattedUrlEntity = new FormattedUrlEntity(urlEntity.getStart(),
-                urlEntity.getEnd(), urlEntity.displayUrl, urlEntity.url, urlEntity.expandedUrl);
-
-        assertTrue(TweetTextLinkifier.isVineCard(formattedUrlEntity));
-    }
-
-    private FormattedTweetText setupPicTwitterEntities() {
-        final String text = "first link is a pictwitter http://t.co/PFHCdlr4i0 " +
-                "http://t.co/V3hLRdFdeN final text";
-
-        final MediaEntity mediaEntity = new MediaEntity("http://t.co/PFHCdlr4i0", null,
-                "pic.twitter.com/abc", 27, 49, 0L, null, null, null, null, 0L, null, "photo", null,
-                "");
-
-        final UrlEntity urlEntity = new UrlEntity("http://t.co/V3hLRdFdeN", null, "example.com", 50,
-                72);
-
-        final FormattedTweetText formattedText = new FormattedTweetText();
-        formattedText.text = text;
-        formattedText.urlEntities.add(FormattedUrlEntity.createFormattedUrlEntity(urlEntity));
-        formattedText.mediaEntities.add(new FormattedMediaEntity(mediaEntity));
-
-        return formattedText;
-    }
-
-    @Test
-    public void testTrimEnd_withoutTrailingSpace() {
-        assertSame(BASE_TEXT, TweetTextLinkifier.trimEnd(BASE_TEXT));
-    }
-
-    @Test
-    public void testTrimEnd_withTrailingSpace() {
-        final CharSequence result = TweetTextLinkifier.trimEnd(BASE_TEXT + "\n\r\t ");
-        assertEquals(BASE_TEXT, result);
-        assertNotSame(BASE_TEXT, result);
-    }
-
-    /*
-     * mergeAndSortEntities method
-     */
-    @Test
-    public void testMergeAndSortEntities_emptyEntities() {
-        final List<FormattedUrlEntity> urls = new ArrayList<>();
-        final List<FormattedMediaEntity> media = new ArrayList<>();
-        final List<FormattedUrlEntity> hashtags = new ArrayList<>();
-        final List<FormattedUrlEntity> mentions = new ArrayList<>();
-        final List<FormattedUrlEntity> symbols = new ArrayList<>();
-        assertEquals(urls, TweetTextLinkifier.mergeAndSortEntities(urls, media, hashtags,
-                mentions, symbols));
-    }
-
-    @Test
-    public void testMergeAndSortEntities_sortUrlsAndMediaAndHashtags() {
-        final List<FormattedUrlEntity> urls = new ArrayList<>();
-        final UrlEntity urlEntity = TestFixtures.newUrlEntity(2, 5);
-        final FormattedUrlEntity adjustedUrl = FormattedUrlEntity.createFormattedUrlEntity(
-                urlEntity);
-        urls.add(adjustedUrl);
-
-        final List<FormattedMediaEntity> media = new ArrayList<>();
-        final MediaEntity photo = TestFixtures.newMediaEntity(1, 5, "photo");
-        final FormattedMediaEntity adjustedPhoto = new FormattedMediaEntity(photo);
-        media.add(adjustedPhoto);
-
-        final List<FormattedUrlEntity> hashtags = new ArrayList<>();
-        final HashtagEntity hashtag = TestFixtures.newHashtagEntity("TwitterForGood", 0, 13);
-        final FormattedUrlEntity adjustedHashtag =
-                FormattedUrlEntity.createFormattedUrlEntity(hashtag);
-        hashtags.add(adjustedHashtag);
-
-        final List<FormattedUrlEntity> mentions = new ArrayList<>();
-        final MentionEntity mention = TestFixtures.newMentionEntity("twitterdev", 0, 9);
-        final FormattedUrlEntity adjustedMention =
-                FormattedUrlEntity.createFormattedUrlEntity(mention);
-        mentions.add(adjustedMention);
-
-        final List<FormattedUrlEntity> symbols = new ArrayList<>();
-        final SymbolEntity symbol = TestFixtures.newSymbolEntity("TWTR", 0, 3);
-        final FormattedUrlEntity adjustedSymbol =
-                FormattedUrlEntity.createFormattedUrlEntity(symbol);
-        symbols.add(adjustedSymbol);
-
-        final List<? extends FormattedUrlEntity> combined
-                = TweetTextLinkifier.mergeAndSortEntities(urls, media, hashtags, mentions, symbols);
-        assertEquals(adjustedPhoto, combined.get(3));
-        assertEquals(adjustedUrl, combined.get(4));
-        assertEquals(adjustedHashtag, combined.get(0));
-        assertEquals(adjustedMention, combined.get(1));
-        assertEquals(adjustedSymbol, combined.get(2));
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetTextUtilsTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetTextUtilsTest.java
deleted file mode 100644
index ac8a1e4d..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetTextUtilsTest.java
+++ /dev/null
@@ -1,144 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetBuilder;
-import com.twitter.sdk.android.core.models.UrlEntity;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import static org.junit.Assert.assertEquals;
-
-@RunWith(RobolectricTestRunner.class)
-public class TweetTextUtilsTest {
-    private static final String UNESCAPED_TWEET_TEXT = ">Hello there <\"What is a?\" &;";
-    private static final String ESCAPED_TWEET_TEXT
-            = "&gt;Hello there &lt;&quot;What is a?&quot; &;";
-    private static final String ESCAPED_TWEET_TEXT_WITH_EMOJI =
-            "\ud83d\udc69\ud83c\udffd\u200d\ud83d\udcbb, community \ud83d\udc93 &amp; https://t.co/oCkwy2C80m";
-
-    // test ported from:
-    // twitter-android/app/src/androidTest/java/com/twitter/library/util/EntitiesTests.java
-    // tests fixing up entity indices after unescaping html characters in tweet text
-    @Test
-    public void testFormat_singleEscaping() {
-        final FormattedTweetText formattedTweetText = setupAdjustedTweet();
-        final Tweet tweet = setupTweetToBeFormatted();
-        TweetTextUtils.format(formattedTweetText, tweet);
-
-        assertEquals(UNESCAPED_TWEET_TEXT, formattedTweetText.text);
-        assertEquals("Hello", 1, formattedTweetText.urlEntities.get(0).start);
-        assertEquals("Hello", 5, formattedTweetText.urlEntities.get(0).end);
-        assertEquals("There", 7, formattedTweetText.urlEntities.get(1).start);
-        assertEquals("There", 11, formattedTweetText.urlEntities.get(1).end);
-
-        assertEquals("What", 15, formattedTweetText.urlEntities.get(2).start);
-        assertEquals("What", 18, formattedTweetText.urlEntities.get(2).end);
-
-        assertEquals("is", 20, formattedTweetText.urlEntities.get(3).start);
-        assertEquals("is", 21, formattedTweetText.urlEntities.get(3).end);
-
-        assertEquals("a", 23, formattedTweetText.urlEntities.get(4).start);
-        assertEquals("a", 23, formattedTweetText.urlEntities.get(4).end);
-    }
-
-    @Test
-    public void testFormat_htmlEntityEdgeCases() {
-        final FormattedTweetText formattedTweetText = new FormattedTweetText();
-
-        Tweet tweet = new TweetBuilder().setText("&amp;").build();
-        TweetTextUtils.format(formattedTweetText, tweet);
-        assertEquals("&", formattedTweetText.text);
-
-        tweet = new TweetBuilder().setText("&#;").build();
-        TweetTextUtils.format(formattedTweetText, tweet);
-        assertEquals("&#;", formattedTweetText.text);
-
-        tweet = new TweetBuilder().setText("&#34;").build();
-        TweetTextUtils.format(formattedTweetText, tweet);
-        assertEquals("\"", formattedTweetText.text);
-
-        tweet = new TweetBuilder().setText("&#x22;").build();
-        TweetTextUtils.format(formattedTweetText, tweet);
-        assertEquals("\"", formattedTweetText.text);
-
-        tweet = new TweetBuilder().setText("&lt; & Larry &gt; &").build();
-        TweetTextUtils.format(formattedTweetText, tweet);
-        assertEquals("< & Larry > &", formattedTweetText.text);
-
-        tweet = new TweetBuilder().setText("&&amp;").build();
-        TweetTextUtils.format(formattedTweetText, tweet);
-        assertEquals("&&", formattedTweetText.text);
-
-        tweet = new TweetBuilder().setText("&&&&&&&&amp;").build();
-        TweetTextUtils.format(formattedTweetText, tweet);
-        assertEquals("&&&&&&&&", formattedTweetText.text);
-
-        tweet = new TweetBuilder().setText("&&&&gt&&lt&&amplt;").build();
-        TweetTextUtils.format(formattedTweetText, tweet);
-        assertEquals("&&&&gt&&lt&&amplt;", formattedTweetText.text);
-    }
-
-    @Test
-    public void testFormat_withEmojiAndEscapedHtml() {
-        final FormattedTweetText formattedTweetText = new FormattedTweetText();
-        final UrlEntity url = TestFixtures.newUrlEntity(24, 47);
-        formattedTweetText.urlEntities.add(FormattedUrlEntity.createFormattedUrlEntity(url));
-
-        final Tweet tweet = new TweetBuilder()
-                .setText(ESCAPED_TWEET_TEXT_WITH_EMOJI)
-                .build();
-        TweetTextUtils.format(formattedTweetText, tweet);
-
-        assertEquals(24, formattedTweetText.urlEntities.get(0).start);
-        assertEquals(47, formattedTweetText.urlEntities.get(0).end);
-    }
-
-    private Tweet setupTweetToBeFormatted() {
-        return new TweetBuilder().setText(ESCAPED_TWEET_TEXT).build();
-    }
-
-    private FormattedTweetText setupAdjustedTweet() {
-        final FormattedTweetText formattedTweetText = new FormattedTweetText();
-
-        UrlEntity url = TestFixtures.newUrlEntity(4, 8);
-        // Hello
-        formattedTweetText.urlEntities.add(FormattedUrlEntity.createFormattedUrlEntity(url));
-
-        // There
-        url = TestFixtures.newUrlEntity(10, 14);
-        formattedTweetText.urlEntities.add(FormattedUrlEntity.createFormattedUrlEntity(url));
-
-        // What
-        url = TestFixtures.newUrlEntity(26, 29);
-        formattedTweetText.urlEntities.add(FormattedUrlEntity.createFormattedUrlEntity(url));
-
-        // is
-        url = TestFixtures.newUrlEntity(31, 32);
-        formattedTweetText.urlEntities.add(FormattedUrlEntity.createFormattedUrlEntity(url));
-
-        // a
-        url = TestFixtures.newUrlEntity(34, 34);
-        formattedTweetText.urlEntities.add(FormattedUrlEntity.createFormattedUrlEntity(url));
-
-        return formattedTweetText;
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TwitterListTimelineTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TwitterListTimelineTest.java
deleted file mode 100644
index b49e9744..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TwitterListTimelineTest.java
+++ /dev/null
@@ -1,221 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.services.ListService;
-
-import org.junit.Before;
-import org.junit.Test;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.assertTrue;
-import static org.junit.Assert.fail;
-import static org.mockito.Matchers.eq;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-public class TwitterListTimelineTest {
-    private static final Integer REQUIRED_DEFAULT_ITEMS_PER_REQUEST = 30;
-    private static final Long TEST_LIST_ID = 128271137L;
-    private static final String TEST_SLUG = "cool-accounts";
-    private static final Long TEST_OWNER_ID =  623265148L;
-    private static final String TEST_OWNER_SCREEN_NAME = "dghubble";
-    private static final Integer TEST_ITEMS_PER_REQUEST = 100;
-    private static final Long TEST_SINCE_ID = 1000L;
-    private static final Long TEST_MAX_ID = 1111L;
-
-    TwitterCore twitterCore;
-    TwitterApiClient apiClient;
-    ListService listService;
-
-    @Before
-    public void setUp() {
-        twitterCore = mock(TwitterCore.class);
-        apiClient = mock(TwitterApiClient.class);
-        listService = mock(ListService.class, new MockCallAnswer());
-
-        when(apiClient.getListService()).thenReturn(listService);
-        when(twitterCore.getApiClient()).thenReturn(apiClient);
-    }
-
-    @Test
-    public void testConstructor() {
-        final TwitterListTimeline timeline = new TwitterListTimeline(twitterCore, TEST_LIST_ID,
-                TEST_SLUG, TEST_OWNER_ID, TEST_OWNER_SCREEN_NAME, TEST_ITEMS_PER_REQUEST, true);
-        assertEquals(TEST_LIST_ID, timeline.listId);
-        assertEquals(TEST_SLUG, timeline.slug);
-        assertEquals(TEST_OWNER_ID, timeline.ownerId);
-        assertEquals(TEST_OWNER_SCREEN_NAME, timeline.ownerScreenName);
-        assertEquals(TEST_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-        assertTrue(timeline.includeRetweets);
-    }
-
-    @Test
-    // most api arguments should default to Null to allow the backend to determine default behavior
-    public void testConstructor_defaults() {
-        final TwitterListTimeline timeline = new TwitterListTimeline(twitterCore, TEST_LIST_ID,
-                null, null, null, null, null);
-        assertEquals(TEST_LIST_ID, timeline.listId);
-        assertNull(timeline.slug);
-        assertNull(timeline.ownerId);
-        assertNull(timeline.ownerScreenName);
-        assertNull(timeline.maxItemsPerRequest);
-        assertNull(timeline.includeRetweets);
-    }
-
-    @Test
-    public void testCreateListTimelineRequest() {
-        // build a timeline with test params
-        final TwitterListTimeline timeline = new TwitterListTimeline(twitterCore, TEST_LIST_ID,
-                TEST_SLUG, TEST_OWNER_ID, TEST_OWNER_SCREEN_NAME, TEST_ITEMS_PER_REQUEST, true);
-
-        timeline.createListTimelineRequest(TEST_SINCE_ID, TEST_MAX_ID);
-
-        // assert twitterListTimeline call is made with the correct arguments
-        verify(twitterCore.getApiClient().getListService()).statuses(eq(TEST_LIST_ID),
-                eq(TEST_SLUG), eq(TEST_OWNER_SCREEN_NAME), eq(TEST_OWNER_ID), eq(TEST_SINCE_ID),
-                eq(TEST_MAX_ID), eq(TEST_ITEMS_PER_REQUEST), eq(true), eq(true));
-    }
-
-    /* Builder */
-    @Test
-    public void testBuilder_viaLlistId() {
-        final TwitterListTimeline timeline = new TwitterListTimeline.Builder(twitterCore)
-                .id(TEST_LIST_ID)
-                .maxItemsPerRequest(TEST_ITEMS_PER_REQUEST)
-                .includeRetweets(true)
-                .build();
-        assertEquals(TEST_LIST_ID, timeline.listId);
-        assertEquals(TEST_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-        assertTrue(timeline.includeRetweets);
-    }
-
-    @Test
-    public void testBuilder_viaSlugOwnerId() {
-        final TwitterListTimeline timeline = new TwitterListTimeline.Builder(twitterCore)
-                .slugWithOwnerId(TEST_SLUG, TEST_OWNER_ID)
-                .maxItemsPerRequest(TEST_ITEMS_PER_REQUEST)
-                .includeRetweets(true)
-                .build();
-        assertEquals(TEST_SLUG, timeline.slug);
-        assertEquals(TEST_OWNER_ID, timeline.ownerId);
-        assertEquals(TEST_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-        assertTrue(timeline.includeRetweets);
-    }
-
-    @Test
-    public void testBuilder_viaSlugOwnerScreenName() {
-        final TwitterListTimeline timeline = new TwitterListTimeline.Builder(twitterCore)
-                .slugWithOwnerScreenName(TEST_SLUG, TEST_OWNER_SCREEN_NAME)
-                .maxItemsPerRequest(TEST_ITEMS_PER_REQUEST)
-                .includeRetweets(true)
-                .build();
-        assertEquals(TEST_SLUG, timeline.slug);
-        assertEquals(TEST_OWNER_SCREEN_NAME, timeline.ownerScreenName);
-        assertEquals(TEST_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-        assertTrue(timeline.includeRetweets);
-    }
-
-    @Test
-    // api arguments should default to Null to allow the backend to determine default behavior
-    public void testBuilder_defaults() {
-        final TwitterListTimeline timeline = new TwitterListTimeline.Builder(twitterCore)
-                .id(TEST_LIST_ID)
-                .build();
-        assertEquals(REQUIRED_DEFAULT_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-        assertNull(timeline.includeRetweets);
-    }
-
-    @Test
-    public void testBuilder_listId() {
-        final TwitterListTimeline timeline = new TwitterListTimeline.Builder(twitterCore)
-                .id(TEST_LIST_ID)
-                .build();
-        assertEquals(TEST_LIST_ID, timeline.listId);
-    }
-
-    @Test
-    public void testBuilder_slugWithOwnerId() {
-        final TwitterListTimeline timeline = new TwitterListTimeline.Builder(twitterCore)
-                .slugWithOwnerId(TEST_SLUG, TEST_OWNER_ID)
-                .build();
-        assertEquals(TEST_SLUG, timeline.slug);
-        assertEquals(TEST_OWNER_ID, timeline.ownerId);
-    }
-
-    @Test
-    public void testBuilder_slugWithOwnerScreenName() {
-        final TwitterListTimeline timeline = new TwitterListTimeline.Builder(twitterCore)
-                .slugWithOwnerScreenName(TEST_SLUG, TEST_OWNER_SCREEN_NAME)
-                .build();
-        assertEquals(TEST_SLUG, timeline.slug);
-        assertEquals(TEST_OWNER_SCREEN_NAME, timeline.ownerScreenName);
-    }
-
-    @Test
-    public void testBuilder_maxItemsPerRequest() {
-        final TwitterListTimeline timeline = new TwitterListTimeline.Builder(twitterCore)
-                .id(TEST_LIST_ID)
-                .maxItemsPerRequest(TEST_ITEMS_PER_REQUEST)
-                .build();
-        assertEquals(TEST_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-    }
-
-    @Test
-    public void testBuilder_includeRetweets() {
-        TwitterListTimeline timeline = new TwitterListTimeline.Builder(twitterCore).id(TEST_LIST_ID)
-                .build();
-        assertNull(timeline.includeRetweets);
-        timeline = new TwitterListTimeline.Builder(twitterCore)
-                .id(TEST_LIST_ID).includeRetweets(true)
-                .build();
-        assertTrue(timeline.includeRetweets);
-        timeline = new TwitterListTimeline.Builder(twitterCore)
-                .id(TEST_LIST_ID)
-                .includeRetweets(false)
-                .build();
-        assertFalse(timeline.includeRetweets);
-    }
-
-    @Test
-    public void testBuilder_noIdOrSlugOwnerPair() {
-        try {
-            new TwitterListTimeline.Builder(twitterCore).build();
-            fail("Expected IllegalArgumentException to be thrown");
-        } catch (IllegalStateException e) {
-            assertEquals("must specify either a list id or slug/owner pair", e.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_bothIdAndSlugOwnerPair() {
-        try {
-            new TwitterListTimeline.Builder(twitterCore)
-                    .id(TEST_LIST_ID)
-                    .slugWithOwnerId(TEST_SLUG, TEST_OWNER_ID)
-                    .build();
-        } catch (IllegalStateException e) {
-            assertEquals("must specify either a list id or slug/owner pair", e.getMessage());
-        }
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/UserTimelineTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/UserTimelineTest.java
deleted file mode 100644
index d559ef72..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/UserTimelineTest.java
+++ /dev/null
@@ -1,194 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.services.StatusesService;
-
-import org.junit.Before;
-import org.junit.Test;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.assertTrue;
-import static org.mockito.Mockito.eq;
-import static org.mockito.Mockito.isNull;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.spy;
-import static org.mockito.Mockito.times;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-public class UserTimelineTest {
-    private static final Integer REQUIRED_DEFAULT_ITEMS_PER_REQUEST = 30;
-    private static final Integer TEST_ITEMS_PER_REQUEST = 100;
-    private static final Long TEST_SINCE_ID = 1000L;
-    private static final Long TEST_MAX_ID = 1111L;
-    private static final String REQUIRED_IMPRESSION_SECTION = "user";
-
-    TwitterCore twitterCore;
-    TwitterApiClient apiClient;
-    StatusesService statusesService;
-
-    @Before
-    public void setUp() {
-        twitterCore = mock(TwitterCore.class);
-        apiClient = mock(TwitterApiClient.class);
-        statusesService = mock(StatusesService.class, new MockCallAnswer());
-
-        when(apiClient.getStatusesService()).thenReturn(statusesService);
-        when(twitterCore.getApiClient()).thenReturn(apiClient);
-    }
-
-    @Test
-    public void testConstructor() {
-        final UserTimeline timeline = new UserTimeline(twitterCore, TestFixtures.TEST_USER.id,
-                TestFixtures.TEST_USER.screenName, TEST_ITEMS_PER_REQUEST, true, true);
-        assertEquals((Long) TestFixtures.TEST_USER.id, timeline.userId);
-        assertEquals(TestFixtures.TEST_USER.screenName, timeline.screenName);
-        assertEquals(TEST_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-        assertTrue(timeline.includeReplies);
-        assertTrue(timeline.includeRetweets);
-    }
-
-    @Test
-    // most api arguments should default to Null to allow the backend to determine default behavior
-    public void testConstructor_defaults() {
-        final UserTimeline timeline = new UserTimeline(twitterCore, null, null, null, null, null);
-        assertNull(timeline.userId);
-        assertNull(timeline.screenName);
-        assertNull(timeline.maxItemsPerRequest);
-        assertNull(timeline.includeRetweets);
-        // parameters which default to false
-        assertFalse(timeline.includeReplies);
-    }
-
-    @Test
-    public void testNext_createsCorrectRequest() {
-        final UserTimeline timeline = spy(new UserTimeline(twitterCore, TestFixtures.TEST_USER.id,
-                TestFixtures.TEST_USER.screenName, TEST_ITEMS_PER_REQUEST, null, null));
-        timeline.next(TEST_SINCE_ID, mock(Callback.class));
-        verify(timeline, times(1)).createUserTimelineRequest(eq(TEST_SINCE_ID),
-                isNull(Long.class));
-    }
-
-    @Test
-    public void testPrevious_createsCorrectRequest() {
-        final UserTimeline timeline = spy(new UserTimeline(twitterCore, TestFixtures.TEST_USER.id,
-                TestFixtures.TEST_USER.screenName, TEST_ITEMS_PER_REQUEST, null, null));
-        timeline.previous(TEST_MAX_ID, mock(Callback.class));
-        // intentionally decrementing the maxId which is passed through to the request
-        verify(timeline, times(1)).createUserTimelineRequest(isNull(Long.class),
-                eq(TEST_MAX_ID - 1));
-    }
-
-    @Test
-    public void testCreateUserTimelineRequest() {
-        // build a timeline with test params
-        final UserTimeline timeline = new UserTimeline(twitterCore, TestFixtures.TEST_USER.id,
-                TestFixtures.TEST_USER.screenName, TEST_ITEMS_PER_REQUEST, null, null);
-
-        // create a request directly
-        timeline.createUserTimelineRequest(TEST_SINCE_ID, TEST_MAX_ID);
-
-        // assert userTimeline call is made with the correct arguments
-        verify(twitterCore.getApiClient().getStatusesService())
-                .userTimeline(eq(TestFixtures.TEST_USER.id),
-                        eq(TestFixtures.TEST_USER.screenName), eq(TEST_ITEMS_PER_REQUEST),
-                        eq(TEST_SINCE_ID), eq(TEST_MAX_ID), eq(false), eq(true),
-                        isNull(Boolean.class), isNull(Boolean.class));
-    }
-
-    /* Builder */
-    @Test
-    public void testBuilder() {
-        final UserTimeline timeline = new UserTimeline.Builder(twitterCore)
-                .userId(TestFixtures.TEST_USER.id)
-                .screenName(TestFixtures.TEST_USER.screenName)
-                .maxItemsPerRequest(TEST_ITEMS_PER_REQUEST)
-                .includeReplies(true)
-                .includeRetweets(true)
-                .build();
-        assertEquals((Long) TestFixtures.TEST_USER.id, timeline.userId);
-        assertEquals(TestFixtures.TEST_USER.screenName, timeline.screenName);
-        assertEquals(TEST_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-        assertTrue(timeline.includeReplies);
-        assertTrue(timeline.includeRetweets);
-    }
-
-    @Test
-    // api arguments should default to Null to allow the backend to determine default behavior
-    public void testBuilder_defaults() {
-        final UserTimeline timeline = new UserTimeline.Builder(twitterCore).build();
-        assertNull(timeline.userId);
-        assertNull(timeline.screenName);
-        assertEquals(REQUIRED_DEFAULT_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-        assertNull(timeline.includeRetweets);
-        // parameters which default to false
-        assertFalse(timeline.includeReplies);
-    }
-
-    @Test
-    public void testBuilder_userId() {
-        final Long USER_ID = TestFixtures.TEST_USER.id;
-        final UserTimeline timeline = new UserTimeline.Builder(twitterCore)
-                .userId(USER_ID)
-                .build();
-        assertEquals(USER_ID, timeline.userId);
-    }
-
-    @Test
-    public void testBuilder_screenName() {
-        final UserTimeline timeline = new UserTimeline.Builder(twitterCore)
-                .screenName(TestFixtures.TEST_USER.screenName)
-                .build();
-        assertEquals(TestFixtures.TEST_USER.screenName, timeline.screenName);
-    }
-
-    @Test
-    public void testBuilder_maxItemsPerRequest() {
-        final UserTimeline timeline = new UserTimeline.Builder(twitterCore)
-                .maxItemsPerRequest(TEST_ITEMS_PER_REQUEST)
-                .build();
-        assertEquals(TEST_ITEMS_PER_REQUEST, timeline.maxItemsPerRequest);
-    }
-
-    @Test
-    public void testBuilder_includeReplies() {
-        // null includeReplies defaults to false
-        UserTimeline timeline = new UserTimeline.Builder(twitterCore).build();
-        assertFalse(timeline.includeReplies);
-        timeline = new UserTimeline.Builder(twitterCore).includeReplies(true).build();
-        assertTrue(timeline.includeReplies);
-        timeline = new UserTimeline.Builder(twitterCore).includeReplies(false).build();
-        assertFalse(timeline.includeReplies);
-    }
-
-    @Test
-    public void testBuilder_includeRetweets() {
-        UserTimeline timeline = new UserTimeline.Builder(twitterCore).build();
-        assertNull(timeline.includeRetweets);
-        timeline = new UserTimeline.Builder(twitterCore).includeRetweets(true).build();
-        assertTrue(timeline.includeRetweets);
-        timeline = new UserTimeline.Builder(twitterCore).includeRetweets(false).build();
-        assertFalse(timeline.includeRetweets);
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/UtilsTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/UtilsTest.java
deleted file mode 100644
index d61482c3..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/UtilsTest.java
+++ /dev/null
@@ -1,129 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.models.Tweet;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import static org.junit.Assert.assertEquals;
-
-@RunWith(RobolectricTestRunner.class)
-public class UtilsTest {
-
-    @Test
-    public void testNumberOrDefault_validNumber() {
-        assertEquals(Long.valueOf(123), Utils.numberOrDefault("123", -1L));
-    }
-
-    @Test
-    public void testNumberOrDefault_invalidNumber() {
-        assertEquals(Long.valueOf(-1L), Utils.numberOrDefault("abc", -1L));
-    }
-
-    @Test
-    public void testStringOrEmpty_validString() {
-        assertEquals("string", Utils.stringOrEmpty("string"));
-    }
-
-    @Test
-    public void testStringOrEmpty_nullString() {
-        assertEquals("", Utils.stringOrEmpty(null));
-    }
-
-    @Test
-    public void testStringOrDefault_validString() {
-        assertEquals("string", Utils.stringOrDefault("string", "default"));
-    }
-
-    @Test
-    public void testStringOrDefault_nullString() {
-        assertEquals("default", Utils.stringOrDefault(null, "default"));
-    }
-
-    @Test
-    public void testCharSeqOrEmpty_validCharSeq() {
-        assertEquals("string", Utils.charSeqOrEmpty("string"));
-    }
-
-    @Test
-    public void testCharSeqOrEmpty_nullCharSeq() {
-        assertEquals("", Utils.charSeqOrEmpty(null));
-    }
-
-    @Test
-    public void testCharSeqOrDefault_validCharSeq() {
-        assertEquals("string", Utils.charSeqOrDefault("string", "default"));
-    }
-
-    @Test
-    public void testCharSeqOrDefault_nullCharSeq() {
-        assertEquals("default", Utils.charSeqOrDefault(null, "default"));
-    }
-
-    @Test
-    public void testSortTweets() {
-        final List<Long> requestedIds = TestFixtures.TWEET_IDS;
-        final List<Tweet> tweets = new ArrayList<>(TestFixtures.UNORDERED_TWEETS);
-        final List<Tweet> ordered = Utils.orderTweets(requestedIds, tweets);
-        assertEquals(TestFixtures.ORDERED_TWEETS, ordered);
-    }
-
-    // Tweet results will match the requested Tweet ids, duplicate requested ids duplicate Tweets.
-    @Test
-    public void testSortTweets_duplicateRequestedIds() {
-        final List<Long> requestedIds = TestFixtures.DUPLICATE_TWEET_IDS;
-        final List<Tweet> tweets = new ArrayList<>(TestFixtures.UNORDERED_TWEETS);
-        final List<Tweet> ordered = Utils.orderTweets(requestedIds, tweets);
-        assertEquals(TestFixtures.ORDERED_DUPLICATE_TWEETS, ordered);
-    }
-
-    // Tweet results will match the requested Tweet ids, duplicate results ignored.
-    @Test
-    public void testSortTweets_duplicateTweets() {
-        final List<Long> requestedIds = TestFixtures.TWEET_IDS;
-        final List<Tweet> tweets = new ArrayList<>(TestFixtures.UNORDERED_DUPLICATE_TWEETS);
-        final List<Tweet> ordered = Utils.orderTweets(requestedIds, tweets);
-        assertEquals(TestFixtures.ORDERED_TWEETS, ordered);
-    }
-
-    @Test
-    public void testSortTweets_missingTweets() {
-        final List<Long> requestedIds = TestFixtures.TWEET_IDS;
-        final List<Tweet> tweets = new ArrayList<>(TestFixtures.UNORDERED_MISSING_TWEETS);
-        final List<Tweet> ordered = Utils.orderTweets(requestedIds, tweets);
-        assertEquals(TestFixtures.ORDERED_MISSING_TWEETS, ordered);
-    }
-
-    // Tweet result with an extra, unrequested Tweet, not included in the result.
-    @Test
-    public void testSortTweets_extraTweetsFirst() {
-        final List<Long> requestedIds = TestFixtures.TWEET_IDS;
-        final List<Tweet> tweets = new ArrayList<>(TestFixtures.UNORDERED_TWEETS);
-        tweets.add(TestFixtures.TEST_TWEET);
-
-        final List<Tweet> ordered = Utils.orderTweets(requestedIds, tweets);
-        assertEquals(TestFixtures.ORDERED_TWEETS, ordered);
-    }
-}
-
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/ClickableLinkSpanTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/ClickableLinkSpanTest.java
deleted file mode 100644
index 9f1358aa..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/ClickableLinkSpanTest.java
+++ /dev/null
@@ -1,112 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.graphics.Color;
-import android.text.TextPaint;
-import android.view.View;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.Mock;
-import org.robolectric.RobolectricTestRunner;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
-import static org.mockito.Mockito.verify;
-import static org.mockito.MockitoAnnotations.initMocks;
-
-@RunWith(RobolectricTestRunner.class)
-public class ClickableLinkSpanTest {
-
-    private static final int SELECTED_COLOR = 1;
-    private static final int LINK_COLOR = 2;
-
-    @Mock
-    private TextPaint textPaint;
-
-    private ClickableLinkSpan clickableLinkSpan;
-
-    @Before
-    public void before() {
-        initMocks(this);
-    }
-
-    @Test
-    public void testUpdateDrawState_shouldSetTextPaintDefaultColor() {
-        clickableLinkSpan = new TestClickableLinkSpan(SELECTED_COLOR);
-        clickableLinkSpan.updateDrawState(textPaint);
-        verify(textPaint).setColor(textPaint.linkColor);
-        assertEquals(Color.TRANSPARENT, textPaint.bgColor);
-    }
-
-    @Test
-    public void testUpdateDrawState_shouldSetTextPaintProvidedColor() {
-        clickableLinkSpan = new TestClickableLinkSpan(SELECTED_COLOR, LINK_COLOR, false);
-        clickableLinkSpan.updateDrawState(textPaint);
-        verify(textPaint).setColor(LINK_COLOR);
-        assertEquals(Color.TRANSPARENT, textPaint.bgColor);
-    }
-
-    @Test
-    public void testUpdateDrawState_shouldSetTextPaintUnderlined() {
-        clickableLinkSpan = new TestClickableLinkSpan(SELECTED_COLOR, LINK_COLOR, true);
-        clickableLinkSpan.updateDrawState(textPaint);
-        verify(textPaint).setUnderlineText(true);
-        assertEquals(Color.TRANSPARENT, textPaint.bgColor);
-    }
-
-    @Test
-    public void testUpdateDrawState_shouldSetTextPaintBackground() {
-        clickableLinkSpan = new TestClickableLinkSpan(SELECTED_COLOR, LINK_COLOR, true);
-        clickableLinkSpan.select(true);
-        clickableLinkSpan.updateDrawState(textPaint);
-        verify(textPaint).setUnderlineText(true);
-        assertEquals(SELECTED_COLOR, textPaint.bgColor);
-    }
-
-    @Test
-    public void testSelect_shouldSetIsSelectedTrue() {
-        clickableLinkSpan = new TestClickableLinkSpan(SELECTED_COLOR, LINK_COLOR, true);
-        clickableLinkSpan.select(true);
-        assertTrue(clickableLinkSpan.isSelected());
-    }
-
-    @Test
-    public void testSelect_shouldSetIsSelectedFalse() {
-        clickableLinkSpan = new TestClickableLinkSpan(SELECTED_COLOR, LINK_COLOR, true);
-        clickableLinkSpan.select(false);
-        assertFalse(clickableLinkSpan.isSelected());
-    }
-
-    private static class TestClickableLinkSpan extends ClickableLinkSpan {
-        TestClickableLinkSpan(int selectedColor) {
-            super(selectedColor, 0, false, false);
-        }
-
-        TestClickableLinkSpan(int selectedColor, int linkColor, boolean underlined) {
-            super(selectedColor, linkColor, true, underlined);
-        }
-
-        @Override
-        public void onClick(View widget) {
-        }
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/GalleryImageViewTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/GalleryImageViewTest.java
deleted file mode 100644
index 9da26fcb..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/GalleryImageViewTest.java
+++ /dev/null
@@ -1,112 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.graphics.Bitmap;
-import android.graphics.drawable.Drawable;
-import android.view.Gravity;
-import android.view.View;
-import android.widget.FrameLayout;
-import android.widget.ProgressBar;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.Mock;
-import org.mockito.MockitoAnnotations;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNotNull;
-import static org.mockito.Matchers.any;
-import static org.mockito.Mockito.reset;
-import static org.mockito.Mockito.spy;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.verifyZeroInteractions;
-
-@RunWith(RobolectricTestRunner.class)
-public class GalleryImageViewTest {
-    @Mock
-    SwipeToDismissTouchListener.Callback callback;
-    @Mock
-    Drawable drawable;
-    MultiTouchImageView imageView;
-    ProgressBar progressBar;
-    Bitmap bitmap;
-    GalleryImageView subject;
-
-    @Before
-    public void setUp() {
-        MockitoAnnotations.initMocks(this);
-
-        imageView = spy(new MultiTouchImageView(RuntimeEnvironment.application));
-        progressBar = spy(new ProgressBar(RuntimeEnvironment.application));
-        bitmap = Bitmap.createBitmap(10, 10, null);
-        subject = new GalleryImageView(RuntimeEnvironment.application, imageView, progressBar);
-    }
-
-    @Test
-    public void testConstructor() {
-        assertNotNull(subject.imageView);
-        assertNotNull(subject.progressBar);
-
-        FrameLayout.LayoutParams params;
-        params = (FrameLayout.LayoutParams) subject.imageView.getLayoutParams();
-        assertEquals(FrameLayout.LayoutParams.MATCH_PARENT, params.height);
-        assertEquals(FrameLayout.LayoutParams.MATCH_PARENT, params.width);
-        assertEquals(Gravity.CENTER, params.gravity);
-
-        params = (FrameLayout.LayoutParams) subject.progressBar.getLayoutParams();
-        assertEquals(FrameLayout.LayoutParams.WRAP_CONTENT, params.height);
-        assertEquals(FrameLayout.LayoutParams.WRAP_CONTENT, params.width);
-        assertEquals(Gravity.CENTER, params.gravity);
-    }
-
-    @Test
-    public void testSetSwipeToDismissCallback() {
-        subject.setSwipeToDismissCallback(callback);
-
-        verify(subject.imageView).setOnTouchListener(any(View.OnTouchListener.class));
-    }
-
-    @Test
-    public void testOnBitmapLoaded() {
-        subject.onBitmapLoaded(bitmap, null);
-
-        verify(subject.imageView).setImageBitmap(bitmap);
-        verify(subject.progressBar).setVisibility(View.GONE);
-    }
-
-    @Test
-    public void testOnBitmapFailed() {
-        reset(subject.imageView, subject.progressBar);
-
-        subject.onBitmapFailed(drawable);
-
-        verifyZeroInteractions(subject.imageView, subject.progressBar);
-    }
-
-    @Test
-    public void testOnPrepareLoad() {
-        subject.onPrepareLoad(drawable);
-
-        verify(subject.imageView).setImageResource(android.R.color.transparent);
-        verify(subject.progressBar).setVisibility(View.VISIBLE);
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/MediaBadgeViewTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/MediaBadgeViewTest.java
deleted file mode 100644
index 1fb5cad9..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/MediaBadgeViewTest.java
+++ /dev/null
@@ -1,106 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.view.View;
-
-import com.twitter.sdk.android.core.models.Card;
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.core.models.VideoInfo;
-import com.twitter.sdk.android.tweetui.TestFixtures;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-import static org.junit.Assert.assertEquals;
-
-@RunWith(RobolectricTestRunner.class)
-public class MediaBadgeViewTest {
-    MediaBadgeView view;
-
-    @Before
-    public void setUp() throws Exception {
-        view = new MediaBadgeView(RuntimeEnvironment.application);
-    }
-
-    @Test
-    public void testInitialViewState() {
-        assertEquals(View.GONE, view.badge.getVisibility());
-        assertEquals(View.GONE, view.videoDuration.getVisibility());
-    }
-
-    @Test
-    public void testSetMediaEntity_withAnimatedGif() {
-        final MediaEntity entity = TestFixtures.createEntityWithAnimatedGif(null);
-        view.setMediaEntity(entity);
-
-        assertEquals(View.VISIBLE, view.badge.getVisibility());
-        assertEquals(View.GONE, view.videoDuration.getVisibility());
-    }
-
-    @Test
-    public void testSetMediaEntity_withVideo() {
-        final VideoInfo videoInfo = new VideoInfo(null, 1000, null);
-        final MediaEntity entity = TestFixtures.createEntityWithVideo(videoInfo);
-        view.setMediaEntity(entity);
-
-        assertEquals(View.GONE, view.badge.getVisibility());
-        assertEquals(View.VISIBLE, view.videoDuration.getVisibility());
-        assertEquals("0:01", view.videoDuration.getText());
-    }
-
-    @Test
-    public void testSetMediaEntity_withNullVideoInfo() {
-        final MediaEntity entity = TestFixtures.createEntityWithVideo(null);
-        view.setMediaEntity(entity);
-
-        assertEquals(View.GONE, view.badge.getVisibility());
-        assertEquals(View.VISIBLE, view.videoDuration.getVisibility());
-        assertEquals("0:00", view.videoDuration.getText());
-    }
-
-    @Test
-    public void testSetMediaEntity_withImage() {
-        final MediaEntity entity = TestFixtures.createMediaEntityWithPhoto(null);
-        view.setMediaEntity(entity);
-
-        assertEquals(View.GONE, view.badge.getVisibility());
-        assertEquals(View.GONE, view.videoDuration.getVisibility());
-    }
-
-    @Test
-    public void testSetEntity_withVineCard() {
-        final Card vineCard = TestFixtures.sampleValidVineCard();
-        view.setCard(vineCard);
-
-        assertEquals(View.VISIBLE, view.badge.getVisibility());
-        assertEquals(View.GONE, view.videoDuration.getVisibility());
-    }
-
-    @Test
-    public void testSetEntity_withInvalidVineCard() {
-        final Card vineCard = TestFixtures.sampleInvalidVineCard();
-        view.setCard(vineCard);
-
-        assertEquals(View.GONE, view.badge.getVisibility());
-        assertEquals(View.GONE, view.videoDuration.getVisibility());
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/MediaTimeUtilsTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/MediaTimeUtilsTest.java
deleted file mode 100644
index 50b0bd00..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/MediaTimeUtilsTest.java
+++ /dev/null
@@ -1,36 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import org.junit.Test;
-
-import static org.junit.Assert.assertEquals;
-
-public class MediaTimeUtilsTest {
-    static final int SECOND_IN_MS = 1000;
-    static final int MINUTE_IN_MS = 60000;
-    static final int HOUR_IN_MS = 3600000;
-
-    @Test
-    public void testFormatPlaybackTime() {
-        assertEquals("0:01", MediaTimeUtils.getPlaybackTime(SECOND_IN_MS));
-        assertEquals("1:01", MediaTimeUtils.getPlaybackTime(MINUTE_IN_MS + SECOND_IN_MS));
-        assertEquals("1:01:01", MediaTimeUtils
-                .getPlaybackTime(HOUR_IN_MS + MINUTE_IN_MS + SECOND_IN_MS));
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/TweetMediaUtilsTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/TweetMediaUtilsTest.java
deleted file mode 100644
index a2137f4b..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/TweetMediaUtilsTest.java
+++ /dev/null
@@ -1,348 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetBuilder;
-import com.twitter.sdk.android.core.models.TweetEntities;
-import com.twitter.sdk.android.core.models.VideoInfo;
-import com.twitter.sdk.android.tweetui.TestFixtures;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.assertTrue;
-
-@RunWith(RobolectricTestRunner.class)
-public class TweetMediaUtilsTest {
-    private static final int TEST_INDICES_START = 0;
-    private static final int TEST_INDICES_END = 13;
-    private static final String TEST_MEDIA_TYPE_PHOTO = "photo";
-    private static final String TEST_MEDIA_TYPE_VIDEO = "video";
-    private static final String TEST_MEDIA_TYPE_ANIMATED_GIF = "animated_gif";
-    private static final String TEST_CONTENT_TYPE_MP4 = "video/mp4";
-    private static final String TEST_CONTENT_TYPE_HLS = "application/x-mpegURL";
-    private static final String TEST_CONTENT_TYPE_DASH = "video/dash+xml";
-
-    @Test
-    public void testGetPhotoEntity_nullEntities() {
-        final Tweet tweet = new TweetBuilder().setEntities(null).build();
-        assertNull(TweetMediaUtils.getPhotoEntity(tweet));
-    }
-
-    @Test
-    public void testGetPhotoEntity_nullMedia() {
-        final TweetEntities entities = new TweetEntities(null, null, null, null, null);
-        final Tweet tweet = new TweetBuilder().setEntities(entities).build();
-        assertNull(TweetMediaUtils.getPhotoEntity(tweet));
-    }
-
-    @Test
-    public void testGetPhotoEntity_emptyMedia() {
-        final TweetEntities entities = new TweetEntities(null, null, new ArrayList<>(),
-                null, null);
-        final Tweet tweet = new TweetBuilder().setEntities(entities).build();
-        assertNull(TweetMediaUtils.getPhotoEntity(tweet));
-    }
-
-    @Test
-    public void testGetPhotoEntity_hasFinalPhotoEntity() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_PHOTO);
-        final ArrayList<MediaEntity> media = new ArrayList<>();
-        media.add(entity);
-        final TweetEntities entities = new TweetEntities(null, null, media, null, null);
-        final Tweet tweet = new TweetBuilder().setEntities(entities).build();
-
-        assertEquals(entity, TweetMediaUtils.getPhotoEntity(tweet));
-    }
-
-    @Test
-    public void testGetPhotoEntity_nonPhotoMedia() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_VIDEO);
-        final ArrayList<MediaEntity> media = new ArrayList<>();
-        media.add(entity);
-        final TweetEntities entities = new TweetEntities(null, null, media, null, null);
-        final Tweet tweet = new TweetBuilder().setEntities(entities).build();
-
-        assertNull(TweetMediaUtils.getPhotoEntity(tweet));
-    }
-
-    @Test
-    public void testHasPhoto_hasPhotoEntity() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_PHOTO);
-        final ArrayList<MediaEntity> media = new ArrayList<>();
-        media.add(entity);
-        final TweetEntities entities = new TweetEntities(null, null, media, null, null);
-        final Tweet tweet = new TweetBuilder().setEntities(entities).build();
-
-        assertTrue(TweetMediaUtils.hasPhoto(tweet));
-    }
-
-    @Test
-    public void testHasPhoto_noPhotoEntity() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_VIDEO);
-        final ArrayList<MediaEntity> media = new ArrayList<>();
-        media.add(entity);
-        final TweetEntities entities = new TweetEntities(null, null, media, null, null);
-        final Tweet tweet = new TweetBuilder().setEntities(entities).build();
-
-        assertFalse(TweetMediaUtils.hasPhoto(tweet));
-    }
-
-    @Test
-    public void testHasPhoto_uninitializedMediaEntities() {
-        final TweetEntities entities = new TweetEntities(null, null, null, null, null);
-        final Tweet tweet = new TweetBuilder().setEntities(entities).build();
-        assertFalse(TweetMediaUtils.hasPhoto(tweet));
-    }
-
-    @Test
-    public void testHasPhoto_nullEntities() {
-        final Tweet tweet = new TweetBuilder().setEntities(null).build();
-        assertFalse(TweetMediaUtils.hasPhoto(tweet));
-    }
-
-    @Test
-    public void testGetVideoEntity_nullEntities() {
-        final Tweet tweet = new TweetBuilder().setExtendedEntities(null).build();
-        assertNull(TweetMediaUtils.getVideoEntity(tweet));
-    }
-
-    @Test
-    public void testGetVideoEntity_nullMedia() {
-        final TweetEntities entities = new TweetEntities(null, null, null, null, null);
-        final Tweet tweet = new TweetBuilder().setExtendedEntities(entities).build();
-        assertNull(TweetMediaUtils.getVideoEntity(tweet));
-    }
-
-    @Test
-    public void testGetVideoEntity_emptyMedia() {
-        final TweetEntities entities = new TweetEntities(null, null, new ArrayList<>(),
-                null, null);
-        final Tweet tweet = new TweetBuilder().setExtendedEntities(entities).build();
-        assertNull(TweetMediaUtils.getVideoEntity(tweet));
-    }
-
-    @Test
-    public void testGetVideoEntity_hasVideoEntity() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_VIDEO);
-        final ArrayList<MediaEntity> media = new ArrayList<>();
-        media.add(entity);
-        final TweetEntities entities = new TweetEntities(null, null, media, null, null);
-        final Tweet tweet = new TweetBuilder().setExtendedEntities(entities).build();
-
-        assertEquals(entity, TweetMediaUtils.getVideoEntity(tweet));
-    }
-
-    @Test
-    public void testGetVideoEntity_nonVideoMedia() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_PHOTO);
-        final ArrayList<MediaEntity> media = new ArrayList<>();
-        media.add(entity);
-        final TweetEntities entities = new TweetEntities(null, null, media, null, null);
-        final Tweet tweet = new TweetBuilder().setExtendedEntities(entities).build();
-
-        assertNull(TweetMediaUtils.getVideoEntity(tweet));
-    }
-
-    @Test
-    public void testHasSupportedVideo_hasUnsupportedVideoEntity() {
-        final VideoInfo.Variant variant = new VideoInfo.Variant(0, TEST_CONTENT_TYPE_DASH, null);
-        final VideoInfo videoInfo = TestFixtures.createVideoInfoWithVariant(variant);
-        final MediaEntity entity = TestFixtures.createEntityWithVideo(videoInfo);
-
-        final TweetEntities entities = new TweetEntities(null, null, Arrays.asList(entity), null,
-                null);
-        final Tweet tweet = new TweetBuilder().setExtendedEntities(entities).build();
-
-        assertFalse(TweetMediaUtils.hasSupportedVideo(tweet));
-    }
-
-    @Test
-    public void testHasSupportedVideo_hasSupportedVideoEntity() {
-        final VideoInfo.Variant variant = new VideoInfo.Variant(0, TEST_CONTENT_TYPE_MP4, null);
-        final VideoInfo videoInfo = TestFixtures.createVideoInfoWithVariant(variant);
-        final MediaEntity entity = TestFixtures.createEntityWithVideo(videoInfo);
-
-        final TweetEntities entities = new TweetEntities(null, null, Arrays.asList(entity), null,
-                null);
-        final Tweet tweet = new TweetBuilder().setExtendedEntities(entities).build();
-
-        assertTrue(TweetMediaUtils.hasSupportedVideo(tweet));
-    }
-
-    @Test
-    public void testHasSupportedVideo_noVideoEntity() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_PHOTO);
-        final ArrayList<MediaEntity> media = new ArrayList<>();
-        media.add(entity);
-        final TweetEntities entities = new TweetEntities(null, null, media, null, null);
-        final Tweet tweet = new TweetBuilder().setExtendedEntities(entities).build();
-
-        assertFalse(TweetMediaUtils.hasSupportedVideo(tweet));
-    }
-
-    @Test
-    public void testHasSupportedVideo_uninitializedMediaEntities() {
-        final TweetEntities entities = new TweetEntities(null, null, null, null, null);
-        final Tweet tweet = new TweetBuilder().setExtendedEntities(entities).build();
-        assertFalse(TweetMediaUtils.hasSupportedVideo(tweet));
-    }
-
-    @Test
-    public void testHasSupportedVideo_nullEntities() {
-        final Tweet tweet = new TweetBuilder().setExtendedEntities(null).build();
-        assertFalse(TweetMediaUtils.hasSupportedVideo(tweet));
-    }
-
-    @Test
-    public void testIsPhotoType_photoEntity() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_PHOTO);
-        assertTrue(TweetMediaUtils.isPhotoType(entity));
-    }
-
-    @Test
-    public void testIsPhotoType_videoEntity() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_VIDEO);
-        assertFalse(TweetMediaUtils.isPhotoType(entity));
-    }
-
-    @Test
-    public void testIsPhotoType_animatedGifEntity() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_ANIMATED_GIF);
-        assertFalse(TweetMediaUtils.isPhotoType(entity));
-    }
-
-    @Test
-    public void testIsVideoType_photoEntity() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_PHOTO);
-        assertFalse(TweetMediaUtils.isVideoType(entity));
-    }
-
-    @Test
-    public void testIsVideoType_videoEntity() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_VIDEO);
-        assertTrue(TweetMediaUtils.isVideoType(entity));
-    }
-
-    @Test
-    public void testIsVideoType_animatedGifEntity() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_ANIMATED_GIF);
-        assertTrue(TweetMediaUtils.isVideoType(entity));
-    }
-
-    @Test
-    public void testGetSupportedVariant() {
-        final VideoInfo.Variant variant = new VideoInfo.Variant(0, TEST_CONTENT_TYPE_MP4, null);
-        final VideoInfo videoInfo = TestFixtures.createVideoInfoWithVariant(variant);
-        final MediaEntity entity = TestFixtures.createEntityWithVideo(videoInfo);
-
-        assertNotNull(TweetMediaUtils.getSupportedVariant(entity));
-        assertEquals(variant, TweetMediaUtils.getSupportedVariant(entity));
-    }
-
-    @Test
-    public void testGetSupportedVariant_unsupportedContentType() {
-        final VideoInfo.Variant variant = new VideoInfo.Variant(0, TEST_CONTENT_TYPE_DASH, null);
-        final VideoInfo videoInfo = TestFixtures.createVideoInfoWithVariant(variant);
-        final MediaEntity entity = TestFixtures.createEntityWithVideo(videoInfo);
-
-        assertNull(TweetMediaUtils.getSupportedVariant(entity));
-    }
-
-    @Test
-    public void testIsVariantSupported_withMP4() {
-        final VideoInfo.Variant variant = new VideoInfo.Variant(0, TEST_CONTENT_TYPE_MP4, null);
-        assertTrue(TweetMediaUtils.isVariantSupported(variant));
-    }
-
-    @Test
-    public void testIsVariantSupported_withHLS() {
-        final VideoInfo.Variant variant = new VideoInfo.Variant(0, TEST_CONTENT_TYPE_HLS, null);
-        assertTrue(TweetMediaUtils.isVariantSupported(variant));
-    }
-
-    @Test
-    public void testIsVariantSupported_withNullContentType() {
-        final VideoInfo.Variant variant = new VideoInfo.Variant(0, null, null);
-        assertFalse(TweetMediaUtils.isVariantSupported(variant));
-    }
-
-    @Test
-    public void testIsVariantSupported_withUnsupportedContentType() {
-        final VideoInfo.Variant variant = new VideoInfo.Variant(0, TEST_CONTENT_TYPE_DASH, null);
-        assertFalse(TweetMediaUtils.isVariantSupported(variant));
-    }
-
-    @Test
-    public void testIsLooping_withVideoOverSevenSeconds() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_VIDEO, 7000);
-        assertFalse(TweetMediaUtils.isLooping(entity));
-    }
-
-    @Test
-    public void testIsLooping_withVideoUnderSevenSeconds() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_VIDEO, 6000);
-        assertTrue(TweetMediaUtils.isLooping(entity));
-    }
-
-    @Test
-    public void testIsLooping_withAnimatedGif() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_ANIMATED_GIF);
-        assertTrue(TweetMediaUtils.isLooping(entity));
-    }
-
-    @Test
-    public void showVideoControlsWithVideo() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_VIDEO);
-        assertTrue(TweetMediaUtils.showVideoControls(entity));
-    }
-
-    @Test
-    public void showVideoControlsWithAnimatedGif() {
-        final MediaEntity entity = TestFixtures.newMediaEntity(TEST_INDICES_START, TEST_INDICES_END,
-                TEST_MEDIA_TYPE_ANIMATED_GIF);
-        assertFalse(TweetMediaUtils.showVideoControls(entity));
-    }
-}
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/TweetMediaViewTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/TweetMediaViewTest.java
deleted file mode 100644
index e4836cdf..00000000
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/internal/TweetMediaViewTest.java
+++ /dev/null
@@ -1,191 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui.internal;
-
-import android.graphics.Color;
-import android.graphics.drawable.Drawable;
-import android.view.View;
-import android.widget.ImageView;
-
-import com.twitter.sdk.android.core.models.Card;
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.R;
-import com.twitter.sdk.android.tweetui.TestFixtures;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.List;
-
-import static org.junit.Assert.assertArrayEquals;
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertNull;
-import static org.mockito.Matchers.any;
-import static org.mockito.Matchers.isNull;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-
-@RunWith(RobolectricTestRunner.class)
-public class TweetMediaViewTest {
-    static final String TEST_ALT_TEXT = "alt text";
-    static final int TEST_ERROR_RES_ID = 123456789;
-
-    private TweetMediaView tweetMediaView;
-    private CharSequence contentDefaultDescription;
-
-    @Before
-    public void setUp() throws Exception {
-        tweetMediaView = new TweetMediaView(RuntimeEnvironment.application, null,
-                mock(TweetMediaView.DependencyProvider.class));
-        contentDefaultDescription = RuntimeEnvironment.application.getResources()
-                .getString(R.string.tw__tweet_media);
-    }
-
-    @Test
-    public void testInitialViewState() {
-        for (int index = 0; index < TweetMediaView.MAX_IMAGE_VIEW_COUNT; index++) {
-            final ImageView imageView = (ImageView) tweetMediaView.getChildAt(index);
-            assertNull(imageView);
-        }
-
-        assertArrayEquals(new float[]{0, 0, 0, 0, 0, 0, 0, 0}, tweetMediaView.radii, 0);
-    }
-
-    public void testSetMediaBgColor() {
-        tweetMediaView.setMediaBgColor(Color.BLUE);
-        assertEquals(Color.BLUE, tweetMediaView.mediaBgColor);
-    }
-
-    public void testSetPhotoErrorResId() {
-        tweetMediaView.setPhotoErrorResId(TEST_ERROR_RES_ID);
-        assertEquals(TEST_ERROR_RES_ID, tweetMediaView.photoErrorResId);
-    }
-
-    @Test
-    public void testSetTweetMediaEntities_withEmptyList() {
-        final List<MediaEntity> emptyMediaEntities = Collections.EMPTY_LIST;
-        tweetMediaView.setTweetMediaEntities(TestFixtures.TEST_TWEET, emptyMediaEntities);
-
-        for (int index = 0; index < TweetMediaView.MAX_IMAGE_VIEW_COUNT; index++) {
-            final ImageView imageView = (ImageView) tweetMediaView.getChildAt(index);
-            assertNull(imageView);
-        }
-    }
-
-    @Test
-    public void testSetTweetMediaEntities_withSingleEntity() {
-        final MediaEntity entity = TestFixtures.createMediaEntityWithPhoto(100, 100);
-        final List<MediaEntity> mediaEntities = new ArrayList<>();
-        mediaEntities.add(entity);
-        tweetMediaView.setTweetMediaEntities(TestFixtures.TEST_TWEET, mediaEntities);
-
-        final ImageView imageView = (ImageView) tweetMediaView.getChildAt(0);
-        assertEquals(View.VISIBLE, imageView.getVisibility());
-        assertNull(tweetMediaView.getChildAt(1));
-        assertNull(tweetMediaView.getChildAt(2));
-        assertNull(tweetMediaView.getChildAt(3));
-    }
-
-    @Test
-    public void testSetTweetMediaEntities_withMultipleEntities() {
-        final List<MediaEntity> mediaEntities = TestFixtures.createMultipleMediaEntitiesWithPhoto
-                (TweetMediaView.MAX_IMAGE_VIEW_COUNT, 100, 100);
-        tweetMediaView.setTweetMediaEntities(TestFixtures.TEST_TWEET, mediaEntities);
-
-        for (int index = 0; index < TweetMediaView.MAX_IMAGE_VIEW_COUNT; index++) {
-            final ImageView imageView = (ImageView) tweetMediaView.getChildAt(index);
-            assertEquals(View.VISIBLE, imageView.getVisibility());
-            assertEquals(index, imageView.getTag(R.id.tw__entity_index));
-            assertEquals(contentDefaultDescription, imageView.getContentDescription());
-        }
-    }
-
-    @Test
-    public void testSetTweetMediaEntities_withVine() {
-        final Card sampleVineCard = TestFixtures.sampleValidVineCard();
-        final Tweet tweetWithVineCard = TestFixtures.createTweetWithVineCard(
-                TestFixtures.TEST_TWEET_ID, TestFixtures.TEST_USER,
-                TestFixtures.TEST_STATUS, sampleVineCard);
-
-        tweetMediaView.setVineCard(tweetWithVineCard);
-
-        final OverlayImageView imageView = (OverlayImageView) tweetMediaView.getChildAt(0);
-        assertEquals(View.VISIBLE, imageView.getVisibility());
-        assertNotNull(imageView.overlay.drawable);
-        assertNull(tweetMediaView.getChildAt(1));
-        assertNull(tweetMediaView.getChildAt(2));
-        assertNull(tweetMediaView.getChildAt(3));
-    }
-
-    @Test
-    public void testSetRoundedCornersRadii() {
-        tweetMediaView.setRoundedCornersRadii(1, 2, 3, 4);
-        assertArrayEquals(new float[]{1, 1, 2, 2, 3, 3, 4, 4}, tweetMediaView.radii, 0);
-    }
-
-    @Test
-    public void testSetAltText_withEmptyString() {
-        final OverlayImageView imageView = mock(OverlayImageView.class);
-        tweetMediaView.setAltText(imageView, "");
-
-        verify(imageView).setContentDescription(contentDefaultDescription);
-    }
-
-    @Test
-    public void testSetAltText_withAtlText() {
-        final OverlayImageView imageView = mock(OverlayImageView.class);
-        tweetMediaView.setAltText(imageView, TEST_ALT_TEXT);
-
-        verify(imageView).setContentDescription(TEST_ALT_TEXT);
-    }
-
-    @Test
-    public void testSetOverlayImage_isVideoTrue() {
-        final OverlayImageView imageView = mock(OverlayImageView.class);
-        tweetMediaView.setOverlayImage(imageView, true);
-
-        verify(imageView).setOverlayDrawable(any(Drawable.class));
-    }
-
-    @Test
-    public void testSetOverlayImage_isVideoFalse() {
-        final OverlayImageView imageView = mock(OverlayImageView.class);
-        tweetMediaView.setOverlayImage(imageView, false);
-
-        verify(imageView).setOverlayDrawable(isNull(Drawable.class));
-    }
-
-    @Test
-    public void testClearImageViews() {
-        final List<MediaEntity> mediaEntities = TestFixtures.createMultipleMediaEntitiesWithPhoto
-                (TweetMediaView.MAX_IMAGE_VIEW_COUNT, 100, 100);
-        tweetMediaView.setTweetMediaEntities(TestFixtures.TEST_TWEET, mediaEntities);
-        tweetMediaView.clearImageViews();
-        for (int index = 0; index < TweetMediaView.MAX_IMAGE_VIEW_COUNT; index++) {
-            final ImageView imageView = (ImageView) tweetMediaView.getChildAt(index);
-            assertEquals(View.GONE, imageView.getVisibility());
-        }
-    }
-}
diff --git a/tweet-ui/src/test/resources/robolectric.properties b/tweet-ui/src/test/resources/robolectric.properties
deleted file mode 100644
index 37ab2cac..00000000
--- a/tweet-ui/src/test/resources/robolectric.properties
+++ /dev/null
@@ -1,2 +0,0 @@
-sdk = 21
-constants = com.twitter.sdk.android.tweetui.BuildConfig
\ No newline at end of file
diff --git a/twitter-mopub/build.gradle b/twitter-mopub/build.gradle
deleted file mode 100644
index 6be3ce86..00000000
--- a/twitter-mopub/build.gradle
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        versionCode 1
-        versionName version
-        minSdkVersion rootProject.minSdkVersion
-        consumerProguardFiles 'proguard.txt'
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-
-            testCoverageEnabled enableTestCodeCoverage
-        }
-        release {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-        }
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-
-    // Forcibly add debug and the generated "R" files onto the test classpath
-    sourceSets {
-        test.java.srcDirs += "build/generated/source/r/debug"
-        test.java.srcDirs += "src/debug"
-    }
-
-    testOptions {
-        unitTests.returnDefaultValues = true
-        unitTests.includeAndroidResources true
-    }
-}
-
-dependencies {
-
-    api (dependency.mopub) {
-        transitive = true
-    }
-
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
-}
\ No newline at end of file
diff --git a/twitter-mopub/changelog.md b/twitter-mopub/changelog.md
deleted file mode 100644
index 8145966f..00000000
--- a/twitter-mopub/changelog.md
+++ /dev/null
@@ -1,33 +0,0 @@
-# Twitter MoPub Android SDK changelog
-*Non-trivial pull requests should include an entry below. Entries must be suitable for inclusion in public-facing materials such as release notes and blog posts. Keep them short, sweet, and in the past tense. New entries go on top. When merging to deploy, add the version number and date.*
-
-## Unreleased
-
-## v3.3.0
-
-* Bumped version number
-
-## v3.2.0
-
-* Moved build to Java 8
-* Narrowed mopub-sdk dependency to mopub-sdk-native-static
-
-## v3.1.1
-
-* Bumped version number
-
-## v3.1.0
-
-* Bumped version number
-
-## v3.0.0
-
-* Bumped version number
-
-## v2.0.0
-
-* Dropped support for API versions before API 14 (ICS).
-
-## v1.0.0
-
-* Initial release.
diff --git a/twitter-mopub/gradle.properties b/twitter-mopub/gradle.properties
deleted file mode 100644
index c7b5d81b..00000000
--- a/twitter-mopub/gradle.properties
+++ /dev/null
@@ -1,26 +0,0 @@
-#
-# Copyright (C) 2015 Twitter, Inc.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-#
-
-# The to be released version. When releasing, drop -SNAPSHOT. After releasing, bump version
-# number and add back -SNAPSHOT
-version=3.3.0-SNAPSHOT
-version_code=1
-
-pom_name=Twitter MoPub Android SDK
-pom_group_id=com.twitter.sdk.android
-pom_artifact_id=twitter-mopub
-pom_packaging=aar
diff --git a/twitter-mopub/internal-build.gradle b/twitter-mopub/internal-build.gradle
deleted file mode 100644
index e9e52a0b..00000000
--- a/twitter-mopub/internal-build.gradle
+++ /dev/null
@@ -1,93 +0,0 @@
-import io.fabric.gradle.weaving.ArtifactSizePlugin
-import io.fabric.gradle.weaving.DexMethodCountPlugin
-
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-apply plugin: 'com.android.library'
-apply from: rootProject.qualityScript
-apply plugin: ArtifactSizePlugin
-apply plugin: DexMethodCountPlugin
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        versionCode 1
-        versionName version
-        group pom_group_id
-
-        minSdkVersion rootProject.minSdkVersion
-        consumerProguardFiles 'proguard.txt'
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-
-            testCoverageEnabled enableTestCodeCoverage
-        }
-        release {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-        }
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    dexMethodCount {
-        packageFilter = "com.twitter.sdk.android.mopub"
-    }
-
-    //Gradle publishes only release by default for multi module projects
-    //This will publish all build variants and we can specifically choose them
-    defaultPublishConfig 'release'
-    publishNonDefault true
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-
-    testOptions {
-        unitTests.returnDefaultValues = true
-        unitTests.includeAndroidResources true
-    }
-}
-
-dependencies {
-    api (dependency.mopub) {
-        transitive = true
-    }
-
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
-}
-
-apply from: rootProject.deployScript
\ No newline at end of file
diff --git a/twitter-mopub/lint.xml b/twitter-mopub/lint.xml
deleted file mode 100644
index de80308e..00000000
--- a/twitter-mopub/lint.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<lint/>
diff --git a/twitter-mopub/proguard.txt b/twitter-mopub/proguard.txt
deleted file mode 100644
index a7bc4c33..00000000
--- a/twitter-mopub/proguard.txt
+++ /dev/null
@@ -1 +0,0 @@
-# Proguard config for Twitter MoPub
diff --git a/twitter-mopub/src/main/AndroidManifest.xml b/twitter-mopub/src/main/AndroidManifest.xml
deleted file mode 100644
index 15960c86..00000000
--- a/twitter-mopub/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,38 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<manifest
-    package="com.twitter.sdk.android.mopub"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-
-    <application>
-        <activity
-            android:name="com.mopub.mobileads.MoPubActivity"
-            android:configChanges="keyboardHidden|orientation|screenSize"/>
-        <activity
-            android:name="com.mopub.mobileads.MraidActivity"
-            android:configChanges="keyboardHidden|orientation|screenSize"/>
-        <activity
-            android:name="com.mopub.common.MoPubBrowser"
-            android:configChanges="keyboardHidden|orientation|screenSize"/>
-        <activity
-            android:name="com.mopub.mobileads.MraidVideoPlayerActivity"
-            android:configChanges="keyboardHidden|orientation|screenSize"/>
-    </application>
-</manifest>
\ No newline at end of file
diff --git a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/ColorUtils.java b/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/ColorUtils.java
deleted file mode 100644
index 522bba8a..00000000
--- a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/ColorUtils.java
+++ /dev/null
@@ -1,132 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub;
-
-import android.graphics.Color;
-
-final class ColorUtils {
-    private static final int RGB_TOTAL_COLORS = 256;
-
-    private static final float DEFAULT_LIGHTNESS_THRESHOLD = .6f;
-    private static final float ON_TAP_LIGHTNESS_THRESHOLD = .3f;
-
-    private static final float CTA_ON_TAP_DARKNESS_FACTOR = 0.1f;
-    private static final float CTA_ON_TAP_LIGHTNESS_FACTOR = 0.2f;
-    private static final float CTA_TEXT_LIGHTNESS_FACTOR = .6f;
-
-    private static final int OPAQUE_ALPHA = Math.round(255 * 1.0f);
-    private static final int TRANSPARENT_ALPHA = Math.round(255 * 0.9f);
-    private static final int COLOR_FULLY_WHITE = Math.round(255 * 1.0f);
-    private static final int COLOR_PARTIALLY_BLACK = Math.round(255 * 0.4f);
-
-    private ColorUtils() {}
-
-    public static int calculateCtaTextColor(final int ctaBackgroundColor) {
-        if (isLightColor(ctaBackgroundColor)) {
-            return calculateDarkerColor(ctaBackgroundColor, CTA_TEXT_LIGHTNESS_FACTOR);
-        } else {
-            return Color.WHITE;
-        }
-    }
-
-    public static int calculateCtaOnTapColor(final int ctaBackgroundColor) {
-        if (isLightColor(ctaBackgroundColor, ON_TAP_LIGHTNESS_THRESHOLD)) {
-            return calculateDarkerColor(ctaBackgroundColor, CTA_ON_TAP_DARKNESS_FACTOR);
-        } else {
-            return calculateLighterColor(ctaBackgroundColor, CTA_ON_TAP_LIGHTNESS_FACTOR);
-        }
-    }
-
-    public static boolean isLightColor(final int color) {
-        return isLightColor(color, DEFAULT_LIGHTNESS_THRESHOLD);
-    }
-
-    /**
-     * This method calculates a darker color provided a factor of reduction in lightness.
-     *
-     * @param color The original color value
-     * @param factor Factor of lightness reduction, range can be between 0 - 1.0
-     * @return  The calculated darker color
-     */
-    public static int calculateDarkerColor(final int color, final float factor) {
-        final int a = Color.alpha(color);
-        final int r = Color.red(color);
-        final int g = Color.green(color);
-        final int b = Color.blue(color);
-
-        final int lightnessLevel = Math.round(RGB_TOTAL_COLORS * factor);
-
-        return Color.argb(a,
-                Math.max(r - lightnessLevel, 0),
-                Math.max(g - lightnessLevel, 0),
-                Math.max(b - lightnessLevel, 0));
-    }
-
-    /**
-     * This method calculates a lighter color provided a factor of increase in lightness.
-     *
-     * @param color A color value
-     * @param factor Factor of increase in lightness, range can be between 0 - 1.0
-     * @return  The calculated darker color
-     */
-    public static int calculateLighterColor(final int color, final float factor) {
-        final int a = Color.alpha(color);
-        final int r = Color.red(color);
-        final int g = Color.green(color);
-        final int b = Color.blue(color);
-
-        final int lightnessLevel = Math.round(RGB_TOTAL_COLORS * factor);
-
-        return Color.argb(a,
-                Math.min(r + lightnessLevel, 255),
-                Math.min(g + lightnessLevel, 255),
-                Math.min(b + lightnessLevel, 255));
-    }
-
-    /**
-     * This method calculates the suitable contrasting color that is viewable.
-     *
-     * @param color A color value.
-     * @return  The calculated contrasting color that is viewable.
-     */
-    public static int calculateContrastingColor(final int color) {
-        final boolean isLightColor = isLightColor(color);
-        final int alpha = isLightColor ? OPAQUE_ALPHA : TRANSPARENT_ALPHA;
-        final int rgbColor = isLightColor ? COLOR_PARTIALLY_BLACK : COLOR_FULLY_WHITE;
-        return Color.argb(alpha, rgbColor, rgbColor, rgbColor);
-    }
-
-    /**
-     * This method uses HSL to determine in a human eyesight terms if a color is light or not.
-     * See: http://en.wikipedia.org/wiki/HSL_and_HSV. The threshold values are from ITU Rec. 709
-     * http://en.wikipedia.org/wiki/Rec._709#Luma_coefficients
-     *
-     *
-     * @param  color A color value
-     * @param  factor A factor of lightness measured between 0-1.0
-     * @return Whether or not the color is considered light
-     */
-    public static boolean isLightColor(final int color, final float factor) {
-        final int r = Color.red(color);
-        final int g = Color.green(color);
-        final int b = Color.blue(color);
-
-        final double threshold = 0.21 * r + 0.72 * g + 0.07 * b;
-        return threshold > (RGB_TOTAL_COLORS * factor);
-    }
-}
diff --git a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterMoPubAdAdapter.java b/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterMoPubAdAdapter.java
deleted file mode 100644
index dffd1cd7..00000000
--- a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterMoPubAdAdapter.java
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub;
-
-import android.app.Activity;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.text.TextUtils;
-import android.widget.Adapter;
-
-import com.mopub.nativeads.MoPubAdAdapter;
-import com.mopub.nativeads.MoPubNativeAdPositioning;
-import com.mopub.nativeads.RequestParameters;
-
-public class TwitterMoPubAdAdapter extends MoPubAdAdapter{
-    private static final String TWITTERKIT_KEYWORD = "src:twitterkit";
-
-    /**
-     * Creates a new TwitterMoPubAdAdapter object.
-     *
-     * By default, the adapter will contact the server to determine ad positions. If you
-     * wish to hard-code positions in your app, see {@link TwitterMoPubAdAdapter( Activity,
-     * MoPubNativeAdPositioning.MoPubClientPositioning )}.
-     *
-     * @param activity The activity.
-     * @param originalAdapter Your original adapter.
-     */
-    public TwitterMoPubAdAdapter(Activity activity, Adapter originalAdapter) {
-        super(activity, originalAdapter);
-    }
-
-    /**
-     * Creates a new TwitterMoPubAdAdapter object, using server positioning.
-     *
-     * @param activity The activity.
-     * @param originalAdapter Your original adapter.
-     * @param adPositioning A positioning object for specifying where ads will be placed in your
-     * stream. See {@link MoPubNativeAdPositioning#serverPositioning()}.
-     */
-    public TwitterMoPubAdAdapter(Activity activity, Adapter originalAdapter,
-            MoPubNativeAdPositioning.MoPubServerPositioning adPositioning) {
-        super(activity, originalAdapter, adPositioning);
-    }
-
-    /**
-     * Creates a new TwitterMoPubAdAdapter object, using client positioning.
-     *
-     * @param activity The activity.
-     * @param originalAdapter Your original adapter.
-     * @param adPositioning A positioning object for specifying where ads will be placed in your
-     * stream. See {@link MoPubNativeAdPositioning#clientPositioning()}.
-     */
-    public TwitterMoPubAdAdapter(Activity activity, Adapter originalAdapter,
-            MoPubNativeAdPositioning.MoPubClientPositioning adPositioning) {
-        super(activity, originalAdapter, adPositioning);
-    }
-
-    @Override
-    public void loadAds(@NonNull final String adUnitId) {
-        loadAds(adUnitId, null);
-    }
-
-    @Override
-    public void loadAds(@NonNull final String adUnitId,
-            @Nullable final RequestParameters requestParams) {
-
-        final RequestParameters.Builder builder = new RequestParameters.Builder();
-        if (requestParams != null) {
-            final String keywords = TextUtils.isEmpty(requestParams.getKeywords())
-                    ? TWITTERKIT_KEYWORD : requestParams.getKeywords() + "," + TWITTERKIT_KEYWORD;
-            builder.keywords(keywords);
-            builder.location(requestParams.getLocation());
-        } else {
-            builder.keywords(TWITTERKIT_KEYWORD);
-        }
-
-        super.loadAds(adUnitId, builder.build());
-    }
-}
diff --git a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAd.java b/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAd.java
deleted file mode 100644
index d4ea6596..00000000
--- a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAd.java
+++ /dev/null
@@ -1,188 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub;
-
-import android.content.Context;
-import android.content.res.TypedArray;
-import android.graphics.drawable.Drawable;
-import android.graphics.drawable.GradientDrawable;
-import android.graphics.drawable.LayerDrawable;
-import android.graphics.drawable.ShapeDrawable;
-import android.graphics.drawable.StateListDrawable;
-import android.graphics.drawable.shapes.RectShape;
-import android.os.Build;
-import android.util.AttributeSet;
-import android.view.LayoutInflater;
-import android.widget.FrameLayout;
-import android.widget.ImageView;
-import android.widget.LinearLayout;
-import android.widget.RelativeLayout;
-import android.widget.TextView;
-
-import com.twitter.sdk.android.mopub.internal.RoundedImageView;
-
-public class TwitterStaticNativeAd extends FrameLayout {
-    LinearLayout containerLayout;
-    RoundedImageView mainImageView;
-    RelativeLayout cardLayout;
-    ImageView adIconView;
-    TextView adTitleView;
-    TextView adTextView;
-    TextView callToActionView;
-    ImageView privacyInfoView;
-
-    // style colors
-    int containerBackgroundColor;
-    int cardBackgroundColor;
-    int primaryTextColor;
-    int ctaBackgroundColor;
-    int cardBorderColor;
-
-    private static final int DEFAULT_AD_STYLE = R.style.tw__ad_LightStyle;
-
-    public TwitterStaticNativeAd(Context context) {
-        this(context, null);
-    }
-
-    public TwitterStaticNativeAd(Context context, AttributeSet attrs) {
-        this(context, attrs, DEFAULT_AD_STYLE);
-    }
-
-    public TwitterStaticNativeAd(Context context, AttributeSet attrs, int styleResId) {
-        super(context, attrs);
-        findSubviews();
-        initAttributes(styleResId);
-        setStyleAttributes();
-    }
-
-    private void findSubviews() {
-        LayoutInflater.from(getContext()).inflate(R.layout.tw__native_ad, this, true);
-        containerLayout = findViewById(R.id.tw__ad_mopub_layout);
-        mainImageView = findViewById(R.id.native_ad_main_image);
-        cardLayout = findViewById(R.id.native_ad_card);
-        adIconView = findViewById(R.id.native_ad_icon_image);
-        adTitleView = findViewById(R.id.native_ad_title);
-        adTextView = findViewById(R.id.native_ad_text);
-        callToActionView = findViewById(R.id.native_ad_cta);
-        privacyInfoView = findViewById(R.id.native_ad_privacy_info_icon_image);
-    }
-
-    private void initAttributes(int styleResId) {
-        final TypedArray a = getContext().getTheme().obtainStyledAttributes(styleResId,
-                R.styleable.tw__native_ad);
-        try {
-            readStyleAttributes(a);
-        } finally {
-            a.recycle();
-        }
-    }
-
-    private void readStyleAttributes(TypedArray typedArray) {
-        containerBackgroundColor = typedArray.getColor(
-                R.styleable.tw__native_ad_tw__ad_container_bg_color,
-                getResources().getColor(R.color.tw__ad_light_container_bg_color));
-
-        cardBackgroundColor = typedArray.getColor(R.styleable.tw__native_ad_tw__ad_card_bg_color,
-                getResources().getColor(R.color.tw__ad_light_card_bg_color));
-
-        primaryTextColor = typedArray.getColor(
-                R.styleable.tw__native_ad_tw__ad_text_primary_color,
-                getResources().getColor(R.color.tw__ad_light_text_primary_color));
-
-        ctaBackgroundColor = typedArray.getColor(
-                R.styleable.tw__native_ad_tw__ad_cta_button_color,
-                getResources().getColor(R.color.tw__ad_cta_default));
-    }
-
-    private void setStyleAttributes() {
-        containerLayout.setBackgroundColor(containerBackgroundColor);
-        adTitleView.setTextColor(primaryTextColor);
-        adTextView.setTextColor(primaryTextColor);
-        final int adViewRadius = (int) getResources().getDimension(R.dimen.tw__ad_view_radius);
-        mainImageView.setCornerRadii(adViewRadius, adViewRadius, 0, 0);
-
-        final TextView privacyTextView = findViewById(R.id.native_ad_privacy_text);
-        privacyTextView.setTextColor(
-                ColorUtils.calculateContrastingColor(containerBackgroundColor));
-
-        setCardStyling();
-        setCallToActionStyling();
-    }
-
-    private void setCardStyling() {
-        final boolean isLightBg = ColorUtils.isLightColor(containerBackgroundColor);
-        if (isLightBg) {
-            cardBorderColor = getResources().getColor(R.color.tw__ad_light_card_border_color);
-        } else {
-            cardBorderColor = getResources().getColor(R.color.tw__ad_dark_card_border_color);
-        }
-
-        final ShapeDrawable bgDrawable = new ShapeDrawable(new RectShape());
-        bgDrawable.getPaint().setColor(cardBackgroundColor);
-        final ShapeDrawable borderDrawable = new ShapeDrawable(new RectShape());
-        borderDrawable.getPaint().setColor(cardBorderColor);
-
-        final Drawable[] layers = new Drawable[2];
-        layers[0] = borderDrawable;
-        layers[1] = bgDrawable;
-
-        final LayerDrawable layerDrawable = new LayerDrawable(layers);
-        layerDrawable.setLayerInset(0, 0, 0, 0, 0);
-        layerDrawable.setLayerInset(1, 1, 0, 1, 0);
-
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
-            cardLayout.setBackground(layerDrawable);
-        } else {
-            cardLayout.setBackgroundDrawable(layerDrawable);
-        }
-    }
-
-    private void setCallToActionStyling() {
-        final int calculatedCTATextColor = ColorUtils.calculateCtaTextColor(ctaBackgroundColor);
-        callToActionView.setTextColor(calculatedCTATextColor);
-
-        // Setup StateListDrawable obj with two gradient drawables:
-        // First is the selected item with lighter/darker bg color of original
-        // Second is unselected item with the call to action background color
-        // Also set the default ad view radius for bottomLeft and bottomRight corners
-        final StateListDrawable stateListDrawable = new StateListDrawable();
-        final int adViewRadius = (int) getResources().getDimension(R.dimen.tw__ad_view_radius);
-        final float[] ctaViewRadii = new float[]{
-                0, 0,
-                0, 0,
-                adViewRadius, adViewRadius,
-                adViewRadius, adViewRadius};
-
-        final GradientDrawable selectedItem = new GradientDrawable();
-        selectedItem.setCornerRadii(ctaViewRadii);
-        final int ctaPressedBgColor = ColorUtils.calculateCtaOnTapColor(ctaBackgroundColor);
-        selectedItem.setColor(ctaPressedBgColor);
-        stateListDrawable.addState(new int[]{android.R.attr.state_pressed}, selectedItem);
-
-        final GradientDrawable unselectedItem = new GradientDrawable();
-        unselectedItem.setCornerRadii(ctaViewRadii);
-        unselectedItem.setColor(ctaBackgroundColor);
-        stateListDrawable.addState(new int[]{}, unselectedItem);
-
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
-            callToActionView.setBackground(stateListDrawable);
-        } else {
-            callToActionView.setBackgroundDrawable(stateListDrawable);
-        }
-    }
-}
diff --git a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdRenderer.java b/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdRenderer.java
deleted file mode 100644
index dae7d110..00000000
--- a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdRenderer.java
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub;
-
-import android.content.Context;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.mopub.nativeads.BaseNativeAd;
-import com.mopub.nativeads.MoPubAdRenderer;
-import com.mopub.nativeads.NativeImageHelper;
-import com.mopub.nativeads.NativeRendererHelper;
-import com.mopub.nativeads.StaticNativeAd;
-
-public class TwitterStaticNativeAdRenderer implements MoPubAdRenderer<StaticNativeAd> {
-    private static final int DEFAULT_STYLE = R.style.tw__ad_LightStyle;
-
-    private final int styleResId;
-
-    public TwitterStaticNativeAdRenderer() {
-        this.styleResId = DEFAULT_STYLE;
-    }
-
-    public TwitterStaticNativeAdRenderer(int styleResId) {
-        this.styleResId = styleResId;
-    }
-
-    @Override
-    public View createAdView(final Context context, final ViewGroup parent) {
-        return new TwitterStaticNativeAd(context, null, styleResId);
-    }
-
-    @Override
-    public void renderAdView(final View view, final StaticNativeAd staticNativeAd) {
-        update((TwitterStaticNativeAd) view, staticNativeAd);
-    }
-
-    @Override
-    public boolean supports(final BaseNativeAd nativeAd) {
-        return nativeAd instanceof StaticNativeAd;
-    }
-
-    private void update(final TwitterStaticNativeAd staticNativeView,
-            final StaticNativeAd staticNativeAd) {
-        NativeRendererHelper.addTextView(staticNativeView.adTitleView,
-                staticNativeAd.getTitle());
-        NativeRendererHelper.addTextView(staticNativeView.adTextView, staticNativeAd.getText());
-        NativeRendererHelper.addTextView(staticNativeView.callToActionView,
-                staticNativeAd.getCallToAction());
-        NativeImageHelper.loadImageView(staticNativeAd.getMainImageUrl(),
-                staticNativeView.mainImageView);
-        NativeImageHelper.loadImageView(staticNativeAd.getIconImageUrl(),
-                staticNativeView.adIconView);
-        NativeRendererHelper.addPrivacyInformationIcon(
-                staticNativeView.privacyInfoView,
-                staticNativeAd.getPrivacyInformationIconImageUrl(),
-                staticNativeAd.getPrivacyInformationIconClickThroughUrl());
-    }
-}
diff --git a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/internal/RoundedImageView.java b/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/internal/RoundedImageView.java
deleted file mode 100644
index d764dc10..00000000
--- a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/internal/RoundedImageView.java
+++ /dev/null
@@ -1,100 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub.internal;
-
-import android.content.Context;
-import android.graphics.Bitmap;
-import android.graphics.BitmapShader;
-import android.graphics.Canvas;
-import android.graphics.Paint;
-import android.graphics.Path;
-import android.graphics.RectF;
-import android.graphics.Shader;
-import android.graphics.drawable.BitmapDrawable;
-import android.util.AttributeSet;
-import android.widget.ImageView;
-
-import static android.graphics.Bitmap.createBitmap;
-
-public class RoundedImageView extends ImageView {
-    private float[] roundedCornerRadii;
-
-    public RoundedImageView(Context context, AttributeSet attrs) {
-        super(context, attrs, 0);
-        setDefaultCornerRadii();
-    }
-
-    public RoundedImageView(Context context, AttributeSet attrs, int styleResId) {
-        super(context, attrs, styleResId);
-        setDefaultCornerRadii();
-    }
-
-    private void setDefaultCornerRadii() {
-        setCornerRadii(0, 0, 0, 0);
-    }
-
-    /**
-     * Set radius for each corner and override default behavior of no rounded corners.
-     *
-     * @param topLeftRadius     top left radius of view
-     * @param topRightRadius    top right radius of view
-     * @param bottomLeftRadius  bottom left radius of view
-     * @param bottomRightRadius bottom right radius of view
-     */
-    public void setCornerRadii(int topLeftRadius, int topRightRadius,
-                                        int bottomLeftRadius, int bottomRightRadius) {
-        if (topLeftRadius < 0 || topRightRadius < 0 ||
-                bottomRightRadius < 0 || bottomLeftRadius < 0) {
-            throw new IllegalStateException("Radius must not be negative");
-        }
-
-        roundedCornerRadii = new float[]{
-                topLeftRadius, topLeftRadius,
-                topRightRadius, topRightRadius,
-                bottomLeftRadius, bottomLeftRadius,
-                bottomRightRadius, bottomRightRadius};
-    }
-
-    @Override
-    public void setImageBitmap(Bitmap bitmap) {
-        if (bitmap != null) {
-            setImageDrawable(new BitmapDrawable(getResources(), transform(bitmap)));
-        } else {
-            setImageDrawable(null);
-        }
-    }
-
-    private Bitmap transform(Bitmap source) {
-        final RectF rect = new RectF(0, 0, source.getWidth(), source.getHeight());
-        final Bitmap result = createBitmap(source.getWidth(), source.getHeight(),
-                source.getConfig());
-        final BitmapShader bitmapShader = new BitmapShader(source, Shader.TileMode.CLAMP,
-                Shader.TileMode.CLAMP);
-
-        final Paint paint = new Paint();
-        paint.setAntiAlias(true);
-        paint.setShader(bitmapShader);
-
-        final Path path = new Path();
-        path.addRoundRect(rect, roundedCornerRadii, Path.Direction.CCW);
-
-        final Canvas canvas = new Canvas(result);
-        canvas.drawPath(path, paint);
-        return result;
-    }
-}
diff --git a/twitter-mopub/src/main/res/layout/tw__native_ad.xml b/twitter-mopub/src/main/res/layout/tw__native_ad.xml
deleted file mode 100644
index f387f5d0..00000000
--- a/twitter-mopub/src/main/res/layout/tw__native_ad.xml
+++ /dev/null
@@ -1,102 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<LinearLayout
-    android:id="@+id/tw__ad_mopub_layout"
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    style="@style/tw__ad_container">
-
-    <com.twitter.sdk.android.mopub.internal.RoundedImageView
-        android:id="@+id/native_ad_main_image"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:adjustViewBounds="true"
-        tools:ignore="ContentDescription"/>
-
-    <RelativeLayout
-        android:id="@+id/native_ad_card"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:padding="@dimen/tw__ad_space_padding">
-
-        <ImageView
-            android:id="@+id/native_ad_icon_image"
-            android:layout_width="@dimen/tw__ad_icon_size"
-            android:layout_height="@dimen/tw__ad_icon_size"
-            android:layout_alignParentLeft="true"
-            android:layout_marginLeft="@dimen/tw__ad_icon_margin_left"
-            android:layout_marginRight="@dimen/tw__ad_icon_margin_right"
-            tools:ignore="ContentDescription"/>
-
-        <TextView
-            android:id="@+id/native_ad_title"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_toRightOf="@id/native_ad_icon_image"
-            android:layout_marginLeft="@dimen/tw__ad_title_margin_left"
-            android:focusable="false"
-            android:textColor="@color/tw__ad_light_text_primary_color"
-            android:textSize="@dimen/tw__ad_text_size_large"
-            android:textStyle="bold"
-            tools:text="MoPub Native Ad"/>
-
-        <TextView
-            android:id="@+id/native_ad_text"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_below="@id/native_ad_title"
-            android:layout_alignLeft="@id/native_ad_title"
-            android:textColor="@color/tw__ad_light_text_primary_color"
-            android:textSize="@dimen/tw__ad_text_size_medium"
-            tools:text="Welcome to Native MoPub Ads. Native ads blend seamlessly into your
-            content."/>
-    </RelativeLayout>
-
-    <Button
-        android:id="@+id/native_ad_cta"
-        android:textAllCaps="false"
-        android:stateListAnimator="@null"
-        tools:text="Buy now"
-        tools:ignore="UnusedAttribute"
-        style="@style/tw__ad_cta_button"/>
-
-    <RelativeLayout
-        android:id="@+id/native_ad_privacy"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="@dimen/tw__ad_privacy_margin_left">
-
-        <ImageView
-            android:id="@+id/native_ad_privacy_info_icon_image"
-            android:layout_width="@dimen/tw__ad_privacy_icon_size"
-            android:layout_height="@dimen/tw__ad_privacy_icon_size"
-            android:background="@null"
-            android:padding="@dimen/tw__ad_privacy_icon_padding"
-            android:contentDescription="@string/tw__privacy_icon_content_desc"/>
-
-        <TextView
-            android:id="@+id/native_ad_privacy_text"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_centerInParent="true"
-            android:layout_toEndOf="@id/native_ad_privacy_info_icon_image"
-            android:layout_marginLeft="@dimen/tw__ad_privacy_text_margin_left"
-            android:text="@string/tw__sponsored"
-            android:textSize="@dimen/tw__ad_text_size_small"/>
-    </RelativeLayout>
-</LinearLayout>
diff --git a/twitter-mopub/src/main/res/values-ar/strings.xml b/twitter-mopub/src/main/res/values-ar/strings.xml
deleted file mode 100644
index f9c84e84..00000000
--- a/twitter-mopub/src/main/res/values-ar/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">أيقونة الخصوصيّة</string>
-    <string name="tw__sponsored">هذا إعلان مدفوع</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-bg/strings.xml b/twitter-mopub/src/main/res/values-bg/strings.xml
deleted file mode 100644
index 5188eb6b..00000000
--- a/twitter-mopub/src/main/res/values-bg/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Икона за поверителност</string>
-    <string name="tw__sponsored">Това е платена реклама</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-bn/strings.xml b/twitter-mopub/src/main/res/values-bn/strings.xml
deleted file mode 100644
index 53358cf1..00000000
--- a/twitter-mopub/src/main/res/values-bn/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">গোপনীয়তা আইকন</string>
-    <string name="tw__sponsored">এটি একটি প্রযোজিত বিজ্ঞাপন</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ca/strings.xml b/twitter-mopub/src/main/res/values-ca/strings.xml
deleted file mode 100644
index a7306563..00000000
--- a/twitter-mopub/src/main/res/values-ca/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Icona de privacitat</string>
-    <string name="tw__sponsored">Aquest anunci està patrocinat</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-cs/strings.xml b/twitter-mopub/src/main/res/values-cs/strings.xml
deleted file mode 100644
index 61b24865..00000000
--- a/twitter-mopub/src/main/res/values-cs/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ikona Soukromí</string>
-    <string name="tw__sponsored">Toto je sponzorovaná reklama.</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-da/strings.xml b/twitter-mopub/src/main/res/values-da/strings.xml
deleted file mode 100644
index 66e117c4..00000000
--- a/twitter-mopub/src/main/res/values-da/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Privatlivs-ikon</string>
-    <string name="tw__sponsored">Dette er en sponsoreret annonce</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-de/strings.xml b/twitter-mopub/src/main/res/values-de/strings.xml
deleted file mode 100644
index 21b1602b..00000000
--- a/twitter-mopub/src/main/res/values-de/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Datenschutzsymbol</string>
-    <string name="tw__sponsored">Dies ist eine gesponserte Anzeige</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-el/strings.xml b/twitter-mopub/src/main/res/values-el/strings.xml
deleted file mode 100644
index ed03bfe7..00000000
--- a/twitter-mopub/src/main/res/values-el/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Εικονίδιο απορρήτου</string>
-    <string name="tw__sponsored">Αυτή είναι μια χορηγούμενη διαφήμιση</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-en-rGB/strings.xml b/twitter-mopub/src/main/res/values-en-rGB/strings.xml
deleted file mode 100644
index b97a24fd..00000000
--- a/twitter-mopub/src/main/res/values-en-rGB/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Privacy Icon</string>
-    <string name="tw__sponsored">This is a sponsored ad</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-en-rSS/strings.xml b/twitter-mopub/src/main/res/values-en-rSS/strings.xml
deleted file mode 100644
index 996c7c73..00000000
--- a/twitter-mopub/src/main/res/values-en-rSS/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">[[153332]] Privacy Icon</string>
-    <string name="tw__sponsored">[[153331]] This is a sponsored ad</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-es/strings.xml b/twitter-mopub/src/main/res/values-es/strings.xml
deleted file mode 100644
index c7b534e6..00000000
--- a/twitter-mopub/src/main/res/values-es/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ícono de privacidad</string>
-    <string name="tw__sponsored">Anuncio patrocinado</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-fa/strings.xml b/twitter-mopub/src/main/res/values-fa/strings.xml
deleted file mode 100644
index 615acea7..00000000
--- a/twitter-mopub/src/main/res/values-fa/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">نماد حریم خصوصی</string>
-    <string name="tw__sponsored">این تبلیغ دارای پشتیبان مالی است</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-fi/strings.xml b/twitter-mopub/src/main/res/values-fi/strings.xml
deleted file mode 100644
index 686c3fa4..00000000
--- a/twitter-mopub/src/main/res/values-fi/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Yksityisyyskuvake</string>
-    <string name="tw__sponsored">Tämä on sponsoroitu mainos</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-fr/strings.xml b/twitter-mopub/src/main/res/values-fr/strings.xml
deleted file mode 100644
index b59044c2..00000000
--- a/twitter-mopub/src/main/res/values-fr/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Icône  de Confidentialité</string>
-    <string name="tw__sponsored">Ceci est une publicité sponsorisée</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-gu/strings.xml b/twitter-mopub/src/main/res/values-gu/strings.xml
deleted file mode 100644
index 16c39ecb..00000000
--- a/twitter-mopub/src/main/res/values-gu/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">ગોપનીયતા ચિહ્ન</string>
-    <string name="tw__sponsored">આ સ્પોન્સર્ડ જાહેરાત છે</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-hi/strings.xml b/twitter-mopub/src/main/res/values-hi/strings.xml
deleted file mode 100644
index 5c930204..00000000
--- a/twitter-mopub/src/main/res/values-hi/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">गोपनीयता आइकन</string>
-    <string name="tw__sponsored">यह एक प्रायोजित विज्ञापन है</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-hr/strings.xml b/twitter-mopub/src/main/res/values-hr/strings.xml
deleted file mode 100644
index bf7c5544..00000000
--- a/twitter-mopub/src/main/res/values-hr/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ikona zaštite privatnosti</string>
-    <string name="tw__sponsored">Ovo je plaćeni oglas</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-hu/strings.xml b/twitter-mopub/src/main/res/values-hu/strings.xml
deleted file mode 100644
index 9050e6f9..00000000
--- a/twitter-mopub/src/main/res/values-hu/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Adatvédelmi ikon</string>
-    <string name="tw__sponsored">A hirdetés szponzorált</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-in/strings.xml b/twitter-mopub/src/main/res/values-in/strings.xml
deleted file mode 100644
index 35f07e92..00000000
--- a/twitter-mopub/src/main/res/values-in/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ikon Privasi</string>
-    <string name="tw__sponsored">Ini adalah iklan bersponsor</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-it/strings.xml b/twitter-mopub/src/main/res/values-it/strings.xml
deleted file mode 100644
index d7b4e7c6..00000000
--- a/twitter-mopub/src/main/res/values-it/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Icona della privacy</string>
-    <string name="tw__sponsored">Questo è un annuncio sponsorizzato</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-iw/strings.xml b/twitter-mopub/src/main/res/values-iw/strings.xml
deleted file mode 100644
index 33fbbd43..00000000
--- a/twitter-mopub/src/main/res/values-iw/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">סמל פרטיות</string>
-    <string name="tw__sponsored">זוהי מודעה ממומנת</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ja/strings.xml b/twitter-mopub/src/main/res/values-ja/strings.xml
deleted file mode 100644
index 20af95b0..00000000
--- a/twitter-mopub/src/main/res/values-ja/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">プライバシーアイコン</string>
-    <string name="tw__sponsored">スポンサー広告</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-kn/strings.xml b/twitter-mopub/src/main/res/values-kn/strings.xml
deleted file mode 100644
index 3c6c1602..00000000
--- a/twitter-mopub/src/main/res/values-kn/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">ಗೌಪ್ಯತೆ ಐಕಾನ್</string>
-    <string name="tw__sponsored">ಇಉ ಒಂದು ಪ್ರಾಯೋಜಿತ ಜಾಹೀರಾತು</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ko/strings.xml b/twitter-mopub/src/main/res/values-ko/strings.xml
deleted file mode 100644
index e5f528bc..00000000
--- a/twitter-mopub/src/main/res/values-ko/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">개인정보 공개 설정 아이콘</string>
-    <string name="tw__sponsored">스폰서 광고입니다</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-mr/strings.xml b/twitter-mopub/src/main/res/values-mr/strings.xml
deleted file mode 100644
index a1bfaf05..00000000
--- a/twitter-mopub/src/main/res/values-mr/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">गोपनीयता चिन्ह</string>
-    <string name="tw__sponsored">ही प्रायोजित जाहिरात आहे</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ms/strings.xml b/twitter-mopub/src/main/res/values-ms/strings.xml
deleted file mode 100644
index dafe96c4..00000000
--- a/twitter-mopub/src/main/res/values-ms/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ikon Privasi</string>
-    <string name="tw__sponsored">Ini ialah iklan yang ditaja</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-nb/strings.xml b/twitter-mopub/src/main/res/values-nb/strings.xml
deleted file mode 100644
index b7d236b9..00000000
--- a/twitter-mopub/src/main/res/values-nb/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Personvern-ikon</string>
-    <string name="tw__sponsored">Dette er en sponset reklame</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-nl/strings.xml b/twitter-mopub/src/main/res/values-nl/strings.xml
deleted file mode 100644
index 8e13a3b3..00000000
--- a/twitter-mopub/src/main/res/values-nl/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Privacy-pictogram</string>
-    <string name="tw__sponsored">Dit is een gesponsorde advertentie</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-pl/strings.xml b/twitter-mopub/src/main/res/values-pl/strings.xml
deleted file mode 100644
index e50e4421..00000000
--- a/twitter-mopub/src/main/res/values-pl/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ikona prywatności</string>
-    <string name="tw__sponsored">To jest reklama sponsorowana</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-pt/strings.xml b/twitter-mopub/src/main/res/values-pt/strings.xml
deleted file mode 100644
index 1b43f4fd..00000000
--- a/twitter-mopub/src/main/res/values-pt/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ícone de Privacidade</string>
-    <string name="tw__sponsored">Este anúncio é patrocinado</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ro/strings.xml b/twitter-mopub/src/main/res/values-ro/strings.xml
deleted file mode 100644
index fc2439fe..00000000
--- a/twitter-mopub/src/main/res/values-ro/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Pictograma Confidențialitate</string>
-    <string name="tw__sponsored">Aceasta este o reclamă sponsorizată</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ru/strings.xml b/twitter-mopub/src/main/res/values-ru/strings.xml
deleted file mode 100644
index dbeae555..00000000
--- a/twitter-mopub/src/main/res/values-ru/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Значок конфиденциальности</string>
-    <string name="tw__sponsored">Это рекламное объявление</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-sk/strings.xml b/twitter-mopub/src/main/res/values-sk/strings.xml
deleted file mode 100644
index 58a86276..00000000
--- a/twitter-mopub/src/main/res/values-sk/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ikona súkromia</string>
-    <string name="tw__sponsored">Toto je sponzorovaná reklama</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-sr/strings.xml b/twitter-mopub/src/main/res/values-sr/strings.xml
deleted file mode 100644
index 645ece4c..00000000
--- a/twitter-mopub/src/main/res/values-sr/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Иконица приватности</string>
-    <string name="tw__sponsored">Ово је спонзорисани оглас</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-sv/strings.xml b/twitter-mopub/src/main/res/values-sv/strings.xml
deleted file mode 100644
index 091788aa..00000000
--- a/twitter-mopub/src/main/res/values-sv/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Integritet Ikon</string>
-    <string name="tw__sponsored">Detta är en sponsrad annons</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ta/strings.xml b/twitter-mopub/src/main/res/values-ta/strings.xml
deleted file mode 100644
index efb0ee07..00000000
--- a/twitter-mopub/src/main/res/values-ta/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">தனியுரிமைப் படவுரு</string>
-    <string name="tw__sponsored">இது ஸ்பான்சர் செய்யப்பட்ட விளம்பரம்</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-th/strings.xml b/twitter-mopub/src/main/res/values-th/strings.xml
deleted file mode 100644
index 8db7312b..00000000
--- a/twitter-mopub/src/main/res/values-th/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">ไอคอนความเป็นส่วนตัว</string>
-    <string name="tw__sponsored">นี่คือโฆษณาที่ได้รับการสนับสนุน</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-tl/strings.xml b/twitter-mopub/src/main/res/values-tl/strings.xml
deleted file mode 100644
index f1df3bb5..00000000
--- a/twitter-mopub/src/main/res/values-tl/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Icon ng Pagkapribado</string>
-    <string name="tw__sponsored">Ito ay isang sponsored ad</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-tr/strings.xml b/twitter-mopub/src/main/res/values-tr/strings.xml
deleted file mode 100644
index 8baf1f6b..00000000
--- a/twitter-mopub/src/main/res/values-tr/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Gizlilik Simgesi</string>
-    <string name="tw__sponsored">Bu sponsorlu bir reklamdır</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-uk/strings.xml b/twitter-mopub/src/main/res/values-uk/strings.xml
deleted file mode 100644
index 31f83f64..00000000
--- a/twitter-mopub/src/main/res/values-uk/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Значок конфіденційності</string>
-    <string name="tw__sponsored">Це рекламне оголошення</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ur/strings.xml b/twitter-mopub/src/main/res/values-ur/strings.xml
deleted file mode 100644
index bafd7eee..00000000
--- a/twitter-mopub/src/main/res/values-ur/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">پرائیویسی آئیکن</string>
-    <string name="tw__sponsored">یہ اسپانسرشدہ اشتہار ہے</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-vi/strings.xml b/twitter-mopub/src/main/res/values-vi/strings.xml
deleted file mode 100644
index 2d07ac1e..00000000
--- a/twitter-mopub/src/main/res/values-vi/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Biểu tượng Quyền riêng tư</string>
-    <string name="tw__sponsored">Đây là một quảng cáo có tài trợ</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-zh-rCN/strings.xml b/twitter-mopub/src/main/res/values-zh-rCN/strings.xml
deleted file mode 100644
index 96d9a3ad..00000000
--- a/twitter-mopub/src/main/res/values-zh-rCN/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">隐私图标</string>
-    <string name="tw__sponsored">这是一则赞助广告</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-zh-rTW/strings.xml b/twitter-mopub/src/main/res/values-zh-rTW/strings.xml
deleted file mode 100644
index 4d1fe9af..00000000
--- a/twitter-mopub/src/main/res/values-zh-rTW/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">隱私權圖示</string>
-    <string name="tw__sponsored">這是贊助廣告</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values/attrs.xml b/twitter-mopub/src/main/res/values/attrs.xml
deleted file mode 100644
index c0bc763d..00000000
--- a/twitter-mopub/src/main/res/values/attrs.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <declare-styleable name="tw__native_ad">
-        <attr name="tw__ad_container_bg_color" format="color"/>
-        <attr name="tw__ad_card_bg_color" format="color"/>
-        <attr name="tw__ad_text_primary_color" format="color"/>
-        <attr name="tw__ad_cta_button_color" format="color"/>
-    </declare-styleable>
-</resources>
diff --git a/twitter-mopub/src/main/res/values/colors.xml b/twitter-mopub/src/main/res/values/colors.xml
deleted file mode 100644
index a59399cc..00000000
--- a/twitter-mopub/src/main/res/values/colors.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <color name="tw__ad_light_container_bg_color">#F5F8FA</color>
-    <color name="tw__ad_light_card_bg_color">@android:color/white</color>
-    <color name="tw__ad_light_card_border_color">#E1E8ED</color>
-    <color name="tw__ad_light_text_primary_color">#292F33</color>
-
-    <color name="tw__ad_dark_container_bg_color">#000000</color>
-    <color name="tw__ad_dark_card_bg_color">#292F33</color>
-    <color name="tw__ad_dark_card_border_color">#8899A6</color>
-    <color name="tw__ad_dark_text_primary_color">#F5F8FA</color>
-
-    <color name="tw__ad_cta_default">#1B95E0</color>
-</resources>
diff --git a/twitter-mopub/src/main/res/values/dimens.xml b/twitter-mopub/src/main/res/values/dimens.xml
deleted file mode 100644
index 78dd8764..00000000
--- a/twitter-mopub/src/main/res/values/dimens.xml
+++ /dev/null
@@ -1,41 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <!-- Root layout -->
-    <dimen name="tw__ad_layout_padding">14dp</dimen>
-    <dimen name="tw__ad_layout_padding_bottom">0dp</dimen>
-
-    <!-- Ad space: image, icon and text -->
-    <dimen name="tw__ad_view_radius">5dp</dimen>
-    <dimen name="tw__ad_space_padding">12dp</dimen>
-    <dimen name="tw__ad_icon_margin_left">2dp</dimen>
-    <dimen name="tw__ad_icon_margin_right">2dp</dimen>
-    <dimen name="tw__ad_icon_size">40dp</dimen>
-    <dimen name="tw__ad_title_margin_left">8dp</dimen>
-
-    <!-- Privacy -->
-    <dimen name="tw__ad_privacy_margin_left">-10dp</dimen>
-    <dimen name="tw__ad_privacy_icon_size">40dp</dimen>
-    <dimen name="tw__ad_privacy_icon_padding">10dp</dimen>
-    <dimen name="tw__ad_privacy_text_margin_left">-5dp</dimen>
-
-    <!--density-independent(micro 10sp, small 12sp, medium 14sp, large 16sp)-->
-    <dimen name="tw__ad_text_size_large">16sp</dimen>
-    <dimen name="tw__ad_text_size_medium">14sp</dimen>
-    <dimen name="tw__ad_text_size_small">12sp</dimen>
-</resources>
\ No newline at end of file
diff --git a/twitter-mopub/src/main/res/values/public.xml b/twitter-mopub/src/main/res/values/public.xml
deleted file mode 100644
index 67e3b769..00000000
--- a/twitter-mopub/src/main/res/values/public.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <!--suppress UnusedResources -->
-    <public type="style" name="tw__ad_LightStyle"/>
-    <!--suppress UnusedResources -->
-    <public type="style" name="tw__ad_DarkStyle"/>
-</resources>
\ No newline at end of file
diff --git a/twitter-mopub/src/main/res/values/strings.xml b/twitter-mopub/src/main/res/values/strings.xml
deleted file mode 100644
index 9d93e13f..00000000
--- a/twitter-mopub/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-  <string name="tw__sponsored">This is a sponsored ad</string>
-  <string name="tw__privacy_icon_content_desc">Privacy Icon</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values/styles.xml b/twitter-mopub/src/main/res/values/styles.xml
deleted file mode 100644
index b8cf720d..00000000
--- a/twitter-mopub/src/main/res/values/styles.xml
+++ /dev/null
@@ -1,35 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <style name="tw_ad_BaseStyle">
-        <item name="tw__ad_cta_button_color">@color/tw__ad_cta_default</item>
-    </style>
-
-    <style name="tw__ad_LightStyle" parent="tw_ad_BaseStyle">
-        <item name="tw__ad_container_bg_color">@color/tw__ad_light_container_bg_color</item>
-        <item name="tw__ad_card_bg_color">@color/tw__ad_light_card_bg_color</item>
-        <item name="tw__ad_text_primary_color">@color/tw__ad_light_text_primary_color</item>
-    </style>
-
-    <style name="tw__ad_DarkStyle" parent="tw_ad_BaseStyle">
-        <item name="tw__ad_container_bg_color">@color/tw__ad_dark_container_bg_color</item>
-        <item name="tw__ad_card_bg_color">@color/tw__ad_dark_card_bg_color</item>
-        <item name="tw__ad_text_primary_color">@color/tw__ad_dark_text_primary_color</item>
-    </style>
-</resources>
diff --git a/twitter-mopub/src/main/res/values/tw__native_ad_styles.xml b/twitter-mopub/src/main/res/values/tw__native_ad_styles.xml
deleted file mode 100644
index 6bbab88f..00000000
--- a/twitter-mopub/src/main/res/values/tw__native_ad_styles.xml
+++ /dev/null
@@ -1,35 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:android="http://schemas.android.com/apk/res/android">
-    <style name="tw__ad_container">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:orientation">vertical</item>
-        <item name="android:paddingTop">@dimen/tw__ad_layout_padding</item>
-        <item name="android:paddingLeft">@dimen/tw__ad_layout_padding</item>
-        <item name="android:paddingRight">@dimen/tw__ad_layout_padding</item>
-        <item name="android:paddingBottom">@dimen/tw__ad_layout_padding_bottom</item>
-    </style>
-
-    <style name="tw__ad_cta_button">
-        <item name="android:layout_width">fill_parent</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:textSize">@dimen/tw__ad_text_size_medium</item>
-        <item name="android:gravity">center</item>
-    </style>
-</resources>
\ No newline at end of file
diff --git a/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/ColorUtilsTest.java b/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/ColorUtilsTest.java
deleted file mode 100644
index 0f84aae3..00000000
--- a/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/ColorUtilsTest.java
+++ /dev/null
@@ -1,108 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub;
-
-import android.graphics.Color;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
-
-@RunWith(RobolectricTestRunner.class)
-public class ColorUtilsTest {
-
-    @Test
-    public void testIsLightColor_black() {
-        assertFalse(ColorUtils.isLightColor(Color.BLACK));
-    }
-
-    @Test
-    public void testIsLightColor_white() {
-        assertTrue(ColorUtils.isLightColor(Color.WHITE));
-    }
-
-    @Test
-    public void testDefaultCtaButtonIsDarkColor() {
-        assertFalse(ColorUtils.isLightColor(R.color.tw__ad_cta_default));
-    }
-
-    @Test
-    public void testCtaTextColorIsLightForDarkBgColor() {
-        assertEquals(Color.WHITE, ColorUtils.calculateCtaTextColor(R.color.tw__ad_cta_default));
-        assertEquals(Color.WHITE, ColorUtils.calculateCtaTextColor(Color.BLACK));
-        assertEquals(Color.WHITE, ColorUtils.calculateCtaTextColor(Color.DKGRAY));
-    }
-
-    @Test
-    public void testCtaTextColorIsDarkForLightBgColor() {
-        assertTrue(Color.WHITE != ColorUtils.calculateCtaTextColor(Color.WHITE));
-        assertTrue(Color.WHITE != ColorUtils.calculateCtaTextColor(Color.LTGRAY));
-    }
-
-    @Test
-    public void testCTAOnTapColorIsLighterForDarkBgColor() {
-        final int darkColor = Color.BLACK;
-        final int originalRed = Color.red(darkColor);
-        final int originalGreen = Color.green(darkColor);
-        final int originalBlue = Color.blue(darkColor);
-
-        final int lighterColor = ColorUtils.calculateCtaOnTapColor(darkColor);
-        final int lighterRed = Color.red(lighterColor);
-        final int lighterGreen = Color.green(lighterColor);
-        final int lighterBlue = Color.blue(lighterColor);
-
-        assertTrue(lighterRed > originalRed
-                && lighterGreen > originalGreen
-                && lighterBlue > originalBlue);
-    }
-
-    @Test
-    public void testCTAOnTapColorIsDarkerForLightBgColor() {
-        final int lightColor = Color.WHITE;
-        final int originalRed = Color.red(lightColor);
-        final int originalGreen = Color.green(lightColor);
-        final int originalBlue = Color.blue(lightColor);
-
-        final int darkerColor = ColorUtils.calculateCtaOnTapColor(lightColor);
-        final int darkerRed = Color.red(darkerColor);
-        final int darkerGreen = Color.green(darkerColor);
-        final int darkerBlue = Color.blue(darkerColor);
-
-        assertTrue(originalRed > darkerRed
-                && originalGreen > darkerGreen
-                && originalBlue > darkerBlue);
-    }
-
-    @Test
-    public void testContrastColorForDarkColor() {
-        final int darkColor = Color.BLACK;
-        final int contrastingLightColor = ColorUtils.calculateContrastingColor(darkColor);
-        assertTrue(ColorUtils.isLightColor(contrastingLightColor));
-    }
-
-    @Test
-    public void testContrastColorForLightColor() {
-        final int lightColor = Color.WHITE;
-        final int contrastingDarkColor = ColorUtils.calculateContrastingColor(lightColor);
-        assertFalse(ColorUtils.isLightColor(contrastingDarkColor));
-    }
-}
diff --git a/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdRendererTest.java b/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdRendererTest.java
deleted file mode 100644
index b8b087ea..00000000
--- a/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdRendererTest.java
+++ /dev/null
@@ -1,144 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub;
-
-import android.content.Context;
-import android.graphics.Bitmap;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ImageView;
-import android.widget.TextView;
-
-import com.mopub.nativeads.BaseNativeAd;
-import com.mopub.nativeads.StaticNativeAd;
-import com.mopub.network.MaxWidthImageLoader;
-import com.mopub.network.Networking;
-import com.mopub.volley.toolbox.ImageLoader;
-import com.twitter.sdk.android.mopub.internal.RoundedImageView;
-
-import org.junit.Before;
-import org.junit.Rule;
-import org.junit.Test;
-import org.junit.rules.ExpectedException;
-import org.junit.runner.RunWith;
-import org.mockito.Mock;
-import org.mockito.MockitoAnnotations;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
-import static org.mockito.Matchers.any;
-import static org.mockito.Matchers.anyString;
-import static org.mockito.Mockito.doAnswer;
-import static org.mockito.Mockito.doReturn;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-@RunWith(RobolectricTestRunner.class)
-public class TwitterStaticNativeAdRendererTest {
-    private static final String TEST_TITLE = "title";
-    private static final String TEST_TEXT = "text";
-    private static final String TEST_CTA = "cta";
-    private static final String TEST_URL = "https://twitter.com";
-
-    private TwitterStaticNativeAdRenderer twitterStaticNativeAdRenderer;
-    private StaticNativeAd staticNativeAd;
-    private TwitterStaticNativeAd twitterStaticNativeAd;
-    @Mock
-    private ViewGroup viewGroup;
-    @Mock
-    private MaxWidthImageLoader mockImageLoader;
-    @Mock
-    private ImageLoader.ImageContainer mockImageContainer;
-    @Mock
-    private Bitmap mockBitmap;
-    @Rule
-    public ExpectedException thrown = ExpectedException.none();
-
-    @Before
-    public void setUp() throws Exception {
-        MockitoAnnotations.initMocks(this);
-
-        Networking.setImageLoaderForTesting(mockImageLoader);
-        doReturn(mockBitmap).when(mockImageContainer).getBitmap();
-
-        doAnswer(invocation -> {
-            final Object[] args = invocation.getArguments();
-            ((ImageLoader.ImageListener) args[1]).onResponse(mockImageContainer, true);
-            return null;
-        }).when(mockImageLoader).get(anyString(), any(ImageLoader.ImageListener.class));
-
-        twitterStaticNativeAdRenderer = new TwitterStaticNativeAdRenderer();
-
-        twitterStaticNativeAd = new TwitterStaticNativeAd(RuntimeEnvironment.application);
-        twitterStaticNativeAd.adTextView = mock(TextView.class);
-        twitterStaticNativeAd.adTitleView = mock(TextView.class);
-        twitterStaticNativeAd.callToActionView = mock(TextView.class);
-        twitterStaticNativeAd.mainImageView = mock(RoundedImageView.class);
-        twitterStaticNativeAd.adIconView = mock(ImageView.class);
-        twitterStaticNativeAd.privacyInfoView = mock(ImageView.class);
-
-        staticNativeAd = new StaticNativeAd() { };
-        staticNativeAd.setTitle(TEST_TITLE);
-        staticNativeAd.setText(TEST_TEXT);
-        staticNativeAd.setCallToAction(TEST_CTA);
-        staticNativeAd.setClickDestinationUrl(TEST_URL);
-        staticNativeAd.setMainImageUrl(TEST_URL);
-        staticNativeAd.setIconImageUrl(TEST_URL);
-        staticNativeAd.setPrivacyInformationIconClickThroughUrl(TEST_URL);
-        staticNativeAd.setPrivacyInformationIconImageUrl(TEST_URL);
-    }
-
-    @Test(expected = NullPointerException.class)
-    public void testCreateAdView_withNullContext_shouldThrowNPE() {
-        twitterStaticNativeAdRenderer.createAdView(null, viewGroup);
-    }
-
-    @Test(expected = NullPointerException.class)
-    public void testRenderAdView_withNullView_shouldThrowNPE() {
-        twitterStaticNativeAdRenderer.renderAdView(null, staticNativeAd);
-    }
-
-    @Test(expected = NullPointerException.class)
-    public void testRenderAdView_withNullNativeAd_shouldThrowNPE() {
-        twitterStaticNativeAdRenderer.renderAdView(twitterStaticNativeAd, null);
-    }
-
-    @Test
-    public void testRenderAdView_shouldReturnPopulatedView() {
-        when(twitterStaticNativeAd.privacyInfoView.getContext()).thenReturn(mock(Context.class));
-        twitterStaticNativeAdRenderer.renderAdView(twitterStaticNativeAd, staticNativeAd);
-
-        verify(twitterStaticNativeAd.adTitleView).setText(TEST_TITLE);
-        verify(twitterStaticNativeAd.adTextView).setText(TEST_TEXT);
-        verify(twitterStaticNativeAd.callToActionView).setText(TEST_CTA);
-        verify(twitterStaticNativeAd.mainImageView).setImageBitmap(mockBitmap);
-        verify(twitterStaticNativeAd.adIconView).setImageBitmap(mockBitmap);
-        verify(twitterStaticNativeAd.privacyInfoView).setImageBitmap(mockBitmap);
-        verify(twitterStaticNativeAd.privacyInfoView)
-                .setOnClickListener(any(View.OnClickListener.class));
-    }
-
-    @Test
-    public void testSupports_withCorrectInstanceOfBaseNativeAd_shouldReturnTrue() throws Exception {
-        assertTrue(twitterStaticNativeAdRenderer.supports(new StaticNativeAd() {}));
-        assertFalse(twitterStaticNativeAdRenderer.supports(mock(BaseNativeAd.class)));
-    }
-}
diff --git a/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdTest.java b/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdTest.java
deleted file mode 100644
index 9b822acd..00000000
--- a/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdTest.java
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub;
-
-import android.test.AndroidTestCase;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-@RunWith(RobolectricTestRunner.class)
-public class TwitterStaticNativeAdTest extends AndroidTestCase {
-
-    @Test
-    public void testStyleAttrsForDefaultTheme() {
-        final TwitterStaticNativeAd nativeAd =
-                new TwitterStaticNativeAd(RuntimeEnvironment.application);
-        final int expectedContainerBgColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_light_container_bg_color);
-        final int expectedCardBgColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_light_card_bg_color);
-        final int expectedPrimaryTextColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_light_text_primary_color);
-        final int ctaBackgroundColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_cta_default);
-        final int cardBorderColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_light_card_border_color);
-
-        assertEquals(expectedContainerBgColor, nativeAd.containerBackgroundColor);
-        assertEquals(expectedCardBgColor, nativeAd.cardBackgroundColor);
-        assertEquals(expectedPrimaryTextColor, nativeAd.primaryTextColor);
-        assertEquals(ctaBackgroundColor, nativeAd.ctaBackgroundColor);
-        assertEquals(cardBorderColor, nativeAd.cardBorderColor);
-    }
-
-    @Test
-    public void testStyleAttrsForDarkTheme() {
-        final TwitterStaticNativeAd nativeAd =
-                new TwitterStaticNativeAd(RuntimeEnvironment.application, null,
-                        R.style.tw__ad_DarkStyle);
-
-        final int expectedContainerBgColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_dark_container_bg_color);
-        final int expectedCardBgColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_dark_card_bg_color);
-        final int expectedPrimaryTextColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_dark_text_primary_color);
-        final int ctaBackgroundColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_cta_default);
-        final int cardBorderColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_dark_card_border_color);
-
-        assertEquals(expectedContainerBgColor, nativeAd.containerBackgroundColor);
-        assertEquals(expectedCardBgColor, nativeAd.cardBackgroundColor);
-        assertEquals(expectedPrimaryTextColor, nativeAd.primaryTextColor);
-        assertEquals(ctaBackgroundColor, nativeAd.ctaBackgroundColor);
-        assertEquals(cardBorderColor, nativeAd.cardBorderColor);
-    }
-}
diff --git a/twitter-mopub/src/test/resources/robolectric.properties b/twitter-mopub/src/test/resources/robolectric.properties
deleted file mode 100644
index 1cb48e48..00000000
--- a/twitter-mopub/src/test/resources/robolectric.properties
+++ /dev/null
@@ -1,2 +0,0 @@
-sdk = 21
-constants = com.twitter.sdk.android.mopub.BuildConfig
\ No newline at end of file
diff --git a/twitter/build.gradle b/twitter/build.gradle
deleted file mode 100644
index 237dbf3b..00000000
--- a/twitter/build.gradle
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        versionCode 1
-        versionName version
-        minSdkVersion rootProject.minSdkVersion
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-        }
-
-        release {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-        }
-    }
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-
-    testOptions {
-        unitTests.returnDefaultValues = true
-    }
-}
-
-ext.projectDependencies = [
-        ':twitter-core' : 'com.twitter.sdk.android:twitter-core:+@aar',
-        ':tweet-ui' : 'com.twitter.sdk.android:tweet-ui:+@aar',
-        ':tweet-composer' : 'com.twitter.sdk.android:tweet-composer:+@aar'
-]
-
-dependencies {
-    compile project(':twitter-core')
-    compile project(':tweet-composer')
-    compile project(':tweet-ui')
-
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
-}
\ No newline at end of file
diff --git a/twitter/gradle.properties b/twitter/gradle.properties
deleted file mode 100644
index 0efd5190..00000000
--- a/twitter/gradle.properties
+++ /dev/null
@@ -1,26 +0,0 @@
-#
-# Copyright (C) 2015 Twitter, Inc.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-#
-
-# The to be released version. When releasing, drop -SNAPSHOT. After releasing, bump version
-# number and add back -SNAPSHOT
-version=3.3.0-SNAPSHOT
-version_code=1
-
-pom_name=Twitter Android SDK
-pom_group_id=com.twitter.sdk.android
-pom_artifact_id=twitter
-pom_packaging=aar
diff --git a/twitter/internal-build.gradle b/twitter/internal-build.gradle
deleted file mode 100644
index f067aa3a..00000000
--- a/twitter/internal-build.gradle
+++ /dev/null
@@ -1,90 +0,0 @@
-import io.fabric.gradle.weaving.ArtifactSizePlugin
-
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-apply plugin: 'com.android.library'
-apply from: rootProject.qualityScript
-apply plugin: ArtifactSizePlugin
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        versionCode 1
-        versionName version
-        group pom_group_id
-
-        minSdkVersion rootProject.minSdkVersion
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-
-            testCoverageEnabled enableTestCodeCoverage
-        }
-
-        release {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-        }
-    }
-
-    //Gradle publishes only release by default for multi module projects
-    //This will publish all build variants and we can specifically choose them
-    defaultPublishConfig 'release'
-    publishNonDefault true
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-
-    testOptions {
-        unitTests.returnDefaultValues = true
-    }
-}
-
-ext.projectDependencies = [
-        ':sdk:twitter:twitter-core',
-        ':sdk:twitter:tweet-ui',
-        ':sdk:twitter:tweet-composer'
-]
-
-dependencies {
-    projectDependencies.each { path ->
-        api project(path: path)
-    }
-
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
-}
-
-apply from: rootProject.deployScript
diff --git a/twitter/lint.xml b/twitter/lint.xml
deleted file mode 100644
index 1e8076c0..00000000
--- a/twitter/lint.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<lint>
-    <issue id="InvalidPackage" severity="ignore"/>
-</lint>
\ No newline at end of file
diff --git a/twitter/src/main/AndroidManifest.xml b/twitter/src/main/AndroidManifest.xml
deleted file mode 100644
index 2cb7bbc6..00000000
--- a/twitter/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.twitter.sdk.android" >
-
-    <application />
-
-</manifest>
