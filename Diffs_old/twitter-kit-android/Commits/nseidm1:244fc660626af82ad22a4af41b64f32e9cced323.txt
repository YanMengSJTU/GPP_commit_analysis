diff --git a/samples/app/build.gradle b/samples/app/build.gradle
deleted file mode 100644
index c1929d41..00000000
--- a/samples/app/build.gradle
+++ /dev/null
@@ -1,81 +0,0 @@
-buildscript {
-    dependencies {
-        classpath dependency.spoonGradlePlugin
-        classpath dependency.fabricGradlePlugin
-    }
-}
-
-//Load API Key information in from property file
-Properties props = new Properties()
-try {
-    props.load(file('fabric.properties').newDataInputStream())
-} catch (Exception ex) {
-    throw new GradleException("Missing fabric.properties, check the fabric.properties.sample file.");
-}
-
-apply plugin: 'com.android.application'
-apply plugin: 'io.fabric'
-apply plugin: 'spoon'
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        applicationId "com.example.app.twitter"
-        versionCode 1
-        versionName "1.0"
-        minSdkVersion rootProject.minSdkVersion.twitter
-        targetSdkVersion rootProject.targetSdkVersion
-        testInstrumentationRunner "com.example.app.SpoonInstrumentationTestRunner"
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "CONSUMER_KEY", "\"${props.getProperty("twitterConsumerKey")}\""
-            buildConfigField "String", "CONSUMER_SECRET", "\"${props.getProperty("twitterConsumerSecret")}\""
-            buildConfigField "String", "MOPUB_AD_UNIT_ID", "\"${props.getProperty("mopubAdUnitId")}\""
-        }
-        release {
-            buildConfigField "String", "CONSUMER_KEY", "\"${props.getProperty("twitterConsumerKey")}\""
-            buildConfigField "String", "CONSUMER_SECRET", "\"${props.getProperty("twitterConsumerSecret")}\""
-            buildConfigField "String", "MOPUB_AD_UNIT_ID", "\"${props.getProperty("mopubAdUnitId")}\""
-            minifyEnabled true
-            proguardFiles getDefaultProguardFile('proguard-android.txt')
-        }
-    }
-
-    packagingOptions {
-        exclude 'LICENSE.txt'
-    }
-
-    spoon {
-        if (project.hasProperty('spoonClassName')) {
-            className = project.spoonClassName
-        }
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-}
-
-dependencies {
-    compile project(':twitter')
-    compile project(':twitter-mopub')
-    compile dependency.appCompat
-    compile dependency.design
-    compile dependency.okHttpInterceptor
-
-    debugCompile dependency.leakCanary
-    releaseCompile dependency.leakCanaryNoOp
-
-    androidTestCompile dependency.spoon
-    androidTestCompile dependency.espresso
-    androidTestCompile dependency.androidTestingSupport
-}
diff --git a/samples/app/fabric.properties.sample b/samples/app/fabric.properties.sample
deleted file mode 100644
index c8f49227..00000000
--- a/samples/app/fabric.properties.sample
+++ /dev/null
@@ -1,7 +0,0 @@
-#These keys are provisioned on the plugin. Copy the keys on the plugin here.
-twitterConsumerKey=EDIT_THIS
-twitterConsumerSecret=EDIT_THIS
-
-#Contains API Secret used to validate your application. Commit to internal source control; avoid making secret public.
-apiKey=EDIT_THIS
-apiSecret=EDIT_THIS
\ No newline at end of file
diff --git a/samples/app/internal-build.gradle b/samples/app/internal-build.gradle
deleted file mode 100644
index a671a371..00000000
--- a/samples/app/internal-build.gradle
+++ /dev/null
@@ -1,100 +0,0 @@
-buildscript {
-    repositories {
-        jcenter()
-        maven { url 'https://maven.fabric.io/public' }
-    }
-
-    dependencies {
-        classpath dependency.spoonGradlePlugin
-        classpath dependency.androidGradlePlugin
-        classpath dependency.fabricGradlePlugin
-    }
-}
-
-// Load API Key information in from property file
-Properties props = new Properties()
-File propsFile = file('fabric.properties')
-if (propsFile.exists()) {
-    props.load(propsFile.newDataInputStream())
-} else if (System.env.TWITTER_KEY != null && System.env.TWITTER_SECRET != null) {
-    props.setProperty("twitterConsumerKey", System.env.TWITTER_KEY)
-    props.setProperty("twitterConsumerSecret", System.env.TWITTER_SECRET)
-} else {
-    throw new GradleException("Missing fabric.properties, check the fabric.properties.sample file.");
-}
-
-apply plugin: 'com.android.application'
-apply plugin: 'io.fabric'
-apply plugin: 'spoon'
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        applicationId "com.example.app.twitter"
-        versionCode 1
-        versionName "1.0"
-        minSdkVersion rootProject.minSdkVersion.twitter
-        targetSdkVersion rootProject.targetSdkVersion
-        testInstrumentationRunner "com.example.app.SpoonInstrumentationTestRunner"
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "CONSUMER_KEY", "\"${props.getProperty("twitterConsumerKey")}\""
-            buildConfigField "String", "CONSUMER_SECRET", "\"${props.getProperty("twitterConsumerSecret")}\""
-            buildConfigField "String", "MOPUB_AD_UNIT_ID", "\"${props.getProperty("mopubAdUnitId")}\""
-        }
-        release {
-            buildConfigField "String", "CONSUMER_KEY", "\"${props.getProperty("twitterConsumerKey")}\""
-            buildConfigField "String", "CONSUMER_SECRET", "\"${props.getProperty("twitterConsumerSecret")}\""
-            buildConfigField "String", "MOPUB_AD_UNIT_ID", "\"${props.getProperty("mopubAdUnitId")}\""
-            minifyEnabled true
-            proguardFiles getDefaultProguardFile('proguard-android.txt')
-        }
-    }
-
-    packagingOptions {
-        exclude 'LICENSE.txt'
-    }
-
-    spoon {
-        if (project.hasProperty('spoonClassName')) {
-            className = project.spoonClassName
-        }
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-}
-
-dependencies {
-    debugCompile project(path: ':sdk:twitter:twitter', configuration: 'debug')
-    debugCompile project(path: ':sdk:twitter:twitter-mopub', configuration: 'debug')
-    releaseCompile project(path: ':sdk:twitter:twitter', configuration: 'release')
-    releaseCompile project(path: ':sdk:twitter:twitter-mopub', configuration: 'release')
-
-    compile dependency.appCompat
-    compile dependency.design
-    compile dependency.okHttpInterceptor
-    debugCompile dependency.leakCanary
-    releaseCompile dependency.leakCanaryNoOp
-
-    androidTestCompile dependency.spoon
-    androidTestCompile dependency.espresso
-    androidTestCompile dependency.androidTestingSupport
-}
-
-task setupCi << {
-    propsFile.write(
-            "apiKey=$System.env.FABRIC_KEY\n" +
-            "apiSecret=$System.env.FABRIC_SECRET\n"
-    )
-}
diff --git a/samples/app/lint.xml b/samples/app/lint.xml
deleted file mode 100644
index 5d197bf8..00000000
--- a/samples/app/lint.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<lint>
-    <issue id="GoogleAppIndexingWarning" severity="ignore"/>
-    <issue id="MissingPermission" severity="ignore"/>
-    <issue id="Registered" severity="ignore"/>
-    <issue id="InvalidPackage" severity="ignore"/>
-</lint>
diff --git a/samples/app/src/androidTest/java/com/example/app/SpoonInstrumentationTestRunner.java b/samples/app/src/androidTest/java/com/example/app/SpoonInstrumentationTestRunner.java
deleted file mode 100644
index d84c31e3..00000000
--- a/samples/app/src/androidTest/java/com/example/app/SpoonInstrumentationTestRunner.java
+++ /dev/null
@@ -1,52 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app;
-
-import android.app.Application;
-import android.app.KeyguardManager;
-import android.content.Context;
-import android.os.PowerManager;
-import android.support.test.runner.AndroidJUnitRunner;
-
-// Borrowed from spoon-sample app
-// android.permission.DISABLE_KEYGUARD and android.permission.WAKE_LOCK permission is required
-public class SpoonInstrumentationTestRunner extends AndroidJUnitRunner {
-    @Override
-    public void onStart() {
-        runOnMainSync(new Runnable() {
-            @Override
-            public void run() {
-                final Application app = (Application) getTargetContext().getApplicationContext();
-                final String simpleName = SpoonInstrumentationTestRunner.class.getSimpleName();
-
-                // Unlock the device so that the tests can input keystrokes.
-                ((KeyguardManager) app.getSystemService(Context.KEYGUARD_SERVICE))
-                        .newKeyguardLock(simpleName)
-                        .disableKeyguard();
-
-                // Wake up the screen.
-                ((PowerManager) app.getSystemService(Context.POWER_SERVICE))
-                        .newWakeLock(PowerManager.FULL_WAKE_LOCK | PowerManager
-                                .ACQUIRE_CAUSES_WAKEUP | PowerManager.ON_AFTER_RELEASE, simpleName)
-                        .acquire();
-            }
-        });
-
-        super.onStart();
-    }
-}
diff --git a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/AddViewIdlingResource.java b/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/AddViewIdlingResource.java
deleted file mode 100644
index 648a84b8..00000000
--- a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/AddViewIdlingResource.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.support.test.espresso.IdlingResource;
-import android.view.View;
-
-/**
- * AddViewIdlingResource represents a view that is added after an asynchronous operation.
- * When the view is found in the layout, the resource is then idle and ready to use.
- */
-public class AddViewIdlingResource implements IdlingResource {
-
-    private int viewId;
-    private View parentView;
-    private ResourceCallback callback;
-
-    public AddViewIdlingResource(int viewId, View parentView) {
-        this.viewId = viewId;
-        this.parentView = parentView;
-    }
-
-    @Override
-    public String getName() {
-        return Integer.toString(viewId);
-    }
-
-    @Override
-    public boolean isIdleNow() {
-        final View view = parentView.findViewById(viewId);
-        if (view != null && view.getId() == viewId) {
-            callback.onTransitionToIdle();
-            return true;
-        }
-        return false;
-    }
-
-    @Override
-    public void registerIdleTransitionCallback(ResourceCallback resourceCallback) {
-        this.callback = resourceCallback;
-    }
-}
diff --git a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetActivityTest.java b/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetActivityTest.java
deleted file mode 100644
index acd10021..00000000
--- a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetActivityTest.java
+++ /dev/null
@@ -1,83 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.test.ActivityInstrumentationTestCase2;
-import android.view.View;
-
-import com.example.app.R;
-import com.example.app.tweetui.TweetActivity;
-import com.squareup.spoon.Spoon;
-
-import static android.support.test.espresso.Espresso.*;
-import static android.support.test.espresso.action.ViewActions.*;
-import static android.support.test.espresso.matcher.ViewMatchers.*;
-
-/**
- * UI/integration tests of Tweet views added to the layout via code (requires network connectivity).
- */
-public class TweetActivityTest extends ActivityInstrumentationTestCase2<TweetActivity> {
-    private static final String TAG = "TweetActivityTest";
-    private static final String EXPECTED_TIMESTAMP = "• 03/21/06";
-    private static final String EXPECTED_TEXT = "just setting up my twttr";
-    private TweetActivity activity;
-
-    public TweetActivityTest() {
-        super(TweetActivity.class);
-    }
-
-    @Override
-    public void setUp() throws Exception {
-        super.setUp();
-        setActivityInitialTouchMode(true);
-        activity = getActivity();
-        final View root = activity.findViewById(R.id.tweet_region);
-        final AddViewIdlingResource jackRes = new AddViewIdlingResource(R.id.jack_regular_tweet,
-                root);
-        final AddViewIdlingResource jackCompactRes = new AddViewIdlingResource(
-                R.id.jack_compact_tweet, root);
-        final AddViewIdlingResource bikeRes = new AddViewIdlingResource(R.id.bike_regular_tweet,
-                root);
-        final AddViewIdlingResource bikeCompactRes = new AddViewIdlingResource(
-                R.id.bike_compact_tweet, root);
-        registerIdlingResources(jackRes, jackCompactRes, bikeRes, bikeCompactRes);
-    }
-
-    public void testTweetView() throws Exception {
-        onView(withId(R.id.jack_regular_tweet)).perform(scrollTo());
-        TweetAsserts.assertTweetText(R.id.jack_regular_tweet, EXPECTED_TEXT);
-        TweetAsserts.assertTweetTimestamp(R.id.jack_regular_tweet, EXPECTED_TIMESTAMP);
-        TweetAsserts.assertVerifiedUser(R.id.jack_regular_tweet);
-        TweetAsserts.assertActionsEnabled(R.id.jack_regular_tweet);
-
-        onView(withId(R.id.bike_regular_tweet)).perform(scrollTo());
-        TweetAsserts.assertNonVerifiedUser(R.id.bike_regular_tweet);
-
-        Spoon.screenshot(activity, TAG);
-    }
-
-    public void testCompactTweetView() throws Exception {
-        onView(withId(R.id.jack_compact_tweet)).perform(scrollTo());
-        TweetAsserts.assertTweetText(R.id.jack_compact_tweet, EXPECTED_TEXT);
-        TweetAsserts.assertTweetTimestamp(R.id.jack_compact_tweet, EXPECTED_TIMESTAMP);
-        TweetAsserts.assertNonVerifiedUser(R.id.jack_compact_tweet);
-        TweetAsserts.assertActionsEnabled(R.id.jack_compact_tweet);
-
-        Spoon.screenshot(activity, TAG);
-    }
-}
diff --git a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetAsserts.java b/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetAsserts.java
deleted file mode 100644
index 48f91c7a..00000000
--- a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetAsserts.java
+++ /dev/null
@@ -1,131 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.graphics.drawable.Drawable;
-import android.support.test.espresso.matcher.BoundedMatcher;
-import android.view.View;
-import android.widget.TextView;
-
-import com.example.app.R;
-
-import org.hamcrest.Description;
-import org.hamcrest.Matcher;
-
-import java.lang.SuppressWarnings;
-import java.util.Locale;
-
-import static android.support.test.espresso.Espresso.onView;
-import static android.support.test.espresso.assertion.ViewAssertions.*;
-import static android.support.test.espresso.matcher.ViewMatchers.*;
-import static org.hamcrest.Matchers.*;
-
-public abstract class TweetAsserts {
-    @SuppressWarnings("PrivateResource")
-    public static void assertTweetText(int tweetResId, String expected) throws Exception {
-        onView(allOf(withId(R.id.tw__tweet_text),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(isDisplayed()))
-                .check(matches(withText(expected)));
-    }
-
-    @SuppressWarnings("PrivateResource")
-    public static void assertTweetTimestamp(int tweetResId, String expected) throws Exception {
-        onView(allOf(withId(R.id.tw__tweet_timestamp),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(isDisplayed()))
-                .check(matches(withText(expected)));
-    }
-
-    @SuppressWarnings("PrivateResource")
-    public static void assertVerifiedUser(int tweetResId) {
-        onView(allOf(withId(R.id.tw__tweet_author_full_name),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(hasCompoundDrawable(0, 0, R.drawable.tw__ic_tweet_verified, 0)));
-    }
-
-    @SuppressWarnings("PrivateResource")
-    public static void assertNonVerifiedUser(int tweetResId) {
-        onView(allOf(withId(R.id.tw__tweet_author_full_name),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(hasCompoundDrawable(0, 0, 0, 0)));
-    }
-
-    @SuppressWarnings("PrivateResource")
-    public static void assertActionsEnabled(int tweetResId) {
-        // tweet actions enabled
-        onView(allOf(withId(R.id.tw__tweet_action_bar),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(isDisplayed()));
-        // share tweet button
-        onView(allOf(withId(R.id.tw__tweet_share_button),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(isDisplayed()))
-                .check(matches(hasContentDescription()))
-                .check(matches(isFocusable()))
-                .check(matches(isClickable()));
-        // favorite tweet button
-        onView(allOf(withId(R.id.tw__tweet_like_button),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(isDisplayed()))
-                .check(matches(hasContentDescription()))
-                .check(matches(isFocusable()))
-                .check(matches(isClickable()));
-    }
-
-    @SuppressWarnings("PrivateResource")
-    public static void assertActionsDisabled(int tweetResId) {
-        onView(allOf(withId(R.id.tw__tweet_action_bar),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(not(isDisplayed())));
-    }
-
-    public static Matcher<View> hasCompoundDrawable(final int start, final int top,
-                                                         final int end, final int bottom) {
-        return new BoundedMatcher<View, TextView>(TextView.class){
-            @Override
-            public void describeTo(Description description) {
-                final String formatted =
-                        String.format(Locale.getDefault(),
-                                "has Compound Drawable: start=%d, top=%d, end=%d, bottom=%d",
-                                start, top, end, bottom);
-                description.appendText(formatted);
-            }
-
-            @Override
-            public boolean matchesSafely(TextView view) {
-                // We cannot verify the actual drawable, but we can verify one has been set.
-                final Drawable [] drawables = view.getCompoundDrawables();
-                if (drawables[0] != null && start == 0) {
-                    return false;
-                }
-                if (drawables[1] != null && top == 0) {
-                    return false;
-                }
-                if (drawables[2] != null && end == 0) {
-                    return false;
-                }
-                if (drawables[3] != null && bottom == 0) {
-                    return false;
-                }
-
-                return true;
-            }
-        };
-    }
-}
diff --git a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetActivityTest.java b/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetActivityTest.java
deleted file mode 100644
index 0994a455..00000000
--- a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetActivityTest.java
+++ /dev/null
@@ -1,104 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.test.ActivityInstrumentationTestCase2;
-
-import com.example.app.R;
-import com.example.app.tweetui.XmlTweetActivity;
-import com.squareup.spoon.Spoon;
-
-import static android.support.test.espresso.Espresso.*;
-import static android.support.test.espresso.action.ViewActions.*;
-import static android.support.test.espresso.matcher.ViewMatchers.*;
-
-/**
- * UI/integration tests of XML Tweet views (requires network connectivity).
- */
-public class XmlTweetActivityTest extends ActivityInstrumentationTestCase2<XmlTweetActivity> {
-    private static final String TAG = "XmlTweetActivityTest";
-    private static final String EXPECTED_TIMESTAMP = "• 03/21/06";
-    private static final String EXPECTED_TEXT = "just setting up my twttr";
-    private XmlTweetActivity activity;
-    // activity views to test
-    TweetView jackTweet;
-    TweetView bikeTweet;
-    TweetView simpsonsRetweet;
-    CompactTweetView jackCompactTweet;
-    CompactTweetView bikeCompactTweet;
-    CompactTweetView simpsonsCompactRetweet;
-
-    public XmlTweetActivityTest() {
-        super(XmlTweetActivity.class);
-    }
-
-    @Override
-    public void setUp() throws Exception {
-        super.setUp();
-        setActivityInitialTouchMode(true);
-        activity = getActivity();
-        findViews();
-        final XmlTweetViewIdlingResource jackRes = new XmlTweetViewIdlingResource(jackTweet,
-                "jack_regular_tweet");
-        final XmlTweetViewIdlingResource jackCompactRes = new XmlTweetViewIdlingResource(
-                jackCompactTweet, "jack_compact_tweet");
-        final XmlTweetViewIdlingResource bikeRes = new XmlTweetViewIdlingResource(bikeTweet,
-                "bike_regular_tweet");
-        final XmlTweetViewIdlingResource bikeCompactRes = new XmlTweetViewIdlingResource(
-                bikeCompactTweet, "bike_compact_tweet");
-        final XmlTweetViewIdlingResource simpsonsRes = new XmlTweetViewIdlingResource(
-                simpsonsRetweet, "retweet_simpsons_tweet");
-        final XmlTweetViewIdlingResource simpsonsCompactRes = new XmlTweetViewIdlingResource(
-                simpsonsCompactRetweet, "retweet_simpsons_tweet_compact");
-        registerIdlingResources(jackRes, jackCompactRes, bikeRes, bikeCompactRes,
-                simpsonsRes, simpsonsCompactRes);
-    }
-
-    private void findViews() {
-        jackTweet = (TweetView) activity.findViewById(R.id.jack_regular_tweet);
-        jackCompactTweet = (CompactTweetView) activity.findViewById(R.id.jack_compact_tweet);
-        bikeTweet = (TweetView) activity.findViewById(R.id.bike_regular_tweet);
-        bikeCompactTweet = (CompactTweetView) activity.findViewById(R.id.bike_compact_tweet);
-        simpsonsRetweet = (TweetView) activity.findViewById(R.id.retweet_simpsons_tweet);
-        simpsonsCompactRetweet
-                = (CompactTweetView) activity.findViewById(R.id.retweet_simpsons_compact_tweet);
-    }
-
-    public void testTweetView() throws Exception {
-        onView(withId(R.id.jack_regular_tweet)).perform(scrollTo());
-        TweetAsserts.assertTweetText(R.id.jack_regular_tweet, EXPECTED_TEXT);
-        TweetAsserts.assertTweetTimestamp(R.id.jack_regular_tweet, EXPECTED_TIMESTAMP);
-        TweetAsserts.assertVerifiedUser(R.id.jack_regular_tweet);
-        TweetAsserts.assertActionsDisabled(R.id.jack_regular_tweet);
-
-        onView(withId(R.id.bike_regular_tweet)).perform(scrollTo());
-        TweetAsserts.assertNonVerifiedUser(R.id.bike_regular_tweet);
-
-        Spoon.screenshot(activity, TAG);
-    }
-
-    public void testCompactTweetView() throws Exception {
-        onView(withId(R.id.jack_compact_tweet)).perform(scrollTo());
-        TweetAsserts.assertTweetText(R.id.jack_compact_tweet, EXPECTED_TEXT);
-        TweetAsserts.assertTweetTimestamp(R.id.jack_compact_tweet, EXPECTED_TIMESTAMP);
-        TweetAsserts.assertNonVerifiedUser(R.id.jack_compact_tweet);
-        TweetAsserts.assertActionsDisabled(R.id.jack_compact_tweet);
-
-        Spoon.screenshot(activity, TAG);
-    }
-}
diff --git a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetViewIdlingResource.java b/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetViewIdlingResource.java
deleted file mode 100644
index 8c7c59dd..00000000
--- a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetViewIdlingResource.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.support.test.espresso.IdlingResource;
-
-/**
- * XmlTweetViewIdlingResource represents an xml defined Tweet view which is asynchronously set
- * with a Tweet. When the Tweet and a field within the Tweet become non-null, the asynchronous
- * set is considered to have completed. The resource is then idle and ready ot use in tests.
- */
-public class XmlTweetViewIdlingResource implements IdlingResource {
-
-    private BaseTweetView view;
-    private String name;
-    private ResourceCallback callback;
-
-    public XmlTweetViewIdlingResource(BaseTweetView view, String name) {
-        this.view = view;
-        this.name = name;
-    }
-
-    @Override
-    public String getName() {
-        return name;
-    }
-
-    @Override
-    public boolean isIdleNow() {
-        // TODO: BaseTweetView should provide an indication that rendering has completed to use here
-        // XML TweetViews set a Tweet with only an id, before a Tweet is loaded from the network,
-        // checking getTweet() is non-null is not sufficient.
-        if (view.getTweet() != null && view.getTweet().text != null) {
-            callback.onTransitionToIdle();
-            return true;
-        }
-        return false;
-    }
-
-    @Override
-    public void registerIdleTransitionCallback(ResourceCallback resourceCallback) {
-        this.callback = resourceCallback;
-    }
-}
diff --git a/samples/app/src/debug/AndroidManifest.xml b/samples/app/src/debug/AndroidManifest.xml
deleted file mode 100644
index a40726b7..00000000
--- a/samples/app/src/debug/AndroidManifest.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<manifest
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <!-- For instrumentation tests -->
-    <uses-permission android:name="android.permission.DISABLE_KEYGUARD"/>
-    <uses-permission android:name="android.permission.WAKE_LOCK"/>
-
-</manifest>
diff --git a/samples/app/src/main/AndroidManifest.xml b/samples/app/src/main/AndroidManifest.xml
deleted file mode 100644
index d751253d..00000000
--- a/samples/app/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,101 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.example.app">
-
-    <uses-permission android:name="android.permission.INTERNET"/>
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
-    <uses-permission android:name="android.permission.READ_CONTACTS"/>
-
-    <application
-        android:name=".SampleApplication"
-        android:allowBackup="true"
-        android:icon="@drawable/twitter_ic_launcher"
-        android:label="@string/twitter_app_name"
-        android:supportsRtl="true"
-        android:theme="@style/TwitterSampleTheme">
-        <activity
-            android:name=".TwitterSampleActivity"
-            android:label="@string/twitter_app_name">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN"/>
-
-                <category android:name="android.intent.category.LAUNCHER"/>
-            </intent-filter>
-        </activity>
-
-        <!-- Activities for testing TwitterCore -->
-        <activity
-            android:name=".twittercore.TwitterCoreMainActivity"
-            android:label="@string/kit_twittercore"/>
-
-        <!-- Activities for testing TweetComposer -->
-        <activity
-            android:name=".tweetcomposer.TweetComposerMainActivity"
-            android:label="@string/kit_tweetcomposer"/>
-
-        <!-- Activities for testing TweetUi -->
-        <activity
-            android:name=".tweetui.TweetUiMainActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.XmlTweetActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.TweetActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.UniqueTweetActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.FixedTimelineActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.TimelineActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.TimelinesActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.TweetPreviewActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.TweetPojoActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.RtlTimelineActivity"
-            android:label="@string/kit_tweetui"/>
-
-        <receiver
-            android:name=".tweetcomposer.TweetSuccessReceiver"
-            android:exported="false">
-            <intent-filter>
-                <action android:name="com.twitter.sdk.android.tweetcomposer.UPLOAD_SUCCESS"/>
-            </intent-filter>
-        </receiver>
-
-        <receiver
-            android:name=".tweetcomposer.TweetFailureReceiver"
-            android:exported="false">
-            <intent-filter>
-                <action android:name="com.twitter.sdk.android.tweetcomposer.UPLOAD_FAILURE"/>
-            </intent-filter>
-        </receiver>
-
-    </application>
-</manifest>
diff --git a/samples/app/src/main/ic_launcher-web.png b/samples/app/src/main/ic_launcher-web.png
deleted file mode 100644
index 5c63bc5e..00000000
Binary files a/samples/app/src/main/ic_launcher-web.png and /dev/null differ
diff --git a/samples/app/src/main/java/com/example/app/BaseActivity.java b/samples/app/src/main/java/com/example/app/BaseActivity.java
deleted file mode 100644
index 5c049554..00000000
--- a/samples/app/src/main/java/com/example/app/BaseActivity.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app;
-
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
-
-/**
- * BaseActivity is an AppCompatActivity which sets up a Toolbar if present in the layout.
- */
-public class BaseActivity extends AppCompatActivity {
-
-    @Override
-    public void setContentView(int layoutResID) {
-        super.setContentView(layoutResID);
-        setupToolbar();
-    }
-
-    /**
-     * Finds and sets the Toolbar as the support ActionBar if it is non-null. Returns the Toolbar.
-     * @return The Toolbar view or null if not found.
-     */
-    protected Toolbar setupToolbar() {
-        final Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
-        if (toolbar != null) {
-            setSupportActionBar(toolbar);
-        }
-        return toolbar;
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/SampleApplication.java b/samples/app/src/main/java/com/example/app/SampleApplication.java
deleted file mode 100644
index 4d4ff900..00000000
--- a/samples/app/src/main/java/com/example/app/SampleApplication.java
+++ /dev/null
@@ -1,83 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app;
-
-import android.app.Application;
-import android.os.StrictMode;
-import android.util.Log;
-
-import io.fabric.sdk.android.DefaultLogger;
-import io.fabric.sdk.android.Fabric;
-import okhttp3.OkHttpClient;
-import okhttp3.logging.HttpLoggingInterceptor;
-
-import com.squareup.leakcanary.LeakCanary;
-import com.twitter.sdk.android.Twitter;
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterAuthConfig;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterSession;
-
-public class SampleApplication extends Application {
-    private static final String TAG = SampleApplication.class.getSimpleName();
-
-    @Override
-    public void onCreate() {
-        super.onCreate();
-        LeakCanary.install(this);
-
-        Log.d(TAG, "Setting up StrictMode policy checking.");
-        StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()
-                .detectAll()
-                .penaltyLog()
-                .build());
-
-        StrictMode.setVmPolicy(new StrictMode.VmPolicy.Builder()
-                .detectAll()
-                .penaltyLog()
-                .build());
-
-        final TwitterAuthConfig authConfig = new TwitterAuthConfig(BuildConfig.CONSUMER_KEY,
-                BuildConfig.CONSUMER_SECRET);
-
-        final Fabric fabric = new Fabric.Builder(this)
-                .kits(new Twitter(authConfig))
-                .logger(new DefaultLogger(Log.DEBUG))
-                .debuggable(true)
-                .build();
-
-        Fabric.with(fabric);
-
-        final HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();
-        loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BASIC);
-        final OkHttpClient customClient = new OkHttpClient.Builder()
-                .addInterceptor(loggingInterceptor).build();
-
-        final TwitterSession activeSession = TwitterCore.getInstance()
-                .getSessionManager().getActiveSession();
-
-        final TwitterApiClient customApiClient;
-        if (activeSession != null) {
-            customApiClient = new TwitterApiClient(activeSession, customClient);
-            TwitterCore.getInstance().addApiClient(activeSession, customApiClient);
-        } else {
-            customApiClient = new TwitterApiClient(customClient);
-            TwitterCore.getInstance().addGuestApiClient(customApiClient);
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/TwitterSampleActivity.java b/samples/app/src/main/java/com/example/app/TwitterSampleActivity.java
deleted file mode 100644
index cc97cebe..00000000
--- a/samples/app/src/main/java/com/example/app/TwitterSampleActivity.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.Menu;
-import android.view.MenuInflater;
-import android.view.View;
-
-import com.example.app.tweetcomposer.TweetComposerMainActivity;
-import com.example.app.tweetui.TweetUiMainActivity;
-import com.example.app.twittercore.TwitterCoreMainActivity;
-
-public class TwitterSampleActivity extends BaseActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.twitter_activity);
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        final MenuInflater inflater = getMenuInflater();
-        inflater.inflate(R.menu.twitter_activity_actions, menu);
-        return super.onCreateOptionsMenu(menu);
-    }
-
-    public void onTwitterCore(View view) {
-        startActivity(new Intent(this, TwitterCoreMainActivity.class));
-    }
-
-    public void onTweetComposer(View view) {
-        startActivity(new Intent(this, TweetComposerMainActivity.class));
-    }
-
-    public void onTweetUi(View view) {
-        startActivity(new Intent(this, TweetUiMainActivity.class));
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetcomposer/TweetComposerMainActivity.java b/samples/app/src/main/java/com/example/app/tweetcomposer/TweetComposerMainActivity.java
deleted file mode 100644
index 63096e59..00000000
--- a/samples/app/src/main/java/com/example/app/tweetcomposer/TweetComposerMainActivity.java
+++ /dev/null
@@ -1,110 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetcomposer;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.net.Uri;
-import android.os.Bundle;
-import android.support.v7.app.ActionBar;
-import android.util.Log;
-import android.view.View;
-import android.widget.Button;
-
-import com.example.app.BaseActivity;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.tweetcomposer.Card;
-import com.twitter.sdk.android.tweetcomposer.ComposerActivity;
-import com.twitter.sdk.android.tweetcomposer.TweetComposer;
-
-import com.example.app.R;
-
-import java.net.MalformedURLException;
-import java.net.URL;
-
-public class TweetComposerMainActivity extends BaseActivity {
-    private static final String TAG = "TweetComposer";
-    private static final String IMAGE_TYPES = "image/*";
-    private static final int IMAGE_PICKER_CODE = 141;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.tweetcomposer_activity_main);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.kit_tweetcomposer);
-        }
-
-        final Button tweetComposer = (Button) findViewById(R.id.tweet_composer);
-        tweetComposer.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                try {
-                    new TweetComposer.Builder(TweetComposerMainActivity.this)
-                            .text("Tweet from Fabric!")
-                            .url(new URL("http://www.twitter.com"))
-                            .show();
-
-                } catch (MalformedURLException e) {
-                    Log.e(TAG, "error creating tweet intent", e);
-                }
-            }
-        });
-
-        final Button organicComposer = (Button) findViewById(R.id.organic_composer);
-        organicComposer.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                launchPicker();
-            }
-        });
-    }
-
-    void launchPicker() {
-        final Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
-        intent.setType(IMAGE_TYPES);
-        startActivityForResult(Intent.createChooser(intent, "Pick an Image"), IMAGE_PICKER_CODE);
-    }
-
-    @Override
-    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        if (requestCode == IMAGE_PICKER_CODE && resultCode == Activity.RESULT_OK) {
-            launchComposer("Hello world!", data.getData());
-        }
-    }
-
-    void launchComposer(String text, Uri uri) {
-        final TwitterSession session = TwitterCore.getInstance().getSessionManager()
-                .getActiveSession();
-        final Card card = new Card.AppCardBuilder(TweetComposerMainActivity.this)
-                .imageUri(uri)
-                .iPhoneId("333903271")
-                .iPadId("333903271")
-                .googlePlayId("com.twitter.android")
-                .build();
-        final Intent intent = new ComposerActivity.Builder(TweetComposerMainActivity.this)
-                .session(session)
-                .card(card)
-                .hashtags("#fabric")
-                .createIntent();
-        startActivity(intent);
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetcomposer/TweetFailureReceiver.java b/samples/app/src/main/java/com/example/app/tweetcomposer/TweetFailureReceiver.java
deleted file mode 100644
index 51ed0787..00000000
--- a/samples/app/src/main/java/com/example/app/tweetcomposer/TweetFailureReceiver.java
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetcomposer;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-
-import com.twitter.sdk.android.tweetcomposer.TweetUploadService;
-
-public class TweetFailureReceiver extends BroadcastReceiver {
-
-    @Override
-    public void onReceive(Context context, Intent intent) {
-        Bundle intentExtras = intent.getExtras();
-        if (intentExtras != null) {
-            final Intent retryIntent
-                    = intentExtras.getParcelable(TweetUploadService.EXTRA_RETRY_INTENT);
-            Log.e("TweetFailureReceiver", retryIntent.toString());
-        }
-    }
-}
-
diff --git a/samples/app/src/main/java/com/example/app/tweetcomposer/TweetSuccessReceiver.java b/samples/app/src/main/java/com/example/app/tweetcomposer/TweetSuccessReceiver.java
deleted file mode 100644
index 5edaa4f5..00000000
--- a/samples/app/src/main/java/com/example/app/tweetcomposer/TweetSuccessReceiver.java
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetcomposer;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.os.Bundle;
-import android.widget.Toast;
-
-import com.twitter.sdk.android.tweetcomposer.TweetUploadService;
-
-public class TweetSuccessReceiver extends BroadcastReceiver {
-
-    @Override
-    public void onReceive(Context context, Intent intent) {
-        Bundle intentExtras = intent.getExtras();
-        if (intentExtras != null) {
-            Long tweetId = intentExtras.getLong(TweetUploadService.EXTRA_TWEET_ID);
-            Toast.makeText(context, "Success TweetId " + Long.toString(tweetId),
-                    Toast.LENGTH_SHORT).show();
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/CollectionTimelineFragment.java b/samples/app/src/main/java/com/example/app/tweetui/CollectionTimelineFragment.java
deleted file mode 100644
index 60057b73..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/CollectionTimelineFragment.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.ListFragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.R;
-import com.twitter.sdk.android.tweetui.CollectionTimeline;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-
-/**
- * CollectionTimelineFragment demonstrates a TimelineListAdapter with a CollectionTimeline.
- */
-public class CollectionTimelineFragment extends ListFragment {
-
-    public static CollectionTimelineFragment newInstance() {
-        return new CollectionTimelineFragment();
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        final CollectionTimeline collectionTimeline = new CollectionTimeline.Builder()
-                .id(659110687482839040L).build();
-        final TweetTimelineListAdapter adapter = new TweetTimelineListAdapter(getActivity(),
-                collectionTimeline);
-        setListAdapter(adapter);
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.tweetui_timeline, container, false);
-    }
-}
-
-
diff --git a/samples/app/src/main/java/com/example/app/tweetui/FixedTimelineActivity.java b/samples/app/src/main/java/com/example/app/tweetui/FixedTimelineActivity.java
deleted file mode 100644
index 622b8e92..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/FixedTimelineActivity.java
+++ /dev/null
@@ -1,111 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.ListFragment;
-import android.support.v7.app.ActionBar;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.Toast;
-
-import com.example.app.R;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.FixedTweetTimeline;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-import com.twitter.sdk.android.tweetui.TweetUtils;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-
-public class FixedTimelineActivity extends TweetUiActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.fixed_timeline);
-        }
-    }
-
-    @Override
-    int getLayout() {
-        return R.layout.activity_frame;
-    }
-
-    @Override
-    Fragment createFragment() {
-        return FixedTimelineFragment.newInstance();
-    }
-
-    /**
-     * Fragment showing a Timeline with a fixed list of Tweets.
-     */
-    public static class FixedTimelineFragment extends ListFragment {
-
-        final List<Long> tweetIds = new ArrayList<>();
-
-        public static FixedTimelineFragment newInstance() {
-            return new FixedTimelineFragment();
-        }
-
-        @Override
-        public void onCreate(Bundle savedInstanceState) {
-            super.onCreate(savedInstanceState);
-
-            tweetIds.addAll(Arrays.asList(574000939800993792L, 503435417459249153L, 510908133917487104L,
-                    473514864153870337L, 477788140900347904L, 20L, 484816434313195520L,
-                    466041861774114819L, 448250020773380096L));
-
-            TweetUtils.loadTweets(tweetIds, new Callback<List<Tweet>>() {
-                @Override
-                public void success(Result<List<Tweet>> result) {
-                    final FixedTweetTimeline fixedTimeline = new FixedTweetTimeline.Builder()
-                            .setTweets(result.data).build();
-                    final TweetTimelineListAdapter adapter = new TweetTimelineListAdapter(getActivity(),
-                            fixedTimeline);
-                    setListAdapter(adapter);
-                }
-
-                @Override
-                public void failure(TwitterException exception) {
-                    final Activity activity = getActivity();
-                    if (activity != null && !activity.isFinishing()) {
-                        Toast.makeText(activity, R.string.multi_tweet_view_error,
-                                Toast.LENGTH_SHORT).show();
-                    }
-                }
-            });
-        }
-
-        @Override
-        public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                                 Bundle savedInstanceState) {
-            final View view = inflater.inflate(R.layout.tweetui_timeline, container, false);
-            return view;
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/ListTimelineFragment.java b/samples/app/src/main/java/com/example/app/tweetui/ListTimelineFragment.java
deleted file mode 100644
index 753b0961..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/ListTimelineFragment.java
+++ /dev/null
@@ -1,99 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.ListFragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.R;
-
-import com.example.app.twittercore.TwitterCoreMainActivity;
-import com.google.gson.Gson;
-import com.google.gson.stream.JsonReader;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterAuthException;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.BasicTimelineFilter;
-import com.twitter.sdk.android.tweetui.FilterValues;
-import com.twitter.sdk.android.tweetui.TimelineFilter;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-import com.twitter.sdk.android.tweetui.TwitterListTimeline;
-
-import java.io.InputStream;
-import java.io.InputStreamReader;
-
-/**
- * ListTimelineFragment demonstrates a TimelineListAdapter with a TwitterListTimeline.
- */
-public class ListTimelineFragment extends ListFragment {
-
-    public static ListTimelineFragment newInstance() {
-        return new ListTimelineFragment();
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        // launch the app login activity when a guest user tries to favorite a Tweet
-        final Callback<Tweet> actionCallback = new Callback<Tweet>() {
-            @Override
-            public void success(Result<Tweet> result) {
-                // Intentionally blank
-            }
-            @Override
-            public void failure(TwitterException exception) {
-                if (exception instanceof TwitterAuthException) {
-                    startActivity(TwitterCoreMainActivity.newIntent(getActivity()));
-                }
-            }
-        };
-
-        final TwitterListTimeline timeline = new TwitterListTimeline.Builder()
-                .slugWithOwnerScreenName("twitter-bots", "dghubble")
-                .build();
-
-        final TweetTimelineListAdapter adapter =
-                new TweetTimelineListAdapter.Builder(getActivity())
-                .setTimelineFilter(getBasicTimelineFilter())
-                .setTimeline(timeline)
-                .setViewStyle(R.style.tw__TweetLightWithActionsStyle)
-                .setOnActionCallback(actionCallback)
-                .build();
-
-        setListAdapter(adapter);
-    }
-
-    private TimelineFilter getBasicTimelineFilter() {
-        final InputStream inputStream = getContext().getResources().
-                openRawResource(R.raw.filter_values);
-        final JsonReader reader = new JsonReader(new InputStreamReader(inputStream));
-        final FilterValues filterValues = new Gson().fromJson(reader, FilterValues.class);
-        return new BasicTimelineFilter(filterValues);
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.tweetui_timeline, container, false);
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/RtlTimelineActivity.java b/samples/app/src/main/java/com/example/app/tweetui/RtlTimelineActivity.java
deleted file mode 100644
index a8f765d5..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/RtlTimelineActivity.java
+++ /dev/null
@@ -1,97 +0,0 @@
-package com.example.app.tweetui;
-
-import android.annotation.TargetApi;
-import android.content.res.Configuration;
-import android.os.Build;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.ListFragment;
-import android.support.v7.app.ActionBar;
-import android.os.Bundle;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.R;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-import com.twitter.sdk.android.tweetui.UserTimeline;
-
-import java.util.Locale;
-
-public class RtlTimelineActivity extends TweetUiActivity {
-    final Locale deviceLocale = Locale.getDefault();
-
-    @Override
-    @TargetApi(Build.VERSION_CODES.JELLY_BEAN_MR1)
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.rtl_timeline);
-        }
-
-        if ( Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
-            findViewById(android.R.id.content).setLayoutDirection(View.LAYOUT_DIRECTION_RTL);
-        }
-    }
-
-    @Override
-    int getLayout() {
-        return R.layout.activity_frame;
-    }
-
-    @Override
-    Fragment createFragment() {
-        return RtlTimelineFragment.newInstance();
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-
-        final Locale locale = new Locale("ar");
-        Locale.setDefault(locale);
-        final Configuration config = getResources().getConfiguration();
-        config.locale = locale;
-        getResources().updateConfiguration(config, getResources().getDisplayMetrics());
-    }
-
-    @Override
-    public void onPause() {
-        super.onPause();
-
-        Locale.setDefault(deviceLocale);
-        final Configuration config = getResources().getConfiguration();
-        config.locale = deviceLocale;
-        getResources().updateConfiguration(config, getResources().getDisplayMetrics());
-    }
-
-    /**
-     * Fragment showing a Timeline with a list of Rtl Tweets.
-     */
-    public static class RtlTimelineFragment extends ListFragment {
-
-        public static RtlTimelineFragment newInstance() {
-            return new RtlTimelineFragment();
-        }
-
-        @Override
-        public void onCreate(Bundle savedInstanceState) {
-            super.onCreate(savedInstanceState);
-
-            final UserTimeline userTimeline = new UserTimeline.Builder()
-                    .screenName("DubaiAirportsAr")
-                    .build();
-            final TweetTimelineListAdapter adapter = new TweetTimelineListAdapter.Builder(getActivity())
-                    .setTimeline(userTimeline)
-                    .build();
-
-            setListAdapter(adapter);
-        }
-
-        @Override
-        public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                                 Bundle savedInstanceState) {
-            return inflater.inflate(R.layout.tweetui_timeline, container, false);
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/SearchTimelineFragment.java b/samples/app/src/main/java/com/example/app/tweetui/SearchTimelineFragment.java
deleted file mode 100644
index e2ca78df..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/SearchTimelineFragment.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.ListFragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.R;
-import com.twitter.sdk.android.tweetui.SearchTimeline;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-
-/**
- * SearchTimelineFragment demonstrates a TimelineListAdapter with a SearchTimeline.
- */
-public class SearchTimelineFragment extends ListFragment {
-
-    public static SearchTimelineFragment newInstance() {
-        return new SearchTimelineFragment();
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        final SearchTimeline searchTimeline = new SearchTimeline.Builder()
-                .query("#twitterflock")
-                .maxItemsPerRequest(50)
-                .build();
-        final TweetTimelineListAdapter adapter = new TweetTimelineListAdapter(getActivity(),
-                searchTimeline);
-        setListAdapter(adapter);
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-            Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.tweetui_timeline, container, false);
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/TimelineActivity.java b/samples/app/src/main/java/com/example/app/tweetui/TimelineActivity.java
deleted file mode 100644
index c7289d78..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/TimelineActivity.java
+++ /dev/null
@@ -1,131 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.support.v4.widget.SwipeRefreshLayout;
-import android.support.v7.app.ActionBar;
-import android.view.View;
-import android.widget.AbsListView;
-import android.widget.ListView;
-import android.widget.Toast;
-
-import com.example.app.BaseActivity;
-import com.example.app.R;
-import com.example.app.twittercore.TwitterCoreMainActivity;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterAuthException;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.SearchTimeline;
-import com.twitter.sdk.android.tweetui.TimelineResult;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-
-import java.lang.ref.WeakReference;
-
-/**
- * TimelineActivity shows a full screen timeline which is useful for screenshots.
- */
-public class TimelineActivity extends BaseActivity {
-
-    final WeakReference<Activity> activityRef = new WeakReference<Activity>(TimelineActivity.this);
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.tweetui_swipe_timeline);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.refresh_timeline_title);
-        }
-
-        // launch the app login activity when a guest user tries to favorite a Tweet
-        final Callback<Tweet> actionCallback = new Callback<Tweet>() {
-            @Override
-            public void success(Result<Tweet> result) {
-                // Intentionally blank
-            }
-            @Override
-            public void failure(TwitterException exception) {
-                if (exception instanceof TwitterAuthException) {
-                    startActivity(TwitterCoreMainActivity.newIntent(TimelineActivity.this));
-                }
-            }
-        };
-
-        final SwipeRefreshLayout swipeLayout = (SwipeRefreshLayout) findViewById(R.id.swipe_layout);
-        final View emptyView = findViewById(android.R.id.empty);
-        final ListView listView = (ListView) findViewById(android.R.id.list);
-        listView.setEmptyView(emptyView);
-
-        final SearchTimeline timeline = new SearchTimeline.Builder().query("#twitter").build();
-        final TweetTimelineListAdapter adapter = new TweetTimelineListAdapter.Builder(this)
-                .setTimeline(timeline)
-                .setViewStyle(R.style.tw__TweetLightWithActionsStyle)
-                .setOnActionCallback(actionCallback)
-                .build();
-        listView.setAdapter(adapter);
-
-        swipeLayout.setColorSchemeResources(R.color.twitter_blue, R.color.twitter_dark);
-
-        // set custom scroll listener to enable swipe refresh layout only when at list top
-        listView.setOnScrollListener(new AbsListView.OnScrollListener() {
-            boolean enableRefresh = false;
-            @Override
-            public void onScrollStateChanged(AbsListView view, int scrollState) {}
-            @Override
-            public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount,
-                                 int totalItemCount) {
-                if (listView != null && listView.getChildCount() > 0) {
-                    // check that the first item is visible and that its top matches the parent
-                    enableRefresh = listView.getFirstVisiblePosition() == 0 &&
-                            listView.getChildAt(0).getTop() >= 0;
-                } else {
-                    enableRefresh = false;
-                }
-                swipeLayout.setEnabled(enableRefresh);
-            }
-        });
-
-        // specify action to take on swipe refresh
-        swipeLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
-            @Override
-            public void onRefresh() {
-                swipeLayout.setRefreshing(true);
-                adapter.refresh(new Callback<TimelineResult<Tweet>>() {
-                    @Override
-                    public void success(Result<TimelineResult<Tweet>> result) {
-                        swipeLayout.setRefreshing(false);
-                    }
-
-                    @Override
-                    public void failure(TwitterException exception) {
-                        swipeLayout.setRefreshing(false);
-                        final Activity activity = activityRef.get();
-                        if (activity != null && !activity.isFinishing()) {
-                            Toast.makeText(activity, exception.getMessage(),
-                                    Toast.LENGTH_SHORT).show();
-                        }
-                    }
-                });
-            }
-        });
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/TimelinesActivity.java b/samples/app/src/main/java/com/example/app/tweetui/TimelinesActivity.java
deleted file mode 100644
index 72d72e25..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/TimelinesActivity.java
+++ /dev/null
@@ -1,106 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.content.res.Resources;
-import android.os.Bundle;
-import android.support.design.widget.TabLayout;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentManager;
-import android.support.v4.app.FragmentPagerAdapter;
-import android.support.v4.view.ViewPager;
-import android.support.v7.app.AppCompatActivity;
-
-import com.example.app.R;
-
-/**
- * TimelinesActivity pages between different timeline Fragments.
- */
-public class TimelinesActivity extends AppCompatActivity {
-    private static final int PAGE_SEARCH = 0;
-    private static final int PAGE_USER = 1;
-    private static final int PAGE_COLLECTION = 2;
-    private static final int PAGE_LIST = 3;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_pager);
-
-        final FragmentManager fm = getSupportFragmentManager();
-        final FragmentPagerAdapter pagerAdapter = new TimelinePagerAdapter(fm, getResources());
-        final ViewPager viewPager = (ViewPager) findViewById(R.id.pager);
-        viewPager.setAdapter(pagerAdapter);
-
-        final TabLayout tabLayout = (TabLayout) findViewById(R.id.tab_layout);
-        tabLayout.setupWithViewPager(viewPager);
-    }
-
-    public static class TimelinePagerAdapter extends FragmentPagerAdapter {
-        // titles for timeline fragments, in order
-        private static final int[] PAGE_TITLE_RES_IDS = {
-                R.string.search_timeline_title,
-                R.string.user_timeline_title,
-                R.string.collection_timeline_title,
-                R.string.list_timeline_title,
-        };
-        private Resources resources;
-
-        public TimelinePagerAdapter(FragmentManager fm, Resources resources) {
-            super(fm);
-            this.resources = resources;
-        }
-
-        @Override
-        public Fragment getItem(int position) {
-            switch (position) {
-                case PAGE_SEARCH:
-                    return SearchTimelineFragment.newInstance();
-                case PAGE_USER:
-                    return UserTimelineFragment.newInstance();
-                case PAGE_COLLECTION:
-                    return CollectionTimelineFragment.newInstance();
-                case PAGE_LIST:
-                    return ListTimelineFragment.newInstance();
-                default:
-                    throw new IllegalStateException("Unexpected Fragment page item requested.");
-            }
-        }
-
-        @Override
-        public int getCount() {
-            return PAGE_TITLE_RES_IDS.length;
-        }
-
-        @Override
-        public CharSequence getPageTitle(int position) {
-            switch (position) {
-                case PAGE_SEARCH:
-                    return resources.getString(PAGE_TITLE_RES_IDS[PAGE_SEARCH]);
-                case PAGE_USER:
-                    return resources.getString(PAGE_TITLE_RES_IDS[PAGE_USER]);
-                case PAGE_COLLECTION:
-                    return resources.getString(PAGE_TITLE_RES_IDS[PAGE_COLLECTION]);
-                case PAGE_LIST:
-                    return resources.getString(PAGE_TITLE_RES_IDS[PAGE_LIST]);
-                default:
-                    throw new IllegalStateException("Unexpected Fragment page title requested.");
-            }
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/TweetActivity.java b/samples/app/src/main/java/com/example/app/tweetui/TweetActivity.java
deleted file mode 100644
index 6d8a513a..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/TweetActivity.java
+++ /dev/null
@@ -1,159 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.content.Context;
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBar;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.R;
-import com.example.app.twittercore.TwitterCoreMainActivity;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterAuthException;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.BaseTweetView;
-import com.twitter.sdk.android.tweetui.CompactTweetView;
-import com.twitter.sdk.android.tweetui.TweetUtils;
-import com.twitter.sdk.android.tweetui.TweetView;
-
-import java.util.Arrays;
-import java.util.List;
-
-public class TweetActivity extends TweetUiActivity {
-    private static final String TAG = "TweetActivity";
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.tweets_activity);
-        }
-    }
-
-    @Override
-    int getLayout() {
-        return R.layout.activity_frame;
-    }
-
-    @Override
-    Fragment createFragment() {
-        return TweetsFragment.newInstance();
-    }
-
-    public static class TweetsFragment extends Fragment {
-
-        // launch the app login activity when a guest user tries to favorite a Tweet
-        final Callback<Tweet> actionCallback = new Callback<Tweet>() {
-            @Override
-            public void success(Result<Tweet> result) {
-                // Intentionally blank
-            }
-            @Override
-            public void failure(TwitterException exception) {
-                if (exception instanceof TwitterAuthException) {
-                    startActivity(TwitterCoreMainActivity.newIntent(getActivity()));
-                }
-            }
-        };
-
-        public static TweetsFragment newInstance() {
-            return new TweetsFragment();
-        }
-
-        @Override
-        public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                Bundle savedInstanceState) {
-            final View v = inflater.inflate(R.layout.tweetui_fragment_tweet, container, false);
-
-            final ViewGroup tweetRegion = (ViewGroup) v.findViewById(R.id.tweet_region);
-
-            // load single Tweets and construct TweetViews
-            loadTweet(20L, tweetRegion, R.id.jack_regular_tweet);
-            loadTweet(510908133917487104L, tweetRegion, R.id.bike_regular_tweet);
-
-            // load multiple Tweets and construct CompactTweetViews
-            final List<Long> tweetIds = Arrays.asList(20L, 510908133917487104L);
-            final List<Integer> viewIds = Arrays.asList(R.id.jack_compact_tweet,
-                    R.id.bike_compact_tweet);
-            loadTweets(tweetIds, tweetRegion, viewIds);
-
-            return v;
-        }
-
-        /**
-         * loadTweet wraps TweetUtils.loadTweet with a callback that ensures the view is given a
-         * known id to simplify UI automation testing.
-         */
-        private void loadTweet(long tweetId, final ViewGroup container, final int viewId) {
-            final Callback<Tweet> singleTweetCallback = new Callback<Tweet>() {
-                @Override
-                public void success(Result<Tweet> result) {
-                    final Context context = getActivity();
-                    if (context == null) return;
-                    final Tweet tweet = result.data;
-                    final BaseTweetView tv = new TweetView(context, tweet,
-                            R.style.tw__TweetLightWithActionsStyle);
-                    tv.setOnActionCallback(actionCallback);
-                    tv.setId(viewId);
-                    container.addView(tv);
-                }
-
-                @Override
-                public void failure(TwitterException exception) {
-                    Log.e(TAG, "loadTweet failure", exception);
-                }
-            };
-            TweetUtils.loadTweet(tweetId, singleTweetCallback);
-        }
-
-        /**
-         * loadTweets wraps TweetUtils.loadTweets to use a callback that ensures each view is given
-         * a known id to simplify UI automation testing.
-         */
-        private void loadTweets(final List<Long> tweetIds, final ViewGroup container,
-                                final List<Integer> viewIds) {
-            TweetUtils.loadTweets(tweetIds, new Callback<List<Tweet>>() {
-                @Override
-                public void success(Result<List<Tweet>> result) {
-                    final Context context = getActivity();
-                    if (context == null) return;
-                    for (int i = 0; i < result.data.size(); i++) {
-                        final BaseTweetView tv = new CompactTweetView(context, result.data.get(i),
-                                R.style.tw__TweetDarkWithActionsStyle);
-                        tv.setOnActionCallback(actionCallback);
-                        tv.setId(viewIds.get(i));
-                        container.addView(tv);
-                    }
-                }
-
-                @Override
-                public void failure(TwitterException exception) {
-                    Log.e(TAG, "loadTweets failure " + tweetIds, exception);
-                }
-            });
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/TweetPojoActivity.java b/samples/app/src/main/java/com/example/app/tweetui/TweetPojoActivity.java
deleted file mode 100644
index 91a2f5d7..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/TweetPojoActivity.java
+++ /dev/null
@@ -1,108 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.ListFragment;
-import android.support.v7.app.ActionBar;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.R;
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.reflect.TypeToken;
-import com.twitter.sdk.android.core.models.SafeListAdapter;
-import com.twitter.sdk.android.core.models.SafeMapAdapter;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.FixedTweetTimeline;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-
-import java.io.InputStreamReader;
-import java.util.ArrayList;
-import java.util.List;
-
-import io.fabric.sdk.android.services.common.CommonUtils;
-
-/**
- * Example code showing how to load Tweets from JSON.
- */
-public class TweetPojoActivity extends TweetUiActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.tweet_pojo);
-        }
-    }
-
-    @Override
-    int getLayout() {
-        return R.layout.activity_frame;
-    }
-
-    @Override
-    Fragment createFragment() {
-        return TweetPojoFragment.newInstance();
-    }
-
-    public static class TweetPojoFragment extends ListFragment {
-
-        public static TweetPojoFragment newInstance() {
-            return new TweetPojoFragment();
-        }
-
-        @Override
-        public void onCreate(Bundle savedInstanceState) {
-            super.onCreate(savedInstanceState);
-
-            // Note: Load should normally be called from background thread.
-            final List<Tweet> tweets = loadTweets();
-            final FixedTweetTimeline fixedTimeline = new FixedTweetTimeline.Builder()
-                    .setTweets(tweets).build();
-            final TweetTimelineListAdapter adapter = new TweetTimelineListAdapter(getActivity(),
-                    fixedTimeline);
-            setListAdapter(adapter);
-        }
-
-        List<Tweet> loadTweets() {
-            final Gson gson = new GsonBuilder()
-                    .registerTypeAdapterFactory(new SafeListAdapter())
-                    .registerTypeAdapterFactory(new SafeMapAdapter())
-                    .create();
-
-            InputStreamReader reader = null;
-            try {
-                reader = new InputStreamReader(getResources().openRawResource(R.raw.tweets));
-                return gson.fromJson(reader, new TypeToken<ArrayList<Tweet>>() {}.getType());
-            }finally {
-                CommonUtils.closeQuietly(reader);
-            }
-        }
-
-        @Override
-        public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                                 Bundle savedInstanceState) {
-            return inflater.inflate(R.layout.tweetui_timeline, container, false);
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/TweetPreviewActivity.java b/samples/app/src/main/java/com/example/app/tweetui/TweetPreviewActivity.java
deleted file mode 100644
index 8eb13ebc..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/TweetPreviewActivity.java
+++ /dev/null
@@ -1,149 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.app.Activity;
-import android.content.Context;
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBar;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-import android.widget.Toast;
-
-import com.example.app.R;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.CompactTweetView;
-import com.twitter.sdk.android.tweetui.TweetUtils;
-import com.twitter.sdk.android.tweetui.TweetView;
-
-
-public class TweetPreviewActivity extends TweetUiActivity {
-    private static final String TAG = "TweetPreviewActivity";
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.preview_tweet);
-        }
-    }
-
-    @Override
-    int getLayout() {
-        return R.layout.activity_frame;
-    }
-
-    @Override
-    Fragment createFragment() {
-        return TweetPreviewFragment.newInstance();
-    }
-
-    /**
-     * Fragment showing a Tweet id input field, light/dark buttons, and a scrollable region which
-     * renders light/dark previews of the requested Tweet for quick manual validation.
-     */
-    public static class TweetPreviewFragment extends Fragment {
-
-        public static TweetPreviewFragment newInstance() {
-            return new TweetPreviewFragment();
-        }
-
-        @Override
-        public View onCreateView(LayoutInflater inflater, final ViewGroup container,
-                                 Bundle savedInstanceState) {
-            final View v = inflater.inflate(R.layout.tweetui_fragment_tweet_preview, container,
-                    false);
-
-            final ViewGroup tweetRegion = (ViewGroup) v.findViewById(R.id.tweet_region);
-            final EditText selectorInput = (EditText) v.findViewById(R.id.selector_input_tweet_id);
-            final Button lightButton = (Button) v.findViewById(R.id.button_show_light);
-            final Button darkButton = (Button) v.findViewById(R.id.button_show_dark);
-
-            lightButton.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    final long tweetId = Long.parseLong(selectorInput.getText().toString());
-                    tweetRegion.removeAllViews();
-                    loadTweet(tweetId, tweetRegion, R.style.tw__TweetLightStyle);
-                }
-            });
-
-            darkButton.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    final long tweetId = Long.parseLong(selectorInput.getText().toString());
-                    tweetRegion.removeAllViews();
-                    loadTweet(tweetId, tweetRegion, R.style.tw__TweetDarkStyle);
-                }
-            });
-
-            return v;
-        }
-
-        /**
-         * loadTweet wraps TweetUtils.loadTweet with a callback that ensures a compact and default
-         * view with the correct style and spacing are inserted.
-         */
-        private void loadTweet(long tweetId, final ViewGroup container, final int style) {
-
-            final Callback<Tweet> singleTweetCallback = new Callback<Tweet>() {
-
-                @Override
-                public void success(Result<Tweet> result) {
-                    final Context context = getActivity();
-                    if (context == null) return;
-
-                    final Tweet tweet = result.data;
-                    final CompactTweetView cv = new CompactTweetView(context, tweet, style);
-                    container.addView(cv);
-
-                    final View spacer = new View(context);
-                    final LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(0,
-                            (int) context.getResources().getDimension(R.dimen.demo_tweet_space));
-                    spacer.setLayoutParams(params);
-                    container.addView(spacer);
-
-                    final TweetView tv = new TweetView(context, tweet, style);
-                    container.addView(tv);
-
-                }
-
-                @Override
-                public void failure(TwitterException exception) {
-                    final Activity activity = getActivity();
-                    if (activity != null && !activity.isFinishing()) {
-                        Toast.makeText(activity, R.string.tweet_load_error,
-                                Toast.LENGTH_SHORT).show();
-                    }
-                    Log.e(TAG, "loadTweet failure", exception);
-                }
-            };
-            TweetUtils.loadTweet(tweetId, singleTweetCallback);
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/TweetUiActivity.java b/samples/app/src/main/java/com/example/app/tweetui/TweetUiActivity.java
deleted file mode 100644
index 2bc1dcbe..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/TweetUiActivity.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-
-import com.example.app.BaseActivity;
-import com.example.app.R;
-
-/**
- * TweetUiActivity is a BaseActivity which creates a single fragment.
- */
-public abstract class TweetUiActivity extends BaseActivity {
-
-    abstract int getLayout();
-
-    // Builder to create the Fragment added to the Activity's container
-    abstract Fragment createFragment();
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        if (savedInstanceState == null) {
-            getSupportFragmentManager().beginTransaction()
-                    .add(R.id.container, createFragment())
-                    .commit();
-        }
-        setContentView(getLayout());
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/TweetUiMainActivity.java b/samples/app/src/main/java/com/example/app/tweetui/TweetUiMainActivity.java
deleted file mode 100644
index bc3e4ae5..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/TweetUiMainActivity.java
+++ /dev/null
@@ -1,114 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v7.app.ActionBar;
-import android.view.View;
-import android.widget.Button;
-
-import com.example.app.BaseActivity;
-import com.example.app.R;
-
-public class TweetUiMainActivity extends BaseActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.tweetui_activity_main);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.kit_tweetui);
-        }
-
-        final Button xmlTweetButton = (Button) findViewById(R.id.button_xml_tweet_activity);
-        xmlTweetButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(TweetUiMainActivity.this, XmlTweetActivity.class));
-            }
-        });
-
-        final Button tweetActivityButton = (Button) findViewById(R.id.button_tweet_activity);
-        tweetActivityButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(TweetUiMainActivity.this, TweetActivity.class));
-            }
-        });
-
-        final Button unqiueTweetButton = (Button) findViewById(R.id.button_unique_tweet_activity);
-        unqiueTweetButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(TweetUiMainActivity.this, UniqueTweetActivity.class));
-            }
-        });
-
-        final Button tweetListButton = (Button) findViewById(R.id.button_fixed_timeline_activity);
-        tweetListButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(TweetUiMainActivity.this, FixedTimelineActivity.class));
-            }
-        });
-
-        final Button timelineButton = (Button) findViewById(R.id.button_refresh_timeline_activity);
-        timelineButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(TweetUiMainActivity.this, TimelineActivity.class));
-            }
-        });
-
-        final Button timelinesButton = (Button) findViewById(R.id.button_timelines_activity);
-        timelinesButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                startActivity(new Intent(TweetUiMainActivity.this, TimelinesActivity.class));
-            }
-        });
-
-        final Button tweetSelectorButton = (Button) findViewById(
-                R.id.button_tweet_preview_activity);
-        tweetSelectorButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(TweetUiMainActivity.this, TweetPreviewActivity.class));
-            }
-        });
-
-        final Button tweetPojoButton = (Button) findViewById(
-                R.id.button_tweet_pojo_activity);
-        tweetPojoButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(TweetUiMainActivity.this, TweetPojoActivity.class));
-            }
-        });
-
-        final Button rtlTimelineButton = (Button) findViewById(R.id.button_rtl_timeline_activity);
-        rtlTimelineButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                startActivity(new Intent(TweetUiMainActivity.this, RtlTimelineActivity.class));
-            }
-        });
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/UniqueTweetActivity.java b/samples/app/src/main/java/com/example/app/tweetui/UniqueTweetActivity.java
deleted file mode 100644
index 75158909..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/UniqueTweetActivity.java
+++ /dev/null
@@ -1,93 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBar;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.LinearLayout;
-
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetBuilder;
-import com.twitter.sdk.android.core.models.User;
-import com.twitter.sdk.android.core.models.UserBuilder;
-import com.twitter.sdk.android.tweetui.TweetView;
-
-import com.example.app.R;
-
-public class UniqueTweetActivity extends TweetUiActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.unqiue_tweets);
-        }
-    }
-
-    @Override
-    int getLayout() {
-        return R.layout.activity_frame;
-    }
-
-    @Override
-    Fragment createFragment() {
-        return UniqueTweetFragment.newInstance();
-    }
-
-    /**
-     * Fragment showing unique Tweet view cases.
-     */
-    public static class UniqueTweetFragment extends Fragment {
-
-        public static UniqueTweetFragment newInstance() {
-            return new UniqueTweetFragment();
-        }
-
-        @Override
-        public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                                 Bundle savedInstanceState) {
-            final View v = inflater.inflate(R.layout.tweetui_fragment_unique_tweet, container,
-                    false);
-
-            final LinearLayout tweetRegion = (LinearLayout) v.findViewById(R.id.tweet_region);
-
-            // Tweet object already present, construct a TweetView
-            final Tweet knownTweet = new TweetBuilder()
-                    .setId(3L)
-                    .setUser(new UserBuilder()
-                                    .setId(User.INVALID_ID)
-                                    .setName("name")
-                                    .setScreenName("namename")
-                                    .setVerified(false)
-                                    .build()
-                    )
-                    .setText("Preloaded text of a Tweet that couldn't be loaded.")
-                    .setCreatedAt("Wed Jun 06 20:07:10 +0000 2012")
-                    .build();
-            final TweetView knownTweetView = new TweetView(getActivity(), knownTweet);
-            tweetRegion.addView(knownTweetView);
-
-            return v;
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/UserTimelineFragment.java b/samples/app/src/main/java/com/example/app/tweetui/UserTimelineFragment.java
deleted file mode 100644
index 9ca2d324..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/UserTimelineFragment.java
+++ /dev/null
@@ -1,97 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.ListFragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.BuildConfig;
-import com.example.app.R;
-import com.example.app.twittercore.TwitterCoreMainActivity;
-import com.mopub.nativeads.MoPubAdAdapter;
-import com.mopub.nativeads.RequestParameters;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterAuthException;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.mopub.TwitterMoPubAdAdapter;
-import com.twitter.sdk.android.mopub.TwitterStaticNativeAdRenderer;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-import com.twitter.sdk.android.tweetui.UserTimeline;
-
-/**
- * UserTimelineFragment demonstrates a TimelineListAdapter with a UserTimeline.
- */
-public class UserTimelineFragment extends ListFragment {
-
-    public static UserTimelineFragment newInstance() {
-        return new UserTimelineFragment();
-    }
-
-    private MoPubAdAdapter moPubAdAdapter;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        // launch the app login activity when a guest user tries to favorite a Tweet
-        final Callback<Tweet> actionCallback = new Callback<Tweet>() {
-            @Override
-            public void success(Result<Tweet> result) {
-                // Intentionally blank
-            }
-            @Override
-            public void failure(TwitterException exception) {
-                if (exception instanceof TwitterAuthException) {
-                    startActivity(TwitterCoreMainActivity.newIntent(getActivity()));
-                }
-            }
-        };
-
-        final UserTimeline userTimeline = new UserTimeline.Builder().screenName("fabric").build();
-        final TweetTimelineListAdapter adapter = new TweetTimelineListAdapter.Builder(getActivity())
-                .setTimeline(userTimeline)
-                .setViewStyle(R.style.tw__TweetLightWithActionsStyle)
-                .setOnActionCallback(actionCallback)
-                .build();
-
-        moPubAdAdapter = new TwitterMoPubAdAdapter(getActivity(), adapter);
-        final TwitterStaticNativeAdRenderer adRenderer = new TwitterStaticNativeAdRenderer();
-        moPubAdAdapter.registerAdRenderer(adRenderer);
-        moPubAdAdapter.loadAds(BuildConfig.MOPUB_AD_UNIT_ID);
-
-        setListAdapter(moPubAdAdapter);
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.tweetui_timeline, container, false);
-    }
-
-    @Override
-    public void onDestroy() {
-        // You must call this or the ad adapter may cause a memory leak
-        moPubAdAdapter.destroy();
-        super.onDestroy();
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/XmlTweetActivity.java b/samples/app/src/main/java/com/example/app/tweetui/XmlTweetActivity.java
deleted file mode 100644
index 4a972b9e..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/XmlTweetActivity.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBar;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.R;
-
-public class XmlTweetActivity extends TweetUiActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.xml_tweets_activity);
-        }
-    }
-
-    @Override
-    int getLayout() {
-        return R.layout.activity_frame;
-    }
-
-    @Override
-    Fragment createFragment() {
-        return XmlTweetFragment.newInstance();
-    }
-
-    /**
-     * UI fragment showing XML Tweet views for automated ui testing
-     */
-    public static class XmlTweetFragment extends Fragment {
-
-        public static XmlTweetFragment newInstance() {
-            return new XmlTweetFragment();
-        }
-
-        @Override
-        public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                Bundle savedInstanceState) {
-            return inflater.inflate(R.layout.tweetui_fragment_xml_tweet, container, false);
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/twittercore/TwitterCoreMainActivity.java b/samples/app/src/main/java/com/example/app/twittercore/TwitterCoreMainActivity.java
deleted file mode 100644
index 0136fb06..00000000
--- a/samples/app/src/main/java/com/example/app/twittercore/TwitterCoreMainActivity.java
+++ /dev/null
@@ -1,96 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.twittercore;
-
-import android.content.Context;
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v7.app.ActionBar;
-import android.widget.Toast;
-
-import com.example.app.BaseActivity;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.core.identity.TwitterAuthClient;
-import com.twitter.sdk.android.core.identity.TwitterLoginButton;
-
-import com.example.app.R;
-
-public class TwitterCoreMainActivity extends BaseActivity {
-
-    private TwitterLoginButton loginButton;
-
-    /**
-     * Constructs an intent for starting an instance of this activity.
-     * @param packageContext A context from the same package as this activity.
-     * @return Intent for starting an instance of this activity.
-     */
-    public static Intent newIntent(Context packageContext) {
-        return new Intent(packageContext, TwitterCoreMainActivity.class);
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.twittercore_activity_main);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.kit_twittercore);
-        }
-
-        // Set up the login button by setting callback to invoke when authorization request
-        // completes
-        loginButton = (TwitterLoginButton) findViewById(R.id.login_button);
-        loginButton.setCallback(new Callback<TwitterSession>() {
-            @Override
-            public void success(Result<TwitterSession> result) {
-                requestEmailAddress(getApplicationContext(), result.data);
-            }
-
-            @Override
-            public void failure(TwitterException exception) {
-                // Upon error, show a toast message indicating that authorization request failed.
-                Toast.makeText(getApplicationContext(), exception.getMessage(),
-                        Toast.LENGTH_SHORT).show();
-            }
-        });
-    }
-
-    private static void requestEmailAddress(final Context context, TwitterSession session) {
-        new TwitterAuthClient().requestEmail(session, new Callback<String>() {
-            @Override
-            public void success(Result<String> result) {
-                Toast.makeText(context, result.data, Toast.LENGTH_SHORT).show();
-            }
-
-            @Override
-            public void failure(TwitterException exception) {
-                Toast.makeText(context, exception.getMessage(), Toast.LENGTH_SHORT).show();
-            }
-        });
-    }
-
-    @Override
-    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        // Pass the activity result to the saveSession button.
-        loginButton.onActivityResult(requestCode, resultCode, data);
-    }
-}
diff --git a/samples/app/src/main/res/drawable-hdpi/twitter_ic_launcher.png b/samples/app/src/main/res/drawable-hdpi/twitter_ic_launcher.png
deleted file mode 100644
index 3403ab70..00000000
Binary files a/samples/app/src/main/res/drawable-hdpi/twitter_ic_launcher.png and /dev/null differ
diff --git a/samples/app/src/main/res/drawable-mdpi/twitter_ic_launcher.png b/samples/app/src/main/res/drawable-mdpi/twitter_ic_launcher.png
deleted file mode 100644
index b53e976e..00000000
Binary files a/samples/app/src/main/res/drawable-mdpi/twitter_ic_launcher.png and /dev/null differ
diff --git a/samples/app/src/main/res/drawable-xhdpi/twitter_ic_launcher.png b/samples/app/src/main/res/drawable-xhdpi/twitter_ic_launcher.png
deleted file mode 100644
index c0b4d2ff..00000000
Binary files a/samples/app/src/main/res/drawable-xhdpi/twitter_ic_launcher.png and /dev/null differ
diff --git a/samples/app/src/main/res/drawable-xxhdpi/twitter_ic_launcher.png b/samples/app/src/main/res/drawable-xxhdpi/twitter_ic_launcher.png
deleted file mode 100644
index 978e6f7b..00000000
Binary files a/samples/app/src/main/res/drawable-xxhdpi/twitter_ic_launcher.png and /dev/null differ
diff --git a/samples/app/src/main/res/drawable-xxxhdpi/twitter_ic_launcher.png b/samples/app/src/main/res/drawable-xxxhdpi/twitter_ic_launcher.png
deleted file mode 100644
index f2b8bca1..00000000
Binary files a/samples/app/src/main/res/drawable-xxxhdpi/twitter_ic_launcher.png and /dev/null differ
diff --git a/samples/app/src/main/res/layout/activity_frame.xml b/samples/app/src/main/res/layout/activity_frame.xml
deleted file mode 100644
index ddac8677..00000000
--- a/samples/app/src/main/res/layout/activity_frame.xml
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <include
-        android:id="@+id/toolbar"
-        layout="@layout/toolbar"/>
-
-    <FrameLayout
-        android:id="@+id/container"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_below="@id/toolbar"/>
-
-</RelativeLayout>
\ No newline at end of file
diff --git a/samples/app/src/main/res/layout/activity_pager.xml b/samples/app/src/main/res/layout/activity_pager.xml
deleted file mode 100644
index d695369d..00000000
--- a/samples/app/src/main/res/layout/activity_pager.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical">
-
-    <android.support.design.widget.TabLayout
-        android:id="@+id/tab_layout"
-        style="@style/twitter_Tab"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:paddingTop="@dimen/pager_top_padding"/>
-
-    <android.support.v4.view.ViewPager
-        android:id="@+id/pager"
-        android:layout_width="match_parent"
-        android:layout_height="0px"
-        android:layout_weight="1"/>
-</LinearLayout>
diff --git a/samples/app/src/main/res/layout/toolbar.xml b/samples/app/src/main/res/layout/toolbar.xml
deleted file mode 100644
index 3412a01b..00000000
--- a/samples/app/src/main/res/layout/toolbar.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<android.support.v7.widget.Toolbar
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="?attr/actionBarSize"
-    app:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
-    app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
-    android:background="?attr/colorPrimary"
-    tools:ignore="Overdraw"/>
\ No newline at end of file
diff --git a/samples/app/src/main/res/layout/tweetcomposer_activity_main.xml b/samples/app/src/main/res/layout/tweetcomposer_activity_main.xml
deleted file mode 100644
index cc77858b..00000000
--- a/samples/app/src/main/res/layout/tweetcomposer_activity_main.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <include
-        android:id="@+id/toolbar"
-        layout="@layout/toolbar"/>
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical"
-        android:gravity="center">
-
-        <Button
-            android:id="@+id/tweet_composer"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/twitter_composer"/>
-
-        <Button
-            android:id="@+id/organic_composer"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/twitter_kit_composer"/>
-
-    </LinearLayout>
-</RelativeLayout>
diff --git a/samples/app/src/main/res/layout/tweetui_activity_main.xml b/samples/app/src/main/res/layout/tweetui_activity_main.xml
deleted file mode 100644
index bdd02cc9..00000000
--- a/samples/app/src/main/res/layout/tweetui_activity_main.xml
+++ /dev/null
@@ -1,80 +0,0 @@
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical">
-
-    <include
-        android:id="@+id/toolbar"
-        layout="@layout/toolbar"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"/>
-
-    <ScrollView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center"
-            android:gravity="center"
-            android:orientation="vertical">
-
-            <Button
-                android:id="@+id/button_tweet_preview_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/preview_tweet" />
-
-            <Button
-                android:id="@+id/button_xml_tweet_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/xml_tweets_activity" />
-
-            <Button
-                android:id="@+id/button_tweet_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/tweets_activity" />
-
-            <Button
-                android:id="@+id/button_unique_tweet_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/unqiue_tweets" />
-
-            <Button
-                android:id="@+id/button_timelines_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/button_timelines_activity" />
-
-            <Button
-                android:id="@+id/button_fixed_timeline_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/fixed_timeline" />
-
-            <Button
-                android:id="@+id/button_refresh_timeline_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/refresh_timeline" />
-
-            <Button
-                android:id="@+id/button_tweet_pojo_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/tweet_pojo" />
-
-            <Button
-                android:id="@+id/button_rtl_timeline_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/rtl_timeline" />
-
-        </LinearLayout>
-    </ScrollView>
-</LinearLayout>
diff --git a/samples/app/src/main/res/layout/tweetui_fragment_tweet.xml b/samples/app/src/main/res/layout/tweetui_fragment_tweet.xml
deleted file mode 100644
index 122cff65..00000000
--- a/samples/app/src/main/res/layout/tweetui_fragment_tweet.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <LinearLayout
-        android:id="@+id/tweet_region"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"/>
-
-</ScrollView>
\ No newline at end of file
diff --git a/samples/app/src/main/res/layout/tweetui_fragment_tweet_preview.xml b/samples/app/src/main/res/layout/tweetui_fragment_tweet_preview.xml
deleted file mode 100644
index 1ccf37c6..00000000
--- a/samples/app/src/main/res/layout/tweetui_fragment_tweet_preview.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    style="@style/twitter_FillParent"
-    android:orientation="vertical">
-
-    <EditText
-        android:id="@+id/selector_input_tweet_id"
-        style="@style/twitter_FillWidth"
-        android:inputType="number"
-        android:hint="@string/selector_input_hint"/>
-
-    <LinearLayout
-        style="@style/twitter_FillWidth"
-        android:orientation="horizontal">
-
-        <Button
-            android:id="@+id/button_show_light"
-            style="@style/twitter_WrapContent"
-            android:text="@string/button_show_light"/>
-
-        <Button
-            android:id="@+id/button_show_dark"
-            style="@style/twitter_WrapContent"
-            android:text="@string/button_show_dark"/>
-
-    </LinearLayout>
-
-    <ScrollView
-        style="@style/twitter_FillParent">
-
-        <LinearLayout
-            android:id="@+id/tweet_region"
-            style="@style/twitter_FillWidth"
-            android:orientation="vertical"/>
-
-    </ScrollView>
-
-</LinearLayout>
-
diff --git a/samples/app/src/main/res/layout/tweetui_fragment_unique_tweet.xml b/samples/app/src/main/res/layout/tweetui_fragment_unique_tweet.xml
deleted file mode 100644
index 5bd61a35..00000000
--- a/samples/app/src/main/res/layout/tweetui_fragment_unique_tweet.xml
+++ /dev/null
@@ -1,106 +0,0 @@
-<ScrollView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:twittersdk="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <LinearLayout
-        android:id="@+id/tweet_region"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical">
-
-        <!--emoji entities-->
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.TweetView
-            android:id="@+id/xml_emoji_url_video_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="656637487117299712"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.CompactTweetView
-            android:id="@+id/xml_emoji_url_video_compact_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="656637487117299712"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <!--animated gif-->
-
-        <com.twitter.sdk.android.tweetui.TweetView
-            android:id="@+id/xml_animated_gif_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="669274925937664001"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.CompactTweetView
-            android:id="@+id/xml_animated_gif_compact_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="669274925937664001"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <!--Retweet with photo-->
-
-        <com.twitter.sdk.android.tweetui.TweetView
-            android:id="@+id/retweet_with_photo_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="687698492211499010"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.CompactTweetView
-            android:id="@+id/retweet_with_photo_compact_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="687698492211499010"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <!--Retweet without photo-->
-
-        <com.twitter.sdk.android.tweetui.TweetView
-            android:id="@+id/retweet_without_photo_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="685490103544762369"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.CompactTweetView
-            android:id="@+id/retweet_without_photo_compact_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="685490103544762369"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-    </LinearLayout>
-</ScrollView>
diff --git a/samples/app/src/main/res/layout/tweetui_fragment_xml_tweet.xml b/samples/app/src/main/res/layout/tweetui_fragment_xml_tweet.xml
deleted file mode 100644
index 140c69f0..00000000
--- a/samples/app/src/main/res/layout/tweetui_fragment_xml_tweet.xml
+++ /dev/null
@@ -1,79 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:twittersdk="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <LinearLayout
-        android:id="@+id/tweet_region"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical">
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.TweetView
-            android:id="@+id/jack_regular_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="20"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.CompactTweetView
-            android:id="@+id/jack_compact_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="20"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.TweetView
-            android:id="@+id/bike_regular_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="510908133917487104"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.CompactTweetView
-            android:id="@+id/bike_compact_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="510908133917487104"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.TweetView
-            android:id="@+id/retweet_simpsons_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="574000939800993792"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.CompactTweetView
-            android:id="@+id/retweet_simpsons_compact_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="574000939800993792"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-    </LinearLayout>
-</ScrollView>
\ No newline at end of file
diff --git a/samples/app/src/main/res/layout/tweetui_swipe_timeline.xml b/samples/app/src/main/res/layout/tweetui_swipe_timeline.xml
deleted file mode 100644
index 571e6912..00000000
--- a/samples/app/src/main/res/layout/tweetui_swipe_timeline.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.v4.widget.SwipeRefreshLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/swipe_layout"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical">
-
-        <include
-            android:id="@+id/toolbar"
-            layout="@layout/toolbar"/>
-
-        <ListView
-            android:id="@id/android:list"
-            android:layout_width="match_parent"
-            android:layout_height="0dp"
-            android:layout_weight="1"
-            android:divider="@color/divider_gray"
-            android:dividerHeight="@dimen/divider_height"/>
-
-        <ScrollView
-            android:id="@id/android:empty"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent">
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/timeline_empty"
-                android:layout_gravity="center_horizontal|center_vertical"/>
-
-        </ScrollView>
-
-    </LinearLayout>
-
-</android.support.v4.widget.SwipeRefreshLayout>
\ No newline at end of file
diff --git a/samples/app/src/main/res/layout/tweetui_timeline.xml b/samples/app/src/main/res/layout/tweetui_timeline.xml
deleted file mode 100644
index e6a12740..00000000
--- a/samples/app/src/main/res/layout/tweetui_timeline.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <ListView android:id="@id/android:list"
-              android:layout_width="match_parent"
-              android:layout_height="0dp"
-              android:layout_weight="1"
-              android:divider="@color/divider_gray"
-              android:dividerHeight="@dimen/divider_height"
-              android:drawSelectorOnTop="false"/>
-
-    <TextView android:id="@id/android:empty"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-              android:gravity="center_horizontal|center_vertical"
-              android:text="@string/timeline_empty"/>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/samples/app/src/main/res/layout/twitter_activity.xml b/samples/app/src/main/res/layout/twitter_activity.xml
deleted file mode 100644
index a046aad4..00000000
--- a/samples/app/src/main/res/layout/twitter_activity.xml
+++ /dev/null
@@ -1,63 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context=".MainActivity"
-    tools:ignore="UnusedResources">
-
-    <include
-        android:id="@+id/toolbar"
-        layout="@layout/toolbar"/>
-
-    <ScrollView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
-
-        <LinearLayout
-            android:id="@+id/main_layout"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center"
-            android:gravity="center"
-            android:orientation="vertical">
-
-            <Button
-                android:layout_width="200dp"
-                android:layout_height="wrap_content"
-                android:onClick="onTwitterCore"
-                android:text="@string/kit_twittercore"/>
-
-            <Button
-                android:layout_width="200dp"
-                android:layout_height="wrap_content"
-                android:onClick="onTweetComposer"
-                android:text="@string/kit_tweetcomposer"/>
-
-            <Button
-                android:layout_width="200dp"
-                android:layout_height="wrap_content"
-                android:onClick="onTweetUi"
-                android:text="@string/kit_tweetui"/>
-
-        </LinearLayout>
-    </ScrollView>
-</RelativeLayout>
diff --git a/samples/app/src/main/res/layout/twittercore_activity_main.xml b/samples/app/src/main/res/layout/twittercore_activity_main.xml
deleted file mode 100644
index 48ef9e8f..00000000
--- a/samples/app/src/main/res/layout/twittercore_activity_main.xml
+++ /dev/null
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <include
-        android:id="@+id/toolbar"
-        layout="@layout/toolbar"/>
-
-    <com.twitter.sdk.android.core.identity.TwitterLoginButton
-        android:id="@+id/login_button"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_centerInParent="true"/>
-</RelativeLayout>
-
diff --git a/samples/app/src/main/res/menu/twitter_activity_actions.xml b/samples/app/src/main/res/menu/twitter_activity_actions.xml
deleted file mode 100644
index d8e4a143..00000000
--- a/samples/app/src/main/res/menu/twitter_activity_actions.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<menu
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    tools:ignore="UnusedResources">
-
-</menu>
diff --git a/samples/app/src/main/res/raw/filter_values.json b/samples/app/src/main/res/raw/filter_values.json
deleted file mode 100644
index 051f5f72..00000000
--- a/samples/app/src/main/res/raw/filter_values.json
+++ /dev/null
@@ -1,23 +0,0 @@
-{
-  "keywords": [
-    "dummy",
-    "darn",
-    "foobar",
-    "tea",
-    "cat"
-  ],
-  "hashtags": [
-    "cookies",
-    "CookiesAreAwesome"
-  ],
-  "handles": [
-    "benward",
-    "vam_si",
-    "ericfrohnhoefer"
-  ],
-  "urls": [
-    "Cookiesareawesome.com",
-    "dontbeevil.com",
-    "beevil.net"
-  ]
-}
\ No newline at end of file
diff --git a/samples/app/src/main/res/raw/tweets.json b/samples/app/src/main/res/raw/tweets.json
deleted file mode 100644
index 6f46ff6a..00000000
--- a/samples/app/src/main/res/raw/tweets.json
+++ /dev/null
@@ -1,399 +0,0 @@
-[
-  {
-    "contributors": null,
-    "coordinates": null,
-    "created_at": "Mon Apr 11 22:42:04 +0000 2016",
-    "entities": {
-      "hashtags": [
-        {
-          "indices": [
-            58,
-            75
-          ],
-          "text": "userverification"
-        }
-      ],
-      "media": [
-        {
-          "display_url": "pic.twitter.com/X6axD8CQ8G",
-          "expanded_url": "http://twitter.com/digits/status/719654922409521152/photo/1",
-          "id": 719654691236282372,
-          "id_str": "719654691236282372",
-          "indices": [
-            143,
-            144
-          ],
-          "media_url": "http://pbs.twimg.com/tweet_video_thumb/Cfy6IPgVAAQ6jDw.jpg",
-          "media_url_https": "https://pbs.twimg.com/tweet_video_thumb/Cfy6IPgVAAQ6jDw.jpg",
-          "sizes": {
-            "large": {
-              "h": 434,
-              "resize": "fit",
-              "w": 506
-            },
-            "medium": {
-              "h": 434,
-              "resize": "fit",
-              "w": 506
-            },
-            "small": {
-              "h": 292,
-              "resize": "fit",
-              "w": 340
-            },
-            "thumb": {
-              "h": 150,
-              "resize": "crop",
-              "w": 150
-            }
-          },
-          "source_status_id": 719654922409521152,
-          "source_status_id_str": "719654922409521152",
-          "source_user_id": 2847649621,
-          "source_user_id_str": "2847649621",
-          "type": "photo",
-          "url": "https://t.co/X6axD8CQ8G"
-        }
-      ],
-      "symbols": [],
-      "urls": [],
-      "user_mentions": [
-        {
-          "id": 2847649621,
-          "id_str": "2847649621",
-          "indices": [
-            3,
-            10
-          ],
-          "name": "Digits",
-          "screen_name": "digits"
-        }
-      ]
-    },
-    "extended_entities": {
-      "media": [
-        {
-          "display_url": "pic.twitter.com/X6axD8CQ8G",
-          "expanded_url": "http://twitter.com/digits/status/719654922409521152/photo/1",
-          "id": 719654691236282372,
-          "id_str": "719654691236282372",
-          "indices": [
-            143,
-            144
-          ],
-          "media_url": "http://pbs.twimg.com/tweet_video_thumb/Cfy6IPgVAAQ6jDw.jpg",
-          "media_url_https": "https://pbs.twimg.com/tweet_video_thumb/Cfy6IPgVAAQ6jDw.jpg",
-          "sizes": {
-            "large": {
-              "h": 434,
-              "resize": "fit",
-              "w": 506
-            },
-            "medium": {
-              "h": 434,
-              "resize": "fit",
-              "w": 506
-            },
-            "small": {
-              "h": 292,
-              "resize": "fit",
-              "w": 340
-            },
-            "thumb": {
-              "h": 150,
-              "resize": "crop",
-              "w": 150
-            }
-          },
-          "source_status_id": 719654922409521152,
-          "source_status_id_str": "719654922409521152",
-          "source_user_id": 2847649621,
-          "source_user_id_str": "2847649621",
-          "type": "animated_gif",
-          "url": "https://t.co/X6axD8CQ8G",
-          "video_info": {
-            "aspect_ratio": [
-              253,
-              217
-            ],
-            "variants": [
-              {
-                "bitrate": 0,
-                "content_type": "video/mp4",
-                "url": "https://pbs.twimg.com/tweet_video/Cfy6IPgVAAQ6jDw.mp4"
-              }
-            ]
-          }
-        }
-      ]
-    },
-    "favorite_count": 0,
-    "favorited": false,
-    "geo": null,
-    "id": 719656792750358528,
-    "id_str": "719656792750358528",
-    "in_reply_to_screen_name": null,
-    "in_reply_to_status_id": null,
-    "in_reply_to_status_id_str": null,
-    "in_reply_to_user_id": null,
-    "in_reply_to_user_id_str": null,
-    "is_quote_status": false,
-    "lang": "en",
-    "place": null,
-    "possibly_sensitive": false,
-    "retweet_count": 21,
-    "retweeted": false,
-    "retweeted_status": {
-      "contributors": null,
-      "coordinates": null,
-      "created_at": "Mon Apr 11 22:34:38 +0000 2016",
-      "entities": {
-        "hashtags": [
-          {
-            "indices": [
-              46,
-              63
-            ],
-            "text": "userverification"
-          }
-        ],
-        "media": [
-          {
-            "display_url": "pic.twitter.com/X6axD8CQ8G",
-            "expanded_url": "http://twitter.com/digits/status/719654922409521152/photo/1",
-            "id": 719654691236282372,
-            "id_str": "719654691236282372",
-            "indices": [
-              120,
-              143
-            ],
-            "media_url": "http://pbs.twimg.com/tweet_video_thumb/Cfy6IPgVAAQ6jDw.jpg",
-            "media_url_https": "https://pbs.twimg.com/tweet_video_thumb/Cfy6IPgVAAQ6jDw.jpg",
-            "sizes": {
-              "large": {
-                "h": 434,
-                "resize": "fit",
-                "w": 506
-              },
-              "medium": {
-                "h": 434,
-                "resize": "fit",
-                "w": 506
-              },
-              "small": {
-                "h": 292,
-                "resize": "fit",
-                "w": 340
-              },
-              "thumb": {
-                "h": 150,
-                "resize": "crop",
-                "w": 150
-              }
-            },
-            "type": "photo",
-            "url": "https://t.co/X6axD8CQ8G"
-          }
-        ],
-        "symbols": [],
-        "urls": [],
-        "user_mentions": []
-      },
-      "extended_entities": {
-        "media": [
-          {
-            "display_url": "pic.twitter.com/X6axD8CQ8G",
-            "expanded_url": "http://twitter.com/digits/status/719654922409521152/photo/1",
-            "id": 719654691236282372,
-            "id_str": "719654691236282372",
-            "indices": [
-              120,
-              143
-            ],
-            "media_url": "http://pbs.twimg.com/tweet_video_thumb/Cfy6IPgVAAQ6jDw.jpg",
-            "media_url_https": "https://pbs.twimg.com/tweet_video_thumb/Cfy6IPgVAAQ6jDw.jpg",
-            "sizes": {
-              "large": {
-                "h": 434,
-                "resize": "fit",
-                "w": 506
-              },
-              "medium": {
-                "h": 434,
-                "resize": "fit",
-                "w": 506
-              },
-              "small": {
-                "h": 292,
-                "resize": "fit",
-                "w": 340
-              },
-              "thumb": {
-                "h": 150,
-                "resize": "crop",
-                "w": 150
-              }
-            },
-            "type": "animated_gif",
-            "url": "https://t.co/X6axD8CQ8G",
-            "video_info": {
-              "aspect_ratio": [
-                253,
-                217
-              ],
-              "variants": [
-                {
-                  "bitrate": 0,
-                  "content_type": "video/mp4",
-                  "url": "https://pbs.twimg.com/tweet_video/Cfy6IPgVAAQ6jDw.mp4"
-                }
-              ]
-            }
-          }
-        ]
-      },
-      "favorite_count": 32,
-      "favorited": false,
-      "geo": null,
-      "id": 719654922409521152,
-      "id_str": "719654922409521152",
-      "in_reply_to_screen_name": null,
-      "in_reply_to_status_id": null,
-      "in_reply_to_status_id_str": null,
-      "in_reply_to_user_id": null,
-      "in_reply_to_user_id_str": null,
-      "is_quote_status": false,
-      "lang": "en",
-      "place": null,
-      "possibly_sensitive": false,
-      "retweet_count": 21,
-      "retweeted": false,
-      "source": "<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>",
-      "text": "1/ Passwords = poor UX. Non-password forms of #userverification are emerging: phone, fingerprint &amp; even the selfie. https://t.co/X6axD8CQ8G",
-      "truncated": false,
-      "user": {
-        "contributors_enabled": false,
-        "created_at": "Wed Oct 08 16:01:38 +0000 2014",
-        "default_profile": true,
-        "default_profile_image": false,
-        "description": "No more passwords. Powerful login that grows your mobile graph.",
-        "entities": {
-          "description": {
-            "urls": []
-          },
-          "url": {
-            "urls": [
-              {
-                "display_url": "digits.com",
-                "expanded_url": "http://digits.com",
-                "indices": [
-                  0,
-                  22
-                ],
-                "url": "http://t.co/BNZoojPX1o"
-              }
-            ]
-          }
-        },
-        "favourites_count": 42,
-        "follow_request_sent": false,
-        "followers_count": 36085,
-        "following": false,
-        "friends_count": 1,
-        "geo_enabled": false,
-        "has_extended_profile": false,
-        "id": 2847649621,
-        "id_str": "2847649621",
-        "is_translation_enabled": false,
-        "is_translator": false,
-        "lang": "en",
-        "listed_count": 80,
-        "location": "San Francisco, CA",
-        "name": "Digits",
-        "notifications": false,
-        "profile_background_color": "C0DEED",
-        "profile_background_image_url": "http://abs.twimg.com/images/themes/theme1/bg.png",
-        "profile_background_image_url_https": "https://abs.twimg.com/images/themes/theme1/bg.png",
-        "profile_background_tile": false,
-        "profile_banner_url": "https://pbs.twimg.com/profile_banners/2847649621/1427216104",
-        "profile_image_url": "http://pbs.twimg.com/profile_images/524974153040793600/SFY-beyr_normal.png",
-        "profile_image_url_https": "https://pbs.twimg.com/profile_images/524974153040793600/SFY-beyr_normal.png",
-        "profile_link_color": "0084B4",
-        "profile_sidebar_border_color": "C0DEED",
-        "profile_sidebar_fill_color": "DDEEF6",
-        "profile_text_color": "333333",
-        "profile_use_background_image": true,
-        "protected": false,
-        "screen_name": "digits",
-        "statuses_count": 223,
-        "time_zone": "Mazatlan",
-        "url": "http://t.co/BNZoojPX1o",
-        "utc_offset": -21600,
-        "verified": true
-      }
-    },
-    "source": "<a href=\"http://twitter.com\" rel=\"nofollow\">Twitter Web Client</a>",
-    "text": "RT @digits: 1/ Passwords = poor UX. Non-password forms of #userverification are emerging: phone, fingerprint &amp; even the selfie. https://t.c\u2026",
-    "truncated": false,
-    "user": {
-      "contributors_enabled": false,
-      "created_at": "Thu Oct 16 00:15:43 +0000 2014",
-      "default_profile": true,
-      "default_profile_image": false,
-      "description": "The official Twitter account for Fabric. The tools you need to build the best apps.",
-      "entities": {
-        "description": {
-          "urls": []
-        },
-        "url": {
-          "urls": [
-            {
-              "display_url": "get.fabric.io",
-              "expanded_url": "http://get.fabric.io",
-              "indices": [
-                0,
-                22
-              ],
-              "url": "http://t.co/OZQv5dblxS"
-            }
-          ]
-        }
-      },
-      "favourites_count": 545,
-      "follow_request_sent": false,
-      "followers_count": 134190,
-      "following": false,
-      "friends_count": 7,
-      "geo_enabled": false,
-      "has_extended_profile": false,
-      "id": 2857397298,
-      "id_str": "2857397298",
-      "is_translation_enabled": false,
-      "is_translator": false,
-      "lang": "en",
-      "listed_count": 319,
-      "location": "San Francisco, CA",
-      "name": "Fabric",
-      "notifications": false,
-      "profile_background_color": "C0DEED",
-      "profile_background_image_url": "http://abs.twimg.com/images/themes/theme1/bg.png",
-      "profile_background_image_url_https": "https://abs.twimg.com/images/themes/theme1/bg.png",
-      "profile_background_tile": false,
-      "profile_banner_url": "https://pbs.twimg.com/profile_banners/2857397298/1413997067",
-      "profile_image_url": "http://pbs.twimg.com/profile_images/524967911010471937/wKnU1vK2_normal.png",
-      "profile_image_url_https": "https://pbs.twimg.com/profile_images/524967911010471937/wKnU1vK2_normal.png",
-      "profile_link_color": "0084B4",
-      "profile_sidebar_border_color": "C0DEED",
-      "profile_sidebar_fill_color": "DDEEF6",
-      "profile_text_color": "333333",
-      "profile_use_background_image": true,
-      "protected": false,
-      "screen_name": "fabric",
-      "statuses_count": 1943,
-      "time_zone": "Pacific Time (US & Canada)",
-      "url": "http://t.co/OZQv5dblxS",
-      "utc_offset": -25200,
-      "verified": true
-    }
-  }
-]
diff --git a/samples/app/src/main/res/values/colors.xml b/samples/app/src/main/res/values/colors.xml
deleted file mode 100644
index 6a15c6ad..00000000
--- a/samples/app/src/main/res/values/colors.xml
+++ /dev/null
@@ -1,11 +0,0 @@
-<resources>
-    <color name="app_primary">#2196F3</color>
-    <color name="app_primary_dark">#1976D2</color>
-    <color name="app_accent">#55acee</color>
-
-    <color name="twitter_blue">#ff55acee</color>
-    <color name="twitter_dark">#ff292f33</color>
-    <color name="solid_red">#ff0000</color>
-    <color name="solid_yellow">#fff000</color>
-    <color name="divider_gray">#ffe1e8ed</color>
-</resources>
diff --git a/samples/app/src/main/res/values/dimens.xml b/samples/app/src/main/res/values/dimens.xml
deleted file mode 100644
index e075683b..00000000
--- a/samples/app/src/main/res/values/dimens.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <dimen name="pager_top_padding">7dp</dimen>
-    <dimen name="demo_tweet_space">15dp</dimen>
-    <dimen name="divider_height">1dp</dimen>
-    <dimen name="tab_padding">16dp</dimen>
-</resources>
diff --git a/samples/app/src/main/res/values/strings.xml b/samples/app/src/main/res/values/strings.xml
deleted file mode 100644
index 6cfbf147..00000000
--- a/samples/app/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,52 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:tools="http://schemas.android.com/tools">
-    <string name="twitter_app_name"
-        tools:ignore="UnusedResources">Twitter Sample</string>
-    <string name="kit_twittercore">Twitter Core</string>
-    <string name="kit_tweetcomposer">Tweet Composer</string>
-    <string name="kit_tweetui">Tweet Ui</string>
-
-    <!-- TweetComposer strings -->
-    <string name="twitter_composer">Twitter Composer</string>
-    <string name="twitter_kit_composer">TwitterKit Composer</string>
-
-    <!-- TweetUi strings -->
-    <string name="preview_tweet">Preview</string>
-    <string name="xml_tweets_activity">XML Tweets</string>
-    <string name="tweets_activity">Single Tweets</string>
-    <string name="unqiue_tweets">Unique Tweets</string>
-    <string name="button_timelines_activity">Timelines</string>
-    <string name="search_timeline_title">Search Timeline</string>
-    <string name="user_timeline_title">User Timeline</string>
-    <string name="collection_timeline_title">Collection Timeline</string>
-    <string name="list_timeline_title">List Timeline</string>
-    <string name="fixed_timeline">Fixed Timeline</string>
-    <string name="rtl_timeline">RTL Timeline</string>
-    <string name="refresh_timeline">Refresh Timeline</string>
-    <string name="refresh_timeline_title">Search: #twitter</string>
-    <string name="button_show_light">Light</string>
-    <string name="button_show_dark">Dark</string>
-    <string name="selector_input_hint">Tweet id</string>
-    <string name="tweet_load_error">Failed to load Tweet</string>
-    <string name="multi_tweet_view_error">Failed to load tweets</string>
-    <string name="timeline_empty">No tweets :(</string>
-    <string name="tweet_pojo">Tweet Pojo</string>
-
-</resources>
diff --git a/samples/app/src/main/res/values/styles.xml b/samples/app/src/main/res/values/styles.xml
deleted file mode 100644
index e160583b..00000000
--- a/samples/app/src/main/res/values/styles.xml
+++ /dev/null
@@ -1,59 +0,0 @@
-<resources>
-
-    <!--Application theme-->
-    <style name="TwitterSampleTheme" parent="Theme.AppCompat.Light.NoActionBar">
-        <!--colorPrimary is used for the action bar-->
-        <item name="colorPrimary">@color/app_primary</item>
-        <!--colorPrimaryDark is used for the status bar-->
-        <item name="colorPrimaryDark">@color/app_primary_dark</item>
-        <!--colorAccent is the default color widgets are tinted-->
-        <item name="colorAccent">@color/app_accent</item>
-    </style>
-
-    <!--Demos client styling with a style inheriting from our styles-->
-    <style name="twitter_InheritedLightTweet" parent="tw__TweetLightStyle">
-        <item name="tw__primary_text_color">@color/solid_red</item>
-    </style>
-
-    <!--Demos client styling a subset of custom attributes-->
-    <style name="twitter_IndependentTweetStyle">
-        <item name="tw__primary_text_color">@color/solid_yellow</item>
-        <item name="tw__action_color">@color/solid_red</item>
-    </style>
-
-    <style name="twitter_FillParent">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">match_parent</item>
-    </style>
-
-    <style name="twitter_FillWidth">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">wrap_content</item>
-    </style>
-
-    <style name="twitter_WrapContent">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">wrap_content</item>
-    </style>
-
-    <style name="twitter_Divider">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">1dp</item>
-        <item name="android:background">?android:attr/listDivider</item>
-    </style>
-
-    <style name="twitter_Tab" parent="Widget.Design.TabLayout">
-        <item name="android:background">@color/twitter_blue</item>
-        <item name="tabIndicatorColor">@android:color/white</item>
-        <item name="tabTextAppearance">@style/twitter_TabTextAppearance</item>
-        <item name="tabSelectedTextColor">@android:color/white</item>
-        <item name="tabPaddingStart">@dimen/tab_padding</item>
-        <item name="tabPaddingEnd">@dimen/tab_padding</item>
-        <item name="tabMode">scrollable</item>
-    </style>
-
-    <style name="twitter_TabTextAppearance" parent="TextAppearance.Design.Tab">
-        <item name="android:textColor">@android:color/white</item>
-        <item name="textAllCaps">false</item>
-    </style>
-</resources>
