diff --git a/samples/app/build.gradle b/samples/app/build.gradle
deleted file mode 100644
index 18fb52b0..00000000
--- a/samples/app/build.gradle
+++ /dev/null
@@ -1,83 +0,0 @@
-buildscript {
-    dependencies {
-        classpath dependency.spoonGradlePlugin
-    }
-}
-
-//Load API Key information in from property file
-Properties props = new Properties()
-try {
-    props.load(file('twitter.properties').newDataInputStream())
-} catch (Exception ex) {
-    throw new GradleException("Missing twitter.properties, check the twitter.properties.sample file.")
-}
-
-apply plugin: 'com.android.application'
-apply plugin: 'spoon'
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        applicationId "com.example.app.twitter"
-        versionCode 1
-        versionName "1.0"
-        minSdkVersion rootProject.minSdkVersion
-        targetSdkVersion rootProject.targetSdkVersion
-        testInstrumentationRunner "com.example.app.SpoonInstrumentationTestRunner"
-    }
-
-    buildTypes {
-        debug {
-            resValue "string", "com.twitter.sdk.android.CONSUMER_KEY", "\"${props.getProperty("twitterConsumerKey")}\""
-            resValue "string", "com.twitter.sdk.android.CONSUMER_SECRET", "\"${props.getProperty("twitterConsumerSecret")}\""
-            resValue "bool", "com.twitter.sdk.android.TRACE_ENABLED", "true"
-            resValue "bool", "com.twitter.sdk.android.COLLECT_IDENTIFIERS_ENABLED", "true"
-            buildConfigField "String", "MOPUB_AD_UNIT_ID", "\"${props.getProperty("mopubAdUnitId")}\""
-        }
-        release {
-            resValue "string", "com.twitter.sdk.android.CONSUMER_KEY", "\"${props.getProperty("twitterConsumerKey")}\""
-            resValue "string", "com.twitter.sdk.android.CONSUMER_SECRET", "\"${props.getProperty("twitterConsumerSecret")}\""
-            resValue "bool", "com.twitter.sdk.android.TRACE_ENABLED", "false"
-            resValue "bool", "com.twitter.sdk.android.COLLECT_IDENTIFIERS_ENABLED", "true"
-            buildConfigField "String", "MOPUB_AD_UNIT_ID", "\"${props.getProperty("mopubAdUnitId")}\""
-            minifyEnabled true
-            proguardFiles getDefaultProguardFile('proguard-android.txt')
-        }
-    }
-
-    packagingOptions {
-        exclude 'LICENSE.txt'
-    }
-
-    spoon {
-        if (project.hasProperty('spoonClassName')) {
-            className = project.spoonClassName
-        }
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-}
-
-dependencies {
-    implementation project(':twitter')
-    implementation project(':twitter-mopub')
-    implementation dependency.appCompat
-    implementation dependency.design
-    implementation dependency.okHttpInterceptor
-
-    debugCompile dependency.leakCanary
-    releaseCompile dependency.leakCanaryNoOp
-
-    androidTestCompile dependency.spoon
-    androidTestCompile dependency.espresso
-    androidTestCompile dependency.androidTestingSupport
-}
diff --git a/samples/app/internal-build.gradle b/samples/app/internal-build.gradle
deleted file mode 100644
index 0d1e03dc..00000000
--- a/samples/app/internal-build.gradle
+++ /dev/null
@@ -1,92 +0,0 @@
-buildscript {
-    repositories {
-        maven { url 'https://artifactory-ci.twitter.biz/java-virtual'}
-    }
-
-    dependencies {
-        classpath dependency.spoonGradlePlugin
-        classpath dependency.androidGradlePlugin
-    }
-}
-
-// Load API Key information in from property file
-Properties props = new Properties()
-File propsFile = file('twitter.properties')
-if (propsFile.exists()) {
-    props.load(propsFile.newDataInputStream())
-} else if (System.env.TWITTER_KEY != null && System.env.TWITTER_SECRET != null) {
-    props.setProperty("twitterConsumerKey", System.env.TWITTER_KEY)
-    props.setProperty("twitterConsumerSecret", System.env.TWITTER_SECRET)
-} else {
-    throw new GradleException("Missing twitter.properties, check the twitter.properties.sample file.")
-}
-
-apply plugin: 'com.android.application'
-apply plugin: 'spoon'
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        applicationId "com.example.app.twitter"
-        versionCode 1
-        versionName "1.0"
-        minSdkVersion rootProject.minSdkVersion
-        targetSdkVersion rootProject.targetSdkVersion
-        testInstrumentationRunner "com.example.app.SpoonInstrumentationTestRunner"
-    }
-
-    buildTypes {
-        debug {
-            resValue "string", "com.twitter.sdk.android.CONSUMER_KEY", "\"${props.getProperty("twitterConsumerKey")}\""
-            resValue "string", "com.twitter.sdk.android.CONSUMER_SECRET", "\"${props.getProperty("twitterConsumerSecret")}\""
-            resValue "bool", "com.twitter.sdk.android.TRACE_ENABLED", "true"
-            resValue "bool", "com.twitter.sdk.android.COLLECT_IDENTIFIERS_ENABLED", "true"
-            buildConfigField "String", "MOPUB_AD_UNIT_ID", "\"${props.getProperty("mopubAdUnitId")}\""
-        }
-        release {
-            resValue "string", "com.twitter.sdk.android.CONSUMER_KEY", "\"${props.getProperty("twitterConsumerKey")}\""
-            resValue "string", "com.twitter.sdk.android.CONSUMER_SECRET", "\"${props.getProperty("twitterConsumerSecret")}\""
-            resValue "bool", "com.twitter.sdk.android.TRACE_ENABLED", "false"
-            resValue "bool", "com.twitter.sdk.android.COLLECT_IDENTIFIERS_ENABLED", "true"
-            buildConfigField "String", "MOPUB_AD_UNIT_ID", "\"${props.getProperty("mopubAdUnitId")}\""
-            minifyEnabled true
-            proguardFiles getDefaultProguardFile('proguard-android.txt')
-        }
-    }
-
-    packagingOptions {
-        exclude 'LICENSE.txt'
-    }
-
-    spoon {
-        if (project.hasProperty('spoonClassName')) {
-            className = project.spoonClassName
-        }
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-}
-
-dependencies {
-    implementation project(path: ':sdk:twitter:twitter')
-    implementation project(path: ':sdk:twitter:twitter-mopub')
-    implementation dependency.appCompat
-    implementation dependency.design
-    implementation dependency.okHttpInterceptor
-
-    debugImplementation dependency.leakCanary
-    releaseImplementation dependency.leakCanaryNoOp
-
-    androidTestCompile dependency.spoon
-    androidTestCompile dependency.espresso
-    androidTestCompile dependency.androidTestingSupport
-}
diff --git a/samples/app/lint.xml b/samples/app/lint.xml
deleted file mode 100644
index 98241902..00000000
--- a/samples/app/lint.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<lint>
-    <issue id="GoogleAppIndexingWarning" severity="ignore"/>
-    <issue id="MissingPermission" severity="ignore"/>
-    <issue id="Registered" severity="ignore"/>
-    <issue id="InvalidPackage" severity="ignore"/>
-    <issue id="UnusedResources">
-        <ignore regexp="CONSUMER_KEY|CONSUMER_SECRET|TRACE_ENABLED|COLLECT_IDENTIFIERS_ENABLED" />
-    </issue>
-</lint>
diff --git a/samples/app/src/androidTest/java/com/example/app/SpoonInstrumentationTestRunner.java b/samples/app/src/androidTest/java/com/example/app/SpoonInstrumentationTestRunner.java
deleted file mode 100644
index f7a52979..00000000
--- a/samples/app/src/androidTest/java/com/example/app/SpoonInstrumentationTestRunner.java
+++ /dev/null
@@ -1,49 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app;
-
-import android.app.Application;
-import android.app.KeyguardManager;
-import android.content.Context;
-import android.os.PowerManager;
-import android.support.test.runner.AndroidJUnitRunner;
-
-// Borrowed from spoon-sample app
-// android.permission.DISABLE_KEYGUARD and android.permission.WAKE_LOCK permission is required
-public class SpoonInstrumentationTestRunner extends AndroidJUnitRunner {
-    @Override
-    public void onStart() {
-        runOnMainSync(() -> {
-            final Application app = (Application) getTargetContext().getApplicationContext();
-            final String simpleName = SpoonInstrumentationTestRunner.class.getSimpleName();
-
-            // Unlock the device so that the tests can input keystrokes.
-            ((KeyguardManager) app.getSystemService(Context.KEYGUARD_SERVICE))
-                    .newKeyguardLock(simpleName)
-                    .disableKeyguard();
-
-            // Wake up the screen.
-            ((PowerManager) app.getSystemService(Context.POWER_SERVICE))
-                    .newWakeLock(PowerManager.FULL_WAKE_LOCK | PowerManager
-                            .ACQUIRE_CAUSES_WAKEUP | PowerManager.ON_AFTER_RELEASE, simpleName)
-                    .acquire();
-        });
-
-        super.onStart();
-    }
-}
diff --git a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/AddViewIdlingResource.java b/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/AddViewIdlingResource.java
deleted file mode 100644
index 648a84b8..00000000
--- a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/AddViewIdlingResource.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.support.test.espresso.IdlingResource;
-import android.view.View;
-
-/**
- * AddViewIdlingResource represents a view that is added after an asynchronous operation.
- * When the view is found in the layout, the resource is then idle and ready to use.
- */
-public class AddViewIdlingResource implements IdlingResource {
-
-    private int viewId;
-    private View parentView;
-    private ResourceCallback callback;
-
-    public AddViewIdlingResource(int viewId, View parentView) {
-        this.viewId = viewId;
-        this.parentView = parentView;
-    }
-
-    @Override
-    public String getName() {
-        return Integer.toString(viewId);
-    }
-
-    @Override
-    public boolean isIdleNow() {
-        final View view = parentView.findViewById(viewId);
-        if (view != null && view.getId() == viewId) {
-            callback.onTransitionToIdle();
-            return true;
-        }
-        return false;
-    }
-
-    @Override
-    public void registerIdleTransitionCallback(ResourceCallback resourceCallback) {
-        this.callback = resourceCallback;
-    }
-}
diff --git a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetActivityTest.java b/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetActivityTest.java
deleted file mode 100644
index acd10021..00000000
--- a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetActivityTest.java
+++ /dev/null
@@ -1,83 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.test.ActivityInstrumentationTestCase2;
-import android.view.View;
-
-import com.example.app.R;
-import com.example.app.tweetui.TweetActivity;
-import com.squareup.spoon.Spoon;
-
-import static android.support.test.espresso.Espresso.*;
-import static android.support.test.espresso.action.ViewActions.*;
-import static android.support.test.espresso.matcher.ViewMatchers.*;
-
-/**
- * UI/integration tests of Tweet views added to the layout via code (requires network connectivity).
- */
-public class TweetActivityTest extends ActivityInstrumentationTestCase2<TweetActivity> {
-    private static final String TAG = "TweetActivityTest";
-    private static final String EXPECTED_TIMESTAMP = "• 03/21/06";
-    private static final String EXPECTED_TEXT = "just setting up my twttr";
-    private TweetActivity activity;
-
-    public TweetActivityTest() {
-        super(TweetActivity.class);
-    }
-
-    @Override
-    public void setUp() throws Exception {
-        super.setUp();
-        setActivityInitialTouchMode(true);
-        activity = getActivity();
-        final View root = activity.findViewById(R.id.tweet_region);
-        final AddViewIdlingResource jackRes = new AddViewIdlingResource(R.id.jack_regular_tweet,
-                root);
-        final AddViewIdlingResource jackCompactRes = new AddViewIdlingResource(
-                R.id.jack_compact_tweet, root);
-        final AddViewIdlingResource bikeRes = new AddViewIdlingResource(R.id.bike_regular_tweet,
-                root);
-        final AddViewIdlingResource bikeCompactRes = new AddViewIdlingResource(
-                R.id.bike_compact_tweet, root);
-        registerIdlingResources(jackRes, jackCompactRes, bikeRes, bikeCompactRes);
-    }
-
-    public void testTweetView() throws Exception {
-        onView(withId(R.id.jack_regular_tweet)).perform(scrollTo());
-        TweetAsserts.assertTweetText(R.id.jack_regular_tweet, EXPECTED_TEXT);
-        TweetAsserts.assertTweetTimestamp(R.id.jack_regular_tweet, EXPECTED_TIMESTAMP);
-        TweetAsserts.assertVerifiedUser(R.id.jack_regular_tweet);
-        TweetAsserts.assertActionsEnabled(R.id.jack_regular_tweet);
-
-        onView(withId(R.id.bike_regular_tweet)).perform(scrollTo());
-        TweetAsserts.assertNonVerifiedUser(R.id.bike_regular_tweet);
-
-        Spoon.screenshot(activity, TAG);
-    }
-
-    public void testCompactTweetView() throws Exception {
-        onView(withId(R.id.jack_compact_tweet)).perform(scrollTo());
-        TweetAsserts.assertTweetText(R.id.jack_compact_tweet, EXPECTED_TEXT);
-        TweetAsserts.assertTweetTimestamp(R.id.jack_compact_tweet, EXPECTED_TIMESTAMP);
-        TweetAsserts.assertNonVerifiedUser(R.id.jack_compact_tweet);
-        TweetAsserts.assertActionsEnabled(R.id.jack_compact_tweet);
-
-        Spoon.screenshot(activity, TAG);
-    }
-}
diff --git a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetAsserts.java b/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetAsserts.java
deleted file mode 100644
index 49b05201..00000000
--- a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetAsserts.java
+++ /dev/null
@@ -1,138 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.graphics.drawable.Drawable;
-import android.support.test.espresso.matcher.BoundedMatcher;
-import android.view.View;
-import android.widget.TextView;
-
-import com.example.app.R;
-
-import org.hamcrest.Description;
-import org.hamcrest.Matcher;
-
-import java.lang.SuppressWarnings;
-import java.util.Locale;
-
-import static android.support.test.espresso.Espresso.onView;
-import static android.support.test.espresso.assertion.ViewAssertions.matches;
-import static android.support.test.espresso.matcher.ViewMatchers.hasContentDescription;
-import static android.support.test.espresso.matcher.ViewMatchers.isClickable;
-import static android.support.test.espresso.matcher.ViewMatchers.isDescendantOfA;
-import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
-import static android.support.test.espresso.matcher.ViewMatchers.isFocusable;
-import static android.support.test.espresso.matcher.ViewMatchers.withId;
-import static android.support.test.espresso.matcher.ViewMatchers.withText;
-import static org.hamcrest.Matchers.allOf;
-import static org.hamcrest.Matchers.not;
-
-public abstract class TweetAsserts {
-    @SuppressWarnings("PrivateResource")
-    public static void assertTweetText(int tweetResId, String expected) throws Exception {
-        onView(allOf(withId(R.id.tw__tweet_text),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(isDisplayed()))
-                .check(matches(withText(expected)));
-    }
-
-    @SuppressWarnings("PrivateResource")
-    public static void assertTweetTimestamp(int tweetResId, String expected) throws Exception {
-        onView(allOf(withId(R.id.tw__tweet_timestamp),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(isDisplayed()))
-                .check(matches(withText(expected)));
-    }
-
-    @SuppressWarnings("PrivateResource")
-    public static void assertVerifiedUser(int tweetResId) {
-        onView(allOf(withId(R.id.tw__tweet_author_full_name),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(hasCompoundDrawable(0, 0, R.drawable.tw__ic_tweet_verified, 0)));
-    }
-
-    @SuppressWarnings("PrivateResource")
-    public static void assertNonVerifiedUser(int tweetResId) {
-        onView(allOf(withId(R.id.tw__tweet_author_full_name),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(hasCompoundDrawable(0, 0, 0, 0)));
-    }
-
-    @SuppressWarnings("PrivateResource")
-    public static void assertActionsEnabled(int tweetResId) {
-        // tweet actions enabled
-        onView(allOf(withId(R.id.tw__tweet_action_bar),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(isDisplayed()));
-        // share tweet button
-        onView(allOf(withId(R.id.tw__tweet_share_button),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(isDisplayed()))
-                .check(matches(hasContentDescription()))
-                .check(matches(isFocusable()))
-                .check(matches(isClickable()));
-        // favorite tweet button
-        onView(allOf(withId(R.id.tw__tweet_like_button),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(isDisplayed()))
-                .check(matches(hasContentDescription()))
-                .check(matches(isFocusable()))
-                .check(matches(isClickable()));
-    }
-
-    @SuppressWarnings("PrivateResource")
-    public static void assertActionsDisabled(int tweetResId) {
-        onView(allOf(withId(R.id.tw__tweet_action_bar),
-                isDescendantOfA(withId(tweetResId))))
-                .check(matches(not(isDisplayed())));
-    }
-
-    public static Matcher<View> hasCompoundDrawable(final int start, final int top,
-                                                         final int end, final int bottom) {
-        return new BoundedMatcher<View, TextView>(TextView.class){
-            @Override
-            public void describeTo(Description description) {
-                final String formatted =
-                        String.format(Locale.getDefault(),
-                                "has Compound Drawable: start=%d, top=%d, end=%d, bottom=%d",
-                                start, top, end, bottom);
-                description.appendText(formatted);
-            }
-
-            @Override
-            public boolean matchesSafely(TextView view) {
-                // We cannot verify the actual drawable, but we can verify one has been set.
-                final Drawable [] drawables = view.getCompoundDrawables();
-                if (drawables[0] != null && start == 0) {
-                    return false;
-                }
-                if (drawables[1] != null && top == 0) {
-                    return false;
-                }
-                if (drawables[2] != null && end == 0) {
-                    return false;
-                }
-                if (drawables[3] != null && bottom == 0) {
-                    return false;
-                }
-
-                return true;
-            }
-        };
-    }
-}
diff --git a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetActivityTest.java b/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetActivityTest.java
deleted file mode 100644
index 0b8cb365..00000000
--- a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetActivityTest.java
+++ /dev/null
@@ -1,104 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.test.ActivityInstrumentationTestCase2;
-
-import com.example.app.R;
-import com.example.app.tweetui.XmlTweetActivity;
-import com.squareup.spoon.Spoon;
-
-import static android.support.test.espresso.Espresso.*;
-import static android.support.test.espresso.action.ViewActions.*;
-import static android.support.test.espresso.matcher.ViewMatchers.*;
-
-/**
- * UI/integration tests of XML Tweet views (requires network connectivity).
- */
-public class XmlTweetActivityTest extends ActivityInstrumentationTestCase2<XmlTweetActivity> {
-    private static final String TAG = "XmlTweetActivityTest";
-    private static final String EXPECTED_TIMESTAMP = "• 03/21/06";
-    private static final String EXPECTED_TEXT = "just setting up my twttr";
-    private XmlTweetActivity activity;
-    // activity views to test
-    TweetView jackTweet;
-    TweetView bikeTweet;
-    TweetView simpsonsRetweet;
-    CompactTweetView jackCompactTweet;
-    CompactTweetView bikeCompactTweet;
-    CompactTweetView simpsonsCompactRetweet;
-
-    public XmlTweetActivityTest() {
-        super(XmlTweetActivity.class);
-    }
-
-    @Override
-    public void setUp() throws Exception {
-        super.setUp();
-        setActivityInitialTouchMode(true);
-        activity = getActivity();
-        findViews();
-        final XmlTweetViewIdlingResource jackRes = new XmlTweetViewIdlingResource(jackTweet,
-                "jack_regular_tweet");
-        final XmlTweetViewIdlingResource jackCompactRes = new XmlTweetViewIdlingResource(
-                jackCompactTweet, "jack_compact_tweet");
-        final XmlTweetViewIdlingResource bikeRes = new XmlTweetViewIdlingResource(bikeTweet,
-                "bike_regular_tweet");
-        final XmlTweetViewIdlingResource bikeCompactRes = new XmlTweetViewIdlingResource(
-                bikeCompactTweet, "bike_compact_tweet");
-        final XmlTweetViewIdlingResource simpsonsRes = new XmlTweetViewIdlingResource(
-                simpsonsRetweet, "retweet_simpsons_tweet");
-        final XmlTweetViewIdlingResource simpsonsCompactRes = new XmlTweetViewIdlingResource(
-                simpsonsCompactRetweet, "retweet_simpsons_tweet_compact");
-        registerIdlingResources(jackRes, jackCompactRes, bikeRes, bikeCompactRes,
-                simpsonsRes, simpsonsCompactRes);
-    }
-
-    private void findViews() {
-        jackTweet = activity.findViewById(R.id.jack_regular_tweet);
-        jackCompactTweet = activity.findViewById(R.id.jack_compact_tweet);
-        bikeTweet = activity.findViewById(R.id.bike_regular_tweet);
-        bikeCompactTweet = activity.findViewById(R.id.bike_compact_tweet);
-        simpsonsRetweet = activity.findViewById(R.id.retweet_simpsons_tweet);
-        simpsonsCompactRetweet
-                = activity.findViewById(R.id.retweet_simpsons_compact_tweet);
-    }
-
-    public void testTweetView() throws Exception {
-        onView(withId(R.id.jack_regular_tweet)).perform(scrollTo());
-        TweetAsserts.assertTweetText(R.id.jack_regular_tweet, EXPECTED_TEXT);
-        TweetAsserts.assertTweetTimestamp(R.id.jack_regular_tweet, EXPECTED_TIMESTAMP);
-        TweetAsserts.assertVerifiedUser(R.id.jack_regular_tweet);
-        TweetAsserts.assertActionsDisabled(R.id.jack_regular_tweet);
-
-        onView(withId(R.id.bike_regular_tweet)).perform(scrollTo());
-        TweetAsserts.assertNonVerifiedUser(R.id.bike_regular_tweet);
-
-        Spoon.screenshot(activity, TAG);
-    }
-
-    public void testCompactTweetView() throws Exception {
-        onView(withId(R.id.jack_compact_tweet)).perform(scrollTo());
-        TweetAsserts.assertTweetText(R.id.jack_compact_tweet, EXPECTED_TEXT);
-        TweetAsserts.assertTweetTimestamp(R.id.jack_compact_tweet, EXPECTED_TIMESTAMP);
-        TweetAsserts.assertNonVerifiedUser(R.id.jack_compact_tweet);
-        TweetAsserts.assertActionsDisabled(R.id.jack_compact_tweet);
-
-        Spoon.screenshot(activity, TAG);
-    }
-}
diff --git a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetViewIdlingResource.java b/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetViewIdlingResource.java
deleted file mode 100644
index 8c7c59dd..00000000
--- a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetViewIdlingResource.java
+++ /dev/null
@@ -1,59 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.support.test.espresso.IdlingResource;
-
-/**
- * XmlTweetViewIdlingResource represents an xml defined Tweet view which is asynchronously set
- * with a Tweet. When the Tweet and a field within the Tweet become non-null, the asynchronous
- * set is considered to have completed. The resource is then idle and ready ot use in tests.
- */
-public class XmlTweetViewIdlingResource implements IdlingResource {
-
-    private BaseTweetView view;
-    private String name;
-    private ResourceCallback callback;
-
-    public XmlTweetViewIdlingResource(BaseTweetView view, String name) {
-        this.view = view;
-        this.name = name;
-    }
-
-    @Override
-    public String getName() {
-        return name;
-    }
-
-    @Override
-    public boolean isIdleNow() {
-        // TODO: BaseTweetView should provide an indication that rendering has completed to use here
-        // XML TweetViews set a Tweet with only an id, before a Tweet is loaded from the network,
-        // checking getTweet() is non-null is not sufficient.
-        if (view.getTweet() != null && view.getTweet().text != null) {
-            callback.onTransitionToIdle();
-            return true;
-        }
-        return false;
-    }
-
-    @Override
-    public void registerIdleTransitionCallback(ResourceCallback resourceCallback) {
-        this.callback = resourceCallback;
-    }
-}
diff --git a/samples/app/src/debug/AndroidManifest.xml b/samples/app/src/debug/AndroidManifest.xml
deleted file mode 100644
index a40726b7..00000000
--- a/samples/app/src/debug/AndroidManifest.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<manifest
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <!-- For instrumentation tests -->
-    <uses-permission android:name="android.permission.DISABLE_KEYGUARD"/>
-    <uses-permission android:name="android.permission.WAKE_LOCK"/>
-
-</manifest>
diff --git a/samples/app/src/main/AndroidManifest.xml b/samples/app/src/main/AndroidManifest.xml
deleted file mode 100644
index b6f74025..00000000
--- a/samples/app/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,109 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    package="com.example.app">
-
-    <uses-permission android:name="android.permission.INTERNET"/>
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
-    <uses-permission android:name="android.permission.READ_CONTACTS"/>
-
-    <application
-        android:name=".SampleApplication"
-        android:allowBackup="true"
-        android:icon="@drawable/twitter_ic_launcher"
-        android:label="@string/twitter_app_name"
-        android:supportsRtl="true"
-        android:theme="@style/TwitterSampleTheme">
-        <activity
-            android:name=".TwitterSampleActivity"
-            android:label="@string/twitter_app_name">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN"/>
-
-                <category android:name="android.intent.category.LAUNCHER"/>
-            </intent-filter>
-        </activity>
-
-        <!-- Activities for testing TwitterCore -->
-        <activity
-            android:name=".twittercore.TwitterCoreMainActivity"
-            android:label="@string/kit_twittercore"/>
-
-        <!-- Activities for testing TweetComposer -->
-        <activity
-            android:name=".tweetcomposer.TweetComposerMainActivity"
-            android:label="@string/kit_tweetcomposer"/>
-
-        <!-- Activities for testing TweetUi -->
-        <activity
-            android:name=".tweetui.TweetUiMainActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.XmlTweetActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.TweetActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.UniqueTweetActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.FixedTimelineActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.TimelineActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.TimelinesActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.TweetPreviewActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.TweetPojoActivity"
-            android:label="@string/kit_tweetui"/>
-        <activity
-            android:name=".tweetui.RtlTimelineActivity"
-            android:label="@string/kit_tweetui"/>
-
-        <receiver
-            android:name=".tweetcomposer.TweetSuccessReceiver"
-            android:exported="false">
-            <intent-filter>
-                <action android:name="com.twitter.sdk.android.tweetcomposer.UPLOAD_SUCCESS"/>
-            </intent-filter>
-        </receiver>
-
-        <receiver
-            android:name=".tweetcomposer.TweetFailureReceiver"
-            android:exported="false">
-            <intent-filter>
-                <action android:name="com.twitter.sdk.android.tweetcomposer.UPLOAD_FAILURE"/>
-            </intent-filter>
-        </receiver>
-
-        <receiver
-            android:name=".tweetcomposer.TweetCancelReceiver"
-            android:exported="false">
-            <intent-filter>
-                <action android:name="com.twitter.sdk.android.tweetcomposer.TWEET_COMPOSE_CANCEL"/>
-            </intent-filter>
-        </receiver>
-
-    </application>
-</manifest>
diff --git a/samples/app/src/main/ic_launcher-web.png b/samples/app/src/main/ic_launcher-web.png
deleted file mode 100644
index 5c63bc5e..00000000
Binary files a/samples/app/src/main/ic_launcher-web.png and /dev/null differ
diff --git a/samples/app/src/main/java/com/example/app/BaseActivity.java b/samples/app/src/main/java/com/example/app/BaseActivity.java
deleted file mode 100644
index 5a4d3167..00000000
--- a/samples/app/src/main/java/com/example/app/BaseActivity.java
+++ /dev/null
@@ -1,45 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app;
-
-import android.support.v7.app.AppCompatActivity;
-import android.support.v7.widget.Toolbar;
-
-/**
- * BaseActivity is an AppCompatActivity which sets up a Toolbar if present in the layout.
- */
-public class BaseActivity extends AppCompatActivity {
-
-    @Override
-    public void setContentView(int layoutResID) {
-        super.setContentView(layoutResID);
-        setupToolbar();
-    }
-
-    /**
-     * Finds and sets the Toolbar as the support ActionBar if it is non-null. Returns the Toolbar.
-     * @return The Toolbar view or null if not found.
-     */
-    protected Toolbar setupToolbar() {
-        final Toolbar toolbar = findViewById(R.id.toolbar);
-        if (toolbar != null) {
-            setSupportActionBar(toolbar);
-        }
-        return toolbar;
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/SampleApplication.java b/samples/app/src/main/java/com/example/app/SampleApplication.java
deleted file mode 100644
index acc9c1c0..00000000
--- a/samples/app/src/main/java/com/example/app/SampleApplication.java
+++ /dev/null
@@ -1,71 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app;
-
-import android.app.Application;
-import android.os.StrictMode;
-import android.util.Log;
-
-import com.squareup.leakcanary.LeakCanary;
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterSession;
-
-import okhttp3.OkHttpClient;
-import okhttp3.logging.HttpLoggingInterceptor;
-
-public class SampleApplication extends Application {
-    private static final String TAG = SampleApplication.class.getSimpleName();
-
-    @Override
-    public void onCreate() {
-        super.onCreate();
-        LeakCanary.install(this);
-
-        Log.d(TAG, "Setting up StrictMode policy checking.");
-        StrictMode.setThreadPolicy(new StrictMode.ThreadPolicy.Builder()
-                .detectAll()
-                .penaltyLog()
-                .build());
-
-        StrictMode.setVmPolicy(new StrictMode.VmPolicy.Builder()
-                .detectAll()
-                .penaltyLog()
-                .build());
-
-        Twitter.initialize(this);
-
-        final HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();
-        loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BASIC);
-        final OkHttpClient customClient = new OkHttpClient.Builder()
-                .addInterceptor(loggingInterceptor).build();
-
-        final TwitterSession activeSession = TwitterCore.getInstance()
-                .getSessionManager().getActiveSession();
-
-        final TwitterApiClient customApiClient;
-        if (activeSession != null) {
-            customApiClient = new TwitterApiClient(activeSession, customClient);
-            TwitterCore.getInstance().addApiClient(activeSession, customApiClient);
-        } else {
-            customApiClient = new TwitterApiClient(customClient);
-            TwitterCore.getInstance().addGuestApiClient(customApiClient);
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/TwitterSampleActivity.java b/samples/app/src/main/java/com/example/app/TwitterSampleActivity.java
deleted file mode 100644
index cc97cebe..00000000
--- a/samples/app/src/main/java/com/example/app/TwitterSampleActivity.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.view.Menu;
-import android.view.MenuInflater;
-import android.view.View;
-
-import com.example.app.tweetcomposer.TweetComposerMainActivity;
-import com.example.app.tweetui.TweetUiMainActivity;
-import com.example.app.twittercore.TwitterCoreMainActivity;
-
-public class TwitterSampleActivity extends BaseActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.twitter_activity);
-    }
-
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        final MenuInflater inflater = getMenuInflater();
-        inflater.inflate(R.menu.twitter_activity_actions, menu);
-        return super.onCreateOptionsMenu(menu);
-    }
-
-    public void onTwitterCore(View view) {
-        startActivity(new Intent(this, TwitterCoreMainActivity.class));
-    }
-
-    public void onTweetComposer(View view) {
-        startActivity(new Intent(this, TweetComposerMainActivity.class));
-    }
-
-    public void onTweetUi(View view) {
-        startActivity(new Intent(this, TweetUiMainActivity.class));
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetcomposer/TweetCancelReceiver.java b/samples/app/src/main/java/com/example/app/tweetcomposer/TweetCancelReceiver.java
deleted file mode 100644
index 365c78ca..00000000
--- a/samples/app/src/main/java/com/example/app/tweetcomposer/TweetCancelReceiver.java
+++ /dev/null
@@ -1,32 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetcomposer;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.util.Log;
-
-public class TweetCancelReceiver extends BroadcastReceiver {
-
-    @Override
-    public void onReceive(Context context, Intent intent) {
-        Log.d("TweetCancelReceiver", "User cancelled compose tweet");
-    }
-}
-
diff --git a/samples/app/src/main/java/com/example/app/tweetcomposer/TweetComposerMainActivity.java b/samples/app/src/main/java/com/example/app/tweetcomposer/TweetComposerMainActivity.java
deleted file mode 100644
index d8e299ca..00000000
--- a/samples/app/src/main/java/com/example/app/tweetcomposer/TweetComposerMainActivity.java
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetcomposer;
-
-import android.app.Activity;
-import android.content.Intent;
-import android.net.Uri;
-import android.os.Bundle;
-import android.support.v7.app.ActionBar;
-import android.util.Log;
-import android.widget.Button;
-
-import com.example.app.BaseActivity;
-import com.example.app.R;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.tweetcomposer.ComposerActivity;
-import com.twitter.sdk.android.tweetcomposer.TweetComposer;
-
-import java.net.MalformedURLException;
-import java.net.URL;
-
-public class TweetComposerMainActivity extends BaseActivity {
-    private static final String TAG = "TweetComposer";
-    private static final String IMAGE_TYPES = "image/*";
-    private static final int IMAGE_PICKER_CODE = 141;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.tweetcomposer_activity_main);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.kit_tweetcomposer);
-        }
-
-        final Button tweetComposer = findViewById(R.id.tweet_composer);
-        tweetComposer.setOnClickListener(view -> {
-            try {
-                new TweetComposer.Builder(TweetComposerMainActivity.this)
-                        .text("Tweet from TwitterKit!")
-                        .url(new URL("http://www.twitter.com"))
-                        .show();
-
-            } catch (MalformedURLException e) {
-                Log.e(TAG, "error creating tweet intent", e);
-            }
-        });
-
-        final Button organicComposer = findViewById(R.id.organic_composer);
-        organicComposer.setOnClickListener(view -> launchPicker());
-    }
-
-    void launchPicker() {
-        final Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
-        intent.setType(IMAGE_TYPES);
-        startActivityForResult(Intent.createChooser(intent, "Pick an Image"), IMAGE_PICKER_CODE);
-    }
-
-    @Override
-    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        if (requestCode == IMAGE_PICKER_CODE && resultCode == Activity.RESULT_OK) {
-            launchComposer(data.getData());
-        }
-    }
-
-    void launchComposer(Uri uri) {
-        final TwitterSession session = TwitterCore.getInstance().getSessionManager()
-                .getActiveSession();
-        final Intent intent = new ComposerActivity.Builder(TweetComposerMainActivity.this)
-                .session(session)
-                .image(uri)
-                .text("Tweet from TwitterKit!")
-                .hashtags("#twitter")
-                .createIntent();
-        startActivity(intent);
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetcomposer/TweetFailureReceiver.java b/samples/app/src/main/java/com/example/app/tweetcomposer/TweetFailureReceiver.java
deleted file mode 100644
index 51ed0787..00000000
--- a/samples/app/src/main/java/com/example/app/tweetcomposer/TweetFailureReceiver.java
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetcomposer;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.os.Bundle;
-import android.util.Log;
-
-import com.twitter.sdk.android.tweetcomposer.TweetUploadService;
-
-public class TweetFailureReceiver extends BroadcastReceiver {
-
-    @Override
-    public void onReceive(Context context, Intent intent) {
-        Bundle intentExtras = intent.getExtras();
-        if (intentExtras != null) {
-            final Intent retryIntent
-                    = intentExtras.getParcelable(TweetUploadService.EXTRA_RETRY_INTENT);
-            Log.e("TweetFailureReceiver", retryIntent.toString());
-        }
-    }
-}
-
diff --git a/samples/app/src/main/java/com/example/app/tweetcomposer/TweetSuccessReceiver.java b/samples/app/src/main/java/com/example/app/tweetcomposer/TweetSuccessReceiver.java
deleted file mode 100644
index 5edaa4f5..00000000
--- a/samples/app/src/main/java/com/example/app/tweetcomposer/TweetSuccessReceiver.java
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetcomposer;
-
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.os.Bundle;
-import android.widget.Toast;
-
-import com.twitter.sdk.android.tweetcomposer.TweetUploadService;
-
-public class TweetSuccessReceiver extends BroadcastReceiver {
-
-    @Override
-    public void onReceive(Context context, Intent intent) {
-        Bundle intentExtras = intent.getExtras();
-        if (intentExtras != null) {
-            Long tweetId = intentExtras.getLong(TweetUploadService.EXTRA_TWEET_ID);
-            Toast.makeText(context, "Success TweetId " + Long.toString(tweetId),
-                    Toast.LENGTH_SHORT).show();
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/CollectionTimelineFragment.java b/samples/app/src/main/java/com/example/app/tweetui/CollectionTimelineFragment.java
deleted file mode 100644
index 60057b73..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/CollectionTimelineFragment.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.ListFragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.R;
-import com.twitter.sdk.android.tweetui.CollectionTimeline;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-
-/**
- * CollectionTimelineFragment demonstrates a TimelineListAdapter with a CollectionTimeline.
- */
-public class CollectionTimelineFragment extends ListFragment {
-
-    public static CollectionTimelineFragment newInstance() {
-        return new CollectionTimelineFragment();
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        final CollectionTimeline collectionTimeline = new CollectionTimeline.Builder()
-                .id(659110687482839040L).build();
-        final TweetTimelineListAdapter adapter = new TweetTimelineListAdapter(getActivity(),
-                collectionTimeline);
-        setListAdapter(adapter);
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.tweetui_timeline, container, false);
-    }
-}
-
-
diff --git a/samples/app/src/main/java/com/example/app/tweetui/FixedTimelineActivity.java b/samples/app/src/main/java/com/example/app/tweetui/FixedTimelineActivity.java
deleted file mode 100644
index f1b7a4e7..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/FixedTimelineActivity.java
+++ /dev/null
@@ -1,110 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.ListFragment;
-import android.support.v7.app.ActionBar;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.Toast;
-
-import com.example.app.R;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.FixedTweetTimeline;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-import com.twitter.sdk.android.tweetui.TweetUtils;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-
-public class FixedTimelineActivity extends TweetUiActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.fixed_timeline);
-        }
-    }
-
-    @Override
-    int getLayout() {
-        return R.layout.activity_frame;
-    }
-
-    @Override
-    Fragment createFragment() {
-        return FixedTimelineFragment.newInstance();
-    }
-
-    /**
-     * Fragment showing a Timeline with a fixed list of Tweets.
-     */
-    public static class FixedTimelineFragment extends ListFragment {
-
-        final List<Long> tweetIds = new ArrayList<>();
-
-        public static FixedTimelineFragment newInstance() {
-            return new FixedTimelineFragment();
-        }
-
-        @Override
-        public void onCreate(Bundle savedInstanceState) {
-            super.onCreate(savedInstanceState);
-
-            tweetIds.addAll(Arrays.asList(574000939800993792L, 503435417459249153L, 510908133917487104L,
-                    473514864153870337L, 477788140900347904L, 20L, 484816434313195520L,
-                    466041861774114819L, 448250020773380096L));
-
-            TweetUtils.loadTweets(tweetIds, new Callback<List<Tweet>>() {
-                @Override
-                public void success(Result<List<Tweet>> result) {
-                    final FixedTweetTimeline fixedTimeline = new FixedTweetTimeline.Builder()
-                            .setTweets(result.data).build();
-                    final TweetTimelineListAdapter adapter = new TweetTimelineListAdapter(getActivity(),
-                            fixedTimeline);
-                    setListAdapter(adapter);
-                }
-
-                @Override
-                public void failure(TwitterException exception) {
-                    final Activity activity = getActivity();
-                    if (activity != null && !activity.isFinishing()) {
-                        Toast.makeText(activity, R.string.multi_tweet_view_error,
-                                Toast.LENGTH_SHORT).show();
-                    }
-                }
-            });
-        }
-
-        @Override
-        public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                                 Bundle savedInstanceState) {
-            return inflater.inflate(R.layout.tweetui_timeline, container, false);
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/ListTimelineFragment.java b/samples/app/src/main/java/com/example/app/tweetui/ListTimelineFragment.java
deleted file mode 100644
index 9959e1a9..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/ListTimelineFragment.java
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.ListFragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.R;
-import com.example.app.twittercore.TwitterCoreMainActivity;
-import com.google.gson.Gson;
-import com.google.gson.stream.JsonReader;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterAuthException;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.BasicTimelineFilter;
-import com.twitter.sdk.android.tweetui.FilterValues;
-import com.twitter.sdk.android.tweetui.TimelineFilter;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-import com.twitter.sdk.android.tweetui.TwitterListTimeline;
-
-import java.io.InputStream;
-import java.io.InputStreamReader;
-
-/**
- * ListTimelineFragment demonstrates a TimelineListAdapter with a TwitterListTimeline.
- */
-public class ListTimelineFragment extends ListFragment {
-
-    public static ListTimelineFragment newInstance() {
-        return new ListTimelineFragment();
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        // launch the app login activity when a guest user tries to favorite a Tweet
-        final Callback<Tweet> actionCallback = new Callback<Tweet>() {
-            @Override
-            public void success(Result<Tweet> result) {
-                // Intentionally blank
-            }
-            @Override
-            public void failure(TwitterException exception) {
-                if (exception instanceof TwitterAuthException) {
-                    startActivity(TwitterCoreMainActivity.newIntent(getActivity()));
-                }
-            }
-        };
-
-        final TwitterListTimeline timeline = new TwitterListTimeline.Builder()
-                .slugWithOwnerScreenName("twitter-bots", "dghubble")
-                .build();
-
-        final TweetTimelineListAdapter adapter =
-                new TweetTimelineListAdapter.Builder(getActivity())
-                .setTimelineFilter(getBasicTimelineFilter())
-                .setTimeline(timeline)
-                .setViewStyle(R.style.tw__TweetLightWithActionsStyle)
-                .setOnActionCallback(actionCallback)
-                .build();
-
-        setListAdapter(adapter);
-    }
-
-    private TimelineFilter getBasicTimelineFilter() {
-        final InputStream inputStream = getContext().getResources().
-                openRawResource(R.raw.filter_values);
-        final JsonReader reader = new JsonReader(new InputStreamReader(inputStream));
-        final FilterValues filterValues = new Gson().fromJson(reader, FilterValues.class);
-        return new BasicTimelineFilter(filterValues);
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.tweetui_timeline, container, false);
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/RtlTimelineActivity.java b/samples/app/src/main/java/com/example/app/tweetui/RtlTimelineActivity.java
deleted file mode 100644
index cf0378ec..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/RtlTimelineActivity.java
+++ /dev/null
@@ -1,97 +0,0 @@
-package com.example.app.tweetui;
-
-import android.annotation.TargetApi;
-import android.content.res.Configuration;
-import android.os.Build;
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.ListFragment;
-import android.support.v7.app.ActionBar;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.R;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-import com.twitter.sdk.android.tweetui.UserTimeline;
-
-import java.util.Locale;
-
-public class RtlTimelineActivity extends TweetUiActivity {
-    final Locale deviceLocale = Locale.getDefault();
-
-    @Override
-    @TargetApi(Build.VERSION_CODES.JELLY_BEAN_MR1)
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.rtl_timeline);
-        }
-
-        if ( Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
-            findViewById(android.R.id.content).setLayoutDirection(View.LAYOUT_DIRECTION_RTL);
-        }
-    }
-
-    @Override
-    int getLayout() {
-        return R.layout.activity_frame;
-    }
-
-    @Override
-    Fragment createFragment() {
-        return RtlTimelineFragment.newInstance();
-    }
-
-    @Override
-    public void onResume() {
-        super.onResume();
-
-        final Locale locale = new Locale("ar");
-        Locale.setDefault(locale);
-        final Configuration config = getResources().getConfiguration();
-        config.locale = locale;
-        getResources().updateConfiguration(config, getResources().getDisplayMetrics());
-    }
-
-    @Override
-    public void onPause() {
-        super.onPause();
-
-        Locale.setDefault(deviceLocale);
-        final Configuration config = getResources().getConfiguration();
-        config.locale = deviceLocale;
-        getResources().updateConfiguration(config, getResources().getDisplayMetrics());
-    }
-
-    /**
-     * Fragment showing a Timeline with a list of Rtl Tweets.
-     */
-    public static class RtlTimelineFragment extends ListFragment {
-
-        public static RtlTimelineFragment newInstance() {
-            return new RtlTimelineFragment();
-        }
-
-        @Override
-        public void onCreate(Bundle savedInstanceState) {
-            super.onCreate(savedInstanceState);
-
-            final UserTimeline userTimeline = new UserTimeline.Builder()
-                    .screenName("DubaiAirportsAr")
-                    .build();
-            final TweetTimelineListAdapter adapter = new TweetTimelineListAdapter.Builder(getActivity())
-                    .setTimeline(userTimeline)
-                    .build();
-
-            setListAdapter(adapter);
-        }
-
-        @Override
-        public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                                 Bundle savedInstanceState) {
-            return inflater.inflate(R.layout.tweetui_timeline, container, false);
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/SearchTimelineFragment.java b/samples/app/src/main/java/com/example/app/tweetui/SearchTimelineFragment.java
deleted file mode 100644
index e2ca78df..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/SearchTimelineFragment.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.ListFragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.R;
-import com.twitter.sdk.android.tweetui.SearchTimeline;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-
-/**
- * SearchTimelineFragment demonstrates a TimelineListAdapter with a SearchTimeline.
- */
-public class SearchTimelineFragment extends ListFragment {
-
-    public static SearchTimelineFragment newInstance() {
-        return new SearchTimelineFragment();
-    }
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        final SearchTimeline searchTimeline = new SearchTimeline.Builder()
-                .query("#twitterflock")
-                .maxItemsPerRequest(50)
-                .build();
-        final TweetTimelineListAdapter adapter = new TweetTimelineListAdapter(getActivity(),
-                searchTimeline);
-        setListAdapter(adapter);
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-            Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.tweetui_timeline, container, false);
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/TimelineActivity.java b/samples/app/src/main/java/com/example/app/tweetui/TimelineActivity.java
deleted file mode 100644
index 14b48c52..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/TimelineActivity.java
+++ /dev/null
@@ -1,128 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.app.Activity;
-import android.os.Bundle;
-import android.support.v4.widget.SwipeRefreshLayout;
-import android.support.v7.app.ActionBar;
-import android.view.View;
-import android.widget.AbsListView;
-import android.widget.ListView;
-import android.widget.Toast;
-
-import com.example.app.BaseActivity;
-import com.example.app.R;
-import com.example.app.twittercore.TwitterCoreMainActivity;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterAuthException;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.SearchTimeline;
-import com.twitter.sdk.android.tweetui.TimelineResult;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-
-import java.lang.ref.WeakReference;
-
-/**
- * TimelineActivity shows a full screen timeline which is useful for screenshots.
- */
-public class TimelineActivity extends BaseActivity {
-
-    final WeakReference<Activity> activityRef = new WeakReference<>(TimelineActivity.this);
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.tweetui_swipe_timeline);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.refresh_timeline_title);
-        }
-
-        // launch the app login activity when a guest user tries to favorite a Tweet
-        final Callback<Tweet> actionCallback = new Callback<Tweet>() {
-            @Override
-            public void success(Result<Tweet> result) {
-                // Intentionally blank
-            }
-            @Override
-            public void failure(TwitterException exception) {
-                if (exception instanceof TwitterAuthException) {
-                    startActivity(TwitterCoreMainActivity.newIntent(TimelineActivity.this));
-                }
-            }
-        };
-
-        final SwipeRefreshLayout swipeLayout = findViewById(R.id.swipe_layout);
-        final View emptyView = findViewById(android.R.id.empty);
-        final ListView listView = findViewById(android.R.id.list);
-        listView.setEmptyView(emptyView);
-
-        final SearchTimeline timeline = new SearchTimeline.Builder().query("#twitter").build();
-        final TweetTimelineListAdapter adapter = new TweetTimelineListAdapter.Builder(this)
-                .setTimeline(timeline)
-                .setViewStyle(R.style.tw__TweetLightWithActionsStyle)
-                .setOnActionCallback(actionCallback)
-                .build();
-        listView.setAdapter(adapter);
-
-        swipeLayout.setColorSchemeResources(R.color.twitter_blue, R.color.twitter_dark);
-
-        // set custom scroll listener to enable swipe refresh layout only when at list top
-        listView.setOnScrollListener(new AbsListView.OnScrollListener() {
-            boolean enableRefresh = false;
-            @Override
-            public void onScrollStateChanged(AbsListView view, int scrollState) {}
-            @Override
-            public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount,
-                                 int totalItemCount) {
-                if (listView != null && listView.getChildCount() > 0) {
-                    // check that the first item is visible and that its top matches the parent
-                    enableRefresh = listView.getFirstVisiblePosition() == 0 &&
-                            listView.getChildAt(0).getTop() >= 0;
-                } else {
-                    enableRefresh = false;
-                }
-                swipeLayout.setEnabled(enableRefresh);
-            }
-        });
-
-        // specify action to take on swipe refresh
-        swipeLayout.setOnRefreshListener(() -> {
-            swipeLayout.setRefreshing(true);
-            adapter.refresh(new Callback<TimelineResult<Tweet>>() {
-                @Override
-                public void success(Result<TimelineResult<Tweet>> result) {
-                    swipeLayout.setRefreshing(false);
-                }
-
-                @Override
-                public void failure(TwitterException exception) {
-                    swipeLayout.setRefreshing(false);
-                    final Activity activity = activityRef.get();
-                    if (activity != null && !activity.isFinishing()) {
-                        Toast.makeText(activity, exception.getMessage(),
-                                Toast.LENGTH_SHORT).show();
-                    }
-                }
-            });
-        });
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/TimelinesActivity.java b/samples/app/src/main/java/com/example/app/tweetui/TimelinesActivity.java
deleted file mode 100644
index 9191319d..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/TimelinesActivity.java
+++ /dev/null
@@ -1,112 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.content.res.Resources;
-import android.os.Bundle;
-import android.support.design.widget.TabLayout;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.FragmentManager;
-import android.support.v4.app.FragmentPagerAdapter;
-import android.support.v4.view.ViewPager;
-import android.support.v7.app.AppCompatActivity;
-
-import com.example.app.R;
-
-/**
- * TimelinesActivity pages between different timeline Fragments.
- */
-public class TimelinesActivity extends AppCompatActivity {
-    private static final int PAGE_SEARCH = 0;
-    private static final int PAGE_USER = 1;
-    private static final int PAGE_USER_RECYCLER_VIEW = 2;
-    private static final int PAGE_COLLECTION = 3;
-    private static final int PAGE_LIST = 4;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_pager);
-
-        final FragmentManager fm = getSupportFragmentManager();
-        final FragmentPagerAdapter pagerAdapter = new TimelinePagerAdapter(fm, getResources());
-        final ViewPager viewPager = findViewById(R.id.pager);
-        viewPager.setAdapter(pagerAdapter);
-
-        final TabLayout tabLayout = findViewById(R.id.tab_layout);
-        tabLayout.setupWithViewPager(viewPager);
-    }
-
-    public static class TimelinePagerAdapter extends FragmentPagerAdapter {
-        // titles for timeline fragments, in order
-        private static final int[] PAGE_TITLE_RES_IDS = {
-                R.string.search_timeline_title,
-                R.string.user_timeline_title,
-                R.string.user_recycler_view_timeline_title,
-                R.string.collection_timeline_title,
-                R.string.list_timeline_title,
-        };
-        private Resources resources;
-
-        public TimelinePagerAdapter(FragmentManager fm, Resources resources) {
-            super(fm);
-            this.resources = resources;
-        }
-
-        @Override
-        public Fragment getItem(int position) {
-            switch (position) {
-                case PAGE_SEARCH:
-                    return SearchTimelineFragment.newInstance();
-                case PAGE_USER:
-                    return UserTimelineFragment.newInstance();
-                case PAGE_USER_RECYCLER_VIEW:
-                    return UserTimelineRecyclerViewFragment.newInstance();
-                case PAGE_COLLECTION:
-                    return CollectionTimelineFragment.newInstance();
-                case PAGE_LIST:
-                    return ListTimelineFragment.newInstance();
-                default:
-                    throw new IllegalStateException("Unexpected Fragment page item requested.");
-            }
-        }
-
-        @Override
-        public int getCount() {
-            return PAGE_TITLE_RES_IDS.length;
-        }
-
-        @Override
-        public CharSequence getPageTitle(int position) {
-            switch (position) {
-                case PAGE_SEARCH:
-                    return resources.getString(PAGE_TITLE_RES_IDS[PAGE_SEARCH]);
-                case PAGE_USER:
-                    return resources.getString(PAGE_TITLE_RES_IDS[PAGE_USER]);
-                case PAGE_USER_RECYCLER_VIEW:
-                    return resources.getString(PAGE_TITLE_RES_IDS[PAGE_USER_RECYCLER_VIEW]);
-                case PAGE_COLLECTION:
-                    return resources.getString(PAGE_TITLE_RES_IDS[PAGE_COLLECTION]);
-                case PAGE_LIST:
-                    return resources.getString(PAGE_TITLE_RES_IDS[PAGE_LIST]);
-                default:
-                    throw new IllegalStateException("Unexpected Fragment page title requested.");
-            }
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/TweetActivity.java b/samples/app/src/main/java/com/example/app/tweetui/TweetActivity.java
deleted file mode 100644
index cfca9983..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/TweetActivity.java
+++ /dev/null
@@ -1,159 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.content.Context;
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBar;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.R;
-import com.example.app.twittercore.TwitterCoreMainActivity;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterAuthException;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.BaseTweetView;
-import com.twitter.sdk.android.tweetui.CompactTweetView;
-import com.twitter.sdk.android.tweetui.TweetUtils;
-import com.twitter.sdk.android.tweetui.TweetView;
-
-import java.util.Arrays;
-import java.util.List;
-
-public class TweetActivity extends TweetUiActivity {
-    private static final String TAG = "TweetActivity";
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.tweets_activity);
-        }
-    }
-
-    @Override
-    int getLayout() {
-        return R.layout.activity_frame;
-    }
-
-    @Override
-    Fragment createFragment() {
-        return TweetsFragment.newInstance();
-    }
-
-    public static class TweetsFragment extends Fragment {
-
-        // launch the app login activity when a guest user tries to favorite a Tweet
-        final Callback<Tweet> actionCallback = new Callback<Tweet>() {
-            @Override
-            public void success(Result<Tweet> result) {
-                // Intentionally blank
-            }
-            @Override
-            public void failure(TwitterException exception) {
-                if (exception instanceof TwitterAuthException) {
-                    startActivity(TwitterCoreMainActivity.newIntent(getActivity()));
-                }
-            }
-        };
-
-        public static TweetsFragment newInstance() {
-            return new TweetsFragment();
-        }
-
-        @Override
-        public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                Bundle savedInstanceState) {
-            final View v = inflater.inflate(R.layout.tweetui_fragment_tweet, container, false);
-
-            final ViewGroup tweetRegion = v.findViewById(R.id.tweet_region);
-
-            // load single Tweets and construct TweetViews
-            loadTweet(20L, tweetRegion, R.id.jack_regular_tweet);
-            loadTweet(510908133917487104L, tweetRegion, R.id.bike_regular_tweet);
-
-            // load multiple Tweets and construct CompactTweetViews
-            final List<Long> tweetIds = Arrays.asList(20L, 510908133917487104L);
-            final List<Integer> viewIds = Arrays.asList(R.id.jack_compact_tweet,
-                    R.id.bike_compact_tweet);
-            loadTweets(tweetIds, tweetRegion, viewIds);
-
-            return v;
-        }
-
-        /**
-         * loadTweet wraps TweetUtils.loadTweet with a callback that ensures the view is given a
-         * known id to simplify UI automation testing.
-         */
-        private void loadTweet(long tweetId, final ViewGroup container, final int viewId) {
-            final Callback<Tweet> singleTweetCallback = new Callback<Tweet>() {
-                @Override
-                public void success(Result<Tweet> result) {
-                    final Context context = getActivity();
-                    if (context == null) return;
-                    final Tweet tweet = result.data;
-                    final BaseTweetView tv = new TweetView(context, tweet,
-                            R.style.tw__TweetLightWithActionsStyle);
-                    tv.setOnActionCallback(actionCallback);
-                    tv.setId(viewId);
-                    container.addView(tv);
-                }
-
-                @Override
-                public void failure(TwitterException exception) {
-                    Log.e(TAG, "loadTweet failure", exception);
-                }
-            };
-            TweetUtils.loadTweet(tweetId, singleTweetCallback);
-        }
-
-        /**
-         * loadTweets wraps TweetUtils.loadTweets to use a callback that ensures each view is given
-         * a known id to simplify UI automation testing.
-         */
-        private void loadTweets(final List<Long> tweetIds, final ViewGroup container,
-                                final List<Integer> viewIds) {
-            TweetUtils.loadTweets(tweetIds, new Callback<List<Tweet>>() {
-                @Override
-                public void success(Result<List<Tweet>> result) {
-                    final Context context = getActivity();
-                    if (context == null) return;
-                    for (int i = 0; i < result.data.size(); i++) {
-                        final BaseTweetView tv = new CompactTweetView(context, result.data.get(i),
-                                R.style.tw__TweetDarkWithActionsStyle);
-                        tv.setOnActionCallback(actionCallback);
-                        tv.setId(viewIds.get(i));
-                        container.addView(tv);
-                    }
-                }
-
-                @Override
-                public void failure(TwitterException exception) {
-                    Log.e(TAG, "loadTweets failure " + tweetIds, exception);
-                }
-            });
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/TweetPojoActivity.java b/samples/app/src/main/java/com/example/app/tweetui/TweetPojoActivity.java
deleted file mode 100644
index 3e91cf20..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/TweetPojoActivity.java
+++ /dev/null
@@ -1,107 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v4.app.ListFragment;
-import android.support.v7.app.ActionBar;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.R;
-import com.google.gson.Gson;
-import com.google.gson.GsonBuilder;
-import com.google.gson.reflect.TypeToken;
-import com.twitter.sdk.android.core.internal.CommonUtils;
-import com.twitter.sdk.android.core.models.SafeListAdapter;
-import com.twitter.sdk.android.core.models.SafeMapAdapter;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.FixedTweetTimeline;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-
-import java.io.InputStreamReader;
-import java.util.ArrayList;
-import java.util.List;
-
-/**
- * Example code showing how to load Tweets from JSON.
- */
-public class TweetPojoActivity extends TweetUiActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.tweet_pojo);
-        }
-    }
-
-    @Override
-    int getLayout() {
-        return R.layout.activity_frame;
-    }
-
-    @Override
-    Fragment createFragment() {
-        return TweetPojoFragment.newInstance();
-    }
-
-    public static class TweetPojoFragment extends ListFragment {
-
-        public static TweetPojoFragment newInstance() {
-            return new TweetPojoFragment();
-        }
-
-        @Override
-        public void onCreate(Bundle savedInstanceState) {
-            super.onCreate(savedInstanceState);
-
-            // Note: Load should normally be called from background thread.
-            final List<Tweet> tweets = loadTweets();
-            final FixedTweetTimeline fixedTimeline = new FixedTweetTimeline.Builder()
-                    .setTweets(tweets).build();
-            final TweetTimelineListAdapter adapter = new TweetTimelineListAdapter(getActivity(),
-                    fixedTimeline);
-            setListAdapter(adapter);
-        }
-
-        List<Tweet> loadTweets() {
-            final Gson gson = new GsonBuilder()
-                    .registerTypeAdapterFactory(new SafeListAdapter())
-                    .registerTypeAdapterFactory(new SafeMapAdapter())
-                    .create();
-
-            InputStreamReader reader = null;
-            try {
-                reader = new InputStreamReader(getResources().openRawResource(R.raw.tweets));
-                return gson.fromJson(reader, new TypeToken<ArrayList<Tweet>>() {}.getType());
-            }finally {
-                CommonUtils.closeQuietly(reader);
-            }
-        }
-
-        @Override
-        public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                                 Bundle savedInstanceState) {
-            return inflater.inflate(R.layout.tweetui_timeline, container, false);
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/TweetPreviewActivity.java b/samples/app/src/main/java/com/example/app/tweetui/TweetPreviewActivity.java
deleted file mode 100644
index 83b74a13..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/TweetPreviewActivity.java
+++ /dev/null
@@ -1,143 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.app.Activity;
-import android.content.Context;
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBar;
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.LinearLayout;
-import android.widget.Toast;
-
-import com.example.app.R;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.CompactTweetView;
-import com.twitter.sdk.android.tweetui.TweetUtils;
-import com.twitter.sdk.android.tweetui.TweetView;
-
-
-public class TweetPreviewActivity extends TweetUiActivity {
-    private static final String TAG = "TweetPreviewActivity";
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.preview_tweet);
-        }
-    }
-
-    @Override
-    int getLayout() {
-        return R.layout.activity_frame;
-    }
-
-    @Override
-    Fragment createFragment() {
-        return TweetPreviewFragment.newInstance();
-    }
-
-    /**
-     * Fragment showing a Tweet id input field, light/dark buttons, and a scrollable region which
-     * renders light/dark previews of the requested Tweet for quick manual validation.
-     */
-    public static class TweetPreviewFragment extends Fragment {
-
-        public static TweetPreviewFragment newInstance() {
-            return new TweetPreviewFragment();
-        }
-
-        @Override
-        public View onCreateView(LayoutInflater inflater, final ViewGroup container,
-                                 Bundle savedInstanceState) {
-            final View v = inflater.inflate(R.layout.tweetui_fragment_tweet_preview, container,
-                    false);
-
-            final ViewGroup tweetRegion = v.findViewById(R.id.tweet_region);
-            final EditText selectorInput = v.findViewById(R.id.selector_input_tweet_id);
-            final Button lightButton = v.findViewById(R.id.button_show_light);
-            final Button darkButton = v.findViewById(R.id.button_show_dark);
-
-            lightButton.setOnClickListener(v12 -> {
-                final long tweetId = Long.parseLong(selectorInput.getText().toString());
-                tweetRegion.removeAllViews();
-                loadTweet(tweetId, tweetRegion, R.style.tw__TweetLightStyle);
-            });
-
-            darkButton.setOnClickListener(v1 -> {
-                final long tweetId = Long.parseLong(selectorInput.getText().toString());
-                tweetRegion.removeAllViews();
-                loadTweet(tweetId, tweetRegion, R.style.tw__TweetDarkStyle);
-            });
-
-            return v;
-        }
-
-        /**
-         * loadTweet wraps TweetUtils.loadTweet with a callback that ensures a compact and default
-         * view with the correct style and spacing are inserted.
-         */
-        private void loadTweet(long tweetId, final ViewGroup container, final int style) {
-
-            final Callback<Tweet> singleTweetCallback = new Callback<Tweet>() {
-
-                @Override
-                public void success(Result<Tweet> result) {
-                    final Context context = getActivity();
-                    if (context == null) return;
-
-                    final Tweet tweet = result.data;
-                    final CompactTweetView cv = new CompactTweetView(context, tweet, style);
-                    container.addView(cv);
-
-                    final View spacer = new View(context);
-                    final LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(0,
-                            (int) context.getResources().getDimension(R.dimen.demo_tweet_space));
-                    spacer.setLayoutParams(params);
-                    container.addView(spacer);
-
-                    final TweetView tv = new TweetView(context, tweet, style);
-                    container.addView(tv);
-
-                }
-
-                @Override
-                public void failure(TwitterException exception) {
-                    final Activity activity = getActivity();
-                    if (activity != null && !activity.isFinishing()) {
-                        Toast.makeText(activity, R.string.tweet_load_error,
-                                Toast.LENGTH_SHORT).show();
-                    }
-                    Log.e(TAG, "loadTweet failure", exception);
-                }
-            };
-            TweetUtils.loadTweet(tweetId, singleTweetCallback);
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/TweetUiActivity.java b/samples/app/src/main/java/com/example/app/tweetui/TweetUiActivity.java
deleted file mode 100644
index 2bc1dcbe..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/TweetUiActivity.java
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-
-import com.example.app.BaseActivity;
-import com.example.app.R;
-
-/**
- * TweetUiActivity is a BaseActivity which creates a single fragment.
- */
-public abstract class TweetUiActivity extends BaseActivity {
-
-    abstract int getLayout();
-
-    // Builder to create the Fragment added to the Activity's container
-    abstract Fragment createFragment();
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        if (savedInstanceState == null) {
-            getSupportFragmentManager().beginTransaction()
-                    .add(R.id.container, createFragment())
-                    .commit();
-        }
-        setContentView(getLayout());
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/TweetUiMainActivity.java b/samples/app/src/main/java/com/example/app/tweetui/TweetUiMainActivity.java
deleted file mode 100644
index bddd6c4f..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/TweetUiMainActivity.java
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v7.app.ActionBar;
-import android.widget.Button;
-
-import com.example.app.BaseActivity;
-import com.example.app.R;
-
-public class TweetUiMainActivity extends BaseActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.tweetui_activity_main);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.kit_tweetui);
-        }
-
-        final Button xmlTweetButton = findViewById(R.id.button_xml_tweet_activity);
-        xmlTweetButton.setOnClickListener(v -> startActivity(new Intent(TweetUiMainActivity.this, XmlTweetActivity.class)));
-
-        final Button tweetActivityButton = findViewById(R.id.button_tweet_activity);
-        tweetActivityButton.setOnClickListener(v -> startActivity(new Intent(TweetUiMainActivity.this, TweetActivity.class)));
-
-        final Button unqiueTweetButton = findViewById(R.id.button_unique_tweet_activity);
-        unqiueTweetButton.setOnClickListener(v -> startActivity(new Intent(TweetUiMainActivity.this, UniqueTweetActivity.class)));
-
-        final Button tweetListButton = findViewById(R.id.button_fixed_timeline_activity);
-        tweetListButton.setOnClickListener(v -> startActivity(new Intent(TweetUiMainActivity.this, FixedTimelineActivity.class)));
-
-        final Button timelineButton = findViewById(R.id.button_refresh_timeline_activity);
-        timelineButton.setOnClickListener(v -> startActivity(new Intent(TweetUiMainActivity.this, TimelineActivity.class)));
-
-        final Button timelinesButton = findViewById(R.id.button_timelines_activity);
-        timelinesButton.setOnClickListener(view -> startActivity(new Intent(TweetUiMainActivity.this, TimelinesActivity.class)));
-
-        final Button tweetSelectorButton = findViewById(
-                R.id.button_tweet_preview_activity);
-        tweetSelectorButton.setOnClickListener(v -> startActivity(new Intent(TweetUiMainActivity.this, TweetPreviewActivity.class)));
-
-        final Button tweetPojoButton = findViewById(
-                R.id.button_tweet_pojo_activity);
-        tweetPojoButton.setOnClickListener(v -> startActivity(new Intent(TweetUiMainActivity.this, TweetPojoActivity.class)));
-
-        final Button rtlTimelineButton = findViewById(R.id.button_rtl_timeline_activity);
-        rtlTimelineButton.setOnClickListener(v -> startActivity(new Intent(TweetUiMainActivity.this, RtlTimelineActivity.class)));
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/UniqueTweetActivity.java b/samples/app/src/main/java/com/example/app/tweetui/UniqueTweetActivity.java
deleted file mode 100644
index c00fde3a..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/UniqueTweetActivity.java
+++ /dev/null
@@ -1,92 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBar;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.LinearLayout;
-
-import com.example.app.R;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetBuilder;
-import com.twitter.sdk.android.core.models.User;
-import com.twitter.sdk.android.core.models.UserBuilder;
-import com.twitter.sdk.android.tweetui.TweetView;
-
-public class UniqueTweetActivity extends TweetUiActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.unqiue_tweets);
-        }
-    }
-
-    @Override
-    int getLayout() {
-        return R.layout.activity_frame;
-    }
-
-    @Override
-    Fragment createFragment() {
-        return UniqueTweetFragment.newInstance();
-    }
-
-    /**
-     * Fragment showing unique Tweet view cases.
-     */
-    public static class UniqueTweetFragment extends Fragment {
-
-        public static UniqueTweetFragment newInstance() {
-            return new UniqueTweetFragment();
-        }
-
-        @Override
-        public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                                 Bundle savedInstanceState) {
-            final View v = inflater.inflate(R.layout.tweetui_fragment_unique_tweet, container,
-                    false);
-
-            final LinearLayout tweetRegion = v.findViewById(R.id.tweet_region);
-
-            // Tweet object already present, construct a TweetView
-            final Tweet knownTweet = new TweetBuilder()
-                    .setId(3L)
-                    .setUser(new UserBuilder()
-                                    .setId(User.INVALID_ID)
-                                    .setName("name")
-                                    .setScreenName("namename")
-                                    .setVerified(false)
-                                    .build()
-                    )
-                    .setText("Preloaded text of a Tweet that couldn't be loaded.")
-                    .setCreatedAt("Wed Jun 06 20:07:10 +0000 2012")
-                    .build();
-            final TweetView knownTweetView = new TweetView(getActivity(), knownTweet);
-            tweetRegion.addView(knownTweetView);
-
-            return v;
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/UserTimelineFragment.java b/samples/app/src/main/java/com/example/app/tweetui/UserTimelineFragment.java
deleted file mode 100644
index e8aa4b21..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/UserTimelineFragment.java
+++ /dev/null
@@ -1,96 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.ListFragment;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.BuildConfig;
-import com.example.app.R;
-import com.example.app.twittercore.TwitterCoreMainActivity;
-import com.mopub.nativeads.MoPubAdAdapter;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterAuthException;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.mopub.TwitterMoPubAdAdapter;
-import com.twitter.sdk.android.mopub.TwitterStaticNativeAdRenderer;
-import com.twitter.sdk.android.tweetui.TweetTimelineListAdapter;
-import com.twitter.sdk.android.tweetui.UserTimeline;
-
-/**
- * UserTimelineFragment demonstrates a TimelineListAdapter with a UserTimeline.
- */
-public class UserTimelineFragment extends ListFragment {
-
-    public static UserTimelineFragment newInstance() {
-        return new UserTimelineFragment();
-    }
-
-    private MoPubAdAdapter moPubAdAdapter;
-
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        // launch the app login activity when a guest user tries to favorite a Tweet
-        final Callback<Tweet> actionCallback = new Callback<Tweet>() {
-            @Override
-            public void success(Result<Tweet> result) {
-                // Intentionally blank
-            }
-            @Override
-            public void failure(TwitterException exception) {
-                if (exception instanceof TwitterAuthException) {
-                    startActivity(TwitterCoreMainActivity.newIntent(getActivity()));
-                }
-            }
-        };
-
-        final UserTimeline userTimeline = new UserTimeline.Builder().screenName("twitterdev").build();
-        final TweetTimelineListAdapter adapter = new TweetTimelineListAdapter.Builder(getActivity())
-                .setTimeline(userTimeline)
-                .setViewStyle(R.style.tw__TweetLightWithActionsStyle)
-                .setOnActionCallback(actionCallback)
-                .build();
-
-        moPubAdAdapter = new TwitterMoPubAdAdapter(getActivity(), adapter);
-        final TwitterStaticNativeAdRenderer adRenderer = new TwitterStaticNativeAdRenderer();
-        moPubAdAdapter.registerAdRenderer(adRenderer);
-        moPubAdAdapter.loadAds(BuildConfig.MOPUB_AD_UNIT_ID);
-
-        setListAdapter(moPubAdAdapter);
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.tweetui_timeline, container, false);
-    }
-
-    @Override
-    public void onDestroy() {
-        // You must call this or the ad adapter may cause a memory leak
-        moPubAdAdapter.destroy();
-        super.onDestroy();
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/tweetui/UserTimelineRecyclerViewFragment.java b/samples/app/src/main/java/com/example/app/tweetui/UserTimelineRecyclerViewFragment.java
deleted file mode 100644
index 5f6e8cc9..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/UserTimelineRecyclerViewFragment.java
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v7.widget.LinearLayoutManager;
-import android.support.v7.widget.RecyclerView;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.R;
-import com.example.app.twittercore.TwitterCoreMainActivity;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterAuthException;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.tweetui.TweetTimelineRecyclerViewAdapter;
-import com.twitter.sdk.android.tweetui.UserTimeline;
-
-public class UserTimelineRecyclerViewFragment extends Fragment {
-
-    public static UserTimelineRecyclerViewFragment newInstance() {
-        return new UserTimelineRecyclerViewFragment();
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        final View view = inflater.inflate(R.layout.tweetui_timeline_recyclerview, container, false);
-        final RecyclerView recyclerView = view.findViewById(R.id.recycler_view);
-
-        recyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));
-
-        final UserTimeline userTimeline = new UserTimeline.Builder().screenName("nasa").build();
-
-        // launch the app login activity when a guest user tries to favorite a Tweet
-        final Callback<Tweet> actionCallback = new Callback<Tweet>() {
-            @Override
-            public void success(Result<Tweet> result) {
-                // Intentionally blank
-            }
-
-            @Override
-            public void failure(TwitterException exception) {
-                if (exception instanceof TwitterAuthException) {
-                    startActivity(TwitterCoreMainActivity.newIntent(getActivity()));
-                }
-            }
-        };
-
-        final TweetTimelineRecyclerViewAdapter adapter =
-                new TweetTimelineRecyclerViewAdapter.Builder(getContext())
-                        .setTimeline(userTimeline)
-                        .setViewStyle(R.style.tw__TweetLightWithActionsStyle)
-                        .setOnActionCallback(actionCallback)
-                        .build();
-
-        recyclerView.setAdapter(adapter);
-
-        return view;
-    }
-
-}
\ No newline at end of file
diff --git a/samples/app/src/main/java/com/example/app/tweetui/XmlTweetActivity.java b/samples/app/src/main/java/com/example/app/tweetui/XmlTweetActivity.java
deleted file mode 100644
index 4a972b9e..00000000
--- a/samples/app/src/main/java/com/example/app/tweetui/XmlTweetActivity.java
+++ /dev/null
@@ -1,65 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.tweetui;
-
-import android.os.Bundle;
-import android.support.v4.app.Fragment;
-import android.support.v7.app.ActionBar;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.example.app.R;
-
-public class XmlTweetActivity extends TweetUiActivity {
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.xml_tweets_activity);
-        }
-    }
-
-    @Override
-    int getLayout() {
-        return R.layout.activity_frame;
-    }
-
-    @Override
-    Fragment createFragment() {
-        return XmlTweetFragment.newInstance();
-    }
-
-    /**
-     * UI fragment showing XML Tweet views for automated ui testing
-     */
-    public static class XmlTweetFragment extends Fragment {
-
-        public static XmlTweetFragment newInstance() {
-            return new XmlTweetFragment();
-        }
-
-        @Override
-        public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                Bundle savedInstanceState) {
-            return inflater.inflate(R.layout.tweetui_fragment_xml_tweet, container, false);
-        }
-    }
-}
diff --git a/samples/app/src/main/java/com/example/app/twittercore/TwitterCoreMainActivity.java b/samples/app/src/main/java/com/example/app/twittercore/TwitterCoreMainActivity.java
deleted file mode 100644
index 3f589b50..00000000
--- a/samples/app/src/main/java/com/example/app/twittercore/TwitterCoreMainActivity.java
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.example.app.twittercore;
-
-import android.content.Context;
-import android.content.Intent;
-import android.os.Bundle;
-import android.support.v7.app.ActionBar;
-import android.widget.Toast;
-
-import com.example.app.BaseActivity;
-import com.example.app.R;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.core.identity.TwitterAuthClient;
-import com.twitter.sdk.android.core.identity.TwitterLoginButton;
-
-public class TwitterCoreMainActivity extends BaseActivity {
-
-    private TwitterLoginButton loginButton;
-
-    /**
-     * Constructs an intent for starting an instance of this activity.
-     * @param packageContext A context from the same package as this activity.
-     * @return Intent for starting an instance of this activity.
-     */
-    public static Intent newIntent(Context packageContext) {
-        return new Intent(packageContext, TwitterCoreMainActivity.class);
-    }
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.twittercore_activity_main);
-        ActionBar actionBar = getSupportActionBar();
-        if (actionBar != null) {
-            actionBar.setTitle(R.string.kit_twittercore);
-        }
-
-        // Set up the login button by setting callback to invoke when authorization request
-        // completes
-        loginButton = findViewById(R.id.login_button);
-        loginButton.setCallback(new Callback<TwitterSession>() {
-            @Override
-            public void success(Result<TwitterSession> result) {
-                requestEmailAddress(getApplicationContext(), result.data);
-            }
-
-            @Override
-            public void failure(TwitterException exception) {
-                // Upon error, show a toast message indicating that authorization request failed.
-                Toast.makeText(getApplicationContext(), exception.getMessage(),
-                        Toast.LENGTH_SHORT).show();
-            }
-        });
-    }
-
-    private static void requestEmailAddress(final Context context, TwitterSession session) {
-        new TwitterAuthClient().requestEmail(session, new Callback<String>() {
-            @Override
-            public void success(Result<String> result) {
-                Toast.makeText(context, result.data, Toast.LENGTH_SHORT).show();
-            }
-
-            @Override
-            public void failure(TwitterException exception) {
-                Toast.makeText(context, exception.getMessage(), Toast.LENGTH_SHORT).show();
-            }
-        });
-    }
-
-    @Override
-    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode, resultCode, data);
-        // Pass the activity result to the saveSession button.
-        loginButton.onActivityResult(requestCode, resultCode, data);
-    }
-}
diff --git a/samples/app/src/main/res/drawable-hdpi/twitter_ic_launcher.png b/samples/app/src/main/res/drawable-hdpi/twitter_ic_launcher.png
deleted file mode 100755
index 1dae51c2..00000000
Binary files a/samples/app/src/main/res/drawable-hdpi/twitter_ic_launcher.png and /dev/null differ
diff --git a/samples/app/src/main/res/drawable-mdpi/twitter_ic_launcher.png b/samples/app/src/main/res/drawable-mdpi/twitter_ic_launcher.png
deleted file mode 100755
index a38f1d70..00000000
Binary files a/samples/app/src/main/res/drawable-mdpi/twitter_ic_launcher.png and /dev/null differ
diff --git a/samples/app/src/main/res/drawable-xhdpi/twitter_ic_launcher.png b/samples/app/src/main/res/drawable-xhdpi/twitter_ic_launcher.png
deleted file mode 100755
index 6e68a518..00000000
Binary files a/samples/app/src/main/res/drawable-xhdpi/twitter_ic_launcher.png and /dev/null differ
diff --git a/samples/app/src/main/res/drawable-xxhdpi/twitter_ic_launcher.png b/samples/app/src/main/res/drawable-xxhdpi/twitter_ic_launcher.png
deleted file mode 100755
index 59a49fdc..00000000
Binary files a/samples/app/src/main/res/drawable-xxhdpi/twitter_ic_launcher.png and /dev/null differ
diff --git a/samples/app/src/main/res/drawable-xxxhdpi/twitter_ic_launcher.png b/samples/app/src/main/res/drawable-xxxhdpi/twitter_ic_launcher.png
deleted file mode 100755
index 4c9d38af..00000000
Binary files a/samples/app/src/main/res/drawable-xxxhdpi/twitter_ic_launcher.png and /dev/null differ
diff --git a/samples/app/src/main/res/layout/activity_frame.xml b/samples/app/src/main/res/layout/activity_frame.xml
deleted file mode 100644
index ddac8677..00000000
--- a/samples/app/src/main/res/layout/activity_frame.xml
+++ /dev/null
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <include
-        android:id="@+id/toolbar"
-        layout="@layout/toolbar"/>
-
-    <FrameLayout
-        android:id="@+id/container"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:layout_below="@id/toolbar"/>
-
-</RelativeLayout>
\ No newline at end of file
diff --git a/samples/app/src/main/res/layout/activity_pager.xml b/samples/app/src/main/res/layout/activity_pager.xml
deleted file mode 100644
index d695369d..00000000
--- a/samples/app/src/main/res/layout/activity_pager.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical">
-
-    <android.support.design.widget.TabLayout
-        android:id="@+id/tab_layout"
-        style="@style/twitter_Tab"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:paddingTop="@dimen/pager_top_padding"/>
-
-    <android.support.v4.view.ViewPager
-        android:id="@+id/pager"
-        android:layout_width="match_parent"
-        android:layout_height="0px"
-        android:layout_weight="1"/>
-</LinearLayout>
diff --git a/samples/app/src/main/res/layout/toolbar.xml b/samples/app/src/main/res/layout/toolbar.xml
deleted file mode 100644
index 3412a01b..00000000
--- a/samples/app/src/main/res/layout/toolbar.xml
+++ /dev/null
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<android.support.v7.widget.Toolbar
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="?attr/actionBarSize"
-    app:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
-    app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
-    android:background="?attr/colorPrimary"
-    tools:ignore="Overdraw"/>
\ No newline at end of file
diff --git a/samples/app/src/main/res/layout/tweetcomposer_activity_main.xml b/samples/app/src/main/res/layout/tweetcomposer_activity_main.xml
deleted file mode 100644
index cc77858b..00000000
--- a/samples/app/src/main/res/layout/tweetcomposer_activity_main.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <include
-        android:id="@+id/toolbar"
-        layout="@layout/toolbar"/>
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical"
-        android:gravity="center">
-
-        <Button
-            android:id="@+id/tweet_composer"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/twitter_composer"/>
-
-        <Button
-            android:id="@+id/organic_composer"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:text="@string/twitter_kit_composer"/>
-
-    </LinearLayout>
-</RelativeLayout>
diff --git a/samples/app/src/main/res/layout/tweetui_activity_main.xml b/samples/app/src/main/res/layout/tweetui_activity_main.xml
deleted file mode 100644
index bdd02cc9..00000000
--- a/samples/app/src/main/res/layout/tweetui_activity_main.xml
+++ /dev/null
@@ -1,80 +0,0 @@
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:orientation="vertical">
-
-    <include
-        android:id="@+id/toolbar"
-        layout="@layout/toolbar"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"/>
-
-    <ScrollView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center"
-            android:gravity="center"
-            android:orientation="vertical">
-
-            <Button
-                android:id="@+id/button_tweet_preview_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/preview_tweet" />
-
-            <Button
-                android:id="@+id/button_xml_tweet_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/xml_tweets_activity" />
-
-            <Button
-                android:id="@+id/button_tweet_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/tweets_activity" />
-
-            <Button
-                android:id="@+id/button_unique_tweet_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/unqiue_tweets" />
-
-            <Button
-                android:id="@+id/button_timelines_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/button_timelines_activity" />
-
-            <Button
-                android:id="@+id/button_fixed_timeline_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/fixed_timeline" />
-
-            <Button
-                android:id="@+id/button_refresh_timeline_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/refresh_timeline" />
-
-            <Button
-                android:id="@+id/button_tweet_pojo_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/tweet_pojo" />
-
-            <Button
-                android:id="@+id/button_rtl_timeline_activity"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/rtl_timeline" />
-
-        </LinearLayout>
-    </ScrollView>
-</LinearLayout>
diff --git a/samples/app/src/main/res/layout/tweetui_fragment_tweet.xml b/samples/app/src/main/res/layout/tweetui_fragment_tweet.xml
deleted file mode 100644
index 122cff65..00000000
--- a/samples/app/src/main/res/layout/tweetui_fragment_tweet.xml
+++ /dev/null
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <LinearLayout
-        android:id="@+id/tweet_region"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical"/>
-
-</ScrollView>
\ No newline at end of file
diff --git a/samples/app/src/main/res/layout/tweetui_fragment_tweet_preview.xml b/samples/app/src/main/res/layout/tweetui_fragment_tweet_preview.xml
deleted file mode 100644
index 1ccf37c6..00000000
--- a/samples/app/src/main/res/layout/tweetui_fragment_tweet_preview.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    style="@style/twitter_FillParent"
-    android:orientation="vertical">
-
-    <EditText
-        android:id="@+id/selector_input_tweet_id"
-        style="@style/twitter_FillWidth"
-        android:inputType="number"
-        android:hint="@string/selector_input_hint"/>
-
-    <LinearLayout
-        style="@style/twitter_FillWidth"
-        android:orientation="horizontal">
-
-        <Button
-            android:id="@+id/button_show_light"
-            style="@style/twitter_WrapContent"
-            android:text="@string/button_show_light"/>
-
-        <Button
-            android:id="@+id/button_show_dark"
-            style="@style/twitter_WrapContent"
-            android:text="@string/button_show_dark"/>
-
-    </LinearLayout>
-
-    <ScrollView
-        style="@style/twitter_FillParent">
-
-        <LinearLayout
-            android:id="@+id/tweet_region"
-            style="@style/twitter_FillWidth"
-            android:orientation="vertical"/>
-
-    </ScrollView>
-
-</LinearLayout>
-
diff --git a/samples/app/src/main/res/layout/tweetui_fragment_unique_tweet.xml b/samples/app/src/main/res/layout/tweetui_fragment_unique_tweet.xml
deleted file mode 100644
index 5bd61a35..00000000
--- a/samples/app/src/main/res/layout/tweetui_fragment_unique_tweet.xml
+++ /dev/null
@@ -1,106 +0,0 @@
-<ScrollView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:twittersdk="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <LinearLayout
-        android:id="@+id/tweet_region"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical">
-
-        <!--emoji entities-->
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.TweetView
-            android:id="@+id/xml_emoji_url_video_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="656637487117299712"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.CompactTweetView
-            android:id="@+id/xml_emoji_url_video_compact_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="656637487117299712"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <!--animated gif-->
-
-        <com.twitter.sdk.android.tweetui.TweetView
-            android:id="@+id/xml_animated_gif_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="669274925937664001"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.CompactTweetView
-            android:id="@+id/xml_animated_gif_compact_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="669274925937664001"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <!--Retweet with photo-->
-
-        <com.twitter.sdk.android.tweetui.TweetView
-            android:id="@+id/retweet_with_photo_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="687698492211499010"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.CompactTweetView
-            android:id="@+id/retweet_with_photo_compact_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="687698492211499010"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <!--Retweet without photo-->
-
-        <com.twitter.sdk.android.tweetui.TweetView
-            android:id="@+id/retweet_without_photo_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="685490103544762369"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.CompactTweetView
-            android:id="@+id/retweet_without_photo_compact_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="685490103544762369"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-    </LinearLayout>
-</ScrollView>
diff --git a/samples/app/src/main/res/layout/tweetui_fragment_xml_tweet.xml b/samples/app/src/main/res/layout/tweetui_fragment_xml_tweet.xml
deleted file mode 100644
index 140c69f0..00000000
--- a/samples/app/src/main/res/layout/tweetui_fragment_xml_tweet.xml
+++ /dev/null
@@ -1,79 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<ScrollView
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:twittersdk="http://schemas.android.com/apk/res-auto"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <LinearLayout
-        android:id="@+id/tweet_region"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:orientation="vertical">
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.TweetView
-            android:id="@+id/jack_regular_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="20"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.CompactTweetView
-            android:id="@+id/jack_compact_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="20"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.TweetView
-            android:id="@+id/bike_regular_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="510908133917487104"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.CompactTweetView
-            android:id="@+id/bike_compact_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="510908133917487104"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.TweetView
-            android:id="@+id/retweet_simpsons_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="574000939800993792"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-        <com.twitter.sdk.android.tweetui.CompactTweetView
-            android:id="@+id/retweet_simpsons_compact_tweet"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            twittersdk:tw__tweet_id="574000939800993792"/>
-
-        <View
-            android:layout_width="match_parent"
-            android:layout_height="@dimen/demo_tweet_space"/>
-
-    </LinearLayout>
-</ScrollView>
\ No newline at end of file
diff --git a/samples/app/src/main/res/layout/tweetui_swipe_timeline.xml b/samples/app/src/main/res/layout/tweetui_swipe_timeline.xml
deleted file mode 100644
index 571e6912..00000000
--- a/samples/app/src/main/res/layout/tweetui_swipe_timeline.xml
+++ /dev/null
@@ -1,40 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<android.support.v4.widget.SwipeRefreshLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/swipe_layout"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <LinearLayout
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:orientation="vertical">
-
-        <include
-            android:id="@+id/toolbar"
-            layout="@layout/toolbar"/>
-
-        <ListView
-            android:id="@id/android:list"
-            android:layout_width="match_parent"
-            android:layout_height="0dp"
-            android:layout_weight="1"
-            android:divider="@color/divider_gray"
-            android:dividerHeight="@dimen/divider_height"/>
-
-        <ScrollView
-            android:id="@id/android:empty"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent">
-
-            <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:text="@string/timeline_empty"
-                android:layout_gravity="center_horizontal|center_vertical"/>
-
-        </ScrollView>
-
-    </LinearLayout>
-
-</android.support.v4.widget.SwipeRefreshLayout>
\ No newline at end of file
diff --git a/samples/app/src/main/res/layout/tweetui_timeline.xml b/samples/app/src/main/res/layout/tweetui_timeline.xml
deleted file mode 100644
index e6a12740..00000000
--- a/samples/app/src/main/res/layout/tweetui_timeline.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:orientation="vertical"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <ListView android:id="@id/android:list"
-              android:layout_width="match_parent"
-              android:layout_height="0dp"
-              android:layout_weight="1"
-              android:divider="@color/divider_gray"
-              android:dividerHeight="@dimen/divider_height"
-              android:drawSelectorOnTop="false"/>
-
-    <TextView android:id="@id/android:empty"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-              android:gravity="center_horizontal|center_vertical"
-              android:text="@string/timeline_empty"/>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/samples/app/src/main/res/layout/tweetui_timeline_recyclerview.xml b/samples/app/src/main/res/layout/tweetui_timeline_recyclerview.xml
deleted file mode 100644
index 2a1a3bde..00000000
--- a/samples/app/src/main/res/layout/tweetui_timeline_recyclerview.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<android.support.v7.widget.RecyclerView xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/recycler_view"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:scrollbars="vertical" />
\ No newline at end of file
diff --git a/samples/app/src/main/res/layout/twitter_activity.xml b/samples/app/src/main/res/layout/twitter_activity.xml
deleted file mode 100644
index dbb604f0..00000000
--- a/samples/app/src/main/res/layout/twitter_activity.xml
+++ /dev/null
@@ -1,63 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context=".TwitterSampleActivity"
-    tools:ignore="UnusedResources">
-
-    <include
-        android:id="@+id/toolbar"
-        layout="@layout/toolbar"/>
-
-    <ScrollView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
-
-        <LinearLayout
-            android:id="@+id/main_layout"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center"
-            android:gravity="center"
-            android:orientation="vertical">
-
-            <Button
-                android:layout_width="200dp"
-                android:layout_height="wrap_content"
-                android:onClick="onTwitterCore"
-                android:text="@string/kit_twittercore"/>
-
-            <Button
-                android:layout_width="200dp"
-                android:layout_height="wrap_content"
-                android:onClick="onTweetComposer"
-                android:text="@string/kit_tweetcomposer"/>
-
-            <Button
-                android:layout_width="200dp"
-                android:layout_height="wrap_content"
-                android:onClick="onTweetUi"
-                android:text="@string/kit_tweetui"/>
-
-        </LinearLayout>
-    </ScrollView>
-</RelativeLayout>
diff --git a/samples/app/src/main/res/layout/twittercore_activity_main.xml b/samples/app/src/main/res/layout/twittercore_activity_main.xml
deleted file mode 100644
index 48ef9e8f..00000000
--- a/samples/app/src/main/res/layout/twittercore_activity_main.xml
+++ /dev/null
@@ -1,18 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent">
-
-    <include
-        android:id="@+id/toolbar"
-        layout="@layout/toolbar"/>
-
-    <com.twitter.sdk.android.core.identity.TwitterLoginButton
-        android:id="@+id/login_button"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_centerInParent="true"/>
-</RelativeLayout>
-
diff --git a/samples/app/src/main/res/menu/twitter_activity_actions.xml b/samples/app/src/main/res/menu/twitter_activity_actions.xml
deleted file mode 100644
index d8e4a143..00000000
--- a/samples/app/src/main/res/menu/twitter_activity_actions.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<menu
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    tools:ignore="UnusedResources">
-
-</menu>
diff --git a/samples/app/src/main/res/raw/filter_values.json b/samples/app/src/main/res/raw/filter_values.json
deleted file mode 100644
index 051f5f72..00000000
--- a/samples/app/src/main/res/raw/filter_values.json
+++ /dev/null
@@ -1,23 +0,0 @@
-{
-  "keywords": [
-    "dummy",
-    "darn",
-    "foobar",
-    "tea",
-    "cat"
-  ],
-  "hashtags": [
-    "cookies",
-    "CookiesAreAwesome"
-  ],
-  "handles": [
-    "benward",
-    "vam_si",
-    "ericfrohnhoefer"
-  ],
-  "urls": [
-    "Cookiesareawesome.com",
-    "dontbeevil.com",
-    "beevil.net"
-  ]
-}
\ No newline at end of file
diff --git a/samples/app/src/main/res/raw/tweets.json b/samples/app/src/main/res/raw/tweets.json
deleted file mode 100644
index 716f0b3b..00000000
--- a/samples/app/src/main/res/raw/tweets.json
+++ /dev/null
@@ -1,235 +0,0 @@
-[
-  {
-    "contributors": null,
-    "coordinates": null,
-    "created_at": "Wed Mar 08 14:34:42 +0000 2017",
-    "entities": {
-      "hashtags": [
-        {
-          "indices": [
-            91,
-            105
-          ],
-          "text": "SheInspiresMe"
-        }
-      ],
-      "media": [
-        {
-          "display_url": "pic.twitter.com/8mKqUgaOhK",
-          "expanded_url": "https://twitter.com/Twitter/status/839484527537876992/video/1",
-          "id": 839482280460505088,
-          "id_str": "839482280460505088",
-          "indices": [
-            106,
-            129
-          ],
-          "media_url": "http://pbs.twimg.com/media/C6ZydCZU0AAW6Ot.jpg",
-          "media_url_https": "https://pbs.twimg.com/media/C6ZydCZU0AAW6Ot.jpg",
-          "sizes": {
-            "large": {
-              "h": 720,
-              "resize": "fit",
-              "w": 1280
-            },
-            "medium": {
-              "h": 675,
-              "resize": "fit",
-              "w": 1200
-            },
-            "small": {
-              "h": 383,
-              "resize": "fit",
-              "w": 680
-            },
-            "thumb": {
-              "h": 150,
-              "resize": "crop",
-              "w": 150
-            }
-          },
-          "type": "photo",
-          "url": "https://t.co/8mKqUgaOhK"
-        }
-      ],
-      "symbols": [],
-      "urls": [],
-      "user_mentions": [
-        {
-          "id": 2328002822,
-          "id_str": "2328002822",
-          "indices": [
-            76,
-            89
-          ],
-          "name": "Twitter Women",
-          "screen_name": "TwitterWomen"
-        }
-      ]
-    },
-    "extended_entities": {
-      "media": [
-        {
-          "additional_media_info": {
-            "description": "",
-            "embeddable": true,
-            "monetizable": false,
-            "title": ""
-          },
-          "display_url": "pic.twitter.com/8mKqUgaOhK",
-          "expanded_url": "https://twitter.com/Twitter/status/839484527537876992/video/1",
-          "id": 839482280460505088,
-          "id_str": "839482280460505088",
-          "indices": [
-            106,
-            129
-          ],
-          "media_url": "http://pbs.twimg.com/media/C6ZydCZU0AAW6Ot.jpg",
-          "media_url_https": "https://pbs.twimg.com/media/C6ZydCZU0AAW6Ot.jpg",
-          "sizes": {
-            "large": {
-              "h": 720,
-              "resize": "fit",
-              "w": 1280
-            },
-            "medium": {
-              "h": 675,
-              "resize": "fit",
-              "w": 1200
-            },
-            "small": {
-              "h": 383,
-              "resize": "fit",
-              "w": 680
-            },
-            "thumb": {
-              "h": 150,
-              "resize": "crop",
-              "w": 150
-            }
-          },
-          "type": "video",
-          "url": "https://t.co/8mKqUgaOhK",
-          "video_info": {
-            "aspect_ratio": [
-              16,
-              9
-            ],
-            "duration_millis": 33951,
-            "variants": [
-              {
-                "bitrate": 2176000,
-                "content_type": "video/mp4",
-                "url": "https://video.twimg.com/ext_tw_video/839482280460505088/pu/vid/1280x720/rS7ig3r5HuqcVaYQ.mp4"
-              },
-              {
-                "bitrate": 832000,
-                "content_type": "video/mp4",
-                "url": "https://video.twimg.com/ext_tw_video/839482280460505088/pu/vid/640x360/asbxgQmt2CaaIj6L.mp4"
-              },
-              {
-                "content_type": "application/x-mpegURL",
-                "url": "https://video.twimg.com/ext_tw_video/839482280460505088/pu/pl/oVpOAJ84aPAnGE00.m3u8"
-              },
-              {
-                "bitrate": 320000,
-                "content_type": "video/mp4",
-                "url": "https://video.twimg.com/ext_tw_video/839482280460505088/pu/vid/320x180/8lZuFEwaFieY_41p.mp4"
-              }
-            ]
-          }
-        }
-      ]
-    },
-    "favorite_count": 7959,
-    "favorited": false,
-    "geo": null,
-    "id": 839484527537876992,
-    "id_str": "839484527537876992",
-    "in_reply_to_screen_name": null,
-    "in_reply_to_status_id": null,
-    "in_reply_to_status_id_str": null,
-    "in_reply_to_user_id": null,
-    "in_reply_to_user_id_str": null,
-    "is_quote_status": false,
-    "lang": "en",
-    "place": null,
-    "possibly_sensitive": false,
-    "possibly_sensitive_appealable": false,
-    "retweet_count": 2551,
-    "retweeted": false,
-    "source": "<a href=\"https://studio.twitter.com\" rel=\"nofollow\">Media Studio</a>",
-    "text": "Today we're celebrating the leaders, innovators, builders, and storytellers @TwitterWomen. #SheInspiresMe https://t.co/8mKqUgaOhK",
-    "truncated": false,
-    "user": {
-      "contributors_enabled": false,
-      "created_at": "Tue Feb 20 14:35:54 +0000 2007",
-      "default_profile": false,
-      "default_profile_image": false,
-      "description": "Your official source for news, updates, and tips from Twitter, Inc. Need help? Visit https://t.co/jTMg7YsLw5.",
-      "entities": {
-        "description": {
-          "urls": [
-            {
-              "display_url": "support.twitter.com",
-              "expanded_url": "https://support.twitter.com",
-              "indices": [
-                85,
-                108
-              ],
-              "url": "https://t.co/jTMg7YsLw5"
-            }
-          ]
-        },
-        "url": {
-          "urls": [
-            {
-              "display_url": "blog.twitter.com",
-              "expanded_url": "https://blog.twitter.com/",
-              "indices": [
-                0,
-                23
-              ],
-              "url": "https://t.co/gN5JJwhQy7"
-            }
-          ]
-        }
-      },
-      "favourites_count": 4128,
-      "follow_request_sent": false,
-      "followers_count": 60457658,
-      "following": false,
-      "friends_count": 162,
-      "geo_enabled": true,
-      "has_extended_profile": true,
-      "id": 783214,
-      "id_str": "783214",
-      "is_translation_enabled": false,
-      "is_translator": false,
-      "lang": "en",
-      "listed_count": 90845,
-      "location": "San Francisco, CA",
-      "name": "Twitter",
-      "notifications": false,
-      "profile_background_color": "ACDED6",
-      "profile_background_image_url": "http://pbs.twimg.com/profile_background_images/657090062/l1uqey5sy82r9ijhke1i.png",
-      "profile_background_image_url_https": "https://pbs.twimg.com/profile_background_images/657090062/l1uqey5sy82r9ijhke1i.png",
-      "profile_background_tile": true,
-      "profile_banner_url": "https://pbs.twimg.com/profile_banners/783214/1489820041",
-      "profile_image_url": "http://pbs.twimg.com/profile_images/842992378960986112/Yd1Z53jW_normal.jpg",
-      "profile_image_url_https": "https://pbs.twimg.com/profile_images/842992378960986112/Yd1Z53jW_normal.jpg",
-      "profile_link_color": "1B95E0",
-      "profile_sidebar_border_color": "FFFFFF",
-      "profile_sidebar_fill_color": "F6F6F6",
-      "profile_text_color": "333333",
-      "profile_use_background_image": true,
-      "protected": false,
-      "screen_name": "Twitter",
-      "statuses_count": 4415,
-      "time_zone": "Pacific Time (US & Canada)",
-      "translator_type": "regular",
-      "url": "https://t.co/gN5JJwhQy7",
-      "utc_offset": -25200,
-      "verified": true
-    }
-  }
-]
diff --git a/samples/app/src/main/res/values/colors.xml b/samples/app/src/main/res/values/colors.xml
deleted file mode 100644
index 2e283f49..00000000
--- a/samples/app/src/main/res/values/colors.xml
+++ /dev/null
@@ -1,9 +0,0 @@
-<resources>
-    <color name="app_primary">#2196F3</color>
-    <color name="app_primary_dark">#1976D2</color>
-    <color name="app_accent">#55acee</color>
-
-    <color name="twitter_blue">#ff55acee</color>
-    <color name="twitter_dark">#ff292f33</color>
-    <color name="divider_gray">#ffe1e8ed</color>
-</resources>
diff --git a/samples/app/src/main/res/values/dimens.xml b/samples/app/src/main/res/values/dimens.xml
deleted file mode 100644
index e075683b..00000000
--- a/samples/app/src/main/res/values/dimens.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <dimen name="pager_top_padding">7dp</dimen>
-    <dimen name="demo_tweet_space">15dp</dimen>
-    <dimen name="divider_height">1dp</dimen>
-    <dimen name="tab_padding">16dp</dimen>
-</resources>
diff --git a/samples/app/src/main/res/values/strings.xml b/samples/app/src/main/res/values/strings.xml
deleted file mode 100644
index 2e5ee5ac..00000000
--- a/samples/app/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,53 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:tools="http://schemas.android.com/tools">
-    <string name="twitter_app_name"
-        tools:ignore="UnusedResources">Twitter Sample</string>
-    <string name="kit_twittercore">Twitter Core</string>
-    <string name="kit_tweetcomposer">Tweet Composer</string>
-    <string name="kit_tweetui">Tweet Ui</string>
-
-    <!-- TweetComposer strings -->
-    <string name="twitter_composer">Twitter Composer</string>
-    <string name="twitter_kit_composer">TwitterKit Composer</string>
-
-    <!-- TweetUi strings -->
-    <string name="preview_tweet">Preview</string>
-    <string name="xml_tweets_activity">XML Tweets</string>
-    <string name="tweets_activity">Single Tweets</string>
-    <string name="unqiue_tweets">Unique Tweets</string>
-    <string name="button_timelines_activity">Timelines</string>
-    <string name="search_timeline_title">Search Timeline</string>
-    <string name="user_timeline_title">User Timeline</string>
-    <string name="user_recycler_view_timeline_title">User RecyclerView Timeline</string>
-    <string name="collection_timeline_title">Collection Timeline</string>
-    <string name="list_timeline_title">List Timeline</string>
-    <string name="fixed_timeline">Fixed Timeline</string>
-    <string name="rtl_timeline">RTL Timeline</string>
-    <string name="refresh_timeline">Refresh Timeline</string>
-    <string name="refresh_timeline_title">Search: #twitter</string>
-    <string name="button_show_light">Light</string>
-    <string name="button_show_dark">Dark</string>
-    <string name="selector_input_hint">Tweet id</string>
-    <string name="tweet_load_error">Failed to load Tweet</string>
-    <string name="multi_tweet_view_error">Failed to load tweets</string>
-    <string name="timeline_empty">No tweets :(</string>
-    <string name="tweet_pojo">Tweet Pojo</string>
-
-</resources>
diff --git a/samples/app/src/main/res/values/styles.xml b/samples/app/src/main/res/values/styles.xml
deleted file mode 100644
index 30c62305..00000000
--- a/samples/app/src/main/res/values/styles.xml
+++ /dev/null
@@ -1,42 +0,0 @@
-<resources>
-
-    <!--Application theme-->
-    <style name="TwitterSampleTheme" parent="Theme.AppCompat.Light.NoActionBar">
-        <!--colorPrimary is used for the action bar-->
-        <item name="colorPrimary">@color/app_primary</item>
-        <!--colorPrimaryDark is used for the status bar-->
-        <item name="colorPrimaryDark">@color/app_primary_dark</item>
-        <!--colorAccent is the default color widgets are tinted-->
-        <item name="colorAccent">@color/app_accent</item>
-    </style>
-
-    <style name="twitter_FillParent">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">match_parent</item>
-    </style>
-
-    <style name="twitter_FillWidth">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">wrap_content</item>
-    </style>
-
-    <style name="twitter_WrapContent">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">wrap_content</item>
-    </style>
-
-    <style name="twitter_Tab" parent="Widget.Design.TabLayout">
-        <item name="android:background">@color/twitter_blue</item>
-        <item name="tabIndicatorColor">@android:color/white</item>
-        <item name="tabTextAppearance">@style/twitter_TabTextAppearance</item>
-        <item name="tabSelectedTextColor">@android:color/white</item>
-        <item name="tabPaddingStart">@dimen/tab_padding</item>
-        <item name="tabPaddingEnd">@dimen/tab_padding</item>
-        <item name="tabMode">scrollable</item>
-    </style>
-
-    <style name="twitter_TabTextAppearance" parent="TextAppearance.Design.Tab">
-        <item name="android:textColor">@android:color/white</item>
-        <item name="textAllCaps">false</item>
-    </style>
-</resources>
diff --git a/samples/app/twitter.properties.sample b/samples/app/twitter.properties.sample
deleted file mode 100644
index 6906260d..00000000
--- a/samples/app/twitter.properties.sample
+++ /dev/null
@@ -1,6 +0,0 @@
-# Twitter API key can be obtained at https://apps.twitter.com.
-twitterConsumerKey=EDIT_THIS
-twitterConsumerSecret=EDIT_THIS
-
-# MoPub AD Unit Id can be obtained at https://app.mopub.com/.
-mopubAdUnitId=EDIT_THIS
\ No newline at end of file
diff --git a/settings.gradle b/settings.gradle
index 6f478b12..82a74a9f 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -16,8 +16,4 @@
  */
 
 include ':twitter-core'
-include ':tweet-composer'
 include ':tweet-ui'
-include ':twitter-mopub'
-include ':twitter'
-include ':samples:app'
\ No newline at end of file
diff --git a/tweet-composer/build.gradle b/tweet-composer/build.gradle
deleted file mode 100644
index 7fa9ff2f..00000000
--- a/tweet-composer/build.gradle
+++ /dev/null
@@ -1,79 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        versionCode 1
-        versionName version
-        minSdkVersion rootProject.minSdkVersion
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-
-            testCoverageEnabled enableTestCodeCoverage
-        }
-
-        release {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-        }
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-
-    testOptions {
-        unitTests.returnDefaultValues = true
-        unitTests.includeAndroidResources true
-    }
-}
-
-dependencies {
-    api project(':twitter-core')
-
-    implementation dependency.picasso
-    implementation dependency.tweetText
-
-    androidTestCompile dependency.mockito
-    androidTestCompile dependency.dexmakerMockito
-
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile dependency.retrofitMock
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
-}
diff --git a/tweet-composer/changelog.md b/tweet-composer/changelog.md
deleted file mode 100644
index bc5f71c8..00000000
--- a/tweet-composer/changelog.md
+++ /dev/null
@@ -1,105 +0,0 @@
-# Android SDK TweetComposer Kit changelog
-
-*Non-trivial pull requests should include an entry below. Entries must be suitable for inclusion in public-facing materials such as release notes and blog posts. Keep them short, sweet, and in the past tense. New entries go on top. When merging to deploy, add the version number and date.*
-
-## Unreleased
-
-## v3.3.0
-
-* Removed scribing
-
-## v3.2.0
-
-* Moved build to Java 8
-
-## v3.1.1
-
-* Send broadcast when Tweet compose is cancelled.
-
-## v3.1.0
-
-* Bumped version number
-
-## v3.0.0
-
-* App card creation removed from composer
-
-## v2.3.1
-
-* Restricted Broadcast Intents to current application to avoid leaking sensitive information.
-
-## v2.3.0
-
-* Updated Twitter Core dependency.
-
-## v2.2.0
-
-* Updated Twitter Core dependency.
-
-## v2.1.0
-
-* Updated Twitter Core dependency to version 2.1.0.
-
-## v2.0.1
-
-* Added translations.
-* Removed pseudo locales from translations.
-
-## v2.0.0
-
-* Dropped support for API versions before API 14 (ICS).
-* Updated Twitter Core dependency
-
-## v1.0.5
-
-* Updated Twitter Core dependency
-
-## v1.0.4
-
-* Updated Fabric Base dependency
-* Updated composer to accept #hashtags
-
-## v1.0.3
-
-## v1.0.2
-
-## v1.0.1
-
-* Renamed drawables to avoid name collisions.
-
-## v1.0.0
-
-* Added composer with support for app install cards.
-
-## v0.9.0
-
-* Raised Min SDK version from 8 to 9.
-
-## v0.8.0
-
-* (DH) Removed tweet-composer dependency on twitter-core.
-
-## v0.7.4
-
-* (DH) Allow tweet-composer dependency on twitter-core to be excluded.
-
-## v0.7.3
-**Jan 30 2015**
-
-* (EF) Removed targetSdkVersion because it should not be specified on libraries.
-
-## v0.7.2
-**Nov 20 2014**
-
-* (TS) Moved to Java 7
-
-## v0.7.1
-**Oct 30 2014**
-
-* (TY) Removed Apache 2.0 License from pom files.
-
-## v0.7.0
-**Oct 15 2014**
-
-* (LTM) Removed allowBackup=true attribute from application element in AndroidManifest.xml.
-* Create TweetComposer Builder to assist in building intent for Twitter for Android and will fallback to a Browser
diff --git a/tweet-composer/gradle.properties b/tweet-composer/gradle.properties
deleted file mode 100644
index fb158331..00000000
--- a/tweet-composer/gradle.properties
+++ /dev/null
@@ -1,26 +0,0 @@
-#
-# Copyright (C) 2015 Twitter, Inc.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-#
-
-# The to be released version. When releasing, drop -SNAPSHOT. After releasing, bump version
-# number and add back -SNAPSHOT
-version=3.3.0-SNAPSHOT
-version_code=1
-
-pom_name=Tweet Composer Android SDK
-pom_group_id=com.twitter.sdk.android
-pom_artifact_id=tweet-composer
-pom_packaging=aar
diff --git a/tweet-composer/internal-build.gradle b/tweet-composer/internal-build.gradle
deleted file mode 100644
index e8755295..00000000
--- a/tweet-composer/internal-build.gradle
+++ /dev/null
@@ -1,102 +0,0 @@
-import io.fabric.gradle.weaving.ArtifactSizePlugin
-import io.fabric.gradle.weaving.DexMethodCountPlugin
-
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-apply plugin: 'com.android.library'
-apply from: rootProject.qualityScript
-apply plugin: ArtifactSizePlugin
-apply plugin: DexMethodCountPlugin
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        versionCode 1
-        versionName version
-        group pom_group_id
-
-        minSdkVersion rootProject.minSdkVersion
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-
-            testCoverageEnabled enableTestCodeCoverage
-        }
-        release {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-        }
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    dexMethodCount {
-        packageFilter = "com.twitter.sdk.android.tweetcomposer"
-    }
-
-    //Gradle publishes only release by default for multi module projects
-    //This will publish all build variants and we can specifically choose them
-    defaultPublishConfig 'release'
-    publishNonDefault true
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-
-    testOptions {
-        unitTests.returnDefaultValues = true
-        unitTests.includeAndroidResources true
-    }
-}
-
-ext.projectDependencies = [
-        ':sdk:twitter:twitter-core'
-]
-
-dependencies {
-    projectDependencies.each { path ->
-        api project(path: path)
-    }
-    implementation dependency.picasso
-    implementation dependency.tweetText
-
-    androidTestCompile dependency.mockito
-    androidTestCompile dependency.dexmakerMockito
-
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile dependency.retrofitMock
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
-}
-
-apply from: rootProject.deployScript
\ No newline at end of file
diff --git a/tweet-composer/lint.xml b/tweet-composer/lint.xml
deleted file mode 100644
index 9d1a00a6..00000000
--- a/tweet-composer/lint.xml
+++ /dev/null
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<lint>
-    <issue id="IconMissingDensityFolder" severity="ignore">
-        <!-- Suppress lint warning on xxxhdpi, which "is necessary only to provide a launcher icon
-        that can appear larger than usual on an xxhdpi device. You do not need to provide xxxhdpi
-        assets for all your app's images." -->
-        <ignore path="src/main/res/drawable-xxxhdpi"/>
-    </issue>
-    <issue id="InvalidPackage" severity="ignore"/>
-</lint>
diff --git a/tweet-composer/src/androidTest/java/com/twitter/sdk/android/tweetcomposer/TweetComposerTest.java b/tweet-composer/src/androidTest/java/com/twitter/sdk/android/tweetcomposer/TweetComposerTest.java
deleted file mode 100644
index eb95e2e4..00000000
--- a/tweet-composer/src/androidTest/java/com/twitter/sdk/android/tweetcomposer/TweetComposerTest.java
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.test.AndroidTestCase;
-
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.TwitterConfig;
-import com.twitter.sdk.android.core.TwitterCoreTestUtils;
-import com.twitter.sdk.android.core.TwitterTestUtils;
-
-import java.util.concurrent.ThreadPoolExecutor;
-
-import static org.mockito.Mockito.mock;
-
-public class TweetComposerTest extends AndroidTestCase {
-    private static final String TWITTER_NOT_INIT_ERROR_MSG =
-            "Must initialize Twitter before using getInstance()";
-    private TweetComposer tweetComposer;
-
-    public void setUp() throws Exception {
-        super.setUp();
-        Twitter.initialize(new TwitterConfig.Builder(getContext())
-                .executorService(mock(ThreadPoolExecutor.class))
-                .build());
-        tweetComposer = new TweetComposer();
-        tweetComposer.instance = tweetComposer;
-    }
-
-    public void tearDown()  throws Exception {
-        TwitterTestUtils.resetTwitter();
-        TwitterCoreTestUtils.resetTwitterCore();
-        tweetComposer.instance = null;
-
-        super.tearDown();
-    }
-
-    public void testGetVersion() {
-        final String version = BuildConfig.VERSION_NAME + "." + BuildConfig.BUILD_NUMBER;
-        assertEquals(version, tweetComposer.getVersion());
-    }
-
-    public void testGetIdentifier() {
-        final String identifier = BuildConfig.GROUP + ":" + BuildConfig.ARTIFACT_ID;
-        assertEquals(identifier, tweetComposer.getIdentifier());
-    }
-
-    public void testGetInstance_twitterNotInitialized() throws Exception {
-        try {
-            TwitterTestUtils.resetTwitter();
-            TwitterCoreTestUtils.resetTwitterCore();
-            tweetComposer.instance = null;
-
-            TweetComposer.getInstance();
-            fail("Should fail if Twitter is not initialized");
-        } catch (IllegalStateException e) {
-            assertEquals(TWITTER_NOT_INIT_ERROR_MSG, e.getMessage());
-        }
-    }
-}
diff --git a/tweet-composer/src/main/AndroidManifest.xml b/tweet-composer/src/main/AndroidManifest.xml
deleted file mode 100644
index 53c3faf4..00000000
--- a/tweet-composer/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,34 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<manifest
-    package="com.twitter.sdk.android.tweetcomposer"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <uses-permission android:name="android.permission.INTERNET"/>
-
-    <application>
-        <activity
-            android:name=".ComposerActivity"
-            android:exported="false"
-            android:windowSoftInputMode="adjustResize|stateVisible"/>
-        <service
-            android:name=".TweetUploadService"
-            android:enabled="true"
-            android:exported="false"/>
-    </application>
-</manifest>
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerActivity.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerActivity.java
deleted file mode 100644
index 50104e12..00000000
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerActivity.java
+++ /dev/null
@@ -1,152 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.app.Activity;
-import android.content.Context;
-import android.content.Intent;
-import android.net.Uri;
-import android.os.Bundle;
-
-import com.twitter.Regex;
-import com.twitter.sdk.android.core.TwitterAuthToken;
-import com.twitter.sdk.android.core.TwitterSession;
-
-public class ComposerActivity extends Activity {
-    static final String EXTRA_USER_TOKEN = "EXTRA_USER_TOKEN";
-    static final String EXTRA_IMAGE_URI = "EXTRA_IMAGE_URI";
-    static final String EXTRA_THEME = "EXTRA_THEME";
-    static final String EXTRA_TEXT = "EXTRA_TEXT";
-    static final String EXTRA_HASHTAGS = "EXTRA_HASHTAGS";
-    private static final int PLACEHOLDER_ID = -1;
-    private static final String PLACEHOLDER_SCREEN_NAME = "";
-    private ComposerController composerController;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-
-        final Intent intent = getIntent();
-        final TwitterAuthToken token = intent.getParcelableExtra(EXTRA_USER_TOKEN);
-        final TwitterSession session = new TwitterSession(token, PLACEHOLDER_ID,
-                PLACEHOLDER_SCREEN_NAME);
-        final Uri imageUri = intent.getParcelableExtra(EXTRA_IMAGE_URI);
-        final String text = intent.getStringExtra(EXTRA_TEXT);
-        final String hashtags = intent.getStringExtra(EXTRA_HASHTAGS);
-        final int themeResId = intent.getIntExtra(EXTRA_THEME, R.style.ComposerLight);
-
-        setTheme(themeResId);
-        setContentView(R.layout.tw__activity_composer);
-        final ComposerView composerView = findViewById(R.id.tw__composer_view);
-        composerController = new ComposerController(composerView, session, imageUri, text, hashtags,
-                new FinisherImpl());
-    }
-
-    interface Finisher {
-        void finish();
-    }
-
-    // FinisherImpl allows sub-components to finish the host Activity.
-    class FinisherImpl implements Finisher {
-        @Override
-        public void finish() {
-            ComposerActivity.this.finish();
-        }
-    }
-
-    @Override
-    public void onBackPressed() {
-        super.onBackPressed();
-        composerController.onClose();
-    }
-
-    public static class Builder {
-        private final Context context;
-        private TwitterAuthToken token;
-        private int themeResId = R.style.ComposerLight;
-        private Uri imageUri;
-        private String text;
-        private String hashtags;
-
-        public Builder(Context context) {
-            if (context == null) {
-                throw new IllegalArgumentException("Context must not be null");
-            }
-            this.context = context;
-        }
-
-        public Builder session(TwitterSession session) {
-            if (session == null) {
-                throw new IllegalArgumentException("TwitterSession must not be null");
-            }
-            final TwitterAuthToken token = session.getAuthToken();
-            if (token == null) {
-                throw new IllegalArgumentException("TwitterSession token must not be null");
-            }
-            // session passed via the parcelable auth token
-            this.token = token;
-            return this;
-        }
-
-        public Builder image(Uri imageUri) {
-            this.imageUri = imageUri;
-            return this;
-        }
-
-        public Builder text(String text) {
-            this.text = text;
-            return this;
-        }
-
-        public Builder hashtags(String... hashtags) {
-            if (hashtags == null) return this;
-
-            final StringBuilder sb = new StringBuilder();
-            for (String hashtag : hashtags) {
-                if (Regex.VALID_HASHTAG.matcher(hashtag).find()) {
-                    if (sb.length() > 0) {
-                        sb.append(" ");
-                    }
-                    sb.append(hashtag);
-                }
-            }
-
-            this.hashtags = sb.length() == 0 ? null : sb.toString();
-
-            return this;
-        }
-
-        public Builder darkTheme() {
-            themeResId = R.style.ComposerDark;
-            return this;
-        }
-
-        public Intent createIntent() {
-            if (token == null) {
-                throw new IllegalStateException("Must set a TwitterSession");
-            }
-            final Intent intent = new Intent(context, ComposerActivity.class);
-            intent.putExtra(EXTRA_USER_TOKEN, token);
-            intent.putExtra(EXTRA_IMAGE_URI, imageUri);
-            intent.putExtra(EXTRA_THEME, themeResId);
-            intent.putExtra(EXTRA_TEXT, text);
-            intent.putExtra(EXTRA_HASHTAGS, hashtags);
-            return intent;
-        }
-    }
-}
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerController.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerController.java
deleted file mode 100644
index 2b210ab6..00000000
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerController.java
+++ /dev/null
@@ -1,188 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.content.Intent;
-import android.net.Uri;
-import android.text.TextUtils;
-
-import com.twitter.Validator;
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.core.models.User;
-
-import static com.twitter.sdk.android.tweetcomposer.TweetUploadService.TWEET_COMPOSE_CANCEL;
-
-class ComposerController {
-    final ComposerView composerView;
-    final TwitterSession session;
-    final Uri imageUri;
-    final ComposerActivity.Finisher finisher;
-    final DependencyProvider dependencyProvider;
-
-    ComposerController(final ComposerView composerView, TwitterSession session, Uri imageUri,
-            String text, String hashtags, ComposerActivity.Finisher finisher) {
-        this(composerView, session, imageUri, text, hashtags, finisher, new DependencyProvider());
-    }
-
-    // testing purposes
-    ComposerController(final ComposerView composerView, TwitterSession session, Uri imageUri,
-            String text, String hashtags, ComposerActivity.Finisher finisher,
-            DependencyProvider dependencyProvider) {
-        this.composerView = composerView;
-        this.session = session;
-        this.imageUri = imageUri;
-        this.finisher = finisher;
-        this.dependencyProvider = dependencyProvider;
-
-        composerView.setCallbacks(new ComposerCallbacksImpl());
-        composerView.setTweetText(generateText(text, hashtags));
-        setProfilePhoto();
-        setImageView(imageUri);
-    }
-
-    String generateText(String text, String hashtags) {
-        final StringBuilder sb = new StringBuilder();
-        if (!TextUtils.isEmpty(text)) {
-            sb.append(text);
-        }
-        if (!TextUtils.isEmpty(hashtags)) {
-            if (sb.length() > 0) {
-                sb.append(" ");
-            }
-            sb.append(hashtags);
-        }
-        return sb.toString();
-    }
-
-    void setProfilePhoto() {
-        dependencyProvider.getApiClient(session).getAccountService()
-                .verifyCredentials(false, true, false).enqueue(new Callback<User>() {
-                    @Override
-                    public void success(Result<User> result) {
-                        composerView.setProfilePhotoView(result.data);
-                    }
-
-                    @Override
-                    public void failure(TwitterException exception) {
-                        // show placeholder background color
-                        composerView.setProfilePhotoView(null);
-                    }
-                });
-    }
-
-    void setImageView(Uri imageUri) {
-        if (imageUri != null) {
-            composerView.setImageView(imageUri);
-        }
-    }
-
-    interface ComposerCallbacks {
-        void onTextChanged(String text);
-        void onTweetPost(String text);
-        void onCloseClick();
-    }
-
-    class ComposerCallbacksImpl implements ComposerCallbacks {
-
-        @Override
-        public void onTextChanged(String text) {
-            final int charCount = tweetTextLength(text);
-            composerView.setCharCount(remainingCharCount(charCount));
-            // character count overflow red color
-            if (isTweetTextOverflow(charCount)) {
-                composerView.setCharCountTextStyle(R.style.tw__ComposerCharCountOverflow);
-            } else {
-                composerView.setCharCountTextStyle(R.style.tw__ComposerCharCount);
-            }
-            // Tweet post button enable/disable
-            composerView.postTweetEnabled(isPostEnabled(charCount));
-        }
-
-        @Override
-        public void onTweetPost(String text) {
-            final Intent intent = new Intent(composerView.getContext(), TweetUploadService.class);
-            intent.putExtra(TweetUploadService.EXTRA_USER_TOKEN, session.getAuthToken());
-            intent.putExtra(TweetUploadService.EXTRA_TWEET_TEXT, text);
-            intent.putExtra(TweetUploadService.EXTRA_IMAGE_URI, imageUri);
-            composerView.getContext().startService(intent);
-            finisher.finish();
-        }
-
-        @Override
-        public void onCloseClick() {
-            onClose();
-        }
-    }
-
-    void onClose() {
-        sendCancelBroadcast();
-        finisher.finish();
-    }
-
-    int tweetTextLength(String text) {
-        if (TextUtils.isEmpty(text)) {
-            return 0;
-        }
-
-        return dependencyProvider.getTweetValidator().getTweetLength(text);
-    }
-
-    void sendCancelBroadcast() {
-        final Intent intent = new Intent(TWEET_COMPOSE_CANCEL);
-        intent.setPackage(composerView.getContext().getPackageName());
-        composerView.getContext().sendBroadcast(intent);
-    }
-
-    static int remainingCharCount(int charCount) {
-        return Validator.MAX_TWEET_LENGTH - charCount;
-    }
-
-    /*
-     * @return true if the Tweet text is a valid length, false otherwise.
-     */
-    static boolean isPostEnabled(int charCount) {
-        return charCount > 0 && charCount <= Validator.MAX_TWEET_LENGTH;
-    }
-
-    /*
-     * @return true if the Tweet text is too long, false otherwise.
-     */
-    static boolean isTweetTextOverflow(int charCount) {
-        return charCount > Validator.MAX_TWEET_LENGTH;
-    }
-
-    /*
-     * Mockable class that provides ComposerController dependencies.
-     */
-    static class DependencyProvider {
-        final Validator tweetValidator = new Validator();
-
-        TwitterApiClient getApiClient(TwitterSession session) {
-            return TwitterCore.getInstance().getApiClient(session);
-        }
-
-        Validator getTweetValidator() {
-            return tweetValidator;
-        }
-    }
-}
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerView.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerView.java
deleted file mode 100644
index b3491b9b..00000000
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/ComposerView.java
+++ /dev/null
@@ -1,170 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.content.Context;
-import android.graphics.drawable.ColorDrawable;
-import android.net.Uri;
-import android.text.Editable;
-import android.text.TextWatcher;
-import android.util.AttributeSet;
-import android.view.View;
-import android.widget.Button;
-import android.widget.EditText;
-import android.widget.ImageView;
-import android.widget.LinearLayout;
-import android.widget.TextView;
-
-import com.squareup.picasso.Picasso;
-import com.twitter.sdk.android.core.internal.UserUtils;
-import com.twitter.sdk.android.core.models.User;
-import com.twitter.sdk.android.tweetcomposer.internal.util.ObservableScrollView;
-
-import java.util.Locale;
-
-public class ComposerView extends LinearLayout {
-    ImageView avatarView;
-    ImageView closeView;
-    EditText tweetEditView;
-    TextView charCountView;
-    Button tweetButton;
-    ObservableScrollView scrollView;
-    View divider;
-    // styled drawables for images
-    ColorDrawable mediaBg;
-    // callbacks
-    ImageView imageView;
-    ComposerController.ComposerCallbacks callbacks;
-
-    private Picasso imageLoader;
-
-    public ComposerView(Context context) {
-        this(context, null);
-    }
-
-    public ComposerView(Context context, AttributeSet attrs) {
-        super(context, attrs);
-        init(context);
-    }
-
-    public ComposerView(Context context, AttributeSet attrs, int defStyle) {
-        super(context, attrs, defStyle);
-        init(context);
-    }
-
-    private void init(Context context) {
-        imageLoader = Picasso.with(getContext());
-        // TODO: make color vary depending on the style
-        mediaBg = new ColorDrawable(context.getResources()
-                .getColor(R.color.tw__composer_light_gray));
-        inflate(context, R.layout.tw__composer_view, this);
-    }
-
-    @Override
-    protected void onFinishInflate() {
-        super.onFinishInflate();
-        findSubviews();
-
-        closeView.setOnClickListener(view -> callbacks.onCloseClick());
-
-        tweetButton.setOnClickListener(view -> callbacks.onTweetPost(getTweetText()));
-
-        tweetEditView.setOnEditorActionListener((textView, i, keyEvent) -> {
-            callbacks.onTweetPost(getTweetText());
-            return true;
-        });
-
-        tweetEditView.addTextChangedListener(new TextWatcher() {
-            @Override
-            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
-            }
-
-            @Override
-            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
-            }
-
-            @Override
-            public void afterTextChanged(Editable editable) {
-                callbacks.onTextChanged(getTweetText());
-            }
-        });
-
-        scrollView.setScrollViewListener(scrollY -> {
-            if (scrollY > 0) {
-                divider.setVisibility(View.VISIBLE);
-            } else {
-                divider.setVisibility(View.INVISIBLE);
-            }
-        });
-    }
-
-    void findSubviews() {
-        avatarView = findViewById(R.id.tw__author_avatar);
-        closeView = findViewById(R.id.tw__composer_close);
-        tweetEditView = findViewById(R.id.tw__edit_tweet);
-        charCountView = findViewById(R.id.tw__char_count);
-        tweetButton = findViewById(R.id.tw__post_tweet);
-        scrollView = findViewById(R.id.tw__composer_scroll_view);
-        divider = findViewById(R.id.tw__composer_profile_divider);
-        imageView = findViewById(R.id.tw__image_view);
-    }
-
-    void setCallbacks(ComposerController.ComposerCallbacks callbacks) {
-        this.callbacks = callbacks;
-    }
-
-    /*
-     * Sets the profile photo from the User's profile image url or the placeholder background
-     * color.
-     */
-    void setProfilePhotoView(User user) {
-        final String url = UserUtils.getProfileImageUrlHttps(user,
-                UserUtils.AvatarSize.REASONABLY_SMALL);
-        if (imageLoader != null) {
-            // Passing null url will not trigger any request, but will set the placeholder bg
-            imageLoader.load(url).placeholder(mediaBg).into(avatarView);
-        }
-    }
-
-    String getTweetText() {
-        return tweetEditView.getText().toString();
-    }
-
-    void setTweetText(String text) {
-        tweetEditView.setText(text);
-    }
-
-    void setCharCount(int remainingCount) {
-        charCountView.setText(String.format(Locale.getDefault(), "%d", remainingCount));
-    }
-
-    void setCharCountTextStyle(int textStyleResId) {
-        charCountView.setTextAppearance(getContext(), textStyleResId);
-    }
-
-    void postTweetEnabled(boolean enabled) {
-        tweetButton.setEnabled(enabled);
-    }
-
-    void setImageView(Uri imageUri) {
-        if (imageLoader != null) {
-            imageView.setVisibility(VISIBLE);
-            imageLoader.load(imageUri).into(imageView);
-        }
-    }
-}
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/FileUtils.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/FileUtils.java
deleted file mode 100644
index eb090140..00000000
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/FileUtils.java
+++ /dev/null
@@ -1,120 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.annotation.TargetApi;
-import android.content.ContentResolver;
-import android.content.Context;
-import android.database.Cursor;
-import android.net.Uri;
-import android.os.Build;
-import android.provider.DocumentsContract;
-import android.provider.MediaStore;
-import android.text.TextUtils;
-import android.webkit.MimeTypeMap;
-
-import java.io.File;
-
-/**
- * Utilities for resolving various Uri's to file paths and MIME types.
- */
-class FileUtils {
-    private static final String MEDIA_SCHEME = "com.android.providers.media.documents";
-
-    @TargetApi(Build.VERSION_CODES.KITKAT)
-    static String getPath(final Context context, final Uri uri) {
-        final boolean isKitKat = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;
-        if (isKitKat && isMediaDocumentAuthority(uri)) {
-            final String documentId = DocumentsContract.getDocumentId(uri); // e.g. "image:1234"
-            final String[] parts = documentId.split(":");
-            final String type = parts[0];
-
-            final Uri contentUri;
-            if ("image".equals(type)) {
-                contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;
-            } else {
-                // reject video or audio documents
-                return null;
-            }
-
-            // query content resolver for MediaStore id column
-            final String selection = "_id=?";
-            final String[] args = new String[] {
-                    parts[1]
-            };
-            return resolveFilePath(context, contentUri, selection, args);
-        } else if (isContentScheme(uri)) {
-            return resolveFilePath(context, uri, null, null);
-        } else if (isFileScheme(uri)) {
-            return uri.getPath();
-        }
-        return null;
-    }
-
-    static boolean isMediaDocumentAuthority(Uri uri) {
-        return MEDIA_SCHEME.equalsIgnoreCase(uri.getAuthority());
-    }
-
-    static boolean isContentScheme(Uri uri) {
-        return ContentResolver.SCHEME_CONTENT.equalsIgnoreCase(uri.getScheme());
-    }
-
-    static boolean isFileScheme(Uri uri) {
-        return ContentResolver.SCHEME_FILE.equalsIgnoreCase(uri.getScheme());
-    }
-
-    static String resolveFilePath(Context context, Uri uri, String selection, String[] args) {
-        Cursor cursor = null;
-        final String[] projection = {MediaStore.Images.Media.DATA};
-        try {
-            cursor = context.getContentResolver().query(uri, projection, selection, args, null);
-            if (cursor != null && cursor.moveToFirst()) {
-                final int i = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);
-                return cursor.getString(i);
-            }
-        } finally {
-            if (cursor != null) {
-                cursor.close();
-            }
-        }
-        return null;
-    }
-
-    /**
-     * @return The MIME type for the given file.
-     */
-    static String getMimeType(File file) {
-        final String ext = getExtension(file.getName());
-        if (!TextUtils.isEmpty(ext)) {
-            return MimeTypeMap.getSingleton().getMimeTypeFromExtension(ext);
-        }
-        // default from https://dev.twitter.com/rest/public/uploading-media
-        return "application/octet-stream";
-    }
-
-    /**
-     * @return the extension of the given file name, excluding the dot. For example, "png", "jpg".
-     */
-    static String getExtension(String filename) {
-        if (filename == null) {
-            return null;
-        }
-        final int i = filename.lastIndexOf(".");
-        return i < 0 ? "" : filename.substring(i + 1);
-    }
-}
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetComposer.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetComposer.java
deleted file mode 100644
index 3ec79c4e..00000000
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetComposer.java
+++ /dev/null
@@ -1,215 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.annotation.SuppressLint;
-import android.content.Context;
-import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.content.pm.ResolveInfo;
-import android.net.Uri;
-import android.text.TextUtils;
-
-import com.twitter.sdk.android.core.GuestSessionProvider;
-import com.twitter.sdk.android.core.SessionManager;
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.core.internal.network.UrlUtils;
-
-import java.net.URL;
-import java.util.List;
-
-/**
- * The TweetComposer Kit provides a lightweight mechanism for creating intents to interact with the installed Twitter app or a browser.
- */
-public class TweetComposer {
-    @SuppressLint("StaticFieldLeak")
-    static volatile TweetComposer instance;
-    private static final String MIME_TYPE_PLAIN_TEXT = "text/plain";
-    private static final String MIME_TYPE_JPEG = "image/jpeg";
-    private static final String TWITTER_PACKAGE_NAME = "com.twitter.android";
-    private static final String WEB_INTENT = "https://twitter.com/intent/tweet?text=%s&url=%s";
-
-    SessionManager<TwitterSession> sessionManager;
-    GuestSessionProvider guestSessionProvider;
-    Context context;
-
-    public static TweetComposer getInstance() {
-        if (instance == null) {
-            synchronized (TweetComposer.class) {
-                if (instance == null) {
-                    instance = new TweetComposer();
-                }
-            }
-        }
-        return instance;
-    }
-
-    TweetComposer() {
-        sessionManager = TwitterCore.getInstance().getSessionManager();
-        guestSessionProvider = TwitterCore.getInstance().getGuestSessionProvider();
-        context = Twitter.getInstance().getContext(getIdentifier());
-    }
-
-    public String getVersion() {
-        return BuildConfig.VERSION_NAME + "." + BuildConfig.BUILD_NUMBER;
-    }
-
-    public String getIdentifier() {
-        return BuildConfig.GROUP + ":" + BuildConfig.ARTIFACT_ID;
-    }
-
-    /**
-     * The TweetComposer Builder will use the installed Twitter instance and fall back to a browser
-     */
-    public static class Builder {
-        private final Context context;
-        private String text;
-        private URL url;
-        private Uri imageUri;
-
-        /**
-         * Initializes a new {@link com.twitter.sdk.android.tweetcomposer.TweetComposer.Builder}
-         */
-        public Builder(Context context) {
-            if (context == null) {
-                throw new IllegalArgumentException("Context must not be null.");
-            }
-            this.context = context;
-        }
-
-        /**
-         * Sets Text for Tweet Intent, no length validation is performed
-         */
-        public Builder text(String text) {
-            if (text == null) {
-                throw new IllegalArgumentException("text must not be null.");
-            }
-
-            if (this.text != null) {
-                throw new IllegalStateException("text already set.");
-            }
-            this.text = text;
-
-            return this;
-        }
-
-        /**
-         * Sets URL for Tweet Intent, no length validation is performed
-         */
-        public Builder url(URL url) {
-            if (url == null) {
-                throw new IllegalArgumentException("url must not be null.");
-            }
-
-            if (this.url != null) {
-                throw new IllegalStateException("url already set.");
-            }
-            this.url = url;
-
-            return this;
-        }
-        /**
-         * Sets Image {@link android.net.Uri} for the Tweet. Only valid if the Twitter App is
-         * installed.
-         * The Uri should be a file Uri to a local file (e.g. <pre><code>Uri.fromFile(someExternalStorageFile)</code></pre>))
-         */
-        public Builder image(Uri imageUri) {
-            if (imageUri == null) {
-                throw new IllegalArgumentException("imageUri must not be null.");
-            }
-
-            if (this.imageUri != null) {
-                throw new IllegalStateException("imageUri already set.");
-            }
-            this.imageUri = imageUri;
-
-            return this;
-        }
-
-        /**
-         * Creates {@link android.content.Intent} based on data in {@link com.twitter.sdk.android.tweetcomposer.TweetComposer.Builder}
-         * @return an Intent to the Twitter for Android or a web intent.
-         */
-        public Intent createIntent() {
-            Intent intent = createTwitterIntent();
-
-            if (intent == null) {
-                intent = createWebIntent();
-            }
-
-            return intent;
-        }
-
-        Intent createTwitterIntent() {
-            final Intent intent = new Intent(Intent.ACTION_SEND);
-
-            final StringBuilder builder = new StringBuilder();
-
-            if (!TextUtils.isEmpty(text)) {
-                builder.append(text);
-            }
-
-            if (url != null) {
-                if (builder.length() > 0) {
-                    builder.append(' ');
-                }
-                builder.append(url.toString());
-            }
-
-            intent.putExtra(Intent.EXTRA_TEXT, builder.toString());
-            intent.setType(MIME_TYPE_PLAIN_TEXT);
-
-            if (imageUri != null) {
-                intent.putExtra(Intent.EXTRA_STREAM, imageUri);
-                intent.setType(MIME_TYPE_JPEG);
-            }
-
-            final PackageManager packManager = context.getPackageManager();
-            final List<ResolveInfo> resolvedInfoList = packManager.queryIntentActivities(intent,
-                    PackageManager.MATCH_DEFAULT_ONLY);
-
-            for (ResolveInfo resolveInfo: resolvedInfoList){
-                if (resolveInfo.activityInfo.packageName.startsWith(TWITTER_PACKAGE_NAME)){
-                    intent.setClassName(resolveInfo.activityInfo.packageName,
-                            resolveInfo.activityInfo.name);
-                    return intent;
-                }
-            }
-
-            return null;
-        }
-
-        Intent createWebIntent() {
-            final String url = (this.url == null ? "" : this.url.toString());
-
-            final String tweetUrl =
-                    String.format(WEB_INTENT, UrlUtils.urlEncode(text), UrlUtils.urlEncode(url));
-            return new Intent(Intent.ACTION_VIEW, Uri.parse(tweetUrl));
-        }
-
-        /**
-         * Starts the intent created in {@link com.twitter.sdk.android.tweetcomposer.TweetComposer.Builder#createIntent()}
-         */
-        public void show() {
-            final Intent intent = createIntent();
-            context.startActivity(intent);
-        }
-    }
-}
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetUploadService.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetUploadService.java
deleted file mode 100644
index bf4fb94d..00000000
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetUploadService.java
+++ /dev/null
@@ -1,164 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.app.IntentService;
-import android.content.Intent;
-import android.net.Uri;
-
-import com.twitter.sdk.android.core.Callback;
-import com.twitter.sdk.android.core.Result;
-import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterAuthToken;
-import com.twitter.sdk.android.core.TwitterCore;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.core.models.Media;
-import com.twitter.sdk.android.core.models.Tweet;
-
-import java.io.File;
-
-import okhttp3.MediaType;
-import okhttp3.RequestBody;
-
-public class TweetUploadService extends IntentService {
-    public static final String UPLOAD_SUCCESS
-            = "com.twitter.sdk.android.tweetcomposer.UPLOAD_SUCCESS";
-    public static final String UPLOAD_FAILURE
-            = "com.twitter.sdk.android.tweetcomposer.UPLOAD_FAILURE";
-    public static final String TWEET_COMPOSE_CANCEL =
-            "com.twitter.sdk.android.tweetcomposer.TWEET_COMPOSE_CANCEL";
-    public static final String EXTRA_TWEET_ID = "EXTRA_TWEET_ID";
-    public static final String EXTRA_RETRY_INTENT = "EXTRA_RETRY_INTENT";
-
-    static final String TAG = "TweetUploadService";
-    static final String EXTRA_USER_TOKEN = "EXTRA_USER_TOKEN";
-    static final String EXTRA_TWEET_TEXT = "EXTRA_TWEET_TEXT";
-    static final String EXTRA_IMAGE_URI = "EXTRA_IMAGE_URI";
-    private static final int PLACEHOLDER_ID = -1;
-    private static final String PLACEHOLDER_SCREEN_NAME = "";
-    DependencyProvider dependencyProvider;
-
-    Intent intent;
-
-    public TweetUploadService() {
-        this(new DependencyProvider());
-    }
-
-    // testing purposes
-    TweetUploadService(DependencyProvider dependencyProvider) {
-        super("TweetUploadService");
-        this.dependencyProvider = dependencyProvider;
-    }
-
-    @Override
-    protected void onHandleIntent(Intent intent) {
-        final TwitterAuthToken token = intent.getParcelableExtra(EXTRA_USER_TOKEN);
-        this.intent = intent;
-        final TwitterSession twitterSession =
-                new TwitterSession(token, PLACEHOLDER_ID, PLACEHOLDER_SCREEN_NAME);
-        final String tweetText = intent.getStringExtra(EXTRA_TWEET_TEXT);
-        final Uri imageUri = intent.getParcelableExtra(EXTRA_IMAGE_URI);
-
-        uploadTweet(twitterSession, tweetText, imageUri);
-    }
-
-    void uploadTweet(final TwitterSession session, final String text, final Uri imageUri) {
-        if (imageUri != null) {
-            uploadMedia(session, imageUri, new Callback<Media>() {
-                @Override
-                public void success(Result<Media> result) {
-                    uploadTweetWithMedia(session, text, result.data.mediaIdString);
-                }
-
-                @Override
-                public void failure(TwitterException exception) {
-                    fail(exception);
-                }
-
-            });
-        } else {
-            uploadTweetWithMedia(session, text, null);
-        }
-    }
-
-    void uploadTweetWithMedia(TwitterSession session, String text, String mediaId) {
-        final TwitterApiClient client = dependencyProvider.getTwitterApiClient(session);
-
-        client.getStatusesService().update(text, null, null, null, null, null, null, true, mediaId)
-                .enqueue(
-                        new Callback<Tweet>() {
-                            @Override
-                            public void success(Result<Tweet> result) {
-                                sendSuccessBroadcast(result.data.getId());
-                                stopSelf();
-                            }
-
-                            @Override
-                            public void failure(TwitterException exception) {
-                                fail(exception);
-                            }
-                        });
-    }
-
-    void uploadMedia(TwitterSession session, Uri imageUri, Callback<Media> callback) {
-        final TwitterApiClient client = dependencyProvider.getTwitterApiClient(session);
-
-        final String path = FileUtils.getPath(TweetUploadService.this, imageUri);
-        if (path == null) {
-            fail(new TwitterException("Uri file path resolved to null"));
-            return;
-        }
-        final File file = new File(path);
-        final String mimeType = FileUtils.getMimeType(file);
-        final RequestBody media = RequestBody.create(MediaType.parse(mimeType), file);
-
-        client.getMediaService().upload(media, null, null).enqueue(callback);
-    }
-
-    void fail(TwitterException e) {
-        sendFailureBroadcast(intent);
-        Twitter.getLogger().e(TAG, "Post Tweet failed", e);
-        stopSelf();
-    }
-
-    void sendSuccessBroadcast(long tweetId) {
-        final Intent intent = new Intent(UPLOAD_SUCCESS);
-        intent.putExtra(EXTRA_TWEET_ID, tweetId);
-        intent.setPackage(getApplicationContext().getPackageName());
-        sendBroadcast(intent);
-    }
-
-    void sendFailureBroadcast(Intent original) {
-        final Intent intent = new Intent(UPLOAD_FAILURE);
-        intent.putExtra(EXTRA_RETRY_INTENT, original);
-        intent.setPackage(getApplicationContext().getPackageName());
-        sendBroadcast(intent);
-    }
-
-    /*
-     * Mockable class that provides ComposerController dependencies.
-     */
-    static class DependencyProvider {
-
-        TwitterApiClient getTwitterApiClient(TwitterSession session) {
-            return TwitterCore.getInstance().getApiClient(session);
-        }
-    }
-}
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/internal/util/ObservableScrollView.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/internal/util/ObservableScrollView.java
deleted file mode 100644
index bd4aa07f..00000000
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/internal/util/ObservableScrollView.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer.internal.util;
-
-import android.annotation.TargetApi;
-import android.content.Context;
-import android.os.Build;
-import android.util.AttributeSet;
-import android.widget.ScrollView;
-
-public class ObservableScrollView extends ScrollView {
-    ScrollViewListener scrollViewListener;
-
-    public ObservableScrollView(Context context) {
-        super(context);
-    }
-
-    public ObservableScrollView(Context context, AttributeSet attrs) {
-        super(context, attrs);
-    }
-
-    public ObservableScrollView(Context context, AttributeSet attrs, int defStyleAttr) {
-        super(context, attrs, defStyleAttr);
-    }
-
-    @TargetApi(Build.VERSION_CODES.LOLLIPOP)
-    public ObservableScrollView(Context context, AttributeSet attrs, int defStyleAttr, int
-            defStyleRes) {
-        super(context, attrs, defStyleAttr, defStyleRes);
-    }
-
-    @Override
-    protected void onScrollChanged(int currentX, int currentY, int oldX, int oldY) {
-        super.onScrollChanged(currentX, currentY, oldX, oldY);
-        if (scrollViewListener != null) {
-            scrollViewListener.onScrollChanged(currentY);
-        }
-    }
-
-    public void setScrollViewListener(ScrollViewListener scrollViewListener) {
-        this.scrollViewListener = scrollViewListener;
-    }
-
-    public interface ScrollViewListener {
-        void onScrollChanged(int scrollY);
-    }
-}
diff --git a/tweet-composer/src/main/res/drawable-hdpi/tw__composer_close.png b/tweet-composer/src/main/res/drawable-hdpi/tw__composer_close.png
deleted file mode 100644
index fafa2334..00000000
Binary files a/tweet-composer/src/main/res/drawable-hdpi/tw__composer_close.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-hdpi/tw__composer_logo_blue.png b/tweet-composer/src/main/res/drawable-hdpi/tw__composer_logo_blue.png
deleted file mode 100644
index 51c7bc89..00000000
Binary files a/tweet-composer/src/main/res/drawable-hdpi/tw__composer_logo_blue.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-hdpi/tw__composer_logo_white.png b/tweet-composer/src/main/res/drawable-hdpi/tw__composer_logo_white.png
deleted file mode 100644
index 07c5f1b3..00000000
Binary files a/tweet-composer/src/main/res/drawable-hdpi/tw__composer_logo_white.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-mdpi/tw__composer_close.png b/tweet-composer/src/main/res/drawable-mdpi/tw__composer_close.png
deleted file mode 100644
index 34d9f8b0..00000000
Binary files a/tweet-composer/src/main/res/drawable-mdpi/tw__composer_close.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-mdpi/tw__composer_logo_blue.png b/tweet-composer/src/main/res/drawable-mdpi/tw__composer_logo_blue.png
deleted file mode 100644
index babb7eb9..00000000
Binary files a/tweet-composer/src/main/res/drawable-mdpi/tw__composer_logo_blue.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-mdpi/tw__composer_logo_white.png b/tweet-composer/src/main/res/drawable-mdpi/tw__composer_logo_white.png
deleted file mode 100644
index b8665985..00000000
Binary files a/tweet-composer/src/main/res/drawable-mdpi/tw__composer_logo_white.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_close.png b/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_close.png
deleted file mode 100644
index e35db452..00000000
Binary files a/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_close.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_logo_blue.png b/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_logo_blue.png
deleted file mode 100644
index ea2056dc..00000000
Binary files a/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_logo_blue.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_logo_white.png b/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_logo_white.png
deleted file mode 100644
index b71965e3..00000000
Binary files a/tweet-composer/src/main/res/drawable-xhdpi/tw__composer_logo_white.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_close.png b/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_close.png
deleted file mode 100644
index b01d6466..00000000
Binary files a/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_close.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_logo_blue.png b/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_logo_blue.png
deleted file mode 100644
index a01c5761..00000000
Binary files a/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_logo_blue.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_logo_white.png b/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_logo_white.png
deleted file mode 100644
index da93dcb9..00000000
Binary files a/tweet-composer/src/main/res/drawable-xxhdpi/tw__composer_logo_white.png and /dev/null differ
diff --git a/tweet-composer/src/main/res/drawable/tw__btn_composer_tweet.xml b/tweet-composer/src/main/res/drawable/tw__btn_composer_tweet.xml
deleted file mode 100644
index 227d75e0..00000000
--- a/tweet-composer/src/main/res/drawable/tw__btn_composer_tweet.xml
+++ /dev/null
@@ -1,44 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_pressed="true"
-          android:state_enabled="true">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/tw__composer_blue_text" />
-            <corners android:radius="@dimen/tw__composer_tweet_btn_radius" />
-            <padding android:left="@dimen/tw__composer_spacing_medium"
-                     android:right="@dimen/tw__composer_spacing_medium" />
-        </shape>
-    </item>
-    <item android:state_enabled="true">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/tw__composer_blue" />
-            <corners android:radius="@dimen/tw__composer_tweet_btn_radius" />
-            <padding android:left="@dimen/tw__composer_spacing_medium"
-                     android:right="@dimen/tw__composer_spacing_medium" />
-        </shape>
-    </item>
-    <item android:state_enabled="false">
-        <shape android:shape="rectangle">
-            <solid android:color="@color/tw__composer_light_gray" />
-            <corners android:radius="@dimen/tw__composer_tweet_btn_radius" />
-            <padding android:left="@dimen/tw__composer_spacing_medium"
-                     android:right="@dimen/tw__composer_spacing_medium" />
-        </shape>
-    </item>
-</selector>
\ No newline at end of file
diff --git a/tweet-composer/src/main/res/layout/tw__activity_composer.xml b/tweet-composer/src/main/res/layout/tw__activity_composer.xml
deleted file mode 100644
index 4a5a15c7..00000000
--- a/tweet-composer/src/main/res/layout/tw__activity_composer.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<merge
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <com.twitter.sdk.android.tweetcomposer.ComposerView
-        android:id="@+id/tw__composer_view"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"/>
-
-</merge>
diff --git a/tweet-composer/src/main/res/layout/tw__composer_view.xml b/tweet-composer/src/main/res/layout/tw__composer_view.xml
deleted file mode 100644
index 06cb19fd..00000000
--- a/tweet-composer/src/main/res/layout/tw__composer_view.xml
+++ /dev/null
@@ -1,103 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-              xmlns:tools="http://schemas.android.com/tools"
-              android:layout_width="match_parent"
-              android:layout_height="match_parent"
-              android:orientation="vertical">
-
-    <RelativeLayout
-        android:id="@+id/tw__composer_header"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content">
-
-        <ImageButton
-            android:id="@+id/tw__composer_close"
-            style="@style/tw__ComposerClose"
-            android:layout_centerVertical="true"
-            tools:ignore="ContentDescription"/>
-
-        <ImageView
-            android:id="@+id/tw__twitter_logo"
-            android:layout_height="@dimen/tw__composer_logo_height"
-            android:layout_width="@dimen/tw__composer_logo_width"
-            android:src="?attr/tw__twitter_logo"
-            android:layout_centerInParent="true"
-            tools:ignore="ContentDescription"/>
-
-        <ImageView
-            android:id="@+id/tw__author_avatar"
-            style="@style/tw__ComposerAvatar"
-            android:layout_centerVertical="true"
-            android:layout_alignParentEnd="true"
-            android:layout_alignParentRight="true"
-            tools:background="@color/tw__composer_light_gray"
-            tools:ignore="ContentDescription"/>
-    </RelativeLayout>
-
-    <View
-        android:id="@+id/tw__composer_profile_divider"
-        android:visibility="invisible"
-        style="@style/tw__ComposerDivider"/>
-
-    <com.twitter.sdk.android.tweetcomposer.internal.util.ObservableScrollView
-        android:id="@+id/tw__composer_scroll_view"
-        android:layout_width="match_parent"
-        android:layout_height="0dp"
-        android:layout_weight="1"
-        android:overScrollMode="never">
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:orientation="vertical">
-
-            <EditText
-                android:id="@+id/tw__edit_tweet"
-                style="@style/tw__EditTweet"/>
-
-            <ImageView
-                android:id="@+id/tw__image_view"
-                android:layout_width="match_parent"
-                android:layout_height="wrap_content"
-                android:layout_margin="@dimen/tw__composer_spacing_large"
-                android:adjustViewBounds="true"
-                android:visibility="gone"
-                tools:ignore="ContentDescription"/>
-        </LinearLayout>
-    </com.twitter.sdk.android.tweetcomposer.internal.util.ObservableScrollView>
-
-    <View
-        android:id="@+id/tw__composer_toolbar_divider"
-        style="@style/tw__ComposerDivider"/>
-
-    <LinearLayout
-        android:id="@+id/tw__composer_toolbar"
-        style="@style/tw__ComposerToolbar">
-
-        <TextView
-            android:id="@+id/tw__char_count"
-            style="@style/tw__ComposerCharCount"/>
-
-        <Button
-            android:id="@+id/tw__post_tweet"
-            style="@style/tw__ComposerTweetButton"/>
-
-    </LinearLayout>
-
-</LinearLayout>
\ No newline at end of file
diff --git a/tweet-composer/src/main/res/values-ar/strings.xml b/tweet-composer/src/main/res/values-ar/strings.xml
deleted file mode 100644
index bf29fbe5..00000000
--- a/tweet-composer/src/main/res/values-ar/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">ماذا يحدث؟</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">تغريد</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-bg/strings.xml b/tweet-composer/src/main/res/values-bg/strings.xml
deleted file mode 100644
index 7e3e6361..00000000
--- a/tweet-composer/src/main/res/values-bg/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Какво става?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Туитване</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-bn/strings.xml b/tweet-composer/src/main/res/values-bn/strings.xml
deleted file mode 100644
index cbea433b..00000000
--- a/tweet-composer/src/main/res/values-bn/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">কী ঘটছে?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">টুইট</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ca/strings.xml b/tweet-composer/src/main/res/values-ca/strings.xml
deleted file mode 100644
index fb14985e..00000000
--- a/tweet-composer/src/main/res/values-ca/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Què està passant?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tuita</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-cs/strings.xml b/tweet-composer/src/main/res/values-cs/strings.xml
deleted file mode 100644
index 32bf4abe..00000000
--- a/tweet-composer/src/main/res/values-cs/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Co se právě děje?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweetnout</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-da/strings.xml b/tweet-composer/src/main/res/values-da/strings.xml
deleted file mode 100644
index fb9fce05..00000000
--- a/tweet-composer/src/main/res/values-da/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Hvad sker der?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-de/strings.xml b/tweet-composer/src/main/res/values-de/strings.xml
deleted file mode 100644
index 3ec5232f..00000000
--- a/tweet-composer/src/main/res/values-de/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Was gibt’s Neues?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Twittern</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-el/strings.xml b/tweet-composer/src/main/res/values-el/strings.xml
deleted file mode 100644
index 0a0e93e6..00000000
--- a/tweet-composer/src/main/res/values-el/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Τι συμβαίνει;</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Γράψτε ένα Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-en-rGB/strings.xml b/tweet-composer/src/main/res/values-en-rGB/strings.xml
deleted file mode 100644
index 84879563..00000000
--- a/tweet-composer/src/main/res/values-en-rGB/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">What\'s Happening?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-en-rSS/strings.xml b/tweet-composer/src/main/res/values-en-rSS/strings.xml
deleted file mode 100644
index 11bf24a9..00000000
--- a/tweet-composer/src/main/res/values-en-rSS/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">[[141545]] What\'s Happening?</string>
-    <string name="tw__max_tweet_chars">[[141547]] 140</string>
-    <string name="tw__post_tweet">[[141546]] Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-es/strings.xml b/tweet-composer/src/main/res/values-es/strings.xml
deleted file mode 100644
index 93e8ba31..00000000
--- a/tweet-composer/src/main/res/values-es/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">¿Qué está pasando?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Twittear</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-fa/strings.xml b/tweet-composer/src/main/res/values-fa/strings.xml
deleted file mode 100644
index 134161b6..00000000
--- a/tweet-composer/src/main/res/values-fa/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">چه اتفاقى در حال رخ دادن است؟</string>
-    <string name="tw__max_tweet_chars">۱۴۰</string>
-    <string name="tw__post_tweet">توييت</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-fi/strings.xml b/tweet-composer/src/main/res/values-fi/strings.xml
deleted file mode 100644
index ca962eee..00000000
--- a/tweet-composer/src/main/res/values-fi/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Mitä tapahtuu?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Twiittaa</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-fr/strings.xml b/tweet-composer/src/main/res/values-fr/strings.xml
deleted file mode 100644
index 3f13af89..00000000
--- a/tweet-composer/src/main/res/values-fr/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Que se passe-t-il ?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-gu/strings.xml b/tweet-composer/src/main/res/values-gu/strings.xml
deleted file mode 100644
index f5b25b58..00000000
--- a/tweet-composer/src/main/res/values-gu/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">શું ચાલી રહ્યું છ?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ટ્વીટ કરો</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-hi/strings.xml b/tweet-composer/src/main/res/values-hi/strings.xml
deleted file mode 100644
index 2f90c505..00000000
--- a/tweet-composer/src/main/res/values-hi/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">क्या हो रहा है?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ट्वीट करें</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-hr/strings.xml b/tweet-composer/src/main/res/values-hr/strings.xml
deleted file mode 100644
index de1a85d2..00000000
--- a/tweet-composer/src/main/res/values-hr/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Što se događa?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Pošalji Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-hu/strings.xml b/tweet-composer/src/main/res/values-hu/strings.xml
deleted file mode 100644
index e8e208db..00000000
--- a/tweet-composer/src/main/res/values-hu/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Mi történik éppen most?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-in/strings.xml b/tweet-composer/src/main/res/values-in/strings.xml
deleted file mode 100644
index 1c9a72cc..00000000
--- a/tweet-composer/src/main/res/values-in/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Apa yang Sedang Terjadi?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-it/strings.xml b/tweet-composer/src/main/res/values-it/strings.xml
deleted file mode 100644
index eeee31d7..00000000
--- a/tweet-composer/src/main/res/values-it/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Cosa c\'è di nuovo?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Twitta</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-iw/strings.xml b/tweet-composer/src/main/res/values-iw/strings.xml
deleted file mode 100644
index 86c919d8..00000000
--- a/tweet-composer/src/main/res/values-iw/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">מה קורה?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">צייץ</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ja/strings.xml b/tweet-composer/src/main/res/values-ja/strings.xml
deleted file mode 100644
index 40e7e368..00000000
--- a/tweet-composer/src/main/res/values-ja/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">いまどうしてる?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ツイート</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-kn/strings.xml b/tweet-composer/src/main/res/values-kn/strings.xml
deleted file mode 100644
index a7d711b7..00000000
--- a/tweet-composer/src/main/res/values-kn/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">ಏನು ನಡೆಯುತ್ತಿದೆ?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ಟ್ವೀಟ್ ಮಾಡಿ</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ko/strings.xml b/tweet-composer/src/main/res/values-ko/strings.xml
deleted file mode 100644
index afdc30ed..00000000
--- a/tweet-composer/src/main/res/values-ko/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">지금 무슨 일이   일어나고 있나요?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">트윗</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-mr/strings.xml b/tweet-composer/src/main/res/values-mr/strings.xml
deleted file mode 100644
index cbbce21d..00000000
--- a/tweet-composer/src/main/res/values-mr/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">काय चालू आहे?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ट्विट</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ms/strings.xml b/tweet-composer/src/main/res/values-ms/strings.xml
deleted file mode 100644
index 4b9142f0..00000000
--- a/tweet-composer/src/main/res/values-ms/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Apa Yang Berlaku?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-nb/strings.xml b/tweet-composer/src/main/res/values-nb/strings.xml
deleted file mode 100644
index 2aac9c7c..00000000
--- a/tweet-composer/src/main/res/values-nb/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Hva skjer?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-nl/strings.xml b/tweet-composer/src/main/res/values-nl/strings.xml
deleted file mode 100644
index 62ec66cc..00000000
--- a/tweet-composer/src/main/res/values-nl/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Wat gebeurt er?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-pl/strings.xml b/tweet-composer/src/main/res/values-pl/strings.xml
deleted file mode 100644
index 232bc1ae..00000000
--- a/tweet-composer/src/main/res/values-pl/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Co się dzieje?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-pt/strings.xml b/tweet-composer/src/main/res/values-pt/strings.xml
deleted file mode 100644
index 24485217..00000000
--- a/tweet-composer/src/main/res/values-pt/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">O que está acontecendo?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweetar</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ro/strings.xml b/tweet-composer/src/main/res/values-ro/strings.xml
deleted file mode 100644
index 48934dcc..00000000
--- a/tweet-composer/src/main/res/values-ro/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Ce se întâmplă?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Scrie un Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ru/strings.xml b/tweet-composer/src/main/res/values-ru/strings.xml
deleted file mode 100644
index d083b188..00000000
--- a/tweet-composer/src/main/res/values-ru/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Что нового?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Твитнуть</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-sk/strings.xml b/tweet-composer/src/main/res/values-sk/strings.xml
deleted file mode 100644
index 21e0ec42..00000000
--- a/tweet-composer/src/main/res/values-sk/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Čo sa deje?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweetnuť</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-sr/strings.xml b/tweet-composer/src/main/res/values-sr/strings.xml
deleted file mode 100644
index 6285446e..00000000
--- a/tweet-composer/src/main/res/values-sr/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Шта се дешава?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Твитуј</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-sv/strings.xml b/tweet-composer/src/main/res/values-sv/strings.xml
deleted file mode 100644
index 6ebd9118..00000000
--- a/tweet-composer/src/main/res/values-sv/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Vad händer?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweeta</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ta/strings.xml b/tweet-composer/src/main/res/values-ta/strings.xml
deleted file mode 100644
index 74b127e5..00000000
--- a/tweet-composer/src/main/res/values-ta/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">என்ன நடக்கிறது?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ட்விட் செய்</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-th/strings.xml b/tweet-composer/src/main/res/values-th/strings.xml
deleted file mode 100644
index 00e98349..00000000
--- a/tweet-composer/src/main/res/values-th/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">มีอะไรเกิดขึ้น?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ทวีต</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-tl/strings.xml b/tweet-composer/src/main/res/values-tl/strings.xml
deleted file mode 100644
index 3a6ca744..00000000
--- a/tweet-composer/src/main/res/values-tl/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Anong nangyayari?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Mag-Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-tr/strings.xml b/tweet-composer/src/main/res/values-tr/strings.xml
deleted file mode 100644
index b49db3e9..00000000
--- a/tweet-composer/src/main/res/values-tr/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Neler oluyor?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-uk/strings.xml b/tweet-composer/src/main/res/values-uk/strings.xml
deleted file mode 100644
index 0644c189..00000000
--- a/tweet-composer/src/main/res/values-uk/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Що відбувається?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Твітнути</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-ur/strings.xml b/tweet-composer/src/main/res/values-ur/strings.xml
deleted file mode 100644
index 650157e2..00000000
--- a/tweet-composer/src/main/res/values-ur/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">کیا ہو رہا ہے؟</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">ٹویٹ</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-v21/themes.xml b/tweet-composer/src/main/res/values-v21/themes.xml
deleted file mode 100644
index b731e4ff..00000000
--- a/tweet-composer/src/main/res/values-v21/themes.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <style name="ComposerLight" parent="@android:style/Theme.Material.Light.NoActionBar" >
-        <item name="android:textColor">@color/tw__composer_black</item>
-        <item name="android:textColorSecondary">@color/tw__composer_deep_gray</item>
-        <item name="android:textColorHint">@color/tw__composer_light_gray</item>
-        <item name="tw__twitter_logo">@drawable/tw__composer_logo_blue</item>
-    </style>
-    <style name="ComposerDark" parent="@android:style/Theme.Material.NoActionBar" >
-        <item name="android:textColor">@color/tw__composer_white</item>
-        <item name="android:textColorSecondary">@color/tw__composer_deep_gray</item>
-        <item name="android:textColorHint">@color/tw__composer_light_gray</item>
-        <item name="tw__twitter_logo">@drawable/tw__composer_logo_white</item>
-    </style>
-</resources>
\ No newline at end of file
diff --git a/tweet-composer/src/main/res/values-vi/strings.xml b/tweet-composer/src/main/res/values-vi/strings.xml
deleted file mode 100644
index 6d591368..00000000
--- a/tweet-composer/src/main/res/values-vi/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">Điều gì đang Xảy ra?</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">Tweet</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-zh-rCN/strings.xml b/tweet-composer/src/main/res/values-zh-rCN/strings.xml
deleted file mode 100644
index 999ef4a6..00000000
--- a/tweet-composer/src/main/res/values-zh-rCN/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">正在发生什么事情？</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">推文</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values-zh-rTW/strings.xml b/tweet-composer/src/main/res/values-zh-rTW/strings.xml
deleted file mode 100644
index 5a3f8766..00000000
--- a/tweet-composer/src/main/res/values-zh-rTW/strings.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__composer_hint">有什麼新鮮事？</string>
-    <string name="tw__max_tweet_chars">140</string>
-    <string name="tw__post_tweet">推文</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values/attrs.xml b/tweet-composer/src/main/res/values/attrs.xml
deleted file mode 100644
index 15885ab5..00000000
--- a/tweet-composer/src/main/res/values/attrs.xml
+++ /dev/null
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <attr name="tw__twitter_logo" format="reference"/>
-</resources>
\ No newline at end of file
diff --git a/tweet-composer/src/main/res/values/colors.xml b/tweet-composer/src/main/res/values/colors.xml
deleted file mode 100644
index 255ae497..00000000
--- a/tweet-composer/src/main/res/values/colors.xml
+++ /dev/null
@@ -1,26 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <color name="tw__composer_blue">#ff1da1f2</color>
-    <color name="tw__composer_blue_text">#ff1b95e0</color>
-    <color name="tw__composer_white">#ffffffff</color>
-    <color name="tw__composer_black">#ff292f33</color>
-    <color name="tw__composer_deep_gray">#ff8899A6</color>
-    <color name="tw__composer_light_gray">#ffccd6dd</color>
-    <color name="tw__composer_red">#ffe81c4f</color>
-</resources>
\ No newline at end of file
diff --git a/tweet-composer/src/main/res/values/dimens.xml b/tweet-composer/src/main/res/values/dimens.xml
deleted file mode 100644
index 67fa83a1..00000000
--- a/tweet-composer/src/main/res/values/dimens.xml
+++ /dev/null
@@ -1,36 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <dimen name="tw__composer_close_size">48dp</dimen>
-    <dimen name="tw__composer_logo_height">20dp</dimen>
-    <dimen name="tw__composer_logo_width">24dp</dimen>
-    <dimen name="tw__composer_avatar_size">32dp</dimen>
-    <dimen name="tw__composer_divider_height">1dp</dimen>
-    <dimen name="tw__composer_tweet_btn_height">36dp</dimen>
-    <dimen name="tw__composer_tweet_btn_radius">4dp</dimen>
-    <dimen name="tw__composer_char_count_height">36dp</dimen>
-
-    <!-- Common spacing -->
-    <dimen name="tw__composer_spacing_small">4dp</dimen>
-    <dimen name="tw__composer_spacing_medium">8dp</dimen>
-    <dimen name="tw__composer_spacing_large">16dp</dimen>
-
-    <!--text sixes-->
-    <dimen name="tw__composer_font_size_small">14sp</dimen>
-
-</resources>
\ No newline at end of file
diff --git a/tweet-composer/src/main/res/values/strings.xml b/tweet-composer/src/main/res/values/strings.xml
deleted file mode 100644
index 18fdac1e..00000000
--- a/tweet-composer/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <string name="tw__composer_hint">What\'s Happening?</string>
-    <string name="tw__post_tweet">Tweet</string>
-    <string name="tw__max_tweet_chars">140</string>
-</resources>
diff --git a/tweet-composer/src/main/res/values/themes.xml b/tweet-composer/src/main/res/values/themes.xml
deleted file mode 100644
index f5477ea3..00000000
--- a/tweet-composer/src/main/res/values/themes.xml
+++ /dev/null
@@ -1,35 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources>
-    <style name="ComposerLight" parent="@android:style/Theme.Holo.Light" >
-        <item name="android:windowActionBar">false</item>
-        <item name="android:windowNoTitle">true</item>
-        <item name="android:textColor">@color/tw__composer_black</item>
-        <item name="android:textColorSecondary">@color/tw__composer_deep_gray</item>
-        <item name="android:textColorHint">@color/tw__composer_light_gray</item>
-        <item name="tw__twitter_logo">@drawable/tw__composer_logo_blue</item>
-    </style>
-    <style name="ComposerDark" parent="@android:style/Theme.Holo" >
-        <item name="android:windowActionBar">false</item>
-        <item name="android:windowNoTitle">true</item>
-        <item name="android:textColor">@color/tw__composer_white</item>
-        <item name="android:textColorSecondary">@color/tw__composer_deep_gray</item>
-        <item name="android:textColorHint">@color/tw__composer_light_gray</item>
-        <item name="tw__twitter_logo">@drawable/tw__composer_logo_white</item>
-    </style>
-</resources>
\ No newline at end of file
diff --git a/tweet-composer/src/main/res/values/tw__composer_styles.xml b/tweet-composer/src/main/res/values/tw__composer_styles.xml
deleted file mode 100644
index ae922032..00000000
--- a/tweet-composer/src/main/res/values/tw__composer_styles.xml
+++ /dev/null
@@ -1,102 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  -->
-
-<resources
-    xmlns:tools="http://schemas.android.com/tools"
-    tools:ignore="NewApi">
-
-    <style name="tw__ComposerClose">
-        <item name="android:layout_width">@dimen/tw__composer_close_size</item>
-        <item name="android:layout_height">@dimen/tw__composer_close_size</item>
-        <item name="android:padding">@dimen/tw__composer_spacing_large</item>
-        <item name="android:src">@drawable/tw__composer_close</item>
-        <item name="android:background">@null</item>
-        <item name="android:scaleType">fitCenter</item>
-    </style>
-
-    <style name="tw__ComposerAvatar">
-        <item name="android:layout_width">@dimen/tw__composer_avatar_size</item>
-        <item name="android:layout_height">@dimen/tw__composer_avatar_size</item>
-        <item name="android:layout_marginRight">@dimen/tw__composer_spacing_large</item>
-        <item name="android:layout_marginTop">@dimen/tw__composer_spacing_large</item>
-        <item name="android:layout_marginBottom">@dimen/tw__composer_spacing_large</item>
-        <item name="android:background">@color/tw__composer_light_gray</item>
-    </style>
-
-    <style name="tw__EditTweet">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_marginTop">@dimen/tw__composer_spacing_small</item>
-        <item name="android:layout_marginBottom">@dimen/tw__composer_spacing_small</item>
-        <item name="android:paddingLeft">@dimen/tw__composer_spacing_large</item>
-        <item name="android:paddingRight">@dimen/tw__composer_spacing_large</item>
-        <item name="android:inputType">textMultiLine</item>
-        <item name="android:background">@null</item>
-        <item name="android:gravity">top|left</item>
-        <item name="android:textColor">?android:attr/textColor</item>
-        <item name="android:scrollbars">vertical</item>
-        <item name="android:cursorVisible">true</item>
-        <item name="android:textCursorDrawable">@null</item>
-        <item name="android:hint">@string/tw__composer_hint</item>
-        <item name="android:textColorHint">?android:attr/textColorHint</item>
-        <item name="android:imeOptions">actionSend</item>
-        <item name="android:imeActionLabel">@string/tw__post_tweet</item>
-    </style>
-
-    <style name="tw__ComposerDivider">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">@dimen/tw__composer_divider_height</item>
-        <item name="android:background">@color/tw__composer_light_gray</item>
-    </style>
-
-    <style name="tw__ComposerToolbar">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:paddingTop">@dimen/tw__composer_spacing_medium</item>
-        <item name="android:paddingBottom">@dimen/tw__composer_spacing_medium</item>
-        <item name="android:orientation">horizontal</item>
-        <item name="android:gravity">right</item>
-    </style>
-
-    <style name="tw__ComposerCharCount">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">@dimen/tw__composer_char_count_height</item>
-        <item name="android:layout_marginRight">@dimen/tw__composer_spacing_large</item>
-        <item name="android:gravity">center_vertical</item>
-        <item name="android:textColor">@color/tw__composer_deep_gray</item>
-        <item name="android:text">@string/tw__max_tweet_chars</item>
-        <item name="android:textSize">@dimen/tw__composer_font_size_small</item>
-        <item name="android:textAlignment">center</item>
-    </style>
-
-    <style name="tw__ComposerTweetButton">
-        <item name="android:layout_width">wrap_content</item>
-        <item name="android:layout_height">@dimen/tw__composer_tweet_btn_height</item>
-        <item name="android:layout_marginRight">@dimen/tw__composer_spacing_large</item>
-        <item name="android:textAllCaps">false</item>
-        <item name="android:textColor">@color/tw__composer_white</item>
-        <item name="android:background">@drawable/tw__btn_composer_tweet</item>
-        <item name="android:text">@string/tw__post_tweet</item>
-        <item name="android:textSize">@dimen/tw__composer_font_size_small</item>
-        <item name="android:textAlignment">center</item>
-    </style>
-
-    <style name="tw__ComposerCharCountOverflow" parent="tw__ComposerCharCount">
-        <item name="android:textColor">@color/tw__composer_red</item>
-    </style>
-
-</resources>
\ No newline at end of file
diff --git a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/ComposerActivityTest.java b/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/ComposerActivityTest.java
deleted file mode 100644
index be5b9f9b..00000000
--- a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/ComposerActivityTest.java
+++ /dev/null
@@ -1,178 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.content.Context;
-import android.content.Intent;
-import android.net.Uri;
-
-import com.twitter.sdk.android.core.TwitterAuthToken;
-import com.twitter.sdk.android.core.TwitterSession;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.fail;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-@RunWith(RobolectricTestRunner.class)
-public class ComposerActivityTest {
-    private static final String ANY_HASHTAG = "#hashtag";
-    private static final String ANY_TEXT = "text";
-    private Context mockContext;
-    private TwitterSession mockSession;
-    private TwitterAuthToken mockAuthToken;
-    private Uri mockUri;
-
-    @Before
-    public void setUp() {
-        mockContext = mock(Context.class);
-        mockSession = mock(TwitterSession.class);
-        mockAuthToken = mock(TwitterAuthToken.class);
-        mockUri = Uri.EMPTY;
-        when(mockSession.getAuthToken()).thenReturn(mockAuthToken);
-    }
-
-    @Test
-    public void testBuilder() {
-        final ComposerActivity.Builder builder = new ComposerActivity.Builder(mockContext);
-        assertNotNull(builder);
-    }
-
-    @Test
-    public void testBuilder_nullContext() {
-        try {
-            new ComposerActivity.Builder(null);
-            fail("expected IllegalArgumentException");
-        } catch (IllegalArgumentException e) {
-            assertEquals("Context must not be null", e.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilderSession() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .createIntent();
-        verify(mockSession).getAuthToken();
-        assertEquals(mockAuthToken, intent.getParcelableExtra(ComposerActivity.EXTRA_USER_TOKEN));
-    }
-
-    @Test
-    public void testBuilderSession_nullSession() {
-        try {
-            new ComposerActivity.Builder(mockContext).session(null);
-            fail("expected IllegalArgumentException");
-        } catch (IllegalArgumentException e) {
-            assertEquals("TwitterSession must not be null", e.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilderSession_nullAuthToken() {
-        when(mockSession.getAuthToken()).thenReturn(null);
-        try {
-            new ComposerActivity.Builder(mockContext).session(mockSession);
-            fail("expected IllegalArgumentException");
-        } catch (IllegalArgumentException e) {
-            assertEquals("TwitterSession token must not be null", e.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilderSession_sessionNotSet() {
-        try {
-            new ComposerActivity.Builder(mockContext).createIntent();
-        } catch (IllegalStateException e) {
-            assertEquals("Must set a TwitterSession", e.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilderDarkTheme() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .darkTheme()
-                .createIntent();
-        assertEquals(R.style.ComposerDark, intent.getIntExtra(ComposerActivity.EXTRA_THEME, -1));
-    }
-
-    @Test
-    public void testBuilder_defaultLightTheme() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .createIntent();
-        assertEquals(R.style.ComposerLight, intent.getIntExtra(ComposerActivity.EXTRA_THEME, -1));
-    }
-
-    @Test
-    public void testBuilderText() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .text(ANY_TEXT)
-                .createIntent();
-
-        assertEquals(ANY_TEXT, intent.getStringExtra(ComposerActivity.EXTRA_TEXT));
-    }
-
-    @Test
-    public void testBuilder_emptyArray() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .hashtags(new String[0])
-                .createIntent();
-
-        assertNull(intent.getStringExtra(ComposerActivity.EXTRA_HASHTAGS));
-    }
-
-    @Test
-    public void testBuilder_validHashtags() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .hashtags(ANY_HASHTAG)
-                .createIntent();
-
-        assertEquals(ANY_HASHTAG, intent.getStringExtra(ComposerActivity.EXTRA_HASHTAGS));
-    }
-
-    @Test
-    public void testBuilder_invalidHashtags() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .hashtags("NotHashtag")
-                .createIntent();
-
-        assertNull(intent.getStringExtra(ComposerActivity.EXTRA_HASHTAGS));
-    }
-
-    @Test
-    public void testBuilderImage() {
-        final Intent intent = new ComposerActivity.Builder(mockContext)
-                .session(mockSession)
-                .image(mockUri)
-                .createIntent();
-        assertEquals(mockUri, intent.getParcelableExtra(ComposerActivity.EXTRA_IMAGE_URI));
-    }
-}
diff --git a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/ComposerControllerTest.java b/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/ComposerControllerTest.java
deleted file mode 100644
index 3c573a68..00000000
--- a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/ComposerControllerTest.java
+++ /dev/null
@@ -1,219 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.content.Context;
-import android.content.Intent;
-import android.net.Uri;
-
-import com.twitter.Validator;
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterAuthToken;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.core.services.AccountService;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.ArgumentCaptor;
-import org.robolectric.RobolectricTestRunner;
-
-import retrofit2.Call;
-
-import static com.twitter.sdk.android.tweetcomposer.TweetUploadService.TWEET_COMPOSE_CANCEL;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
-import static org.mockito.Matchers.any;
-import static org.mockito.Matchers.eq;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-@RunWith(RobolectricTestRunner.class)
-public class ComposerControllerTest {
-    private static final String TWEET_TEXT = "some text";
-    private static final int REMAINING_CHAR_COUNT = 131;
-    private static final int OVERFLOW_REMAINING_CHAR_COUNT = -3;
-    private static final String ANY_TEXT = "text";
-    private static final String ANY_HASHTAG = "#hashtag";
-    private ComposerController controller;
-    private ComposerView mockComposerView;
-    private Context mockContext;
-    private TwitterAuthToken mockAuthToken;
-    private TwitterSession mockTwitterSession;
-    private AccountService mockAccountService;
-    private ComposerActivity.Finisher mockFinisher;
-    private ComposerController.DependencyProvider mockDependencyProvider;
-
-    @Before
-    public void setUp() throws Exception {
-        mockComposerView = mock(ComposerView.class);
-        mockContext = mock(Context.class);
-        when(mockComposerView.getContext()).thenReturn(mockContext);
-
-        mockFinisher = mock(ComposerActivity.Finisher.class);
-        mockAuthToken = mock(TwitterAuthToken.class);
-        mockTwitterSession = mock(TwitterSession.class);
-        when(mockTwitterSession.getAuthToken()).thenReturn(mockAuthToken);
-
-        final TwitterApiClient mockTwitterApiClient = mock(TwitterApiClient.class);
-        mockAccountService = mock(AccountService.class);
-        when(mockAccountService
-                .verifyCredentials(any(Boolean.class), any(Boolean.class), any(Boolean.class)))
-                .thenReturn(mock(Call.class));
-        when(mockTwitterApiClient.getAccountService()).thenReturn(mockAccountService);
-
-
-        mockDependencyProvider = mock(ComposerController.DependencyProvider.class);
-        when(mockDependencyProvider.getApiClient(any(TwitterSession.class)))
-                .thenReturn(mockTwitterApiClient);
-        when(mockDependencyProvider.getTweetValidator()).thenReturn(new Validator());
-    }
-
-    @Test
-    public void testComposerController() {
-        controller = new ComposerController(mockComposerView, mockTwitterSession, Uri.EMPTY,
-                ANY_TEXT, ANY_HASHTAG, mockFinisher, mockDependencyProvider);
-        assertEquals(mockTwitterSession, controller.session);
-        // assert that
-        // - sets callbacks on the view
-        // - sets initial Tweet text and cursor position
-        // - gets a TwitterApiClient AccountService to set the profile photo
-        // - sets card view in composer
-        verify(mockComposerView).setCallbacks(any(ComposerController.ComposerCallbacks.class));
-        verify(mockComposerView).setTweetText(ANY_TEXT + " " + ANY_HASHTAG);
-        verify(mockComposerView).setImageView(Uri.EMPTY);
-        verify(mockDependencyProvider).getApiClient(mockTwitterSession);
-        verify(mockAccountService).verifyCredentials(eq(false), eq(true), eq(false));
-    }
-
-    @Test
-    public void testTweetTextLength() {
-        controller = new ComposerController(mockComposerView, mockTwitterSession, Uri.EMPTY,
-                ANY_TEXT, ANY_HASHTAG, mockFinisher, mockDependencyProvider);
-
-        assertEquals(0, controller.tweetTextLength(null));
-        assertEquals(0, controller.tweetTextLength(""));
-        assertEquals(1, controller.tweetTextLength("☃"));
-        assertEquals(5, controller.tweetTextLength("tweet"));
-        assertEquals(39, controller.tweetTextLength("tweet with link https://example.com"));
-        assertEquals(23, controller.tweetTextLength("https://example.com/foo/bar/foo"));
-    }
-
-    @Test
-    public void testRemainingCharCount() {
-        assertEquals(140, ComposerController.remainingCharCount(0));
-        assertEquals(139, ComposerController.remainingCharCount(1));
-        assertEquals(0, ComposerController.remainingCharCount(140));
-        assertEquals(-1, ComposerController.remainingCharCount(141));
-    }
-
-    @Test
-    public void testIsPostEnabled() {
-        assertFalse(ComposerController.isPostEnabled(0));
-        assertTrue(ComposerController.isPostEnabled(1));
-        assertTrue(ComposerController.isPostEnabled(140));
-        assertFalse(ComposerController.isPostEnabled(141));
-    }
-
-    @Test
-    public void testIsTweetTextOverflow() {
-        assertFalse(ComposerController.isTweetTextOverflow(0));
-        assertFalse(ComposerController.isTweetTextOverflow(1));
-        assertFalse(ComposerController.isTweetTextOverflow(140));
-        assertTrue(ComposerController.isTweetTextOverflow(141));
-    }
-
-    @Test
-    public void testComposerCallbacksImpl_onTextChangedOk() {
-        mockTwitterSession = mock(TwitterSession.class);
-        controller = new ComposerController(mockComposerView, mockTwitterSession, Uri.EMPTY,
-                ANY_TEXT, ANY_HASHTAG, mockFinisher, mockDependencyProvider);
-        final ComposerController.ComposerCallbacks callbacks
-                = controller.new ComposerCallbacksImpl();
-        callbacks.onTextChanged(TWEET_TEXT);
-
-        verify(mockComposerView).setCharCount(REMAINING_CHAR_COUNT);
-        verify(mockComposerView).setCharCountTextStyle(R.style.tw__ComposerCharCount);
-        verify(mockComposerView).postTweetEnabled(true);
-    }
-
-    @Test
-    public void testComposerCallbacksImpl_onTextChangedOverflow() {
-        final String OVERFLOW_TEXT = "This tweet is longer than 140 characters. This tweet is " +
-                "longer than 140 characters. This tweet is longer than 140 characters. Overflow." +
-                "Overflow";
-        controller = new ComposerController(mockComposerView, mockTwitterSession, Uri.EMPTY,
-                ANY_TEXT, ANY_HASHTAG, mockFinisher, mockDependencyProvider);
-        final ComposerController.ComposerCallbacks callbacks
-                = controller.new ComposerCallbacksImpl();
-        callbacks.onTextChanged(OVERFLOW_TEXT);
-
-        verify(mockComposerView).setCharCount(OVERFLOW_REMAINING_CHAR_COUNT);
-        verify(mockComposerView).setCharCountTextStyle(R.style.tw__ComposerCharCountOverflow);
-        verify(mockComposerView).postTweetEnabled(false);
-    }
-
-    @Test
-    public void testComposerCallbacksImpl_onTweetPost() {
-        final Context mockContext = mock(Context.class);
-        when(mockComposerView.getContext()).thenReturn(mockContext);
-
-        controller = new ComposerController(mockComposerView, mockTwitterSession, Uri.EMPTY,
-                ANY_TEXT, ANY_HASHTAG, mockFinisher, mockDependencyProvider);
-        final ComposerController.ComposerCallbacks callbacks
-                = controller.new ComposerCallbacksImpl();
-        callbacks.onTweetPost(TWEET_TEXT);
-        // assert that
-        // - context is used to start the TweetUploadService
-        // - intent extras contain the session token and tweet text and card
-        final ArgumentCaptor<Intent> intentCaptor = ArgumentCaptor.forClass(Intent.class);
-        verify(mockContext).startService(intentCaptor.capture());
-        final Intent intent = intentCaptor.getValue();
-        assertEquals(TweetUploadService.class.getCanonicalName(),
-                intent.getComponent().getClassName());
-        assertEquals(mockAuthToken, intent.getParcelableExtra(TweetUploadService.EXTRA_USER_TOKEN));
-        assertEquals(Uri.EMPTY, intent.getParcelableExtra(TweetUploadService.EXTRA_IMAGE_URI));
-    }
-
-    @Test
-    public void testComposerCallbacksImpl_onClose() {
-        controller = new ComposerController(mockComposerView, mockTwitterSession, Uri.EMPTY,
-                ANY_TEXT, ANY_HASHTAG, mockFinisher, mockDependencyProvider);
-        final ComposerController.ComposerCallbacks callbacks
-                = controller.new ComposerCallbacksImpl();
-        callbacks.onCloseClick();
-        // assert that
-        // - finishes the activity
-        verify(mockFinisher).finish();
-    }
-
-    @Test
-    public void testSendCancelBroadcast() {
-        controller = new ComposerController(mockComposerView, mockTwitterSession, Uri.EMPTY,
-                ANY_TEXT, ANY_HASHTAG, mockFinisher, mockDependencyProvider);
-        final ArgumentCaptor<Intent> intentCaptor = ArgumentCaptor.forClass(Intent.class);
-        controller.sendCancelBroadcast();
-        verify(mockContext).sendBroadcast(intentCaptor.capture());
-
-        final Intent capturedIntent = intentCaptor.getValue();
-        assertEquals(TWEET_COMPOSE_CANCEL, capturedIntent.getAction());
-    }
-}
diff --git a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/FileUtilsTest.java b/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/FileUtilsTest.java
deleted file mode 100644
index 253baf0b..00000000
--- a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/FileUtilsTest.java
+++ /dev/null
@@ -1,95 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.net.Uri;
-import android.webkit.MimeTypeMap;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.internal.ShadowExtractor;
-import org.robolectric.shadows.ShadowMimeTypeMap;
-
-import java.io.File;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertTrue;
-
-@RunWith(RobolectricTestRunner.class)
-public class FileUtilsTest {
-    ShadowMimeTypeMap mimeTypeMap;
-
-    @Before
-    public void setUp() {
-        final ShadowMimeTypeMap mimeTypeMap = (ShadowMimeTypeMap) ShadowExtractor
-                .extract(MimeTypeMap.getSingleton());
-        mimeTypeMap.addExtensionMimeTypMapping("jpg", "image/jpeg");
-        mimeTypeMap.addExtensionMimeTypMapping("jpeg", "image/jpeg");
-        mimeTypeMap.addExtensionMimeTypMapping("png", "image/png");
-        this.mimeTypeMap = mimeTypeMap;
-    }
-
-    @Test
-    public void testIsMediaDocumentAuthority() {
-        final Uri uri = new Uri.Builder()
-                .scheme("content")
-                .authority("com.android.providers.media.documents")
-                .path("image%3A59161")
-                .build();
-        assertTrue(FileUtils.isMediaDocumentAuthority(uri));
-    }
-
-    @Test
-    public void testIsContentScheme() {
-        final Uri uri = new Uri.Builder().scheme("content").build();
-        assertTrue(FileUtils.isContentScheme(uri));
-    }
-
-    @Test
-    public void testIsFileScheme() {
-        final Uri uri = new Uri.Builder().scheme("file").build();
-        assertTrue(FileUtils.isFileScheme(uri));
-    }
-
-    @Test
-    public void testGetMimeType() {
-        assertEquals("image/png", FileUtils.getMimeType(new File("file.png")));
-        assertEquals("image/jpeg", FileUtils.getMimeType(new File("file.jpeg")));
-        assertEquals("image/jpeg", FileUtils.getMimeType(new File("file.jpeg")));
-        assertEquals("application/octet-stream", FileUtils.getMimeType(new File("")));
-    }
-
-    @Test
-    public void testExtensionToMimeType() {
-        assertEquals("image/png", mimeTypeMap.getMimeTypeFromExtension("png"));
-        assertEquals("image/jpeg", mimeTypeMap.getMimeTypeFromExtension("jpg"));
-        assertEquals("image/jpeg", mimeTypeMap.getMimeTypeFromExtension("jpeg"));
-        assertEquals(null, mimeTypeMap.getMimeTypeFromExtension(""));
-    }
-
-    @Test
-    public void testGetExtension() {
-        assertEquals("", FileUtils.getExtension(""));
-        assertEquals("", FileUtils.getExtension("file"));
-        assertEquals("", FileUtils.getExtension("file."));
-        assertEquals("png", FileUtils.getExtension("file.png"));
-        assertEquals("jpg", FileUtils.getExtension("file.jpg"));
-    }
-}
diff --git a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetComposerIntentBuilderTest.java b/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetComposerIntentBuilderTest.java
deleted file mode 100644
index bcd93469..00000000
--- a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetComposerIntentBuilderTest.java
+++ /dev/null
@@ -1,235 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.content.Context;
-import android.content.Intent;
-import android.content.pm.ActivityInfo;
-import android.content.pm.PackageManager;
-import android.content.pm.ResolveInfo;
-import android.net.Uri;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import java.net.MalformedURLException;
-import java.net.URL;
-import java.util.ArrayList;
-import java.util.List;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.fail;
-import static org.mockito.Matchers.any;
-import static org.mockito.Matchers.anyInt;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-@RunWith(RobolectricTestRunner.class)
-public class TweetComposerIntentBuilderTest {
-
-    @Test
-    public void testBuilder_constructor() {
-        final TweetComposer.Builder builder = new TweetComposer.Builder(mock(Context.class));
-        assertNotNull(builder);
-    }
-
-    @Test
-    public void testBuilder_constructorNullContext() {
-        try {
-            new TweetComposer.Builder(null);
-            fail();
-        } catch (IllegalArgumentException e) {
-            assertEquals("Context must not be null.", e.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_text() {
-        final Context context = createIntentContext(true);
-        final String text = "test";
-        final TweetComposer.Builder builder = new TweetComposer.Builder(context).text(text);
-        final Intent intent = builder.createTwitterIntent();
-        assertEquals(text, intent.getStringExtra(Intent.EXTRA_TEXT));
-    }
-
-    @Test
-    public void testBuilder_textNull() {
-        try {
-            new TweetComposer.Builder(mock(Context.class)).text(null);
-            fail();
-        } catch (IllegalArgumentException ignored) {
-            assertEquals("text must not be null.", ignored.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_textAlreadySet() {
-        final String text = "test";
-        try {
-            new TweetComposer.Builder(mock(Context.class)).text(text).text(text);
-            fail();
-        } catch (IllegalStateException ignored) {
-            assertEquals("text already set.", ignored.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_textAndUrl() throws MalformedURLException {
-        final Context context = createIntentContext(true);
-        final String text = "test";
-        final URL url = new URL("http://www.twitter.com");
-
-        final String result = text + " " + url.toString();
-        final TweetComposer.Builder builder = new TweetComposer.Builder(context)
-                .text(text)
-                .url(url);
-        final Intent intent = builder.createTwitterIntent();
-        assertEquals(result, intent.getStringExtra(Intent.EXTRA_TEXT));
-    }
-
-    @Test
-    public void testBuilder_url() throws MalformedURLException {
-        final Context context = createIntentContext(true);
-        final URL url = new URL("http://www.twitter.com");
-        final TweetComposer.Builder builder = new TweetComposer.Builder(context).url(url);
-        final Intent intent = builder.createTwitterIntent();
-        assertEquals(url.toString(), intent.getStringExtra(Intent.EXTRA_TEXT));
-    }
-
-    @Test
-    public void testBuilder_urlNull() {
-        try {
-            new TweetComposer.Builder(mock(Context.class)).url(null);
-            fail();
-        } catch (IllegalArgumentException ignored) {
-            assertEquals("url must not be null.", ignored.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_urlAlreadySet() throws MalformedURLException {
-        final URL url = new URL("http://www.twitter.com");
-        try {
-            new TweetComposer.Builder(mock(Context.class)).url(url).url(url);
-            fail();
-        } catch (IllegalStateException ignored) {
-            assertEquals("url already set.", ignored.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_image() {
-        final Context context = createIntentContext(true);
-        final Uri uri = Uri.parse("http://www.twitter.com");
-        final TweetComposer.Builder builder = new TweetComposer.Builder(context).image(uri);
-        final Intent intent = builder.createTwitterIntent();
-        assertEquals(uri, intent.getParcelableExtra(Intent.EXTRA_STREAM));
-    }
-
-    @Test
-    public void testBuilder_imageNull() {
-        try {
-            new TweetComposer.Builder(mock(Context.class)).image(null);
-            fail();
-        } catch (IllegalArgumentException ignored) {
-            assertEquals("imageUri must not be null.", ignored.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_imageAlreadySet() {
-        final Uri uri = Uri.parse("http://www.twitter.com");
-        try {
-            new TweetComposer.Builder(mock(Context.class)).image(uri).image(uri);
-            fail();
-        } catch (IllegalStateException ignored) {
-            assertEquals("imageUri already set.", ignored.getMessage());
-        }
-    }
-
-    @Test
-    public void testBuilder_createIntentTwitterInstalled() {
-        final Context context = createIntentContext(true);
-        final TweetComposer.Builder builder = new TweetComposer.Builder(context);
-        final Intent intentTwitter = builder.createTwitterIntent();
-        final Intent intent = builder.createIntent();
-
-        assertNotNull(intent);
-        assertNotNull(intentTwitter);
-        assertIntentEquals(intentTwitter, intent);
-    }
-
-    @Test
-    public void testBuilder_createIntentTwitterNotInstalled() {
-        final Context context = createIntentContext(false);
-        final TweetComposer.Builder builder = new TweetComposer.Builder(context);
-        final Intent intent = builder.createIntent();
-        final Intent intentTwitter = builder.createTwitterIntent();
-        final Intent intentWeb = builder.createWebIntent();
-
-        assertNotNull(intent);
-        assertNull(intentTwitter);
-        assertIntentEquals(intentWeb, intent);
-    }
-
-    @Test
-    public void testBuilder_show() {
-        final Context context = createIntentContext(true);
-        final TweetComposer.Builder builder = new TweetComposer.Builder(context);
-        builder.show();
-
-        verify(context).startActivity(any(Intent.class));
-    }
-
-    private Context createIntentContext(boolean twitterInstalled) {
-
-        final List<ResolveInfo> resolveInfoList = new ArrayList<>();
-        final ResolveInfo info = new ResolveInfo();
-
-        info.activityInfo = new ActivityInfo();
-        if (twitterInstalled) {
-            info.activityInfo.packageName = "com.twitter.android";
-            info.activityInfo.name = "Twitter";
-        } else {
-            info.activityInfo.packageName = "not.twitter.android";
-            info.activityInfo.name = "NotTwitter";
-        }
-        resolveInfoList.add(info);
-
-        final Context context = mock(Context.class);
-        final PackageManager manager = mock(PackageManager.class);
-
-        when(context.getPackageManager()).thenReturn(manager);
-        when(manager.queryIntentActivities(any(Intent.class), anyInt()))
-                .thenReturn(resolveInfoList);
-        return context;
-    }
-
-    private void assertIntentEquals(Intent intent, Intent otherIntent) {
-        assertEquals(intent.getType(), otherIntent.getType());
-        assertEquals(intent.getAction(), otherIntent.getAction());
-        assertEquals(intent.getStringExtra(Intent.EXTRA_TEXT),
-                otherIntent.getStringExtra(Intent.EXTRA_TEXT));
-        assertEquals(intent.getStringExtra(intent.getStringExtra(Intent.EXTRA_STREAM)),
-                otherIntent.getStringExtra(Intent.EXTRA_STREAM));
-    }
-}
diff --git a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetUploadServiceTest.java b/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetUploadServiceTest.java
deleted file mode 100644
index 59418ae9..00000000
--- a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetUploadServiceTest.java
+++ /dev/null
@@ -1,174 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer;
-
-import android.content.Context;
-import android.content.Intent;
-import android.net.Uri;
-
-import com.twitter.sdk.android.core.TwitterApiClient;
-import com.twitter.sdk.android.core.TwitterAuthToken;
-import com.twitter.sdk.android.core.TwitterException;
-import com.twitter.sdk.android.core.TwitterSession;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetBuilder;
-import com.twitter.sdk.android.core.services.MediaService;
-import com.twitter.sdk.android.core.services.StatusesService;
-
-import org.junit.Before;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.mockito.ArgumentCaptor;
-import org.robolectric.Robolectric;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-import java.io.IOException;
-
-import okhttp3.RequestBody;
-import retrofit2.Call;
-import retrofit2.mock.Calls;
-
-import static org.junit.Assert.assertEquals;
-import static org.mockito.Matchers.any;
-import static org.mockito.Matchers.anyLong;
-import static org.mockito.Matchers.anyString;
-import static org.mockito.Matchers.eq;
-import static org.mockito.Matchers.isNull;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.spy;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.verifyZeroInteractions;
-import static org.mockito.Mockito.when;
-
-@RunWith(RobolectricTestRunner.class)
-public class TweetUploadServiceTest {
-    private static final String EXPECTED_TWEET_TEXT = "tweet text";
-
-    private Context context;
-    private TwitterApiClient mockTwitterApiClient;
-    private StatusesService mockStatusesService;
-    private MediaService mockMediaService;
-    private TweetUploadService.DependencyProvider mockDependencyProvider;
-    private TweetUploadService service;
-    private Tweet tweet;
-
-    @Before
-    public void setUp() throws Exception {
-        context = RuntimeEnvironment.application;
-        mockMediaService = mock(MediaService.class);
-        mockStatusesService = mock(StatusesService.class);
-        tweet =  new TweetBuilder().setId(123L).setText(EXPECTED_TWEET_TEXT).build();
-        when(mockMediaService
-                .upload(any(RequestBody.class), any(RequestBody.class), any(RequestBody.class)))
-                .thenReturn(mock(Call.class));
-        when(mockStatusesService.update(anyString(), isNull(Long.class), isNull(Boolean.class),
-                isNull(Double.class), isNull(Double.class), isNull(String.class),
-                isNull(Boolean.class), eq(true), isNull(String.class)))
-                .thenReturn(Calls.response(tweet));
-
-        mockTwitterApiClient = mock(TwitterApiClient.class);
-        when(mockTwitterApiClient.getStatusesService()).thenReturn(mockStatusesService);
-        when(mockTwitterApiClient.getMediaService()).thenReturn(mockMediaService);
-
-        mockDependencyProvider = mock(TweetUploadService.DependencyProvider.class);
-        when(mockDependencyProvider.getTwitterApiClient(any(TwitterSession.class)))
-                .thenReturn(mockTwitterApiClient);
-
-        service = spy(Robolectric.buildService(TweetUploadService.class).create().get());
-        service.dependencyProvider = mockDependencyProvider;
-    }
-
-    @Test
-    public void testOnHandleIntent() {
-        final TwitterAuthToken mockToken = mock(TwitterAuthToken.class);
-
-        final Intent intent = new Intent(context, TweetUploadService.class);
-        intent.putExtra(TweetUploadService.EXTRA_USER_TOKEN, mockToken);
-        intent.putExtra(TweetUploadService.EXTRA_TWEET_TEXT, EXPECTED_TWEET_TEXT);
-        intent.putExtra(TweetUploadService.EXTRA_IMAGE_URI, Uri.EMPTY);
-        service.onHandleIntent(intent);
-
-        verify(service).uploadTweet(any(TwitterSession.class), eq(EXPECTED_TWEET_TEXT),
-                eq(Uri.EMPTY));
-    }
-
-    @Test
-    public void testUploadTweet_withNoMediaSuccess() {
-        service.uploadTweet(mock(TwitterSession.class), EXPECTED_TWEET_TEXT, null);
-
-        verify(mockStatusesService).update(eq(EXPECTED_TWEET_TEXT), isNull(Long.class),
-                isNull(Boolean.class), isNull(Double.class), isNull(Double.class),
-                isNull(String.class), isNull(Boolean.class), eq(true), isNull(String.class));
-        verifyZeroInteractions(mockMediaService);
-        verify(service).sendSuccessBroadcast(eq(123L));
-        verify(service).stopSelf();
-    }
-
-    @Test
-    public void testUploadTweet_withNoMediaFailure() {
-        when(mockStatusesService.update(anyString(), isNull(Long.class), isNull(Boolean.class),
-                isNull(Double.class), isNull(Double.class), isNull(String.class),
-                isNull(Boolean.class), eq(true), isNull(String.class)))
-                .thenReturn(Calls.failure(new IOException("")));
-
-        service.uploadTweet(mock(TwitterSession.class), EXPECTED_TWEET_TEXT, null);
-
-        verify(mockStatusesService).update(eq(EXPECTED_TWEET_TEXT), isNull(Long.class),
-                isNull(Boolean.class), isNull(Double.class), isNull(Double.class),
-                isNull(String.class), isNull(Boolean.class), eq(true), isNull(String.class));
-        verifyZeroInteractions(mockMediaService);
-        verify(service).fail(any(TwitterException.class));
-        verify(service).stopSelf();
-    }
-
-    @Test
-    public void testUploadTweet_withInvalidUri() {
-        service.uploadTweet(mock(TwitterSession.class), EXPECTED_TWEET_TEXT, Uri.EMPTY);
-
-        verifyZeroInteractions(mockStatusesService);
-        verifyZeroInteractions(mockMediaService);
-        verify(service).fail(any(TwitterException.class));
-        verify(service).stopSelf();
-    }
-
-    @Test
-    public void testSendSuccessBroadcast() {
-        final ArgumentCaptor<Intent> intentCaptor = ArgumentCaptor.forClass(Intent.class);
-        service.sendSuccessBroadcast(anyLong());
-        verify(service).sendBroadcast(intentCaptor.capture());
-
-        final Intent capturedIntent = intentCaptor.getValue();
-        assertEquals(TweetUploadService.UPLOAD_SUCCESS, capturedIntent.getAction());
-        assertEquals(RuntimeEnvironment.application.getPackageName(), capturedIntent.getPackage());
-    }
-
-    @Test
-    public void testSendFailureBroadcast() {
-        final Intent mockIntent = mock(Intent.class);
-        final ArgumentCaptor<Intent> intentCaptor = ArgumentCaptor.forClass(Intent.class);
-        service.sendFailureBroadcast(mockIntent);
-        verify(service).sendBroadcast(intentCaptor.capture());
-
-        final Intent capturedIntent = intentCaptor.getValue();
-        assertEquals(TweetUploadService.UPLOAD_FAILURE, capturedIntent.getAction());
-        assertEquals(mockIntent,
-                capturedIntent.getParcelableExtra(TweetUploadService.EXTRA_RETRY_INTENT));
-        assertEquals(RuntimeEnvironment.application.getPackageName(), capturedIntent.getPackage());
-    }
-}
diff --git a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/internal/util/ObservableScrollViewTest.java b/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/internal/util/ObservableScrollViewTest.java
deleted file mode 100644
index dc0ebbe9..00000000
--- a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/internal/util/ObservableScrollViewTest.java
+++ /dev/null
@@ -1,44 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetcomposer.internal.util;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-
-@RunWith(RobolectricTestRunner.class)
-public class ObservableScrollViewTest {
-    static final int TEST_SCROLL_X = 10;
-
-    @Test
-    public void testOnScrollChanged() {
-        final ObservableScrollView scrollView =
-                new ObservableScrollView(RuntimeEnvironment.application);
-        final ObservableScrollView.ScrollViewListener listener =
-                mock(ObservableScrollView.ScrollViewListener.class);
-        scrollView.setScrollViewListener(listener);
-
-        scrollView.onScrollChanged(0, TEST_SCROLL_X, 0, 0);
-
-        verify(listener).onScrollChanged(TEST_SCROLL_X);
-    }
-}
diff --git a/tweet-composer/src/test/resources/robolectric.properties b/tweet-composer/src/test/resources/robolectric.properties
deleted file mode 100644
index ac810918..00000000
--- a/tweet-composer/src/test/resources/robolectric.properties
+++ /dev/null
@@ -1,2 +0,0 @@
-sdk = 21
-constants = com.twitter.sdk.android.tweetcomposer.BuildConfig
\ No newline at end of file
diff --git a/tweet-ui/build.gradle b/tweet-ui/build.gradle
index 03d3c73e..624a2320 100644
--- a/tweet-ui/build.gradle
+++ b/tweet-ui/build.gradle
@@ -19,7 +19,6 @@ apply plugin: 'com.android.library'
 
 android {
     compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
 
     defaultConfig {
         versionCode 1
@@ -32,15 +31,12 @@ android {
         debug {
             buildConfigField "String", "GROUP", "\"${pom_group_id}\""
             buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
             buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
 
-            testCoverageEnabled enableTestCodeCoverage
         }
         release {
             buildConfigField "String", "GROUP", "\"${pom_group_id}\""
             buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
             buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
         }
     }
@@ -50,8 +46,8 @@ android {
     }
 
     compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
+        sourceCompatibility 1.8
+        targetCompatibility 1.8
     }
 
     // Forcibly add debug and the generated "R" files onto the test classpath
@@ -69,19 +65,15 @@ android {
 dependencies {
     api project(':twitter-core')
 
-    implementation dependency.picasso
-    implementation dependency.supportCoreV4
-    implementation dependency.supportCompatV4
-    implementation dependency.recyclerview
+    implementation 'com.squareup.picasso:picasso:2.71828'
 
-    androidTestCompile dependency.retrofitMock
-    androidTestCompile dependency.mockito
-    androidTestCompile dependency.dexmakerMockito
+    implementation "com.google.android.material:material:1.0.0"
+    implementation "androidx.appcompat:appcompat:1.0.2"
+
+    testImplementation "org.hamcrest:hamcrest-all:1.3"
+
+    testImplementation "junit:junit:4.12"
+    androidTestImplementation "androidx.test:runner:1.1.1"
+    androidTestImplementation "androidx.test.espresso:espresso-core:3.1.1"
 
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
 }
diff --git a/tweet-ui/gradle.properties b/tweet-ui/gradle.properties
index bf9b9d16..d28b1188 100644
--- a/tweet-ui/gradle.properties
+++ b/tweet-ui/gradle.properties
@@ -14,12 +14,10 @@
 # limitations under the License.
 #
 #
-
 # The to be released version. When releasing, drop -SNAPSHOT. After releasing, bump version
 # number and add back -SNAPSHOT
 version=3.3.0-SNAPSHOT
 version_code=1
-
 pom_name=Tweet Ui Android SDK
 pom_group_id=com.twitter.sdk.android
 pom_artifact_id=tweet-ui
diff --git a/tweet-ui/internal-build.gradle b/tweet-ui/internal-build.gradle
index f5e18ae5..64e55471 100644
--- a/tweet-ui/internal-build.gradle
+++ b/tweet-ui/internal-build.gradle
@@ -1,6 +1,3 @@
-import io.fabric.gradle.weaving.ArtifactSizePlugin
-import io.fabric.gradle.weaving.DexMethodCountPlugin
-
 /*
  * Copyright (C) 2015 Twitter, Inc.
  *
@@ -20,8 +17,6 @@ import io.fabric.gradle.weaving.DexMethodCountPlugin
 
 apply plugin: 'com.android.library'
 apply from: rootProject.qualityScript
-apply plugin: ArtifactSizePlugin
-apply plugin: DexMethodCountPlugin
 
 android {
     compileSdkVersion rootProject.compileSdkVersion
@@ -92,21 +87,16 @@ dependencies {
         api project(path: path)
     }
 
-    implementation dependency.picasso
-    implementation dependency.supportCoreV4
-    implementation dependency.supportCompatV4
-    implementation dependency.recyclerview
+    implementation 'com.squareup.picasso:picasso:2.71828'
 
-    androidTestCompile dependency.retrofitMock
-    androidTestCompile dependency.mockito
-    androidTestCompile dependency.dexmakerMockito
+    implementation deps.support.design
+    implementation deps.support.compat
 
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
+    testImplementation deps.test.hamcrest
+
+    testImplementation deps.junit
+    androidTestImplementation deps.atsl.runner
+    androidTestImplementation deps.espresso.core
 }
 
 apply from: rootProject.deployScript
\ No newline at end of file
diff --git a/tweet-ui/lint.xml b/tweet-ui/lint.xml
index a018123b..4aaf0888 100644
--- a/tweet-ui/lint.xml
+++ b/tweet-ui/lint.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
+<?xml version="1.0" encoding="UTF-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
@@ -21,7 +20,7 @@
         <!-- Suppress lint warning on xxxhdpi, which "is necessary only to provide a launcher icon
         that can appear larger than usual on an xxhdpi device. You do not need to provide xxxhdpi
         assets for all your app's images." -->
-        <ignore path="src/debug/res/drawable-xxxhdpi"/>
+        <ignore path="src/debug/res/drawable-xxxhdpi" />
     </issue>
     <issue id="MissingTranslation" severity="ignore" />
     <!-- ignore translation errors for now -->
@@ -29,13 +28,14 @@
     <issue id="ImpliedQuantity" severity="ignore" />
     <issue id="UnusedQuantity" severity="ignore" />
     <issue id="IconDensities" severity="ignore">
-        <ignore path="src/main/res/drawable-mdpi/tw__heart_animation_detail_60fps*"/>
-        <ignore path="src/main/res/drawable-hdpi/tw__heart_animation_detail_60fps*"/>
-        <ignore path="src/main/res/drawable-xxhdpi/tw__heart_animation_detail_60fps*"/>
+        <ignore path="src/main/res/drawable-mdpi/tw__heart_animation_detail_60fps*" />
+        <ignore path="src/main/res/drawable-hdpi/tw__heart_animation_detail_60fps*" />
+        <ignore path="src/main/res/drawable-xxhdpi/tw__heart_animation_detail_60fps*" />
     </issue>
     <issue id="HandlerLeak" severity="ignore">
-        <ignore path="src/main/java/com/twitter/sdk/android/tweetui/internal/VideoControlView.java"/>
+        <ignore
+            path="src/main/java/com/twitter/sdk/android/tweetui/internal/VideoControlView.java" />
     </issue>
-    <issue id="InvalidPackage" severity="ignore"/>
-    <issue id="ClickableViewAccessibility" severity="ignore"/>
+    <issue id="InvalidPackage" severity="ignore" />
+    <issue id="ClickableViewAccessibility" severity="ignore" />
 </lint>
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/AbstractTweetViewTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/AbstractTweetViewTest.java
index 1f74c8ef..140bbeb3 100644
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/AbstractTweetViewTest.java
+++ b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/AbstractTweetViewTest.java
@@ -68,7 +68,7 @@ public Resources getResources() {
     abstract AbstractTweetView createViewWithMocks(Context context, Tweet tweet);
 
     abstract AbstractTweetView createViewWithMocks(Context context, Tweet tweet,
-            AbstractTweetView.DependencyProvider dependencyProvider);
+                                                   AbstractTweetView.DependencyProvider dependencyProvider);
 
     private void setUpMockDependencyProvider() {
         mockDependencyProvider = mock(TestDependencyProvider.class);
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/BaseTweetViewTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/BaseTweetViewTest.java
index e24675a3..f3b17b6b 100644
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/BaseTweetViewTest.java
+++ b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/BaseTweetViewTest.java
@@ -88,7 +88,7 @@ public Resources getResources() {
     abstract BaseTweetView createViewWithMocks(Context context, Tweet tweet);
 
     abstract BaseTweetView createViewWithMocks(Context context, Tweet tweet, int styleResId,
-            BaseTweetView.DependencyProvider dependencyProvider);
+                                               BaseTweetView.DependencyProvider dependencyProvider);
 
     private void setUpMockDependencyProvider() {
         mockDependencyProvider = mock(TestDependencyProvider.class);
@@ -351,7 +351,7 @@ public void testTweetPhotoErrorDark() {
 
     public void testRetweetIconDark() {
         final BaseTweetView view = createView(context, TestFixtures.TEST_RETWEET,
-               R.style.tw__TweetDarkStyle);
+                R.style.tw__TweetDarkStyle);
         assertEquals(R.drawable.tw__ic_retweet_dark, view.retweetIconResId);
     }
 
@@ -473,7 +473,8 @@ public void testRender_forMultiplePhotoEntities() {
 
         assertEquals(View.VISIBLE, tweetView.mediaContainer.getVisibility());
         assertEquals(View.VISIBLE, tweetView.tweetMediaView.getVisibility());
-        assertEquals(View.GONE, tweetView.mediaBadgeView.getVisibility());    }
+        assertEquals(View.GONE, tweetView.mediaBadgeView.getVisibility());
+    }
 
     public void testRender_rendersRetweetedStatus() {
         final BaseTweetView tweetView = createViewWithMocks(context, null);
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/CompactTweetViewTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/CompactTweetViewTest.java
index 3fc30ff2..b4c470a3 100644
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/CompactTweetViewTest.java
+++ b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/CompactTweetViewTest.java
@@ -58,7 +58,7 @@ CompactTweetView createViewWithMocks(Context context, Tweet tweet) {
 
     @Override
     CompactTweetView createViewWithMocks(Context context, Tweet tweet, int styleResId,
-            BaseTweetView.DependencyProvider dependencyProvider) {
+                                         BaseTweetView.DependencyProvider dependencyProvider) {
         return new CompactTweetView(context, tweet, styleResId, dependencyProvider);
     }
 
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/DateTranslationsTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/DateTranslationsTest.java
index 020c40e6..5149951e 100644
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/DateTranslationsTest.java
+++ b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/DateTranslationsTest.java
@@ -56,7 +56,7 @@ public void testDateLocales() {
                 new Locale("pt"), new Locale("ru"), new Locale("sv"), new Locale("th"),
                 new Locale("tl"), new Locale("tr"), new Locale("ur"), new Locale("zh", "CN"),
                 new Locale("zh", "TW"));
-        for (Locale locale: locales) {
+        for (Locale locale : locales) {
             TestUtils.setLocale(getContext(), locale);
             final String shortStr = getContext().getResources()
                     .getString(R.string.tw__relative_date_format_short);
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/MockUtils.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/MockUtils.java
index 97ee4610..b0c6e160 100644
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/MockUtils.java
+++ b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/MockUtils.java
@@ -45,7 +45,8 @@
 
 final class MockUtils {
 
-    private MockUtils() {}
+    private MockUtils() {
+    }
 
     static Picasso mockPicasso(Picasso picasso, RequestCreator requestCreator) {
         when(picasso.load(anyString())).thenReturn(requestCreator);
@@ -67,7 +68,7 @@ static void mockApiClient(TwitterApiClient apiClient) {
     }
 
     static void mockClients(ConcurrentHashMap<Session, TwitterApiClient> clients,
-                                   TwitterApiClient apiClient) {
+                            TwitterApiClient apiClient) {
         when(clients.get(anyObject())).thenReturn(apiClient);
         when(clients.contains(anyObject())).thenReturn(true);
     }
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/QuoteTweetViewTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/QuoteTweetViewTest.java
index afb5a37c..ff19a5a4 100644
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/QuoteTweetViewTest.java
+++ b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/QuoteTweetViewTest.java
@@ -52,7 +52,7 @@ QuoteTweetView createViewWithMocks(Context context, Tweet tweet) {
 
     @Override
     QuoteTweetView createViewWithMocks(Context context, Tweet tweet,
-                                         BaseTweetView.DependencyProvider dependencyProvider) {
+                                       BaseTweetView.DependencyProvider dependencyProvider) {
         final QuoteTweetView quoteTweetView = new QuoteTweetView(context, dependencyProvider);
         quoteTweetView.setTweet(tweet);
         return quoteTweetView;
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetTimelineListAdapterTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetTimelineListAdapterTest.java
index 0c7f51d2..44d71b7f 100644
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetTimelineListAdapterTest.java
+++ b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetTimelineListAdapterTest.java
@@ -180,6 +180,7 @@ public void testSetViewStyle() {
 
         /**
          * Constructs a FakeTweetTimeline
+         *
          * @param numItems the number of Tweets to return per call to next/previous
          */
         FakeTweetTimeline(long numItems) {
@@ -207,6 +208,7 @@ public void previous(Long maxId, Callback<TimelineResult<Tweet>> cb) {
 
     /**
      * Makes class public so it can be mocked on ART runtime.
+     *
      * @param <T>
      */
     public class TestTimelineDelegate<T extends Identifiable> extends TimelineDelegate {
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetTimelineRecyclerViewAdapterTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetTimelineRecyclerViewAdapterTest.java
index 0bffcc40..c595baaf 100644
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetTimelineRecyclerViewAdapterTest.java
+++ b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetTimelineRecyclerViewAdapterTest.java
@@ -97,7 +97,7 @@ public void testBuilder_nullContext() {
         try {
             recyclerViewAdapter =
                     new TweetTimelineRecyclerViewAdapter.Builder(null).setTimeline(mockTimeline)
-                    .build();
+                            .build();
             fail("Null context should throw exception");
         } catch (IllegalArgumentException e) {
             assertEquals(NULL_CONTEXT_MESSAGE, e.getMessage());
@@ -108,7 +108,7 @@ public void testBuilder_nullTimeline() {
         try {
             recyclerViewAdapter =
                     new TweetTimelineRecyclerViewAdapter.Builder(getContext()).setTimeline(null)
-                    .build();
+                            .build();
             fail("Null timeline should throw exception");
         } catch (IllegalArgumentException e) {
             assertEquals(NULL_TIMELINE_MESSAGE, e.getMessage());
@@ -158,6 +158,7 @@ public void testItemCount_viaBuilder() {
 
         /**
          * Constructs a FakeTweetTimeline
+         *
          * @param numItems the number of Tweets to return per call to next/previous
          */
         FakeTweetTimeline(long numItems) {
@@ -185,6 +186,7 @@ public void previous(Long maxId, Callback<TimelineResult<Tweet>> cb) {
 
     /**
      * Makes class public so it can be mocked on ART runtime.
+     *
      * @param <T>
      */
     public class TestTimelineDelegate<T extends Identifiable> extends TimelineDelegate {
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUiTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUiTest.java
index 82618972..f8a229de 100644
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUiTest.java
+++ b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetUiTest.java
@@ -30,6 +30,7 @@
 
 public class TweetUiTest extends AndroidTestCase {
     private TweetUi tweetUi;
+
     @Override
     protected void setUp() throws Exception {
         super.setUp();
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetViewTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetViewTest.java
index e454f067..832919c8 100644
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetViewTest.java
+++ b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetViewTest.java
@@ -50,7 +50,7 @@ TweetView createViewWithMocks(Context context, Tweet tweet) {
 
     @Override
     TweetView createViewWithMocks(Context context, Tweet tweet, int styleResId,
-            BaseTweetView.DependencyProvider dependencyProvider) {
+                                  BaseTweetView.DependencyProvider dependencyProvider) {
         return new TweetView(context, tweet, styleResId, dependencyProvider);
     }
 
diff --git a/tweet-ui/src/debug/AndroidManifest.xml b/tweet-ui/src/debug/AndroidManifest.xml
index c6bf5bcd..bd1f4696 100644
--- a/tweet-ui/src/debug/AndroidManifest.xml
+++ b/tweet-ui/src/debug/AndroidManifest.xml
@@ -16,8 +16,8 @@
   -->
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          xmlns:tools="http://schemas.android.com/tools"
-          package="com.twitter.sdk.android.tweetui">
+    xmlns:tools="http://schemas.android.com/tools"
+    package="com.twitter.sdk.android.tweetui">
 
     <application
         android:allowBackup="true"
diff --git a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/EntityFactory.java b/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/EntityFactory.java
deleted file mode 100644
index 0c11d38e..00000000
--- a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/EntityFactory.java
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.twitter.sdk.android.core.models.HashtagEntity;
-import com.twitter.sdk.android.core.models.MentionEntity;
-import com.twitter.sdk.android.core.models.SymbolEntity;
-import com.twitter.sdk.android.core.models.UrlEntity;
-
-class EntityFactory {
-
-    public static UrlEntity newUrlEntity(String text, String url, String displayUrl) {
-        final int start = text.length() - url.length();
-        final int end = text.length();
-
-        return new UrlEntity(url, "http://" + displayUrl, displayUrl, start, end);
-    }
-
-    public static HashtagEntity newHashtagEntity(String text, String hashtag) {
-        final int start = text.length() - hashtag.length() - 1;
-        final int end = text.length();
-
-        return new HashtagEntity(hashtag, start, end);
-    }
-
-    public static MentionEntity newMentionEntity(String text, String screenName) {
-        final int start = text.length() - screenName.length() - 1;
-        final int end = text.length();
-
-        return new MentionEntity(100, "100", screenName, screenName, start, end);
-    }
-
-    public static SymbolEntity newSymbolEntity(String text, String symbol) {
-        final int start = text.length() - symbol.length() - 1;
-        final int end = text.length();
-
-        return new SymbolEntity(symbol, start, end);
-    }
-}
diff --git a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestDependencyProvider.java b/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestDependencyProvider.java
deleted file mode 100644
index cc64d887..00000000
--- a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestDependencyProvider.java
+++ /dev/null
@@ -1,32 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import com.squareup.picasso.Picasso;
-
-public class TestDependencyProvider extends BaseTweetView.DependencyProvider {
-    @Override
-    public TweetUi getTweetUi() {
-        return super.getTweetUi();
-    }
-
-    @Override
-    public Picasso getImageLoader() {
-        return super.getImageLoader();
-    }
-}
diff --git a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestFixtures.java b/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestFixtures.java
deleted file mode 100644
index 49424837..00000000
--- a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestFixtures.java
+++ /dev/null
@@ -1,320 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.net.Uri;
-
-import com.twitter.sdk.android.core.internal.VineCardUtils;
-import com.twitter.sdk.android.core.models.BindingValues;
-import com.twitter.sdk.android.core.models.Card;
-import com.twitter.sdk.android.core.models.HashtagEntity;
-import com.twitter.sdk.android.core.models.ImageValue;
-import com.twitter.sdk.android.core.models.MediaEntity;
-import com.twitter.sdk.android.core.models.MentionEntity;
-import com.twitter.sdk.android.core.models.SymbolEntity;
-import com.twitter.sdk.android.core.models.Tweet;
-import com.twitter.sdk.android.core.models.TweetBuilder;
-import com.twitter.sdk.android.core.models.TweetEntities;
-import com.twitter.sdk.android.core.models.UrlEntity;
-import com.twitter.sdk.android.core.models.User;
-import com.twitter.sdk.android.core.models.UserBuilder;
-import com.twitter.sdk.android.core.models.UserValue;
-import com.twitter.sdk.android.core.models.VideoInfo;
-
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-public final class TestFixtures {
-    public static final String CONSUMER_KEY = "consumer_key";
-    public static final String CONSUMER_SECRET = "test_secret";
-    public static final String EMPTY_STRING = "";
-    public static final long TEST_TWEET_ID = 467360037434712064L;
-
-    public static final String TEST_NAME = "Alfred Verbose Named";
-    public static final String TEST_RETWEETER_NAME = "Mr Retweets";
-
-    public static final String TEST_SCREEN_NAME = "longestusername";
-    public static final String TEST_FORMATTED_SCREEN_NAME = "@longestusername";
-    public static final String TEST_RETWEETER_SCREEN_NAME = "retweets";
-    public static final String TEST_PROFILE_IMAGE_URL = "https://twimg.twitter.com/image";
-
-    public static final User TEST_USER = new UserBuilder()
-            .setId(12L)
-            .setName(TEST_NAME)
-            .setScreenName(TEST_SCREEN_NAME)
-            .setVerified(false)
-            .setProfileImageUrlHttps(TEST_PROFILE_IMAGE_URL)
-            .build();
-
-    public static final User TEST_RETWEETER = new UserBuilder()
-            .setId(13L)
-            .setName(TEST_RETWEETER_NAME)
-            .setScreenName(TEST_RETWEETER_SCREEN_NAME)
-            .setProfileImageUrlHttps(TEST_PROFILE_IMAGE_URL)
-            .build();
-
-    public static final User EMPTY_USER = new UserBuilder()
-            .setId(-1L)
-            .setName("")
-            .setScreenName("")
-            .setVerified(false)
-            .build();
-
-    public static final String TEST_STATUS = "A test Tweet status message.";
-    public static final String EMPTY_STATUS = "";
-
-    public static final String TEST_TIMESTAMP = "Wed Jun 06 20:07:10 +0000 2012";
-    public static final String TIMESTAMP_RENDERED = "• 06/06/12";
-    public static final String EMPTY_TIMESTAMP = "";
-    public static final String INVALID_TIMESTAMP_INPUT = "Dec 12, 2013";
-
-    public static final String TEST_PHOTO_URL = "https://pbs.twimg.com/media/someimage.jpg";
-    public static final String TEST_URL = "https://twitter.com/";
-    public static final String TEST_HASHTAG = "https://twitter.com/search?q=" + Uri.encode("#") + "TwitterForGood";
-    public static final String TEST_STATUS_WITH_LINK = "A test Tweet status message. " + TEST_URL;
-    public static final String TEST_STATUS_WITH_HASHTAG = "A test Tweet status message. " + TEST_HASHTAG;
-
-    public static final String TEST_CONTENT_DESCRIPTION
-            = "Alfred Verbose Named. A test Tweet status message.. Jun 6, 2012.";
-
-    public static final String TEST_PERMALINK_ONE =
-            "https://twitter.com/longestusername/status/1?ref_src=twsrc%5Etwitterkit";
-    public static final String TEST_PERMALINK_TWO =
-            "https://twitter.com/longestusername/status/2?ref_src=twsrc%5Etwitterkit";
-    public static final String TEST_PERMALINK_UNKNOWN_USER
-            = "https://twitter.com/twitter_unknown/status/1?ref_src=twsrc%5Etwitterkit";
-
-    public static final Tweet TEST_TWEET = createTweet(1L, TEST_USER, TEST_STATUS, TEST_TIMESTAMP,
-            false);
-    public static final Tweet TEST_TWEET_LINK = createTweet(1L, TEST_USER, TEST_STATUS_WITH_LINK, TEST_TIMESTAMP,
-            false);
-    public static final Tweet TEST_TWEET_HASHTAG = createTweet(1L, TEST_USER, TEST_STATUS_WITH_HASHTAG, TEST_TIMESTAMP,
-            false);
-    public static final Tweet TEST_FAVORITED_TWEET = createTweet(1L, TEST_USER, TEST_STATUS,
-            TEST_TIMESTAMP, true);
-    public static final Tweet TEST_PHOTO_TWEET = createPhotoTweet(2L, TEST_USER, TEST_STATUS,
-            TEST_TIMESTAMP, TEST_PHOTO_URL);
-    public static final Tweet TEST_MULTIPLE_PHOTO_TWEET = createMultiplePhotosTweet(4, 2L, TEST_USER, TEST_STATUS,
-            TEST_TIMESTAMP, TEST_PHOTO_URL);
-    // Empty Tweet has empty string name, username, status, and timestamp fields
-    public static final Tweet EMPTY_TWEET = createTweet(-1L, EMPTY_USER, EMPTY_STATUS,
-            EMPTY_TIMESTAMP, false);
-    public static final Tweet INVALID_TIMESTAMP_TWEET = createTweet(3L, EMPTY_USER, EMPTY_STATUS,
-            INVALID_TIMESTAMP_INPUT, false);
-    public static final Tweet TEST_RETWEET = createRetweet(4L, TEST_RETWEETER, TEST_TWEET);
-
-    public static final List<Long> TWEET_IDS = new ArrayList<>();
-    public static final List<Long> DUPLICATE_TWEET_IDS = new ArrayList<>();
-    public static final List<Tweet> UNORDERED_TWEETS = new ArrayList<>();
-    public static final List<Tweet> ORDERED_TWEETS = new ArrayList<>();
-    public static final List<Tweet> ORDERED_DUPLICATE_TWEETS = new ArrayList<>();
-    public static final List<Tweet> UNORDERED_DUPLICATE_TWEETS = new ArrayList<>();
-    public static final List<Tweet> UNORDERED_MISSING_TWEETS = new ArrayList<>();
-    public static final List<Tweet> ORDERED_MISSING_TWEETS = new ArrayList<>();
-
-    public static final BindingValues TEST_BINDING_VALUES =
-            new BindingValues(Collections.emptyMap());
-    public static final String PLAYER_CARD_VINE = VineCardUtils.VINE_CARD;
-    public static final String TEST_VINE_USER_ID = "586671909";
-
-    static {
-        TWEET_IDS.addAll(Arrays.asList(100L, 101L, 102L));
-        DUPLICATE_TWEET_IDS.addAll(Arrays.asList(100L, 101L, 102L, 101L));
-        addTweetsWithId(UNORDERED_TWEETS, Arrays.asList(101L, 102L, 100L));
-        addTweetsWithId(ORDERED_TWEETS, Arrays.asList(100L, 101L, 102L));
-        addTweetsWithId(ORDERED_DUPLICATE_TWEETS, Arrays.asList(100L, 101L, 102L, 101L));
-        addTweetsWithId(UNORDERED_DUPLICATE_TWEETS, Arrays.asList(101L, 102L, 101L, 102L, 100L));
-        addTweetsWithId(UNORDERED_MISSING_TWEETS, Arrays.asList(102L, 101L));
-        addTweetsWithId(ORDERED_MISSING_TWEETS, Arrays.asList(101L, 102L));
-    }
-
-    private TestFixtures() {}
-
-    public static Tweet createTweet(long id) {
-        return createTweet(id, null, "", "", false);
-    }
-
-    static Tweet createTweet(long id, User user, String text, String timestamp,
-            boolean isFavorited) {
-        return new TweetBuilder()
-                .setId(id)
-                .setUser(user)
-                .setText(text)
-                .setCreatedAt(timestamp)
-                .setFavorited(isFavorited)
-                .setEntities(new TweetEntities(null, null, null, null, null))
-                .build();
-    }
-
-    static Tweet createPhotoTweet(long id, User user, String text, String timestamp,
-            String photoUrlHttps) {
-        final MediaEntity photoEntity = new MediaEntity("", "", "", 0, 0, 0L, null, null,
-                photoUrlHttps, createMediaEntitySizes(100, 100), 0L, null, "photo", null, "");
-        final ArrayList<MediaEntity> mediaEntities = new ArrayList<>();
-        mediaEntities.add(photoEntity);
-        final TweetEntities entities = new TweetEntities(null, null, mediaEntities, null, null);
-        return new TweetBuilder()
-                .setId(id)
-                .setUser(user)
-                .setText(text)
-                .setCreatedAt(timestamp)
-                .setEntities(entities)
-                .setExtendedEntities(entities)
-                .build();
-    }
-
-    static Tweet createMultiplePhotosTweet(int count, long id, User user, String text,
-                                                  String timestamp, String photoUrlHttps) {
-        final ArrayList<MediaEntity> mediaEntities = new ArrayList<>();
-        for (int x = 0; x < count; x++) {
-            final MediaEntity photoEntity = new MediaEntity("", "", "", 0, 0, 0L, null, null,
-                    photoUrlHttps, createMediaEntitySizes(100, 100), 0L, null, "photo", null, "");
-            mediaEntities.add(photoEntity);
-        }
-        final TweetEntities entities = new TweetEntities(null, null, mediaEntities, null, null);
-        return new TweetBuilder()
-                .setId(id)
-                .setUser(user)
-                .setText(text)
-                .setCreatedAt(timestamp)
-                .setEntities(entities)
-                .setExtendedEntities(entities)
-                .build();
-    }
-
-    static Tweet createRetweet(long id, User retweeter, Tweet retweetedStatus) {
-        return new TweetBuilder()
-                .setId(id)
-                .setUser(retweeter)
-                .setRetweetedStatus(retweetedStatus)
-                .build();
-    }
-
-    public static Tweet createTweetWithVineCard(long id, User user, String text, Card card) {
-        return new TweetBuilder()
-                .setId(id)
-                .setCard(card)
-                .setText(text)
-                .setUser(user)
-                .build();
-    }
-
-    static void addTweetsWithId(List<Tweet> tweets, List<Long> tweetIds) {
-        for (long tweetId : tweetIds) {
-            tweets.add(createTweet(tweetId));
-        }
-    }
-
-    public static UrlEntity newUrlEntity(int start, int end) {
-        return new UrlEntity("url", "expandedUrl", "displayUrl", start, end);
-    }
-
-    public static MediaEntity newMediaEntity(int start, int end, String type) {
-        return newMediaEntity(start, end, type, 0);
-    }
-
-    public static MediaEntity newMediaEntity(int start, int end, String type,
-                                             int durationInMillis) {
-        final VideoInfo videoInfo =
-                new VideoInfo(Collections.EMPTY_LIST, durationInMillis, Collections.EMPTY_LIST);
-        return new MediaEntity("url", "expandedUrl", "displayUrl", start, end, 0L, "0", "mediaUrl",
-                "mediaUrlHttps", null, 0L, "0", type, videoInfo, "");
-    }
-
-    public static HashtagEntity newHashtagEntity(String text, int start, int end) {
-        return new HashtagEntity(text, start, end);
-    }
-
-    public static MentionEntity newMentionEntity(String screenName, int start, int end) {
-        return new MentionEntity(100, "100", screenName, screenName, start, end);
-    }
-
-    public static SymbolEntity newSymbolEntity(String symbol, int start, int end) {
-        return new SymbolEntity(symbol, start, end);
-    }
-
-    public static List<Tweet> getTweetList(long count) {
-        final List<Tweet> tweets = new ArrayList<>();
-        for (int i = 0; i < count; i++) {
-            // add 1000 just so ids are clearly distinct from position
-            tweets.add(TestFixtures.createTweet(1000 + i));
-        }
-        return tweets;
-    }
-
-    public static List<MediaEntity> createMultipleMediaEntitiesWithPhoto(int count, int w, int h) {
-        final List<MediaEntity> mediaEntities = new ArrayList<>(count);
-        for (int i = 0; i < count; i++) {
-            final MediaEntity mediaEntityWithPhoto = createMediaEntityWithPhoto(w, h);
-            mediaEntities.add(mediaEntityWithPhoto);
-        }
-        return mediaEntities;
-    }
-
-    public static MediaEntity createMediaEntityWithPhoto(int width, int height) {
-        return createMediaEntityWithPhoto(createMediaEntitySizes(width, height));
-    }
-
-    public static MediaEntity createMediaEntityWithPhoto(MediaEntity.Sizes sizes) {
-        return new MediaEntity(null, null, null, 0, 0, 0L, null, null, null, sizes, 0L, null,
-                "photo", null, "");
-    }
-
-    public static MediaEntity.Sizes createMediaEntitySizes(int width, int height) {
-        final MediaEntity.Size medium = new MediaEntity.Size(width, height, "fit");
-        return new MediaEntity.Sizes(null, null, medium, null);
-    }
-
-    public static MediaEntity createEntityWithVideo(VideoInfo videoInfo) {
-        return new MediaEntity(null, null, null, 0, 0, 0L, null, null, null, null, 0L, null,
-                "video", videoInfo, "");
-    }
-
-    public static MediaEntity createEntityWithAnimatedGif(VideoInfo videoInfo) {
-        return new MediaEntity(null, null, null, 0, 0, 0L, null, null, null, null, 0L, null,
-                "animated_gif", videoInfo, "");
-    }
-
-    public static VideoInfo createVideoInfoWithVariant(VideoInfo.Variant variant) {
-        return new VideoInfo(null, 0, Collections.singletonList(variant));
-    }
-
-    public static Card sampleInvalidVineCard() {
-        return new Card(TEST_BINDING_VALUES, "invalid");
-    }
-
-    public static Card sampleValidVineCard() {
-        return new Card(createBindingValuesForCard(), PLAYER_CARD_VINE);
-    }
-
-    public static BindingValues createBindingValuesForCard() {
-        final UserValue testUser = new UserValue(TEST_VINE_USER_ID);
-        final Map<String, Object> testValues = new HashMap<>();
-        testValues.put("site", testUser);
-
-        final ImageValue imageValue = new ImageValue(10, 10, TEST_PHOTO_URL, "");
-        testValues.put("player_image", imageValue);
-        testValues.put("player_stream_url", TEST_URL);
-
-        return new BindingValues(testValues);
-    }
-}
diff --git a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestTweetActionBarView.java b/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestTweetActionBarView.java
deleted file mode 100644
index 0c3762ab..00000000
--- a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestTweetActionBarView.java
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-
-import com.twitter.sdk.android.core.models.Tweet;
-
-public class TestTweetActionBarView extends TweetActionBarView {
-
-    public TestTweetActionBarView(Context context) {
-        super(context);
-    }
-
-    @Override
-    public void setTweet(Tweet tweet) {
-        super.setTweet(tweet);
-    }
-
-    @Override
-    public void setLike(Tweet tweet) {
-        super.setLike(tweet);
-    }
-}
diff --git a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestUtils.java b/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestUtils.java
deleted file mode 100644
index 10fdd7f5..00000000
--- a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TestUtils.java
+++ /dev/null
@@ -1,62 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.Context;
-import android.content.res.Configuration;
-import android.content.res.Resources;
-import android.graphics.drawable.ColorDrawable;
-import android.widget.ImageView;
-
-import java.util.Locale;
-
-public final class TestUtils {
-
-    private TestUtils() {}
-
-    /**
-     * Sets global locale
-     * @param locale Locale to set
-     */
-    public static Locale setLocale(Context context, Locale locale) {
-        final Resources res = context.getResources();
-        final Configuration config = res.getConfiguration();
-        final Locale originalLocale = config.locale;
-
-        Locale.setDefault(locale);
-        config.locale = locale;
-        res.updateConfiguration(config, res.getDisplayMetrics());
-        return originalLocale;
-    }
-
-
-    /**
-     * Gets the color of the ImageView's ColorDrawable or 0 for API &lt; 11.
-     * @param imageView an ImageView with a ColorDrawable
-     * @return int color of the ImageView
-     */
-    public static int getDrawableColor(ImageView imageView) {
-        final ColorDrawable drawable = (ColorDrawable) imageView.getDrawable();
-        return drawable.getColor();
-    }
-
-    public static int getBackgroundColor(ImageView imageView) {
-        final ColorDrawable drawable = (ColorDrawable) imageView.getBackground();
-        return drawable.getColor();
-    }
-}
diff --git a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TweetAsserts.java b/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TweetAsserts.java
deleted file mode 100644
index 7ca3e0fa..00000000
--- a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TweetAsserts.java
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-import android.content.res.Resources;
-
-import junit.framework.Assert;
-
-/**
- * Common shared utilities for testing.
- */
-public final class TweetAsserts extends Assert {
-    private TweetAsserts() {}
-
-    public static void assertDefaultColors(BaseTweetView view, Resources resources) {
-        final int containerColor
-                = resources.getColor(R.color.tw__tweet_light_container_bg_color);
-        final int primaryTextColor
-                = resources.getColor(R.color.tw__tweet_light_primary_text_color);
-
-        assertEquals(containerColor, view.containerBgColor);
-        assertEquals(primaryTextColor, view.primaryTextColor);
-        assertEquals(primaryTextColor, view.contentView.getCurrentTextColor());
-        assertEquals(primaryTextColor, view.fullNameView.getCurrentTextColor());
-        assertEquals(R.drawable.tw__ic_tweet_photo_error_light, view.photoErrorResId);
-        assertEquals(R.drawable.tw__ic_logo_blue, view.birdLogoResId);
-    }
-
-    public static void assertDarkColors(BaseTweetView view, Resources resources) {
-        final int containerColor
-                = resources.getColor(R.color.tw__tweet_dark_container_bg_color);
-        final int primaryTextColor
-                = resources.getColor(R.color.tw__tweet_dark_primary_text_color);
-
-        assertEquals(containerColor, view.containerBgColor);
-        assertEquals(primaryTextColor, view.primaryTextColor);
-        assertEquals(primaryTextColor, view.contentView.getCurrentTextColor());
-        assertEquals(primaryTextColor, view.fullNameView.getCurrentTextColor());
-        assertEquals(R.drawable.tw__ic_tweet_photo_error_dark, view.photoErrorResId);
-        assertEquals(R.drawable.tw__ic_logo_white, view.birdLogoResId);
-    }
-}
diff --git a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TweetUiTestUtils.java b/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TweetUiTestUtils.java
deleted file mode 100644
index 516be6c8..00000000
--- a/tweet-ui/src/debug/java/com/twitter/sdk/android/tweetui/TweetUiTestUtils.java
+++ /dev/null
@@ -1,24 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.tweetui;
-
-public class TweetUiTestUtils {
-    public static void resetTweetUi() {
-        TweetUi.instance = null;
-    }
-}
diff --git a/tweet-ui/src/debug/res/layout/activity_invalid_tweet_id.xml b/tweet-ui/src/debug/res/layout/activity_invalid_tweet_id.xml
index e384bf57..e3ce32aa 100644
--- a/tweet-ui/src/debug/res/layout/activity_invalid_tweet_id.xml
+++ b/tweet-ui/src/debug/res/layout/activity_invalid_tweet_id.xml
@@ -18,15 +18,15 @@
   -->
 
 <merge xmlns:android="http://schemas.android.com/apk/res/android"
-       xmlns:twittersdk="http://schemas.android.com/apk/res-auto"
-       android:layout_width="match_parent"
-       android:layout_height="match_parent"
-       xmlns:tools="http://schemas.android.com/tools"
-       tools:ignore="UnusedResources">
+    xmlns:twittersdk="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:tools="http://schemas.android.com/tools"
+    tools:ignore="UnusedResources">
 
     <com.twitter.sdk.android.tweetui.TweetView
         android:id="@+id/invalid_tweet_view"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        twittersdk:tw__tweet_id="abc"/>
+        twittersdk:tw__tweet_id="abc" />
 </merge>
\ No newline at end of file
diff --git a/tweet-ui/src/debug/res/layout/activity_tweet_actions_enabled.xml b/tweet-ui/src/debug/res/layout/activity_tweet_actions_enabled.xml
index 576c5e2d..c2786a12 100644
--- a/tweet-ui/src/debug/res/layout/activity_tweet_actions_enabled.xml
+++ b/tweet-ui/src/debug/res/layout/activity_tweet_actions_enabled.xml
@@ -18,11 +18,11 @@
   -->
 
 <merge xmlns:android="http://schemas.android.com/apk/res/android"
-       xmlns:twittersdk="http://schemas.android.com/apk/res-auto"
-       android:layout_width="match_parent"
-       android:layout_height="match_parent"
-       xmlns:tools="http://schemas.android.com/tools"
-       tools:ignore="UnusedResources">
+    xmlns:twittersdk="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:tools="http://schemas.android.com/tools"
+    tools:ignore="UnusedResources">
 
     <com.twitter.sdk.android.tweetui.TweetView
         android:id="@+id/tweet_view"
diff --git a/tweet-ui/src/debug/res/layout/activity_tweet_view_test.xml b/tweet-ui/src/debug/res/layout/activity_tweet_view_test.xml
index c7644bd2..43b8ce07 100644
--- a/tweet-ui/src/debug/res/layout/activity_tweet_view_test.xml
+++ b/tweet-ui/src/debug/res/layout/activity_tweet_view_test.xml
@@ -15,8 +15,7 @@
   ~
   -->
 
-<merge
-    xmlns:android="http://schemas.android.com/apk/res/android"
+<merge xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:twittersdk="http://schemas.android.com/apk/res-auto"
     android:layout_height="match_parent"
     android:layout_width="match_parent"
@@ -29,13 +28,13 @@
         android:id="@+id/tweet_view"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        twittersdk:tw__tweet_id="1"/>
+        twittersdk:tw__tweet_id="1" />
 
     <com.twitter.sdk.android.tweetui.CompactTweetView
         android:id="@+id/compact_tweet_view"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
-        twittersdk:tw__tweet_id="1"/>
+        twittersdk:tw__tweet_id="1" />
 
     <!--dark style-->
 
@@ -44,12 +43,12 @@
         style="@style/tw__TweetDarkStyle"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        twittersdk:tw__tweet_id="1"/>
+        twittersdk:tw__tweet_id="1" />
 
     <com.twitter.sdk.android.tweetui.CompactTweetView
         android:id="@+id/compact_tweet_view_dark"
         style="@style/tw__TweetDarkStyle"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
-        twittersdk:tw__tweet_id="1"/>
+        twittersdk:tw__tweet_id="1" />
 </merge>
diff --git a/tweet-ui/src/debug/res/values/styles.xml b/tweet-ui/src/debug/res/values/styles.xml
index e9fa25dd..79770673 100644
--- a/tweet-ui/src/debug/res/values/styles.xml
+++ b/tweet-ui/src/debug/res/values/styles.xml
@@ -16,6 +16,7 @@
   -->
 
 <resources>
+
     <style name="tw__TweetActionsEnabled">
         <item name="tw__tweet_actions_enabled">true</item>
     </style>
diff --git a/tweet-ui/src/main/AndroidManifest.xml b/tweet-ui/src/main/AndroidManifest.xml
index e7d5b037..54e7e183 100644
--- a/tweet-ui/src/main/AndroidManifest.xml
+++ b/tweet-ui/src/main/AndroidManifest.xml
@@ -15,20 +15,19 @@
   ~
   -->
 
-<manifest
-    package="com.twitter.sdk.android.tweetui"
+<manifest package="com.twitter.sdk.android.tweetui"
     xmlns:android="http://schemas.android.com/apk/res/android">
 
-    <uses-permission android:name="android.permission.INTERNET"/>
+    <uses-permission android:name="android.permission.INTERNET" />
 
     <application>
         <activity
             android:name=".PlayerActivity"
             android:configChanges="keyboardHidden|orientation|screenSize"
-            android:theme="@style/MediaTheme"/>
+            android:theme="@style/MediaTheme" />
         <activity
             android:name=".GalleryActivity"
-            android:theme="@style/MediaTheme"/>
+            android:theme="@style/MediaTheme" />
     </application>
 
 </manifest>
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/AbstractTweetView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/AbstractTweetView.java
index 6157fb85..6ba2d44e 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/AbstractTweetView.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/AbstractTweetView.java
@@ -51,7 +51,7 @@
 import java.util.List;
 
 
-abstract class AbstractTweetView extends RelativeLayout{
+abstract class AbstractTweetView extends RelativeLayout {
     static final String TAG = TweetUi.LOGTAG;
     static final int DEFAULT_STYLE = R.style.tw__TweetLightStyle;
     static final String EMPTY_STRING = "";
@@ -98,15 +98,16 @@
     /**
      * Performs inflation from XML and apply a class-specific base style with the given dependency
      * provider.
-     * @param context the context of the view
-     * @param attrs the attributes of the XML tag that is inflating the TweetView
-     * @param defStyle An attribute in the current theme that contains a reference to a style
-     *                 resource to apply to this view. If 0, no default style will be applied.
+     *
+     * @param context            the context of the view
+     * @param attrs              the attributes of the XML tag that is inflating the TweetView
+     * @param defStyle           An attribute in the current theme that contains a reference to a style
+     *                           resource to apply to this view. If 0, no default style will be applied.
      * @param dependencyProvider the dependency provider
      * @throws IllegalArgumentException if the Tweet id is invalid.
      */
     AbstractTweetView(Context context, AttributeSet attrs, int defStyle,
-                  DependencyProvider dependencyProvider) {
+                      DependencyProvider dependencyProvider) {
         super(context, attrs, defStyle);
 
         this.dependencyProvider = dependencyProvider;
@@ -116,6 +117,7 @@
 
     /**
      * Inflate the TweetView using the layout that has been set.
+     *
      * @param context The Context the view is running in.
      */
     private void inflateView(Context context) {
@@ -124,6 +126,7 @@ private void inflateView(Context context) {
 
     /**
      * Checks whether the TweetUi kit is setup and the instance is available.
+     *
      * @return true if the instance is available and view creation can continue
      * or false otherwise
      */
@@ -174,6 +177,7 @@ public long getTweetId() {
      * Set the Tweet to be displayed and update the subviews. For any data that is missing from
      * the Tweet, invalidate the subview value (e.g. text views set to empty string) for view
      * recycling. Cannot be called before inflation has completed.
+     *
      * @param tweet Tweet data
      */
     public void setTweet(Tweet tweet) {
@@ -190,6 +194,7 @@ public Tweet getTweet() {
 
     /**
      * Override the default action when media is clicked.
+     *
      * @param tweetMediaClickListener called when media is clicked.
      */
     public void setTweetMediaClickListener(TweetMediaClickListener tweetMediaClickListener) {
@@ -199,6 +204,7 @@ public void setTweetMediaClickListener(TweetMediaClickListener tweetMediaClickLi
 
     /**
      * Override the default action when any link or entity is clicked.
+     *
      * @param tweetLinkClickListener called when any link or entity is clicked.
      */
     public void setTweetLinkClickListener(TweetLinkClickListener tweetLinkClickListener) {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTimeline.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTimeline.java
index 596a0cd6..dd2274fc 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTimeline.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTimeline.java
@@ -46,6 +46,7 @@ static Long decrementMaxId(Long maxId) {
 
         /**
          * Constructs a TweetsCallback
+         *
          * @param cb A callback which expects a TimelineResult
          */
         TweetsCallback(Callback<TimelineResult<Tweet>> cb) {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTweetView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTweetView.java
index 566829ea..3bae02e6 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTweetView.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/BaseTweetView.java
@@ -63,8 +63,9 @@
 
     /**
      * Constructs a view from the given Tweet.
+     *
      * @param context the context of the view
-     * @param tweet a Tweet object
+     * @param tweet   a Tweet object
      */
     BaseTweetView(Context context, Tweet tweet) {
         this(context, tweet, DEFAULT_STYLE);
@@ -72,8 +73,9 @@
 
     /**
      * Constructs a view from the given Tweet.
-     * @param context the context of the view
-     * @param tweet a Tweet object
+     *
+     * @param context    the context of the view
+     * @param tweet      a Tweet object
      * @param styleResId resource id of the Tweet view style
      */
     BaseTweetView(Context context, Tweet tweet, int styleResId) {
@@ -82,13 +84,14 @@
 
     /**
      * Constructs a view from the given Tweet using the given dependency provider
-     * @param context the context of the view
-     * @param tweet a Tweet object
-     * @param styleResId resource id of the Tweet view style
+     *
+     * @param context            the context of the view
+     * @param tweet              a Tweet object
+     * @param styleResId         resource id of the Tweet view style
      * @param dependencyProvider the dependency provider
      */
     BaseTweetView(Context context, Tweet tweet, int styleResId,
-            DependencyProvider dependencyProvider) {
+                  DependencyProvider dependencyProvider) {
         super(context, null, styleResId, dependencyProvider);
 
         initAttributes(styleResId);
@@ -102,8 +105,9 @@
 
     /**
      * Constructs a view with data retrieved from the API, for the XML defined tweetId.
+     *
      * @param context the context of the view
-     * @param attrs the attributes of the XML tag that is inflating the TweetView.
+     * @param attrs   the attributes of the XML tag that is inflating the TweetView.
      * @throws IllegalArgumentException if the Tweet id is invalid.
      */
     public BaseTweetView(Context context, AttributeSet attrs) {
@@ -112,8 +116,9 @@ public BaseTweetView(Context context, AttributeSet attrs) {
 
     /**
      * Performs inflation from XML and apply a class-specific base style.
-     * @param context the context of the view
-     * @param attrs the attributes of the XML tag that is inflating the TweetView.
+     *
+     * @param context  the context of the view
+     * @param attrs    the attributes of the XML tag that is inflating the TweetView.
      * @param defStyle An attribute in the current theme that contains a reference to a style
      *                 resource to apply to this view. If 0, no default style will be applied.
      * @throws IllegalArgumentException if the Tweet id is invalid.
@@ -144,8 +149,9 @@ private void initAttributes(int styleResId) {
     /**
      * Initializes XML attributes needed before view inflation. This initializer should be called
      * by the XML constructor. For XML Tweet views, the style is obtained from XML attrs.
+     *
      * @param context the context of the view
-     * @param attrs set of raw XML attributes associated with the view's XML tag
+     * @param attrs   set of raw XML attributes associated with the view's XML tag
      * @throws IllegalArgumentException if the tw__tweet_id XML attribute is invalid
      */
     private void initXmlAttributes(Context context, AttributeSet attrs) {
@@ -163,6 +169,7 @@ private void initXmlAttributes(Context context, AttributeSet attrs) {
 
     /**
      * Parses and sets the Tweet data XML attributes. Must be called before view inflation.
+     *
      * @param a A TypedArray holding the attribute values obtained from the XML attributes
      * @throws IllegalArgumentException if the tw__tweet_id XML attribute is invalid
      */
@@ -181,6 +188,7 @@ private void setXmlDataAttributes(TypedArray a) {
     /**
      * Parses and sets style attributes. Must be called before view inflation. Defaults style
      * attributes to the light style values.
+     *
      * @param a A TypedArray holding style-related attribute values.
      */
     private void setStyleAttributes(TypedArray a) {
@@ -292,6 +300,7 @@ void findSubviews() {
 
     /**
      * Sets the callback to call when a Tweet action (favorite, unfavorite) is performed.
+     *
      * @param actionCallback called when a Tweet action is performed.
      */
     public void setOnActionCallback(Callback<Tweet> actionCallback) {
@@ -337,6 +346,7 @@ void setQuoteTweet(Tweet tweet) {
 
     /**
      * Toggles display of "Retweeted by" text based on status from the API.
+     *
      * @param tweet The status from the API, if it is a retweet show the "retweeted by" text
      */
     void showRetweetedBy(Tweet tweet) {
@@ -411,6 +421,7 @@ void setProfilePhotoView(Tweet displayTweet) {
 
     /**
      * Linkify the profile photo
+     *
      * @param displayTweet The tweet from which to linkify the profile photo
      */
     void linkifyProfilePhotoView(final Tweet displayTweet) {
@@ -444,7 +455,8 @@ void linkifyProfilePhotoView(final Tweet displayTweet) {
                         imageView.invalidate();
                         break;
                     }
-                    default: break;
+                    default:
+                        break;
                 }
                 return false;
             });
@@ -457,6 +469,7 @@ void setTweetActions(Tweet tweet) {
 
     /**
      * Override the default action when media is clicked.
+     *
      * @param tweetMediaClickListener called when media is clicked.
      */
     @Override
@@ -469,6 +482,7 @@ public void setTweetMediaClickListener(TweetMediaClickListener tweetMediaClickLi
 
     /**
      * Override the default action when link is clicked.
+     *
      * @param tweetLinkClickListener called when url is clicked.
      */
     @Override
@@ -481,6 +495,7 @@ public void setTweetLinkClickListener(TweetLinkClickListener tweetLinkClickListe
 
     /**
      * Enable or disable Tweet actions
+     *
      * @param enabled True to enable Tweet actions, false otherwise.
      */
     public void setTweetActionsEnabled(boolean enabled) {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/CollectionTimeline.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/CollectionTimeline.java
index a9a89054..3f62af26 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/CollectionTimeline.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/CollectionTimeline.java
@@ -57,8 +57,9 @@
     /**
      * Loads items with position greater than minPosition. If minPosition is null, loads items
      * with the greatest ids.
+     *
      * @param minPosition minimum position of the items to load (exclusive).
-     * @param cb callback.
+     * @param cb          callback.
      */
     @Override
     public void next(Long minPosition, Callback<TimelineResult<Tweet>> cb) {
@@ -67,8 +68,9 @@ public void next(Long minPosition, Callback<TimelineResult<Tweet>> cb) {
 
     /**
      * Loads items with position less than or equal to maxPosition.
+     *
      * @param maxPosition maximum position of the items to load (exclusive).
-     * @param cb callback.
+     * @param cb          callback.
      */
     @Override
     public void previous(Long maxPosition, Callback<TimelineResult<Tweet>> cb) {
@@ -76,7 +78,7 @@ public void previous(Long maxPosition, Callback<TimelineResult<Tweet>> cb) {
     }
 
     Call<TwitterCollection> createCollectionRequest(final Long minPosition,
-            final Long maxPosition) {
+                                                    final Long maxPosition) {
         return twitterCore.getApiClient().getCollectionService()
                 .collection(collectionIdentifier, maxItemsPerRequest, maxPosition, minPosition);
     }
@@ -90,6 +92,7 @@ public void previous(Long maxPosition, Callback<TimelineResult<Tweet>> cb) {
 
         /**
          * Constructs a CollectionCallback
+         *
          * @param cb A Callback which expects a TimelineResult
          */
         CollectionCallback(Callback<TimelineResult<Tweet>> cb) {
@@ -129,8 +132,8 @@ public void failure(TwitterException exception) {
             return Collections.emptyList();
         }
         final List<Tweet> tweets = new ArrayList<>();
-        for (TwitterCollection.TimelineItem item: collection.metadata.timelineItems) {
-            final Tweet trimmedTweet =  collection.contents.tweetMap.get(item.tweetItem.id);
+        for (TwitterCollection.TimelineItem item : collection.metadata.timelineItems) {
+            final Tweet trimmedTweet = collection.contents.tweetMap.get(item.tweetItem.id);
             final Tweet tweet = mapTweetToUsers(trimmedTweet, collection.contents.userMap);
             tweets.add(tweet);
         }
@@ -185,6 +188,7 @@ public Builder() {
 
         /**
          * Sets the id for the CollectionTimeline.
+         *
          * @param collectionId The collection id such as 539487832448843776.
          */
         public Builder id(Long collectionId) {
@@ -194,6 +198,7 @@ public Builder id(Long collectionId) {
 
         /**
          * Sets the number of Tweets returned per request for the CollectionTimeline.
+         *
          * @param maxItemsPerRequest The number of tweets to return per request, up to a maximum of
          *                           200.
          */
@@ -204,6 +209,7 @@ public Builder maxItemsPerRequest(Integer maxItemsPerRequest) {
 
         /**
          * Builds a CollectionTimeline from the Builder parameters.
+         *
          * @return a CollectionTimeline
          * @throws java.lang.IllegalStateException if query is not set (is null).
          */
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ColorUtils.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ColorUtils.java
index 2cda092e..967d250f 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ColorUtils.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ColorUtils.java
@@ -20,7 +20,8 @@
 import android.graphics.Color;
 
 final class ColorUtils {
-    private ColorUtils() {}
+    private ColorUtils() {
+    }
 
     /**
      * This method calculates a combination of colors using an opacity of the foreground layered
@@ -31,10 +32,10 @@ private ColorUtils() {}
      *                     overlay color
      * @param overlayColor The foreground color that the opacity will be applied to
      * @param primaryColor The background color that the foreground color is applied to
-     * @return             The combined color value
+     * @return The combined color value
      */
     static int calculateOpacityTransform(final double opacity, final int overlayColor,
-            final int primaryColor) {
+                                         final int primaryColor) {
         final int redPrimary = Color.red(primaryColor);
         final int redOverlay = Color.red(overlayColor);
         final int greenPrimary = Color.green(primaryColor);
@@ -54,7 +55,7 @@ static int calculateOpacityTransform(final double opacity, final int overlayColo
      * See: http://en.wikipedia.org/wiki/HSL_and_HSV. The threshold values are from ITU Rec. 709
      * http://en.wikipedia.org/wiki/Rec._709#Luma_coefficients
      *
-     * @param  color A color value
+     * @param color A color value
      * @return Whether or not the color is considered light
      */
     static boolean isLightColor(final int color) {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/CompactTweetView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/CompactTweetView.java
index db5214e6..109c47a1 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/CompactTweetView.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/CompactTweetView.java
@@ -38,7 +38,7 @@ public CompactTweetView(Context context, Tweet tweet, int styleResId) {
     }
 
     CompactTweetView(Context context, Tweet tweet, int styleResId,
-            DependencyProvider dependencyProvider) {
+                     DependencyProvider dependencyProvider) {
         super(context, tweet, styleResId, dependencyProvider);
     }
 
@@ -80,6 +80,7 @@ protected void applyStyles() {
     /**
      * Returns the desired aspect ratio of the Tweet media entity according to "sizes" metadata
      * and the aspect ratio display rules.
+     *
      * @param photoEntity the first
      * @return the target image and bitmap width to height aspect ratio
      */
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FilterTimelineDelegate.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FilterTimelineDelegate.java
index 2640f26c..fe8e2db9 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FilterTimelineDelegate.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FilterTimelineDelegate.java
@@ -46,7 +46,8 @@
     /**
      * Constructs a FilterTimelineDelegate with a timeline for requesting data and timelineFilter to
      * filter tweets
-     * @param timeline Timeline source
+     *
+     * @param timeline       Timeline source
      * @param timelineFilter a timelineFilter for filtering tweets from timeline
      * @throws java.lang.IllegalArgumentException if timeline is null
      */
@@ -63,14 +64,14 @@ public void refresh(Callback<TimelineResult<Tweet>> developerCb) {
         // load latest timeline items and replace existing items
         loadNext(timelineStateHolder.positionForNext(),
                 new TimelineFilterCallback(new RefreshCallback(developerCb, timelineStateHolder),
-                timelineFilter));
+                        timelineFilter));
     }
 
     @Override
     public void next(Callback<TimelineResult<Tweet>> developerCb) {
         loadNext(timelineStateHolder.positionForNext(),
-            new TimelineFilterCallback(new NextCallback(developerCb, timelineStateHolder),
-                    timelineFilter));
+                new TimelineFilterCallback(new NextCallback(developerCb, timelineStateHolder),
+                        timelineFilter));
     }
 
     @Override
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FixedTweetTimeline.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FixedTweetTimeline.java
index 06ea1e4c..ce6afc2b 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FixedTweetTimeline.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/FixedTweetTimeline.java
@@ -58,10 +58,12 @@ public void previous(Long maxPosition, Callback<TimelineResult<Tweet>> cb) {
         /**
          * Constructs a Builder.
          */
-        public Builder() {}
+        public Builder() {
+        }
 
         /**
          * Sets the Tweets to be returned by the timeline.
+         *
          * @param tweets fixed set of Tweets provided by the timeline.
          */
         public Builder setTweets(List<Tweet> tweets) {
@@ -71,6 +73,7 @@ public Builder setTweets(List<Tweet> tweets) {
 
         /**
          * Builds a FixedTweetTimeline from the Builder parameters.
+         *
          * @return a FixedTweetTimeline.
          */
         public FixedTweetTimeline build() {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/GalleryActivity.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/GalleryActivity.java
index 19516fa1..4e33507e 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/GalleryActivity.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/GalleryActivity.java
@@ -19,7 +19,6 @@
 
 import android.app.Activity;
 import android.os.Bundle;
-import android.support.v4.view.ViewPager;
 
 import com.twitter.sdk.android.core.models.MediaEntity;
 import com.twitter.sdk.android.tweetui.internal.SwipeToDismissTouchListener;
@@ -28,6 +27,8 @@
 import java.util.Collections;
 import java.util.List;
 
+import androidx.viewpager.widget.ViewPager;
+
 public class GalleryActivity extends Activity {
     public static final String GALLERY_ITEM = "GALLERY_ITEM";
     static final String MEDIA_ENTITY = "MEDIA_ENTITY";
@@ -76,16 +77,16 @@ public void onPageScrollStateChanged(int state) { /* intentionally blank */ }
     }
 
     SwipeToDismissTouchListener.Callback getSwipeToDismissCallback() {
-       return new SwipeToDismissTouchListener.Callback() {
-           @Override
-           public void onDismiss() {
-               finish();
-               overridePendingTransition(0, R.anim.tw__slide_out);
-           }
-
-           @Override
-           public void onMove(float translationY) { /* intentionally blank */ }
-       };
+        return new SwipeToDismissTouchListener.Callback() {
+            @Override
+            public void onDismiss() {
+                finish();
+                overridePendingTransition(0, R.anim.tw__slide_out);
+            }
+
+            @Override
+            public void onMove(float translationY) { /* intentionally blank */ }
+        };
     }
 
     // For backwards compatibility we need to support single entity or list of entities.
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/GalleryAdapter.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/GalleryAdapter.java
index 8dbcb965..30817e38 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/GalleryAdapter.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/GalleryAdapter.java
@@ -18,10 +18,10 @@
 package com.twitter.sdk.android.tweetui;
 
 import android.content.Context;
-import android.support.v4.view.PagerAdapter;
 import android.view.View;
 import android.view.ViewGroup;
 
+import androidx.annotation.NonNull;
 import com.squareup.picasso.Picasso;
 import com.twitter.sdk.android.core.models.MediaEntity;
 import com.twitter.sdk.android.tweetui.internal.GalleryImageView;
@@ -30,6 +30,8 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import androidx.viewpager.widget.PagerAdapter;
+
 class GalleryAdapter extends PagerAdapter {
     final List<MediaEntity> items = new ArrayList<>();
     final Context context;
@@ -51,25 +53,26 @@ public int getCount() {
     }
 
     @Override
-    public boolean isViewFromObject(View view, Object object) {
+    public boolean isViewFromObject(@NonNull View view, @NonNull Object object) {
         return view == object;
     }
 
+    @NonNull
     @Override
-    public Object instantiateItem(ViewGroup container, int position) {
+    public Object instantiateItem(@NonNull ViewGroup container, int position) {
         final GalleryImageView root = new GalleryImageView(context);
         root.setSwipeToDismissCallback(callback);
 
         container.addView(root);
 
         final MediaEntity entity = items.get(position);
-        Picasso.with(context).load(entity.mediaUrlHttps).into(root);
+        Picasso.get().load(entity.mediaUrlHttps).into(root);
 
         return root;
     }
 
     @Override
-    public void destroyItem(ViewGroup container, int position, Object object) {
+    public void destroyItem(@NonNull ViewGroup container, int position, @NonNull Object object) {
         container.removeView((View) object);
     }
 }
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/LoggingCallback.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/LoggingCallback.java
index 4d7516f3..9b90d348 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/LoggingCallback.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/LoggingCallback.java
@@ -25,6 +25,7 @@
  * LoggingCallback logs error messages to the logger and passes TwitterExceptions through to the
  * given Callback. Concrete subclasses must implement success(Result<T> result) and optionally call
  * cb's success with the appropriate unpacked result data.
+ *
  * @param <T> expected response type
  */
 abstract class LoggingCallback<T> extends Callback<T> {
@@ -35,7 +36,8 @@
 
     /**
      * Constructs a LoggingCallback.
-     * @param cb Wrapped Callback of any type
+     *
+     * @param cb     Wrapped Callback of any type
      * @param logger a Logger.
      */
     LoggingCallback(Callback cb, Logger logger) {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/PlayerActivity.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/PlayerActivity.java
index 4dea8351..09572b34 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/PlayerActivity.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/PlayerActivity.java
@@ -39,19 +39,19 @@ public void onCreate(Bundle savedInstanceState) {
         final PlayerItem item = (PlayerItem) getIntent().getSerializableExtra(PLAYER_ITEM);
         final View rootView = findViewById(android.R.id.content);
         playerController = new PlayerController(rootView,
-                new SwipeToDismissTouchListener.Callback(){
+                new SwipeToDismissTouchListener.Callback() {
 
-            @Override
-            public void onDismiss() {
-                PlayerActivity.this.finish();
-                overridePendingTransition(0, R.anim.tw__slide_out);
-            }
+                    @Override
+                    public void onDismiss() {
+                        PlayerActivity.this.finish();
+                        overridePendingTransition(0, R.anim.tw__slide_out);
+                    }
 
-            @Override
-            public void onMove(float translationY) {
+                    @Override
+                    public void onMove(float translationY) {
 
-            }
-        });
+                    }
+                });
         playerController.prepare(item);
     }
 
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/PlayerController.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/PlayerController.java
index b810f4b1..283a6ec4 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/PlayerController.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/PlayerController.java
@@ -52,8 +52,8 @@
 
     // Unit testing purposes
     PlayerController(View rootView, VideoView videoView, VideoControlView videoControlView,
-            ProgressBar videoProgressView, TextView callToActionView,
-            SwipeToDismissTouchListener.Callback callback) {
+                     ProgressBar videoProgressView, TextView callToActionView,
+                     SwipeToDismissTouchListener.Callback callback) {
         this.rootView = rootView;
         this.videoView = videoView;
         this.videoControlView = videoControlView;
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/QuoteTweetView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/QuoteTweetView.java
index f5f5ceae..7dc85cd0 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/QuoteTweetView.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/QuoteTweetView.java
@@ -75,6 +75,7 @@ protected void applyStyles() {
     /**
      * Returns the desired aspect ratio of the Tweet media entity according to "sizes" metadata
      * and the aspect ratio display rules.
+     *
      * @param photoEntity the first
      * @return the target image and bitmap width to height aspect ratio
      */
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ResetTweetCallback.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ResetTweetCallback.java
index 56474d41..22ea4373 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ResetTweetCallback.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ResetTweetCallback.java
@@ -32,7 +32,7 @@
     final Callback<Tweet> cb;
 
     ResetTweetCallback(BaseTweetView baseTweetView, TweetRepository tweetRepository,
-                        Callback<Tweet> cb) {
+                       Callback<Tweet> cb) {
         this.baseTweetView = baseTweetView;
         this.tweetRepository = tweetRepository;
         this.cb = cb;
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/SearchTimeline.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/SearchTimeline.java
index 6ab5f104..b8c2f454 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/SearchTimeline.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/SearchTimeline.java
@@ -63,8 +63,9 @@
     /**
      * Loads Tweets with id greater than (newer than) sinceId. If sinceId is null, loads the newest
      * Tweets.
+     *
      * @param sinceId minimum id of the Tweets to load (exclusive).
-     * @param cb callback.
+     * @param cb      callback.
      */
     @Override
     public void next(Long sinceId, Callback<TimelineResult<Tweet>> cb) {
@@ -73,8 +74,9 @@ public void next(Long sinceId, Callback<TimelineResult<Tweet>> cb) {
 
     /**
      * Loads Tweets with id less than (older than) maxId.
+     *
      * @param maxId maximum id of the Tweets to load (exclusive).
-     * @param cb callback.
+     * @param cb    callback.
      */
     @Override
     public void previous(Long maxId, Callback<TimelineResult<Tweet>> cb) {
@@ -98,6 +100,7 @@ public void previous(Long maxId, Callback<TimelineResult<Tweet>> cb) {
 
         /**
          * Constructs a SearchCallback
+         *
          * @param cb A Callback which expects a TimelineResult
          */
         SearchCallback(Callback<TimelineResult<Tweet>> cb) {
@@ -161,8 +164,9 @@ public Builder() {
 
         /**
          * Sets the query for the SearchTimeline.
+         *
          * @param query A UTF-8, URL-encoded search query of 500 characters maximum, including
-         * operators. Queries may additionally be limited by complexity.
+         *              operators. Queries may additionally be limited by complexity.
          */
         public Builder query(String query) {
             this.query = query;
@@ -171,6 +175,7 @@ public Builder query(String query) {
 
         /**
          * Sets the geocode for the SearchTimeline.
+         *
          * @param geocode Restricts query to a given geolocation
          */
         public Builder geocode(Geocode geocode) {
@@ -179,8 +184,8 @@ public Builder geocode(Geocode geocode) {
         }
 
         /**
-         *  The result_type parameter allows one to choose if the result set will be represented by
-         *  recent or popular Tweets, or a mix of both.
+         * The result_type parameter allows one to choose if the result set will be represented by
+         * recent or popular Tweets, or a mix of both.
          *
          * @param resultType possible options include recent, popular, mixed, or filtered.
          */
@@ -192,8 +197,9 @@ public Builder resultType(ResultType resultType) {
 
         /**
          * Sets the languageCode for the SearchTimeline.
+         *
          * @param languageCode Restricts tweets to the given language, given by an ISO 639-1 code.
-         * Language detection is best-effort.
+         *                     Language detection is best-effort.
          */
         public Builder languageCode(String languageCode) {
             this.lang = languageCode;
@@ -202,8 +208,9 @@ public Builder languageCode(String languageCode) {
 
         /**
          * Sets the number of Tweets returned per request for the SearchTimeline.
+         *
          * @param maxItemsPerRequest The number of tweets to return per request, up to a maximum of
-         * 100.
+         *                           100.
          */
         public Builder maxItemsPerRequest(Integer maxItemsPerRequest) {
             this.maxItemsPerRequest = maxItemsPerRequest;
@@ -223,6 +230,7 @@ public Builder untilDate(Date date) {
 
         /**
          * Builds a SearchTimeline from the Builder parameters.
+         *
          * @return a SearchTimeline.
          * @throws java.lang.IllegalStateException if query is not set (is null).
          */
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/Timeline.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/Timeline.java
index 92469409..0dc6f257 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/Timeline.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/Timeline.java
@@ -21,6 +21,7 @@
 
 /**
  * Abstracts a source of items which are bi-directionally traversable (next and previous).
+ *
  * @param <T> timeline item type
  */
 public interface Timeline<T> {
@@ -28,15 +29,17 @@
     /**
      * Loads items with position greater than (above) minPosition. If minPosition is null, loads
      * the newest items.
+     *
      * @param minPosition minimum position of the items to load (exclusive).
-     * @param cb callback.
+     * @param cb          callback.
      */
     void next(Long minPosition, final Callback<TimelineResult<T>> cb);
 
     /**
      * Loads items with position less than (below) maxId.
+     *
      * @param maxPosition maximum position of the items to load (exclusive).
-     * @param cb callback.
+     * @param cb          callback.
      */
     void previous(Long maxPosition, final Callback<TimelineResult<T>> cb);
 }
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineCursor.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineCursor.java
index 8813bed9..eb291da3 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineCursor.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineCursor.java
@@ -30,6 +30,7 @@
 
     /**
      * Constructs a TimelineCursor storing position and containsLastItem data.
+     *
      * @param minPosition the minimum position of items received or Null
      * @param maxPosition the maximum position of items received or Null
      */
@@ -41,6 +42,7 @@ public TimelineCursor(Long minPosition, Long maxPosition) {
     /**
      * Constructs a TimelineCursor by reading the maxPosition from the start item and the
      * minPosition from the last item.
+     *
      * @param items items from the maxPosition item to the minPosition item
      */
     TimelineCursor(List<? extends Identifiable> items) {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineDelegate.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineDelegate.java
index e8803cca..8f439201 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineDelegate.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineDelegate.java
@@ -30,6 +30,7 @@
 
 /**
  * TimelineDelegate manages timeline data items and loads items from a Timeline.
+ *
  * @param <T> the item type
  */
 class TimelineDelegate<T extends Identifiable> {
@@ -44,6 +45,7 @@
 
     /**
      * Constructs a TimelineDelegate with a timeline for requesting data.
+     *
      * @param timeline Timeline source
      * @throws java.lang.IllegalArgumentException if timeline is null
      */
@@ -100,6 +102,7 @@ public void previous() {
 
     /**
      * Returns the number of items in the data set.
+     *
      * @return Count of items.
      */
     public int getCount() {
@@ -113,6 +116,7 @@ public Timeline getTimeline() {
 
     /**
      * Gets the data item associated with the specified position in the data set.
+     *
      * @param position The position of the item within the adapter's data set.
      * @return The data at the specified position.
      */
@@ -125,6 +129,7 @@ public T getItem(int position) {
 
     /**
      * Gets the row id associated with the specified position in the list.
+     *
      * @param position The position of the item within the adapter's data set.
      * @return The id of the item at the specified position.
      */
@@ -136,6 +141,7 @@ public long getItemId(int position) {
     /**
      * Sets all items in the itemList with the item id to be item. If no items with the same id
      * are found, no changes are made.
+     *
      * @param item the updated item to set in the itemList
      */
     public void setItemById(T item) {
@@ -230,7 +236,7 @@ public void failure(TwitterException exception) {
     class NextCallback extends DefaultCallback {
 
         NextCallback(Callback<TimelineResult<T>> developerCb,
-                TimelineStateHolder timelineStateHolder) {
+                     TimelineStateHolder timelineStateHolder) {
             super(developerCb, timelineStateHolder);
         }
 
@@ -256,7 +262,7 @@ public void success(Result<TimelineResult<T>> result) {
     class RefreshCallback extends NextCallback {
 
         RefreshCallback(Callback<TimelineResult<T>> developerCb,
-                TimelineStateHolder timelineStateHolder) {
+                        TimelineStateHolder timelineStateHolder) {
             super(developerCb, timelineStateHolder);
         }
 
@@ -294,6 +300,7 @@ public void success(Result<TimelineResult<T>> result) {
 
     /**
      * Registers an observer that is called when changes happen to the managed data items.
+     *
      * @param observer The object that will be notified when the data set changes.
      */
     public void registerDataSetObserver(DataSetObserver observer) {
@@ -303,6 +310,7 @@ public void registerDataSetObserver(DataSetObserver observer) {
     /**
      * Unregister an observer that has previously been registered via
      * registerDataSetObserver(DataSetObserver).
+     *
      * @param observer The object to unregister.
      */
     public void unregisterDataSetObserver(DataSetObserver observer) {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineListAdapter.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineListAdapter.java
index 027e6244..31724de1 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineListAdapter.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineListAdapter.java
@@ -34,7 +34,8 @@
 
     /**
      * Constructs a TimelineListAdapter for the given Timeline.
-     * @param context the context for row views.
+     *
+     * @param context  the context for row views.
      * @param timeline a Timeline providing access to timeline data items.
      * @throws java.lang.IllegalArgumentException if context or timeline is null
      */
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineResult.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineResult.java
index b8c16d78..8446434d 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineResult.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TimelineResult.java
@@ -21,6 +21,7 @@
 
 /**
  * TimelineResult represents timeline items and the TimelineCursor from a Timeline response.
+ *
  * @param <T> timeline item type
  */
 public class TimelineResult<T> {
@@ -30,8 +31,9 @@
 
     /**
      * Constructs a TimelineResult storing item and cursor data.
+     *
      * @param timelineCursor cursor representing position and containsLastItem data
-     * @param items timeline items
+     * @param items          timeline items
      */
     public TimelineResult(TimelineCursor timelineCursor, List<T> items) {
         this.timelineCursor = timelineCursor;
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ToggleImageButton.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ToggleImageButton.java
index 51bbd12c..536e694f 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ToggleImageButton.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ToggleImageButton.java
@@ -24,10 +24,10 @@
 
 /**
  * Display on/off states (ie: Favorite or Retweet action buttons) as an {@link ImageButton}.
- *
+ * <p>
  * The content description for the on and off states is defined by using the
  * {@code twitter:contentDescriptionOn} and {@code twitter:contentDescriptionOff} attributes.
- *
+ * <p>
  * By default the button will be toggled when clicked. This behaviour can be prevented by setting
  * the {@code twitter:toggleOnClick} attribute to false.
  *
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetDateUtils.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetDateUtils.java
index 506a4856..49157640 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetDateUtils.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetDateUtils.java
@@ -18,7 +18,6 @@
 package com.twitter.sdk.android.tweetui;
 
 import android.content.res.Resources;
-import android.support.v4.util.SparseArrayCompat;
 import android.text.format.DateUtils;
 
 import java.text.DateFormat;
@@ -28,6 +27,8 @@
 import java.util.Date;
 import java.util.Locale;
 
+import androidx.collection.SparseArrayCompat;
+
 // Cribbed from twitter-android-internal, renamed and formatted to our standards
 // methods here should only be accessed on the main thread
 final class TweetDateUtils {
@@ -37,7 +38,8 @@
     static final DateFormatter RELATIVE_DATE_FORMAT = new DateFormatter();
     static final long INVALID_DATE = -1;
 
-    private TweetDateUtils() {}
+    private TweetDateUtils() {
+    }
 
     static long apiTimeToLong(String apiTime) {
         if (apiTime == null) return INVALID_DATE;
@@ -65,9 +67,9 @@ static String dotPrefix(String timestamp) {
      * time state. If a timestamp is in the future we return it as an absolute date string. Within
      * the same second we return 0s
      *
-     * @param res resource
+     * @param res               resource
      * @param currentTimeMillis timestamp for offset
-     * @param timestamp timestamp
+     * @param timestamp         timestamp
      * @return the relative time string
      */
     static String getRelativeTimeString(Resources res, long currentTimeMillis, long timestamp) {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetLinkClickListener.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetLinkClickListener.java
index b1ab0e6a..b058ce3b 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetLinkClickListener.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetLinkClickListener.java
@@ -25,8 +25,9 @@
 public interface TweetLinkClickListener {
     /**
      * Called when URL clicked.
+     *
      * @param tweet The Tweet that was clicked.
-     * @param url The URL that was clicked.
+     * @param url   The URL that was clicked.
      */
     void onLinkClick(Tweet tweet, String url);
 }
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetMediaClickListener.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetMediaClickListener.java
index 9a629a3f..9139db00 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetMediaClickListener.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetMediaClickListener.java
@@ -27,7 +27,8 @@
 
     /**
      * Called when media clicked.
-     * @param tweet The Tweet that was clicked.
+     *
+     * @param tweet  The Tweet that was clicked.
      * @param entity The entity that was clicked.
      */
     void onMediaEntityClick(Tweet tweet, MediaEntity entity);
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetRepository.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetRepository.java
index d91adaec..2e7e9851 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetRepository.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetRepository.java
@@ -18,7 +18,6 @@
 package com.twitter.sdk.android.tweetui;
 
 import android.os.Handler;
-import android.support.v4.util.LruCache;
 import android.text.TextUtils;
 
 import com.twitter.sdk.android.core.Callback;
@@ -33,6 +32,8 @@
 
 import java.util.List;
 
+import androidx.collection.LruCache;
+
 
 /**
  * Encapsulates Tweet API access. Tweet loads are read through a thread safe LruCache.
@@ -55,7 +56,7 @@
 
     // Testing only
     TweetRepository(Handler mainHandler, SessionManager<TwitterSession> userSessionManagers,
-            TwitterCore twitterCore) {
+                    TwitterCore twitterCore) {
         this.twitterCore = twitterCore;
         this.mainHandler = mainHandler;
         this.userSessionManagers = userSessionManagers;
@@ -67,7 +68,7 @@
      * This method will cache formatted tweet values to ensure we don't slow down rendering
      *
      * @param tweet the Tweet that will be formatted
-     * @return      the formatted values suitable for display, can be null
+     * @return the formatted values suitable for display, can be null
      */
     FormattedTweetText formatTweetText(final Tweet tweet) {
         if (tweet == null) return null;
@@ -90,8 +91,9 @@ void updateCache(final Tweet tweet) {
 
     /**
      * Callable on the main thread.
+     *
      * @param tweet Tweet to deliver to the client in a Result
-     * @param cb the developer callback
+     * @param cb    the developer callback
      */
     private void deliverTweet(final Tweet tweet, final Callback<Tweet> cb) {
         if (cb == null) return;
@@ -151,8 +153,9 @@ void getUserSession(final Callback<TwitterSession> cb) {
      * Queues and loads a Tweet from the API statuses/show endpoint. Queue ensures a client with
      * at least guest auth is obtained before performing the request. Adds the the Tweet from the
      * response to the cache and provides the Tweet to the callback success method.
+     *
      * @param tweetId Tweet id
-     * @param cb callback
+     * @param cb      callback
      */
     void loadTweet(final long tweetId, final Callback<Tweet> cb) {
         final Tweet cachedTweet = tweetCache.get(tweetId);
@@ -170,8 +173,9 @@ void loadTweet(final long tweetId, final Callback<Tweet> cb) {
      * Queues and loads multiple Tweets from the API lookup endpoint. Queue ensures a client with
      * at least guest auth is obtained before performing the request. Orders the Tweets from the
      * response and provides them to the callback success method.
+     *
      * @param tweetIds list of Tweet ids
-     * @param cb callback
+     * @param cb       callback
      */
     void loadTweets(final List<Long> tweetIds, final Callback<List<Tweet>> cb) {
         final String commaSepIds = TextUtils.join(",", tweetIds);
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTextLinkifier.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTextLinkifier.java
index 572759ad..f046dbb6 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTextLinkifier.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTextLinkifier.java
@@ -38,20 +38,21 @@
     static final Pattern VINE_URL =
             Pattern.compile("^https?://vine\\.co(/#!)?/v/\\w+$");
 
-    private TweetTextLinkifier() {}
+    private TweetTextLinkifier() {
+    }
 
     /**
      * Returns a charSequence with the display urls substituted in place of the t.co links. It will
      * strip off the last photo entity, quote Tweet, and Vine card urls in the text. The return
      * value can be set directly onto a text view.
      *
-     * @param tweetText             The formatted and adjusted tweet wrapper
-     * @param linkListener          A listener to handle link clicks
-     * @param linkColor             The link color
-     * @param linkHighlightColor    The link background color when pressed
-     * @param stripQuoteTweet       If true we should strip the quote Tweet URL
-     * @param stripVineCard         If true we should strip the Vine card URL
-     * @return                      The Tweet text with displayUrls substituted in
+     * @param tweetText          The formatted and adjusted tweet wrapper
+     * @param linkListener       A listener to handle link clicks
+     * @param linkColor          The link color
+     * @param linkHighlightColor The link background color when pressed
+     * @param stripQuoteTweet    If true we should strip the quote Tweet URL
+     * @param stripVineCard      If true we should strip the Vine card URL
+     * @return The Tweet text with displayUrls substituted in
      */
     static CharSequence linkifyUrls(FormattedTweetText tweetText,
                                     final LinkClickListener linkListener,
@@ -104,11 +105,11 @@ static CharSequence trimEnd(CharSequence charSequence) {
      *
      * @param urls  Expected to be non-null
      * @param media Can be null
-     * @return      Combined and sorted list of urls and media
+     * @return Combined and sorted list of urls and media
      */
     static List<FormattedUrlEntity> mergeAndSortEntities(final List<FormattedUrlEntity> urls,
-            final List<FormattedMediaEntity> media, final List<FormattedUrlEntity> hashtags,
-            final List<FormattedUrlEntity> mentions, final List<FormattedUrlEntity> symbols) {
+                                                         final List<FormattedMediaEntity> media, final List<FormattedUrlEntity> hashtags,
+                                                         final List<FormattedUrlEntity> mentions, final List<FormattedUrlEntity> symbols) {
         final ArrayList<FormattedUrlEntity> combined = new ArrayList<>(urls);
         combined.addAll(media);
         combined.addAll(hashtags);
@@ -137,10 +138,10 @@ static CharSequence trimEnd(CharSequence charSequence) {
      * @param linkHighlightColor The link background color when pressed
      */
     private static void addUrlEntities(final SpannableStringBuilder spannable,
-            final List<FormattedUrlEntity> entities,
-            final FormattedUrlEntity strippedEntity,
-            final LinkClickListener linkListener,
-            final int linkColor, final int linkHighlightColor) {
+                                       final List<FormattedUrlEntity> entities,
+                                       final FormattedUrlEntity strippedEntity,
+                                       final LinkClickListener linkListener,
+                                       final int linkColor, final int linkHighlightColor) {
         if (entities == null || entities.isEmpty()) return;
 
         int offset = 0;
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTextUtils.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTextUtils.java
index 0d042f5f..09f15223 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTextUtils.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTextUtils.java
@@ -32,14 +32,15 @@
 
 final class TweetTextUtils {
 
-    private TweetTextUtils() {}
+    private TweetTextUtils() {
+    }
 
     /**
      * Should not be called directly outside of TweetRepository, the return value should be cached
      * or memoized.
      *
      * @param tweet The tweet to format
-     * @return      The formatted Tweet text
+     * @return The formatted Tweet text
      */
     static FormattedTweetText formatTweetText(Tweet tweet) {
         if (tweet == null) return null;
@@ -56,7 +57,7 @@ static FormattedTweetText formatTweetText(Tweet tweet) {
      * Populates the list of formatted entities within the formattedTweetText.
      *
      * @param formattedTweetText The formatted tweet text that is to be populated
-     * @param tweet The source Tweet
+     * @param tweet              The source Tweet
      */
     static void convertEntities(FormattedTweetText formattedTweetText, Tweet tweet) {
         if (tweet.entities == null) return;
@@ -111,7 +112,7 @@ static void convertEntities(FormattedTweetText formattedTweetText, Tweet tweet)
      * emoji/supplementary characters.
      *
      * @param formattedTweetText The formatted tweet text that is to be populated
-     * @param tweet The source Tweet
+     * @param tweet              The source Tweet
      */
     static void format(FormattedTweetText formattedTweetText, Tweet tweet) {
         if (TextUtils.isEmpty(tweet.text)) return;
@@ -134,7 +135,7 @@ static void format(FormattedTweetText formattedTweetText, Tweet tweet) {
      * them as necessary.
      *
      * @param entities The entities that need to be adjusted
-     * @param indices The indices of where there were escaped html chars that we unescaped
+     * @param indices  The indices of where there were escaped html chars that we unescaped
      */
     static void adjustIndicesForEscapedChars(
             List<? extends FormattedUrlEntity> entities,
@@ -172,7 +173,7 @@ static void adjustIndicesForEscapedChars(
                 }
             }
             // Once we've accumulated diffs, calc the offset
-            entity.start = entity.start  - (diff + inDiff);
+            entity.start = entity.start - (diff + inDiff);
             entity.end = entity.end - (diff + inDiff);
         }
     }
@@ -182,11 +183,11 @@ static void adjustIndicesForEscapedChars(
      * UTF-8 (ones outside of U+0000 to U+FFFF range) are represented as a pair of char values, the
      * first from the high-surrogates range, and the second from the low-surrogates range.
      *
-     * @param content The content of the tweet
+     * @param content            The content of the tweet
      * @param formattedTweetText The formatted tweet text with entities that we need to adjust
      */
     static void adjustIndicesForSupplementaryChars(StringBuilder content,
-            FormattedTweetText formattedTweetText) {
+                                                   FormattedTweetText formattedTweetText) {
         final List<Integer> highSurrogateIndices = new ArrayList<>();
         final int len = content.length() - 1;
         for (int i = 0; i < len; ++i) {
@@ -208,10 +209,10 @@ static void adjustIndicesForSupplementaryChars(StringBuilder content,
      * runtime.
      *
      * @param entities The entities that need to be adjusted
-     * @param indices The indices in the string where there are supplementary chars
+     * @param indices  The indices in the string where there are supplementary chars
      */
     static void adjustEntitiesWithOffsets(List<? extends FormattedUrlEntity> entities,
-            List<Integer> indices) {
+                                          List<Integer> indices) {
         if (entities == null || indices == null) return;
         for (FormattedUrlEntity entity : entities) {
             // find all indices <= start and update offsets by that much
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTimelineListAdapter.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTimelineListAdapter.java
index 1e31faa5..4c2c0ee3 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTimelineListAdapter.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTimelineListAdapter.java
@@ -36,7 +36,8 @@
 
     /**
      * Constructs a TweetTimelineListAdapter for the given Tweet Timeline.
-     * @param context the context for row views.
+     *
+     * @param context  the context for row views.
      * @param timeline a Timeline&lt;Tweet&gt; providing access to Tweet data items.
      * @throws java.lang.IllegalArgumentException if context is null
      */
@@ -118,6 +119,7 @@ public void failure(TwitterException exception) {
 
         /**
          * Constructs a Builder.
+         *
          * @param context Context for Tweet views.
          */
         public Builder(Context context) {
@@ -126,6 +128,7 @@ public Builder(Context context) {
 
         /**
          * Sets the Tweet timeline data source.
+         *
          * @param timeline Timeline of Tweets
          */
         public Builder setTimeline(Timeline<Tweet> timeline) {
@@ -135,6 +138,7 @@ public Builder setTimeline(Timeline<Tweet> timeline) {
 
         /**
          * Sets the Tweet view style by resource id.
+         *
          * @param styleResId resource id of the Tweet view style
          */
         public Builder setViewStyle(int styleResId) {
@@ -144,6 +148,7 @@ public Builder setViewStyle(int styleResId) {
 
         /**
          * Sets the callback to call when a Tweet action is performed on a Tweet view.
+         *
          * @param actionCallback called when a Tweet action is performed.
          */
         public Builder setOnActionCallback(Callback<Tweet> actionCallback) {
@@ -153,6 +158,7 @@ public Builder setOnActionCallback(Callback<Tweet> actionCallback) {
 
         /**
          * Sets the TimelineFilter used to filter tweets from timeline.
+         *
          * @param timelineFilter timelineFilter for timeline
          */
         public Builder setTimelineFilter(TimelineFilter timelineFilter) {
@@ -162,6 +168,7 @@ public Builder setTimelineFilter(TimelineFilter timelineFilter) {
 
         /**
          * Builds a TweetTimelineListAdapter from Builder parameters.
+         *
          * @return a TweetTimelineListAdpater
          */
         public TweetTimelineListAdapter build() {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTimelineRecyclerViewAdapter.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTimelineRecyclerViewAdapter.java
index c9ab6ad1..76b86fc4 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTimelineRecyclerViewAdapter.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetTimelineRecyclerViewAdapter.java
@@ -19,7 +19,6 @@
 
 import android.content.Context;
 import android.database.DataSetObserver;
-import android.support.v7.widget.RecyclerView;
 import android.view.ViewGroup;
 
 import com.twitter.sdk.android.core.Callback;
@@ -28,6 +27,8 @@
 import com.twitter.sdk.android.core.models.Tweet;
 import com.twitter.sdk.android.core.models.TweetBuilder;
 
+import androidx.recyclerview.widget.RecyclerView;
+
 /**
  * TweetTimelineRecyclerViewAdapter is a RecyclerView adapter which can provide Timeline Tweets to
  * RecyclerViews.
@@ -45,7 +46,7 @@
     /**
      * Constructs a TweetTimelineRecyclerViewAdapter for a RecyclerView implementation of a timeline
      *
-     * @param context the context for row views.
+     * @param context  the context for row views.
      * @param timeline a Timeline&lt;Tweet&gt; providing access to Tweet data items.
      * @throws java.lang.IllegalArgumentException if context is null
      */
@@ -184,6 +185,7 @@ public void failure(TwitterException exception) {
 
         /**
          * Constructs a Builder.
+         *
          * @param context Context for Tweet views.
          */
         public Builder(Context context) {
@@ -192,6 +194,7 @@ public Builder(Context context) {
 
         /**
          * Sets the Tweet timeline data source.
+         *
          * @param timeline Timeline of Tweets
          */
         public TweetTimelineRecyclerViewAdapter.Builder setTimeline(Timeline<Tweet> timeline) {
@@ -201,6 +204,7 @@ public Builder(Context context) {
 
         /**
          * Sets the Tweet view style by resource id.
+         *
          * @param styleResId resource id of the Tweet view style
          */
         public TweetTimelineRecyclerViewAdapter.Builder setViewStyle(int styleResId) {
@@ -210,6 +214,7 @@ public Builder(Context context) {
 
         /**
          * Sets the callback to call when a Tweet action is performed on a Tweet view.
+         *
          * @param actionCallback called when a Tweet action is performed.
          */
         public TweetTimelineRecyclerViewAdapter.Builder setOnActionCallback(
@@ -220,6 +225,7 @@ public Builder(Context context) {
 
         /**
          * Sets the TimelineFilter used to filter tweets from timeline.
+         *
          * @param timelineFilter timelineFilter for timeline
          */
         public TweetTimelineRecyclerViewAdapter.Builder setTimelineFilter(
@@ -230,6 +236,7 @@ public Builder(Context context) {
 
         /**
          * Builds a TweetTimelineRecyclerViewAdapter from Builder parameters.
+         *
          * @return a TweetTimelineListAdpater
          */
         public TweetTimelineRecyclerViewAdapter build() {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetUi.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetUi.java
index e7b129b7..f4e39494 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetUi.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetUi.java
@@ -63,7 +63,7 @@ public static TweetUi getInstance() {
         guestSessionProvider = twitterCore.getGuestSessionProvider();
         tweetRepository = new TweetRepository(new Handler(Looper.getMainLooper()),
                 twitterCore.getSessionManager());
-        imageLoader = Picasso.with(Twitter.getInstance().getContext(getIdentifier()));
+        imageLoader = Picasso.get();
     }
 
     public String getIdentifier() {
@@ -71,7 +71,7 @@ public String getIdentifier() {
     }
 
     public String getVersion() {
-        return BuildConfig.VERSION_NAME + "." + BuildConfig.BUILD_NUMBER;
+        return BuildConfig.VERSION_NAME;
     }
 
     TweetRepository getTweetRepository() {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetUtils.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetUtils.java
index 9a02c850..d8599f9e 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetUtils.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetUtils.java
@@ -42,12 +42,14 @@
     private static final String SYMBOL_URL = TWITTER_URL + "search?q=%%24%s&" + TWITTER_KIT_REF;
     static final String LOAD_TWEET_DEBUG = "loadTweet failure for Tweet Id %d.";
 
-    private TweetUtils() {}
+    private TweetUtils() {
+    }
 
     /**
      * Loads a single Tweet by id.
+     *
      * @param tweetId Tweet id
-     * @param cb callback
+     * @param cb      callback
      */
     public static void loadTweet(final long tweetId, final Callback<Tweet> cb) {
         TweetUi.getInstance().getTweetRepository().loadTweet(tweetId,
@@ -63,8 +65,9 @@ public void success(Result<Tweet> result) {
 
     /**
      * Loads a List of Tweets by id. Returns Tweets in the order requested.
+     *
      * @param tweetIds List of Tweet ids
-     * @param cb callback
+     * @param cb       callback
      */
     public static void loadTweets(final List<Long> tweetIds, final Callback<List<Tweet>> cb) {
         TweetUi.getInstance().getTweetRepository().loadTweets(tweetIds,
@@ -92,6 +95,7 @@ static boolean isTweetResolvable(Tweet tweet) {
     /**
      * Returns the Tweet which should be displayed in a TweetView. If the given Tweet is a retweet,
      * the embedded retweetedStatus Tweet is returned.
+     *
      * @param tweet A tweet from the API
      * @return either the tweet argument or the Tweet in the retweetedStatus field
      */
@@ -118,7 +122,7 @@ static boolean showQuoteTweet(Tweet tweet) {
      *
      * @param screenName The screen name to build the url with
      * @param tweetId    The id to build the url with
-     * @return           Can be null, otherwise a resolvable permalink to a Tweet.
+     * @return Can be null, otherwise a resolvable permalink to a Tweet.
      */
     static Uri getPermalink(String screenName, long tweetId) {
         if (tweetId <= 0) {
@@ -133,11 +137,12 @@ static Uri getPermalink(String screenName, long tweetId) {
         }
         return Uri.parse(permalink);
     }
+
     /**
      * Builds a permalink for the profile of a given screen name
      *
      * @param screenName The screen name to build the url with
-     * @return           Can be null, otherwise a resolvable permalink to a Profile.
+     * @return Can be null, otherwise a resolvable permalink to a Profile.
      */
     static String getProfilePermalink(String screenName) {
         final String permalink;
@@ -151,6 +156,7 @@ static String getProfilePermalink(String screenName) {
 
     /**
      * Builds a permalink for a hashtag entity
+     *
      * @param text
      * @return Formatted url string
      */
@@ -160,6 +166,7 @@ static String getHashtagPermalink(String text) {
 
     /**
      * Builds a permalink for a symbol entity
+     *
      * @param text
      * @return Formatted url string
      */
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetView.java
index 9dad2e04..aed2e033 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetView.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TweetView.java
@@ -56,6 +56,7 @@ protected int getLayout() {
      * Render the Tweet by updating the subviews. For any data that is missing from the Tweet,
      * invalidate the subview value (e.g. text views set to empty string) for view recycling.
      * Do not call with render true until inflation has completed.
+     *
      * @throws IllegalArgumentException
      */
     @Override
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TwitterListTimeline.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TwitterListTimeline.java
index d53ee3d1..dd0bcd24 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TwitterListTimeline.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/TwitterListTimeline.java
@@ -38,7 +38,7 @@
     final Boolean includeRetweets;
 
     TwitterListTimeline(TwitterCore twitterCore, Long listId, String slug, Long ownerId,
-        String ownerScreenName, Integer maxItemsPerRequest, Boolean includeRetweets) {
+                        String ownerScreenName, Integer maxItemsPerRequest, Boolean includeRetweets) {
         this.twitterCore = twitterCore;
         this.listId = listId;
         this.slug = slug;
@@ -51,8 +51,9 @@
     /**
      * Loads Tweets with id greater than (newer than) sinceId. If sinceId is null, loads the newest
      * Tweets.
+     *
      * @param sinceId minimum id of the Tweets to load (exclusive).
-     * @param cb callback.
+     * @param cb      callback.
      */
     @Override
     public void next(Long sinceId, Callback<TimelineResult<Tweet>> cb) {
@@ -61,8 +62,9 @@ public void next(Long sinceId, Callback<TimelineResult<Tweet>> cb) {
 
     /**
      * Loads Tweets with id less than (older than) maxId.
+     *
      * @param maxId maximum id of the Tweets to load (exclusive).
-     * @param cb callback.
+     * @param cb    callback.
      */
     @Override
     public void previous(Long maxId, Callback<TimelineResult<Tweet>> cb) {
@@ -103,6 +105,7 @@ public Builder() {
 
         /**
          * Sets the id for the Twitter List to get Tweets from.
+         *
          * @param id The ID of the Tweet list to get Tweets from.
          */
         public Builder id(Long id) {
@@ -112,7 +115,8 @@ public Builder id(Long id) {
 
         /**
          * Sets the List slug name and owner id for the TwitterListTimeline.
-         * @param slug The list slug name (e.g. 'textile-engineers').
+         *
+         * @param slug    The list slug name (e.g. 'textile-engineers').
          * @param ownerId The list owner Twitter user id.
          */
         public Builder slugWithOwnerId(String slug, Long ownerId) {
@@ -123,7 +127,8 @@ public Builder slugWithOwnerId(String slug, Long ownerId) {
 
         /**
          * Sets the slug name and owner screen name for the TwitterListTimeline.
-         * @param slug The list slug name (e.g. "textile-engineers").
+         *
+         * @param slug            The list slug name (e.g. "textile-engineers").
          * @param ownerScreenName The list owner screen name (e.g. "twitterdev").
          */
         public Builder slugWithOwnerScreenName(String slug, String ownerScreenName) {
@@ -134,6 +139,7 @@ public Builder slugWithOwnerScreenName(String slug, String ownerScreenName) {
 
         /**
          * Sets the number of Tweets returned per request for the TwitterListTimeline.
+         *
          * @param maxItemsPerRequest The number of tweets to return per request.
          */
         public Builder maxItemsPerRequest(Integer maxItemsPerRequest) {
@@ -143,9 +149,10 @@ public Builder maxItemsPerRequest(Integer maxItemsPerRequest) {
 
         /**
          * Sets whether to includeRetweets for the TwitterListTimeline. Defaults to true.
+         *
          * @param includeRetweets When set to false, the timeline will strip any native retweets
-         * (though they will still count toward both the maximal length of the timeline and the
-         * slice selected by the count parameter).
+         *                        (though they will still count toward both the maximal length of the timeline and the
+         *                        slice selected by the count parameter).
          */
         public Builder includeRetweets(Boolean includeRetweets) {
             this.includeRetweets = includeRetweets;
@@ -154,6 +161,7 @@ public Builder includeRetweets(Boolean includeRetweets) {
 
         /**
          * Builds a TwitterListTimeline from the Builder parameters.
+         *
          * @return a TwitterListTimeline.
          * @throws java.lang.IllegalStateException if id or slug/owner pair is not set.
          */
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/UserTimeline.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/UserTimeline.java
index 81ab4c12..aacf3ea9 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/UserTimeline.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/UserTimeline.java
@@ -50,8 +50,9 @@
     /**
      * Loads Tweets with id greater than (newer than) sinceId. If sinceId is null, loads the newest
      * Tweets.
+     *
      * @param sinceId minimum id of the Tweets to load (exclusive).
-     * @param cb callback.
+     * @param cb      callback.
      */
     @Override
     public void next(Long sinceId, Callback<TimelineResult<Tweet>> cb) {
@@ -60,8 +61,9 @@ public void next(Long sinceId, Callback<TimelineResult<Tweet>> cb) {
 
     /**
      * Loads Tweets with id less than (older than) maxId.
+     *
      * @param maxId maximum id of the Tweets to load (exclusive).
-     * @param cb callback.
+     * @param cb    callback.
      */
     @Override
     public void previous(Long maxId, Callback<TimelineResult<Tweet>> cb) {
@@ -101,6 +103,7 @@ public Builder() {
 
         /**
          * Sets the userId for the UserTimeline.
+         *
          * @param userId The ID of the user for whom to return results for.
          */
         public Builder userId(Long userId) {
@@ -110,6 +113,7 @@ public Builder userId(Long userId) {
 
         /**
          * Sets the screenName for the UserTimeline.
+         *
          * @param screenName The screen name of the user for whom to return results for.
          */
         public Builder screenName(String screenName) {
@@ -119,8 +123,9 @@ public Builder screenName(String screenName) {
 
         /**
          * Sets the number of Tweets returned per request for the UserTimeline.
+         *
          * @param maxItemsPerRequest The number of tweets to return per request, up to a maximum of
-         * 200.
+         *                           200.
          */
         public Builder maxItemsPerRequest(Integer maxItemsPerRequest) {
             this.maxItemsPerRequest = maxItemsPerRequest;
@@ -129,8 +134,9 @@ public Builder maxItemsPerRequest(Integer maxItemsPerRequest) {
 
         /**
          * Sets whether to includeReplies for the UserTimeline. Defaults to false.
+         *
          * @param includeReplies true to allow replies to be included in the returned timeline
-         * result.
+         *                       result.
          */
         public Builder includeReplies(Boolean includeReplies) {
             this.includeReplies = includeReplies;
@@ -139,9 +145,10 @@ public Builder includeReplies(Boolean includeReplies) {
 
         /**
          * Sets whether to includeRetweets for the UserTimeline. Defaults to true.
+         *
          * @param includeRetweets When set to false, the timeline will strip any native retweets
-         * (though they will still count toward both the maximal length of the timeline and the
-         * slice selected by the count parameter).
+         *                        (though they will still count toward both the maximal length of the timeline and the
+         *                        slice selected by the count parameter).
          */
         public Builder includeRetweets(Boolean includeRetweets) {
             this.includeRetweets = includeRetweets;
@@ -150,6 +157,7 @@ public Builder includeRetweets(Boolean includeRetweets) {
 
         /**
          * Builds a UserTimeline from the Builder parameters.
+         *
          * @return a UserTimeline.
          */
         public UserTimeline build() {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/Utils.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/Utils.java
index f0cdfc27..eb5a388d 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/Utils.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/Utils.java
@@ -24,7 +24,8 @@
 import java.util.List;
 
 final class Utils {
-    private Utils() {}
+    private Utils() {
+    }
 
     static Long numberOrDefault(String candidate, long defaultLong) {
         try {
@@ -53,16 +54,17 @@ static CharSequence charSeqOrDefault(CharSequence candidate, CharSequence defaul
     /**
      * Orders tweets by the tweetIds order. If tweetIds contains duplicates, the result Tweet list
      * will duplicate Tweets accordingly.
+     *
      * @param tweetIds ordered list of Tweet ids
-     * @param tweets unordered list of Tweet results
+     * @param tweets   unordered list of Tweet results
      */
     static List<Tweet> orderTweets(List<Long> tweetIds, List<Tweet> tweets) {
         final HashMap<Long, Tweet> idToTweet = new HashMap<>();
         final ArrayList<Tweet> ordered = new ArrayList<>();
-        for (Tweet tweet: tweets) {
+        for (Tweet tweet : tweets) {
             idToTweet.put(tweet.id, tweet);
         }
-        for (Long id: tweetIds) {
+        for (Long id : tweetIds) {
             if (idToTweet.containsKey(id)) {
                 ordered.add(idToTweet.get(id));
             }
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/AspectRatioFrameLayout.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/AspectRatioFrameLayout.java
index 9ca3c3bb..11a75d3e 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/AspectRatioFrameLayout.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/AspectRatioFrameLayout.java
@@ -75,26 +75,26 @@ protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
         final int horizontalPadding = getPaddingLeft() + getPaddingRight();
         final int verticalPadding = getPaddingBottom() + getPaddingTop();
 
-       if (dimensionToAdjust == ADJUST_DIMENSION_HEIGHT) {
-           if (View.MeasureSpec.getMode(widthMeasureSpec) == View.MeasureSpec.EXACTLY) {
-               width = View.MeasureSpec.getSize(widthMeasureSpec) - horizontalPadding;
-           } else {
-               super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-               width = getMeasuredWidth() - horizontalPadding;
-           }
-           height = (int) (width / aspectRatio);
-       } else {
-           if (MeasureSpec.getMode(heightMeasureSpec) == MeasureSpec.EXACTLY) {
-               height = MeasureSpec.getSize(heightMeasureSpec) - verticalPadding;
-           } else {
-               super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-               height = getMeasuredHeight() - verticalPadding;
-           }
-           width = (int) (height * aspectRatio);
-       }
+        if (dimensionToAdjust == ADJUST_DIMENSION_HEIGHT) {
+            if (View.MeasureSpec.getMode(widthMeasureSpec) == View.MeasureSpec.EXACTLY) {
+                width = View.MeasureSpec.getSize(widthMeasureSpec) - horizontalPadding;
+            } else {
+                super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+                width = getMeasuredWidth() - horizontalPadding;
+            }
+            height = (int) (width / aspectRatio);
+        } else {
+            if (MeasureSpec.getMode(heightMeasureSpec) == MeasureSpec.EXACTLY) {
+                height = MeasureSpec.getSize(heightMeasureSpec) - verticalPadding;
+            } else {
+                super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+                height = getMeasuredHeight() - verticalPadding;
+            }
+            width = (int) (height * aspectRatio);
+        }
 
         super.onMeasure(
-            View.MeasureSpec.makeMeasureSpec(width + horizontalPadding, View.MeasureSpec.EXACTLY),
-            View.MeasureSpec.makeMeasureSpec(height + verticalPadding, View.MeasureSpec.EXACTLY));
+                View.MeasureSpec.makeMeasureSpec(width + horizontalPadding, View.MeasureSpec.EXACTLY),
+                View.MeasureSpec.makeMeasureSpec(height + verticalPadding, View.MeasureSpec.EXACTLY));
     }
 }
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/GalleryImageView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/GalleryImageView.java
index 38e4e2da..a69e4cbc 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/GalleryImageView.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/GalleryImageView.java
@@ -66,7 +66,7 @@ public void onBitmapLoaded(Bitmap bitmap, Picasso.LoadedFrom from) {
     }
 
     @Override
-    public void onBitmapFailed(Drawable errorDrawable) {
+    public void onBitmapFailed(Exception e, Drawable errorDrawable) {
 
     }
 
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/MediaTimeUtils.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/MediaTimeUtils.java
index 1edfedd7..88ff9c80 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/MediaTimeUtils.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/MediaTimeUtils.java
@@ -23,7 +23,8 @@
     private static final String TIME_FORMAT_LONG = "%1$d:%2$02d:%3$02d";
     private static final String TIME_FORMAT_SHORT = "%1$d:%2$02d";
 
-    private MediaTimeUtils() {}
+    private MediaTimeUtils() {
+    }
 
     static String getPlaybackTime(long timeMillis) {
         final int timeSeconds = (int) (timeMillis / 1000);
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/SpanClickHandler.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/SpanClickHandler.java
index 8c6239d8..21f86e6d 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/SpanClickHandler.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/SpanClickHandler.java
@@ -62,6 +62,7 @@ public SpanClickHandler(View view, Layout layout) {
     /**
      * Takes a motion event from the processing view and check for clicks on
      * any of the clickable spans in the layout.
+     *
      * @param event The motion event.
      * @return true if the event has been handled.
      */
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/SwipeToDismissTouchListener.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/SwipeToDismissTouchListener.java
index 9c23d129..be887bd6 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/SwipeToDismissTouchListener.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/SwipeToDismissTouchListener.java
@@ -46,7 +46,7 @@ public static SwipeToDismissTouchListener createFromView(View view, Callback lis
     }
 
     SwipeToDismissTouchListener(Callback listener, int touchSlop, float maxTranslate,
-            float closeThreshold) {
+                                float closeThreshold) {
         setCallback(listener);
         this.touchSlop = touchSlop;
         this.maxTranslate = maxTranslate;
@@ -100,7 +100,7 @@ boolean handleTouchEvent(View swipeableView, MotionEvent event) {
                 }
                 break;
             }
-            case MotionEvent.ACTION_POINTER_DOWN:{
+            case MotionEvent.ACTION_POINTER_DOWN: {
                 settleView(swipeableView);
                 isMoving = false;
                 pointerIndex = -1; // invalidate pointer index until next ACTION_DOWN
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/TweetMediaUtils.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/TweetMediaUtils.java
index b081f679..f0739325 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/TweetMediaUtils.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/TweetMediaUtils.java
@@ -141,7 +141,7 @@ static boolean isVideoType(MediaEntity mediaEntity) {
     public static boolean isLooping(MediaEntity mediaEntity) {
         return GIF_TYPE.equals(mediaEntity.type) ||
                 VIDEO_TYPE.endsWith(mediaEntity.type) &&
-                mediaEntity.videoInfo.durationMillis < LOOP_VIDEO_IN_MILLIS;
+                        mediaEntity.videoInfo.durationMillis < LOOP_VIDEO_IN_MILLIS;
     }
 
     public static boolean showVideoControls(MediaEntity mediaEntity) {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/TweetMediaView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/TweetMediaView.java
index 861f0356..010cd102 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/TweetMediaView.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/TweetMediaView.java
@@ -59,7 +59,7 @@
     private final RectF rect = new RectF();
     private final int mediaDividerSize;
     private int imageCount;
-    final float [] radii = new float[8];
+    final float[] radii = new float[8];
     int mediaBgColor = Color.BLACK;
     int photoErrorResId;
     final DependencyProvider dependencyProvider;
@@ -78,7 +78,7 @@ public TweetMediaView(Context context, AttributeSet attrs) {
     TweetMediaView(Context context, AttributeSet attrs, DependencyProvider dependencyProvider) {
         super(context, attrs);
 
-        this.dependencyProvider =  dependencyProvider;
+        this.dependencyProvider = dependencyProvider;
         mediaDividerSize = getResources().getDimensionPixelSize
                 (R.dimen.tw__media_view_divider_size);
         photoErrorResId = R.drawable.tw__ic_tweet_photo_error_dark;
@@ -375,7 +375,7 @@ OverlayImageView getOrCreateImageView(int index) {
 
     String getSizedImagePath(MediaEntity mediaEntity) {
         if (imageCount > 1) {
-           return mediaEntity.mediaUrlHttps + SIZED_IMAGE_SMALL;
+            return mediaEntity.mediaUrlHttps + SIZED_IMAGE_SMALL;
         }
         return mediaEntity.mediaUrlHttps;   // defaults to :medium
     }
@@ -429,7 +429,9 @@ public void onSuccess() {
         }
 
         @Override
-        public void onError() { /* intentionally blank */ }
+        public void onError(Exception e) {
+            /* intentionally blank */
+        }
     }
 
     static class Size {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/VideoView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/VideoView.java
index 0c9f3e9c..d510a6f6 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/VideoView.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/VideoView.java
@@ -359,14 +359,14 @@ public void onBufferingUpdate(MediaPlayer mp, int percent) {
 
     private GestureDetector gestureDetector = new GestureDetector(getContext(),
             new GestureDetector.SimpleOnGestureListener() {
-        @Override
-        public boolean onSingleTapUp(MotionEvent e) {
-            if (isInPlaybackState() && mMediaController != null) {
-                toggleMediaControlsVisiblity();
-            }
-            return false;
-        }
-    });
+                @Override
+                public boolean onSingleTapUp(MotionEvent e) {
+                    if (isInPlaybackState() && mMediaController != null) {
+                        toggleMediaControlsVisiblity();
+                    }
+                    return false;
+                }
+            });
 
     @Override
     public boolean onTouchEvent(MotionEvent ev) {
@@ -418,7 +418,7 @@ public void setOnInfoListener(OnInfoListener l) {
 
     SurfaceHolder.Callback mSHCallback = new SurfaceHolder.Callback() {
         public void surfaceChanged(SurfaceHolder holder, int format,
-                int w, int h) {
+                                   int w, int h) {
             mSurfaceWidth = w;
             mSurfaceHeight = h;
             boolean isValidState = (mTargetState == STATE_PLAYING);
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/ViewPagerFixed.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/ViewPagerFixed.java
index dd6fed56..65eaa5fe 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/ViewPagerFixed.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/ViewPagerFixed.java
@@ -21,10 +21,12 @@
 import android.util.AttributeSet;
 import android.view.MotionEvent;
 
+import androidx.viewpager.widget.ViewPager;
+
 /**
  * ViewPagerFixed - Prevents ViewPager from crashing on repeated multi-touch gestures (zoom in/out)
  */
-public class ViewPagerFixed extends android.support.v4.view.ViewPager {
+public class ViewPagerFixed extends ViewPager {
 
     public ViewPagerFixed(Context context) {
         super(context);
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/HtmlEntities.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/HtmlEntities.java
index df31459d..f826908c 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/HtmlEntities.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/HtmlEntities.java
@@ -25,22 +25,22 @@
  * Provides HTML and XML entity utilities.
  * </p>
  *
+ * @author <a href="mailto:alex@purpletech.com">Alexander Day Chaffee</a>
+ * @author <a href="mailto:ggregory@seagullsw.com">Gary Gregory</a>
+ * @version $Id: Entities.java,v 1.17 2004/02/18 22:59:50 ggregory Exp $
  * @see <a
- *      href="http://hotwired.lycos.com/webmonkey/reference/special_characters/">ISO
- *      Entities</a>
+ * href="http://hotwired.lycos.com/webmonkey/reference/special_characters/">ISO
+ * Entities</a>
  * @see </br><a href="http://www.w3.org/TR/REC-html32#latin1">HTML 3.2 Character
- *      Entities for ISO Latin-1</a>
+ * Entities for ISO Latin-1</a>
  * @see </br><a href="http://www.w3.org/TR/REC-html40/sgml/entities.html">HTML
- *      4.0 Character entity references</a>
+ * 4.0 Character entity references</a>
  * @see </br><a href="http://www.w3.org/TR/html401/charset.html#h-5.3">HTML 4.01
- *      Character References</a>
+ * Character References</a>
  * @see </br><a
- *      href="http://www.w3.org/TR/html401/charset.html#code-position">HTML 4.01
- *      Code positions</a>
- * @author <a href="mailto:alex@purpletech.com">Alexander Day Chaffee</a>
- * @author <a href="mailto:ggregory@seagullsw.com">Gary Gregory</a>
+ * href="http://www.w3.org/TR/html401/charset.html#code-position">HTML 4.01
+ * Code positions</a>
  * @since 2.0
- * @version $Id: Entities.java,v 1.17 2004/02/18 22:59:50 ggregory Exp $
  */
 public class HtmlEntities {
     /**
@@ -1041,7 +1041,7 @@ public Unescaped unescape(String str) {
                     }
                 } else {
                     buf.append((char) (entityValue));
-                    indices.add(new int[] { i, semi });
+                    indices.add(new int[]{i, semi});
                     i = semi;
                 }
             } else {
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/IntHashMap.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/IntHashMap.java
index f574a1ed..7c1624ca 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/IntHashMap.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/IntHashMap.java
@@ -15,6 +15,7 @@
  */
 
 package com.twitter.sdk.android.tweetui.internal.util;
+
 /**
  * <p>
  * A hash map that uses primitive ints for the key rather than objects.
@@ -28,9 +29,9 @@
  * @author Justin Couch
  * @author Alex Chaffee (alex@apache.org)
  * @author Stephen Colebourne
- * @since 2.0
  * @version $Revision: 1.6 $
  * @see java.util.HashMap
+ * @since 2.0
  */
 public class IntHashMap {
 
@@ -80,10 +81,10 @@
          * Create a new entry with the given values.
          * </p>
          *
-         * @param hash The code used to hash the object with
-         * @param key The key used to enter this in the table
+         * @param hash  The code used to hash the object with
+         * @param key   The key used to enter this in the table
          * @param value The value for this key
-         * @param next A reference to the next entry in the table
+         * @param next  A reference to the next entry in the table
          */
         protected Entry(int hash, int key, Object value, Entry next) {
             this.hash = hash;
@@ -111,7 +112,7 @@ public IntHashMap() {
      *
      * @param initialCapacity the initial capacity of the hashtable.
      * @throws IllegalArgumentException if the initial capacity is less than
-     *             zero.
+     *                                  zero.
      */
     public IntHashMap(int initialCapacity) {
         this(initialCapacity, 0.75f);
@@ -124,9 +125,9 @@ public IntHashMap(int initialCapacity) {
      * </p>
      *
      * @param initialCapacity the initial capacity of the hashtable.
-     * @param loadFactor the load factor of the hashtable.
+     * @param loadFactor      the load factor of the hashtable.
      * @throws IllegalArgumentException if the initial capacity is less than
-     *             zero, or if the load factor is nonpositive.
+     *                                  zero, or if the load factor is nonpositive.
      */
     public IntHashMap(int initialCapacity, float loadFactor) {
         super();
@@ -162,7 +163,7 @@ public int size() {
      * </p>
      *
      * @return <code>true</code> if this hashtable maps no keys to values;
-     *         <code>false</code> otherwise.
+     * <code>false</code> otherwise.
      */
     public boolean isEmpty() {
         return count == 0;
@@ -180,8 +181,8 @@ public boolean isEmpty() {
      *
      * @param value a value to search for.
      * @return <code>true</code> if and only if some key maps to the
-     *         <code>value</code> argument in this hashtable as determined by
-     *         the <tt>equals</tt> method; <code>false</code> otherwise.
+     * <code>value</code> argument in this hashtable as determined by
+     * the <tt>equals</tt> method; <code>false</code> otherwise.
      * @throws NullPointerException if the value is <code>null</code>.
      * @see #containsKey(int)
      * @see #containsValue(Object)
@@ -193,7 +194,7 @@ public boolean contains(Object value) {
         }
 
         final Entry[] tab = table;
-        for (int i = tab.length; i-- > 0;) {
+        for (int i = tab.length; i-- > 0; ) {
             for (Entry e = tab[i]; e != null; e = e.next) {
                 if (e.value.equals(value)) {
                     return true;
@@ -228,8 +229,8 @@ public boolean containsValue(Object value) {
      *
      * @param key possible key.
      * @return <code>true</code> if and only if the specified object is a key in
-     *         this hashtable, as determined by the <tt>equals</tt> method;
-     *         <code>false</code> otherwise.
+     * this hashtable, as determined by the <tt>equals</tt> method;
+     * <code>false</code> otherwise.
      * @see #contains(Object)
      */
     public boolean containsKey(int key) {
@@ -251,8 +252,8 @@ public boolean containsKey(int key) {
      *
      * @param key a key in the hashtable.
      * @return the value to which the key is mapped in this hashtable;
-     *         <code>null</code> if the key is not mapped to any value in this
-     *         hashtable.
+     * <code>null</code> if the key is not mapped to any value in this
+     * hashtable.
      * @see #put(int, Object)
      */
     public Object get(int key) {
@@ -287,8 +288,8 @@ protected void rehash() {
         threshold = (int) (newCapacity * loadFactor);
         table = newMap;
 
-        for (int i = oldCapacity; i-- > 0;) {
-            for (Entry old = oldMap[i]; old != null;) {
+        for (int i = oldCapacity; i-- > 0; ) {
+            for (Entry old = oldMap[i]; old != null; ) {
                 final Entry e = old;
                 old = old.next;
 
@@ -309,10 +310,10 @@ protected void rehash() {
      * key that is equal to the original key.
      * </p>
      *
-     * @param key the hashtable key.
+     * @param key   the hashtable key.
      * @param value the value.
      * @return the previous value of the specified key in this hashtable, or
-     *         <code>null</code> if it did not have one.
+     * <code>null</code> if it did not have one.
      * @throws NullPointerException if the key is <code>null</code>.
      * @see #get(int)
      */
@@ -354,7 +355,7 @@ public Object put(int key, Object value) {
      *
      * @param key the key that needs to be removed.
      * @return the value to which the key had been mapped in this hashtable, or
-     *         <code>null</code> if the key did not have a mapping.
+     * <code>null</code> if the key did not have a mapping.
      */
     public Object remove(int key) {
         final Entry[] tab = table;
@@ -383,7 +384,7 @@ public Object remove(int key) {
      */
     public synchronized void clear() {
         final Entry[] tab = table;
-        for (int index = tab.length; --index >= 0;) {
+        for (int index = tab.length; --index >= 0; ) {
             tab[index] = null;
         }
         count = 0;
diff --git a/tweet-ui/src/main/res/anim/tw__accelerate_cubic.xml b/tweet-ui/src/main/res/anim/tw__accelerate_cubic.xml
index 851f5bcf..67c6ea3a 100644
--- a/tweet-ui/src/main/res/anim/tw__accelerate_cubic.xml
+++ b/tweet-ui/src/main/res/anim/tw__accelerate_cubic.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
@@ -17,4 +16,4 @@
   -->
 
 <accelerateInterpolator xmlns:android="http://schemas.android.com/apk/res/android"
-                        android:factor="1.5"/>
\ No newline at end of file
+    android:factor="1.5" />
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/anim/tw__slide_out.xml b/tweet-ui/src/main/res/anim/tw__slide_out.xml
index 0e00d994..cf2ddc94 100644
--- a/tweet-ui/src/main/res/anim/tw__slide_out.xml
+++ b/tweet-ui/src/main/res/anim/tw__slide_out.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
@@ -18,8 +17,8 @@
 
 <set xmlns:android="http://schemas.android.com/apk/res/android">
     <translate xmlns:android="http://schemas.android.com/apk/res/android"
-               android:fromYDelta="0%"
-               android:toXDelta="100%"
-               android:interpolator="@anim/tw__accelerate_cubic"
-               android:duration="250"/>
+        android:fromYDelta="0%"
+        android:toXDelta="100%"
+        android:interpolator="@anim/tw__accelerate_cubic"
+        android:duration="250" />
 </set>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable-v18/tw__quote_tweet_border.xml b/tweet-ui/src/main/res/drawable-v18/tw__quote_tweet_border.xml
index ea98d654..0d071200 100644
--- a/tweet-ui/src/main/res/drawable-v18/tw__quote_tweet_border.xml
+++ b/tweet-ui/src/main/res/drawable-v18/tw__quote_tweet_border.xml
@@ -16,9 +16,9 @@
   -->
 
 <shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <solid android:color="@android:color/transparent"/>
+    <solid android:color="@android:color/transparent" />
     <stroke
         android:width="@dimen/tw__quote_tweet_border_width"
         android:color="@color/tw__light_gray" />
-    <corners android:radius="@dimen/tw__media_view_radius"/>
+    <corners android:radius="@dimen/tw__media_view_radius" />
 </shape>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable-v21/tw__like_action.xml b/tweet-ui/src/main/res/drawable-v21/tw__like_action.xml
index 32c0b997..4a6914d7 100644
--- a/tweet-ui/src/main/res/drawable-v21/tw__like_action.xml
+++ b/tweet-ui/src/main/res/drawable-v21/tw__like_action.xml
@@ -16,17 +16,16 @@
   -->
 
 <animated-selector xmlns:android="http://schemas.android.com/apk/res/android"
-        xmlns:twitter="http://schemas.android.com/apk/res-auto">
+    xmlns:twitter="http://schemas.android.com/apk/res-auto">
 
     <item
         android:id="@+id/heart_on"
         twitter:state_toggled_on="true">
-        <bitmap android:src="@drawable/tw__action_heart_on_default"/>
+        <bitmap android:src="@drawable/tw__action_heart_on_default" />
     </item>
 
-    <item
-        android:id="@+id/heart_off">
-        <bitmap android:src="@drawable/tw__action_heart_off_default"/>
+    <item android:id="@+id/heart_off">
+        <bitmap android:src="@drawable/tw__action_heart_off_default" />
     </item>
 
     <transition
@@ -34,184 +33,184 @@
         android:toId="@+id/heart_on">
         <animation-list>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00000"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00000" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00001"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00001" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00002"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00002" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00003"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00003" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00004"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00004" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00005"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00005" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00006"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00006" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00007"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00007" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00008"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00008" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00009"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00009" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00010"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00010" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00011"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00011" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00012"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00012" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00013"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00013" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00014"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00014" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00015"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00015" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00016"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00016" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00017"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00017" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00018"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00018" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00019"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00019" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00020"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00020" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00021"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00021" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00022"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00022" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00023"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00023" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00024"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00024" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00025"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00025" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00026"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00026" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00027"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00027" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00028"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00028" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00029"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00029" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00030"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00030" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00031"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00031" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00032"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00032" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00033"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00033" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00034"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00034" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00035"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00035" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00036"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00036" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00037"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00037" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00038"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00038" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00039"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00039" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00040"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00040" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00041"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00041" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00042"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00042" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00043"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00043" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00044"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00044" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00045"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00045" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00046"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00046" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00047"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00047" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00048"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00048" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00049"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00049" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00050"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00050" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00051"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00051" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00052"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00052" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00053"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00053" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00054"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00054" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00055"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00055" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00056"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00056" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00057"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00057" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00058"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00058" />
             </item>
             <item android:duration="15">
-                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00059"/>
+                <bitmap android:src="@drawable/tw__heart_animation_detail_60fps_00059" />
             </item>
         </animation-list>
     </transition>
diff --git a/tweet-ui/src/main/res/drawable/tw__bg_media_badge.xml b/tweet-ui/src/main/res/drawable/tw__bg_media_badge.xml
index 60d9f919..c05c0a72 100644
--- a/tweet-ui/src/main/res/drawable/tw__bg_media_badge.xml
+++ b/tweet-ui/src/main/res/drawable/tw__bg_media_badge.xml
@@ -17,6 +17,6 @@
 
 <shape xmlns:android="http://schemas.android.com/apk/res/android"
     android:shape="rectangle">
-    <corners android:radius="2dp"/>
-    <solid android:color="#4d000000"/>
+    <corners android:radius="2dp" />
+    <solid android:color="#4d000000" />
 </shape>
diff --git a/tweet-ui/src/main/res/drawable/tw__call_to_action.xml b/tweet-ui/src/main/res/drawable/tw__call_to_action.xml
index 8ef32796..c8c390bb 100644
--- a/tweet-ui/src/main/res/drawable/tw__call_to_action.xml
+++ b/tweet-ui/src/main/res/drawable/tw__call_to_action.xml
@@ -15,12 +15,12 @@
   ~
   -->
 
-<shape xmlns:android="http://schemas.android.com/apk/res/android" >
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
     <stroke
         android:width="@dimen/tw__cta_border_size"
-        android:color="@color/tw__cta_border_color"/>
+        android:color="@color/tw__cta_border_color" />
 
-    <solid android:color="@android:color/transparent"/>
+    <solid android:color="@android:color/transparent" />
 
-    <corners android:radius="@dimen/tw__cta_radius"/>
+    <corners android:radius="@dimen/tw__cta_radius" />
 </shape>
diff --git a/tweet-ui/src/main/res/drawable/tw__gif_badge.xml b/tweet-ui/src/main/res/drawable/tw__gif_badge.xml
index adc92885..f43d6961 100644
--- a/tweet-ui/src/main/res/drawable/tw__gif_badge.xml
+++ b/tweet-ui/src/main/res/drawable/tw__gif_badge.xml
@@ -16,12 +16,12 @@
   -->
 
 <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:drawable="@drawable/tw__bg_media_badge"/>
+    <item android:drawable="@drawable/tw__bg_media_badge" />
     <item
         android:left="@dimen/tw__badge_padding"
         android:bottom="@dimen/tw__badge_padding"
         android:right="@dimen/tw__badge_padding"
         android:top="@dimen/tw__badge_padding">
-        <bitmap android:src="@drawable/tw__ic_gif_badge"/>
+        <bitmap android:src="@drawable/tw__ic_gif_badge" />
     </item>
 </layer-list>
diff --git a/tweet-ui/src/main/res/drawable/tw__like_action.xml b/tweet-ui/src/main/res/drawable/tw__like_action.xml
index 45510374..37bb0a5d 100644
--- a/tweet-ui/src/main/res/drawable/tw__like_action.xml
+++ b/tweet-ui/src/main/res/drawable/tw__like_action.xml
@@ -15,11 +15,8 @@
   ~
   -->
 
-<selector xmlns:android="http://schemas.android.com/apk/res/android"
-          xmlns:twitter="http://schemas.android.com/apk/res-auto">
-    <item twitter:state_toggled_on="true"
-          android:drawable="@drawable/tw__action_heart_on_default"/>
+<selector xmlns:android="http://schemas.android.com/apk/res/android" xmlns:twitter="http://schemas.android.com/apk/res-auto">
+    <item twitter:state_toggled_on="true" android:drawable="@drawable/tw__action_heart_on_default" />
 
-    <item android:state_enabled="false"
-          android:drawable="@drawable/tw__action_heart_off_default"/>
+    <item android:state_enabled="false" android:drawable="@drawable/tw__action_heart_off_default" />
 </selector>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__player_overlay.xml b/tweet-ui/src/main/res/drawable/tw__player_overlay.xml
index cb5c8e7d..331a6eb3 100644
--- a/tweet-ui/src/main/res/drawable/tw__player_overlay.xml
+++ b/tweet-ui/src/main/res/drawable/tw__player_overlay.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
@@ -18,9 +17,9 @@
 
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
     <item android:state_pressed="true">
-        <bitmap android:src="@drawable/tw__ic_play_pressed" android:gravity="center"/>
+        <bitmap android:src="@drawable/tw__ic_play_pressed" android:gravity="center" />
     </item>
     <item>
-        <bitmap android:src="@drawable/tw__ic_play_default" android:gravity="center"/>
+        <bitmap android:src="@drawable/tw__ic_play_default" android:gravity="center" />
     </item>
 </selector>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__quote_tweet_border.xml b/tweet-ui/src/main/res/drawable/tw__quote_tweet_border.xml
index 6dd55ac9..53b042d9 100644
--- a/tweet-ui/src/main/res/drawable/tw__quote_tweet_border.xml
+++ b/tweet-ui/src/main/res/drawable/tw__quote_tweet_border.xml
@@ -16,7 +16,7 @@
   -->
 
 <shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <solid android:color="@android:color/transparent"/>
+    <solid android:color="@android:color/transparent" />
     <stroke
         android:width="@dimen/tw__quote_tweet_border_width"
         android:color="@color/tw__light_gray" />
diff --git a/tweet-ui/src/main/res/drawable/tw__seekbar_thumb.xml b/tweet-ui/src/main/res/drawable/tw__seekbar_thumb.xml
index b0e920c7..342a8abd 100644
--- a/tweet-ui/src/main/res/drawable/tw__seekbar_thumb.xml
+++ b/tweet-ui/src/main/res/drawable/tw__seekbar_thumb.xml
@@ -18,7 +18,7 @@
 <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
     <item>
         <shape android:shape="rectangle">
-            <solid android:color="@android:color/transparent"/>
+            <solid android:color="@android:color/transparent" />
             <size
                 android:height="@dimen/tw__seekbar_thumb_size"
                 android:width="@dimen/tw__seekbar_thumb_size" />
@@ -32,8 +32,7 @@
         android:right="@dimen/tw__seekbar_thumb_outer_padding"
         android:bottom="@dimen/tw__seekbar_thumb_outer_padding">
         <shape android:shape="oval">
-            <solid
-                android:color="@color/tw__seekbar_thumb_outer_color"/>
+            <solid android:color="@color/tw__seekbar_thumb_outer_color" />
         </shape>
     </item>
     <!-- pre-Lollipop does not like padding on root layer-lists so we need to set the position
@@ -44,8 +43,7 @@
         android:right="@dimen/tw__seekbar_thumb_inner_padding"
         android:bottom="@dimen/tw__seekbar_thumb_inner_padding">
         <shape android:shape="oval">
-            <solid
-                android:color="@color/tw__seekbar_thumb_inner_color"/>
+            <solid android:color="@color/tw__seekbar_thumb_inner_color" />
         </shape>
     </item>
 </layer-list>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__share_action.xml b/tweet-ui/src/main/res/drawable/tw__share_action.xml
index 50df9a39..a8394201 100644
--- a/tweet-ui/src/main/res/drawable/tw__share_action.xml
+++ b/tweet-ui/src/main/res/drawable/tw__share_action.xml
@@ -16,5 +16,5 @@
   -->
 
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:drawable="@drawable/tw__ic_inline_share"/>
+    <item android:drawable="@drawable/tw__ic_inline_share" />
 </selector>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__video_pause_btn.xml b/tweet-ui/src/main/res/drawable/tw__video_pause_btn.xml
index ec1bee77..5f2019e8 100644
--- a/tweet-ui/src/main/res/drawable/tw__video_pause_btn.xml
+++ b/tweet-ui/src/main/res/drawable/tw__video_pause_btn.xml
@@ -16,7 +16,6 @@
   -->
 
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_pressed="true"
-          android:drawable="@drawable/tw__ic_video_pause_pressed"/>
-    <item android:drawable="@drawable/tw__ic_video_pause"/>
+    <item android:state_pressed="true" android:drawable="@drawable/tw__ic_video_pause_pressed" />
+    <item android:drawable="@drawable/tw__ic_video_pause" />
 </selector>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__video_play_btn.xml b/tweet-ui/src/main/res/drawable/tw__video_play_btn.xml
index e45598af..01391476 100644
--- a/tweet-ui/src/main/res/drawable/tw__video_play_btn.xml
+++ b/tweet-ui/src/main/res/drawable/tw__video_play_btn.xml
@@ -16,7 +16,6 @@
   -->
 
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_pressed="true"
-          android:drawable="@drawable/tw__ic_video_play_pressed"/>
-    <item android:drawable="@drawable/tw__ic_video_play"/>
+    <item android:state_pressed="true" android:drawable="@drawable/tw__ic_video_play_pressed" />
+    <item android:drawable="@drawable/tw__ic_video_play" />
 </selector>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__video_replay_btn.xml b/tweet-ui/src/main/res/drawable/tw__video_replay_btn.xml
index a9c90eac..61f4ec1b 100644
--- a/tweet-ui/src/main/res/drawable/tw__video_replay_btn.xml
+++ b/tweet-ui/src/main/res/drawable/tw__video_replay_btn.xml
@@ -16,7 +16,6 @@
   -->
 
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:state_pressed="true"
-          android:drawable="@drawable/tw__ic_video_replay_pressed"/>
-    <item android:drawable="@drawable/tw__ic_video_replay"/>
+    <item android:state_pressed="true" android:drawable="@drawable/tw__ic_video_replay_pressed" />
+    <item android:drawable="@drawable/tw__ic_video_replay" />
 </selector>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__video_seekbar.xml b/tweet-ui/src/main/res/drawable/tw__video_seekbar.xml
index 7d73019f..f48c0bf6 100644
--- a/tweet-ui/src/main/res/drawable/tw__video_seekbar.xml
+++ b/tweet-ui/src/main/res/drawable/tw__video_seekbar.xml
@@ -19,18 +19,18 @@
 
     <item
         android:id="@android:id/background"
-        android:drawable="@drawable/tw__ic_seekbar_bg"/>
+        android:drawable="@drawable/tw__ic_seekbar_bg" />
 
     <item android:id="@android:id/secondaryProgress">
         <scale
             android:drawable="@drawable/tw__ic_seekbar_secondary_bg"
-            android:scaleWidth="100%"/>
+            android:scaleWidth="100%" />
     </item>
 
     <item android:id="@android:id/progress">
         <scale
             android:drawable="@drawable/tw__ic_seekbar_progress_bg"
-            android:scaleWidth="100%"/>
+            android:scaleWidth="100%" />
     </item>
 
 </layer-list>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/drawable/tw__vine_badge.xml b/tweet-ui/src/main/res/drawable/tw__vine_badge.xml
index ebb03414..d03001c6 100644
--- a/tweet-ui/src/main/res/drawable/tw__vine_badge.xml
+++ b/tweet-ui/src/main/res/drawable/tw__vine_badge.xml
@@ -16,12 +16,12 @@
   -->
 
 <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:drawable="@drawable/tw__bg_media_badge"/>
+    <item android:drawable="@drawable/tw__bg_media_badge" />
     <item
         android:left="@dimen/tw__badge_padding"
         android:bottom="@dimen/tw__badge_padding"
         android:right="@dimen/tw__badge_padding"
         android:top="@dimen/tw__badge_padding">
-        <bitmap android:src="@drawable/tw__ic_vine_badge"/>
+        <bitmap android:src="@drawable/tw__ic_vine_badge" />
     </item>
 </layer-list>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/layout/tw__action_bar.xml b/tweet-ui/src/main/res/layout/tw__action_bar.xml
index a88f064c..98eac888 100644
--- a/tweet-ui/src/main/res/layout/tw__action_bar.xml
+++ b/tweet-ui/src/main/res/layout/tw__action_bar.xml
@@ -15,8 +15,7 @@
   ~
   -->
 
-<com.twitter.sdk.android.tweetui.TweetActionBarView
-    android:id="@+id/tw__tweet_action_bar"
+<com.twitter.sdk.android.tweetui.TweetActionBarView android:id="@+id/tw__tweet_action_bar"
     style="@style/tw__TweetFillWidth"
     xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
@@ -32,12 +31,12 @@
         twitter:contentDescriptionOff="@string/tw__like_tweet"
         twitter:contentDescriptionOn="@string/tw__liked_tweet"
         android:layout_marginRight="@dimen/tw__tweet_action_button_spacing"
-        android:layout_marginEnd="@dimen/tw__tweet_action_button_spacing"/>
+        android:layout_marginEnd="@dimen/tw__tweet_action_button_spacing" />
 
     <ImageButton
         android:id="@+id/tw__tweet_share_button"
         style="@style/tw__TweetActionButton.Share"
         android:contentDescription="@string/tw__share_tweet"
-        android:src="@drawable/tw__share_action"/>
+        android:src="@drawable/tw__share_action" />
 
 </com.twitter.sdk.android.tweetui.TweetActionBarView>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/layout/tw__gallery_activity.xml b/tweet-ui/src/main/res/layout/tw__gallery_activity.xml
index f49bc651..f45735cc 100644
--- a/tweet-ui/src/main/res/layout/tw__gallery_activity.xml
+++ b/tweet-ui/src/main/res/layout/tw__gallery_activity.xml
@@ -16,11 +16,11 @@
   -->
 
 <merge xmlns:android="http://schemas.android.com/apk/res/android"
-       android:layout_width="match_parent"
-       android:layout_height="match_parent">
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
 
     <com.twitter.sdk.android.tweetui.internal.ViewPagerFixed
         android:id="@+id/tw__view_pager"
         android:layout_width="match_parent"
-        android:layout_height="match_parent"/>
+        android:layout_height="match_parent" />
 </merge>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/layout/tw__media_badge.xml b/tweet-ui/src/main/res/layout/tw__media_badge.xml
index 129703f7..f9189ac7 100644
--- a/tweet-ui/src/main/res/layout/tw__media_badge.xml
+++ b/tweet-ui/src/main/res/layout/tw__media_badge.xml
@@ -15,14 +15,13 @@
   ~
   -->
 
-<merge
-    xmlns:android="http://schemas.android.com/apk/res/android"
+<merge xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools">
 
     <ImageView
         tools:ignore="ContentDescription"
         android:id="@+id/tw__gif_badge"
-        style="@style/tw__Badge"/>
+        style="@style/tw__Badge" />
 
     <TextView
         android:id="@+id/tw__video_duration"
diff --git a/tweet-ui/src/main/res/layout/tw__player_activity.xml b/tweet-ui/src/main/res/layout/tw__player_activity.xml
index 818c782e..7b0ec358 100644
--- a/tweet-ui/src/main/res/layout/tw__player_activity.xml
+++ b/tweet-ui/src/main/res/layout/tw__player_activity.xml
@@ -21,19 +21,19 @@
         android:id="@+id/video_view"
         android:layout_width="match_parent"
         android:layout_height="match_parent"
-        android:layout_gravity="center"/>
+        android:layout_gravity="center" />
 
     <ProgressBar
         android:id="@+id/video_progress_view"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:layout_gravity="center"/>
+        android:layout_gravity="center" />
 
     <com.twitter.sdk.android.tweetui.internal.VideoControlView
         android:id="@+id/video_control_view"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:layout_gravity="bottom"/>
+        android:layout_gravity="bottom" />
 
     <TextView
         android:id="@+id/call_to_action_view"
@@ -45,5 +45,5 @@
         android:textSize="@dimen/tw__text_size_medium"
         android:textColor="@color/tw__cta_text_color"
         android:background="@drawable/tw__call_to_action"
-        android:visibility="gone"/>
+        android:visibility="gone" />
 </merge>
diff --git a/tweet-ui/src/main/res/layout/tw__tweet.xml b/tweet-ui/src/main/res/layout/tw__tweet.xml
index f493c16c..73fa1f78 100644
--- a/tweet-ui/src/main/res/layout/tw__tweet.xml
+++ b/tweet-ui/src/main/res/layout/tw__tweet.xml
@@ -26,7 +26,7 @@
 
         <com.twitter.sdk.android.tweetui.internal.TweetMediaView
             android:id="@+id/tweet_media_view"
-            style="@style/tw__TweetMedia"/>
+            style="@style/tw__TweetMedia" />
 
         <com.twitter.sdk.android.tweetui.internal.MediaBadgeView
             android:id="@+id/tw__tweet_media_badge"
@@ -38,14 +38,14 @@
         android:layout_below="@id/tw__aspect_ratio_media_container"
         style="@style/tw__TweetRetweetedBy"
         tools:text="Retweeted by Jack"
-        tools:visibility="visible"/>
+        tools:visibility="visible" />
 
     <ImageView
         tools:ignore="ContentDescription"
         android:id="@+id/tw__tweet_author_avatar"
         style="@style/tw__TweetAvatar"
         android:layout_below="@id/tw__tweet_retweeted_by"
-        tools:src="#CCCCCC"/>
+        tools:src="#CCCCCC" />
 
     <TextView
         android:id="@+id/tw__tweet_author_full_name"
@@ -55,7 +55,7 @@
         android:layout_toEndOf="@id/tw__tweet_author_avatar"
         tools:drawableRight="@drawable/tw__ic_tweet_verified"
         tools:drawableEnd="@drawable/tw__ic_tweet_verified"
-        tools:text="Jack"/>
+        tools:text="Jack" />
 
     <ImageView
         tools:ignore="ContentDescription"
@@ -63,7 +63,7 @@
         style="@style/tw__TwitterLogo"
         android:layout_alignParentRight="true"
         android:layout_alignParentEnd="true"
-        android:layout_below="@id/tw__tweet_retweeted_by"/>
+        android:layout_below="@id/tw__tweet_retweeted_by" />
 
     <TextView
         android:id="@+id/tw__tweet_author_screen_name"
@@ -72,7 +72,7 @@
         android:layout_alignBottom="@id/tw__tweet_author_avatar"
         android:layout_toRightOf="@id/tw__tweet_author_avatar"
         android:layout_toEndOf="@id/tw__tweet_author_avatar"
-        tools:text="\@jack"/>
+        tools:text="\@jack" />
 
     <TextView
         android:id="@+id/tw__tweet_timestamp"
@@ -81,7 +81,7 @@
         android:layout_alignBottom="@id/tw__tweet_author_screen_name"
         android:layout_toRightOf="@id/tw__tweet_author_screen_name"
         android:layout_toEndOf="@id/tw__tweet_author_screen_name"
-        tools:text="• 03/21/2006"/>
+        tools:text="• 03/21/2006" />
 
     <TextView
         android:id="@+id/tw__tweet_text"
@@ -89,24 +89,24 @@
         android:layout_below="@id/tw__tweet_author_avatar"
         android:visibility="gone"
         tools:text="just setting up my twttr"
-        tools:visibility="visible"/>
+        tools:visibility="visible" />
 
     <FrameLayout
         android:id="@+id/quote_tweet_holder"
         style="@style/tw__QuoteTweetContainer"
-        android:layout_below="@id/tw__tweet_text"/>
+        android:layout_below="@id/tw__tweet_text" />
 
     <include
         style="@style/tw__TweetActionButtonBar"
         layout="@layout/tw__action_bar"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:layout_below="@id/quote_tweet_holder"/>
+        android:layout_below="@id/quote_tweet_holder" />
 
     <View
         android:id="@+id/bottom_separator"
         android:layout_width="match_parent"
         android:layout_height="@dimen/tw__tweet_container_bottom_separator"
-        android:layout_below="@id/quote_tweet_holder"/>
+        android:layout_below="@id/quote_tweet_holder" />
 
 </merge>
diff --git a/tweet-ui/src/main/res/layout/tw__tweet_compact.xml b/tweet-ui/src/main/res/layout/tw__tweet_compact.xml
index 15eaf475..229cabee 100644
--- a/tweet-ui/src/main/res/layout/tw__tweet_compact.xml
+++ b/tweet-ui/src/main/res/layout/tw__tweet_compact.xml
@@ -27,14 +27,14 @@
         android:layout_alignStart="@+id/tw__author_attribution"
         style="@style/tw__TweetRetweetedBy.Compact"
         tools:text="Retweeted by Jack"
-        tools:visibility="visible"/>
+        tools:visibility="visible" />
 
     <ImageView
         tools:ignore="ContentDescription"
         android:id="@+id/tw__tweet_author_avatar"
         android:layout_below="@id/tw__tweet_retweeted_by"
         style="@style/tw__TweetAvatar.Compact"
-        tools:src="#CCCCCC"/>
+        tools:src="#CCCCCC" />
 
     <!--Name and timestamp don't ellipsize, but @username in the middle does ellipsize-->
     <LinearLayout
@@ -47,17 +47,17 @@
         <TextView
             android:id="@+id/tw__tweet_author_full_name"
             style="@style/tw__TweetFullName.Compact"
-            tools:text="Jack"/>
+            tools:text="Jack" />
 
         <TextView
             android:id="@+id/tw__tweet_author_screen_name"
             style="@style/tw__TweetScreenName.Compact"
-            tools:text="\@jack"/>
+            tools:text="\@jack" />
 
         <TextView
             android:id="@+id/tw__tweet_timestamp"
             style="@style/tw__TweetTimestamp.Compact"
-            tools:text="• 03/21/2006"/>
+            tools:text="• 03/21/2006" />
 
     </LinearLayout>
 
@@ -67,18 +67,18 @@
         style="@style/tw__TwitterLogo.Compact"
         android:layout_below="@id/tw__tweet_retweeted_by"
         android:layout_alignParentRight="true"
-        android:layout_alignParentEnd="true"/>
+        android:layout_alignParentEnd="true" />
 
     <com.twitter.sdk.android.tweetui.internal.AspectRatioFrameLayout
         android:id="@+id/tw__aspect_ratio_media_container"
         style="@style/tw__TweetMediaContainer.Compact"
         android:layout_alignLeft="@id/tw__author_attribution"
         android:layout_alignStart="@id/tw__author_attribution"
-        android:layout_below="@id/tw__author_attribution" >
+        android:layout_below="@id/tw__author_attribution">
 
         <com.twitter.sdk.android.tweetui.internal.TweetMediaView
             android:id="@+id/tweet_media_view"
-            style="@style/tw__TweetMedia"/>
+            style="@style/tw__TweetMedia" />
 
         <com.twitter.sdk.android.tweetui.internal.MediaBadgeView
             android:id="@+id/tw__tweet_media_badge"
@@ -91,7 +91,7 @@
         android:layout_below="@id/tw__aspect_ratio_media_container"
         android:layout_toRightOf="@id/tw__tweet_author_avatar"
         android:layout_toEndOf="@id/tw__tweet_author_avatar"
-        tools:text="just setting up my twttr"/>
+        tools:text="just setting up my twttr" />
 
     <FrameLayout
         android:id="@+id/quote_tweet_holder"
@@ -107,12 +107,12 @@
         android:layout_height="wrap_content"
         android:layout_below="@id/quote_tweet_holder"
         android:layout_toEndOf="@id/tw__tweet_author_avatar"
-        android:layout_toRightOf="@id/tw__tweet_author_avatar"/>
+        android:layout_toRightOf="@id/tw__tweet_author_avatar" />
 
     <View
         android:id="@+id/bottom_separator"
         android:layout_width="match_parent"
         android:layout_height="@dimen/tw__compact_tweet_container_bottom_separator"
-        android:layout_below="@id/quote_tweet_holder"/>
+        android:layout_below="@id/quote_tweet_holder" />
 
 </merge>
diff --git a/tweet-ui/src/main/res/layout/tw__video_control.xml b/tweet-ui/src/main/res/layout/tw__video_control.xml
index a108fa4f..fe0e2dce 100644
--- a/tweet-ui/src/main/res/layout/tw__video_control.xml
+++ b/tweet-ui/src/main/res/layout/tw__video_control.xml
@@ -15,8 +15,7 @@
   ~
   -->
 
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="@dimen/tw__video_control_height">
@@ -30,7 +29,7 @@
         android:background="@null"
         android:paddingTop="4dp"
         android:src="@drawable/tw__video_pause_btn"
-        android:contentDescription="@string/tw__pause"/>
+        android:contentDescription="@string/tw__pause" />
 
     <TextView
         android:id="@+id/tw__current_time"
@@ -40,7 +39,7 @@
         android:layout_toRightOf="@id/tw__state_control"
         android:textColor="@android:color/white"
         android:textSize="@dimen/tw__video_control_text_size"
-        tools:text="0:01"/>
+        tools:text="0:01" />
 
     <SeekBar
         tools:ignore="UnusedAttribute"
@@ -53,7 +52,7 @@
         android:background="@null"
         android:splitTrack="false"
         android:progressDrawable="@drawable/tw__video_seekbar"
-        android:thumb="@drawable/tw__seekbar_thumb"/>
+        android:thumb="@drawable/tw__seekbar_thumb" />
 
     <TextView
         android:id="@+id/tw__duration"
@@ -64,5 +63,5 @@
         android:textColor="@android:color/white"
         android:textSize="@dimen/tw__video_control_text_size"
         android:layout_marginRight="10dp"
-        tools:text="1:00"/>
+        tools:text="1:00" />
 </RelativeLayout>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-ar/const_strings.xml b/tweet-ui/src/main/res/values-ar/const_strings.xml
index ad9f5578..23d811a1 100644
--- a/tweet-ui/src/main/res/values-ar/const_strings.xml
+++ b/tweet-ui/src/main/res/values-ar/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-da/const_strings.xml b/tweet-ui/src/main/res/values-da/const_strings.xml
index 9e062d91..be2ac166 100644
--- a/tweet-ui/src/main/res/values-da/const_strings.xml
+++ b/tweet-ui/src/main/res/values-da/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-de/const_strings.xml b/tweet-ui/src/main/res/values-de/const_strings.xml
index e6f35e0e..5160d74b 100644
--- a/tweet-ui/src/main/res/values-de/const_strings.xml
+++ b/tweet-ui/src/main/res/values-de/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-en-rGB/const_strings.xml b/tweet-ui/src/main/res/values-en-rGB/const_strings.xml
index 5d6e8ad7..88bf3edc 100644
--- a/tweet-ui/src/main/res/values-en-rGB/const_strings.xml
+++ b/tweet-ui/src/main/res/values-en-rGB/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-en-rSS/const_strings.xml b/tweet-ui/src/main/res/values-en-rSS/const_strings.xml
index bba1e7d9..25aa9aa7 100644
--- a/tweet-ui/src/main/res/values-en-rSS/const_strings.xml
+++ b/tweet-ui/src/main/res/values-en-rSS/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-es/const_strings.xml b/tweet-ui/src/main/res/values-es/const_strings.xml
index da1b5adc..b83108d8 100644
--- a/tweet-ui/src/main/res/values-es/const_strings.xml
+++ b/tweet-ui/src/main/res/values-es/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-fa/const_strings.xml b/tweet-ui/src/main/res/values-fa/const_strings.xml
index e9678377..e650b21b 100644
--- a/tweet-ui/src/main/res/values-fa/const_strings.xml
+++ b/tweet-ui/src/main/res/values-fa/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-fi/const_strings.xml b/tweet-ui/src/main/res/values-fi/const_strings.xml
index e6f35e0e..5160d74b 100644
--- a/tweet-ui/src/main/res/values-fi/const_strings.xml
+++ b/tweet-ui/src/main/res/values-fi/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-fr/const_strings.xml b/tweet-ui/src/main/res/values-fr/const_strings.xml
index ad9f5578..23d811a1 100644
--- a/tweet-ui/src/main/res/values-fr/const_strings.xml
+++ b/tweet-ui/src/main/res/values-fr/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-hi/const_strings.xml b/tweet-ui/src/main/res/values-hi/const_strings.xml
index 72b7e472..78897fa9 100644
--- a/tweet-ui/src/main/res/values-hi/const_strings.xml
+++ b/tweet-ui/src/main/res/values-hi/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-hu/const_strings.xml b/tweet-ui/src/main/res/values-hu/const_strings.xml
index efaa2f62..53564faf 100644
--- a/tweet-ui/src/main/res/values-hu/const_strings.xml
+++ b/tweet-ui/src/main/res/values-hu/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-in/const_strings.xml b/tweet-ui/src/main/res/values-in/const_strings.xml
index ad9f5578..23d811a1 100644
--- a/tweet-ui/src/main/res/values-in/const_strings.xml
+++ b/tweet-ui/src/main/res/values-in/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-it/const_strings.xml b/tweet-ui/src/main/res/values-it/const_strings.xml
index ad9f5578..23d811a1 100644
--- a/tweet-ui/src/main/res/values-it/const_strings.xml
+++ b/tweet-ui/src/main/res/values-it/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-iw/const_strings.xml b/tweet-ui/src/main/res/values-iw/const_strings.xml
index e6f35e0e..5160d74b 100644
--- a/tweet-ui/src/main/res/values-iw/const_strings.xml
+++ b/tweet-ui/src/main/res/values-iw/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-ja/const_strings.xml b/tweet-ui/src/main/res/values-ja/const_strings.xml
index 4d5f965f..a6eae038 100644
--- a/tweet-ui/src/main/res/values-ja/const_strings.xml
+++ b/tweet-ui/src/main/res/values-ja/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-ko/const_strings.xml b/tweet-ui/src/main/res/values-ko/const_strings.xml
index 05624830..b90f7991 100644
--- a/tweet-ui/src/main/res/values-ko/const_strings.xml
+++ b/tweet-ui/src/main/res/values-ko/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-ms/const_strings.xml b/tweet-ui/src/main/res/values-ms/const_strings.xml
index ad9f5578..23d811a1 100644
--- a/tweet-ui/src/main/res/values-ms/const_strings.xml
+++ b/tweet-ui/src/main/res/values-ms/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-nb/const_strings.xml b/tweet-ui/src/main/res/values-nb/const_strings.xml
index e6f35e0e..5160d74b 100644
--- a/tweet-ui/src/main/res/values-nb/const_strings.xml
+++ b/tweet-ui/src/main/res/values-nb/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-nl/const_strings.xml b/tweet-ui/src/main/res/values-nl/const_strings.xml
index 187f9395..5d48576b 100644
--- a/tweet-ui/src/main/res/values-nl/const_strings.xml
+++ b/tweet-ui/src/main/res/values-nl/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-pl/const_strings.xml b/tweet-ui/src/main/res/values-pl/const_strings.xml
index 50d37422..4b5ccb50 100644
--- a/tweet-ui/src/main/res/values-pl/const_strings.xml
+++ b/tweet-ui/src/main/res/values-pl/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-pt/const_strings.xml b/tweet-ui/src/main/res/values-pt/const_strings.xml
index cc7271bf..5f7e331b 100644
--- a/tweet-ui/src/main/res/values-pt/const_strings.xml
+++ b/tweet-ui/src/main/res/values-pt/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-ro/const_strings.xml b/tweet-ui/src/main/res/values-ro/const_strings.xml
index ac63c5da..68c4a5b7 100644
--- a/tweet-ui/src/main/res/values-ro/const_strings.xml
+++ b/tweet-ui/src/main/res/values-ro/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-ru/const_strings.xml b/tweet-ui/src/main/res/values-ru/const_strings.xml
index a330c88a..9deac7a2 100644
--- a/tweet-ui/src/main/res/values-ru/const_strings.xml
+++ b/tweet-ui/src/main/res/values-ru/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-sv/const_strings.xml b/tweet-ui/src/main/res/values-sv/const_strings.xml
index 72b7e472..78897fa9 100644
--- a/tweet-ui/src/main/res/values-sv/const_strings.xml
+++ b/tweet-ui/src/main/res/values-sv/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-th/const_strings.xml b/tweet-ui/src/main/res/values-th/const_strings.xml
index ad9f5578..23d811a1 100644
--- a/tweet-ui/src/main/res/values-th/const_strings.xml
+++ b/tweet-ui/src/main/res/values-th/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-tl/const_strings.xml b/tweet-ui/src/main/res/values-tl/const_strings.xml
index ad9f5578..23d811a1 100644
--- a/tweet-ui/src/main/res/values-tl/const_strings.xml
+++ b/tweet-ui/src/main/res/values-tl/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-tr/const_strings.xml b/tweet-ui/src/main/res/values-tr/const_strings.xml
index a330c88a..9deac7a2 100644
--- a/tweet-ui/src/main/res/values-tr/const_strings.xml
+++ b/tweet-ui/src/main/res/values-tr/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-ur/const_strings.xml b/tweet-ui/src/main/res/values-ur/const_strings.xml
index ad9f5578..23d811a1 100644
--- a/tweet-ui/src/main/res/values-ur/const_strings.xml
+++ b/tweet-ui/src/main/res/values-ur/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-v21/themes.xml b/tweet-ui/src/main/res/values-v21/themes.xml
index 171013ec..51672018 100644
--- a/tweet-ui/src/main/res/values-v21/themes.xml
+++ b/tweet-ui/src/main/res/values-v21/themes.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
@@ -16,7 +15,8 @@
   -->
 
 <resources>
-    <style name="MediaTheme" parent="@android:style/Theme.Material.NoActionBar" >
+
+    <style name="MediaTheme" parent="@android:style/Theme.Material.NoActionBar">
         <item name="android:windowBackground">@android:color/black</item>
     </style>
 </resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values-v21/tw_tweet_text_styles.xml b/tweet-ui/src/main/res/values-v21/tw_tweet_text_styles.xml
index b0c14d29..cfd7461d 100644
--- a/tweet-ui/src/main/res/values-v21/tw_tweet_text_styles.xml
+++ b/tweet-ui/src/main/res/values-v21/tw_tweet_text_styles.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-zh-rCN/const_strings.xml b/tweet-ui/src/main/res/values-zh-rCN/const_strings.xml
index 4d5f965f..a6eae038 100644
--- a/tweet-ui/src/main/res/values-zh-rCN/const_strings.xml
+++ b/tweet-ui/src/main/res/values-zh-rCN/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values-zh-rTW/const_strings.xml b/tweet-ui/src/main/res/values-zh-rTW/const_strings.xml
index 4d5f965f..a6eae038 100644
--- a/tweet-ui/src/main/res/values-zh-rTW/const_strings.xml
+++ b/tweet-ui/src/main/res/values-zh-rTW/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values/attrs.xml b/tweet-ui/src/main/res/values/attrs.xml
index 1c20b730..aae527e6 100644
--- a/tweet-ui/src/main/res/values/attrs.xml
+++ b/tweet-ui/src/main/res/values/attrs.xml
@@ -17,27 +17,27 @@
 
 <resources>
     <declare-styleable name="tw__TweetView">
-        <attr name="tw__tweet_id" format="string"/>
+        <attr name="tw__tweet_id" format="string" />
         <!--style attributes-->
-        <attr name="tw__container_bg_color" format="color"/>
-        <attr name="tw__primary_text_color" format="color"/>
-        <attr name="tw__action_color" format="color"/>
-        <attr name="tw__action_highlight_color" format="color"/>
+        <attr name="tw__container_bg_color" format="color" />
+        <attr name="tw__primary_text_color" format="color" />
+        <attr name="tw__action_color" format="color" />
+        <attr name="tw__action_highlight_color" format="color" />
         <attr name="tw__tweet_actions_enabled" format="boolean" />
     </declare-styleable>
 
     <declare-styleable name="ToggleImageButton">
-        <attr name="state_toggled_on" format="boolean"/>
-        <attr name="contentDescriptionOn" format="string"/>
-        <attr name="contentDescriptionOff" format="string"/>
-        <attr name="toggleOnClick" format="boolean"/>
+        <attr name="state_toggled_on" format="boolean" />
+        <attr name="contentDescriptionOn" format="string" />
+        <attr name="contentDescriptionOff" format="string" />
+        <attr name="toggleOnClick" format="boolean" />
     </declare-styleable>
 
     <declare-styleable name="AspectRatioFrameLayout">
-        <attr name="tw__frame_layout_aspect_ratio" format="float"/>
+        <attr name="tw__frame_layout_aspect_ratio" format="float" />
         <attr name="tw__frame_layout_dimension_to_adjust" format="enum">
-            <enum name="height" value="0"/>
-            <enum name="width" value="1"/>
+            <enum name="height" value="0" />
+            <enum name="width" value="1" />
         </attr>
     </declare-styleable>
 </resources>
diff --git a/tweet-ui/src/main/res/values/const_strings.xml b/tweet-ui/src/main/res/values/const_strings.xml
index 48c907b0..845d2401 100644
--- a/tweet-ui/src/main/res/values/const_strings.xml
+++ b/tweet-ui/src/main/res/values/const_strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values/dimens.xml b/tweet-ui/src/main/res/values/dimens.xml
index f0ec258f..6e754e7c 100644
--- a/tweet-ui/src/main/res/values/dimens.xml
+++ b/tweet-ui/src/main/res/values/dimens.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values/public.xml b/tweet-ui/src/main/res/values/public.xml
index 69b77dce..ea801aca 100644
--- a/tweet-ui/src/main/res/values/public.xml
+++ b/tweet-ui/src/main/res/values/public.xml
@@ -1,11 +1,11 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
     <!--suppress UnusedResources -->
-    <public type="style" name="tw__TweetLightStyle"/>
+    <public type="style" name="tw__TweetLightStyle" />
     <!--suppress UnusedResources -->
-    <public type="style" name="tw__TweetLightWithActionsStyle"/>
+    <public type="style" name="tw__TweetLightWithActionsStyle" />
     <!--suppress UnusedResources -->
-    <public type="style" name="tw__TweetDarkStyle"/>
+    <public type="style" name="tw__TweetDarkStyle" />
     <!--suppress UnusedResources -->
-    <public type="style" name="tw__TweetDarkWithActionsStyle"/>
+    <public type="style" name="tw__TweetDarkWithActionsStyle" />
 </resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values/styles.xml b/tweet-ui/src/main/res/values/styles.xml
index 2bc94a93..26b154d7 100644
--- a/tweet-ui/src/main/res/values/styles.xml
+++ b/tweet-ui/src/main/res/values/styles.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/tweet-ui/src/main/res/values/themes.xml b/tweet-ui/src/main/res/values/themes.xml
index 0da0f05f..4d251d3a 100644
--- a/tweet-ui/src/main/res/values/themes.xml
+++ b/tweet-ui/src/main/res/values/themes.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
@@ -16,6 +15,7 @@
   -->
 
 <resources>
+
     <style name="MediaTheme" parent="@android:style/Theme.Holo">
         <item name="android:windowActionBar">false</item>
         <item name="android:windowNoTitle">true</item>
diff --git a/tweet-ui/src/main/res/values/tw__tweet_actions_styles.xml b/tweet-ui/src/main/res/values/tw__tweet_actions_styles.xml
index 384d82ab..46d98a1b 100644
--- a/tweet-ui/src/main/res/values/tw__tweet_actions_styles.xml
+++ b/tweet-ui/src/main/res/values/tw__tweet_actions_styles.xml
@@ -15,9 +15,7 @@
   ~
   -->
 
-<resources
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools">
+<resources xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools">
 
     <style name="tw__TweetActionButton">
         <item name="android:layout_width">wrap_content</item>
@@ -42,8 +40,10 @@
     </style>
 
     <style name="tw__TweetActionButtonBar.Compact" tools:ignore="NewApi">
-        <item name="android:layout_marginLeft">@dimen/tw__compact_tweet_action_bar_offset_left</item>
-        <item name="android:layout_marginStart">@dimen/tw__compact_tweet_action_bar_offset_left</item>
+        <item name="android:layout_marginLeft">@dimen/tw__compact_tweet_action_bar_offset_left
+        </item>
+        <item name="android:layout_marginStart">@dimen/tw__compact_tweet_action_bar_offset_left
+        </item>
         <item name="android:layout_marginBottom">@dimen/tw__tweet_action_bar_offset_bottom</item>
     </style>
 </resources>
\ No newline at end of file
diff --git a/tweet-ui/src/main/res/values/tw__tweet_media_styles.xml b/tweet-ui/src/main/res/values/tw__tweet_media_styles.xml
index b045c722..b62eba19 100644
--- a/tweet-ui/src/main/res/values/tw__tweet_media_styles.xml
+++ b/tweet-ui/src/main/res/values/tw__tweet_media_styles.xml
@@ -15,9 +15,7 @@
   ~
   -->
 
-<resources
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools">
+<resources xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools">
 
     <style name="tw__TweetAvatar" tools:ignore="NewApi">
         <item name="android:layout_width">@dimen/tw__tweet_avatar_size</item>
@@ -55,7 +53,8 @@
 
     <style name="tw__TweetMediaContainer.Quote">
         <item name="android:layout_marginBottom">@dimen/tw__quote_tweet_media_margin_bottom</item>
-        <item name="android:layout_marginRight">@dimen/tw__quote_tweet_media_margin_horizontal</item>
+        <item name="android:layout_marginRight">@dimen/tw__quote_tweet_media_margin_horizontal
+        </item>
         <item name="android:layout_marginLeft">@dimen/tw__quote_tweet_media_margin_horizontal</item>
     </style>
 
@@ -64,16 +63,20 @@
         <item name="android:layout_height">wrap_content</item>
         <item name="android:visibility">gone</item>
         <item name="android:layout_marginLeft">@dimen/tw__tweet_quote_tweet_margin_horizontal</item>
-        <item name="android:layout_marginRight">@dimen/tw__tweet_quote_tweet_margin_horizontal</item>
+        <item name="android:layout_marginRight">@dimen/tw__tweet_quote_tweet_margin_horizontal
+        </item>
         <item name="android:layout_marginTop">@dimen/tw__tweet_quote_tweet_margin_top</item>
     </style>
 
-    <style name="tw__QuoteTweetContainer.Compact"
-        tools:ignore="NewApi">
-        <item name="android:layout_marginLeft">@dimen/tw__compact_tweet_quote_tweet_margin_left</item>
-        <item name="android:layout_marginStart">@dimen/tw__compact_tweet_quote_tweet_margin_left</item>
-        <item name="android:layout_marginRight">@dimen/tw__compact_tweet_quote_tweet_margin_right</item>
-        <item name="android:layout_marginEnd">@dimen/tw__compact_tweet_quote_tweet_margin_right</item>
+    <style name="tw__QuoteTweetContainer.Compact" tools:ignore="NewApi">
+        <item name="android:layout_marginLeft">@dimen/tw__compact_tweet_quote_tweet_margin_left
+        </item>
+        <item name="android:layout_marginStart">@dimen/tw__compact_tweet_quote_tweet_margin_left
+        </item>
+        <item name="android:layout_marginRight">@dimen/tw__compact_tweet_quote_tweet_margin_right
+        </item>
+        <item name="android:layout_marginEnd">@dimen/tw__compact_tweet_quote_tweet_margin_right
+        </item>
     </style>
 
     <style name="tw__TweetMedia">
@@ -106,8 +109,7 @@
 
     <!--Compact Styles-->
 
-    <style name="tw__TweetAvatar.Compact" parent="tw__TweetAvatar"
-        tools:ignore="NewApi">
+    <style name="tw__TweetAvatar.Compact" parent="tw__TweetAvatar" tools:ignore="NewApi">
         <item name="android:layout_width">@dimen/tw__tweet_avatar_size</item>
         <item name="android:layout_height">@dimen/tw__tweet_avatar_size</item>
         <item name="android:layout_marginTop">@dimen/tw__compact_tweet_avatar_margin_top</item>
@@ -118,8 +120,7 @@
         <item name="android:focusable">false</item>
     </style>
 
-    <style name="tw__TwitterLogo.Compact"
-        tools:ignore="NewApi">
+    <style name="tw__TwitterLogo.Compact" tools:ignore="NewApi">
         <item name="android:layout_width">wrap_content</item>
         <item name="android:layout_height">wrap_content</item>
         <item name="android:layout_marginTop">@dimen/tw__compact_tweet_logo_margin_top</item>
diff --git a/tweet-ui/src/main/res/values/tw__tweet_text_styles.xml b/tweet-ui/src/main/res/values/tw__tweet_text_styles.xml
index 8c52f926..99b33bcf 100644
--- a/tweet-ui/src/main/res/values/tw__tweet_text_styles.xml
+++ b/tweet-ui/src/main/res/values/tw__tweet_text_styles.xml
@@ -15,11 +15,9 @@
   ~
   -->
 
-<resources xmlns:android="http://schemas.android.com/apk/res/android"
-           xmlns:tools="http://schemas.android.com/tools">
+<resources xmlns:android="http://schemas.android.com/apk/res/android" xmlns:tools="http://schemas.android.com/tools">
 
-    <style name="tw__TweetRetweetedBy"
-           tools:ignore="NewApi">
+    <style name="tw__TweetRetweetedBy" tools:ignore="NewApi">
         <item name="android:layout_width">wrap_content</item>
         <item name="android:layout_height">wrap_content</item>
         <item name="android:layout_marginTop">@dimen/tw__tweet_retweeted_by_margin_top</item>
@@ -37,8 +35,7 @@
         <item name="android:visibility">gone</item>
     </style>
 
-    <style name="tw__AttributionText"
-           tools:ignore="NewApi">
+    <style name="tw__AttributionText" tools:ignore="NewApi">
         <item name="android:layout_width">wrap_content</item>
         <item name="android:layout_height">wrap_content</item>
         <item name="android:textSize">@dimen/tw__text_size_medium</item>
@@ -62,8 +59,7 @@
     </style>
 
     <!--ScreenName should ellipsize, name and timestamp should not ellipsize-->
-    <style name="tw__TweetScreenName" parent="tw__AttributionText"
-        tools:ignore="NewApi">
+    <style name="tw__TweetScreenName" parent="tw__AttributionText" tools:ignore="NewApi">
         <item name="android:layout_marginTop">@dimen/tw__tweet_screen_name_margin_top</item>
         <item name="android:layout_marginBottom">@dimen/tw__tweet_screen_name_margin_bottom</item>
         <item name="android:ellipsize">end</item>
@@ -71,8 +67,7 @@
         <item name="android:importantForAccessibility">no</item>
     </style>
 
-    <style name="tw__TweetTimestamp" parent="tw__AttributionText"
-        tools:ignore="NewApi">
+    <style name="tw__TweetTimestamp" parent="tw__AttributionText" tools:ignore="NewApi">
         <item name="android:layout_marginTop">@dimen/tw__tweet_timestamp_margin_top</item>
         <item name="android:paddingLeft">@dimen/tw__tweet_timestamp_padding_left</item>
         <item name="android:ellipsize">none</item>
@@ -80,8 +75,7 @@
         <item name="android:importantForAccessibility">no</item>
     </style>
 
-    <style name="tw__TweetText"
-        tools:ignore="NewApi">
+    <style name="tw__TweetText" tools:ignore="NewApi">
         <item name="android:layout_width">match_parent</item>
         <item name="android:layout_height">wrap_content</item>
         <item name="android:layout_marginTop">@dimen/tw__tweet_text_margin_top</item>
@@ -100,39 +94,49 @@
 
     <!--Compact Styles-->
 
-    <style name="tw__TweetRetweetedBy.Compact"
-        tools:ignore="NewApi">
-        <item name="android:layout_marginLeft">@dimen/tw__compact_tweet_retweeted_by_margin_left</item>
-        <item name="android:layout_marginStart">@dimen/tw__compact_tweet_retweeted_by_margin_left</item>
-        <item name="android:layout_marginBottom">@dimen/tw__compact_tweet_retweeted_by_margin_bottom</item>
-        <item name="android:layout_marginTop">@dimen/tw__compact_tweet_retweeted_by_margin_top</item>
-        <item name="android:drawablePadding">@dimen/tw__compact_tweet_retweeted_by_drawable_padding</item>
+    <style name="tw__TweetRetweetedBy.Compact" tools:ignore="NewApi">
+        <item name="android:layout_marginLeft">@dimen/tw__compact_tweet_retweeted_by_margin_left
+        </item>
+        <item name="android:layout_marginStart">@dimen/tw__compact_tweet_retweeted_by_margin_left
+        </item>
+        <item name="android:layout_marginBottom">
+            @dimen/tw__compact_tweet_retweeted_by_margin_bottom
+        </item>
+        <item name="android:layout_marginTop">@dimen/tw__compact_tweet_retweeted_by_margin_top
+        </item>
+        <item name="android:drawablePadding">
+            @dimen/tw__compact_tweet_retweeted_by_drawable_padding
+        </item>
     </style>
 
-    <style name="tw__CompactAttributionLine"
-        tools:ignore="NewApi">
+    <style name="tw__CompactAttributionLine" tools:ignore="NewApi">
         <item name="android:layout_width">wrap_content</item>
         <item name="android:layout_height">wrap_content</item>
-        <item name="android:layout_marginRight">@dimen/tw__compact_tweet_attribution_line_margin_right</item>
-        <item name="android:layout_marginEnd">@dimen/tw__compact_tweet_attribution_line_margin_right</item>
+        <item name="android:layout_marginRight">
+            @dimen/tw__compact_tweet_attribution_line_margin_right
+        </item>
+        <item name="android:layout_marginEnd">
+            @dimen/tw__compact_tweet_attribution_line_margin_right
+        </item>
         <item name="android:importantForAccessibility">noHideDescendants</item>
     </style>
 
-    <style name="tw__TweetFullName.Compact"
-        tools:ignore="NewApi">
+    <style name="tw__TweetFullName.Compact" tools:ignore="NewApi">
         <item name="android:layout_marginTop">@dimen/tw__compact_tweet_full_name_margin_top</item>
-        <item name="android:layout_marginRight">@dimen/tw__compact_tweet_full_name_margin_right</item>
+        <item name="android:layout_marginRight">@dimen/tw__compact_tweet_full_name_margin_right
+        </item>
         <item name="android:layout_marginEnd">@dimen/tw__compact_tweet_full_name_margin_right</item>
         <item name="android:ellipsize">none</item>
     </style>
 
     <!--ScreenName should ellipsize, name and timestamp should not ellipsize-->
-    <style name="tw__TweetScreenName.Compact"
-        tools:ignore="NewApi">
+    <style name="tw__TweetScreenName.Compact" tools:ignore="NewApi">
         <item name="android:layout_width">@dimen/tw__compact_tweet_screen_name_layout_width</item>
         <item name="android:layout_weight">1</item>
         <item name="android:layout_marginTop">@dimen/tw__compact_tweet_screen_name_margin_top</item>
-        <item name="android:layout_marginBottom">@dimen/tw__compact_tweet_screen_name_margin_bottom</item>
+        <item name="android:layout_marginBottom">
+            @dimen/tw__compact_tweet_screen_name_margin_bottom
+        </item>
         <item name="android:paddingLeft">@dimen/tw__compact_tweet_screen_name_padding_left</item>
         <item name="android:paddingStart">@dimen/tw__compact_tweet_screen_name_padding_left</item>
         <item name="android:fontFamily">sans-serif-light</item>
@@ -140,16 +144,14 @@
         <item name="android:ellipsize">end</item>
     </style>
 
-    <style name="tw__TweetTimestamp.Compact"
-        tools:ignore="NewApi">
+    <style name="tw__TweetTimestamp.Compact" tools:ignore="NewApi">
         <item name="android:layout_marginTop">@dimen/tw__compact_tweet_timestamp_margin_top</item>
         <item name="android:fontFamily">sans-serif-light</item>
         <item name="android:textSize">@dimen/tw__text_size_medium</item>
         <item name="android:ellipsize">none</item>
     </style>
 
-    <style name="tw__TweetText.Compact"
-        tools:ignore="NewApi">
+    <style name="tw__TweetText.Compact" tools:ignore="NewApi">
         <item name="android:layout_marginTop">@dimen/tw__compact_tweet_text_margin_top</item>
         <item name="android:layout_marginLeft">@dimen/tw__compact_tweet_text_margin_left</item>
         <item name="android:layout_marginStart">@dimen/tw__compact_tweet_text_margin_left</item>
@@ -158,16 +160,24 @@
     </style>
 
     <!-- Quote Tweet Styles -->
-    <style name="tw__QuoteAttributionLine"
-        tools:ignore="NewApi">
+    <style name="tw__QuoteAttributionLine" tools:ignore="NewApi">
         <item name="android:layout_width">wrap_content</item>
         <item name="android:layout_height">wrap_content</item>
         <item name="android:importantForAccessibility">noHideDescendants</item>
-        <item name="android:layout_marginTop">@dimen/tw__quote_tweet_attribution_text_margin_top</item>
-        <item name="android:layout_marginLeft">@dimen/tw__quote_tweet_attribution_text_margin_horizontal</item>
-        <item name="android:layout_marginStart">@dimen/tw__quote_tweet_attribution_text_margin_horizontal</item>
-        <item name="android:layout_marginRight">@dimen/tw__quote_tweet_attribution_text_margin_horizontal</item>
-        <item name="android:layout_marginEnd">@dimen/tw__quote_tweet_attribution_text_margin_horizontal</item>
+        <item name="android:layout_marginTop">@dimen/tw__quote_tweet_attribution_text_margin_top
+        </item>
+        <item name="android:layout_marginLeft">
+            @dimen/tw__quote_tweet_attribution_text_margin_horizontal
+        </item>
+        <item name="android:layout_marginStart">
+            @dimen/tw__quote_tweet_attribution_text_margin_horizontal
+        </item>
+        <item name="android:layout_marginRight">
+            @dimen/tw__quote_tweet_attribution_text_margin_horizontal
+        </item>
+        <item name="android:layout_marginEnd">
+            @dimen/tw__quote_tweet_attribution_text_margin_horizontal
+        </item>
     </style>
 
     <style name="tw__TweetText.Quote" tools:ignore="NewApi">
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/CollectionTimelineTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/CollectionTimelineTest.java
index 4803e104..d6a370d8 100644
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/CollectionTimelineTest.java
+++ b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/CollectionTimelineTest.java
@@ -175,8 +175,8 @@ public void testGetOrderedTweets_respectsTimelineItemsOrder() {
     @Test
     public void testGetOrderedTweets_handlesNull() {
         TwitterCollection collection = new TwitterCollection(
-            new TwitterCollection.Content(null, testUserMap),
-            new TwitterCollection.Metadata("", TEST_POSITION, testItems));
+                new TwitterCollection.Content(null, testUserMap),
+                new TwitterCollection.Metadata("", TEST_POSITION, testItems));
         List<Tweet> tweets = CollectionTimeline.getOrderedTweets(collection);
         assertTrue(tweets.isEmpty());
         collection = new TwitterCollection(new TwitterCollection.Content(testTweetMap, null),
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/FixedTweetTimelineTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/FixedTweetTimelineTest.java
index 42c67639..367c5378 100644
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/FixedTweetTimelineTest.java
+++ b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/FixedTweetTimelineTest.java
@@ -71,6 +71,7 @@ public void success(Result<TimelineResult<Tweet>> result) {
                         result.data.timelineCursor.maxPosition);
                 assertNull(result.response);
             }
+
             @Override
             public void failure(TwitterException exception) {
                 fail("Expected FixedTweetTimeline next to always succeed.");
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/LikeTweetActionTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/LikeTweetActionTest.java
index a7d10873..31bd6232 100644
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/LikeTweetActionTest.java
+++ b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/LikeTweetActionTest.java
@@ -30,7 +30,6 @@
 import org.mockito.ArgumentCaptor;
 import org.robolectric.RobolectricTestRunner;
 
-import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertTrue;
 import static org.mockito.Mockito.eq;
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/SearchTimelineTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/SearchTimelineTest.java
index 7aa344b5..bf35be65 100644
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/SearchTimelineTest.java
+++ b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/SearchTimelineTest.java
@@ -147,9 +147,9 @@ public void testCreateSearchRequest() {
         // assert searchTimeline call is made with the correct arguments
         verify(twitterCore.getApiClient().getSearchService())
                 .tweets(eq(TEST_QUERY + SearchTimeline.FILTER_RETWEETS),
-                isNull(Geocode.class), eq(TEST_LANG), isNull(String.class),
-                eq(TEST_RESULT_TYPE), eq(TEST_ITEMS_PER_REQUEST), eq(TEST_UNTIL_DATE),
-                eq(TEST_SINCE_ID), eq(TEST_MAX_ID), eq(true));
+                        isNull(Geocode.class), eq(TEST_LANG), isNull(String.class),
+                        eq(TEST_RESULT_TYPE), eq(TEST_ITEMS_PER_REQUEST), eq(TEST_UNTIL_DATE),
+                        eq(TEST_SINCE_ID), eq(TEST_MAX_ID), eq(true));
     }
 
     /* Builder */
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineDelegateTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineDelegateTest.java
index 4a28a07b..43e02bf7 100644
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineDelegateTest.java
+++ b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineDelegateTest.java
@@ -656,7 +656,8 @@ public void testNotifyDataSetInvalidated() {
 
         /**
          * Constructs a FakeItemTimeline
-         * @param numItems the number of TestItems to return per call to next/previous
+         *
+         * @param numItems    the number of TestItems to return per call to next/previous
          * @param minPosition the TimelineCursor minPosition returned by calls to next/previous
          * @param maxPosition the TimelineCursor maxPosition returned by calls to next/previous
          */
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineListAdapterTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineListAdapterTest.java
index 71d28a66..bf4b0e1f 100644
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineListAdapterTest.java
+++ b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TimelineListAdapterTest.java
@@ -136,7 +136,7 @@ public void testNotifyDataSetInvalidated() {
         }
 
         TestTimelineListAdapter(Context context, TimelineDelegate<T> delegate) {
-           super(context, delegate);
+            super(context, delegate);
         }
 
         @Override
@@ -147,6 +147,7 @@ public View getView(int position, View convertView, ViewGroup parent) {
 
     /**
      * Makes class public so it can be mocked on ART runtime.
+     *
      * @param <T>
      */
     class TestTimelineDelegate<T extends Identifiable> extends TimelineDelegate {
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetTextLinkifierTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetTextLinkifierTest.java
index a027cf42..ab756e89 100644
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetTextLinkifierTest.java
+++ b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TweetTextLinkifierTest.java
@@ -135,7 +135,7 @@ public void testLinkifyHashtags_oneHashtagEntity() {
         final CharSequence linkifiedText
                 = TweetTextLinkifier.linkifyUrls(formattedText, null, 0, 0, true, true);
         final String displayUrlFromEntity = linkifiedText.subSequence(hashtagEntity.getStart(),
-                        hashtagEntity.getEnd()).toString();
+                hashtagEntity.getEnd()).toString();
         assertEquals(fullHashtag, displayUrlFromEntity);
     }
 
diff --git a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TwitterListTimelineTest.java b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TwitterListTimelineTest.java
index b49e9744..2981801c 100644
--- a/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TwitterListTimelineTest.java
+++ b/tweet-ui/src/test/java/com/twitter/sdk/android/tweetui/TwitterListTimelineTest.java
@@ -38,7 +38,7 @@
     private static final Integer REQUIRED_DEFAULT_ITEMS_PER_REQUEST = 30;
     private static final Long TEST_LIST_ID = 128271137L;
     private static final String TEST_SLUG = "cool-accounts";
-    private static final Long TEST_OWNER_ID =  623265148L;
+    private static final Long TEST_OWNER_ID = 623265148L;
     private static final String TEST_OWNER_SCREEN_NAME = "dghubble";
     private static final Integer TEST_ITEMS_PER_REQUEST = 100;
     private static final Long TEST_SINCE_ID = 1000L;
diff --git a/tweet-ui/src/test/resources/robolectric.properties b/tweet-ui/src/test/resources/robolectric.properties
index 37ab2cac..fa795dba 100644
--- a/tweet-ui/src/test/resources/robolectric.properties
+++ b/tweet-ui/src/test/resources/robolectric.properties
@@ -1,2 +1,2 @@
-sdk = 21
-constants = com.twitter.sdk.android.tweetui.BuildConfig
\ No newline at end of file
+sdk=21
+constants=com.twitter.sdk.android.tweetui.BuildConfig
\ No newline at end of file
diff --git a/twitter-core/build.gradle b/twitter-core/build.gradle
index d3f2fecf..d4f68831 100644
--- a/twitter-core/build.gradle
+++ b/twitter-core/build.gradle
@@ -19,7 +19,6 @@ apply plugin: 'com.android.library'
 
 android {
     compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
 
     defaultConfig {
         versionCode 1
@@ -32,16 +31,13 @@ android {
         debug {
             buildConfigField "String", "GROUP", "\"${pom_group_id}\""
             buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
             buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
 
-            testCoverageEnabled enableTestCodeCoverage
         }
 
         release {
             buildConfigField "String", "GROUP", "\"${pom_group_id}\""
             buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
             buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
         }
     }
@@ -51,26 +47,13 @@ android {
     }
 
     compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
+        sourceCompatibility 1.8
+        targetCompatibility 1.8
     }
 }
 
 dependencies {
-    api dependency.retrofit
-    implementation dependency.retrofitGsonConverter
-    api dependency.gson
-    api dependency.okHttp
+    api "com.squareup.retrofit2:retrofit:2.5.0"
+    api "com.squareup.retrofit2:converter-gson:2.5.0"
 
-    androidTestCompile dependency.mockito
-    androidTestCompile dependency.dexmakerMockito
-
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile dependency.retrofitMock
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
-    testCompile dependency.equalsVerifier
 }
diff --git a/twitter-core/gradle.properties b/twitter-core/gradle.properties
index 12a56bf1..ed8b5e13 100644
--- a/twitter-core/gradle.properties
+++ b/twitter-core/gradle.properties
@@ -14,12 +14,10 @@
 # limitations under the License.
 #
 #
-
 # The to be released version. When releasing, drop -SNAPSHOT. After releasing, bump version
 # number and add back -SNAPSHOT
 version=3.3.0-SNAPSHOT
 version_code=1
-
 pom_name=Twitter Core Android SDK
 pom_group_id=com.twitter.sdk.android
 pom_artifact_id=twitter-core
diff --git a/twitter-core/internal-build.gradle b/twitter-core/internal-build.gradle
index eb21d956..8db5375c 100644
--- a/twitter-core/internal-build.gradle
+++ b/twitter-core/internal-build.gradle
@@ -1,5 +1,4 @@
-import io.fabric.gradle.weaving.ArtifactSizePlugin
-import io.fabric.gradle.weaving.DexMethodCountPlugin
+
 
 /*
  * Copyright (C) 2015 Twitter, Inc.
@@ -20,8 +19,6 @@ import io.fabric.gradle.weaving.DexMethodCountPlugin
 
 apply plugin: 'com.android.library'
 apply from: rootProject.qualityScript
-apply plugin: ArtifactSizePlugin
-apply plugin: DexMethodCountPlugin
 
 android {
     compileSdkVersion rootProject.compileSdkVersion
diff --git a/twitter-core/lint.xml b/twitter-core/lint.xml
index 3b48abfe..ea425a25 100644
--- a/twitter-core/lint.xml
+++ b/twitter-core/lint.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
+<?xml version="1.0" encoding="UTF-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
@@ -21,19 +20,18 @@
         <!-- Suppress lint warning on xxxhdpi, which "is necessary only to provide a launcher icon
         that can appear larger than usual on an xxhdpi device. You do not need to provide xxxhdpi
         assets for all your app's images." -->
-        <ignore path="src/debug/res/drawable-xxxhdpi"/>
+        <ignore path="src/debug/res/drawable-xxxhdpi" />
     </issue>
     <issue id="SetJavaScriptEnabled" severity="error">
-        <ignore
-            path="src/main/java/com/twitter/sdk/android/core/identity/OAuthActivity.java"/>
+        <ignore path="src/main/java/com/twitter/sdk/android/core/identity/OAuthActivity.java" />
     </issue>
     <issue id="TrulyRandom" severity="ignore" />
-    <issue id="PackageManagerGetSignatures" severity="ignore"/>
+    <issue id="PackageManagerGetSignatures" severity="ignore" />
     <issue id="ParcelCreator" severity="error">
         <ignore
-            path="src/main/java/com/twitter/sdk/android/core/internal/oauth/GuestAuthToken.java"/>
+            path="src/main/java/com/twitter/sdk/android/core/internal/oauth/GuestAuthToken.java" />
         <ignore
-            path="src/main/java/com/twitter/sdk/android/core/identity/ShareEmailResultReceiver.java"/>
+            path="src/main/java/com/twitter/sdk/android/core/identity/ShareEmailResultReceiver.java" />
     </issue>
-    <issue id="InvalidPackage" severity="ignore"/>
+    <issue id="InvalidPackage" severity="ignore" />
 </lint>
diff --git a/twitter-core/src/androidTest/assets/scribe_event.json b/twitter-core/src/androidTest/assets/scribe_event.json
index c219e3cf..8791c97e 100644
--- a/twitter-core/src/androidTest/assets/scribe_event.json
+++ b/twitter-core/src/androidTest/assets/scribe_event.json
@@ -1 +1,14 @@
-{"_category_":"testcategory","event_namespace":{"action":"testaction","client":"testclient","component":"testcomponent","element":"testelement","page":"testpage","section":"testsection"},"format_version":"2","items":[],"ts":"1404426136717"}
+{
+  "_category_": "testcategory",
+  "event_namespace": {
+    "action": "testaction",
+    "client": "testclient",
+    "component": "testcomponent",
+    "element": "testelement",
+    "page": "testpage",
+    "section": "testsection"
+  },
+  "format_version": "2",
+  "items": [],
+  "ts": "1404426136717"
+}
diff --git a/twitter-core/src/androidTest/java/com/twitter/sdk/android/core/identity/TestOAuthController.java b/twitter-core/src/androidTest/java/com/twitter/sdk/android/core/identity/TestOAuthController.java
index 218a0d17..82331845 100644
--- a/twitter-core/src/androidTest/java/com/twitter/sdk/android/core/identity/TestOAuthController.java
+++ b/twitter-core/src/androidTest/java/com/twitter/sdk/android/core/identity/TestOAuthController.java
@@ -29,7 +29,7 @@
 public class TestOAuthController extends OAuthController {
 
     TestOAuthController(ProgressBar spinner, WebView webView, TwitterAuthConfig authConfig,
-            OAuth1aService oAuth1aService, Listener listener) {
+                        OAuth1aService oAuth1aService, Listener listener) {
         super(spinner, webView, authConfig, oAuth1aService, listener);
     }
 }
diff --git a/twitter-core/src/androidTest/java/com/twitter/sdk/android/core/identity/TwitterLoginButtonTest.java b/twitter-core/src/androidTest/java/com/twitter/sdk/android/core/identity/TwitterLoginButtonTest.java
index 916d5c75..7bf250ef 100644
--- a/twitter-core/src/androidTest/java/com/twitter/sdk/android/core/identity/TwitterLoginButtonTest.java
+++ b/twitter-core/src/androidTest/java/com/twitter/sdk/android/core/identity/TwitterLoginButtonTest.java
@@ -110,18 +110,18 @@ protected Activity getActivity() {
     }
 
     public void testConstructor_editMode() throws Exception {
-            final TwitterLoginButton button = new TwitterLoginButton(getContext()) {
-                @Override
-                protected Activity getActivity() {
-                    return mock(Activity.class);
-                }
+        final TwitterLoginButton button = new TwitterLoginButton(getContext()) {
+            @Override
+            protected Activity getActivity() {
+                return mock(Activity.class);
+            }
 
-                @Override
-                public boolean isInEditMode() {
-                    return true;
-                }
-            };
-            assertTrue(button.isEnabled());
+            @Override
+            public boolean isInEditMode() {
+                return true;
+            }
+        };
+        assertTrue(button.isEnabled());
     }
 
     public void testConstructor_twitterNotStarted() throws Exception {
diff --git a/twitter-core/src/debug/java/com/twitter/sdk/android/core/TwitterCoreTestUtils.java b/twitter-core/src/debug/java/com/twitter/sdk/android/core/TwitterCoreTestUtils.java
index a78a4ee4..6f6e1983 100644
--- a/twitter-core/src/debug/java/com/twitter/sdk/android/core/TwitterCoreTestUtils.java
+++ b/twitter-core/src/debug/java/com/twitter/sdk/android/core/TwitterCoreTestUtils.java
@@ -21,10 +21,11 @@
 
 public final class TwitterCoreTestUtils {
 
-    private TwitterCoreTestUtils() {}
+    private TwitterCoreTestUtils() {
+    }
 
     public static TwitterCore createTwitterCore(TwitterAuthConfig authConfig,
-            ConcurrentHashMap<Session, TwitterApiClient> clients, TwitterApiClient guestClient) {
+                                                ConcurrentHashMap<Session, TwitterApiClient> clients, TwitterApiClient guestClient) {
 
         TwitterCore.instance = new TwitterCore(authConfig, clients, guestClient);
         return TwitterCore.instance;
diff --git a/twitter-core/src/main/AndroidManifest.xml b/twitter-core/src/main/AndroidManifest.xml
index 2583a7a2..005114e3 100644
--- a/twitter-core/src/main/AndroidManifest.xml
+++ b/twitter-core/src/main/AndroidManifest.xml
@@ -16,16 +16,17 @@
   -->
 
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.twitter.sdk.android.core">
+    package="com.twitter.sdk.android.core">
 
-    <uses-permission android:name="android.permission.INTERNET"/>
+    <uses-permission android:name="android.permission.INTERNET" />
 
     <application>
 
-        <activity android:name=".identity.OAuthActivity"
-                  android:configChanges="orientation|screenSize"
-                  android:excludeFromRecents="true"
-                  android:exported="false"/>
+        <activity
+            android:name=".identity.OAuthActivity"
+            android:configChanges="orientation|screenSize"
+            android:excludeFromRecents="true"
+            android:exported="false" />
 
     </application>
 
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/AuthToken.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/AuthToken.java
index 8f83c7fa..66ac8075 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/AuthToken.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/AuthToken.java
@@ -41,6 +41,7 @@ protected AuthToken(long createdAt) {
 
     /**
      * Determines whether a token is known to have expired.
+     *
      * @return true if the token is known to have expired, otherwise false to indicate the token
      * may or may not be considered expired by the server.
      */
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/AuthTokenAdapter.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/AuthTokenAdapter.java
index 2dde8693..0d404f59 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/AuthTokenAdapter.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/AuthTokenAdapter.java
@@ -44,6 +44,7 @@
 
     static final Map<String, Class<? extends AuthToken>> authTypeRegistry
             = new HashMap<>();
+
     static {
         authTypeRegistry.put("oauth1a", TwitterAuthToken.class);
         authTypeRegistry.put("oauth2", OAuth2Token.class);
@@ -67,7 +68,7 @@ public JsonElement serialize(AuthToken src, Type typeOfSrc, JsonSerializationCon
     @Override
     public AuthToken deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)
             throws JsonParseException {
-        final JsonObject jsonObject =  json.getAsJsonObject();
+        final JsonObject jsonObject = json.getAsJsonObject();
         final JsonPrimitive jsonAuthType = jsonObject.getAsJsonPrimitive(AUTH_TYPE);
         final String authType = jsonAuthType.getAsString();
         final JsonElement jsonAuthToken = jsonObject.get(AUTH_TOKEN);
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/Callback.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/Callback.java
index b9510a49..9cd65663 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/Callback.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/Callback.java
@@ -35,7 +35,7 @@
 public abstract class Callback<T> implements retrofit2.Callback<T> {
 
     @Override
-    public final void onResponse(Call<T> call, Response<T> response){
+    public final void onResponse(Call<T> call, Response<T> response) {
         if (response.isSuccessful()) {
             success(new Result<>(response.body(), response));
         } else {
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/GuestSession.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/GuestSession.java
index bee3a160..c22438cc 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/GuestSession.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/GuestSession.java
@@ -29,7 +29,6 @@
 
     /**
      * @param authToken Auth token
-     *
      * @throws java.lang.IllegalArgumentException if token argument is null
      */
     public GuestSession(GuestAuthToken authToken) {
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/GuestSessionProvider.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/GuestSessionProvider.java
index 8694e2f8..626b3be8 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/GuestSessionProvider.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/GuestSessionProvider.java
@@ -27,7 +27,7 @@
     private final SessionManager<GuestSession> sessionManager;
 
     public GuestSessionProvider(OAuth2Service oAuth2Service,
-            SessionManager<GuestSession> sessionManager) {
+                                SessionManager<GuestSession> sessionManager) {
         this.oAuth2Service = oAuth2Service;
         this.sessionManager = sessionManager;
     }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/Logger.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/Logger.java
index ca0467c1..f75be13f 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/Logger.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/Logger.java
@@ -23,21 +23,32 @@
 public interface Logger {
 
     boolean isLoggable(String tag, int level);
+
     int getLogLevel();
+
     void setLogLevel(int logLevel);
 
     void d(String tag, String text, Throwable throwable);
+
     void v(String tag, String text, Throwable throwable);
+
     void i(String tag, String text, Throwable throwable);
+
     void w(String tag, String text, Throwable throwable);
+
     void e(String tag, String text, Throwable throwable);
 
     void d(String tag, String text);
+
     void v(String tag, String text);
+
     void i(String tag, String text);
+
     void w(String tag, String text);
+
     void e(String tag, String text);
 
     void log(int priority, String tag, String msg);
+
     void log(int priority, String tag, String msg, boolean forceLog);
 }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/OAuthSigning.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/OAuthSigning.java
index f87a63f7..aa2d3b7c 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/OAuthSigning.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/OAuthSigning.java
@@ -44,7 +44,7 @@ public OAuthSigning(TwitterAuthConfig authConfig, TwitterAuthToken authToken) {
     }
 
     OAuthSigning(TwitterAuthConfig authConfig, TwitterAuthToken authToken,
-            OAuth1aHeaders oAuth1aHeaders) {
+                 OAuth1aHeaders oAuth1aHeaders) {
         if (authConfig == null) {
             throw new IllegalArgumentException("authConfig must not be null");
         }
@@ -60,19 +60,19 @@ public OAuthSigning(TwitterAuthConfig authConfig, TwitterAuthToken authToken) {
     /**
      * Gets authorization header for inclusion in HTTP request headers.
      *
-     * @param method The HTTP method.
-     * @param url The url.
+     * @param method     The HTTP method.
+     * @param url        The url.
      * @param postParams The post parameters.
      */
     public String getAuthorizationHeader(String method, String url,
-            Map<String, String> postParams) {
+                                         Map<String, String> postParams) {
         return oAuth1aHeaders.getAuthorizationHeader(authConfig, authToken, null, method, url,
                 postParams);
     }
 
     /**
      * Returns OAuth Echo header using given parameters.
-     *
+     * <p>
      * OAuth Echo allows you to securely delegate an API request to a third party. For example,
      * you may wish to verify a users credentials from your backend (i.e. the third party). This
      * method provides the OAuth parameters required to make an authenticated request from your
@@ -85,7 +85,7 @@ public String getAuthorizationHeader(String method, String url,
      * @see <a href="https://dev.twitter.com/oauth/echo">OAuth Echo</a>
      */
     public Map<String, String> getOAuthEchoHeaders(String method, String url,
-            Map<String, String> postParams) {
+                                                   Map<String, String> postParams) {
         return oAuth1aHeaders.getOAuthEchoHeaders(authConfig, authToken, null, method, url,
                 postParams);
     }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/PersistedSessionManager.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/PersistedSessionManager.java
index 50a19798..793d7326 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/PersistedSessionManager.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/PersistedSessionManager.java
@@ -43,8 +43,8 @@
     private volatile boolean restorePending = true;
 
     public PersistedSessionManager(PreferenceStore preferenceStore,
-            SerializationStrategy<T> serializer, String prefKeyActiveSession,
-            String prefKeySession) {
+                                   SerializationStrategy<T> serializer, String prefKeyActiveSession,
+                                   String prefKeySession) {
         this(preferenceStore, serializer, new ConcurrentHashMap<>(NUM_SESSIONS),
                 new ConcurrentHashMap<>(NUM_SESSIONS),
                 new PreferenceStoreStrategy<>(preferenceStore, serializer,
@@ -52,10 +52,10 @@ public PersistedSessionManager(PreferenceStore preferenceStore,
     }
 
     PersistedSessionManager(PreferenceStore preferenceStore,
-            SerializationStrategy<T> serializer, ConcurrentHashMap<Long, T> sessionMap,
-            ConcurrentHashMap<Long, PreferenceStoreStrategy<T>> storageMap,
-            PreferenceStoreStrategy<T> activesSessionStorage,
-            String prefKeySession) {
+                            SerializationStrategy<T> serializer, ConcurrentHashMap<Long, T> sessionMap,
+                            ConcurrentHashMap<Long, PreferenceStoreStrategy<T>> storageMap,
+                            PreferenceStoreStrategy<T> activesSessionStorage,
+                            String prefKeySession) {
         this.preferenceStore = preferenceStore;
         this.serializer = serializer;
         this.sessionMap = sessionMap;
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/Twitter.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/Twitter.java
index 1b84d5f7..ed5506d5 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/Twitter.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/Twitter.java
@@ -28,7 +28,7 @@
 import java.util.concurrent.ExecutorService;
 
 /**
- *  The {@link Twitter} class stores common configuration and state for TwitterKit SDK.
+ * The {@link Twitter} class stores common configuration and state for TwitterKit SDK.
  */
 public class Twitter {
     public static final String TAG = "Twitter";
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterApiClient.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterApiClient.java
index 9d1e21a7..3dc5847f 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterApiClient.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterApiClient.java
@@ -59,7 +59,7 @@ public TwitterApiClient() {
 
     /**
      * Constructs Guest Session based TwitterApiClient, with custom http client.
-     *
+     * <p>
      * The custom http client can be constructed with {@link okhttp3.Interceptor}, and other
      * optional params provided in {@link okhttp3.OkHttpClient}.
      */
@@ -67,7 +67,7 @@ public TwitterApiClient(OkHttpClient client) {
         this(OkHttpClientHelper.getCustomOkHttpClient(
                 client,
                 TwitterCore.getInstance().getGuestSessionProvider()),
-            new TwitterApi());
+                new TwitterApi());
     }
 
     /**
@@ -77,12 +77,12 @@ public TwitterApiClient(TwitterSession session) {
         this(OkHttpClientHelper.getOkHttpClient(
                 session,
                 TwitterCore.getInstance().getAuthConfig()),
-            new TwitterApi());
+                new TwitterApi());
     }
 
     /**
      * Constructs User Session based TwitterApiClient, with custom http client.
-     *
+     * <p>
      * The custom http client can be constructed with {@link okhttp3.Interceptor}, and other
      * optional params provided in {@link okhttp3.OkHttpClient}.
      */
@@ -91,7 +91,7 @@ public TwitterApiClient(TwitterSession session, OkHttpClient client) {
                 client,
                 session,
                 TwitterCore.getInstance().getAuthConfig()),
-            new TwitterApi());
+                new TwitterApi());
     }
 
     TwitterApiClient(OkHttpClient client, TwitterApi twitterApi) {
@@ -156,6 +156,7 @@ public ListService getListService() {
 
     /**
      * Use CollectionTimeline directly, CollectionService is expected to change.
+     *
      * @return {@link CollectionService} to access TwitterApi
      */
     public CollectionService getCollectionService() {
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterApiException.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterApiException.java
index 73f031fd..76a36042 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterApiException.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterApiException.java
@@ -44,7 +44,7 @@ public TwitterApiException(Response response) {
     }
 
     TwitterApiException(Response response, ApiError apiError, TwitterRateLimit twitterRateLimit,
-            int code) {
+                        int code) {
         super(createExceptionMessage(code));
         this.apiError = apiError;
         this.twitterRateLimit = twitterRateLimit;
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterAuthConfig.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterAuthConfig.java
index 56a8e109..7a08633d 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterAuthConfig.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterAuthConfig.java
@@ -48,7 +48,6 @@ public TwitterAuthConfig createFromParcel(Parcel in) {
     /**
      * @param consumerKey    The consumer key.
      * @param consumerSecret The consumer secret.
-     *
      * @throws java.lang.IllegalArgumentException if consumer key or consumer secret is null.
      */
     public TwitterAuthConfig(String consumerKey, String consumerSecret) {
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterConfig.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterConfig.java
index e6dcf361..e9da8e75 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterConfig.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterConfig.java
@@ -32,7 +32,7 @@
     final Boolean debug;
 
     private TwitterConfig(Context context, Logger logger, TwitterAuthConfig twitterAuthConfig,
-            ExecutorService executorService, Boolean debug) {
+                          ExecutorService executorService, Boolean debug) {
         this.context = context;
         this.logger = logger;
         this.twitterAuthConfig = twitterAuthConfig;
@@ -42,7 +42,7 @@ private TwitterConfig(Context context, Logger logger, TwitterAuthConfig twitterA
 
     /**
      * Builder for creating {@link TwitterConfig} instances.
-     * */
+     */
     public static class Builder {
         private final Context context;
         private Logger logger;
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterContext.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterContext.java
index f4cbd56a..2287d20b 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterContext.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterContext.java
@@ -49,14 +49,14 @@ public File getDatabasePath(String name) {
 
     @Override
     public SQLiteDatabase openOrCreateDatabase(String name, int mode,
-            SQLiteDatabase.CursorFactory factory) {
+                                               SQLiteDatabase.CursorFactory factory) {
         return android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(
                 getDatabasePath(name), factory);
     }
 
     @Override
     public SQLiteDatabase openOrCreateDatabase(String name, int mode,
-            SQLiteDatabase.CursorFactory factory, DatabaseErrorHandler errorHandler) {
+                                               SQLiteDatabase.CursorFactory factory, DatabaseErrorHandler errorHandler) {
         return android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(
                 getDatabasePath(name).getPath(), factory, errorHandler);
     }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterCore.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterCore.java
index 026549ac..0084c2bb 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterCore.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterCore.java
@@ -92,7 +92,7 @@ public static TwitterCore getInstance() {
     }
 
     public String getVersion() {
-        return BuildConfig.VERSION_NAME + "." + BuildConfig.BUILD_NUMBER;
+        return BuildConfig.VERSION_NAME;
     }
 
     public TwitterAuthConfig getAuthConfig() {
@@ -145,7 +145,7 @@ private synchronized void createGuestSessionProvider() {
     /**
      * Creates {@link com.twitter.sdk.android.core.TwitterApiClient} from default
      * {@link com.twitter.sdk.android.core.Session}.
-     *
+     * <p>
      * Caches internally for efficient access.
      */
     public TwitterApiClient getApiClient() {
@@ -160,8 +160,9 @@ public TwitterApiClient getApiClient() {
     /**
      * Creates {@link com.twitter.sdk.android.core.TwitterApiClient} from authenticated
      * {@link com.twitter.sdk.android.core.Session} provided.
-     *
+     * <p>
      * Caches internally for efficient access.
+     *
      * @param session the session
      */
     public TwitterApiClient getApiClient(TwitterSession session) {
@@ -173,7 +174,7 @@ public TwitterApiClient getApiClient(TwitterSession session) {
 
     /**
      * Add custom {@link com.twitter.sdk.android.core.TwitterApiClient} for guest auth access.
-     *
+     * <p>
      * Only adds guest auth client if it's not already defined. Caches internally for efficient
      * access and storing it in TwitterCore's singleton.
      *
@@ -188,11 +189,11 @@ public void addGuestApiClient(TwitterApiClient customTwitterApiClient) {
     /**
      * Add custom {@link com.twitter.sdk.android.core.TwitterApiClient} for authenticated
      * {@link com.twitter.sdk.android.core.Session} access.
-     *
+     * <p>
      * Only adds session auth client if it's not already defined. Caches internally for efficient
      * access and storing it in TwitterCore's singleton.
      *
-     * @param session the session
+     * @param session                the session
      * @param customTwitterApiClient the custom twitter api client
      */
     public void addApiClient(TwitterSession session, TwitterApiClient customTwitterApiClient) {
@@ -203,7 +204,7 @@ public void addApiClient(TwitterSession session, TwitterApiClient customTwitterA
 
     /**
      * Creates {@link com.twitter.sdk.android.core.TwitterApiClient} using guest authentication.
-     *
+     * <p>
      * Caches internally for efficient access.
      */
     public TwitterApiClient getGuestApiClient() {
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterRateLimit.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterRateLimit.java
index 855b7fa2..d25c285a 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterRateLimit.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterRateLimit.java
@@ -24,7 +24,7 @@
  *
  * @see <a href="https://dev.twitter.com/rest/public/rate-limiting">Rate Limiting</a>
  */
-public class TwitterRateLimit  {
+public class TwitterRateLimit {
 
     private static final String LIMIT_KEY = "x-rate-limit-limit";
     private static final String REMAINING_KEY = "x-rate-limit-remaining";
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterSession.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterSession.java
index e2955409..78e29ede 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterSession.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterSession.java
@@ -37,7 +37,6 @@
      * @param authToken Auth token
      * @param userId    User ID
      * @param userName  User Name
-     *
      * @throws java.lang.IllegalArgumentException if token argument is null
      */
     public TwitterSession(TwitterAuthToken authToken, long userId, String userName) {
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/OAuthController.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/OAuthController.java
index 9071a511..75ec2d9c 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/OAuthController.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/OAuthController.java
@@ -54,7 +54,7 @@
     private final OAuth1aService oAuth1aService;
 
     OAuthController(ProgressBar spinner, WebView webView, TwitterAuthConfig authConfig,
-            OAuth1aService oAuth1aService, Listener listener) {
+                    OAuth1aService oAuth1aService, Listener listener) {
         this.spinner = spinner;
         this.webView = webView;
         this.authConfig = authConfig;
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/OAuthHandler.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/OAuthHandler.java
index 285f461a..62a23338 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/OAuthHandler.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/OAuthHandler.java
@@ -34,7 +34,7 @@
      * @param callback   The listener to callback when authorization completes.
      */
     OAuthHandler(TwitterAuthConfig authConfig, Callback<TwitterSession> callback,
-            int requestCode) {
+                 int requestCode) {
         super(authConfig, callback, requestCode);
     }
 
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/OAuthWebViewClient.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/OAuthWebViewClient.java
index 59f26e02..934e31ed 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/OAuthWebViewClient.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/OAuthWebViewClient.java
@@ -33,7 +33,9 @@
 
     interface Listener {
         void onPageFinished(WebView webView, String url);
+
         void onSuccess(Bundle bundle);
+
         void onError(WebViewException exception);
     }
 
@@ -68,7 +70,7 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {
 
     @Override
     public void onReceivedError(WebView view, int errorCode,
-            String description, String failingUrl) {
+                                String description, String failingUrl) {
         super.onReceivedError(view, errorCode, description, failingUrl);
         listener.onError(new WebViewException(errorCode, description, failingUrl));
     }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/SSOAuthHandler.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/SSOAuthHandler.java
index 3fe43ee2..f354b930 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/SSOAuthHandler.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/SSOAuthHandler.java
@@ -91,7 +91,7 @@
     private static final String EXTRA_CONSUMER_SECRET = "cs";
 
     SSOAuthHandler(TwitterAuthConfig authConfig, Callback<TwitterSession> callback,
-            int requestCode) {
+                   int requestCode) {
         super(authConfig, callback, requestCode);
     }
 
@@ -130,6 +130,7 @@ private boolean startAuthActivityForResult(Activity activity) {
 
     /**
      * Returns an available SSO app package, preferring Twitter for Android, then Twitter Dogfood.
+     *
      * @param pm the PackageManager for checking available app packages.
      * @return the app package name to use for SSO.
      */
@@ -145,6 +146,7 @@ public static String availableSSOPackage(PackageManager pm) {
 
     /**
      * Returns true if Twitter for Android or Twitter Dogfood is installed.
+     *
      * @param context a context
      * @return true if Twitter is installed; otherwise, false.
      */
@@ -155,7 +157,7 @@ public static boolean isAvailable(Context context) {
     }
 
     private static boolean checkAppSignature(PackageManager pm, String packageName,
-            String requiredSignature) {
+                                             String requiredSignature) {
         final PackageInfo p;
         try {
             p = pm.getPackageInfo(packageName, PackageManager.GET_SIGNATURES);
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/TwitterAuthClient.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/TwitterAuthClient.java
index 698e8379..d269da57 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/TwitterAuthClient.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/TwitterAuthClient.java
@@ -70,7 +70,7 @@ public TwitterAuthClient() {
         this.sessionManager = sessionManager;
     }
 
-     /**
+    /**
      * Requests authorization.
      *
      * @param activity The {@link android.app.Activity} context to use for the authorization flow.
@@ -129,8 +129,8 @@ private boolean authorizeUsingOAuth(Activity activity, CallbackWrapper callbackW
      * is called to complete the authorization flow.
      *
      * @param requestCode the request code used for SSO
-     * @param resultCode the result code returned by the SSO activity
-     * @param data the result data returned by the SSO activity
+     * @param resultCode  the result code returned by the SSO activity
+     * @param data        the result data returned by the SSO activity
      */
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         Twitter.getLogger().d(TwitterCore.TAG,
@@ -149,7 +149,7 @@ public void onActivityResult(int requestCode, int resultCode, Intent data) {
     /**
      * Requests the user's email address.
      *
-     * @param session the user session
+     * @param session  the user session
      * @param callback The callback interface to invoke when the request completes. If the user
      *                 denies access to the email address, or the email address is not available,
      *                 an error is returned.
@@ -177,7 +177,7 @@ public void failure(TwitterException exception) {
         private final Callback<TwitterSession> callback;
 
         CallbackWrapper(SessionManager<TwitterSession> sessionManager,
-                Callback<TwitterSession> callback) {
+                        Callback<TwitterSession> callback) {
             this.sessionManager = sessionManager;
             this.callback = callback;
         }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/TwitterLoginButton.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/TwitterLoginButton.java
index 3b037e4f..4088d878 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/TwitterLoginButton.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/identity/TwitterLoginButton.java
@@ -68,7 +68,7 @@ public TwitterLoginButton(Context context, AttributeSet attrs, int defStyle) {
     }
 
     TwitterLoginButton(Context context, AttributeSet attrs, int defStyle,
-            TwitterAuthClient authClient) {
+                       TwitterAuthClient authClient) {
         super(context, attrs, defStyle);
         this.activityRef = new WeakReference<>(getActivity());
         this.authClient = authClient;
@@ -123,8 +123,8 @@ public void setCallback(Callback<TwitterSession> callback) {
      * is called to complete the authorization flow.
      *
      * @param requestCode the request code used for SSO
-     * @param resultCode the result code returned by the SSO activity
-     * @param data the result data returned by the SSO activity
+     * @param resultCode  the result code returned by the SSO activity
+     * @param data        the result data returned by the SSO activity
      */
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         if (requestCode == getTwitterAuthClient().getRequestCode()) {
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/ActivityLifecycleManager.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/ActivityLifecycleManager.java
index 072084c8..629340ff 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/ActivityLifecycleManager.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/ActivityLifecycleManager.java
@@ -37,13 +37,26 @@
      * Override the methods corresponding to the activity.
      */
     public abstract static class Callbacks {
-        public void onActivityCreated(Activity activity, Bundle bundle) {}
-        public void onActivityStarted(Activity activity) {}
-        public void onActivityResumed(Activity activity) {}
-        public void onActivityPaused(Activity activity) {}
-        public void onActivityStopped(Activity activity) {}
-        public void onActivitySaveInstanceState(Activity activity, Bundle bundle) {}
-        public void onActivityDestroyed(Activity activity) {}
+        public void onActivityCreated(Activity activity, Bundle bundle) {
+        }
+
+        public void onActivityStarted(Activity activity) {
+        }
+
+        public void onActivityResumed(Activity activity) {
+        }
+
+        public void onActivityPaused(Activity activity) {
+        }
+
+        public void onActivityStopped(Activity activity) {
+        }
+
+        public void onActivitySaveInstanceState(Activity activity, Bundle bundle) {
+        }
+
+        public void onActivityDestroyed(Activity activity) {
+        }
     }
 
     /**
@@ -121,7 +134,7 @@ public void onActivityStopped(Activity activity) {
 
                             @Override
                             public void onActivitySaveInstanceState(Activity activity,
-                                    Bundle bundle) {
+                                                                    Bundle bundle) {
                                 callbacks.onActivitySaveInstanceState(activity, bundle);
                             }
 
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/CommonUtils.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/CommonUtils.java
index 86e64988..1dfd4be9 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/CommonUtils.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/CommonUtils.java
@@ -83,6 +83,7 @@ public static void closeOrLog(Closeable c, String message) {
     /**
      * Uses the given context's application icon to retrieve the package name for the resources for the context
      * This package name only differs from context.getPackageName() when using aapt parameter --rename-manifest-package
+     *
      * @param context Context to get resource package name from
      * @return String representing the package name of the resources for the given context
      */
@@ -117,8 +118,8 @@ static int getResourcesIdentifier(Context context, String key, String resourceTy
      * </ol>
      * </p>
      *
-     * @param context {@link Context} to use when accessing resources
-     * @param key {@link String} name of the boolean value to look up
+     * @param context      {@link Context} to use when accessing resources
+     * @param key          {@link String} name of the boolean value to look up
      * @param defaultValue value to be returned if the specified resource could be not be found.
      * @return {@link String} value of the specified property, or an empty string if it could not be found.
      */
@@ -151,8 +152,8 @@ public static boolean getBooleanResourceValue(Context context, String key,
      * will be returned.
      * </p>
      *
-     * @param context {@link Context} to use when accessing resources
-     * @param key {@link String} name of the boolean value to look up
+     * @param context      {@link Context} to use when accessing resources
+     * @param key          {@link String} name of the boolean value to look up
      * @param defaultValue value to be returned if the specified resource could be not be found.
      * @return {@link String} value of the specified property, or an empty string if it could not be found.
      */
@@ -189,8 +190,8 @@ static boolean isClsTrace(Context context) {
      * Used internally to log only when the com.twitter.sdk.android.TRACE_ENABLED resource value
      * is set to true.  When it is, this API passes processing to the log API.
      */
-    public static void logControlled(Context context, String msg){
-        if (isClsTrace(context)){
+    public static void logControlled(Context context, String msg) {
+        if (isClsTrace(context)) {
             Twitter.getLogger().d(Twitter.TAG, msg);
         }
     }
@@ -199,8 +200,8 @@ public static void logControlled(Context context, String msg){
      * Used internally to log errors only when the com.twitter.sdk.android.TRACE_ENABLED resource
      * value is set to true.  When it is, this API passes processing to the logError API.
      */
-    public static void logControlledError(Context context, String msg, Throwable tr){
-        if (isClsTrace(context)){
+    public static void logControlledError(Context context, String msg, Throwable tr) {
+        if (isClsTrace(context)) {
             Twitter.getLogger().e(Twitter.TAG, msg);
         }
     }
@@ -216,10 +217,10 @@ public static void logControlled(Context context, int level, String tag, String
     }
 
     /**
-     *  If {@link Twitter#isDebug()}, throws an IllegalStateException,
-     *  else logs a warning.
+     * If {@link Twitter#isDebug()}, throws an IllegalStateException,
+     * else logs a warning.
      *
-     * @param logTag the log tag to use for logging
+     * @param logTag   the log tag to use for logging
      * @param errorMsg the error message
      */
     public static void logOrThrowIllegalStateException(String logTag, String errorMsg) {
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/ExecutorUtils.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/ExecutorUtils.java
index a8e6529f..fb7ef985 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/ExecutorUtils.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/ExecutorUtils.java
@@ -68,13 +68,13 @@ static ThreadFactory getNamedThreadFactory(final String threadNameTemplate) {
         };
     }
 
-    static void addDelayedShutdownHook(String serviceName, ExecutorService service){
+    static void addDelayedShutdownHook(String serviceName, ExecutorService service) {
         ExecutorUtils.addDelayedShutdownHook(serviceName, service, DEFAULT_TERMINATION_TIMEOUT,
                 SECONDS);
     }
 
     static void addDelayedShutdownHook(final String serviceName,
-            final ExecutorService service, final long terminationTimeout, final TimeUnit timeUnit) {
+                                       final ExecutorService service, final long terminationTimeout, final TimeUnit timeUnit) {
         Runtime.getRuntime().addShutdownHook(new Thread(() -> {
             try {
                 service.shutdown();
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/SessionMonitor.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/SessionMonitor.java
index fc75dc0a..2d171644 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/SessionMonitor.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/SessionMonitor.java
@@ -29,6 +29,7 @@
 
 /**
  * A session monitor for validating sessions.
+ *
  * @param <T>
  */
 public class SessionMonitor<T extends Session> {
@@ -40,18 +41,18 @@
     private final SessionVerifier sessionVerifier;
 
     /**
-     * @param sessionManager A user auth based session manager
+     * @param sessionManager  A user auth based session manager
      * @param executorService used to
      */
     public SessionMonitor(SessionManager<T> sessionManager, ExecutorService executorService,
-            SessionVerifier<T> sessionVerifier) {
+                          SessionVerifier<T> sessionVerifier) {
         this(sessionManager, new SystemCurrentTimeProvider(),
                 executorService, new MonitorState(), sessionVerifier);
     }
 
     SessionMonitor(SessionManager<T> sessionManager, SystemCurrentTimeProvider time,
-            ExecutorService executorService, MonitorState monitorState, SessionVerifier
-            sessionVerifier) {
+                   ExecutorService executorService, MonitorState monitorState, SessionVerifier
+                           sessionVerifier) {
         this.time = time;
         this.sessionManager = sessionManager;
         this.executorService = executorService;
@@ -61,6 +62,7 @@ public SessionMonitor(SessionManager<T> sessionManager, ExecutorService executor
 
     /**
      * This is how we hook into the activity lifecycle to detect if the user is using the app.
+     *
      * @param activityLifecycleManager
      */
     public void monitorActivityLifecycle(ActivityLifecycleManager activityLifecycleManager) {
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/TwitterApi.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/TwitterApi.java
index d37201f0..049286ad 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/TwitterApi.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/TwitterApi.java
@@ -68,7 +68,7 @@ public String getBaseHostUrl() {
     public static String buildUserAgent(String clientName, String version) {
         final StringBuilder ua = new StringBuilder(clientName)
                 .append('/').append(version)
-                        // NOTE: We currently do not provide client_version_code information.
+                // NOTE: We currently do not provide client_version_code information.
                 .append(' ')
                 .append(Build.MODEL).append('/').append(Build.VERSION.RELEASE)
                 .append(" (")
@@ -76,7 +76,7 @@ public static String buildUserAgent(String clientName, String version) {
                 .append(Build.MODEL).append(';')
                 .append(Build.BRAND).append(';')
                 .append(Build.PRODUCT)
-                        // NOTE: We do not add client_source, preload, or wifi information.
+                // NOTE: We do not add client_source, preload, or wifi information.
                 .append(')');
         return normalizeString(ua.toString());
     }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/UserUtils.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/UserUtils.java
index a8bad6dd..58068e62 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/UserUtils.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/UserUtils.java
@@ -22,7 +22,8 @@
 import com.twitter.sdk.android.core.models.User;
 
 public final class UserUtils {
-    private UserUtils() {}
+    private UserUtils() {
+    }
 
     // see https://dev.twitter.com/overview/general/user-profile-images-and-banners
     // see also: https://confluence.twitter.biz/display/PLATFORM/Image+Types+and+Sizes
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/VineCardUtils.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/VineCardUtils.java
index a8ef5116..412a46c4 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/VineCardUtils.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/VineCardUtils.java
@@ -26,7 +26,8 @@
     public static final String VINE_CARD = "vine";
     public static final long VINE_USER_ID = 586671909;
 
-    private VineCardUtils() {}
+    private VineCardUtils() {
+    }
 
     public static boolean isVine(Card card) {
         return (PLAYER_CARD.equals(card.name) || VINE_CARD.equals(card.name)) && isVineUser(card);
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/network/OAuth1aInterceptor.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/network/OAuth1aInterceptor.java
index 74a654bd..824fe94d 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/network/OAuth1aInterceptor.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/network/OAuth1aInterceptor.java
@@ -43,7 +43,7 @@
     final TwitterAuthConfig authConfig;
 
     public OAuth1aInterceptor(Session<? extends TwitterAuthToken> session,
-            TwitterAuthConfig authConfig) {
+                              TwitterAuthConfig authConfig) {
         this.session = session;
         this.authConfig = authConfig;
     }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/network/OkHttpClientHelper.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/network/OkHttpClientHelper.java
index 981d5014..644e0b31 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/network/OkHttpClientHelper.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/network/OkHttpClientHelper.java
@@ -31,7 +31,7 @@ public static OkHttpClient getOkHttpClient(GuestSessionProvider guestSessionProv
     }
 
     public static OkHttpClient getOkHttpClient(Session<? extends TwitterAuthToken> session,
-            TwitterAuthConfig authConfig) {
+                                               TwitterAuthConfig authConfig) {
         if (session == null) {
             throw new IllegalArgumentException("Session must not be null.");
         }
@@ -40,7 +40,7 @@ public static OkHttpClient getOkHttpClient(Session<? extends TwitterAuthToken> s
     }
 
     public static OkHttpClient getCustomOkHttpClient(OkHttpClient httpClient,
-            GuestSessionProvider guestSessionProvider) {
+                                                     GuestSessionProvider guestSessionProvider) {
         if (httpClient == null) {
             throw new IllegalArgumentException("HttpClient must not be null.");
         }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/network/UrlUtils.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/network/UrlUtils.java
index 988aa4f9..3db306d2 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/network/UrlUtils.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/network/UrlUtils.java
@@ -87,9 +87,9 @@ public static String urlDecode(String s) {
      * Percent encodes by doing the following:
      * 1) url encode string using UTF8
      * 2) apply additional encoding to string, replacing:
-     *      "*" => "%2A"
-     *      "+" => "%20"
-     *      "%7E" => "~"
+     * "*" => "%2A"
+     * "+" => "%20"
+     * "%7E" => "~"
      *
      * @param s the string to encode
      * @return the encoded string
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aHeaders.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aHeaders.java
index a6d96d73..5517d0a0 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aHeaders.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aHeaders.java
@@ -31,15 +31,15 @@
      * Gets authorization header for inclusion in HTTP request headers.
      *
      * @param authConfig The auth config.
-     * @param authToken The auth token to use to sign the request.
-     * @param callback The callback url.
-     * @param method The HTTP method.
-     * @param url The url.
+     * @param authToken  The auth token to use to sign the request.
+     * @param callback   The callback url.
+     * @param method     The HTTP method.
+     * @param url        The url.
      * @param postParams The post parameters.
      */
     public String getAuthorizationHeader(TwitterAuthConfig authConfig,
-            TwitterAuthToken authToken, String callback, String method, String url,
-            Map<String, String> postParams) {
+                                         TwitterAuthToken authToken, String callback, String method, String url,
+                                         Map<String, String> postParams) {
         final OAuth1aParameters oAuth1aParameters = getOAuth1aParameters(authConfig, authToken,
                 callback, method, url, postParams);
         return oAuth1aParameters.getAuthorizationHeader();
@@ -56,8 +56,8 @@ public String getAuthorizationHeader(TwitterAuthConfig authConfig,
      * @return A map of OAuth Echo headers
      */
     public Map<String, String> getOAuthEchoHeaders(TwitterAuthConfig authConfig,
-            TwitterAuthToken authToken, String callback, String method, String url,
-            Map<String, String> postParams) {
+                                                   TwitterAuthToken authToken, String callback, String method, String url,
+                                                   Map<String, String> postParams) {
         final Map<String, String> headers = new HashMap<>(2);
         final String authorizationHeader = getAuthorizationHeader(authConfig, authToken,
                 callback, method, url, postParams);
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aParameters.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aParameters.java
index 16070904..65785c84 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aParameters.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aParameters.java
@@ -55,7 +55,7 @@
     private final Map<String, String> postParams;
 
     OAuth1aParameters(TwitterAuthConfig authConfig, TwitterAuthToken authToken,
-            String callback, String method, String url, Map<String, String> postParams) {
+                      String callback, String method, String url, Map<String, String> postParams) {
         this.authConfig = authConfig;
         this.authToken = authToken;
         this.callback = callback;
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aService.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aService.java
index 00a573f5..5d12da7b 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aService.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aService.java
@@ -105,10 +105,10 @@ public String buildCallbackUrl(TwitterAuthConfig authConfig) {
      * @param callback The callback interface to invoke when when the request completes.
      */
     public void requestAccessToken(final Callback<OAuthResponse> callback,
-            TwitterAuthToken requestToken, String verifier) {
+                                   TwitterAuthToken requestToken, String verifier) {
         final String url = getAccessTokenUrl();
         final String authHeader = new OAuth1aHeaders().getAuthorizationHeader(getTwitterCore()
-                        .getAuthConfig(), requestToken, null, "POST", url, null);
+                .getAuthConfig(), requestToken, null, "POST", url, null);
 
         api.getAccessToken(authHeader, verifier).enqueue(getCallbackWrapper(callback));
     }
@@ -130,7 +130,7 @@ public String getAuthorizeUrl(TwitterAuthToken requestToken) {
     }
 
     /**
-     * @return  {@link OAuthResponse} parsed from the
+     * @return {@link OAuthResponse} parsed from the
      * response, may be {@code null} if the response does not contain an auth token and secret.
      */
     public static OAuthResponse parseAuthResponse(String response) {
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth2Service.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth2Service.java
index 1440596f..1a0b035a 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth2Service.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth2Service.java
@@ -59,6 +59,7 @@ public OAuth2Service(TwitterCore twitterCore, TwitterApi api) {
 
     /**
      * Requests a guest auth token.
+     *
      * @param callback The callback interface to invoke when when the request completes.
      */
     public void requestGuestAuthToken(final Callback<GuestAuthToken> callback) {
@@ -113,11 +114,11 @@ void requestAppAuthToken(final Callback<OAuth2Token> callback) {
     /**
      * Requests a guest token.
      *
-     * @param callback The callback interface to invoke when when the request completes.
+     * @param callback     The callback interface to invoke when when the request completes.
      * @param appAuthToken The application-only auth token.
      */
     void requestGuestToken(final Callback<GuestTokenResponse> callback,
-            OAuth2Token appAuthToken) {
+                           OAuth2Token appAuthToken) {
         api.getGuestToken(getAuthorizationHeader(appAuthToken)).enqueue(callback);
     }
 
@@ -132,8 +133,8 @@ private String getAuthHeader() {
         final TwitterAuthConfig authConfig = getTwitterCore().getAuthConfig();
         final ByteString string = ByteString.encodeUtf8(
                 UrlUtils.percentEncode(authConfig.getConsumerKey())
-                + ":"
-                + UrlUtils.percentEncode(authConfig.getConsumerSecret()));
+                        + ":"
+                        + UrlUtils.percentEncode(authConfig.getConsumerSecret()));
 
         return OAuthConstants.AUTHORIZATION_BASIC + " " + string.base64();
     }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/FileStore.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/FileStore.java
index 634b5c7d..218890df 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/FileStore.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/FileStore.java
@@ -22,25 +22,21 @@
 
 public interface FileStore {
     /**
-     *
      * @return Directory to store internal Cache files
      */
     File getCacheDir();
 
     /**
-     *
      * @return Directory to store External Cache files.
      */
     File getExternalCacheDir();
 
     /**
-     *
      * @return Directory to store internal files.
      */
     File getFilesDir();
 
     /**
-     *
      * @return Directory to store External files.
      */
     File getExternalFilesDir();
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/FileStoreImpl.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/FileStoreImpl.java
index 7f5d10ee..78f941c6 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/FileStoreImpl.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/FileStoreImpl.java
@@ -36,7 +36,6 @@ public FileStoreImpl(Context context) {
     }
 
     /**
-     *
      * @return Directory to store internal cache files.
      */
     @Override
@@ -59,7 +58,6 @@ public File getExternalCacheDir() {
     }
 
     /**
-     *
      * @return Directory to store internal files.
      */
     @Override
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/PreferenceStore.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/PreferenceStore.java
index 1106055c..a5957b1d 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/PreferenceStore.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/PreferenceStore.java
@@ -22,19 +22,16 @@
 public interface PreferenceStore {
 
     /**
-     *
      * @return {@link android.content.SharedPreferences}
      */
     SharedPreferences get();
 
     /**
-     *
      * @return {@link android.content.SharedPreferences.Editor}
      */
     SharedPreferences.Editor edit();
 
     /**
-     *
      * @param editor to save
      * @return successful save
      */
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/PreferenceStoreImpl.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/PreferenceStoreImpl.java
index 9836196f..50a81f40 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/PreferenceStoreImpl.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/persistence/PreferenceStoreImpl.java
@@ -48,6 +48,7 @@ public SharedPreferences get() {
 
     /**
      * Apply thread safe saves based on Android API level
+     *
      * @param editor
      * @return boolean success
      */
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/BindingValues.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/BindingValues.java
index 9db11557..c0736d7a 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/BindingValues.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/BindingValues.java
@@ -49,7 +49,7 @@ public boolean containsKey(String key) {
     public <T> T get(String key) {
         try {
             return (T) bindingValues.get(key);
-        } catch (ClassCastException ex){
+        } catch (ClassCastException ex) {
             return null;
         }
     }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/BindingValuesAdapter.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/BindingValuesAdapter.java
index a18a1264..847a5cf5 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/BindingValuesAdapter.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/BindingValuesAdapter.java
@@ -45,13 +45,13 @@
 
     @Override
     public JsonElement serialize(BindingValues src, Type typeOfSrc,
-            JsonSerializationContext context) {
+                                 JsonSerializationContext context) {
         return null;
     }
 
     @Override
     public BindingValues deserialize(JsonElement json, Type typeOfT,
-            JsonDeserializationContext context) throws JsonParseException {
+                                     JsonDeserializationContext context) throws JsonParseException {
         if (!json.isJsonObject()) {
             return new BindingValues();
         }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Configuration.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Configuration.java
index 2970f208..63d2f0f7 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Configuration.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Configuration.java
@@ -60,7 +60,7 @@ private Configuration() {
     }
 
     public Configuration(int dmTextCharacterLimit, List<String> nonUsernamePaths,
-            long photoSizeLimit, MediaEntity.Sizes photoSizes, int shortUrlLengthHttps) {
+                         long photoSizeLimit, MediaEntity.Sizes photoSizes, int shortUrlLengthHttps) {
         this.dmTextCharacterLimit = dmTextCharacterLimit;
         this.nonUsernamePaths = ModelUtils.getSafeList(nonUsernamePaths);
         this.photoSizeLimit = photoSizeLimit;
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Identifiable.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Identifiable.java
index d2199985..2fba9bc3 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Identifiable.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Identifiable.java
@@ -24,6 +24,7 @@
 
     /**
      * Returns the id.
+     *
      * @return The id.
      */
     long getId();
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/MediaEntity.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/MediaEntity.java
index 3357b6e8..0196a11f 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/MediaEntity.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/MediaEntity.java
@@ -40,7 +40,7 @@
 
     /**
      * A http:// URL pointing directly to the uploaded media file.
-     *
+     * <p>
      * For media in direct messages, media_url is the same https URL as media_url_https and must be
      * accessed via an authenticated twitter.com session or by signing a request with the user's
      * access token using OAuth 1.0A. It is not possible to directly embed these images in a web
@@ -51,7 +51,7 @@
 
     /**
      * A https:// URL pointing directly to the uploaded media file, for embedding on https pages.
-     *
+     * <p>
      * For media in direct messages, media_url_https must be accessed via an authenticated
      * twitter.com session or by signing a request with the user's access token using OAuth 1.0A.
      * It is not possible to directly embed these images in a web page.
@@ -96,9 +96,9 @@
     public final String altText;
 
     public MediaEntity(String url, String expandedUrl, String displayUrl, int start, int end,
-            long id, String idStr, String mediaUrl, String mediaUrlHttps, Sizes sizes,
-            long sourceStatusId, String sourceStatusIdStr, String type, VideoInfo videoInfo,
-            String altText) {
+                       long id, String idStr, String mediaUrl, String mediaUrlHttps, Sizes sizes,
+                       long sourceStatusId, String sourceStatusIdStr, String type, VideoInfo videoInfo,
+                       String altText) {
         super(url, expandedUrl, displayUrl, start, end);
         this.id = id;
         this.idStr = idStr;
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/MentionEntity.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/MentionEntity.java
index 0cd165e2..22b25de8 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/MentionEntity.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/MentionEntity.java
@@ -49,7 +49,7 @@
     public final String screenName;
 
     public MentionEntity(long id, String idStr, String name, String screenName, int start,
-            int end) {
+                         int end) {
         super(start, end);
         this.id = id;
         this.idStr = idStr;
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/ModelUtils.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/ModelUtils.java
index 2b0838ec..03dd6086 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/ModelUtils.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/ModelUtils.java
@@ -26,7 +26,8 @@
  */
 public final class ModelUtils {
 
-    private ModelUtils() {}
+    private ModelUtils() {
+    }
 
     public static <T> List<T> getSafeList(List<T> entities) {
         if (entities == null) {
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Place.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Place.java
index b7282047..cece6265 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Place.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Place.java
@@ -83,8 +83,8 @@
     public final String url;
 
     public Place(Map<String, String> attributes, BoundingBox boundingBox, String country,
-            String countryCode, String fullName, String id, String name, String placeType,
-            String url) {
+                 String countryCode, String fullName, String id, String name, String placeType,
+                 String url) {
         this.attributes = ModelUtils.getSafeMap(attributes);
         this.boundingBox = boundingBox;
         this.country = country;
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Tweet.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Tweet.java
index 6ad8777a..1f0fa60d 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Tweet.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/Tweet.java
@@ -287,15 +287,15 @@ private Tweet() {
     }
 
     public Tweet(Coordinates coordinates, String createdAt, Object currentUserRetweet,
-            TweetEntities entities, TweetEntities extendedEntities, Integer favoriteCount,
-            boolean favorited, String filterLevel, long id, String idStr,
-            String inReplyToScreenName, long inReplyToStatusId, String inReplyToStatusIdStr,
-            long inReplyToUserId, String inReplyToUserIdStr, String lang, Place place,
-            boolean possiblySensitive, Object scopes, long quotedStatusId, String quotedStatusIdStr,
-            Tweet quotedStatus, int retweetCount, boolean retweeted, Tweet retweetedStatus,
-            String source, String text, List<Integer> displayTextRange, boolean truncated,
-            User user, boolean withheldCopyright, List<String> withheldInCountries,
-            String withheldScope, Card card) {
+                 TweetEntities entities, TweetEntities extendedEntities, Integer favoriteCount,
+                 boolean favorited, String filterLevel, long id, String idStr,
+                 String inReplyToScreenName, long inReplyToStatusId, String inReplyToStatusIdStr,
+                 long inReplyToUserId, String inReplyToUserIdStr, String lang, Place place,
+                 boolean possiblySensitive, Object scopes, long quotedStatusId, String quotedStatusIdStr,
+                 Tweet quotedStatus, int retweetCount, boolean retweeted, Tweet retweetedStatus,
+                 String source, String text, List<Integer> displayTextRange, boolean truncated,
+                 User user, boolean withheldCopyright, List<String> withheldInCountries,
+                 String withheldScope, Card card) {
         this.coordinates = coordinates;
         this.createdAt = createdAt;
         this.currentUserRetweet = currentUserRetweet;
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/TweetEntities.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/TweetEntities.java
index ca2bcbf4..904de906 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/TweetEntities.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/TweetEntities.java
@@ -63,7 +63,7 @@ private TweetEntities() {
     }
 
     public TweetEntities(List<UrlEntity> urls, List<MentionEntity> userMentions,
-            List<MediaEntity> media, List<HashtagEntity> hashtags, List<SymbolEntity> symbols) {
+                         List<MediaEntity> media, List<HashtagEntity> hashtags, List<SymbolEntity> symbols) {
         this.urls = ModelUtils.getSafeList(urls);
         this.userMentions = ModelUtils.getSafeList(userMentions);
         this.media = ModelUtils.getSafeList(media);
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/User.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/User.java
index 5ee60582..3013b263 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/models/User.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/models/User.java
@@ -316,19 +316,19 @@
     public final String withheldScope;
 
     public User(boolean contributorsEnabled, String createdAt, boolean defaultProfile,
-            boolean defaultProfileImage, String description, String emailAddress,
-            UserEntities entities, int favouritesCount, boolean followRequestSent,
-            int followersCount, int friendsCount, boolean geoEnabled, long id, String idStr,
-            boolean isTranslator, String lang, int listedCount, String location, String name,
-            String profileBackgroundColor, String profileBackgroundImageUrl,
-            String profileBackgroundImageUrlHttps, boolean profileBackgroundTile,
-            String profileBannerUrl, String profileImageUrl, String profileImageUrlHttps,
-            String profileLinkColor, String profileSidebarBorderColor,
-            String profileSidebarFillColor, String profileTextColor,
-            boolean profileUseBackgroundImage, boolean protectedUser, String screenName,
-            boolean showAllInlineMedia, Tweet status, int statusesCount, String timeZone,
-            String url, int utcOffset, boolean verified, List<String> withheldInCountries,
-            String withheldScope) {
+                boolean defaultProfileImage, String description, String emailAddress,
+                UserEntities entities, int favouritesCount, boolean followRequestSent,
+                int followersCount, int friendsCount, boolean geoEnabled, long id, String idStr,
+                boolean isTranslator, String lang, int listedCount, String location, String name,
+                String profileBackgroundColor, String profileBackgroundImageUrl,
+                String profileBackgroundImageUrlHttps, boolean profileBackgroundTile,
+                String profileBannerUrl, String profileImageUrl, String profileImageUrlHttps,
+                String profileLinkColor, String profileSidebarBorderColor,
+                String profileSidebarFillColor, String profileTextColor,
+                boolean profileUseBackgroundImage, boolean protectedUser, String screenName,
+                boolean showAllInlineMedia, Tweet status, int statusesCount, String timeZone,
+                String url, int utcOffset, boolean verified, List<String> withheldInCountries,
+                String withheldScope) {
         this.contributorsEnabled = contributorsEnabled;
         this.createdAt = createdAt;
         this.defaultProfile = defaultProfile;
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/AccountService.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/AccountService.java
index e0ed653a..7eeb1e23 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/AccountService.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/AccountService.java
@@ -31,11 +31,11 @@
      * this method to test if supplied user credentials are valid.
      *
      * @param includeEntities (optional) The entities node will not be included when set to false.
-     * @param skipStatus (optional) When set to either true statuses will not be included in
-     *                   the returned user objects.
-     * @param includeEmail (optional) When set to true email will be returned in the user object as
-     *                     a string. If the user does not have an email address on their account, or
-     *                     if the email address is not verified, null will be returned.
+     * @param skipStatus      (optional) When set to either true statuses will not be included in
+     *                        the returned user objects.
+     * @param includeEmail    (optional) When set to true email will be returned in the user object as
+     *                        a string. If the user does not have an email address on their account, or
+     *                        if the email address is not verified, null will be returned.
      */
     @GET("/1.1/account/verify_credentials.json")
     Call<User> verifyCredentials(@Query("include_entities") Boolean includeEntities,
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/CollectionService.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/CollectionService.java
index e75b05ab..96f7a45b 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/CollectionService.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/CollectionService.java
@@ -32,11 +32,12 @@
      * Use the response/position hash to navigate through the collection via the min_position
      * and max_position. The was_truncated attribute will indicate to you whether additional tweets
      * exist in the collection outside of what was in range of the current request.
-     * @param id The identifier of the Collection to return results for (e.g. "custom-5394878324")
-     * @param count Specifies the number of Tweets to try and retrieve, up to a maximum of 200 per
-     *              distinct request. The value of count is best thought of as an "up to" parameter;
-     *              receiving less results than the specified count does not necessarily mean there
-     *              aren't remaining results to fetch.
+     *
+     * @param id          The identifier of the Collection to return results for (e.g. "custom-5394878324")
+     * @param count       Specifies the number of Tweets to try and retrieve, up to a maximum of 200 per
+     *                    distinct request. The value of count is best thought of as an "up to" parameter;
+     *                    receiving less results than the specified count does not necessarily mean there
+     *                    aren't remaining results to fetch.
      * @param maxPosition Returns results with a position value less than or equal to the specified
      *                    position.
      * @param minPosition Returns results with a position greater than the specified position.
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/FavoriteService.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/FavoriteService.java
index 97d55a4c..3613065a 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/FavoriteService.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/FavoriteService.java
@@ -34,16 +34,16 @@
      * Returns recent Tweets favorited by the authenticating or specified user,
      * by default returns 20 tweets.
      *
-     * @param userId (optional) The ID of the user for whom to return results for.
-     * @param screenName (optional) The screen name of the user for whom to return results for.
-     * @param count (optional) Specifies the number of records to retrieve. Must be less than or
-     *              equal to 200. Defaults to 20.
-     * @param sinceId (optional) Returns results with an ID greater than (that is, more recent than)
-     *                the specified ID. There are limits to the number of Tweets which can be
-     *                accessed through the API. If the limit of Tweets has occured since the
-     *                since_id, the since_id will be forced to the oldest ID available.
-     * @param maxId (optional) Returns results with an ID less than (that is, older than) or equal
-     *              to the specified ID.
+     * @param userId          (optional) The ID of the user for whom to return results for.
+     * @param screenName      (optional) The screen name of the user for whom to return results for.
+     * @param count           (optional) Specifies the number of records to retrieve. Must be less than or
+     *                        equal to 200. Defaults to 20.
+     * @param sinceId         (optional) Returns results with an ID greater than (that is, more recent than)
+     *                        the specified ID. There are limits to the number of Tweets which can be
+     *                        accessed through the API. If the limit of Tweets has occured since the
+     *                        since_id, the since_id will be forced to the oldest ID available.
+     * @param maxId           (optional) Returns results with an ID less than (that is, older than) or equal
+     *                        to the specified ID.
      * @param includeEntities (optional) The entities node will be omitted when set to false.
      */
     @GET("/1.1/favorites/list.json?" +
@@ -63,7 +63,7 @@
      * indicate the resultant favorited status of the Tweet. A 200 OK response from this method will
      * indicate whether the intended action was successful or not.
      *
-     * @param id (required) The numerical ID of the desired status.
+     * @param id              (required) The numerical ID of the desired status.
      * @param includeEntities (optional) The entities node will be omitted when set to false.
      */
     @FormUrlEncoded
@@ -80,7 +80,7 @@
      * indicate the resultant favorited status of the Tweet. A 200 OK response from this method will
      * indicate whether the intended action was successful or not.
      *
-     * @param id (required) The numerical ID of the desired status.
+     * @param id              (required) The numerical ID of the desired status.
      * @param includeEntities (optional) The entities node will be omitted when set to false.
      */
     @FormUrlEncoded
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/ListService.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/ListService.java
index aa30ed87..e7e89f3c 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/ListService.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/ListService.java
@@ -30,20 +30,21 @@
     /**
      * Returns a timeline of tweets authored by members of the specified list. Retweets are included
      * by default.
-     * @param listId The numerical id of the list.
-     * @param slug You can identify a list by its slug instead of its numerical id. If you decide to
-     *             do so, note that you'll also have to specify the list owner using the owner_id or
-     *             owner_screen_name parameters.
+     *
+     * @param listId          The numerical id of the list.
+     * @param slug            You can identify a list by its slug instead of its numerical id. If you decide to
+     *                        do so, note that you'll also have to specify the list owner using the owner_id or
+     *                        owner_screen_name parameters.
      * @param ownerScreenName The screen name of the user who owns the list being requested by a
      *                        slug.
-     * @param ownerId The user ID of the user who owns the list being requested by a slug.
-     * @param sinceId Returns results with an ID greater than (that is, more recent than) the
-     *                specified ID. There are limits to the number of Tweets which can be accessed
-     *                through the API. If the limit of Tweets has occurred since the since_id, the
-     *                since_id will be forced to the oldest ID available.
-     * @param maxId Returns results with an ID less than (that is, older than) or equal to the
-     *              specified ID.
-     * @param count Specifies the number of results to retrieve per "page."
+     * @param ownerId         The user ID of the user who owns the list being requested by a slug.
+     * @param sinceId         Returns results with an ID greater than (that is, more recent than) the
+     *                        specified ID. There are limits to the number of Tweets which can be accessed
+     *                        through the API. If the limit of Tweets has occurred since the since_id, the
+     *                        since_id will be forced to the oldest ID available.
+     * @param maxId           Returns results with an ID less than (that is, older than) or equal to the
+     *                        specified ID.
+     * @param count           Specifies the number of results to retrieve per "page."
      * @param includeEntities Entities are ON by default in API 1.1, each Tweet includes a node
      *                        called "entities." This node offers a variety of metadata about the
      *                        Tweet in a discrete structure, including: user_mentions, urls, and
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/MediaService.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/MediaService.java
index 844cfdea..7b9cad32 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/MediaService.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/MediaService.java
@@ -33,14 +33,15 @@
      * parameters are mutually exclusive. Media uploads for images are limited to 5MB in file
      * size.
      * Supported MIME-types are PNG, JPEG, BMP, WEBP, GIF, and Animated Gif
-     * @param media the raw binary file content to upload. Cannot be used with the mediaData
-     *              parameter.
+     *
+     * @param media     the raw binary file content to upload. Cannot be used with the mediaData
+     *                  parameter.
      * @param mediaData the base64-encoded file content to upload. Cannot be used with the media
      *                  parameter
      */
     @Multipart
     @POST("https://upload.twitter.com/1.1/media/upload.json")
     Call<Media> upload(@Part("media") RequestBody media,
-                @Part("media_data") RequestBody mediaData,
-                @Part("additional_owners") RequestBody additionalOwners);
+                       @Part("media_data") RequestBody mediaData,
+                       @Part("additional_owners") RequestBody additionalOwners);
 }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/SearchService.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/SearchService.java
index dd009fd6..3970841e 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/SearchService.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/SearchService.java
@@ -42,37 +42,37 @@
      * API. See Working with Timelines to learn best practices for navigating results by since_id
      * and max_id.
      *
-     * @param query (required) A UTF-8, URL-encoded search query of 500 characters maximum,
-     *              including operators. Queries may additionally be limited by complexity.
-     * @param geocode (optional) Returns tweets by users located within a given radius of the given
-     *                latitude/longitude. The location is preferentially taking from the Geotagging
-     *                API, but will fall back to their Twitter profile. The parameter value is
-     *                specified by "latitude,longitude,radius", where radius units must be specified
-     *                as either "mi" (miles) or "km" (kilometers). Note that you cannot use the near
-     *                operator via the API to geocode arbitrary locations; however you can use this
-     *                geocode parameter to search near geocodes directly. A maximum of 1,000
-     *                distinct "sub-regions" will be considered when using the radius modifier.
-     * @param lang (optional) Restricts tweets to the given language, given by an ISO 639-1 code.
-     *             Language detection is best-effort.
-     * @param locale (optional) Specify the language of the query you are sending (only ja is
-     *               currently effective). This is intended for language-specific consumers and the
-     *               default should work in the majority of cases.
-     * @param resultType (optional) Specifies what type of search results you would prefer to
-     *                   receive. The current default is "mixed." Valid values include:
-     * mixed: Include both popular and real time results in the response.
-     * recent: return only the most recent results in the response
-     * popular: return only the most popular results in the response.
-     * @param count (optional) The number of tweets to return per page, up to a maximum of 100.
-     *              Defaults to 15. This was formerly the "rpp" parameter in the old Search API.
-     * @param until (optional) Returns tweets generated before the given date. Date should be
-     *              formatted as YYYY-MM-DD. Keep in mind that the search index may not go back as
-     *              far as the date you specify here.
-     * @param sinceId (optional) Returns results with an ID greater than (that is, more recent than)
-     *                the specified ID. There are limits to the number of Tweets which can be
-     *                accessed through the API. If the limit of Tweets has occured since the
-     *                since_id, the since_id will be forced to the oldest ID available.
-     * @param maxId (optional) Returns results with an ID less than (that is, older than) or equal
-     *              to the specified ID.
+     * @param query           (required) A UTF-8, URL-encoded search query of 500 characters maximum,
+     *                        including operators. Queries may additionally be limited by complexity.
+     * @param geocode         (optional) Returns tweets by users located within a given radius of the given
+     *                        latitude/longitude. The location is preferentially taking from the Geotagging
+     *                        API, but will fall back to their Twitter profile. The parameter value is
+     *                        specified by "latitude,longitude,radius", where radius units must be specified
+     *                        as either "mi" (miles) or "km" (kilometers). Note that you cannot use the near
+     *                        operator via the API to geocode arbitrary locations; however you can use this
+     *                        geocode parameter to search near geocodes directly. A maximum of 1,000
+     *                        distinct "sub-regions" will be considered when using the radius modifier.
+     * @param lang            (optional) Restricts tweets to the given language, given by an ISO 639-1 code.
+     *                        Language detection is best-effort.
+     * @param locale          (optional) Specify the language of the query you are sending (only ja is
+     *                        currently effective). This is intended for language-specific consumers and the
+     *                        default should work in the majority of cases.
+     * @param resultType      (optional) Specifies what type of search results you would prefer to
+     *                        receive. The current default is "mixed." Valid values include:
+     *                        mixed: Include both popular and real time results in the response.
+     *                        recent: return only the most recent results in the response
+     *                        popular: return only the most popular results in the response.
+     * @param count           (optional) The number of tweets to return per page, up to a maximum of 100.
+     *                        Defaults to 15. This was formerly the "rpp" parameter in the old Search API.
+     * @param until           (optional) Returns tweets generated before the given date. Date should be
+     *                        formatted as YYYY-MM-DD. Keep in mind that the search index may not go back as
+     *                        far as the date you specify here.
+     * @param sinceId         (optional) Returns results with an ID greater than (that is, more recent than)
+     *                        the specified ID. There are limits to the number of Tweets which can be
+     *                        accessed through the API. If the limit of Tweets has occured since the
+     *                        since_id, the since_id will be forced to the oldest ID available.
+     * @param maxId           (optional) Returns results with an ID less than (that is, older than) or equal
+     *                        to the specified ID.
      * @param includeEntities (optional) The entities node will be disincluded when set to false.
      */
     @GET("/1.1/search/tweets.json?" +
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/StatusesService.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/StatusesService.java
index ef464bb8..b578b61e 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/StatusesService.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/StatusesService.java
@@ -40,25 +40,25 @@
      * <p>
      * The Twitter REST API goes back up to 800 tweets.
      *
-     * @param count (optional) Specifies the number of tweets to try and retrieve, up to a maximum
-     *              of 200. The value of count is best thought of as a limit to the number of tweets
-     *              to return because suspended or deleted content is removed after the count has
-     *              been applied. We include retweets in the count, even if include_rts is not
-     *              supplied. It is recommended you always send include_rts=1 when using this API
-     *              method.
-     * @param sinceId (optional) Returns results with an ID greater than (that is, more recent than)
-     *                the specified ID. There are limits to the number of tweets which can be
-     *                accessed through the API. If the limit of tweets has occurred since the
-     *                since_id, the since_id will be forced to the oldest ID available.
-     * @param maxId (optional) Returns results with an ID less than (that is, older than) or equal
-     *              to the specified ID.
-     * @param trimUser (optional) When set to either true, t or 1, each Tweet returned in a timeline
-     *                 will include a user object including only the status authors numerical ID.
-     *                 Omit this parameter to receive the complete user object.
+     * @param count             (optional) Specifies the number of tweets to try and retrieve, up to a maximum
+     *                          of 200. The value of count is best thought of as a limit to the number of tweets
+     *                          to return because suspended or deleted content is removed after the count has
+     *                          been applied. We include retweets in the count, even if include_rts is not
+     *                          supplied. It is recommended you always send include_rts=1 when using this API
+     *                          method.
+     * @param sinceId           (optional) Returns results with an ID greater than (that is, more recent than)
+     *                          the specified ID. There are limits to the number of tweets which can be
+     *                          accessed through the API. If the limit of tweets has occurred since the
+     *                          since_id, the since_id will be forced to the oldest ID available.
+     * @param maxId             (optional) Returns results with an ID less than (that is, older than) or equal
+     *                          to the specified ID.
+     * @param trimUser          (optional) When set to either true, t or 1, each Tweet returned in a timeline
+     *                          will include a user object including only the status authors numerical ID.
+     *                          Omit this parameter to receive the complete user object.
      * @param contributeDetails (optional) This parameter enhances the contributors element of the
      *                          status response to include the screen_name of the contributor. By
      *                          default only the user_id of the contributor is included.
-     * @param includeEntities (optional) The entities node will be disincluded when set to false.
+     * @param includeEntities   (optional) The entities node will be disincluded when set to false.
      */
     @GET("/1.1/statuses/mentions_timeline.json?" +
             "tweet_mode=extended&include_cards=true&cards_platform=TwitterKit-13")
@@ -85,36 +85,36 @@
      * <p>
      * Always specify either an user_id or screen_name when requesting a user timeline.
      *
-     * @param userId (optional) The ID of the user for whom to return results for.
-     * @param screenName (optional) The screen name of the user for whom to return results for.
-     * @param count (optional) Specifies the number of tweets to try and retrieve, up to a maximum
-     *              of 200. The value of count is best thought of as a limit to the number of tweets
-     *              to return because suspended or deleted content is removed after the count has
-     *              been applied. We include retweets in the count, even if include_rts is not
-     *              supplied. It is recommended you always send include_rts=1 when using this API
-     *              method.
-     * @param sinceId (optional) Returns results with an ID greater than (that is, more recent than)
-     *                the specified ID. There are limits to the number of tweets which can be
-     *                accessed through the API. If the limit of tweets has occurred since the
-     *                since_id, the since_id will be forced to the oldest ID available.
-     * @param maxId (optional) Returns results with an ID less than (that is, older than) or equal
-     *              to the specified ID.
-     * @param trimUser (optional) When set to either true, t or 1, each Tweet returned in a timeline
-     *                 will include a user object including only the status authors numerical ID.
-     *                 Omit this parameter to receive the complete user object.
-     * @param excludeReplies (optional) This parameter will prevent replies from appearing in the
-     *                       returned timeline. Using exclude_replies with the count parameter will
-     *                       mean you will receive up-to count tweets — this is because the count
-     *                       parameter retrieves that many tweets before filtering out retweets and
-     *                       replies. This parameter is only supported for JSON and XML responses.
+     * @param userId            (optional) The ID of the user for whom to return results for.
+     * @param screenName        (optional) The screen name of the user for whom to return results for.
+     * @param count             (optional) Specifies the number of tweets to try and retrieve, up to a maximum
+     *                          of 200. The value of count is best thought of as a limit to the number of tweets
+     *                          to return because suspended or deleted content is removed after the count has
+     *                          been applied. We include retweets in the count, even if include_rts is not
+     *                          supplied. It is recommended you always send include_rts=1 when using this API
+     *                          method.
+     * @param sinceId           (optional) Returns results with an ID greater than (that is, more recent than)
+     *                          the specified ID. There are limits to the number of tweets which can be
+     *                          accessed through the API. If the limit of tweets has occurred since the
+     *                          since_id, the since_id will be forced to the oldest ID available.
+     * @param maxId             (optional) Returns results with an ID less than (that is, older than) or equal
+     *                          to the specified ID.
+     * @param trimUser          (optional) When set to either true, t or 1, each Tweet returned in a timeline
+     *                          will include a user object including only the status authors numerical ID.
+     *                          Omit this parameter to receive the complete user object.
+     * @param excludeReplies    (optional) This parameter will prevent replies from appearing in the
+     *                          returned timeline. Using exclude_replies with the count parameter will
+     *                          mean you will receive up-to count tweets — this is because the count
+     *                          parameter retrieves that many tweets before filtering out retweets and
+     *                          replies. This parameter is only supported for JSON and XML responses.
      * @param contributeDetails (optional) This parameter enhances the contributors element of the
      *                          status response to include the screen_name of the contributor. By
      *                          default only the user_id of the contributor is included.
-     * @param includeRetweets (optional) When set to false, the timeline will strip any native
-     *                        retweets (though they will still count toward both the maximal length
-     *                        of the timeline and the slice selected by the count parameter).
-     *                        Note: If you're using the trim_user parameter in conjunction with
-     *                        include_rts, the retweets will still contain a full user object.
+     * @param includeRetweets   (optional) When set to false, the timeline will strip any native
+     *                          retweets (though they will still count toward both the maximal length
+     *                          of the timeline and the slice selected by the count parameter).
+     *                          Note: If you're using the trim_user parameter in conjunction with
+     *                          include_rts, the retweets will still contain a full user object.
      */
     @GET("/1.1/statuses/user_timeline.json?" +
             "tweet_mode=extended&include_cards=true&cards_platform=TwitterKit-13")
@@ -136,30 +136,30 @@
      * The Twitter REST API goes back up to 800 tweets on the home timeline.
      * It is more volatile for users that follow many users or follow users who Tweet frequently.
      *
-     * @param count (optional) Specifies the number of tweets to try and retrieve, up to a maximum
-     *              of 200. The value of count is best thought of as a limit to the number of tweets
-     *              to return because suspended or deleted content is removed after the count has
-     *              been applied. We include retweets in the count, even if include_rts is not
-     *              supplied. It is recommended you always send include_rts=1 when using this API
-     *              method.
-     * @param sinceId (optional) Returns results with an ID greater than (that is, more recent than)
-     *                the specified ID. There are limits to the number of Tweets which can be
-     *                accessed through the API. If the limit of Tweets has occurred since the
-     *                since_id, the since_id will be forced to the oldest ID available.
-     * @param maxId (optional) Returns results with an ID less than (that is, older than) or equal
-     *              to the specified ID.
-     * @param trimUser (optional) When set to either true, t or 1, each Tweet returned in a timeline
-     *                 will include a user object including only the status authors numerical ID.
-     *                 Omit this parameter to receive the complete user object.
-     * @param excludeReplies (optional) This parameter will prevent replies from appearing in the
-     *                       returned timeline. Using exclude_replies with the count parameter will
-     *                       mean you will receive up-to count tweets — this is because the count
-     *                       parameter retrieves that many tweets before filtering out retweets and
-     *                       replies. This parameter is only supported for JSON and XML responses.
+     * @param count             (optional) Specifies the number of tweets to try and retrieve, up to a maximum
+     *                          of 200. The value of count is best thought of as a limit to the number of tweets
+     *                          to return because suspended or deleted content is removed after the count has
+     *                          been applied. We include retweets in the count, even if include_rts is not
+     *                          supplied. It is recommended you always send include_rts=1 when using this API
+     *                          method.
+     * @param sinceId           (optional) Returns results with an ID greater than (that is, more recent than)
+     *                          the specified ID. There are limits to the number of Tweets which can be
+     *                          accessed through the API. If the limit of Tweets has occurred since the
+     *                          since_id, the since_id will be forced to the oldest ID available.
+     * @param maxId             (optional) Returns results with an ID less than (that is, older than) or equal
+     *                          to the specified ID.
+     * @param trimUser          (optional) When set to either true, t or 1, each Tweet returned in a timeline
+     *                          will include a user object including only the status authors numerical ID.
+     *                          Omit this parameter to receive the complete user object.
+     * @param excludeReplies    (optional) This parameter will prevent replies from appearing in the
+     *                          returned timeline. Using exclude_replies with the count parameter will
+     *                          mean you will receive up-to count tweets — this is because the count
+     *                          parameter retrieves that many tweets before filtering out retweets and
+     *                          replies. This parameter is only supported for JSON and XML responses.
      * @param contributeDetails (optional) This parameter enhances the contributors element of the
      *                          status response to include the screen_name of the contributor. By
      *                          default only the user_id of the contributor is included.
-     * @param includeEntities (optional) The entities node will be disincluded when set to false.
+     * @param includeEntities   (optional) The entities node will be disincluded when set to false.
      */
     @GET("/1.1/statuses/home_timeline.json?" +
             "tweet_mode=extended&include_cards=true&cards_platform=TwitterKit-13")
@@ -175,22 +175,22 @@
      * Returns the most recent tweets authored by the authenticating user that have been retweeted
      * by others. This timeline is a subset of the user's GET statuses / user_timeline.
      *
-     * @param count (optional) Specifies the number of tweets to try and retrieve, up to a maximum
-     *              of 200. The value of count is best thought of as a limit to the number of tweets
-     *              to return because suspended or deleted content is removed after the count has
-     *              been applied. We include retweets in the count, even if include_rts is not
-     *              supplied. It is recommended you always send include_rts=1 when using this API
-     *              method.
-     * @param sinceId (optional) Returns results with an ID greater than (that is, more recent than)
-     *                the specified ID. There are limits to the number of Tweets which can be
-     *                accessed through the API. If the limit of Tweets has occurred since the
-     *                since_id, the since_id will be forced to the oldest ID available.
-     * @param maxId (optional) Returns results with an ID less than (that is, older than) or equal
-     *              to the specified ID.
-     * @param trimUser (optional) When set to either true, t or 1, each Tweet returned in a timeline
-     *                 will include a user object including only the status authors numerical ID.
-     *                 Omit this parameter to receive the complete user object.
-     * @param includeEntities (optional) The entities node will be disincluded when set to false.
+     * @param count               (optional) Specifies the number of tweets to try and retrieve, up to a maximum
+     *                            of 200. The value of count is best thought of as a limit to the number of tweets
+     *                            to return because suspended or deleted content is removed after the count has
+     *                            been applied. We include retweets in the count, even if include_rts is not
+     *                            supplied. It is recommended you always send include_rts=1 when using this API
+     *                            method.
+     * @param sinceId             (optional) Returns results with an ID greater than (that is, more recent than)
+     *                            the specified ID. There are limits to the number of Tweets which can be
+     *                            accessed through the API. If the limit of Tweets has occurred since the
+     *                            since_id, the since_id will be forced to the oldest ID available.
+     * @param maxId               (optional) Returns results with an ID less than (that is, older than) or equal
+     *                            to the specified ID.
+     * @param trimUser            (optional) When set to either true, t or 1, each Tweet returned in a timeline
+     *                            will include a user object including only the status authors numerical ID.
+     *                            Omit this parameter to receive the complete user object.
+     * @param includeEntities     (optional) The entities node will be disincluded when set to false.
      * @param includeUserEntities (optional) The user entities node will not be included when set to
      *                            false.
      */
@@ -207,15 +207,15 @@
      * Returns a single Tweet, specified by the id parameter. The Tweet's author will also be
      * embedded within the Tweet.
      *
-     * @param id (required) The numerical ID of the desired Tweet.
-     * @param trimUser (optional) When set to either true, t or 1, each Tweet returned in a timeline
-     *                 will include a user object including only the status authors numerical ID.
-     *                 Omit this parameter to receive the complete user object.
+     * @param id               (required) The numerical ID of the desired Tweet.
+     * @param trimUser         (optional) When set to either true, t or 1, each Tweet returned in a timeline
+     *                         will include a user object including only the status authors numerical ID.
+     *                         Omit this parameter to receive the complete user object.
      * @param includeMyRetweet (optional) When set to either true, t or 1, any Tweets returned that
      *                         have been retweeted by the authenticating user will include an
      *                         additional current_user_retweet node, containing the ID of the source
      *                         status for the retweet.
-     * @param includeEntities (optional) The entities node will be disincluded when set to false.
+     * @param includeEntities  (optional) The entities node will be disincluded when set to false.
      */
     @GET("/1.1/statuses/show.json?" +
             "tweet_mode=extended&include_cards=true&cards_platform=TwitterKit-13")
@@ -245,14 +245,14 @@
      * <li>You are strongly encouraged to use a POST for larger requests.</li>
      * </ul>
      *
-     * @param id (required) The comma separated ids of the desired Tweets as a string.
+     * @param id              (required) The comma separated ids of the desired Tweets as a string.
      * @param includeEntities (optional) The entities node will be disincluded when set to false.
-     * @param trimUser (optional) When set to either true, t or 1, each Tweet returned in a timeline
-     *                 will include a user object including only the status authors numerical ID.
-     *                 Omit this parameter to receive the complete user object.
-     * @param map (optional) When using the map parameter, tweets that do not exist or cannot be
-     *            viewed by the current user will still have their key represented but with an
-     *            explicitly null value paired with it
+     * @param trimUser        (optional) When set to either true, t or 1, each Tweet returned in a timeline
+     *                        will include a user object including only the status authors numerical ID.
+     *                        Omit this parameter to receive the complete user object.
+     * @param map             (optional) When using the map parameter, tweets that do not exist or cannot be
+     *                        viewed by the current user will still have their key represented but with an
+     *                        explicitly null value paired with it
      */
     @GET("/1.1/statuses/lookup.json?" +
             "tweet_mode=extended&include_cards=true&cards_platform=TwitterKit-13")
@@ -272,37 +272,37 @@
      * at a time. If the number of updates posted by the user reaches the current allowed limit this
      * method will return an HTTP 403 error.
      *
-     * @param status (required) The text of your status update, typically up to 140 characters. URL
-     *               encode as necessary. [node:840,title="t.co link wrapping"] may effect character
-     *               counts. There are some special commands in this field to be aware of. For
-     *               instance, preceding a message with "D " or "M " and following it with a screen
-     *               name can create a direct message to that user if the relationship allows for
-     *               it.
-     * @param inReplyToStatusId (optional) The ID of an existing status that the update is in reply
-     *                          to. Note:: This parameter will be ignored unless the author of the
-     *                          Tweet this parameter references is mentioned within the status text.
-     *                          Therefore, you must include @username, where username is the author
-     *                          of the referenced Tweet, within the update.
-     * @param possiblySensitive (optional) If you upload Tweet media that might be considered
-     *                          sensitive content such as nudity, violence, or medical procedures,
-     *                          you should set this value to true. See Media setting and best
-     *                          practices for more context. Defaults to false.
-     * @param latitude (optional) The latitude of the location this Tweet refers to. This parameter
-     *                 will be ignored unless it is inside the range -90.0 to +90.0 (North is
-     *                 positive) inclusive. It will also be ignored if there isn't a corresponding
-     *                 long parameter.
-     * @param longitude (optional) The longitude of the location this Tweet refers to. The valid
-     *                  ranges for longitude is -180.0 to +180.0 (East is positive) inclusive. This
-     *                  parameter will be ignored if outside that range, if it is not a number, if
-     *                  geo_enabled is disabled, or if there not a corresponding lat parameter.
-     * @param placeId (optional) A place in the world. These IDs can be retrieved from [node:29].
+     * @param status             (required) The text of your status update, typically up to 140 characters. URL
+     *                           encode as necessary. [node:840,title="t.co link wrapping"] may effect character
+     *                           counts. There are some special commands in this field to be aware of. For
+     *                           instance, preceding a message with "D " or "M " and following it with a screen
+     *                           name can create a direct message to that user if the relationship allows for
+     *                           it.
+     * @param inReplyToStatusId  (optional) The ID of an existing status that the update is in reply
+     *                           to. Note:: This parameter will be ignored unless the author of the
+     *                           Tweet this parameter references is mentioned within the status text.
+     *                           Therefore, you must include @username, where username is the author
+     *                           of the referenced Tweet, within the update.
+     * @param possiblySensitive  (optional) If you upload Tweet media that might be considered
+     *                           sensitive content such as nudity, violence, or medical procedures,
+     *                           you should set this value to true. See Media setting and best
+     *                           practices for more context. Defaults to false.
+     * @param latitude           (optional) The latitude of the location this Tweet refers to. This parameter
+     *                           will be ignored unless it is inside the range -90.0 to +90.0 (North is
+     *                           positive) inclusive. It will also be ignored if there isn't a corresponding
+     *                           long parameter.
+     * @param longitude          (optional) The longitude of the location this Tweet refers to. The valid
+     *                           ranges for longitude is -180.0 to +180.0 (East is positive) inclusive. This
+     *                           parameter will be ignored if outside that range, if it is not a number, if
+     *                           geo_enabled is disabled, or if there not a corresponding lat parameter.
+     * @param placeId            (optional) A place in the world. These IDs can be retrieved from [node:29].
      * @param displayCoordinates (optional) Whether or not to put a pin on the exact coordinates a
      *                           Tweet has been sent from.
-     * @param trimUser (optional) When set to either true, t or 1, each Tweet returned in a timeline
-     *                 will include a user object including only the status authors numerical ID.
-     *                 Omit this parameter to receive the complete user object.
-     * @param mediaIds A comma separated media ids as a string for uploaded media to associate
-     *                 with a Tweet. You may include up to 4 photos in a Tweet.
+     * @param trimUser           (optional) When set to either true, t or 1, each Tweet returned in a timeline
+     *                           will include a user object including only the status authors numerical ID.
+     *                           Omit this parameter to receive the complete user object.
+     * @param mediaIds           A comma separated media ids as a string for uploaded media to associate
+     *                           with a Tweet. You may include up to 4 photos in a Tweet.
      */
     @FormUrlEncoded
     @POST("/1.1/statuses/update.json?" +
@@ -320,7 +320,7 @@
     /**
      * Retweets a Tweet. Returns the original Tweet with retweet details embedded.
      *
-     * @param id (required) The numerical ID of the desired Tweet.
+     * @param id       (required) The numerical ID of the desired Tweet.
      * @param trimUser (optional) When set to either true, t or 1, each Tweet returned in a timeline
      *                 will include a user object including only the status authors numerical ID.
      *                 Omit this parameter to receive the complete user object.
@@ -335,7 +335,7 @@
      * Destroys the status specified by the required ID parameter. The authenticating user must be
      * the author of the specified status. Returns the destroyed status if successful.
      *
-     * @param id (required) The numerical ID of the desired Tweet.
+     * @param id       (required) The numerical ID of the desired Tweet.
      * @param trimUser (optional) When set to either true, t or 1, each Tweet returned in a timeline
      *                 will include a user object including only the status authors numerical ID.
      *                 Omit this parameter to receive the complete user object.
@@ -350,7 +350,7 @@
      * Destroys the retweet specified by the required source Tweet's ID parameter. Returns the
      * source Tweet if successful.
      *
-     * @param id (required) The numerical ID of the source Tweet.
+     * @param id       (required) The numerical ID of the source Tweet.
      * @param trimUser (optional) When set to either true, t or 1, each Tweet returned in a timeline
      *                 will include a user object including only the status authors numerical ID.
      *                 Omit this parameter to receive the complete user object.
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/params/Geocode.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/params/Geocode.java
index 0722f13e..29dd05cd 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/services/params/Geocode.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/services/params/Geocode.java
@@ -18,12 +18,11 @@
 package com.twitter.sdk.android.core.services.params;
 
 /**
- *
  * The parameter value is specified by "latitude,longitude,radius", where radius units must be
  * specified as either "mi" (miles) or "km" (kilometers). Note that you cannot use the near
  * operator via the API to geocode arbitrary locations; however you can use this geocode parameter
  * to search near geocodes directly.
- *
+ * <p>
  * Example Values: 37.781157,-122.398720,1mi
  *
  * <a href="https://dev.twitter.com/rest/reference/get/search/tweets">GET search/tweets</a>
diff --git a/twitter-core/src/main/res/drawable/tw__login_btn.xml b/twitter-core/src/main/res/drawable/tw__login_btn.xml
index f846ad86..67e75804 100644
--- a/twitter-core/src/main/res/drawable/tw__login_btn.xml
+++ b/twitter-core/src/main/res/drawable/tw__login_btn.xml
@@ -18,15 +18,9 @@
   -->
 
 <selector xmlns:android="http://schemas.android.com/apk/res/android">
-    <item android:drawable="@drawable/tw__login_btn_pressed"
-          android:state_focused="true"
-          android:state_pressed="true"/>
-    <item android:drawable="@drawable/tw__login_btn_pressed"
-          android:state_focused="false"
-          android:state_pressed="true"/>
-    <item android:drawable="@drawable/tw__login_btn_pressed"
-          android:state_focused="true"/>
-    <item android:drawable="@drawable/tw__login_btn_disabled"
-          android:state_enabled="false"/>
-    <item android:drawable="@drawable/tw__login_btn_default"/>
+    <item android:drawable="@drawable/tw__login_btn_pressed" android:state_focused="true" android:state_pressed="true" />
+    <item android:drawable="@drawable/tw__login_btn_pressed" android:state_focused="false" android:state_pressed="true" />
+    <item android:drawable="@drawable/tw__login_btn_pressed" android:state_focused="true" />
+    <item android:drawable="@drawable/tw__login_btn_disabled" android:state_enabled="false" />
+    <item android:drawable="@drawable/tw__login_btn_default" />
 </selector>
\ No newline at end of file
diff --git a/twitter-core/src/main/res/drawable/tw__login_btn_default.xml b/twitter-core/src/main/res/drawable/tw__login_btn_default.xml
index 4fa4f1a8..b96fc223 100644
--- a/twitter-core/src/main/res/drawable/tw__login_btn_default.xml
+++ b/twitter-core/src/main/res/drawable/tw__login_btn_default.xml
@@ -18,12 +18,13 @@
   -->
 
 <shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <solid android:color="@color/tw__blue_default"/>
+    <solid android:color="@color/tw__blue_default" />
 
-    <corners android:bottomRightRadius="@dimen/tw__login_btn_radius"
-             android:bottomLeftRadius="@dimen/tw__login_btn_radius"
-             android:topLeftRadius="@dimen/tw__login_btn_radius"
-             android:topRightRadius="@dimen/tw__login_btn_radius"/>
+    <corners
+        android:bottomRightRadius="@dimen/tw__login_btn_radius"
+        android:bottomLeftRadius="@dimen/tw__login_btn_radius"
+        android:topLeftRadius="@dimen/tw__login_btn_radius"
+        android:topRightRadius="@dimen/tw__login_btn_radius" />
 
-    <size android:height="@dimen/tw__login_btn_height"/>
+    <size android:height="@dimen/tw__login_btn_height" />
 </shape>
\ No newline at end of file
diff --git a/twitter-core/src/main/res/drawable/tw__login_btn_disabled.xml b/twitter-core/src/main/res/drawable/tw__login_btn_disabled.xml
index c89ee8b6..1a613f4e 100644
--- a/twitter-core/src/main/res/drawable/tw__login_btn_disabled.xml
+++ b/twitter-core/src/main/res/drawable/tw__login_btn_disabled.xml
@@ -18,12 +18,13 @@
   -->
 
 <shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <solid android:color="@color/tw__light_gray"/>
+    <solid android:color="@color/tw__light_gray" />
 
-    <corners android:bottomRightRadius="@dimen/tw__login_btn_radius"
-             android:bottomLeftRadius="@dimen/tw__login_btn_radius"
-             android:topLeftRadius="@dimen/tw__login_btn_radius"
-             android:topRightRadius="@dimen/tw__login_btn_radius"/>
+    <corners
+        android:bottomRightRadius="@dimen/tw__login_btn_radius"
+        android:bottomLeftRadius="@dimen/tw__login_btn_radius"
+        android:topLeftRadius="@dimen/tw__login_btn_radius"
+        android:topRightRadius="@dimen/tw__login_btn_radius" />
 
-    <size android:height="@dimen/tw__login_btn_height"/>
+    <size android:height="@dimen/tw__login_btn_height" />
 </shape>
\ No newline at end of file
diff --git a/twitter-core/src/main/res/drawable/tw__login_btn_pressed.xml b/twitter-core/src/main/res/drawable/tw__login_btn_pressed.xml
index 260952e5..4f65cddf 100644
--- a/twitter-core/src/main/res/drawable/tw__login_btn_pressed.xml
+++ b/twitter-core/src/main/res/drawable/tw__login_btn_pressed.xml
@@ -18,12 +18,13 @@
   -->
 
 <shape xmlns:android="http://schemas.android.com/apk/res/android">
-    <solid android:color="@color/tw__blue_pressed"/>
+    <solid android:color="@color/tw__blue_pressed" />
 
-    <corners android:bottomRightRadius="@dimen/tw__login_btn_radius"
-             android:bottomLeftRadius="@dimen/tw__login_btn_radius"
-             android:topLeftRadius="@dimen/tw__login_btn_radius"
-             android:topRightRadius="@dimen/tw__login_btn_radius"/>
+    <corners
+        android:bottomRightRadius="@dimen/tw__login_btn_radius"
+        android:bottomLeftRadius="@dimen/tw__login_btn_radius"
+        android:topLeftRadius="@dimen/tw__login_btn_radius"
+        android:topRightRadius="@dimen/tw__login_btn_radius" />
 
-    <size android:height="@dimen/tw__login_btn_height"/>
+    <size android:height="@dimen/tw__login_btn_height" />
 </shape>
\ No newline at end of file
diff --git a/twitter-core/src/main/res/layout/tw__activity_oauth.xml b/twitter-core/src/main/res/layout/tw__activity_oauth.xml
index f6127887..bc672e83 100644
--- a/twitter-core/src/main/res/layout/tw__activity_oauth.xml
+++ b/twitter-core/src/main/res/layout/tw__activity_oauth.xml
@@ -16,19 +16,19 @@
   -->
 
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent">
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
 
     <WebView
-            android:id="@+id/tw__web_view"
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:visibility="invisible"/>
+        android:id="@+id/tw__web_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:visibility="invisible" />
 
     <ProgressBar
-            android:id="@+id/tw__spinner"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_centerInParent="true"/>
+        android:id="@+id/tw__spinner"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerInParent="true" />
 
 </RelativeLayout>
diff --git a/twitter-core/src/main/res/values-hdpi/dimens.xml b/twitter-core/src/main/res/values-hdpi/dimens.xml
index e9830907..c293ce1c 100644
--- a/twitter-core/src/main/res/values-hdpi/dimens.xml
+++ b/twitter-core/src/main/res/values-hdpi/dimens.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/twitter-core/src/main/res/values-xhdpi/dimens.xml b/twitter-core/src/main/res/values-xhdpi/dimens.xml
index 174cfce4..157057a0 100644
--- a/twitter-core/src/main/res/values-xhdpi/dimens.xml
+++ b/twitter-core/src/main/res/values-xhdpi/dimens.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/twitter-core/src/main/res/values-xxhdpi/dimens.xml b/twitter-core/src/main/res/values-xxhdpi/dimens.xml
index 174cfce4..157057a0 100644
--- a/twitter-core/src/main/res/values-xxhdpi/dimens.xml
+++ b/twitter-core/src/main/res/values-xxhdpi/dimens.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/twitter-core/src/main/res/values/colors.xml b/twitter-core/src/main/res/values/colors.xml
index e84627cf..a30c6ea0 100644
--- a/twitter-core/src/main/res/values/colors.xml
+++ b/twitter-core/src/main/res/values/colors.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/twitter-core/src/main/res/values/dimens.xml b/twitter-core/src/main/res/values/dimens.xml
index 41c23a2e..e293220d 100644
--- a/twitter-core/src/main/res/values/dimens.xml
+++ b/twitter-core/src/main/res/values/dimens.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/twitter-core/src/main/res/values/strings.xml b/twitter-core/src/main/res/values/strings.xml
index 84aa7ef8..257c95b2 100644
--- a/twitter-core/src/main/res/values/strings.xml
+++ b/twitter-core/src/main/res/values/strings.xml
@@ -1,5 +1,4 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
+<?xml version="1.0" encoding="utf-8"?><!--
   ~ Copyright (C) 2015 Twitter, Inc.
   ~
   ~ Licensed under the Apache License, Version 2.0 (the "License");
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/AuthTokenAdapterTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/AuthTokenAdapterTest.java
index fcb6677a..3c263057 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/AuthTokenAdapterTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/AuthTokenAdapterTest.java
@@ -32,7 +32,7 @@
 import static org.junit.Assert.assertTrue;
 
 @RunWith(RobolectricTestRunner.class)
-public class AuthTokenAdapterTest  {
+public class AuthTokenAdapterTest {
     private static final long CREATED_AT = 1414450780L;
     private static final String TOKEN_TYPE = "testTokenType";
     private static final String ACCESS_TOKEN = "testAccessToken";
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/GuestSessionSerializerTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/GuestSessionSerializerTest.java
index 52390686..902c581a 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/GuestSessionSerializerTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/GuestSessionSerializerTest.java
@@ -36,8 +36,8 @@
             + "\"access_token\":\"accessToken\",\"created_at\":1414450780}},\"id\":0}";
     private static final String JSON_SESSION_INVALID_AUTH_TYPE =
             "{\"auth_token\":{\"auth_type\":\"INVALID\","
-            + "\"auth_token\":{\"guest_token\":\"guestToken\",\"access_token\":\"accessToken\","
-            + "\"token_type\":\"tokenType\",\"created_at\":1414450780}},\"id\":0}";
+                    + "\"auth_token\":{\"guest_token\":\"guestToken\",\"access_token\":\"accessToken\","
+                    + "\"token_type\":\"tokenType\",\"created_at\":1414450780}},\"id\":0}";
 
     private static final String TEST_TOKEN_TYPE = "tokenType";
     private static final String TEST_ACCESS_TOKEN = "accessToken";
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/OAuthSigningTests.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/OAuthSigningTests.java
index a429aabc..9b608b95 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/OAuthSigningTests.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/OAuthSigningTests.java
@@ -31,7 +31,7 @@
 import static org.mockito.Mockito.when;
 
 @RunWith(RobolectricTestRunner.class)
-public class OAuthSigningTests  {
+public class OAuthSigningTests {
     private static final String ANY_AUTH_HEADER = "Twitter Authority!";
     private static final String VERIFY_CREDENTIALS_URL = "https://twitter.com";
 
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/TestResources.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/TestResources.java
index ba87e18b..a08f7056 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/TestResources.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/TestResources.java
@@ -24,11 +24,10 @@
 
 /**
  * A rule for accessing test resources needed by unit tests.
- *
+ * <p>
  * Add this as a public member variable annotated with @Rule. For example:
  *
- * @Rule
- * public final TestResources mTestResources = new TestResources();
+ * @Rule public final TestResources mTestResources = new TestResources();
  */
 public class TestResources implements TestRule {
     @Override
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterApiExceptionTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterApiExceptionTest.java
index 1eac7c8a..47fa9016 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterApiExceptionTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterApiExceptionTest.java
@@ -29,7 +29,7 @@
 import static org.junit.Assert.assertNull;
 
 @RunWith(RobolectricTestRunner.class)
-public class TwitterApiExceptionTest  {
+public class TwitterApiExceptionTest {
 
     private static final int API_ERROR_CODE = 239;
     private static final int DEFAULT_ERROR_CODE = 0;
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterAuthTokenTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterAuthTokenTest.java
index c65fa1c0..380505e1 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterAuthTokenTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterAuthTokenTest.java
@@ -27,7 +27,7 @@
 import static org.junit.Assert.assertFalse;
 
 @RunWith(RobolectricTestRunner.class)
-public class TwitterAuthTokenTest  {
+public class TwitterAuthTokenTest {
 
     @Test
     public void testParcelable() {
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterRateLimitTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterRateLimitTest.java
index d9c33b34..fefbc4a0 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterRateLimitTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterRateLimitTest.java
@@ -31,7 +31,7 @@
 import static org.junit.Assert.assertEquals;
 
 @RunWith(RobolectricTestRunner.class)
-public class TwitterRateLimitTest  {
+public class TwitterRateLimitTest {
 
     public static final String X_RATE_LIMIT_LIMIT = "x-rate-limit-limit";
     public static final String X_RATE_LIMIT_REMAINING = "x-rate-limit-remaining";
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterSessionSerializerTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterSessionSerializerTest.java
index b2396fde..52f1bf1b 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterSessionSerializerTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterSessionSerializerTest.java
@@ -27,7 +27,7 @@
 
 
 @RunWith(RobolectricTestRunner.class)
-public class TwitterSessionSerializerTest  {
+public class TwitterSessionSerializerTest {
     // static unix timestamp so that tests are repeatable and more easily debugged
     private static final long CREATED_AT = 1414450780L;
     public static final String SESSION_JSON = "{\"user_name\":\"\","
@@ -38,11 +38,11 @@
             + "\"id\":-1}";
     public static final String FULL_SESSION_JSON =
             "{\"user_name\":\"" + TestFixtures.SCREEN_NAME + "\","
-            + "\"auth_token\":{"
-            + "\"token\":\"" + TestFixtures.TOKEN + "\","
-            + "\"secret\":\"" + TestFixtures.SECRET + "\","
-            + "\"created_at\":" + CREATED_AT + "},"
-            + "\"id\":" + TestFixtures.USER_ID + "}";
+                    + "\"auth_token\":{"
+                    + "\"token\":\"" + TestFixtures.TOKEN + "\","
+                    + "\"secret\":\"" + TestFixtures.SECRET + "\","
+                    + "\"created_at\":" + CREATED_AT + "},"
+                    + "\"id\":" + TestFixtures.USER_ID + "}";
     public static final String SESSION_JSON_NULL_USERNAME = "{\"auth_token\":{"
             + "\"token\":\"token\","
             + "\"secret\":\"secret\","
@@ -70,7 +70,7 @@ public void testDeserialize_sessionWithAuthToken() throws Exception {
     public void testDeserialize_session() throws Exception {
         final TwitterSession session = serializer.deserialize(FULL_SESSION_JSON);
         assertEquals(new TwitterSession(new TwitterAuthToken(TestFixtures.TOKEN,
-                TestFixtures.SECRET, CREATED_AT), TestFixtures.USER_ID, TestFixtures.SCREEN_NAME),
+                        TestFixtures.SECRET, CREATED_AT), TestFixtures.USER_ID, TestFixtures.SCREEN_NAME),
                 session);
     }
 
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterSessionTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterSessionTest.java
index 9dcba18d..2be6720b 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterSessionTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/TwitterSessionTest.java
@@ -26,7 +26,7 @@
 import static org.junit.Assert.fail;
 
 @RunWith(RobolectricTestRunner.class)
-public class TwitterSessionTest  {
+public class TwitterSessionTest {
 
     @Test
     public void testConstructor_noAuthToken() throws Exception {
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/AuthHandlerTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/AuthHandlerTest.java
index 86560c21..2dcbaacb 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/AuthHandlerTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/AuthHandlerTest.java
@@ -41,7 +41,7 @@
 import static org.mockito.Mockito.verifyZeroInteractions;
 
 @RunWith(RobolectricTestRunner.class)
-public class AuthHandlerTest  {
+public class AuthHandlerTest {
     private static final TwitterAuthConfig AUTH_CONFIG
             = new TwitterAuthConfig("consumerKey", "consumerSecret");
     private static final int TEST_REQUEST_CODE = 1;
@@ -90,7 +90,7 @@ public void testHandleOnActivityResult_resultCodeCancel() {
     }
 
     private void assertCallbackFailureErrorMsg(Callback<TwitterSession> mockCallback,
-            String expectedErrorMsg) {
+                                               String expectedErrorMsg) {
         final ArgumentCaptor<TwitterAuthException> argCaptor
                 = ArgumentCaptor.forClass(TwitterAuthException.class);
         verify(mockCallback).failure(argCaptor.capture());
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/AuthStateTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/AuthStateTest.java
index cdb03b5a..97279003 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/AuthStateTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/AuthStateTest.java
@@ -35,7 +35,7 @@
 import static org.mockito.Mockito.when;
 
 @RunWith(RobolectricTestRunner.class)
-public class AuthStateTest  {
+public class AuthStateTest {
 
     private Activity mockActivity;
     private AuthHandler mockAuthHandler;
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthControllerTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthControllerTest.java
index d49a18c2..5df65930 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthControllerTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthControllerTest.java
@@ -53,7 +53,7 @@
 import static org.mockito.Mockito.when;
 
 @RunWith(RobolectricTestRunner.class)
-public class OAuthControllerTest  {
+public class OAuthControllerTest {
 
     private static final String TEST_URL = "https://test.com";
     private static final int TEST_ERROR_CODE = 1000;
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthHandlerTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthHandlerTest.java
index 6af47307..e602b36e 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthHandlerTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthHandlerTest.java
@@ -39,7 +39,7 @@
 import static org.mockito.Mockito.verify;
 
 @RunWith(RobolectricTestRunner.class)
-public class OAuthHandlerTest  {
+public class OAuthHandlerTest {
 
     private static final int REQUEST_CODE = TwitterAuthConfig.DEFAULT_AUTH_REQUEST_CODE;
 
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthWebChromeClientTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthWebChromeClientTest.java
index 7e678ed6..fa825714 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthWebChromeClientTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthWebChromeClientTest.java
@@ -28,7 +28,7 @@
 import static org.mockito.Mockito.verifyZeroInteractions;
 
 @RunWith(RobolectricTestRunner.class)
-public class OAuthWebChromeClientTest  {
+public class OAuthWebChromeClientTest {
 
     OAuthWebChromeClient client;
 
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthWebViewClientTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthWebViewClientTest.java
index 1954687a..8b0e7585 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthWebViewClientTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/OAuthWebViewClientTest.java
@@ -38,7 +38,7 @@
 import static org.mockito.Mockito.when;
 
 @RunWith(RobolectricTestRunner.class)
-public class OAuthWebViewClientTest  {
+public class OAuthWebViewClientTest {
 
     private static final String COMPLETE_URL = "twittersdk://callback";
     private static final String RETURNED_URL = "twittersdk://callback?version=1.0.1-SNAPSHOT.dev"
@@ -114,7 +114,7 @@ public void testOnReceivedSslError() {
     }
 
     private void verifyOnError(int expectedErrorCode, String expectedErrorDesc,
-            String expectedFailingUrl) {
+                               String expectedFailingUrl) {
         final ArgumentCaptor<WebViewException> exceptionArgCaptor
                 = ArgumentCaptor.forClass(WebViewException.class);
         verify(mockListener).onError(exceptionArgCaptor.capture());
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/SSOAuthHandlerTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/SSOAuthHandlerTest.java
index c8cdad4f..a5a7911f 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/SSOAuthHandlerTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/SSOAuthHandlerTest.java
@@ -42,7 +42,7 @@
 import static org.mockito.Mockito.when;
 
 @RunWith(RobolectricTestRunner.class)
-public class SSOAuthHandlerTest  {
+public class SSOAuthHandlerTest {
 
     private static final int REQUEST_CODE = TwitterAuthConfig.DEFAULT_AUTH_REQUEST_CODE;
     private static final String INVALID_SIGNATURE = "AAAAAAAAAA";
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/TestUtils.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/TestUtils.java
index 401d4873..0f8dc70b 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/TestUtils.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/identity/TestUtils.java
@@ -50,10 +50,10 @@ public static void setupTwitterInstalled(Context mockContext, String... signatur
 
         when(mockContext.getPackageManager()).thenReturn(mockPm);
         when(mockPm.getPackageInfo(SSOAuthHandler.TWITTER_PACKAGE_NAME,
-            PackageManager.GET_SIGNATURES)).thenReturn(mockPackageInfo);
+                PackageManager.GET_SIGNATURES)).thenReturn(mockPackageInfo);
         when(mockPm.getPackageInfo(SSOAuthHandler.DOGFOOD_PACKAGE_NAME,
                 PackageManager.GET_SIGNATURES))
-            .thenThrow(new PackageManager.NameNotFoundException());
+                .thenThrow(new PackageManager.NameNotFoundException());
         final List<ResolveInfo> activities = new ArrayList<>();
         activities.add(mock(ResolveInfo.class));
         when(mockContext.getPackageManager().queryIntentActivities(any(Intent.class),
@@ -64,7 +64,7 @@ public static void setupTwitterDogfoodInstalled(Context mockContext, String sign
             throws PackageManager.NameNotFoundException {
         final PackageManager mockPm = mock(PackageManager.class);
         final PackageInfo mockPackageInfo = mock(PackageInfo.class);
-        mockPackageInfo.signatures = new Signature[] {
+        mockPackageInfo.signatures = new Signature[]{
                 new Signature(signature)
         };
         when(mockContext.getPackageManager()).thenReturn(mockPm);
@@ -85,10 +85,10 @@ public static void setupNoSSOAppInstalled(Context mockContext)
 
         when(mockContext.getPackageManager()).thenReturn(mockPm);
         when(mockPm.getPackageInfo(SSOAuthHandler.TWITTER_PACKAGE_NAME,
-            PackageManager.GET_SIGNATURES))
-            .thenThrow(new PackageManager.NameNotFoundException());
+                PackageManager.GET_SIGNATURES))
+                .thenThrow(new PackageManager.NameNotFoundException());
         when(mockPm.getPackageInfo(SSOAuthHandler.DOGFOOD_PACKAGE_NAME,
-            PackageManager.GET_SIGNATURES))
-            .thenThrow(new PackageManager.NameNotFoundException());
+                PackageManager.GET_SIGNATURES))
+                .thenThrow(new PackageManager.NameNotFoundException());
     }
 }
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/SessionMonitorTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/SessionMonitorTest.java
index 0422df14..741b46c1 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/SessionMonitorTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/SessionMonitorTest.java
@@ -146,7 +146,7 @@ public void testVerifySession_callsAccountService() {
     @Test
     public void testMonitorStateStartVerification_duringVerification() {
         final long startTime = TEST_TIME_1200_UTC;
-        final long now =  startTime + 9 * DateUtils.HOUR_IN_MILLIS;
+        final long now = startTime + 9 * DateUtils.HOUR_IN_MILLIS;
 
         monitorState.lastVerification = startTime;
         monitorState.verifying = true;
@@ -156,7 +156,7 @@ public void testMonitorStateStartVerification_duringVerification() {
     @Test
     public void testMonitorStateStartVerification_beforeTimeThreshold() {
         final long startTime = TEST_TIME_1200_UTC;
-        final long now =  startTime + DateUtils.HOUR_IN_MILLIS;
+        final long now = startTime + DateUtils.HOUR_IN_MILLIS;
 
         monitorState.lastVerification = startTime;
         monitorState.verifying = false;
@@ -166,7 +166,7 @@ public void testMonitorStateStartVerification_beforeTimeThreshold() {
     @Test
     public void testMonitorStateStartVerification_dayChangedButBeforeThreshold() {
         final long startTime = TEST_TIME_2359_UTC;
-        final long now =  TEST_TIME_0001_UTC;
+        final long now = TEST_TIME_0001_UTC;
 
         monitorState.lastVerification = startTime;
         monitorState.verifying = false;
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/TwitterApiTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/TwitterApiTest.java
index f5c94ce4..cbff1c26 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/TwitterApiTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/TwitterApiTest.java
@@ -27,7 +27,7 @@
 import static org.junit.Assert.assertEquals;
 
 @RunWith(RobolectricTestRunner.class)
-public class TwitterApiTest  {
+public class TwitterApiTest {
 
     @Test
     public void testBuildUponBaseHost_singlePath() {
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/UserUtilsTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/UserUtilsTest.java
index 5254860d..df93be66 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/UserUtilsTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/UserUtilsTest.java
@@ -50,7 +50,7 @@ public void testGetProfileImageUrlHttps_nullSize() {
     @Test
     public void testGetProfileImageUrlHttps_reasonablySmall() {
         final String reasonableSize = "https://pbs.twimg.com/profile_images/2284174872/" +
-                  "7df3h38zabcvjylnyfe3_reasonably_small.png";
+                "7df3h38zabcvjylnyfe3_reasonably_small.png";
         assertEquals(reasonableSize,
                 UserUtils.getProfileImageUrlHttps(user, UserUtils.AvatarSize.REASONABLY_SMALL));
     }
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/GuestAuthTokenTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/GuestAuthTokenTest.java
index 55ffe998..013b8692 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/GuestAuthTokenTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/GuestAuthTokenTest.java
@@ -25,7 +25,7 @@
 import static org.junit.Assert.assertTrue;
 
 @RunWith(RobolectricTestRunner.class)
-public class GuestAuthTokenTest  {
+public class GuestAuthTokenTest {
 
     private static final int HEADERS_COUNT = 2;
     private static final String TOKEN_TYPE = "tokenType";
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aHeadersTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aHeadersTest.java
index cd08d802..0e8bbc6c 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aHeadersTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aHeadersTest.java
@@ -32,7 +32,7 @@
 import static org.mockito.Mockito.mock;
 
 @RunWith(RobolectricTestRunner.class)
-public class OAuth1aHeadersTest  {
+public class OAuth1aHeadersTest {
     private static final String VERIFY_CREDENTIALS_URL = "api.twitter.com";
     private static final String ANY_AUTH_CREDENTIALS = "auth_credentials";
     private OAuth1aParameters oAuth1aParameters;
@@ -82,7 +82,7 @@ public String getAuthorizationHeader() {
         @Override
         OAuth1aParameters getOAuth1aParameters(TwitterAuthConfig authConfig, TwitterAuthToken
                 authToken, String callback, String method, String url,
-                Map<String, String> postParams) {
+                                               Map<String, String> postParams) {
             return oAuth1aParameters;
         }
     }
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aParametersTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aParametersTest.java
index 141aa8f6..17890768 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aParametersTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aParametersTest.java
@@ -31,7 +31,7 @@
 
 @RunWith(RobolectricTestRunner.class)
 @SuppressWarnings("checkstyle:linelength")
-public class OAuth1aParametersTest  {
+public class OAuth1aParametersTest {
 
     private static class TestParameters {
         public final String method;
@@ -49,10 +49,10 @@
         public final String expectedAuthHeader;
 
         TestParameters(String method, String url, Map<String, String> postParams,
-                String consumerKey, String consumerSecret, String callback, String nonce,
-                String timestamp, String token, String tokenSecret,
-                String expectedSignatureBase, String expectedSignature,
-                String expectedAuthHeader) {
+                       String consumerKey, String consumerSecret, String callback, String nonce,
+                       String timestamp, String token, String tokenSecret,
+                       String expectedSignatureBase, String expectedSignature,
+                       String expectedAuthHeader) {
             this.method = method;
             this.url = url;
             this.postParams = postParams;
@@ -69,7 +69,7 @@
         }
     }
 
-    private static final TestParameters[] TEST_PARAMETERS = new TestParameters[] {
+    private static final TestParameters[] TEST_PARAMETERS = new TestParameters[]{
             // tokens/secrets (disabled) from https://dev.twitter.com/web/sign-in/implementing
             new TestParameters(
                     "POST",
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aServiceTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aServiceTest.java
index d0a896f0..30676cce 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aServiceTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aServiceTest.java
@@ -287,7 +287,7 @@ public void testCallbackWrapperFailure() {
 
         @Override
         public Call<ResponseBody> getAccessToken(@Header(OAuthConstants.HEADER_AUTHORIZATION) String auth,
-                @Query(OAuthConstants.PARAM_VERIFIER) String verifier) {
+                                                 @Query(OAuthConstants.PARAM_VERIFIER) String verifier) {
             final ResponseBody responseBody = ResponseBody.create(MediaType.parse("application/json"), "");
             return Calls.response(Response.success(responseBody));
         }
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth2ServiceTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth2ServiceTest.java
index 02a013df..4d4897b9 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth2ServiceTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth2ServiceTest.java
@@ -50,7 +50,7 @@
 
 @RunWith(RobolectricTestRunner.class)
 @SuppressWarnings("checkstyle:linelength")
-public class OAuth2ServiceTest  {
+public class OAuth2ServiceTest {
 
     /**
      * Example consumer key and consumer secret values provided by:
@@ -195,7 +195,7 @@ public void testRequestGuestAuthToken_appAuthFailure() {
         service.api = new MockOAuth2Api() {
             @Override
             public Call<OAuth2Token> getAppAuthToken(@Header(OAuthConstants.HEADER_AUTHORIZATION) String auth,
-                    @Field(OAuthConstants.PARAM_GRANT_TYPE) String grantType) {
+                                                     @Field(OAuthConstants.PARAM_GRANT_TYPE) String grantType) {
                 return Calls.failure(new IOException());
             }
         };
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth2TokenTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth2TokenTest.java
index a7833887..c0584f07 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth2TokenTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth2TokenTest.java
@@ -27,7 +27,7 @@
 import static org.junit.Assert.assertFalse;
 
 @RunWith(RobolectricTestRunner.class)
-public class OAuth2TokenTest  {
+public class OAuth2TokenTest {
 
     private static final String TOKEN_TYPE = "tokenType";
     private static final String ACCESS_TOKEN = "accessToken";
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuthResponseTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuthResponseTest.java
index 5cdfd6a8..29f842b1 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuthResponseTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuthResponseTest.java
@@ -29,7 +29,7 @@
 import static org.junit.Assert.assertEquals;
 
 @RunWith(RobolectricTestRunner.class)
-public class OAuthResponseTest  {
+public class OAuthResponseTest {
 
     @Test
     public void testParcelable() {
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuthUtils.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuthUtils.java
index 1acfbc03..7ff0fa3c 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuthUtils.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuthUtils.java
@@ -20,12 +20,12 @@
 public class OAuthUtils {
 
     public static OAuth2Token createOAuth2Token(String tokenType, String accessToken,
-            long createdAt) {
+                                                long createdAt) {
         return new OAuth2Token(tokenType, accessToken, createdAt);
     }
 
     public static GuestAuthToken createGuestAuthToken(String tokenType, String accessToken,
-            String guestToken, long createdAt) {
+                                                      String guestToken, long createdAt) {
         return new GuestAuthToken(tokenType, accessToken, guestToken, createdAt);
     }
 }
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/CoordinatesTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/CoordinatesTest.java
index 7a823fe4..f45600cb 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/CoordinatesTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/CoordinatesTest.java
@@ -29,7 +29,7 @@
 import static org.junit.Assert.assertEquals;
 
 @RunWith(RobolectricTestRunner.class)
-public class CoordinatesTest  {
+public class CoordinatesTest {
 
     private static final String TEST_JSON = "{\n"
             + "    \"coordinates\":\n"
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/EntityTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/EntityTest.java
index 87596c53..d65288a4 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/EntityTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/EntityTest.java
@@ -29,7 +29,7 @@
 import static org.junit.Assert.assertEquals;
 
 @RunWith(RobolectricTestRunner.class)
-public class EntityTest  {
+public class EntityTest {
 
     private static final String TEST_JSON = "{\"indices\":[32,36]}";
     private static final int TEST_INDICES_START = 32;
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/HashTagEntityTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/HashTagEntityTest.java
index 94216d70..206c1a22 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/HashTagEntityTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/HashTagEntityTest.java
@@ -29,7 +29,7 @@
 import static org.junit.Assert.assertEquals;
 
 @RunWith(RobolectricTestRunner.class)
-public class HashTagEntityTest  {
+public class HashTagEntityTest {
 
     private static final String TEST_JSON = "{\"indices\":[32,36],\"text\":\"lol\"}";
     private static final int TEST_INDICES_START = 32;
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/MediaEntityTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/MediaEntityTest.java
index 6daa41bb..d417f6d3 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/MediaEntityTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/MediaEntityTest.java
@@ -38,7 +38,7 @@
 import static org.junit.Assert.fail;
 
 @RunWith(RobolectricTestRunner.class)
-public class MediaEntityTest  {
+public class MediaEntityTest {
     private static final int TEST_INDICES_START = 117;
     private static final int TEST_INDICES_END = 139;
     private static final String TEST_URL = "http://t.co/lvYVFjAbzz";
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/MentionEntityTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/MentionEntityTest.java
index 39718e34..7576e84d 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/MentionEntityTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/MentionEntityTest.java
@@ -29,7 +29,7 @@
 import static org.junit.Assert.assertEquals;
 
 @RunWith(RobolectricTestRunner.class)
-public class MentionEntityTest  {
+public class MentionEntityTest {
 
     private static final String TEST_JSON = "{\"name\":\"Twitter API\","
             + "\"indices\":[4,15], \"screen_name\":\"twitterapi\","
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/PlaceTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/PlaceTest.java
index 85adec80..a425e630 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/PlaceTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/PlaceTest.java
@@ -98,7 +98,7 @@ private void assertAttributes(Map<String, String> attributes) {
     private void assertBoundingBox(Place.BoundingBox boundingBox) {
         assertEquals(EXPECTED_BOUNDING_BOX_TYPE, boundingBox.type);
         assertEquals(4, boundingBox.coordinates.get(0).size());
-        for (List<Double> d: boundingBox.coordinates.get(0)) {
+        for (List<Double> d : boundingBox.coordinates.get(0)) {
             assertEquals(EXPECTED_BOUNDING_BOX_LONGITUDE, d.get(0));
             assertEquals(EXPECTED_BOUNDING_BOX_LATITUDE, d.get(1));
         }
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/SafeListAdapterTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/SafeListAdapterTest.java
index 08197f05..8fd27b2b 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/SafeListAdapterTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/SafeListAdapterTest.java
@@ -33,7 +33,7 @@
 import static org.junit.Assert.assertTrue;
 
 @RunWith(RobolectricTestRunner.class)
-public class SafeListAdapterTest  {
+public class SafeListAdapterTest {
 
     private static final String TEST_JSON_LIST_NULL = "{\"list\":null}";
     private static final String TEST_JSON_LIST_EMPTY = "{\"list\":[]}";
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/SafeMapAdapterTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/SafeMapAdapterTest.java
index e9b00bd7..c5c64ab4 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/SafeMapAdapterTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/SafeMapAdapterTest.java
@@ -33,7 +33,7 @@
 import static org.junit.Assert.assertTrue;
 
 @RunWith(RobolectricTestRunner.class)
-public class SafeMapAdapterTest  {
+public class SafeMapAdapterTest {
     private static final String TEST_JSON_MAP_EMPTY = "{\"map\":{}}";
     private static final String TEST_JSON_MAP_STRING_VALUES
             = "{\"map\": {\"k1\": \"v1\",\"k2\": \"v2\"}}";
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/SymbolEntityTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/SymbolEntityTest.java
index bcdee62d..9240234b 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/SymbolEntityTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/SymbolEntityTest.java
@@ -29,7 +29,7 @@
 import static org.junit.Assert.assertEquals;
 
 @RunWith(RobolectricTestRunner.class)
-public class SymbolEntityTest  {
+public class SymbolEntityTest {
 
     private static final String TEST_JSON = "{\"indices\":[32,36],\"text\":\"TWTR\"}";
     private static final int TEST_INDICES_START = 32;
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/TweetTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/TweetTest.java
index 3f272950..e7f93a57 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/TweetTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/TweetTest.java
@@ -95,7 +95,7 @@ public void testQuotedTweetDeserialization() throws IOException {
         JsonReader reader = null;
         try {
             reader = new JsonReader(new InputStreamReader(testResources
-                .getAsStream("model_quoted_tweet.json")));
+                    .getAsStream("model_quoted_tweet.json")));
             final Tweet tweet = gson.fromJson(reader, Tweet.class);
             assertEquals(EXPECTED_QUOTED_STATUS_ID, tweet.quotedStatusId);
             assertEquals(String.valueOf(EXPECTED_QUOTED_STATUS_ID), tweet.quotedStatusIdStr);
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/UrlEntityTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/UrlEntityTest.java
index 59ac6de4..c705e5f6 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/models/UrlEntityTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/models/UrlEntityTest.java
@@ -29,7 +29,7 @@
 import static org.junit.Assert.assertEquals;
 
 @RunWith(RobolectricTestRunner.class)
-public class UrlEntityTest  {
+public class UrlEntityTest {
 
     private static final String TEST_JSON
             = "{\"indices\":[32,52], \"url\":\"http:\\/\\/t.co\\/IOwBrTZR\","
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/services/params/GeocodeTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/services/params/GeocodeTest.java
index c05b5d29..19dc6b7c 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/services/params/GeocodeTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/services/params/GeocodeTest.java
@@ -24,7 +24,7 @@
 import static org.junit.Assert.assertEquals;
 
 @RunWith(RobolectricTestRunner.class)
-public class GeocodeTest  {
+public class GeocodeTest {
 
     @Test
     public void testToString() {
diff --git a/twitter-core/src/test/resources/model_configuration.json b/twitter-core/src/test/resources/model_configuration.json
index 5c6a8a35..40d14859 100644
--- a/twitter-core/src/test/resources/model_configuration.json
+++ b/twitter-core/src/test/resources/model_configuration.json
@@ -1,8 +1,8 @@
 {
-  "dm_text_character_limit":10000,
-  "characters_reserved_per_media":23,
-  "max_media_per_upload":1,
-  "non_username_paths":[
+  "dm_text_character_limit": 10000,
+  "characters_reserved_per_media": 23,
+  "max_media_per_upload": 1,
+  "non_username_paths": [
     "about",
     "account",
     "accounts",
@@ -89,29 +89,29 @@
     "zendesk_auth",
     "media_signup"
   ],
-  "photo_size_limit":3145728,
-  "photo_sizes":{
-    "thumb":{
-      "h":150,
-      "resize":"crop",
-      "w":150
+  "photo_size_limit": 3145728,
+  "photo_sizes": {
+    "thumb": {
+      "h": 150,
+      "resize": "crop",
+      "w": 150
     },
-    "small":{
-      "h":480,
-      "resize":"fit",
-      "w":340
+    "small": {
+      "h": 480,
+      "resize": "fit",
+      "w": 340
     },
-    "medium":{
-      "h":1200,
-      "resize":"fit",
-      "w":600
+    "medium": {
+      "h": 1200,
+      "resize": "fit",
+      "w": 600
     },
-    "large":{
-      "h":2048,
-      "resize":"fit",
-      "w":1024
+    "large": {
+      "h": 2048,
+      "resize": "fit",
+      "w": 1024
     }
   },
-  "short_url_length":22,
-  "short_url_length_https":23
+  "short_url_length": 22,
+  "short_url_length_https": 23
 }
\ No newline at end of file
diff --git a/twitter-core/src/test/resources/model_places.json b/twitter-core/src/test/resources/model_places.json
index b5c96658..20411933 100644
--- a/twitter-core/src/test/resources/model_places.json
+++ b/twitter-core/src/test/resources/model_places.json
@@ -1,7 +1,6 @@
 {
   "name": "Twitter HQ",
   "polylines": [
-
   ],
   "country": "United States",
   "country_code": "US",
@@ -41,7 +40,6 @@
       "country": "United States",
       "country_code": "US",
       "attributes": {
-
       },
       "url": "https://api.twitter.com/1.1/geo/id/5a110d312052166f.json",
       "bounding_box": {
diff --git a/twitter-core/src/test/resources/model_tweet.json b/twitter-core/src/test/resources/model_tweet.json
index f5061a3a..cac35581 100644
--- a/twitter-core/src/test/resources/model_tweet.json
+++ b/twitter-core/src/test/resources/model_tweet.json
@@ -26,7 +26,6 @@
       }
     ],
     "user_mentions": [
-
     ]
   },
   "in_reply_to_user_id_str": null,
@@ -73,7 +72,6 @@
       },
       "description": {
         "urls": [
-
         ]
       }
     },
diff --git a/twitter-core/src/test/resources/model_user.json b/twitter-core/src/test/resources/model_user.json
index 614a6e90..724806c4 100644
--- a/twitter-core/src/test/resources/model_user.json
+++ b/twitter-core/src/test/resources/model_user.json
@@ -56,10 +56,8 @@
           }
         ],
         "hashtags": [
-
         ],
         "user_mentions": [
-
         ]
       },
       "in_reply_to_user_id_str": null,
@@ -91,7 +89,6 @@
         }
       ],
       "hashtags": [
-
       ],
       "user_mentions": [
         {
@@ -126,24 +123,24 @@
   "following": true,
   "show_all_inline_media": true,
   "screen_name": "rsarver",
-    "entities": {
-        "url": {
-            "urls": [
-                {
-                    "url": "http://t.co/78pYTvWfJd",
-                    "expanded_url": "http://dev.twitter.com",
-                    "display_url": "dev.twitter.com",
-                    "indices": [
-                        0,
-                        22
-                    ]
-                }
-            ]
-        },
-        "description": {
-            "urls": []
+  "entities": {
+    "url": {
+      "urls": [
+        {
+          "url": "http://t.co/78pYTvWfJd",
+          "expanded_url": "http://dev.twitter.com",
+          "display_url": "dev.twitter.com",
+          "indices": [
+            0,
+            22
+          ]
         }
+      ]
     },
+    "description": {
+      "urls": []
+    }
+  },
   "withheld_in_countries": [
     "XY"
   ]
diff --git a/twitter-core/src/test/resources/model_userentities.json b/twitter-core/src/test/resources/model_userentities.json
index 4bcdaf8e..81b7c936 100644
--- a/twitter-core/src/test/resources/model_userentities.json
+++ b/twitter-core/src/test/resources/model_userentities.json
@@ -1,13 +1,18 @@
 {
-    "url": {
-      "urls": [{
+  "url": {
+    "urls": [
+      {
         "url": "http:\/\/t.co\/78pYTvWfJd",
         "expanded_url": "http:\/\/dev.twitter.com",
         "display_url": "dev.twitter.com",
-        "indices": [0, 22]
-      }]
-    },
-    "description": {
-      "urls": []
-    }
+        "indices": [
+          0,
+          22
+        ]
+      }
+    ]
+  },
+  "description": {
+    "urls": []
+  }
 }
diff --git a/twitter-core/src/test/resources/robolectric.properties b/twitter-core/src/test/resources/robolectric.properties
index a4f9233b..c6904611 100644
--- a/twitter-core/src/test/resources/robolectric.properties
+++ b/twitter-core/src/test/resources/robolectric.properties
@@ -1,2 +1,2 @@
-sdk = 21
-constants = com.twitter.sdk.android.core.BuildConfig
\ No newline at end of file
+sdk=21
+constants=com.twitter.sdk.android.core.BuildConfig
\ No newline at end of file
diff --git a/twitter-mopub/build.gradle b/twitter-mopub/build.gradle
deleted file mode 100644
index 6be3ce86..00000000
--- a/twitter-mopub/build.gradle
+++ /dev/null
@@ -1,81 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        versionCode 1
-        versionName version
-        minSdkVersion rootProject.minSdkVersion
-        consumerProguardFiles 'proguard.txt'
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-
-            testCoverageEnabled enableTestCodeCoverage
-        }
-        release {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-        }
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-
-    // Forcibly add debug and the generated "R" files onto the test classpath
-    sourceSets {
-        test.java.srcDirs += "build/generated/source/r/debug"
-        test.java.srcDirs += "src/debug"
-    }
-
-    testOptions {
-        unitTests.returnDefaultValues = true
-        unitTests.includeAndroidResources true
-    }
-}
-
-dependencies {
-
-    api (dependency.mopub) {
-        transitive = true
-    }
-
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
-}
\ No newline at end of file
diff --git a/twitter-mopub/changelog.md b/twitter-mopub/changelog.md
deleted file mode 100644
index 8145966f..00000000
--- a/twitter-mopub/changelog.md
+++ /dev/null
@@ -1,33 +0,0 @@
-# Twitter MoPub Android SDK changelog
-*Non-trivial pull requests should include an entry below. Entries must be suitable for inclusion in public-facing materials such as release notes and blog posts. Keep them short, sweet, and in the past tense. New entries go on top. When merging to deploy, add the version number and date.*
-
-## Unreleased
-
-## v3.3.0
-
-* Bumped version number
-
-## v3.2.0
-
-* Moved build to Java 8
-* Narrowed mopub-sdk dependency to mopub-sdk-native-static
-
-## v3.1.1
-
-* Bumped version number
-
-## v3.1.0
-
-* Bumped version number
-
-## v3.0.0
-
-* Bumped version number
-
-## v2.0.0
-
-* Dropped support for API versions before API 14 (ICS).
-
-## v1.0.0
-
-* Initial release.
diff --git a/twitter-mopub/gradle.properties b/twitter-mopub/gradle.properties
deleted file mode 100644
index c7b5d81b..00000000
--- a/twitter-mopub/gradle.properties
+++ /dev/null
@@ -1,26 +0,0 @@
-#
-# Copyright (C) 2015 Twitter, Inc.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-#
-
-# The to be released version. When releasing, drop -SNAPSHOT. After releasing, bump version
-# number and add back -SNAPSHOT
-version=3.3.0-SNAPSHOT
-version_code=1
-
-pom_name=Twitter MoPub Android SDK
-pom_group_id=com.twitter.sdk.android
-pom_artifact_id=twitter-mopub
-pom_packaging=aar
diff --git a/twitter-mopub/internal-build.gradle b/twitter-mopub/internal-build.gradle
deleted file mode 100644
index e9e52a0b..00000000
--- a/twitter-mopub/internal-build.gradle
+++ /dev/null
@@ -1,93 +0,0 @@
-import io.fabric.gradle.weaving.ArtifactSizePlugin
-import io.fabric.gradle.weaving.DexMethodCountPlugin
-
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-apply plugin: 'com.android.library'
-apply from: rootProject.qualityScript
-apply plugin: ArtifactSizePlugin
-apply plugin: DexMethodCountPlugin
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        versionCode 1
-        versionName version
-        group pom_group_id
-
-        minSdkVersion rootProject.minSdkVersion
-        consumerProguardFiles 'proguard.txt'
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-
-            testCoverageEnabled enableTestCodeCoverage
-        }
-        release {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-            buildConfigField "long", "BUILD_TIME", "${System.currentTimeMillis()}L"
-        }
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    dexMethodCount {
-        packageFilter = "com.twitter.sdk.android.mopub"
-    }
-
-    //Gradle publishes only release by default for multi module projects
-    //This will publish all build variants and we can specifically choose them
-    defaultPublishConfig 'release'
-    publishNonDefault true
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-
-    testOptions {
-        unitTests.returnDefaultValues = true
-        unitTests.includeAndroidResources true
-    }
-}
-
-dependencies {
-    api (dependency.mopub) {
-        transitive = true
-    }
-
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
-}
-
-apply from: rootProject.deployScript
\ No newline at end of file
diff --git a/twitter-mopub/lint.xml b/twitter-mopub/lint.xml
deleted file mode 100644
index de80308e..00000000
--- a/twitter-mopub/lint.xml
+++ /dev/null
@@ -1,19 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<lint/>
diff --git a/twitter-mopub/proguard.txt b/twitter-mopub/proguard.txt
deleted file mode 100644
index a7bc4c33..00000000
--- a/twitter-mopub/proguard.txt
+++ /dev/null
@@ -1 +0,0 @@
-# Proguard config for Twitter MoPub
diff --git a/twitter-mopub/src/main/AndroidManifest.xml b/twitter-mopub/src/main/AndroidManifest.xml
deleted file mode 100644
index 15960c86..00000000
--- a/twitter-mopub/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,38 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<manifest
-    package="com.twitter.sdk.android.mopub"
-    xmlns:android="http://schemas.android.com/apk/res/android">
-
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-
-    <application>
-        <activity
-            android:name="com.mopub.mobileads.MoPubActivity"
-            android:configChanges="keyboardHidden|orientation|screenSize"/>
-        <activity
-            android:name="com.mopub.mobileads.MraidActivity"
-            android:configChanges="keyboardHidden|orientation|screenSize"/>
-        <activity
-            android:name="com.mopub.common.MoPubBrowser"
-            android:configChanges="keyboardHidden|orientation|screenSize"/>
-        <activity
-            android:name="com.mopub.mobileads.MraidVideoPlayerActivity"
-            android:configChanges="keyboardHidden|orientation|screenSize"/>
-    </application>
-</manifest>
\ No newline at end of file
diff --git a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/ColorUtils.java b/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/ColorUtils.java
deleted file mode 100644
index 522bba8a..00000000
--- a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/ColorUtils.java
+++ /dev/null
@@ -1,132 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub;
-
-import android.graphics.Color;
-
-final class ColorUtils {
-    private static final int RGB_TOTAL_COLORS = 256;
-
-    private static final float DEFAULT_LIGHTNESS_THRESHOLD = .6f;
-    private static final float ON_TAP_LIGHTNESS_THRESHOLD = .3f;
-
-    private static final float CTA_ON_TAP_DARKNESS_FACTOR = 0.1f;
-    private static final float CTA_ON_TAP_LIGHTNESS_FACTOR = 0.2f;
-    private static final float CTA_TEXT_LIGHTNESS_FACTOR = .6f;
-
-    private static final int OPAQUE_ALPHA = Math.round(255 * 1.0f);
-    private static final int TRANSPARENT_ALPHA = Math.round(255 * 0.9f);
-    private static final int COLOR_FULLY_WHITE = Math.round(255 * 1.0f);
-    private static final int COLOR_PARTIALLY_BLACK = Math.round(255 * 0.4f);
-
-    private ColorUtils() {}
-
-    public static int calculateCtaTextColor(final int ctaBackgroundColor) {
-        if (isLightColor(ctaBackgroundColor)) {
-            return calculateDarkerColor(ctaBackgroundColor, CTA_TEXT_LIGHTNESS_FACTOR);
-        } else {
-            return Color.WHITE;
-        }
-    }
-
-    public static int calculateCtaOnTapColor(final int ctaBackgroundColor) {
-        if (isLightColor(ctaBackgroundColor, ON_TAP_LIGHTNESS_THRESHOLD)) {
-            return calculateDarkerColor(ctaBackgroundColor, CTA_ON_TAP_DARKNESS_FACTOR);
-        } else {
-            return calculateLighterColor(ctaBackgroundColor, CTA_ON_TAP_LIGHTNESS_FACTOR);
-        }
-    }
-
-    public static boolean isLightColor(final int color) {
-        return isLightColor(color, DEFAULT_LIGHTNESS_THRESHOLD);
-    }
-
-    /**
-     * This method calculates a darker color provided a factor of reduction in lightness.
-     *
-     * @param color The original color value
-     * @param factor Factor of lightness reduction, range can be between 0 - 1.0
-     * @return  The calculated darker color
-     */
-    public static int calculateDarkerColor(final int color, final float factor) {
-        final int a = Color.alpha(color);
-        final int r = Color.red(color);
-        final int g = Color.green(color);
-        final int b = Color.blue(color);
-
-        final int lightnessLevel = Math.round(RGB_TOTAL_COLORS * factor);
-
-        return Color.argb(a,
-                Math.max(r - lightnessLevel, 0),
-                Math.max(g - lightnessLevel, 0),
-                Math.max(b - lightnessLevel, 0));
-    }
-
-    /**
-     * This method calculates a lighter color provided a factor of increase in lightness.
-     *
-     * @param color A color value
-     * @param factor Factor of increase in lightness, range can be between 0 - 1.0
-     * @return  The calculated darker color
-     */
-    public static int calculateLighterColor(final int color, final float factor) {
-        final int a = Color.alpha(color);
-        final int r = Color.red(color);
-        final int g = Color.green(color);
-        final int b = Color.blue(color);
-
-        final int lightnessLevel = Math.round(RGB_TOTAL_COLORS * factor);
-
-        return Color.argb(a,
-                Math.min(r + lightnessLevel, 255),
-                Math.min(g + lightnessLevel, 255),
-                Math.min(b + lightnessLevel, 255));
-    }
-
-    /**
-     * This method calculates the suitable contrasting color that is viewable.
-     *
-     * @param color A color value.
-     * @return  The calculated contrasting color that is viewable.
-     */
-    public static int calculateContrastingColor(final int color) {
-        final boolean isLightColor = isLightColor(color);
-        final int alpha = isLightColor ? OPAQUE_ALPHA : TRANSPARENT_ALPHA;
-        final int rgbColor = isLightColor ? COLOR_PARTIALLY_BLACK : COLOR_FULLY_WHITE;
-        return Color.argb(alpha, rgbColor, rgbColor, rgbColor);
-    }
-
-    /**
-     * This method uses HSL to determine in a human eyesight terms if a color is light or not.
-     * See: http://en.wikipedia.org/wiki/HSL_and_HSV. The threshold values are from ITU Rec. 709
-     * http://en.wikipedia.org/wiki/Rec._709#Luma_coefficients
-     *
-     *
-     * @param  color A color value
-     * @param  factor A factor of lightness measured between 0-1.0
-     * @return Whether or not the color is considered light
-     */
-    public static boolean isLightColor(final int color, final float factor) {
-        final int r = Color.red(color);
-        final int g = Color.green(color);
-        final int b = Color.blue(color);
-
-        final double threshold = 0.21 * r + 0.72 * g + 0.07 * b;
-        return threshold > (RGB_TOTAL_COLORS * factor);
-    }
-}
diff --git a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterMoPubAdAdapter.java b/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterMoPubAdAdapter.java
deleted file mode 100644
index dffd1cd7..00000000
--- a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterMoPubAdAdapter.java
+++ /dev/null
@@ -1,94 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub;
-
-import android.app.Activity;
-import android.support.annotation.NonNull;
-import android.support.annotation.Nullable;
-import android.text.TextUtils;
-import android.widget.Adapter;
-
-import com.mopub.nativeads.MoPubAdAdapter;
-import com.mopub.nativeads.MoPubNativeAdPositioning;
-import com.mopub.nativeads.RequestParameters;
-
-public class TwitterMoPubAdAdapter extends MoPubAdAdapter{
-    private static final String TWITTERKIT_KEYWORD = "src:twitterkit";
-
-    /**
-     * Creates a new TwitterMoPubAdAdapter object.
-     *
-     * By default, the adapter will contact the server to determine ad positions. If you
-     * wish to hard-code positions in your app, see {@link TwitterMoPubAdAdapter( Activity,
-     * MoPubNativeAdPositioning.MoPubClientPositioning )}.
-     *
-     * @param activity The activity.
-     * @param originalAdapter Your original adapter.
-     */
-    public TwitterMoPubAdAdapter(Activity activity, Adapter originalAdapter) {
-        super(activity, originalAdapter);
-    }
-
-    /**
-     * Creates a new TwitterMoPubAdAdapter object, using server positioning.
-     *
-     * @param activity The activity.
-     * @param originalAdapter Your original adapter.
-     * @param adPositioning A positioning object for specifying where ads will be placed in your
-     * stream. See {@link MoPubNativeAdPositioning#serverPositioning()}.
-     */
-    public TwitterMoPubAdAdapter(Activity activity, Adapter originalAdapter,
-            MoPubNativeAdPositioning.MoPubServerPositioning adPositioning) {
-        super(activity, originalAdapter, adPositioning);
-    }
-
-    /**
-     * Creates a new TwitterMoPubAdAdapter object, using client positioning.
-     *
-     * @param activity The activity.
-     * @param originalAdapter Your original adapter.
-     * @param adPositioning A positioning object for specifying where ads will be placed in your
-     * stream. See {@link MoPubNativeAdPositioning#clientPositioning()}.
-     */
-    public TwitterMoPubAdAdapter(Activity activity, Adapter originalAdapter,
-            MoPubNativeAdPositioning.MoPubClientPositioning adPositioning) {
-        super(activity, originalAdapter, adPositioning);
-    }
-
-    @Override
-    public void loadAds(@NonNull final String adUnitId) {
-        loadAds(adUnitId, null);
-    }
-
-    @Override
-    public void loadAds(@NonNull final String adUnitId,
-            @Nullable final RequestParameters requestParams) {
-
-        final RequestParameters.Builder builder = new RequestParameters.Builder();
-        if (requestParams != null) {
-            final String keywords = TextUtils.isEmpty(requestParams.getKeywords())
-                    ? TWITTERKIT_KEYWORD : requestParams.getKeywords() + "," + TWITTERKIT_KEYWORD;
-            builder.keywords(keywords);
-            builder.location(requestParams.getLocation());
-        } else {
-            builder.keywords(TWITTERKIT_KEYWORD);
-        }
-
-        super.loadAds(adUnitId, builder.build());
-    }
-}
diff --git a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAd.java b/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAd.java
deleted file mode 100644
index d4ea6596..00000000
--- a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAd.java
+++ /dev/null
@@ -1,188 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub;
-
-import android.content.Context;
-import android.content.res.TypedArray;
-import android.graphics.drawable.Drawable;
-import android.graphics.drawable.GradientDrawable;
-import android.graphics.drawable.LayerDrawable;
-import android.graphics.drawable.ShapeDrawable;
-import android.graphics.drawable.StateListDrawable;
-import android.graphics.drawable.shapes.RectShape;
-import android.os.Build;
-import android.util.AttributeSet;
-import android.view.LayoutInflater;
-import android.widget.FrameLayout;
-import android.widget.ImageView;
-import android.widget.LinearLayout;
-import android.widget.RelativeLayout;
-import android.widget.TextView;
-
-import com.twitter.sdk.android.mopub.internal.RoundedImageView;
-
-public class TwitterStaticNativeAd extends FrameLayout {
-    LinearLayout containerLayout;
-    RoundedImageView mainImageView;
-    RelativeLayout cardLayout;
-    ImageView adIconView;
-    TextView adTitleView;
-    TextView adTextView;
-    TextView callToActionView;
-    ImageView privacyInfoView;
-
-    // style colors
-    int containerBackgroundColor;
-    int cardBackgroundColor;
-    int primaryTextColor;
-    int ctaBackgroundColor;
-    int cardBorderColor;
-
-    private static final int DEFAULT_AD_STYLE = R.style.tw__ad_LightStyle;
-
-    public TwitterStaticNativeAd(Context context) {
-        this(context, null);
-    }
-
-    public TwitterStaticNativeAd(Context context, AttributeSet attrs) {
-        this(context, attrs, DEFAULT_AD_STYLE);
-    }
-
-    public TwitterStaticNativeAd(Context context, AttributeSet attrs, int styleResId) {
-        super(context, attrs);
-        findSubviews();
-        initAttributes(styleResId);
-        setStyleAttributes();
-    }
-
-    private void findSubviews() {
-        LayoutInflater.from(getContext()).inflate(R.layout.tw__native_ad, this, true);
-        containerLayout = findViewById(R.id.tw__ad_mopub_layout);
-        mainImageView = findViewById(R.id.native_ad_main_image);
-        cardLayout = findViewById(R.id.native_ad_card);
-        adIconView = findViewById(R.id.native_ad_icon_image);
-        adTitleView = findViewById(R.id.native_ad_title);
-        adTextView = findViewById(R.id.native_ad_text);
-        callToActionView = findViewById(R.id.native_ad_cta);
-        privacyInfoView = findViewById(R.id.native_ad_privacy_info_icon_image);
-    }
-
-    private void initAttributes(int styleResId) {
-        final TypedArray a = getContext().getTheme().obtainStyledAttributes(styleResId,
-                R.styleable.tw__native_ad);
-        try {
-            readStyleAttributes(a);
-        } finally {
-            a.recycle();
-        }
-    }
-
-    private void readStyleAttributes(TypedArray typedArray) {
-        containerBackgroundColor = typedArray.getColor(
-                R.styleable.tw__native_ad_tw__ad_container_bg_color,
-                getResources().getColor(R.color.tw__ad_light_container_bg_color));
-
-        cardBackgroundColor = typedArray.getColor(R.styleable.tw__native_ad_tw__ad_card_bg_color,
-                getResources().getColor(R.color.tw__ad_light_card_bg_color));
-
-        primaryTextColor = typedArray.getColor(
-                R.styleable.tw__native_ad_tw__ad_text_primary_color,
-                getResources().getColor(R.color.tw__ad_light_text_primary_color));
-
-        ctaBackgroundColor = typedArray.getColor(
-                R.styleable.tw__native_ad_tw__ad_cta_button_color,
-                getResources().getColor(R.color.tw__ad_cta_default));
-    }
-
-    private void setStyleAttributes() {
-        containerLayout.setBackgroundColor(containerBackgroundColor);
-        adTitleView.setTextColor(primaryTextColor);
-        adTextView.setTextColor(primaryTextColor);
-        final int adViewRadius = (int) getResources().getDimension(R.dimen.tw__ad_view_radius);
-        mainImageView.setCornerRadii(adViewRadius, adViewRadius, 0, 0);
-
-        final TextView privacyTextView = findViewById(R.id.native_ad_privacy_text);
-        privacyTextView.setTextColor(
-                ColorUtils.calculateContrastingColor(containerBackgroundColor));
-
-        setCardStyling();
-        setCallToActionStyling();
-    }
-
-    private void setCardStyling() {
-        final boolean isLightBg = ColorUtils.isLightColor(containerBackgroundColor);
-        if (isLightBg) {
-            cardBorderColor = getResources().getColor(R.color.tw__ad_light_card_border_color);
-        } else {
-            cardBorderColor = getResources().getColor(R.color.tw__ad_dark_card_border_color);
-        }
-
-        final ShapeDrawable bgDrawable = new ShapeDrawable(new RectShape());
-        bgDrawable.getPaint().setColor(cardBackgroundColor);
-        final ShapeDrawable borderDrawable = new ShapeDrawable(new RectShape());
-        borderDrawable.getPaint().setColor(cardBorderColor);
-
-        final Drawable[] layers = new Drawable[2];
-        layers[0] = borderDrawable;
-        layers[1] = bgDrawable;
-
-        final LayerDrawable layerDrawable = new LayerDrawable(layers);
-        layerDrawable.setLayerInset(0, 0, 0, 0, 0);
-        layerDrawable.setLayerInset(1, 1, 0, 1, 0);
-
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
-            cardLayout.setBackground(layerDrawable);
-        } else {
-            cardLayout.setBackgroundDrawable(layerDrawable);
-        }
-    }
-
-    private void setCallToActionStyling() {
-        final int calculatedCTATextColor = ColorUtils.calculateCtaTextColor(ctaBackgroundColor);
-        callToActionView.setTextColor(calculatedCTATextColor);
-
-        // Setup StateListDrawable obj with two gradient drawables:
-        // First is the selected item with lighter/darker bg color of original
-        // Second is unselected item with the call to action background color
-        // Also set the default ad view radius for bottomLeft and bottomRight corners
-        final StateListDrawable stateListDrawable = new StateListDrawable();
-        final int adViewRadius = (int) getResources().getDimension(R.dimen.tw__ad_view_radius);
-        final float[] ctaViewRadii = new float[]{
-                0, 0,
-                0, 0,
-                adViewRadius, adViewRadius,
-                adViewRadius, adViewRadius};
-
-        final GradientDrawable selectedItem = new GradientDrawable();
-        selectedItem.setCornerRadii(ctaViewRadii);
-        final int ctaPressedBgColor = ColorUtils.calculateCtaOnTapColor(ctaBackgroundColor);
-        selectedItem.setColor(ctaPressedBgColor);
-        stateListDrawable.addState(new int[]{android.R.attr.state_pressed}, selectedItem);
-
-        final GradientDrawable unselectedItem = new GradientDrawable();
-        unselectedItem.setCornerRadii(ctaViewRadii);
-        unselectedItem.setColor(ctaBackgroundColor);
-        stateListDrawable.addState(new int[]{}, unselectedItem);
-
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
-            callToActionView.setBackground(stateListDrawable);
-        } else {
-            callToActionView.setBackgroundDrawable(stateListDrawable);
-        }
-    }
-}
diff --git a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdRenderer.java b/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdRenderer.java
deleted file mode 100644
index dae7d110..00000000
--- a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdRenderer.java
+++ /dev/null
@@ -1,74 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub;
-
-import android.content.Context;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.mopub.nativeads.BaseNativeAd;
-import com.mopub.nativeads.MoPubAdRenderer;
-import com.mopub.nativeads.NativeImageHelper;
-import com.mopub.nativeads.NativeRendererHelper;
-import com.mopub.nativeads.StaticNativeAd;
-
-public class TwitterStaticNativeAdRenderer implements MoPubAdRenderer<StaticNativeAd> {
-    private static final int DEFAULT_STYLE = R.style.tw__ad_LightStyle;
-
-    private final int styleResId;
-
-    public TwitterStaticNativeAdRenderer() {
-        this.styleResId = DEFAULT_STYLE;
-    }
-
-    public TwitterStaticNativeAdRenderer(int styleResId) {
-        this.styleResId = styleResId;
-    }
-
-    @Override
-    public View createAdView(final Context context, final ViewGroup parent) {
-        return new TwitterStaticNativeAd(context, null, styleResId);
-    }
-
-    @Override
-    public void renderAdView(final View view, final StaticNativeAd staticNativeAd) {
-        update((TwitterStaticNativeAd) view, staticNativeAd);
-    }
-
-    @Override
-    public boolean supports(final BaseNativeAd nativeAd) {
-        return nativeAd instanceof StaticNativeAd;
-    }
-
-    private void update(final TwitterStaticNativeAd staticNativeView,
-            final StaticNativeAd staticNativeAd) {
-        NativeRendererHelper.addTextView(staticNativeView.adTitleView,
-                staticNativeAd.getTitle());
-        NativeRendererHelper.addTextView(staticNativeView.adTextView, staticNativeAd.getText());
-        NativeRendererHelper.addTextView(staticNativeView.callToActionView,
-                staticNativeAd.getCallToAction());
-        NativeImageHelper.loadImageView(staticNativeAd.getMainImageUrl(),
-                staticNativeView.mainImageView);
-        NativeImageHelper.loadImageView(staticNativeAd.getIconImageUrl(),
-                staticNativeView.adIconView);
-        NativeRendererHelper.addPrivacyInformationIcon(
-                staticNativeView.privacyInfoView,
-                staticNativeAd.getPrivacyInformationIconImageUrl(),
-                staticNativeAd.getPrivacyInformationIconClickThroughUrl());
-    }
-}
diff --git a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/internal/RoundedImageView.java b/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/internal/RoundedImageView.java
deleted file mode 100644
index d764dc10..00000000
--- a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/internal/RoundedImageView.java
+++ /dev/null
@@ -1,100 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub.internal;
-
-import android.content.Context;
-import android.graphics.Bitmap;
-import android.graphics.BitmapShader;
-import android.graphics.Canvas;
-import android.graphics.Paint;
-import android.graphics.Path;
-import android.graphics.RectF;
-import android.graphics.Shader;
-import android.graphics.drawable.BitmapDrawable;
-import android.util.AttributeSet;
-import android.widget.ImageView;
-
-import static android.graphics.Bitmap.createBitmap;
-
-public class RoundedImageView extends ImageView {
-    private float[] roundedCornerRadii;
-
-    public RoundedImageView(Context context, AttributeSet attrs) {
-        super(context, attrs, 0);
-        setDefaultCornerRadii();
-    }
-
-    public RoundedImageView(Context context, AttributeSet attrs, int styleResId) {
-        super(context, attrs, styleResId);
-        setDefaultCornerRadii();
-    }
-
-    private void setDefaultCornerRadii() {
-        setCornerRadii(0, 0, 0, 0);
-    }
-
-    /**
-     * Set radius for each corner and override default behavior of no rounded corners.
-     *
-     * @param topLeftRadius     top left radius of view
-     * @param topRightRadius    top right radius of view
-     * @param bottomLeftRadius  bottom left radius of view
-     * @param bottomRightRadius bottom right radius of view
-     */
-    public void setCornerRadii(int topLeftRadius, int topRightRadius,
-                                        int bottomLeftRadius, int bottomRightRadius) {
-        if (topLeftRadius < 0 || topRightRadius < 0 ||
-                bottomRightRadius < 0 || bottomLeftRadius < 0) {
-            throw new IllegalStateException("Radius must not be negative");
-        }
-
-        roundedCornerRadii = new float[]{
-                topLeftRadius, topLeftRadius,
-                topRightRadius, topRightRadius,
-                bottomLeftRadius, bottomLeftRadius,
-                bottomRightRadius, bottomRightRadius};
-    }
-
-    @Override
-    public void setImageBitmap(Bitmap bitmap) {
-        if (bitmap != null) {
-            setImageDrawable(new BitmapDrawable(getResources(), transform(bitmap)));
-        } else {
-            setImageDrawable(null);
-        }
-    }
-
-    private Bitmap transform(Bitmap source) {
-        final RectF rect = new RectF(0, 0, source.getWidth(), source.getHeight());
-        final Bitmap result = createBitmap(source.getWidth(), source.getHeight(),
-                source.getConfig());
-        final BitmapShader bitmapShader = new BitmapShader(source, Shader.TileMode.CLAMP,
-                Shader.TileMode.CLAMP);
-
-        final Paint paint = new Paint();
-        paint.setAntiAlias(true);
-        paint.setShader(bitmapShader);
-
-        final Path path = new Path();
-        path.addRoundRect(rect, roundedCornerRadii, Path.Direction.CCW);
-
-        final Canvas canvas = new Canvas(result);
-        canvas.drawPath(path, paint);
-        return result;
-    }
-}
diff --git a/twitter-mopub/src/main/res/layout/tw__native_ad.xml b/twitter-mopub/src/main/res/layout/tw__native_ad.xml
deleted file mode 100644
index f387f5d0..00000000
--- a/twitter-mopub/src/main/res/layout/tw__native_ad.xml
+++ /dev/null
@@ -1,102 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<LinearLayout
-    android:id="@+id/tw__ad_mopub_layout"
-    xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    style="@style/tw__ad_container">
-
-    <com.twitter.sdk.android.mopub.internal.RoundedImageView
-        android:id="@+id/native_ad_main_image"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:adjustViewBounds="true"
-        tools:ignore="ContentDescription"/>
-
-    <RelativeLayout
-        android:id="@+id/native_ad_card"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:padding="@dimen/tw__ad_space_padding">
-
-        <ImageView
-            android:id="@+id/native_ad_icon_image"
-            android:layout_width="@dimen/tw__ad_icon_size"
-            android:layout_height="@dimen/tw__ad_icon_size"
-            android:layout_alignParentLeft="true"
-            android:layout_marginLeft="@dimen/tw__ad_icon_margin_left"
-            android:layout_marginRight="@dimen/tw__ad_icon_margin_right"
-            tools:ignore="ContentDescription"/>
-
-        <TextView
-            android:id="@+id/native_ad_title"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_toRightOf="@id/native_ad_icon_image"
-            android:layout_marginLeft="@dimen/tw__ad_title_margin_left"
-            android:focusable="false"
-            android:textColor="@color/tw__ad_light_text_primary_color"
-            android:textSize="@dimen/tw__ad_text_size_large"
-            android:textStyle="bold"
-            tools:text="MoPub Native Ad"/>
-
-        <TextView
-            android:id="@+id/native_ad_text"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_below="@id/native_ad_title"
-            android:layout_alignLeft="@id/native_ad_title"
-            android:textColor="@color/tw__ad_light_text_primary_color"
-            android:textSize="@dimen/tw__ad_text_size_medium"
-            tools:text="Welcome to Native MoPub Ads. Native ads blend seamlessly into your
-            content."/>
-    </RelativeLayout>
-
-    <Button
-        android:id="@+id/native_ad_cta"
-        android:textAllCaps="false"
-        android:stateListAnimator="@null"
-        tools:text="Buy now"
-        tools:ignore="UnusedAttribute"
-        style="@style/tw__ad_cta_button"/>
-
-    <RelativeLayout
-        android:id="@+id/native_ad_privacy"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_marginLeft="@dimen/tw__ad_privacy_margin_left">
-
-        <ImageView
-            android:id="@+id/native_ad_privacy_info_icon_image"
-            android:layout_width="@dimen/tw__ad_privacy_icon_size"
-            android:layout_height="@dimen/tw__ad_privacy_icon_size"
-            android:background="@null"
-            android:padding="@dimen/tw__ad_privacy_icon_padding"
-            android:contentDescription="@string/tw__privacy_icon_content_desc"/>
-
-        <TextView
-            android:id="@+id/native_ad_privacy_text"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content"
-            android:layout_centerInParent="true"
-            android:layout_toEndOf="@id/native_ad_privacy_info_icon_image"
-            android:layout_marginLeft="@dimen/tw__ad_privacy_text_margin_left"
-            android:text="@string/tw__sponsored"
-            android:textSize="@dimen/tw__ad_text_size_small"/>
-    </RelativeLayout>
-</LinearLayout>
diff --git a/twitter-mopub/src/main/res/values-ar/strings.xml b/twitter-mopub/src/main/res/values-ar/strings.xml
deleted file mode 100644
index f9c84e84..00000000
--- a/twitter-mopub/src/main/res/values-ar/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">أيقونة الخصوصيّة</string>
-    <string name="tw__sponsored">هذا إعلان مدفوع</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-bg/strings.xml b/twitter-mopub/src/main/res/values-bg/strings.xml
deleted file mode 100644
index 5188eb6b..00000000
--- a/twitter-mopub/src/main/res/values-bg/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Икона за поверителност</string>
-    <string name="tw__sponsored">Това е платена реклама</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-bn/strings.xml b/twitter-mopub/src/main/res/values-bn/strings.xml
deleted file mode 100644
index 53358cf1..00000000
--- a/twitter-mopub/src/main/res/values-bn/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">গোপনীয়তা আইকন</string>
-    <string name="tw__sponsored">এটি একটি প্রযোজিত বিজ্ঞাপন</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ca/strings.xml b/twitter-mopub/src/main/res/values-ca/strings.xml
deleted file mode 100644
index a7306563..00000000
--- a/twitter-mopub/src/main/res/values-ca/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Icona de privacitat</string>
-    <string name="tw__sponsored">Aquest anunci està patrocinat</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-cs/strings.xml b/twitter-mopub/src/main/res/values-cs/strings.xml
deleted file mode 100644
index 61b24865..00000000
--- a/twitter-mopub/src/main/res/values-cs/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ikona Soukromí</string>
-    <string name="tw__sponsored">Toto je sponzorovaná reklama.</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-da/strings.xml b/twitter-mopub/src/main/res/values-da/strings.xml
deleted file mode 100644
index 66e117c4..00000000
--- a/twitter-mopub/src/main/res/values-da/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Privatlivs-ikon</string>
-    <string name="tw__sponsored">Dette er en sponsoreret annonce</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-de/strings.xml b/twitter-mopub/src/main/res/values-de/strings.xml
deleted file mode 100644
index 21b1602b..00000000
--- a/twitter-mopub/src/main/res/values-de/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Datenschutzsymbol</string>
-    <string name="tw__sponsored">Dies ist eine gesponserte Anzeige</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-el/strings.xml b/twitter-mopub/src/main/res/values-el/strings.xml
deleted file mode 100644
index ed03bfe7..00000000
--- a/twitter-mopub/src/main/res/values-el/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Εικονίδιο απορρήτου</string>
-    <string name="tw__sponsored">Αυτή είναι μια χορηγούμενη διαφήμιση</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-en-rGB/strings.xml b/twitter-mopub/src/main/res/values-en-rGB/strings.xml
deleted file mode 100644
index b97a24fd..00000000
--- a/twitter-mopub/src/main/res/values-en-rGB/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Privacy Icon</string>
-    <string name="tw__sponsored">This is a sponsored ad</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-en-rSS/strings.xml b/twitter-mopub/src/main/res/values-en-rSS/strings.xml
deleted file mode 100644
index 996c7c73..00000000
--- a/twitter-mopub/src/main/res/values-en-rSS/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">[[153332]] Privacy Icon</string>
-    <string name="tw__sponsored">[[153331]] This is a sponsored ad</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-es/strings.xml b/twitter-mopub/src/main/res/values-es/strings.xml
deleted file mode 100644
index c7b534e6..00000000
--- a/twitter-mopub/src/main/res/values-es/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ícono de privacidad</string>
-    <string name="tw__sponsored">Anuncio patrocinado</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-fa/strings.xml b/twitter-mopub/src/main/res/values-fa/strings.xml
deleted file mode 100644
index 615acea7..00000000
--- a/twitter-mopub/src/main/res/values-fa/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">نماد حریم خصوصی</string>
-    <string name="tw__sponsored">این تبلیغ دارای پشتیبان مالی است</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-fi/strings.xml b/twitter-mopub/src/main/res/values-fi/strings.xml
deleted file mode 100644
index 686c3fa4..00000000
--- a/twitter-mopub/src/main/res/values-fi/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Yksityisyyskuvake</string>
-    <string name="tw__sponsored">Tämä on sponsoroitu mainos</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-fr/strings.xml b/twitter-mopub/src/main/res/values-fr/strings.xml
deleted file mode 100644
index b59044c2..00000000
--- a/twitter-mopub/src/main/res/values-fr/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Icône  de Confidentialité</string>
-    <string name="tw__sponsored">Ceci est une publicité sponsorisée</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-gu/strings.xml b/twitter-mopub/src/main/res/values-gu/strings.xml
deleted file mode 100644
index 16c39ecb..00000000
--- a/twitter-mopub/src/main/res/values-gu/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">ગોપનીયતા ચિહ્ન</string>
-    <string name="tw__sponsored">આ સ્પોન્સર્ડ જાહેરાત છે</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-hi/strings.xml b/twitter-mopub/src/main/res/values-hi/strings.xml
deleted file mode 100644
index 5c930204..00000000
--- a/twitter-mopub/src/main/res/values-hi/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">गोपनीयता आइकन</string>
-    <string name="tw__sponsored">यह एक प्रायोजित विज्ञापन है</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-hr/strings.xml b/twitter-mopub/src/main/res/values-hr/strings.xml
deleted file mode 100644
index bf7c5544..00000000
--- a/twitter-mopub/src/main/res/values-hr/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ikona zaštite privatnosti</string>
-    <string name="tw__sponsored">Ovo je plaćeni oglas</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-hu/strings.xml b/twitter-mopub/src/main/res/values-hu/strings.xml
deleted file mode 100644
index 9050e6f9..00000000
--- a/twitter-mopub/src/main/res/values-hu/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Adatvédelmi ikon</string>
-    <string name="tw__sponsored">A hirdetés szponzorált</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-in/strings.xml b/twitter-mopub/src/main/res/values-in/strings.xml
deleted file mode 100644
index 35f07e92..00000000
--- a/twitter-mopub/src/main/res/values-in/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ikon Privasi</string>
-    <string name="tw__sponsored">Ini adalah iklan bersponsor</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-it/strings.xml b/twitter-mopub/src/main/res/values-it/strings.xml
deleted file mode 100644
index d7b4e7c6..00000000
--- a/twitter-mopub/src/main/res/values-it/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Icona della privacy</string>
-    <string name="tw__sponsored">Questo è un annuncio sponsorizzato</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-iw/strings.xml b/twitter-mopub/src/main/res/values-iw/strings.xml
deleted file mode 100644
index 33fbbd43..00000000
--- a/twitter-mopub/src/main/res/values-iw/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">סמל פרטיות</string>
-    <string name="tw__sponsored">זוהי מודעה ממומנת</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ja/strings.xml b/twitter-mopub/src/main/res/values-ja/strings.xml
deleted file mode 100644
index 20af95b0..00000000
--- a/twitter-mopub/src/main/res/values-ja/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">プライバシーアイコン</string>
-    <string name="tw__sponsored">スポンサー広告</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-kn/strings.xml b/twitter-mopub/src/main/res/values-kn/strings.xml
deleted file mode 100644
index 3c6c1602..00000000
--- a/twitter-mopub/src/main/res/values-kn/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">ಗೌಪ್ಯತೆ ಐಕಾನ್</string>
-    <string name="tw__sponsored">ಇಉ ಒಂದು ಪ್ರಾಯೋಜಿತ ಜಾಹೀರಾತು</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ko/strings.xml b/twitter-mopub/src/main/res/values-ko/strings.xml
deleted file mode 100644
index e5f528bc..00000000
--- a/twitter-mopub/src/main/res/values-ko/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">개인정보 공개 설정 아이콘</string>
-    <string name="tw__sponsored">스폰서 광고입니다</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-mr/strings.xml b/twitter-mopub/src/main/res/values-mr/strings.xml
deleted file mode 100644
index a1bfaf05..00000000
--- a/twitter-mopub/src/main/res/values-mr/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">गोपनीयता चिन्ह</string>
-    <string name="tw__sponsored">ही प्रायोजित जाहिरात आहे</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ms/strings.xml b/twitter-mopub/src/main/res/values-ms/strings.xml
deleted file mode 100644
index dafe96c4..00000000
--- a/twitter-mopub/src/main/res/values-ms/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ikon Privasi</string>
-    <string name="tw__sponsored">Ini ialah iklan yang ditaja</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-nb/strings.xml b/twitter-mopub/src/main/res/values-nb/strings.xml
deleted file mode 100644
index b7d236b9..00000000
--- a/twitter-mopub/src/main/res/values-nb/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Personvern-ikon</string>
-    <string name="tw__sponsored">Dette er en sponset reklame</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-nl/strings.xml b/twitter-mopub/src/main/res/values-nl/strings.xml
deleted file mode 100644
index 8e13a3b3..00000000
--- a/twitter-mopub/src/main/res/values-nl/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Privacy-pictogram</string>
-    <string name="tw__sponsored">Dit is een gesponsorde advertentie</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-pl/strings.xml b/twitter-mopub/src/main/res/values-pl/strings.xml
deleted file mode 100644
index e50e4421..00000000
--- a/twitter-mopub/src/main/res/values-pl/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ikona prywatności</string>
-    <string name="tw__sponsored">To jest reklama sponsorowana</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-pt/strings.xml b/twitter-mopub/src/main/res/values-pt/strings.xml
deleted file mode 100644
index 1b43f4fd..00000000
--- a/twitter-mopub/src/main/res/values-pt/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ícone de Privacidade</string>
-    <string name="tw__sponsored">Este anúncio é patrocinado</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ro/strings.xml b/twitter-mopub/src/main/res/values-ro/strings.xml
deleted file mode 100644
index fc2439fe..00000000
--- a/twitter-mopub/src/main/res/values-ro/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Pictograma Confidențialitate</string>
-    <string name="tw__sponsored">Aceasta este o reclamă sponsorizată</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ru/strings.xml b/twitter-mopub/src/main/res/values-ru/strings.xml
deleted file mode 100644
index dbeae555..00000000
--- a/twitter-mopub/src/main/res/values-ru/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Значок конфиденциальности</string>
-    <string name="tw__sponsored">Это рекламное объявление</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-sk/strings.xml b/twitter-mopub/src/main/res/values-sk/strings.xml
deleted file mode 100644
index 58a86276..00000000
--- a/twitter-mopub/src/main/res/values-sk/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Ikona súkromia</string>
-    <string name="tw__sponsored">Toto je sponzorovaná reklama</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-sr/strings.xml b/twitter-mopub/src/main/res/values-sr/strings.xml
deleted file mode 100644
index 645ece4c..00000000
--- a/twitter-mopub/src/main/res/values-sr/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Иконица приватности</string>
-    <string name="tw__sponsored">Ово је спонзорисани оглас</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-sv/strings.xml b/twitter-mopub/src/main/res/values-sv/strings.xml
deleted file mode 100644
index 091788aa..00000000
--- a/twitter-mopub/src/main/res/values-sv/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Integritet Ikon</string>
-    <string name="tw__sponsored">Detta är en sponsrad annons</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ta/strings.xml b/twitter-mopub/src/main/res/values-ta/strings.xml
deleted file mode 100644
index efb0ee07..00000000
--- a/twitter-mopub/src/main/res/values-ta/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">தனியுரிமைப் படவுரு</string>
-    <string name="tw__sponsored">இது ஸ்பான்சர் செய்யப்பட்ட விளம்பரம்</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-th/strings.xml b/twitter-mopub/src/main/res/values-th/strings.xml
deleted file mode 100644
index 8db7312b..00000000
--- a/twitter-mopub/src/main/res/values-th/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">ไอคอนความเป็นส่วนตัว</string>
-    <string name="tw__sponsored">นี่คือโฆษณาที่ได้รับการสนับสนุน</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-tl/strings.xml b/twitter-mopub/src/main/res/values-tl/strings.xml
deleted file mode 100644
index f1df3bb5..00000000
--- a/twitter-mopub/src/main/res/values-tl/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Icon ng Pagkapribado</string>
-    <string name="tw__sponsored">Ito ay isang sponsored ad</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-tr/strings.xml b/twitter-mopub/src/main/res/values-tr/strings.xml
deleted file mode 100644
index 8baf1f6b..00000000
--- a/twitter-mopub/src/main/res/values-tr/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Gizlilik Simgesi</string>
-    <string name="tw__sponsored">Bu sponsorlu bir reklamdır</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-uk/strings.xml b/twitter-mopub/src/main/res/values-uk/strings.xml
deleted file mode 100644
index 31f83f64..00000000
--- a/twitter-mopub/src/main/res/values-uk/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Значок конфіденційності</string>
-    <string name="tw__sponsored">Це рекламне оголошення</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-ur/strings.xml b/twitter-mopub/src/main/res/values-ur/strings.xml
deleted file mode 100644
index bafd7eee..00000000
--- a/twitter-mopub/src/main/res/values-ur/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">پرائیویسی آئیکن</string>
-    <string name="tw__sponsored">یہ اسپانسرشدہ اشتہار ہے</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-vi/strings.xml b/twitter-mopub/src/main/res/values-vi/strings.xml
deleted file mode 100644
index 2d07ac1e..00000000
--- a/twitter-mopub/src/main/res/values-vi/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">Biểu tượng Quyền riêng tư</string>
-    <string name="tw__sponsored">Đây là một quảng cáo có tài trợ</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-zh-rCN/strings.xml b/twitter-mopub/src/main/res/values-zh-rCN/strings.xml
deleted file mode 100644
index 96d9a3ad..00000000
--- a/twitter-mopub/src/main/res/values-zh-rCN/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">隐私图标</string>
-    <string name="tw__sponsored">这是一则赞助广告</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values-zh-rTW/strings.xml b/twitter-mopub/src/main/res/values-zh-rTW/strings.xml
deleted file mode 100644
index 4d1fe9af..00000000
--- a/twitter-mopub/src/main/res/values-zh-rTW/strings.xml
+++ /dev/null
@@ -1,23 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
-    <string name="tw__privacy_icon_content_desc">隱私權圖示</string>
-    <string name="tw__sponsored">這是贊助廣告</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values/attrs.xml b/twitter-mopub/src/main/res/values/attrs.xml
deleted file mode 100644
index c0bc763d..00000000
--- a/twitter-mopub/src/main/res/values/attrs.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <declare-styleable name="tw__native_ad">
-        <attr name="tw__ad_container_bg_color" format="color"/>
-        <attr name="tw__ad_card_bg_color" format="color"/>
-        <attr name="tw__ad_text_primary_color" format="color"/>
-        <attr name="tw__ad_cta_button_color" format="color"/>
-    </declare-styleable>
-</resources>
diff --git a/twitter-mopub/src/main/res/values/colors.xml b/twitter-mopub/src/main/res/values/colors.xml
deleted file mode 100644
index a59399cc..00000000
--- a/twitter-mopub/src/main/res/values/colors.xml
+++ /dev/null
@@ -1,30 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <color name="tw__ad_light_container_bg_color">#F5F8FA</color>
-    <color name="tw__ad_light_card_bg_color">@android:color/white</color>
-    <color name="tw__ad_light_card_border_color">#E1E8ED</color>
-    <color name="tw__ad_light_text_primary_color">#292F33</color>
-
-    <color name="tw__ad_dark_container_bg_color">#000000</color>
-    <color name="tw__ad_dark_card_bg_color">#292F33</color>
-    <color name="tw__ad_dark_card_border_color">#8899A6</color>
-    <color name="tw__ad_dark_text_primary_color">#F5F8FA</color>
-
-    <color name="tw__ad_cta_default">#1B95E0</color>
-</resources>
diff --git a/twitter-mopub/src/main/res/values/dimens.xml b/twitter-mopub/src/main/res/values/dimens.xml
deleted file mode 100644
index 78dd8764..00000000
--- a/twitter-mopub/src/main/res/values/dimens.xml
+++ /dev/null
@@ -1,41 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <!-- Root layout -->
-    <dimen name="tw__ad_layout_padding">14dp</dimen>
-    <dimen name="tw__ad_layout_padding_bottom">0dp</dimen>
-
-    <!-- Ad space: image, icon and text -->
-    <dimen name="tw__ad_view_radius">5dp</dimen>
-    <dimen name="tw__ad_space_padding">12dp</dimen>
-    <dimen name="tw__ad_icon_margin_left">2dp</dimen>
-    <dimen name="tw__ad_icon_margin_right">2dp</dimen>
-    <dimen name="tw__ad_icon_size">40dp</dimen>
-    <dimen name="tw__ad_title_margin_left">8dp</dimen>
-
-    <!-- Privacy -->
-    <dimen name="tw__ad_privacy_margin_left">-10dp</dimen>
-    <dimen name="tw__ad_privacy_icon_size">40dp</dimen>
-    <dimen name="tw__ad_privacy_icon_padding">10dp</dimen>
-    <dimen name="tw__ad_privacy_text_margin_left">-5dp</dimen>
-
-    <!--density-independent(micro 10sp, small 12sp, medium 14sp, large 16sp)-->
-    <dimen name="tw__ad_text_size_large">16sp</dimen>
-    <dimen name="tw__ad_text_size_medium">14sp</dimen>
-    <dimen name="tw__ad_text_size_small">12sp</dimen>
-</resources>
\ No newline at end of file
diff --git a/twitter-mopub/src/main/res/values/public.xml b/twitter-mopub/src/main/res/values/public.xml
deleted file mode 100644
index 67e3b769..00000000
--- a/twitter-mopub/src/main/res/values/public.xml
+++ /dev/null
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <!--suppress UnusedResources -->
-    <public type="style" name="tw__ad_LightStyle"/>
-    <!--suppress UnusedResources -->
-    <public type="style" name="tw__ad_DarkStyle"/>
-</resources>
\ No newline at end of file
diff --git a/twitter-mopub/src/main/res/values/strings.xml b/twitter-mopub/src/main/res/values/strings.xml
deleted file mode 100644
index 9d93e13f..00000000
--- a/twitter-mopub/src/main/res/values/strings.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-  <string name="tw__sponsored">This is a sponsored ad</string>
-  <string name="tw__privacy_icon_content_desc">Privacy Icon</string>
-</resources>
diff --git a/twitter-mopub/src/main/res/values/styles.xml b/twitter-mopub/src/main/res/values/styles.xml
deleted file mode 100644
index b8cf720d..00000000
--- a/twitter-mopub/src/main/res/values/styles.xml
+++ /dev/null
@@ -1,35 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources>
-    <style name="tw_ad_BaseStyle">
-        <item name="tw__ad_cta_button_color">@color/tw__ad_cta_default</item>
-    </style>
-
-    <style name="tw__ad_LightStyle" parent="tw_ad_BaseStyle">
-        <item name="tw__ad_container_bg_color">@color/tw__ad_light_container_bg_color</item>
-        <item name="tw__ad_card_bg_color">@color/tw__ad_light_card_bg_color</item>
-        <item name="tw__ad_text_primary_color">@color/tw__ad_light_text_primary_color</item>
-    </style>
-
-    <style name="tw__ad_DarkStyle" parent="tw_ad_BaseStyle">
-        <item name="tw__ad_container_bg_color">@color/tw__ad_dark_container_bg_color</item>
-        <item name="tw__ad_card_bg_color">@color/tw__ad_dark_card_bg_color</item>
-        <item name="tw__ad_text_primary_color">@color/tw__ad_dark_text_primary_color</item>
-    </style>
-</resources>
diff --git a/twitter-mopub/src/main/res/values/tw__native_ad_styles.xml b/twitter-mopub/src/main/res/values/tw__native_ad_styles.xml
deleted file mode 100644
index 6bbab88f..00000000
--- a/twitter-mopub/src/main/res/values/tw__native_ad_styles.xml
+++ /dev/null
@@ -1,35 +0,0 @@
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<resources xmlns:android="http://schemas.android.com/apk/res/android">
-    <style name="tw__ad_container">
-        <item name="android:layout_width">match_parent</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:orientation">vertical</item>
-        <item name="android:paddingTop">@dimen/tw__ad_layout_padding</item>
-        <item name="android:paddingLeft">@dimen/tw__ad_layout_padding</item>
-        <item name="android:paddingRight">@dimen/tw__ad_layout_padding</item>
-        <item name="android:paddingBottom">@dimen/tw__ad_layout_padding_bottom</item>
-    </style>
-
-    <style name="tw__ad_cta_button">
-        <item name="android:layout_width">fill_parent</item>
-        <item name="android:layout_height">wrap_content</item>
-        <item name="android:textSize">@dimen/tw__ad_text_size_medium</item>
-        <item name="android:gravity">center</item>
-    </style>
-</resources>
\ No newline at end of file
diff --git a/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/ColorUtilsTest.java b/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/ColorUtilsTest.java
deleted file mode 100644
index 0f84aae3..00000000
--- a/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/ColorUtilsTest.java
+++ /dev/null
@@ -1,108 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub;
-
-import android.graphics.Color;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
-
-@RunWith(RobolectricTestRunner.class)
-public class ColorUtilsTest {
-
-    @Test
-    public void testIsLightColor_black() {
-        assertFalse(ColorUtils.isLightColor(Color.BLACK));
-    }
-
-    @Test
-    public void testIsLightColor_white() {
-        assertTrue(ColorUtils.isLightColor(Color.WHITE));
-    }
-
-    @Test
-    public void testDefaultCtaButtonIsDarkColor() {
-        assertFalse(ColorUtils.isLightColor(R.color.tw__ad_cta_default));
-    }
-
-    @Test
-    public void testCtaTextColorIsLightForDarkBgColor() {
-        assertEquals(Color.WHITE, ColorUtils.calculateCtaTextColor(R.color.tw__ad_cta_default));
-        assertEquals(Color.WHITE, ColorUtils.calculateCtaTextColor(Color.BLACK));
-        assertEquals(Color.WHITE, ColorUtils.calculateCtaTextColor(Color.DKGRAY));
-    }
-
-    @Test
-    public void testCtaTextColorIsDarkForLightBgColor() {
-        assertTrue(Color.WHITE != ColorUtils.calculateCtaTextColor(Color.WHITE));
-        assertTrue(Color.WHITE != ColorUtils.calculateCtaTextColor(Color.LTGRAY));
-    }
-
-    @Test
-    public void testCTAOnTapColorIsLighterForDarkBgColor() {
-        final int darkColor = Color.BLACK;
-        final int originalRed = Color.red(darkColor);
-        final int originalGreen = Color.green(darkColor);
-        final int originalBlue = Color.blue(darkColor);
-
-        final int lighterColor = ColorUtils.calculateCtaOnTapColor(darkColor);
-        final int lighterRed = Color.red(lighterColor);
-        final int lighterGreen = Color.green(lighterColor);
-        final int lighterBlue = Color.blue(lighterColor);
-
-        assertTrue(lighterRed > originalRed
-                && lighterGreen > originalGreen
-                && lighterBlue > originalBlue);
-    }
-
-    @Test
-    public void testCTAOnTapColorIsDarkerForLightBgColor() {
-        final int lightColor = Color.WHITE;
-        final int originalRed = Color.red(lightColor);
-        final int originalGreen = Color.green(lightColor);
-        final int originalBlue = Color.blue(lightColor);
-
-        final int darkerColor = ColorUtils.calculateCtaOnTapColor(lightColor);
-        final int darkerRed = Color.red(darkerColor);
-        final int darkerGreen = Color.green(darkerColor);
-        final int darkerBlue = Color.blue(darkerColor);
-
-        assertTrue(originalRed > darkerRed
-                && originalGreen > darkerGreen
-                && originalBlue > darkerBlue);
-    }
-
-    @Test
-    public void testContrastColorForDarkColor() {
-        final int darkColor = Color.BLACK;
-        final int contrastingLightColor = ColorUtils.calculateContrastingColor(darkColor);
-        assertTrue(ColorUtils.isLightColor(contrastingLightColor));
-    }
-
-    @Test
-    public void testContrastColorForLightColor() {
-        final int lightColor = Color.WHITE;
-        final int contrastingDarkColor = ColorUtils.calculateContrastingColor(lightColor);
-        assertFalse(ColorUtils.isLightColor(contrastingDarkColor));
-    }
-}
diff --git a/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdRendererTest.java b/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdRendererTest.java
deleted file mode 100644
index b8b087ea..00000000
--- a/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdRendererTest.java
+++ /dev/null
@@ -1,144 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub;
-
-import android.content.Context;
-import android.graphics.Bitmap;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.ImageView;
-import android.widget.TextView;
-
-import com.mopub.nativeads.BaseNativeAd;
-import com.mopub.nativeads.StaticNativeAd;
-import com.mopub.network.MaxWidthImageLoader;
-import com.mopub.network.Networking;
-import com.mopub.volley.toolbox.ImageLoader;
-import com.twitter.sdk.android.mopub.internal.RoundedImageView;
-
-import org.junit.Before;
-import org.junit.Rule;
-import org.junit.Test;
-import org.junit.rules.ExpectedException;
-import org.junit.runner.RunWith;
-import org.mockito.Mock;
-import org.mockito.MockitoAnnotations;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertTrue;
-import static org.mockito.Matchers.any;
-import static org.mockito.Matchers.anyString;
-import static org.mockito.Mockito.doAnswer;
-import static org.mockito.Mockito.doReturn;
-import static org.mockito.Mockito.mock;
-import static org.mockito.Mockito.verify;
-import static org.mockito.Mockito.when;
-
-@RunWith(RobolectricTestRunner.class)
-public class TwitterStaticNativeAdRendererTest {
-    private static final String TEST_TITLE = "title";
-    private static final String TEST_TEXT = "text";
-    private static final String TEST_CTA = "cta";
-    private static final String TEST_URL = "https://twitter.com";
-
-    private TwitterStaticNativeAdRenderer twitterStaticNativeAdRenderer;
-    private StaticNativeAd staticNativeAd;
-    private TwitterStaticNativeAd twitterStaticNativeAd;
-    @Mock
-    private ViewGroup viewGroup;
-    @Mock
-    private MaxWidthImageLoader mockImageLoader;
-    @Mock
-    private ImageLoader.ImageContainer mockImageContainer;
-    @Mock
-    private Bitmap mockBitmap;
-    @Rule
-    public ExpectedException thrown = ExpectedException.none();
-
-    @Before
-    public void setUp() throws Exception {
-        MockitoAnnotations.initMocks(this);
-
-        Networking.setImageLoaderForTesting(mockImageLoader);
-        doReturn(mockBitmap).when(mockImageContainer).getBitmap();
-
-        doAnswer(invocation -> {
-            final Object[] args = invocation.getArguments();
-            ((ImageLoader.ImageListener) args[1]).onResponse(mockImageContainer, true);
-            return null;
-        }).when(mockImageLoader).get(anyString(), any(ImageLoader.ImageListener.class));
-
-        twitterStaticNativeAdRenderer = new TwitterStaticNativeAdRenderer();
-
-        twitterStaticNativeAd = new TwitterStaticNativeAd(RuntimeEnvironment.application);
-        twitterStaticNativeAd.adTextView = mock(TextView.class);
-        twitterStaticNativeAd.adTitleView = mock(TextView.class);
-        twitterStaticNativeAd.callToActionView = mock(TextView.class);
-        twitterStaticNativeAd.mainImageView = mock(RoundedImageView.class);
-        twitterStaticNativeAd.adIconView = mock(ImageView.class);
-        twitterStaticNativeAd.privacyInfoView = mock(ImageView.class);
-
-        staticNativeAd = new StaticNativeAd() { };
-        staticNativeAd.setTitle(TEST_TITLE);
-        staticNativeAd.setText(TEST_TEXT);
-        staticNativeAd.setCallToAction(TEST_CTA);
-        staticNativeAd.setClickDestinationUrl(TEST_URL);
-        staticNativeAd.setMainImageUrl(TEST_URL);
-        staticNativeAd.setIconImageUrl(TEST_URL);
-        staticNativeAd.setPrivacyInformationIconClickThroughUrl(TEST_URL);
-        staticNativeAd.setPrivacyInformationIconImageUrl(TEST_URL);
-    }
-
-    @Test(expected = NullPointerException.class)
-    public void testCreateAdView_withNullContext_shouldThrowNPE() {
-        twitterStaticNativeAdRenderer.createAdView(null, viewGroup);
-    }
-
-    @Test(expected = NullPointerException.class)
-    public void testRenderAdView_withNullView_shouldThrowNPE() {
-        twitterStaticNativeAdRenderer.renderAdView(null, staticNativeAd);
-    }
-
-    @Test(expected = NullPointerException.class)
-    public void testRenderAdView_withNullNativeAd_shouldThrowNPE() {
-        twitterStaticNativeAdRenderer.renderAdView(twitterStaticNativeAd, null);
-    }
-
-    @Test
-    public void testRenderAdView_shouldReturnPopulatedView() {
-        when(twitterStaticNativeAd.privacyInfoView.getContext()).thenReturn(mock(Context.class));
-        twitterStaticNativeAdRenderer.renderAdView(twitterStaticNativeAd, staticNativeAd);
-
-        verify(twitterStaticNativeAd.adTitleView).setText(TEST_TITLE);
-        verify(twitterStaticNativeAd.adTextView).setText(TEST_TEXT);
-        verify(twitterStaticNativeAd.callToActionView).setText(TEST_CTA);
-        verify(twitterStaticNativeAd.mainImageView).setImageBitmap(mockBitmap);
-        verify(twitterStaticNativeAd.adIconView).setImageBitmap(mockBitmap);
-        verify(twitterStaticNativeAd.privacyInfoView).setImageBitmap(mockBitmap);
-        verify(twitterStaticNativeAd.privacyInfoView)
-                .setOnClickListener(any(View.OnClickListener.class));
-    }
-
-    @Test
-    public void testSupports_withCorrectInstanceOfBaseNativeAd_shouldReturnTrue() throws Exception {
-        assertTrue(twitterStaticNativeAdRenderer.supports(new StaticNativeAd() {}));
-        assertFalse(twitterStaticNativeAdRenderer.supports(mock(BaseNativeAd.class)));
-    }
-}
diff --git a/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdTest.java b/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdTest.java
deleted file mode 100644
index 9b822acd..00000000
--- a/twitter-mopub/src/test/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAdTest.java
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-package com.twitter.sdk.android.mopub;
-
-import android.test.AndroidTestCase;
-
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.robolectric.RobolectricTestRunner;
-import org.robolectric.RuntimeEnvironment;
-
-@RunWith(RobolectricTestRunner.class)
-public class TwitterStaticNativeAdTest extends AndroidTestCase {
-
-    @Test
-    public void testStyleAttrsForDefaultTheme() {
-        final TwitterStaticNativeAd nativeAd =
-                new TwitterStaticNativeAd(RuntimeEnvironment.application);
-        final int expectedContainerBgColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_light_container_bg_color);
-        final int expectedCardBgColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_light_card_bg_color);
-        final int expectedPrimaryTextColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_light_text_primary_color);
-        final int ctaBackgroundColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_cta_default);
-        final int cardBorderColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_light_card_border_color);
-
-        assertEquals(expectedContainerBgColor, nativeAd.containerBackgroundColor);
-        assertEquals(expectedCardBgColor, nativeAd.cardBackgroundColor);
-        assertEquals(expectedPrimaryTextColor, nativeAd.primaryTextColor);
-        assertEquals(ctaBackgroundColor, nativeAd.ctaBackgroundColor);
-        assertEquals(cardBorderColor, nativeAd.cardBorderColor);
-    }
-
-    @Test
-    public void testStyleAttrsForDarkTheme() {
-        final TwitterStaticNativeAd nativeAd =
-                new TwitterStaticNativeAd(RuntimeEnvironment.application, null,
-                        R.style.tw__ad_DarkStyle);
-
-        final int expectedContainerBgColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_dark_container_bg_color);
-        final int expectedCardBgColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_dark_card_bg_color);
-        final int expectedPrimaryTextColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_dark_text_primary_color);
-        final int ctaBackgroundColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_cta_default);
-        final int cardBorderColor =
-                nativeAd.getResources().getColor(R.color.tw__ad_dark_card_border_color);
-
-        assertEquals(expectedContainerBgColor, nativeAd.containerBackgroundColor);
-        assertEquals(expectedCardBgColor, nativeAd.cardBackgroundColor);
-        assertEquals(expectedPrimaryTextColor, nativeAd.primaryTextColor);
-        assertEquals(ctaBackgroundColor, nativeAd.ctaBackgroundColor);
-        assertEquals(cardBorderColor, nativeAd.cardBorderColor);
-    }
-}
diff --git a/twitter-mopub/src/test/resources/robolectric.properties b/twitter-mopub/src/test/resources/robolectric.properties
deleted file mode 100644
index 1cb48e48..00000000
--- a/twitter-mopub/src/test/resources/robolectric.properties
+++ /dev/null
@@ -1,2 +0,0 @@
-sdk = 21
-constants = com.twitter.sdk.android.mopub.BuildConfig
\ No newline at end of file
diff --git a/twitter/build.gradle b/twitter/build.gradle
deleted file mode 100644
index 237dbf3b..00000000
--- a/twitter/build.gradle
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-apply plugin: 'com.android.library'
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        versionCode 1
-        versionName version
-        minSdkVersion rootProject.minSdkVersion
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-        }
-
-        release {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-        }
-    }
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-
-    testOptions {
-        unitTests.returnDefaultValues = true
-    }
-}
-
-ext.projectDependencies = [
-        ':twitter-core' : 'com.twitter.sdk.android:twitter-core:+@aar',
-        ':tweet-ui' : 'com.twitter.sdk.android:tweet-ui:+@aar',
-        ':tweet-composer' : 'com.twitter.sdk.android:tweet-composer:+@aar'
-]
-
-dependencies {
-    compile project(':twitter-core')
-    compile project(':tweet-composer')
-    compile project(':tweet-ui')
-
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
-}
\ No newline at end of file
diff --git a/twitter/gradle.properties b/twitter/gradle.properties
deleted file mode 100644
index 0efd5190..00000000
--- a/twitter/gradle.properties
+++ /dev/null
@@ -1,26 +0,0 @@
-#
-# Copyright (C) 2015 Twitter, Inc.
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#      http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#
-#
-
-# The to be released version. When releasing, drop -SNAPSHOT. After releasing, bump version
-# number and add back -SNAPSHOT
-version=3.3.0-SNAPSHOT
-version_code=1
-
-pom_name=Twitter Android SDK
-pom_group_id=com.twitter.sdk.android
-pom_artifact_id=twitter
-pom_packaging=aar
diff --git a/twitter/internal-build.gradle b/twitter/internal-build.gradle
deleted file mode 100644
index f067aa3a..00000000
--- a/twitter/internal-build.gradle
+++ /dev/null
@@ -1,90 +0,0 @@
-import io.fabric.gradle.weaving.ArtifactSizePlugin
-
-/*
- * Copyright (C) 2015 Twitter, Inc.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- *
- */
-
-apply plugin: 'com.android.library'
-apply from: rootProject.qualityScript
-apply plugin: ArtifactSizePlugin
-
-android {
-    compileSdkVersion rootProject.compileSdkVersion
-    buildToolsVersion rootProject.buildToolsVersion
-
-    defaultConfig {
-        versionCode 1
-        versionName version
-        group pom_group_id
-
-        minSdkVersion rootProject.minSdkVersion
-    }
-
-    lintOptions {
-        warningsAsErrors true
-    }
-
-    buildTypes {
-        debug {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-
-            testCoverageEnabled enableTestCodeCoverage
-        }
-
-        release {
-            buildConfigField "String", "GROUP", "\"${pom_group_id}\""
-            buildConfigField "String", "ARTIFACT_ID", "\"${pom_artifact_id}\""
-            buildConfigField "String", "BUILD_NUMBER", "\"${buildNumber}\""
-        }
-    }
-
-    //Gradle publishes only release by default for multi module projects
-    //This will publish all build variants and we can specifically choose them
-    defaultPublishConfig 'release'
-    publishNonDefault true
-
-    compileOptions {
-        sourceCompatibility rootProject.sourceCompatibilityVersion
-        targetCompatibility rootProject.targetCompatibilityVersion
-    }
-
-    testOptions {
-        unitTests.returnDefaultValues = true
-    }
-}
-
-ext.projectDependencies = [
-        ':sdk:twitter:twitter-core',
-        ':sdk:twitter:tweet-ui',
-        ':sdk:twitter:tweet-composer'
-]
-
-dependencies {
-    projectDependencies.each { path ->
-        api project(path: path)
-    }
-
-    testCompile dependency.mockito
-    testCompile dependency.junit
-    testCompile(dependency.robolectric) {
-        exclude group: 'commons-logging', module: 'commons-logging'
-        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
-    }
-}
-
-apply from: rootProject.deployScript
diff --git a/twitter/lint.xml b/twitter/lint.xml
deleted file mode 100644
index 1e8076c0..00000000
--- a/twitter/lint.xml
+++ /dev/null
@@ -1,21 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<lint>
-    <issue id="InvalidPackage" severity="ignore"/>
-</lint>
\ No newline at end of file
diff --git a/twitter/src/main/AndroidManifest.xml b/twitter/src/main/AndroidManifest.xml
deleted file mode 100644
index 2cb7bbc6..00000000
--- a/twitter/src/main/AndroidManifest.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-  ~ Copyright (C) 2015 Twitter, Inc.
-  ~
-  ~ Licensed under the Apache License, Version 2.0 (the "License");
-  ~ you may not use this file except in compliance with the License.
-  ~ You may obtain a copy of the License at
-  ~
-  ~      http://www.apache.org/licenses/LICENSE-2.0
-  ~
-  ~ Unless required by applicable law or agreed to in writing, software
-  ~ distributed under the License is distributed on an "AS IS" BASIS,
-  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-  ~ See the License for the specific language governing permissions and
-  ~ limitations under the License.
-  ~
-  -->
-
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          package="com.twitter.sdk.android" >
-
-    <application />
-
-</manifest>
