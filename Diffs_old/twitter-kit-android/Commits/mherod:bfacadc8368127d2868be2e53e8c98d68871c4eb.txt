diff --git a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetActivityTest.java b/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetActivityTest.java
index acd10021..cfae14d7 100644
--- a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetActivityTest.java
+++ b/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/TweetActivityTest.java
@@ -24,9 +24,10 @@
 import com.example.app.tweetui.TweetActivity;
 import com.squareup.spoon.Spoon;
 
-import static android.support.test.espresso.Espresso.*;
-import static android.support.test.espresso.action.ViewActions.*;
-import static android.support.test.espresso.matcher.ViewMatchers.*;
+import static android.support.test.espresso.Espresso.onView;
+import static android.support.test.espresso.Espresso.registerIdlingResources;
+import static android.support.test.espresso.action.ViewActions.scrollTo;
+import static android.support.test.espresso.matcher.ViewMatchers.withId;
 
 /**
  * UI/integration tests of Tweet views added to the layout via code (requires network connectivity).
@@ -58,7 +59,7 @@ public void setUp() throws Exception {
         registerIdlingResources(jackRes, jackCompactRes, bikeRes, bikeCompactRes);
     }
 
-    public void testTweetView() throws Exception {
+    public void testTweetView() {
         onView(withId(R.id.jack_regular_tweet)).perform(scrollTo());
         TweetAsserts.assertTweetText(R.id.jack_regular_tweet, EXPECTED_TEXT);
         TweetAsserts.assertTweetTimestamp(R.id.jack_regular_tweet, EXPECTED_TIMESTAMP);
@@ -71,7 +72,7 @@ public void testTweetView() throws Exception {
         Spoon.screenshot(activity, TAG);
     }
 
-    public void testCompactTweetView() throws Exception {
+    public void testCompactTweetView() {
         onView(withId(R.id.jack_compact_tweet)).perform(scrollTo());
         TweetAsserts.assertTweetText(R.id.jack_compact_tweet, EXPECTED_TEXT);
         TweetAsserts.assertTweetTimestamp(R.id.jack_compact_tweet, EXPECTED_TIMESTAMP);
diff --git a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetActivityTest.java b/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetActivityTest.java
index 0b8cb365..12286b50 100644
--- a/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetActivityTest.java
+++ b/samples/app/src/androidTest/java/com/twitter/sdk/android/tweetui/XmlTweetActivityTest.java
@@ -23,9 +23,10 @@
 import com.example.app.tweetui.XmlTweetActivity;
 import com.squareup.spoon.Spoon;
 
-import static android.support.test.espresso.Espresso.*;
-import static android.support.test.espresso.action.ViewActions.*;
-import static android.support.test.espresso.matcher.ViewMatchers.*;
+import static android.support.test.espresso.Espresso.onView;
+import static android.support.test.espresso.Espresso.registerIdlingResources;
+import static android.support.test.espresso.action.ViewActions.scrollTo;
+import static android.support.test.espresso.matcher.ViewMatchers.withId;
 
 /**
  * UI/integration tests of XML Tweet views (requires network connectivity).
@@ -79,7 +80,7 @@ private void findViews() {
                 = activity.findViewById(R.id.retweet_simpsons_compact_tweet);
     }
 
-    public void testTweetView() throws Exception {
+    public void testTweetView() {
         onView(withId(R.id.jack_regular_tweet)).perform(scrollTo());
         TweetAsserts.assertTweetText(R.id.jack_regular_tweet, EXPECTED_TEXT);
         TweetAsserts.assertTweetTimestamp(R.id.jack_regular_tweet, EXPECTED_TIMESTAMP);
@@ -92,7 +93,7 @@ public void testTweetView() throws Exception {
         Spoon.screenshot(activity, TAG);
     }
 
-    public void testCompactTweetView() throws Exception {
+    public void testCompactTweetView() {
         onView(withId(R.id.jack_compact_tweet)).perform(scrollTo());
         TweetAsserts.assertTweetText(R.id.jack_compact_tweet, EXPECTED_TEXT);
         TweetAsserts.assertTweetTimestamp(R.id.jack_compact_tweet, EXPECTED_TIMESTAMP);
diff --git a/samples/app/src/main/java/com/example/app/tweetui/TimelineActivity.java b/samples/app/src/main/java/com/example/app/tweetui/TimelineActivity.java
index baaf5972..a00677eb 100644
--- a/samples/app/src/main/java/com/example/app/tweetui/TimelineActivity.java
+++ b/samples/app/src/main/java/com/example/app/tweetui/TimelineActivity.java
@@ -87,7 +87,7 @@ public void failure(TwitterException exception) {
 
         // set custom scroll listener to enable swipe refresh layout only when at list top
         listView.setOnScrollListener(new AbsListView.OnScrollListener() {
-            boolean enableRefresh = false;
+            boolean enableRefresh;
             @Override
             public void onScrollStateChanged(AbsListView view, int scrollState) {}
             @Override
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/FileUtils.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/FileUtils.java
index eb090140..ee3012a3 100644
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/FileUtils.java
+++ b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/FileUtils.java
@@ -54,7 +54,7 @@ static String getPath(final Context context, final Uri uri) {
 
             // query content resolver for MediaStore id column
             final String selection = "_id=?";
-            final String[] args = new String[] {
+            final String[] args = {
                     parts[1]
             };
             return resolveFilePath(context, contentUri, selection, args);
diff --git a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetComposer.java b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetComposer.java
index 21f93c38..e67ec1fd 100644
--- a/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetComposer.java
+++ b/tweet-composer/src/main/java/com/twitter/sdk/android/tweetcomposer/TweetComposer.java
@@ -190,7 +190,7 @@ Intent createTwitterIntent() {
                 if (builder.length() > 0) {
                     builder.append(' ');
                 }
-                builder.append(url.toString());
+                builder.append(url);
             }
 
             intent.putExtra(Intent.EXTRA_TEXT, builder.toString());
diff --git a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetComposerIntentBuilderTest.java b/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetComposerIntentBuilderTest.java
index bcd93469..32279fb7 100644
--- a/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetComposerIntentBuilderTest.java
+++ b/tweet-composer/src/test/java/com/twitter/sdk/android/tweetcomposer/TweetComposerIntentBuilderTest.java
@@ -98,7 +98,7 @@ public void testBuilder_textAndUrl() throws MalformedURLException {
         final String text = "test";
         final URL url = new URL("http://www.twitter.com");
 
-        final String result = text + " " + url.toString();
+        final String result = text + " " + url;
         final TweetComposer.Builder builder = new TweetComposer.Builder(context)
                 .text(text)
                 .url(url);
diff --git a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/internal/OverlayImageViewTest.java b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/internal/OverlayImageViewTest.java
index 40e5f7b9..29b61e8c 100644
--- a/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/internal/OverlayImageViewTest.java
+++ b/tweet-ui/src/androidTest/java/com/twitter/sdk/android/tweetui/internal/OverlayImageViewTest.java
@@ -30,7 +30,7 @@
 import static org.mockito.Mockito.when;
 
 public class OverlayImageViewTest extends AndroidTestCase {
-    public static final int[] TEST_STATE = new int[]{0, 0};
+    public static final int[] TEST_STATE = {0, 0};
     public static final int TEST_HEIGHT = 2;
     public static final int TEST_WIDTH = 4;
 
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ShareTweetAction.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ShareTweetAction.java
index 1ed24844..49ccf1d8 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ShareTweetAction.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/ShareTweetAction.java
@@ -37,7 +37,6 @@
 
     // For testing only
     ShareTweetAction(Tweet tweet, TweetUi tweetUi, TweetScribeClient tweetScribeClient) {
-        super();
         this.tweet = tweet;
         this.tweetUi = tweetUi;
         this.tweetScribeClient = tweetScribeClient;
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/VideoView.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/VideoView.java
index 0c9f3e9c..3846a780 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/VideoView.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/VideoView.java
@@ -72,8 +72,8 @@
     private int mCurrentState = STATE_IDLE;
     private int mTargetState = STATE_IDLE;
     // All the stuff we need for playing and showing a video
-    private SurfaceHolder mSurfaceHolder = null;
-    private MediaPlayer mMediaPlayer = null;
+    private SurfaceHolder mSurfaceHolder;
+    private MediaPlayer mMediaPlayer;
     private int mAudioSession;
     private int mVideoWidth;
     private int mVideoHeight;
diff --git a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/IntHashMap.java b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/IntHashMap.java
index f574a1ed..82b7795d 100644
--- a/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/IntHashMap.java
+++ b/tweet-ui/src/main/java/com/twitter/sdk/android/tweetui/internal/util/IntHashMap.java
@@ -129,7 +129,6 @@ public IntHashMap(int initialCapacity) {
      *             zero, or if the load factor is nonpositive.
      */
     public IntHashMap(int initialCapacity, float loadFactor) {
-        super();
         if (initialCapacity < 0) {
             throw new IllegalArgumentException("Illegal Capacity: " + initialCapacity);
         }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterAuthToken.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterAuthToken.java
index ce43ec59..628a3bea 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterAuthToken.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/TwitterAuthToken.java
@@ -19,6 +19,7 @@
 
 import android.os.Parcel;
 import android.os.Parcelable;
+
 import com.google.gson.annotations.SerializedName;
 
 /**
@@ -44,7 +45,6 @@ public TwitterAuthToken createFromParcel(Parcel in) {
     public final String secret;
 
     public TwitterAuthToken(String token, String secret) {
-        super();
         this.token = token;
         this.secret = secret;
     }
@@ -57,7 +57,6 @@ public TwitterAuthToken(String token, String secret) {
     }
 
     private TwitterAuthToken(Parcel in) {
-        super();
         this.token = in.readString();
         this.secret = in.readString();
     }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth2Token.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth2Token.java
index eaa631ef..3b4b37ca 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth2Token.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/oauth/OAuth2Token.java
@@ -19,6 +19,7 @@
 
 import android.os.Parcel;
 import android.os.Parcelable;
+
 import com.google.gson.annotations.SerializedName;
 import com.twitter.sdk.android.core.AuthToken;
 
@@ -46,7 +47,6 @@ public OAuth2Token createFromParcel(Parcel in) {
     private final String accessToken;
 
     public OAuth2Token(String tokenType, String accessToken) {
-        super();
         this.tokenType = tokenType;
         this.accessToken = accessToken;
     }
@@ -58,7 +58,6 @@ public OAuth2Token(String tokenType, String accessToken, long createdAt) {
     }
 
     private OAuth2Token(Parcel in) {
-        super();
         tokenType = in.readString();
         accessToken = in.readString();
     }
diff --git a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/scribe/ScribeFilesManager.java b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/scribe/ScribeFilesManager.java
index a8f1b3e0..7b497e6d 100644
--- a/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/scribe/ScribeFilesManager.java
+++ b/twitter-core/src/main/java/com/twitter/sdk/android/core/internal/scribe/ScribeFilesManager.java
@@ -21,7 +21,6 @@
 
 import com.twitter.sdk.android.core.internal.CurrentTimeProvider;
 
-import java.io.IOException;
 import java.util.UUID;
 
 class ScribeFilesManager extends EventsFilesManager<ScribeEvent> {
@@ -32,7 +31,7 @@
     ScribeFilesManager(Context context, EventTransform<ScribeEvent> transform,
                               CurrentTimeProvider currentTimeProvider,
                               QueueFileEventStorage eventsStorage, int defaultMaxFilesToKeep
-    ) throws IOException {
+    ) {
         super(context, transform, currentTimeProvider, eventsStorage, defaultMaxFilesToKeep);
     }
 
@@ -43,7 +42,7 @@ protected String generateUniqueRollOverFileName() {
         return new StringBuilder()
                 .append(FILE_PREFIX)
                 .append(ROLL_OVER_FILE_NAME_SEPARATOR)
-                .append(targetUUIDComponent.toString())
+                .append(targetUUIDComponent)
                 .append(ROLL_OVER_FILE_NAME_SEPARATOR)
                 .append(currentTimeProvider.getCurrentTimeMillis())
                 .append(FILE_EXTENSION)
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/PersistedSessionManagerTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/PersistedSessionManagerTest.java
index 14d7a595..d3786a5c 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/PersistedSessionManagerTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/PersistedSessionManagerTest.java
@@ -18,10 +18,12 @@
 package com.twitter.sdk.android.core;
 
 import android.content.SharedPreferences;
+
 import com.twitter.sdk.android.core.internal.persistence.PreferenceStore;
 import com.twitter.sdk.android.core.internal.persistence.PreferenceStoreImpl;
 import com.twitter.sdk.android.core.internal.persistence.PreferenceStoreStrategy;
 import com.twitter.sdk.android.core.internal.persistence.SerializationStrategy;
+
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
@@ -33,8 +35,15 @@
 import java.util.List;
 import java.util.concurrent.ConcurrentHashMap;
 
-import static org.junit.Assert.*;
-import static org.mockito.Mockito.*;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNotSame;
+import static org.junit.Assert.assertNull;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
+import static org.mockito.Mockito.mock;
+import static org.mockito.Mockito.verify;
+import static org.mockito.Mockito.when;
 
 @RunWith(RobolectricTestRunner.class)
 public class PersistedSessionManagerTest {
@@ -99,7 +108,7 @@ public void testRestoreSession_savedSession() {
     public void testRestoreSession_multipleSavedSessions() {
         // Set up test by creating and serializing some test TwitterSessions.
         final SharedPreferences.Editor editor = preferenceStore.edit();
-        final TwitterSession[] sessions = new TwitterSession[]{
+        final TwitterSession[] sessions = {
                 new TwitterSession(new TwitterAuthToken(TestFixtures.TOKEN, TestFixtures.SECRET),
                         TestFixtures.USER_ID, TestFixtures.SCREEN_NAME),
                 new TwitterSession(new TwitterAuthToken(TestFixtures.TOKEN, TestFixtures.SECRET),
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/network/OAuth1aInterceptorTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/network/OAuth1aInterceptorTest.java
index d72e76e9..54524c85 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/network/OAuth1aInterceptorTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/network/OAuth1aInterceptorTest.java
@@ -32,7 +32,6 @@
 import org.mockito.MockitoAnnotations;
 import org.robolectric.RobolectricTestRunner;
 
-import java.io.IOException;
 import java.util.Map;
 
 import okhttp3.FormBody;
@@ -96,7 +95,7 @@ public void testIntercept() throws Exception {
     }
 
     @Test
-    public void testGetAuthHeaders() throws IOException {
+    public void testGetAuthHeaders() {
         final Request request = new Request.Builder().url(TEST_URL).build();
 
         final String header = interceptor.getAuthorizationHeader(request);
@@ -105,7 +104,7 @@ public void testGetAuthHeaders() throws IOException {
     }
 
     @Test
-    public void testGetPostParameters_bodyWithMultipleParams() throws IOException {
+    public void testGetPostParameters_bodyWithMultipleParams() {
         final FormBody formBody = new FormBody.Builder()
                 .add(POST_KEY, POST_VALUE)
                 .add(POST_KEY_2, POST_VALUE_2)
@@ -124,7 +123,7 @@ public void testGetPostParameters_bodyWithMultipleParams() throws IOException {
     }
 
     @Test
-    public void testGetPostParameters_withZeroParams() throws IOException {
+    public void testGetPostParameters_withZeroParams() {
         final FormBody formBody = new FormBody.Builder().build();
 
         final Request request = new Request.Builder()
@@ -138,7 +137,7 @@ public void testGetPostParameters_withZeroParams() throws IOException {
     }
 
     @Test
-    public void testGetPostParameters_withGetRequest() throws IOException {
+    public void testGetPostParameters_withGetRequest() {
         final Request request = new Request.Builder().url(TEST_URL).build();
 
         final Map<String, String> params = interceptor.getPostParams(request);
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/network/UrlUtilsTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/network/UrlUtilsTest.java
index bc461c1a..5860f07c 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/network/UrlUtilsTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/network/UrlUtilsTest.java
@@ -30,7 +30,7 @@
 @RunWith(RobolectricTestRunner.class)
 public class UrlUtilsTest {
 
-    private static final String[] ORIGINAL_STRINGS = new String[]{
+    private static final String[] ORIGINAL_STRINGS = {
             "Ladies + Gentlemen",
             "An encoded string!",
             "Dogs, Cats & Mice",
@@ -39,7 +39,7 @@
             "-._~"
     };
 
-    private static final String[] PERCENT_ENCODED_STRINGS = new String[]{
+    private static final String[] PERCENT_ENCODED_STRINGS = {
             "Ladies%20%2B%20Gentlemen",
             "An%20encoded%20string%21",
             "Dogs%2C%20Cats%20%26%20Mice",
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aParametersTest.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aParametersTest.java
index 141aa8f6..2dffc03c 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aParametersTest.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/oauth/OAuth1aParametersTest.java
@@ -69,7 +69,8 @@
         }
     }
 
-    private static final TestParameters[] TEST_PARAMETERS = new TestParameters[] {
+    // tokens/secrets (disabled) from https://dev.twitter.com/web/sign-in/implementing
+    private static final TestParameters[] TEST_PARAMETERS = {
             // tokens/secrets (disabled) from https://dev.twitter.com/web/sign-in/implementing
             new TestParameters(
                     "POST",
diff --git a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/scribe/TestEventsFilesManager.java b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/scribe/TestEventsFilesManager.java
index 8a8bc9f4..de81d6af 100644
--- a/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/scribe/TestEventsFilesManager.java
+++ b/twitter-core/src/test/java/com/twitter/sdk/android/core/internal/scribe/TestEventsFilesManager.java
@@ -21,16 +21,14 @@
 
 import com.twitter.sdk.android.core.internal.CurrentTimeProvider;
 
-import java.io.IOException;
-
 class TestEventsFilesManager extends EventsFilesManager<TestEvent> {
 
     private final String rollOverFileName;
 
     TestEventsFilesManager(Context context, EventTransform<TestEvent> transform,
-                                  CurrentTimeProvider currentTimeProvider,
-                                  EventsStorage eventStorage, String rollOverFileName,
-                                  int defaultMaxFilesToKeep) throws IOException {
+                           CurrentTimeProvider currentTimeProvider,
+                           EventsStorage eventStorage, String rollOverFileName,
+                           int defaultMaxFilesToKeep) {
         super(context, transform, currentTimeProvider, eventStorage, defaultMaxFilesToKeep);
 
         this.rollOverFileName = rollOverFileName;
diff --git a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAd.java b/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAd.java
index d4ea6596..0eebbebc 100644
--- a/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAd.java
+++ b/twitter-mopub/src/main/java/com/twitter/sdk/android/mopub/TwitterStaticNativeAd.java
@@ -162,7 +162,7 @@ private void setCallToActionStyling() {
         // Also set the default ad view radius for bottomLeft and bottomRight corners
         final StateListDrawable stateListDrawable = new StateListDrawable();
         final int adViewRadius = (int) getResources().getDimension(R.dimen.tw__ad_view_radius);
-        final float[] ctaViewRadii = new float[]{
+        final float[] ctaViewRadii = {
                 0, 0,
                 0, 0,
                 adViewRadius, adViewRadius,
