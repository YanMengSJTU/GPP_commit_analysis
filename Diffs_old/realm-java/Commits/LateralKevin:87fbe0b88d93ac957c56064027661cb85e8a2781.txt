diff --git a/realm/src/androidTest/java/io/realm/RealmJsonTest.java b/realm/src/androidTest/java/io/realm/RealmJsonTest.java
index 42eb792c2c..de2ce24057 100644
--- a/realm/src/androidTest/java/io/realm/RealmJsonTest.java
+++ b/realm/src/androidTest/java/io/realm/RealmJsonTest.java
@@ -25,7 +25,9 @@
 
 import java.io.IOException;
 import java.io.InputStream;
+import java.util.Calendar;
 import java.util.Date;
+import java.util.GregorianCalendar;
 
 import io.realm.entities.AllTypes;
 import io.realm.entities.AllTypesPrimaryKey;
@@ -121,6 +123,23 @@ public void testCreateObjectFromJson_dateAsString() throws JSONException {
         assertEquals(new Date(1000), obj.getColumnDate());
     }
 
+    public void testCreateObjectFromJson_dateAsStringTimeZone() throws JSONException {
+        JSONObject json = new JSONObject();
+
+        // Oct 03 2015 14:15
+        json.put("columnDate", "/Date(1443854733376+0800)/");
+
+        testRealm.beginTransaction();
+        testRealm.createObjectFromJson(AllTypes.class, json);
+        testRealm.commitTransaction();
+
+        AllTypes obj = testRealm.allObjects(AllTypes.class).first();
+        Calendar cal = GregorianCalendar.getInstance();
+        cal.set(2015,Calendar.OCTOBER, 03, 14, 45, 33);
+        Date convDate = obj.getColumnDate();
+        assertTrue(convDate.getTime()-cal.getTime().getTime()<1000);
+    }
+
     public void testCreateObjectFromJson_childObject() throws JSONException {
         JSONObject allTypesObject = new JSONObject();
         JSONObject dogObject = new JSONObject();
diff --git a/realm/src/main/java/io/realm/internal/android/JsonUtils.java b/realm/src/main/java/io/realm/internal/android/JsonUtils.java
index 2115795202..ca62b7f775 100644
--- a/realm/src/main/java/io/realm/internal/android/JsonUtils.java
+++ b/realm/src/main/java/io/realm/internal/android/JsonUtils.java
@@ -17,18 +17,22 @@
 package io.realm.internal.android;
 
 import android.util.Base64;
+
+import java.util.Calendar;
 import java.util.Date;
+import java.util.GregorianCalendar;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
 public class JsonUtils {
 
-    private static Pattern jsonDate = Pattern.compile("/Date\\((\\d*)\\)/");
+    //private static Pattern jsonDate = Pattern.compile("/Date\\((\\d*)\\)/");
+    private static Pattern jsonDate=Pattern.compile("Date\\((\\d*)([+-]\\d*)?\\)");
 
     /**
      * Converts a Json string to a Java Date object. Currently supports 2 types:
      * - "<long>"
-     * - "/Date(<long>)/"
+     * - "/Date(<long>[+-Zone])/"
      *
      * @param date   String input of date of the the supported types.
      * @return Date object or null if invalid input.
@@ -38,13 +42,14 @@
     public static Date stringToDate(String date) {
         if (date == null || date.length() == 0) return null;
         Matcher matcher = jsonDate.matcher(date);
-        if (matcher.matches()) {
-            return new Date(Long.parseLong(matcher.group(1)));
+        if (matcher.find()) {
+            String dateMatch = matcher.group(1);
+            Date d = new Date(Long.parseLong(dateMatch));
+            return d;
         } else {
             return new Date(Long.parseLong(date));
         }
     }
-
     /**
      * Converts a Json string to byte[]. String must be Base64 encoded.
      *
