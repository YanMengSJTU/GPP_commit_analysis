diff --git a/realm/realm-library/src/main/java/io/realm/Realm.java b/realm/realm-library/src/main/java/io/realm/Realm.java
index 65f8477350..2cbbd09b81 100644
--- a/realm/realm-library/src/main/java/io/realm/Realm.java
+++ b/realm/realm-library/src/main/java/io/realm/Realm.java
@@ -470,7 +470,7 @@ private static void initializeSyncedRealm(Realm realm) {
      * a new {@link RealmObject} is created and a field is not found in the JSON object, that field will be assigned the
      * default value for the field type.
      *
-     * @param clazz type of {@link RealmObject} to create or update. It must have a primary key defined.
+     * @param clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.
      * @param json array with object data.
      * @throws IllegalArgumentException if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.
      * @throws IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding
@@ -478,7 +478,11 @@ private static void initializeSyncedRealm(Realm realm) {
      * @throws RealmException if unable to map JSON.
      * @see #createAllFromJson(Class, org.json.JSONArray)
      */
-    public <E extends RealmModel> List<E> createOrUpdateAllFromJson(Class<E> clazz, JSONArray json) {
+    public <E extends RealmModel> void createOrUpdateAllFromJson(Class<E> clazz, JSONArray json) {
+        createOrUpdateAllFromJsonAndReturn(clazz, json);
+    }
+
+    public <E extends RealmModel> List<E> createOrUpdateAllFromJsonAndReturn(Class<E> clazz, JSONArray json) {
         if (clazz == null || json == null) {
             return null;
         }
@@ -529,7 +533,7 @@ private static void initializeSyncedRealm(Realm realm) {
      * If a new {@link RealmObject} is created and a field is not found in the JSON object, that field will be assigned
      * the default value for the field type.
      *
-     * @param clazz type of {@link RealmObject} to create or update. It must have a primary key defined.
+     * @param clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.
      * @param json string with an array of JSON objects.
      * @throws IllegalArgumentException if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.
      * @throws RealmException if unable to create a JSON array from the json string.
@@ -537,7 +541,11 @@ private static void initializeSyncedRealm(Realm realm) {
      * {@link RealmObjectSchema} has a {@link io.realm.annotations.PrimaryKey} defined.
      * @see #createAllFromJson(Class, String)
      */
-    public <E extends RealmModel> List<E> createOrUpdateAllFromJson(Class<E> clazz, String json) {
+    public <E extends RealmModel> void createOrUpdateAllFromJson(Class<E> clazz, String json) {
+        createOrUpdateAllFromJsonAndReturn(clazz, json);
+    }
+
+    public <E extends RealmModel> List<E> createOrUpdateAllFromJsonAndReturn(Class<E> clazz, String json) {
         if (clazz == null || json == null || json.length() == 0) {
             return null;
         }
@@ -551,7 +559,7 @@ private static void initializeSyncedRealm(Realm realm) {
             throw new RealmException("Could not create JSON array from string", e);
         }
 
-        return createOrUpdateAllFromJson(clazz, arr);
+        return createOrUpdateAllFromJsonAndReturn(clazz, arr);
     }
 
     /**
@@ -596,7 +604,7 @@ private static void initializeSyncedRealm(Realm realm) {
      * <p>
      * This API is only available in API level 11 or later.
      *
-     * @param clazz type of {@link RealmObject} to create or update. It must have a primary key defined.
+     * @param clazz type of {@link io.realm.RealmObject} to create or update. It must have a primary key defined.
      * @param in the InputStream with a list of object data in JSON format.
      * @throws IllegalArgumentException if trying to update a class without a {@link io.realm.annotations.PrimaryKey}.
      * @throws IllegalArgumentException if the JSON object doesn't have a primary key property but the corresponding
@@ -605,7 +613,11 @@ private static void initializeSyncedRealm(Realm realm) {
      * @see #createOrUpdateAllFromJson(Class, java.io.InputStream)
      */
     @TargetApi(Build.VERSION_CODES.HONEYCOMB)
-    public <E extends RealmModel> List<E> createOrUpdateAllFromJson(Class<E> clazz, InputStream in) throws IOException {
+    public <E extends RealmModel> void createOrUpdateAllFromJson(Class<E> clazz, InputStream in) throws IOException {
+        createOrUpdateAllFromJsonAndReturn(clazz, in);
+    }
+
+    public <E extends RealmModel> List<E> createOrUpdateAllFromJsonAndReturn(Class<E> clazz, InputStream in) throws IOException {
         if (clazz == null || in == null) {
             return null;
         }
