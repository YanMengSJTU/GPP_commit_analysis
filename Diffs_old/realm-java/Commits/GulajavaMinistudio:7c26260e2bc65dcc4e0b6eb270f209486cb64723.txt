diff --git a/CHANGELOG.md b/CHANGELOG.md
index ee66bc1da7..7474350814 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -18,6 +18,7 @@
 
 * Added missing row validation check in certain cases on invalidated/deleted objects (#4540).
 * Initializing Realm is now more resilient if `Context.getFilesDir()` isn't working correctly (#4493).
+* `OrderedRealmCollectionSnapshot.get()` returned a wrong object (#4554).
 
 ## 3.1.3 (2017-04-20)
 
diff --git a/build.gradle b/build.gradle
index ddc7ff1dc6..3eac28d01d 100644
--- a/build.gradle
+++ b/build.gradle
@@ -267,6 +267,37 @@ task clean {
     dependsOn cleanLocalMavenRepos
 }
 
+task manualClean {
+    description = 'Clean build files without using clean tasks defined in sub projects'
+    group = 'Clean'
+
+    doLast {
+        // clean 'build' directories
+        exec {
+            workingDir "${rootDir}"
+            commandLine 'find', '.', '-type', 'd', '-name', 'build', '-print', '-exec', 'rm', '-rf', '{}', ';', '-prune'
+        }
+
+        // clean '.externalNativeBuild' directories
+        exec {
+            workingDir "${rootDir}"
+            commandLine 'find', '.', '-type', 'd', '-name', '.externalNativeBuild', '-print', '-exec', 'rm', '-rf', '{}', ';', '-prune'
+        }
+
+        // clean '.gradle' directories except one in the root
+        exec {
+            workingDir "${rootDir}"
+            commandLine 'find', '.', '-mindepth', '2', '-type', 'd', '-name', '.gradle', '-print', '-exec', 'rm', '-rf', '{}', ';', '-prune'
+        }
+
+        // clean ${System.env.HOME}/.m2/repository/io/realm
+        exec {
+            workingDir "${rootDir}"
+            commandLine 'sh', '-c', "echo \"${System.env.HOME}/.m2/repository/io/realm\" && rm -rf \"${System.env.HOME}/.m2/repository/io/realm\""
+        }
+    }
+}
+
 task uploadDistributionPackage {
     group = 'Release'
     description = 'Upload the distribution package to S3'
diff --git a/realm/realm-library/src/androidTest/java/io/realm/RealmListTests.java b/realm/realm-library/src/androidTest/java/io/realm/RealmListTests.java
index c6b2ea957f..038ccc905d 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/RealmListTests.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/RealmListTests.java
@@ -38,6 +38,7 @@
 import io.realm.entities.Dog;
 import io.realm.entities.Owner;
 import io.realm.internal.RealmObjectProxy;
+import io.realm.internal.Table;
 import io.realm.rule.RunInLooperThread;
 import io.realm.rule.RunTestInLooperThread;
 import io.realm.rule.TestRealmConfigurationFactory;
@@ -1105,4 +1106,18 @@ public void onChange(RealmList<Dog> collection, OrderedCollectionChangeSet chang
         realm.commitTransaction();
         assertEquals(1, listenerCalledCount.get());
     }
+
+    // https://github.com/realm/realm-java/issues/4554
+    @Test
+    public void createSnapshot_shouldUseTargetTable() {
+        int sizeBefore = collection.size();
+        OrderedRealmCollectionSnapshot<Dog> snapshot = collection.createSnapshot();
+        realm.beginTransaction();
+        snapshot.get(0).deleteFromRealm();
+        realm.commitTransaction();
+        assertEquals(sizeBefore - 1, collection.size());
+
+        assertNotNull(collection.view);
+        assertEquals(collection.view.getTargetTable().getName(), snapshot.getTable().getName());
+    }
 }
diff --git a/realm/realm-library/src/main/java/io/realm/internal/Collection.java b/realm/realm-library/src/main/java/io/realm/internal/Collection.java
index bfe8ccaeeb..dcdf1ce6ec 100644
--- a/realm/realm-library/src/main/java/io/realm/internal/Collection.java
+++ b/realm/realm-library/src/main/java/io/realm/internal/Collection.java
@@ -367,7 +367,7 @@ public Collection(SharedRealm sharedRealm, LinkView linkView, SortDescriptor sor
 
         this.sharedRealm = sharedRealm;
         this.context = sharedRealm.context;
-        this.table = linkView.getTable();
+        this.table = linkView.getTargetTable();
         this.context.addReference(this);
         // Collection created from LinkView is loaded by default. So that the listener will be triggered first time
         // with empty change set.
diff --git a/realm/realm-library/src/main/java/io/realm/internal/LinkView.java b/realm/realm-library/src/main/java/io/realm/internal/LinkView.java
index 8eb61a3de3..03af9ff392 100644
--- a/realm/realm-library/src/main/java/io/realm/internal/LinkView.java
+++ b/realm/realm-library/src/main/java/io/realm/internal/LinkView.java
@@ -134,13 +134,6 @@ public boolean isAttached() {
         return nativeIsAttached(nativePtr);
     }
 
-    /**
-     * Returns the {@link Table} which all links point to.
-     */
-    public Table getTable() {
-        return parent;
-    }
-
     /**
      * Removes all target rows pointed to by links in this link view, and clear this link view.
      */
@@ -159,8 +152,7 @@ public void removeTargetRow(int index) {
 
     public Table getTargetTable() {
         long nativeTablePointer = nativeGetTargetTable(nativePtr);
-        Table table = new Table(this.parent, nativeTablePointer);
-        return table;
+        return new Table(this.parent, nativeTablePointer);
     }
 
     private void checkImmutable() {
