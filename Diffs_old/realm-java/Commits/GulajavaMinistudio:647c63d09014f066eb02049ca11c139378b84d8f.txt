diff --git a/Dockerfile b/Dockerfile
index 2b66ca9912..77fa0e1f09 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -72,7 +72,8 @@ RUN mkdir /opt/android-ndk-tmp && \
     ./android-ndk.bin && \
     mv android-ndk-r10e /opt/android-ndk && \
     rm -rf /opt/android-ndk-tmp && \
-    chmod -R a+rX /opt/android-ndk
+    chmod -R a+rX /opt/android-ndk && \
+    echo "Pkg.Desc = Android NDK\nPkg.Revision = 10.0.0" > /opt/android-ndk/source.properties
 
 # Make the SDK universally writable
 RUN chmod -R a+rwX ${ANDROID_HOME}
diff --git a/README.md b/README.md
index 72b599d448..22aac0936d 100644
--- a/README.md
+++ b/README.md
@@ -161,10 +161,10 @@ Generating the Javadoc using the command above may generate warnings. The Javado
 
 ### Upgrading Gradle Wrappers
 
- All gradle projects in this repository have `wrapper` task to generate Gradle Wrappers. Those tasks refer to `gradleVersion` property defined in `/realm.properties` to determine Gradle Version of generating wrappers.
+ All gradle projects in this repository have `wrapper` task to generate Gradle Wrappers. Those tasks refer to `gradleVersion` property defined in `/dependencies.list` to determine Gradle Version of generating wrappers.
 We have a script `./tools/update_gradle_wrapper.sh` to automate these steps. When you update Gradle Wrappers, please obey the following steps.
 
- 1. Edit `gradleVersion` property in defined in `/realm.properties` to new Gradle Wrapper version.
+ 1. Edit `gradleVersion` property in defined in `/dependencies.list` to new Gradle Wrapper version.
  2. Execute `/tools/update_gradle_wrapper.sh`.
 
 ### Gotchas
diff --git a/build.gradle b/build.gradle
index 2ff457c052..ad0f929a7e 100644
--- a/build.gradle
+++ b/build.gradle
@@ -11,12 +11,6 @@ apply plugin: 'ch.netzwerg.release'
 
 def currentVersion = file("${projectDir}/version.txt").text.trim()
 
-def props = new Properties()
-props.load(new FileInputStream("${rootDir}/realm.properties"))
-props.each { key, val ->
-    project.ext.set(key, val)
-}
-
 task assembleAnnotations(type:GradleBuild) {
     group = 'Build'
     description = 'Assemble the Realm annotations'
@@ -484,8 +478,3 @@ release {
     versionSuffix = '-SNAPSHOT'
     tagPrefix = 'v'
 }
-
-task wrapper(type: Wrapper) {
-    gradleVersion = project.gradleVersion
-    distributionType = 'all'
-}
diff --git a/dependencies.list b/dependencies.list
index 7bae137f55..cfc6079634 100644
--- a/dependencies.list
+++ b/dependencies.list
@@ -8,9 +8,12 @@ REALM_SYNC_SHA256=7e8934a471fa714bf672a9575cd3112470c3294d55e7a13688d04569e707b8
 REALM_OBJECT_SERVER_VERSION=3.18.5
 
 # Common Android settings across projects
-GRADLE_BUILD_TOOLS=3.1.4
-ANDROID_BUILD_TOOLS=27.0.3
+GRADLE_BUILD_TOOLS=3.3.1
+ANDROID_BUILD_TOOLS=28.0.3
 
 # Common classpath dependencies
+# Gradle 5 is not supported yet: https://issuetracker.google.com/issues/126433059
+gradleVersion=4.10.1
+ndkVersion=r10e
 BUILD_INFO_EXTRACTOR_GRADLE=4.7.5
 GRADLE_BINTRAY_PLUGIN=1.8.4
diff --git a/examples/architectureComponentsExample/lint.xml b/examples/architectureComponentsExample/lint.xml
index 6a9810cdcb..da1621f226 100644
--- a/examples/architectureComponentsExample/lint.xml
+++ b/examples/architectureComponentsExample/lint.xml
@@ -5,6 +5,5 @@
     <issue id="IconLauncherShape" severity="ignore" />
     <issue id="IconMissingDensityFolder" severity="ignore" />
     <issue id="GoogleAppIndexingWarning" severity="ignore" />
-    <issue id="LogNotTimber" severity="ignore" />
     <issue id="InvalidPackage" severity="ignore" />
 </lint>
diff --git a/examples/build.gradle b/examples/build.gradle
index 79fefbdc2d..5e91e876da 100644
--- a/examples/build.gradle
+++ b/examples/build.gradle
@@ -22,7 +22,6 @@ allprojects {
     def currentVersion = file("${rootDir}/../version.txt").text.trim()
 
     def props = new Properties()
-    props.load(new FileInputStream("${rootDir}/../realm.properties"))
     props.load(new FileInputStream("${rootDir}/../dependencies.list"))
     props.each { key, val ->
         project.ext.set(key, val)
@@ -76,8 +75,3 @@ allprojects {
         }
     }
 }
-
-task wrapper(type: Wrapper) {
-    gradleVersion = project.gradleVersion
-    distributionType = 'all'
-}
diff --git a/examples/encryptionExample/lint.xml b/examples/encryptionExample/lint.xml
index 6793b0702b..6cbeea83b3 100644
--- a/examples/encryptionExample/lint.xml
+++ b/examples/encryptionExample/lint.xml
@@ -4,7 +4,5 @@
     <issue id="IconMissingDensityFolder" severity="ignore" />
     <issue id="GoogleAppIndexingWarning" severity="ignore" />
     <issue id="TrulyRandom" severity="ignore" />
-    <issue id="PrngFix" severity="ignore" />
-    <issue id="LogNotTimber" severity="ignore" />
     <issue id="InvalidPackage" severity="ignore" />
 </lint>
diff --git a/examples/gradle/wrapper/gradle-wrapper.properties b/examples/gradle/wrapper/gradle-wrapper.properties
index 7dc503f149..4e974715fd 100644
--- a/examples/gradle/wrapper/gradle-wrapper.properties
+++ b/examples/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.9-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.1-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
diff --git a/examples/gridViewExample/lint.xml b/examples/gridViewExample/lint.xml
index 6a9810cdcb..da1621f226 100644
--- a/examples/gridViewExample/lint.xml
+++ b/examples/gridViewExample/lint.xml
@@ -5,6 +5,5 @@
     <issue id="IconLauncherShape" severity="ignore" />
     <issue id="IconMissingDensityFolder" severity="ignore" />
     <issue id="GoogleAppIndexingWarning" severity="ignore" />
-    <issue id="LogNotTimber" severity="ignore" />
     <issue id="InvalidPackage" severity="ignore" />
 </lint>
diff --git a/examples/introExample/lint.xml b/examples/introExample/lint.xml
index 6a9810cdcb..da1621f226 100644
--- a/examples/introExample/lint.xml
+++ b/examples/introExample/lint.xml
@@ -5,6 +5,5 @@
     <issue id="IconLauncherShape" severity="ignore" />
     <issue id="IconMissingDensityFolder" severity="ignore" />
     <issue id="GoogleAppIndexingWarning" severity="ignore" />
-    <issue id="LogNotTimber" severity="ignore" />
     <issue id="InvalidPackage" severity="ignore" />
 </lint>
diff --git a/examples/jsonExample/lint.xml b/examples/jsonExample/lint.xml
index a443370a1a..2d341a9e76 100644
--- a/examples/jsonExample/lint.xml
+++ b/examples/jsonExample/lint.xml
@@ -3,7 +3,5 @@
     <issue id="IconLauncherShape" severity="ignore" />
     <issue id="IconMissingDensityFolder" severity="ignore" />
     <issue id="GoogleAppIndexingWarning" severity="ignore" />
-    <issue id="PrngFix" severity="ignore" />
-    <issue id="LogNotTimber" severity="ignore" />
     <issue id="InvalidPackage" severity="ignore" />
 </lint>
diff --git a/examples/kotlinExample/build.gradle b/examples/kotlinExample/build.gradle
index 0f7148e338..46a1af33a3 100644
--- a/examples/kotlinExample/build.gradle
+++ b/examples/kotlinExample/build.gradle
@@ -1,5 +1,5 @@
 buildscript {
-    ext.kotlin_version = '1.2.40'
+    ext.kotlin_version = '1.3.21'
     repositories {
         jcenter()
         mavenCentral()
diff --git a/examples/kotlinExample/lint.xml b/examples/kotlinExample/lint.xml
index 7d530f741e..a960fabaf6 100644
--- a/examples/kotlinExample/lint.xml
+++ b/examples/kotlinExample/lint.xml
@@ -4,6 +4,5 @@
     <issue id="GoogleAppIndexingWarning" severity="ignore" />
     <issue id="IconMissingDensityFolder" severity="ignore" />
     <issue id="IconLauncherShape" severity="ignore" />
-    <issue id="LogNotTimber" severity="ignore" />
     <issue id="InvalidPackage" severity="ignore" />
 </lint>
diff --git a/examples/migrationExample/lint.xml b/examples/migrationExample/lint.xml
index 1f5e37cb86..2d341a9e76 100644
--- a/examples/migrationExample/lint.xml
+++ b/examples/migrationExample/lint.xml
@@ -3,6 +3,5 @@
     <issue id="IconLauncherShape" severity="ignore" />
     <issue id="IconMissingDensityFolder" severity="ignore" />
     <issue id="GoogleAppIndexingWarning" severity="ignore" />
-    <issue id="LogNotTimber" severity="ignore" />
     <issue id="InvalidPackage" severity="ignore" />
 </lint>
diff --git a/examples/moduleExample/app/lint.xml b/examples/moduleExample/app/lint.xml
index 1f5e37cb86..2d341a9e76 100644
--- a/examples/moduleExample/app/lint.xml
+++ b/examples/moduleExample/app/lint.xml
@@ -3,6 +3,5 @@
     <issue id="IconLauncherShape" severity="ignore" />
     <issue id="IconMissingDensityFolder" severity="ignore" />
     <issue id="GoogleAppIndexingWarning" severity="ignore" />
-    <issue id="LogNotTimber" severity="ignore" />
     <issue id="InvalidPackage" severity="ignore" />
 </lint>
diff --git a/examples/moduleExample/library/lint.xml b/examples/moduleExample/library/lint.xml
index 6a9810cdcb..da1621f226 100644
--- a/examples/moduleExample/library/lint.xml
+++ b/examples/moduleExample/library/lint.xml
@@ -5,6 +5,5 @@
     <issue id="IconLauncherShape" severity="ignore" />
     <issue id="IconMissingDensityFolder" severity="ignore" />
     <issue id="GoogleAppIndexingWarning" severity="ignore" />
-    <issue id="LogNotTimber" severity="ignore" />
     <issue id="InvalidPackage" severity="ignore" />
 </lint>
diff --git a/examples/newsreaderExample/lint.xml b/examples/newsreaderExample/lint.xml
index 1f5e37cb86..2d341a9e76 100644
--- a/examples/newsreaderExample/lint.xml
+++ b/examples/newsreaderExample/lint.xml
@@ -3,6 +3,5 @@
     <issue id="IconLauncherShape" severity="ignore" />
     <issue id="IconMissingDensityFolder" severity="ignore" />
     <issue id="GoogleAppIndexingWarning" severity="ignore" />
-    <issue id="LogNotTimber" severity="ignore" />
     <issue id="InvalidPackage" severity="ignore" />
 </lint>
diff --git a/examples/objectServerExample/lint.xml b/examples/objectServerExample/lint.xml
index 6a9810cdcb..da1621f226 100644
--- a/examples/objectServerExample/lint.xml
+++ b/examples/objectServerExample/lint.xml
@@ -5,6 +5,5 @@
     <issue id="IconLauncherShape" severity="ignore" />
     <issue id="IconMissingDensityFolder" severity="ignore" />
     <issue id="GoogleAppIndexingWarning" severity="ignore" />
-    <issue id="LogNotTimber" severity="ignore" />
     <issue id="InvalidPackage" severity="ignore" />
 </lint>
diff --git a/examples/rxJavaExample/lint.xml b/examples/rxJavaExample/lint.xml
index 7d530f741e..a960fabaf6 100644
--- a/examples/rxJavaExample/lint.xml
+++ b/examples/rxJavaExample/lint.xml
@@ -4,6 +4,5 @@
     <issue id="GoogleAppIndexingWarning" severity="ignore" />
     <issue id="IconMissingDensityFolder" severity="ignore" />
     <issue id="IconLauncherShape" severity="ignore" />
-    <issue id="LogNotTimber" severity="ignore" />
     <issue id="InvalidPackage" severity="ignore" />
 </lint>
diff --git a/examples/threadExample/lint.xml b/examples/threadExample/lint.xml
index 6a9810cdcb..da1621f226 100644
--- a/examples/threadExample/lint.xml
+++ b/examples/threadExample/lint.xml
@@ -5,6 +5,5 @@
     <issue id="IconLauncherShape" severity="ignore" />
     <issue id="IconMissingDensityFolder" severity="ignore" />
     <issue id="GoogleAppIndexingWarning" severity="ignore" />
-    <issue id="LogNotTimber" severity="ignore" />
     <issue id="InvalidPackage" severity="ignore" />
 </lint>
diff --git a/examples/unitTestExample/lint.xml b/examples/unitTestExample/lint.xml
index 1f5e37cb86..a28ca6e6e8 100644
--- a/examples/unitTestExample/lint.xml
+++ b/examples/unitTestExample/lint.xml
@@ -3,6 +3,6 @@
     <issue id="IconLauncherShape" severity="ignore" />
     <issue id="IconMissingDensityFolder" severity="ignore" />
     <issue id="GoogleAppIndexingWarning" severity="ignore" />
-    <issue id="LogNotTimber" severity="ignore" />
     <issue id="InvalidPackage" severity="ignore" />
+    <issue id="WrongThread" severity="ignore" />
 </lint>
diff --git a/gradle-plugin/build.gradle b/gradle-plugin/build.gradle
index bd154d1785..ea02b04bd6 100644
--- a/gradle-plugin/build.gradle
+++ b/gradle-plugin/build.gradle
@@ -18,7 +18,6 @@ apply plugin: 'com.jfrog.artifactory'
 apply plugin: 'com.jfrog.bintray'
 
 def props = new Properties()
-props.load(new FileInputStream("${rootDir}/../realm.properties"))
 props.load(new FileInputStream("${rootDir}/../dependencies.list"))
 props.each { key, val ->
     project.ext.set(key, val)
@@ -84,11 +83,6 @@ sourceSets {
 
 compileJava.dependsOn generateVersionClass
 
-task wrapper(type: Wrapper) {
-    gradleVersion = project.gradleVersion
-    distributionType = 'all'
-}
-
 def commonPom = {
     licenses {
         license {
diff --git a/gradle-plugin/gradle/wrapper/gradle-wrapper.jar b/gradle-plugin/gradle/wrapper/gradle-wrapper.jar
index 1948b9074f..87b738cbd0 100644
Binary files a/gradle-plugin/gradle/wrapper/gradle-wrapper.jar and b/gradle-plugin/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle-plugin/gradle/wrapper/gradle-wrapper.properties b/gradle-plugin/gradle/wrapper/gradle-wrapper.properties
index 7dc503f149..4e974715fd 100644
--- a/gradle-plugin/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle-plugin/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.9-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.1-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
diff --git a/gradle-plugin/gradlew b/gradle-plugin/gradlew
index cccdd3d517..af6708ff22 100755
--- a/gradle-plugin/gradlew
+++ b/gradle-plugin/gradlew
@@ -28,7 +28,7 @@ APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
 # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
+DEFAULT_JVM_OPTS='"-Xmx64m"'
 
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
diff --git a/gradle-plugin/gradlew.bat b/gradle-plugin/gradlew.bat
index e95643d6a2..0f8d5937c4 100755
--- a/gradle-plugin/gradlew.bat
+++ b/gradle-plugin/gradlew.bat
@@ -14,7 +14,7 @@ set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
 @rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
+set DEFAULT_JVM_OPTS="-Xmx64m"
 
 @rem Find java.exe
 if defined JAVA_HOME goto findJavaFromJavaHome
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index 7dc503f149..4e974715fd 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.9-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.1-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
diff --git a/library-benchmarks/build.gradle b/library-benchmarks/build.gradle
index c3ebfa3675..287910c0e6 100644
--- a/library-benchmarks/build.gradle
+++ b/library-benchmarks/build.gradle
@@ -15,18 +15,12 @@ buildscript {
 
 allprojects {
     def props = new Properties()
-    props.load(new FileInputStream("${rootDir}/../realm.properties"))
     props.load(new FileInputStream("${rootDir}/../dependencies.list"))
     props.each { key, val ->
         project.ext.set(key, val)
     }
 }
 
-task wrapper(type: Wrapper) {
-    gradleVersion = project.gradleVersion
-    distributionType = 'all'
-}
-
 apply plugin: 'com.android.library'
 apply plugin: 'realm-android'
 
diff --git a/library-benchmarks/gradle/wrapper/gradle-wrapper.properties b/library-benchmarks/gradle/wrapper/gradle-wrapper.properties
index 7dc503f149..4e974715fd 100644
--- a/library-benchmarks/gradle/wrapper/gradle-wrapper.properties
+++ b/library-benchmarks/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.9-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.1-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
diff --git a/library-build-transformer/build.gradle b/library-build-transformer/build.gradle
index eb4f5ed791..f6268d9368 100644
--- a/library-build-transformer/build.gradle
+++ b/library-build-transformer/build.gradle
@@ -17,14 +17,6 @@ buildscript {
     }
 }
 
-allprojects {
-    def props = new Properties()
-    props.load(new FileInputStream("${rootDir}/../realm.properties"))
-    props.each { key, val ->
-        project.ext.set(key, val)
-    }
-}
-
 group = 'io.realm'
 version = file("${projectDir}/../version.txt").text.trim()
 
@@ -104,8 +96,3 @@ publishing {
         }
     }
 }
-
-task wrapper(type: Wrapper) {
-    gradleVersion = project.gradleVersion
-    distributionType = 'all'
-}
diff --git a/library-build-transformer/gradle/wrapper/gradle-wrapper.jar b/library-build-transformer/gradle/wrapper/gradle-wrapper.jar
index 1948b9074f..0d4a951687 100644
Binary files a/library-build-transformer/gradle/wrapper/gradle-wrapper.jar and b/library-build-transformer/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/library-build-transformer/gradle/wrapper/gradle-wrapper.properties b/library-build-transformer/gradle/wrapper/gradle-wrapper.properties
index 7dc503f149..4e974715fd 100644
--- a/library-build-transformer/gradle/wrapper/gradle-wrapper.properties
+++ b/library-build-transformer/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.9-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.1-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
diff --git a/realm-annotations/build.gradle b/realm-annotations/build.gradle
index f785066656..ed07be3e45 100644
--- a/realm-annotations/build.gradle
+++ b/realm-annotations/build.gradle
@@ -11,14 +11,6 @@ buildscript {
     }
 }
 
-allprojects {
-    def props = new Properties()
-    props.load(new FileInputStream("${rootDir}/../realm.properties"))
-    props.each { key, val ->
-        project.ext.set(key, val)
-    }
-}
-
 apply plugin: 'java'
 apply plugin: 'maven'
 apply plugin: 'maven-publish'
@@ -114,8 +106,3 @@ artifactory {
         }
     }
 }
-
-task wrapper(type: Wrapper) {
-    gradleVersion = project.gradleVersion
-    distributionType = 'all'
-}
diff --git a/realm-annotations/gradle/wrapper/gradle-wrapper.jar b/realm-annotations/gradle/wrapper/gradle-wrapper.jar
index 1948b9074f..87b738cbd0 100644
Binary files a/realm-annotations/gradle/wrapper/gradle-wrapper.jar and b/realm-annotations/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/realm-annotations/gradle/wrapper/gradle-wrapper.properties b/realm-annotations/gradle/wrapper/gradle-wrapper.properties
index 7dc503f149..4e974715fd 100644
--- a/realm-annotations/gradle/wrapper/gradle-wrapper.properties
+++ b/realm-annotations/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.9-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.1-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
diff --git a/realm-annotations/gradlew b/realm-annotations/gradlew
index cccdd3d517..af6708ff22 100755
--- a/realm-annotations/gradlew
+++ b/realm-annotations/gradlew
@@ -28,7 +28,7 @@ APP_NAME="Gradle"
 APP_BASE_NAME=`basename "$0"`
 
 # Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
+DEFAULT_JVM_OPTS='"-Xmx64m"'
 
 # Use the maximum available, or set MAX_FD != -1 to use that value.
 MAX_FD="maximum"
diff --git a/realm-annotations/gradlew.bat b/realm-annotations/gradlew.bat
index e95643d6a2..0f8d5937c4 100755
--- a/realm-annotations/gradlew.bat
+++ b/realm-annotations/gradlew.bat
@@ -14,7 +14,7 @@ set APP_BASE_NAME=%~n0
 set APP_HOME=%DIRNAME%
 
 @rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
+set DEFAULT_JVM_OPTS="-Xmx64m"
 
 @rem Find java.exe
 if defined JAVA_HOME goto findJavaFromJavaHome
diff --git a/realm-annotations/settings.gradle b/realm-annotations/settings.gradle
new file mode 100644
index 0000000000..47298f7a28
--- /dev/null
+++ b/realm-annotations/settings.gradle
@@ -0,0 +1 @@
+rootProject.name = 'realm-annotations'
diff --git a/realm-annotations/src/main/java/io/realm/annotations/Required.java b/realm-annotations/src/main/java/io/realm/annotations/Required.java
index 16750abcf8..7f2c4aa96e 100644
--- a/realm-annotations/src/main/java/io/realm/annotations/Required.java
+++ b/realm-annotations/src/main/java/io/realm/annotations/Required.java
@@ -21,23 +21,25 @@
 import java.lang.annotation.Target;
 
 /**
- * This annotation will mark the field or the element of a primitive {@link io.realm.RealmList} as not nullable.
+ * This annotation will mark the field or the element in {@link io.realm.RealmList} as not nullable.
  * <p>
  * When a field of type {@code Boolean, Byte, Short, Integer, Long, Float, Double, String, byte[], Date} is annotated
- * with {@link Required}, it cannot be set to {@code null}.
+ * with {@link Required}, it cannot be set to {@code null} and Realm will throw an exception if it happens.
  * <p>
- * Fields with primitive types are implicitly required.
+ * Fields with primitive types are implicitly required. Note, {@code String} is not a primitive type, so in Java
+ * it is default nullable unless it is marked {@code \@Required}. In Kotlin the reverse is true, so a {@code String} is
+ * non-null. To specify a nullable String in Kotlin you should use {@code String?}.
  * <p>
- * When a primitive {@link io.realm.RealmList} ({@code RealmList<String>, RealmList<byte[]>, RealmList<Boolean>,
- * RealmList<Byte>, RealmList<Short>, RealmList<Integer>, RealmList<Long>, RealmList<Float>, RealmList<Double>,
- * RealmList<Date>}) is annotated with {@link Required}, it cannot contain {@code null} values.
+ * If this annotation is used on a {@code RealmList}, the annotation is applied to the elements inside
+ * the list and not the list itself. The list itself is always non-null. This means that a list marked with this
+ * annotation are never allowed to hold {@code null} values even if the datatype would otherwise allow it.
+ * Realm will throw an exception if you attempt to store null values into a list marked {@code \@Required}.
  * <p>
- * The {@link io.realm.RealmList} field itself is required always.
- * <p>
- * Compiling will fail when fields with other types have {@link Required} annotation.
+ * Compiling will fail if the {@link Required} annotation is put an a {@link io.realm.RealmList} containing references to other
+ * Realm objects.
  */
 @Retention(RetentionPolicy.RUNTIME)
 @Target(ElementType.FIELD)
 public @interface Required {
 
-}
\ No newline at end of file
+}
diff --git a/realm-transformer/build.gradle b/realm-transformer/build.gradle
index c0fc6bc89b..92d70f7526 100644
--- a/realm-transformer/build.gradle
+++ b/realm-transformer/build.gradle
@@ -14,14 +14,6 @@ buildscript {
     }
 }
 
-allprojects {
-    def props = new Properties()
-    props.load(new FileInputStream("${rootDir}/../realm.properties"))
-    props.each { key, val ->
-        project.ext.set(key, val)
-    }
-}
-
 apply plugin: 'kotlin'
 apply plugin: 'java'
 apply plugin: 'maven'
@@ -167,9 +159,3 @@ artifactory {
         }
     }
 }
-
-task wrapper(type: Wrapper) {
-    gradleVersion = project.gradleVersion
-    distributionType = 'all'
-}
-
diff --git a/realm-transformer/gradle/wrapper/gradle-wrapper.jar b/realm-transformer/gradle/wrapper/gradle-wrapper.jar
index 1948b9074f..0d4a951687 100644
Binary files a/realm-transformer/gradle/wrapper/gradle-wrapper.jar and b/realm-transformer/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/realm-transformer/gradle/wrapper/gradle-wrapper.properties b/realm-transformer/gradle/wrapper/gradle-wrapper.properties
index 7dc503f149..4e974715fd 100644
--- a/realm-transformer/gradle/wrapper/gradle-wrapper.properties
+++ b/realm-transformer/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.9-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.1-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
diff --git a/realm.properties b/realm.properties
deleted file mode 100644
index 1a1be59f2f..0000000000
--- a/realm.properties
+++ /dev/null
@@ -1,2 +0,0 @@
-gradleVersion=4.9
-ndkVersion=r10e
diff --git a/realm/build.gradle b/realm/build.gradle
index 9ab569ac19..8f591b39bb 100644
--- a/realm/build.gradle
+++ b/realm/build.gradle
@@ -1,8 +1,8 @@
 buildscript {
     def projectDependencies = new Properties()
     projectDependencies.load(new FileInputStream("${rootDir}/../dependencies.list"))
-    ext.kotlin_version = '1.2.50'
-    ext.dokka_version = '0.9.16'
+    ext.kotlin_version = '1.3.21'
+    ext.dokka_version = '0.9.17'
     repositories {
         mavenLocal()
         google()
@@ -14,7 +14,7 @@ buildscript {
     dependencies {
         classpath "com.android.tools.build:gradle:${projectDependencies.get('GRADLE_BUILD_TOOLS')}"
         classpath 'de.undercouch:gradle-download-task:3.3.0'
-        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
+        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
         classpath 'com.novoda:gradle-android-command-plugin:1.7.1'
         classpath 'com.github.skhatri:gradle-s3-plugin:1.0.4'
         classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
@@ -29,18 +29,14 @@ buildscript {
 }
 
 allprojects {
-    def props = new Properties()
-    props.load(new FileInputStream("${rootDir}/../realm.properties"))
-    props.each { key, val ->
-        project.ext.set(key, val)
-    }
-
     def projectDependencies = new Properties()
     projectDependencies.load(new FileInputStream("${rootDir}/../dependencies.list"))
+    projectDependencies.each { key, val ->
+        project.ext.set(key, val)
+    }
     project.ext.minSdkVersion = 9
-    project.ext.compileSdkVersion = 27
+    project.ext.compileSdkVersion = 28
     project.ext.buildToolsVersion = projectDependencies.get("ANDROID_BUILD_TOOLS")
-
     group = 'io.realm'
     version = file("${rootDir}/../version.txt").text.trim()
     repositories {
@@ -49,8 +45,3 @@ allprojects {
         jcenter()
     }
 }
-
-task wrapper(type: Wrapper) {
-    gradleVersion = project.gradleVersion
-    distributionType = 'all'
-}
diff --git a/realm/gradle/wrapper/gradle-wrapper.properties b/realm/gradle/wrapper/gradle-wrapper.properties
index 7dc503f149..4e974715fd 100644
--- a/realm/gradle/wrapper/gradle-wrapper.properties
+++ b/realm/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,5 @@
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.9-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.1-all.zip
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
diff --git a/realm/realm-library/build.gradle b/realm/realm-library/build.gradle
index b0e7425827..4562cf3be7 100644
--- a/realm/realm-library/build.gradle
+++ b/realm/realm-library/build.gradle
@@ -286,7 +286,7 @@ task findbugs(type: FindBugs) {
     effort = "default"
     reportLevel = "medium"
     excludeFilter = file("${projectDir}/../config/findbugs/findbugs-filter.xml")
-    classes = files("${projectDir}/build/intermediates/classes")
+    classes = files("${projectDir}/build/intermediates/javac")
     source = fileTree('src/main/java/')
     classpath = files()
     reports {
diff --git a/realm/realm-library/src/androidTest/java/io/realm/MediatorTest.java b/realm/realm-library/src/androidTest/java/io/realm/MediatorTest.java
index 377f19eddd..29c034cfa7 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/MediatorTest.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/MediatorTest.java
@@ -16,7 +16,10 @@
 
 package io.realm;
 
-import android.test.AndroidTestCase;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
 
 import java.util.Arrays;
 
@@ -30,10 +33,16 @@
 import io.realm.internal.modules.CompositeMediator;
 import io.realm.internal.modules.FilterableMediator;
 
-public class MediatorTest extends AndroidTestCase {
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
+
+@RunWith(AndroidJUnit4.class)
+public class MediatorTest {
 
     @SuppressWarnings("AssertEqualsBetweenInconvertibleTypes")
-    public void testMediatorsEquality() {
+    @Test
+    public void mediatorsEquality() {
         final DefaultRealmModuleMediator defaultMediator = new DefaultRealmModuleMediator();
         final CompositeMediator compositeMediator = new CompositeMediator(defaultMediator);
         final FilterableMediator filterableMediator = new FilterableMediator(defaultMediator, defaultMediator.getModelClasses());
@@ -60,7 +69,8 @@ public void testMediatorsEquality() {
         assertEquals(filterableMediator.hashCode(), filterableMediator.hashCode());
     }
 
-    public void testCompositeMediatorModelClassesCount() {
+    @Test
+    public void compositeMediatorModelClassesCount() {
         final CompositeMediator mediator = new CompositeMediator(
                 new HumanModuleMediator(),
                 new AnimalModuleMediator()
@@ -72,7 +82,8 @@ public void testCompositeMediatorModelClassesCount() {
         assertEquals(modelsInHumanModule + modelsInAnimalModule, mediator.getModelClasses().size());
     }
 
-    public void testFilterableMediatorModelClassesCount() {
+    @Test
+    public void filterableMediatorModelClassesCount() {
         //noinspection unchecked
         final FilterableMediator mediator = new FilterableMediator(new AnimalModuleMediator(), Arrays.<Class<? extends RealmModel>>asList(Cat.class, CatOwner.class));
 
@@ -83,7 +94,8 @@ public void testFilterableMediatorModelClassesCount() {
         assertFalse(mediator.getModelClasses().contains(AllTypes.class));
     }
 
-    public void testDefaultMediatorWasTransformed() {
+    @Test
+    public void defaultMediatorWasTransformed() {
         final DefaultRealmModuleMediator defaultMediator = new DefaultRealmModuleMediator();
         assertTrue(defaultMediator.transformerApplied());
     }
diff --git a/realm/realm-library/src/androidTest/java/io/realm/RealmConfigurationTests.java b/realm/realm-library/src/androidTest/java/io/realm/RealmConfigurationTests.java
index 3e9a2e32d4..06f9cacced 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/RealmConfigurationTests.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/RealmConfigurationTests.java
@@ -19,7 +19,6 @@
 import android.content.Context;
 import android.support.test.InstrumentationRegistry;
 import android.support.test.runner.AndroidJUnit4;
-import android.test.MoreAsserts;
 
 import org.junit.After;
 import org.junit.Before;
@@ -31,6 +30,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.util.Arrays;
 import java.util.Set;
 
 import io.reactivex.Flowable;
@@ -58,6 +58,7 @@
 import io.realm.rx.RealmObservableFactory;
 import io.realm.rx.RxObservableFactory;
 
+import static org.junit.Assert.assertArrayEquals;
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNotEquals;
@@ -611,12 +612,12 @@ public void encryptionKey_keyStorage() throws Exception {
 
         // Generates a different key and assigns it to the same variable.
         byte[] newKey = TestHelper.getRandomKey(67890);
-        MoreAsserts.assertNotEqual(key, newKey);
+        assertFalse(Arrays.equals(key, newKey));
         key = newKey;
-        MoreAsserts.assertEquals(key, newKey);
+        assertArrayEquals(key, newKey);
 
         // Ensures that the stored key did not change.
-        MoreAsserts.assertEquals(oldKey, config.getEncryptionKey());
+        assertArrayEquals(oldKey, config.getEncryptionKey());
     }
 
     @Test
diff --git a/realm/realm-library/src/androidTest/java/io/realm/RealmInterprocessTest.java b/realm/realm-library/src/androidTest/java/io/realm/RealmInterprocessTest.java
index 9cb082391d..55dba9fe68 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/RealmInterprocessTest.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/RealmInterprocessTest.java
@@ -29,7 +29,15 @@
 import android.os.Message;
 import android.os.Messenger;
 import android.os.RemoteException;
-import android.test.AndroidTestCase;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.annotation.UiThreadTest;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Ignore;
+import org.junit.Test;
+import org.junit.runner.RunWith;
 
 import java.util.List;
 import java.util.concurrent.CountDownLatch;
@@ -39,6 +47,10 @@
 import io.realm.entities.AllTypesModelModule;
 import io.realm.services.RemoteProcessService;
 
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
+
 
 // This is built for testing multi processes related cases.
 // To build a test case, create an InterprocessHandler in your test case. This handler will run in the newly
@@ -52,7 +64,9 @@
 //      1. Open two Realms
 //      B. Open three Realms
 //      2. assertTrue("OK, remote process win. You can open more Realms than I do in the main local process", false);
-public class RealmInterprocessTest extends AndroidTestCase {
+@Ignore // FIXME Needs to be upgraded to support JUnit4: https://github.com/realm/realm-java/issues/6452
+@RunWith(AndroidJUnit4.class)
+public class RealmInterprocessTest {
 
     private Realm testRealm;
     private Messenger remoteMessenger;
@@ -81,31 +95,31 @@ public void onServiceDisconnected(ComponentName componentName) {
     // By overloading this method, we create a new thread and looper to run the real case. And use latch to wait until
     // it is finished. Then we can get rid of creating the thread in the test method, using array to store exception, many
     // levels of nested code. Make the test case more nature.
-    @Override
-    public void runBare() throws Throwable {
-        final Throwable[] throwableArray = new Throwable[1];
-        final CountDownLatch latch = new CountDownLatch(1);
-        Thread thread = new Thread(new Runnable() {
-            @Override
-            public void run() {
-                Looper.prepare();
-                try {
-                    RealmInterprocessTest.super.runBare();
-                } catch (Throwable throwable) {
-                    throwableArray[0] = throwable;
-                } finally {
-                    latch.countDown();
-                }
-            }
-        });
-
-        thread.start();
-        TestHelper.awaitOrFail(latch);
-
-        if (throwableArray[0] != null) {
-            throw throwableArray[0];
-        }
-    }
+//    @Override
+//    public void runBare() throws Throwable {
+//        final Throwable[] throwableArray = new Throwable[1];
+//        final CountDownLatch latch = new CountDownLatch(1);
+//        Thread thread = new Thread(new Runnable() {
+//            @Override
+//            public void run() {
+//                Looper.prepare();
+//                try {
+//                    RealmInterprocessTest.super.runBare();
+//                } catch (Throwable throwable) {
+//                    throwableArray[0] = throwable;
+//                } finally {
+//                    latch.countDown();
+//                }
+//            }
+//        });
+//
+//        thread.start();
+//        TestHelper.awaitOrFail(latch);
+//
+//        if (throwableArray[0] != null) {
+//            throw throwableArray[0];
+//        }
+//    }
 
     // Helper handler to make it easy to interact with remote service process.
     @SuppressLint("HandlerLeak") // SuppressLint bug, doesn't work
@@ -154,9 +168,8 @@ public void handleMessage(Message msg) {
         }
     }
 
-    @Override
-    protected void setUp() throws Exception {
-        super.setUp();
+    @Before
+    public void setUp() throws Exception {
         Realm.deleteRealm(getConfiguration());
 
         // Starts the testing service.
@@ -170,8 +183,8 @@ private RealmConfiguration getConfiguration() {
         return new RealmConfiguration.Builder(getContext()).modules(new AllTypesModelModule()).build();
     }
 
-    @Override
-    protected void tearDown() throws Exception {
+    @After
+    public void tearDown() throws Exception {
         int counter = 10;
         if (testRealm != null) {
             testRealm.close();
@@ -192,7 +205,6 @@ protected void tearDown() throws Exception {
             Thread.sleep(300);
             counter--;
         }
-        super.tearDown();
     }
 
     // Calls this to trigger the next step of service process.
@@ -221,6 +233,10 @@ private void triggerServiceStep(RemoteProcessService.Step step) {
         return null;
     }
 
+    private Context getContext() {
+        return InstrumentationRegistry.getTargetContext();
+    }
+
     // Gets the remote process info if it is alive.
     private ActivityManager.RunningAppProcessInfo getRemoteProcessInfo() {
         ActivityManager manager = (ActivityManager) getContext().getSystemService(Context.ACTIVITY_SERVICE);
@@ -236,7 +252,9 @@ private void triggerServiceStep(RemoteProcessService.Step step) {
 
     // A. Opens a realm, closes it, then calls Runtime.getRuntime().exit(0).
     // 1. Waits 3 seconds to see if the service process existed.
-    public void testExitProcess() {
+    @Test
+    @UiThreadTest
+    public void exitProcess() {
         new InterprocessHandler(new Runnable() {
             @Override
             public void run() {
@@ -281,7 +299,9 @@ public void handleMessage(Message msg) {
 
     // 1. Main process creates Realm, write one object.
     // A. Service process opens Realm, check if there is one and only one object.
-    public void testCreateInitialRealm() throws InterruptedException {
+    @Test
+    @UiThreadTest
+    public void createInitialRealm() throws InterruptedException {
         new InterprocessHandler(new Runnable() {
             @Override
             public void run() {
diff --git a/realm/realm-library/src/androidTest/java/io/realm/internal/JNIRowTest.java b/realm/realm-library/src/androidTest/java/io/realm/internal/JNIRowTest.java
index 8b62d0765a..3eea1c4efd 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/internal/JNIRowTest.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/internal/JNIRowTest.java
@@ -18,7 +18,6 @@
 
 import android.support.test.InstrumentationRegistry;
 import android.support.test.runner.AndroidJUnit4;
-import android.test.MoreAsserts;
 
 import org.junit.After;
 import org.junit.Before;
@@ -37,6 +36,7 @@
 import static junit.framework.Assert.assertFalse;
 import static junit.framework.Assert.assertNull;
 import static junit.framework.Assert.assertTrue;
+import static org.junit.Assert.assertArrayEquals;
 import static org.junit.Assert.assertEquals;
 
 
@@ -97,7 +97,7 @@ public void execute(Table table) {
         assertEquals(1.3, row.getDouble(3), Double.MIN_NORMAL);
         assertEquals(true, row.getBoolean(4));
         assertEquals(new Date(0), row.getDate(5));
-        MoreAsserts.assertEquals(data, row.getBinaryByteArray(6));
+        assertArrayEquals(data, row.getBinaryByteArray(6));
 
         row.setString(0, "a");
         row.setLong(1, 1);
@@ -115,7 +115,7 @@ public void execute(Table table) {
         assertEquals(9.9, row.getDouble(3), Double.MIN_NORMAL);
         assertEquals(false, row.getBoolean(4));
         assertEquals(new Date(10000), row.getDate(5));
-        MoreAsserts.assertEquals(newData, row.getBinaryByteArray(6));
+        assertArrayEquals(newData, row.getBinaryByteArray(6));
     }
 
     @Test
diff --git a/realm/realm-library/src/androidTest/java/io/realm/internal/android/ISO8601UtilsTest.java b/realm/realm-library/src/androidTest/java/io/realm/internal/android/ISO8601UtilsTest.java
index 492b34b359..63042386a8 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/internal/android/ISO8601UtilsTest.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/internal/android/ISO8601UtilsTest.java
@@ -16,7 +16,11 @@
  */
 package io.realm.internal.android;
 
-import android.test.AndroidTestCase;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.junit.runner.RunWith;
 
 import java.text.ParseException;
 import java.text.ParsePosition;
@@ -26,17 +30,21 @@
 import java.util.TimeZone;
 import java.util.concurrent.TimeUnit;
 
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.fail;
+
 /**
  * @see ISO8601Utils
  * @see <a href="https://github.com/FasterXML/jackson-databind/blob/master/src/test/java/com/fasterxml/jackson/databind/util/ISO8601UtilsTest.java">Original Source</a>
  */
-public class ISO8601UtilsTest extends AndroidTestCase {
+@RunWith(AndroidJUnit4.class)
+public class ISO8601UtilsTest {
     private Date date;
     private Date dateWithoutTime;
     private Date dateZeroMillis;
     private Date dateZeroSecondAndMillis;
 
-    @Override
+    @Before
     public void setUp() {
         Calendar cal = new GregorianCalendar(2007, 8 - 1, 13, 19, 51, 23);
         cal.setTimeZone(TimeZone.getTimeZone("GMT"));
@@ -54,7 +62,8 @@ public void setUp() {
 
     }
 
-    public void testParse() throws java.text.ParseException {
+    @Test
+    public void parse() throws java.text.ParseException {
         Date d = ISO8601Utils.parse("2007-08-13T19:51:23.789Z", new ParsePosition(0));
         assertEquals(date, d);
 
@@ -65,7 +74,8 @@ public void testParse() throws java.text.ParseException {
         assertEquals(date, d);
     }
 
-    public void testParseShortDate() throws java.text.ParseException {
+    @Test
+    public void parseShortDate() throws java.text.ParseException {
         Date d = ISO8601Utils.parse("20070813T19:51:23.789Z", new ParsePosition(0));
         assertEquals(date, d);
 
@@ -76,7 +86,8 @@ public void testParseShortDate() throws java.text.ParseException {
         assertEquals(date, d);
     }
 
-    public void testParseShortTime() throws java.text.ParseException {
+    @Test
+    public void parseShortTime() throws java.text.ParseException {
         Date d = ISO8601Utils.parse("2007-08-13T195123.789Z", new ParsePosition(0));
         assertEquals(date, d);
 
@@ -87,7 +98,8 @@ public void testParseShortTime() throws java.text.ParseException {
         assertEquals(date, d);
     }
 
-    public void testParseShortDateTime() throws java.text.ParseException {
+    @Test
+    public void parseShortDateTime() throws java.text.ParseException {
         Date d = ISO8601Utils.parse("20070813T195123.789Z", new ParsePosition(0));
         assertEquals(date, d);
 
@@ -98,7 +110,8 @@ public void testParseShortDateTime() throws java.text.ParseException {
         assertEquals(date, d);
     }
 
-    public void testParseWithoutTime() throws ParseException {
+    @Test
+    public void parseWithoutTime() throws ParseException {
         Date d = ISO8601Utils.parse("2007-08-13Z", new ParsePosition(0));
         assertEquals(dateWithoutTime, d);
 
@@ -112,7 +125,8 @@ public void testParseWithoutTime() throws ParseException {
         assertEquals(dateWithoutTime, d);
     }
 
-    public void testParseOptional() throws java.text.ParseException {
+    @Test
+    public void parseOptional() throws java.text.ParseException {
         Date d = ISO8601Utils.parse("2007-08-13T19:51Z", new ParsePosition(0));
         assertEquals(dateZeroSecondAndMillis, d);
 
@@ -123,7 +137,8 @@ public void testParseOptional() throws java.text.ParseException {
         assertEquals(dateZeroSecondAndMillis, d);
     }
 
-    public void testTimeZoneDesignator() throws java.text.ParseException {
+    @Test
+    public void timeZoneDesignator() throws java.text.ParseException {
         Date d = ISO8601Utils.parse("2007-08-13T21:51+02:00", new ParsePosition(0));
         assertEquals(dateZeroSecondAndMillis, d);
 
@@ -134,7 +149,8 @@ public void testTimeZoneDesignator() throws java.text.ParseException {
         assertEquals(dateZeroSecondAndMillis, d);
     }
 
-    public void testParseRfc3339Examples() throws java.text.ParseException {
+    @Test
+    public void parseRfc3339Examples() throws java.text.ParseException {
         // Two digit milliseconds.
         Date d = ISO8601Utils.parse("1985-04-12T23:20:50.52Z", new ParsePosition(0));
         assertEquals(newDate(1985, 4, 12, 23, 20, 50, 520, 0), d);
@@ -155,7 +171,8 @@ public void testParseRfc3339Examples() throws java.text.ParseException {
         assertEquals(newDate(1937, 1, 1, 12, 0, 27, 870, 20), d);
     }
 
-    public void testFractionalSeconds() throws java.text.ParseException {
+    @Test
+    public void fractionalSeconds() throws java.text.ParseException {
         Date d = ISO8601Utils.parse("1970-01-01T00:00:00.9Z", new ParsePosition(0));
         assertEquals(newDate(1970, 1, 1, 0, 0, 0, 900, 0), d);
 
@@ -190,7 +207,8 @@ public void testFractionalSeconds() throws java.text.ParseException {
         assertEquals(newDate(1970, 1, 1, 0, 0, 0, 214, 2 * 60), d);
     }
 
-    public void testDecimalWithoutDecimalPointButNoFractionalSeconds() throws java.text.ParseException {
+    @Test
+    public void decimalWithoutDecimalPointButNoFractionalSeconds() throws java.text.ParseException {
         try {
             ISO8601Utils.parse("1970-01-01T00:00:00.Z", new ParsePosition(0));
             fail();
diff --git a/realm/realm-library/src/main/cpp/CMakeLists.txt b/realm/realm-library/src/main/cpp/CMakeLists.txt
index d1bd38ee21..70311a5dc4 100644
--- a/realm/realm-library/src/main/cpp/CMakeLists.txt
+++ b/realm/realm-library/src/main/cpp/CMakeLists.txt
@@ -17,6 +17,13 @@
 ###########################################################################
 cmake_minimum_required(VERSION 3.6.0)
 
+FUNCTION(capitalizeFirstLetter var value)
+    string(SUBSTRING ${value} 0 1 firstLetter)
+    string(TOUPPER ${firstLetter} firstLetter)
+    string(REGEX REPLACE "^.(.*)" "${firstLetter}\\1" value "${value}")
+    set(${var} "${value}" PARENT_SCOPE)
+ENDFUNCTION(capitalizeFirstLetter)
+
 list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/CMake")
 
 # find javah
@@ -52,9 +59,17 @@ else()
     set(build_SYNC ON)
 endif()
 
-# Generate JNI header files. Each build has its own JNI header in its build_dir/jni_include.
+# Format strings used to represent build parameters: Variant and Type
 string(TOLOWER ${CMAKE_BUILD_TYPE} build_type_FOLDER)
-set(classes_PATH ${CMAKE_SOURCE_DIR}/../../../build/intermediates/classes/${REALM_FLAVOR}/${build_type_FOLDER}/)
+set(realmFlavorCap "")
+set(buildTypeCap "")
+capitalizeFirstLetter(realmFlavorCap "${REALM_FLAVOR}")
+capitalizeFirstLetter(buildTypeCap "${CMAKE_BUILD_TYPE}")
+
+# Generate JNI header files. Each build has its own JNI header in its build_dir/jni_include.
+# WARNING: The classes_PATH is not part the public API offered by the Android Gradle Plugin
+# so it might change without warning when upgrading the plugin.
+set(classes_PATH ${CMAKE_SOURCE_DIR}/../../../build/intermediates/javac/${REALM_FLAVOR}${buildTypeCap}/compile${realmFlavorCap}${buildTypeCap}JavaWithJavac/classes/)
 set(classes_LIST
     io.realm.RealmQuery
     io.realm.internal.Table io.realm.internal.CheckedRow
