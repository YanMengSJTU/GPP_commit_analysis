diff --git a/CHANGELOG.md b/CHANGELOG.md
index df4a90869d..e267c9cde2 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -4,7 +4,12 @@
 
 * Throws a better exception message when calling `RealmObjectSchema.addField()` with a `RealmModel` class (#3388).
 * Use https for Realm version checker (#4043).
+* Prevent Realms Gradle plugin from transitively forcing specific versions of Google Build Tools onto downstream projects (#5640).
 
+### Internal
+
+* Upgraded to Realm Sync 2.2.9
+* Upgraded to Realm Core 5.1.2
 
 ## 4.3.1 (2017-12-06)
 
diff --git a/dependencies.list b/dependencies.list
index 3703b72124..da2d4d0168 100644
--- a/dependencies.list
+++ b/dependencies.list
@@ -1,7 +1,7 @@
 # Realm Sync Core release used by Realm Java
 # https://github.com/realm/realm-sync/releases
-REALM_SYNC_VERSION=2.1.8
-REALM_SYNC_SHA256=14e4aabe270638aa96f84396be27985b6809e532183035c5150dd2933d676248
+REALM_SYNC_VERSION=2.2.9
+REALM_SYNC_SHA256=d770d639d2b187c15e6d0bc798b909f5b424d61444f1f83f9e56f5be43e96afc
 
 # Object Server Release used by Integration tests. Installed using NPM.
 # Use `npm view realm-object-server versions` to get a list of available versions.
diff --git a/gradle-plugin/build.gradle b/gradle-plugin/build.gradle
index d9a9d8695e..f4eb2c691c 100644
--- a/gradle-plugin/build.gradle
+++ b/gradle-plugin/build.gradle
@@ -52,10 +52,11 @@ dependencies {
      and this https://www.littlerobots.nl/blog/Whats-next-for-android-apt/ for more info.
    */
     compile 'com.neenbedankt.gradle.plugins:android-apt:1.8' //TODO: https://www.littlerobots.nl/blog/Whats-next-for-android-apt/
-    provided 'com.android.tools.build:gradle:3.1.0-alpha06'
+    compileOnly 'com.android.tools.build:gradle:3.1.0-alpha06'
 
     testCompile gradleTestKit()
     testCompile 'junit:junit:4.12'
+    testCompile 'com.android.tools.build:gradle:3.1.0-alpha06'
 }
 
 //for Ant filter
diff --git a/realm-transformer/build.gradle b/realm-transformer/build.gradle
index ac6b0e2e07..5fdb8f61c8 100644
--- a/realm-transformer/build.gradle
+++ b/realm-transformer/build.gradle
@@ -60,7 +60,7 @@ dependencies {
     compile localGroovy()
     compile gradleApi()
     compile "io.realm:realm-annotations:${version}"
-    provided 'com.android.tools.build:gradle:3.1.0-alpha06'
+    compileOnly 'com.android.tools.build:gradle:3.1.0-alpha06'
     compile 'org.javassist:javassist:3.22.0-GA'
 
     testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
diff --git a/realm/realm-library/src/main/cpp/io_realm_internal_OsObject.cpp b/realm/realm-library/src/main/cpp/io_realm_internal_OsObject.cpp
index 3099c70d56..8d07d997ce 100644
--- a/realm/realm-library/src/main/cpp/io_realm_internal_OsObject.cpp
+++ b/realm/realm-library/src/main/cpp/io_realm_internal_OsObject.cpp
@@ -23,7 +23,6 @@
 #include <object_schema.hpp>
 #include <object.hpp>
 #include <shared_realm.hpp>
-#include <util/format.hpp>
 
 #include "util.hpp"
 #include "java_class_global_def.hpp"
diff --git a/realm/realm-library/src/main/cpp/io_realm_internal_OsRealmConfig.cpp b/realm/realm-library/src/main/cpp/io_realm_internal_OsRealmConfig.cpp
index 1da13db3ce..928e244ca5 100644
--- a/realm/realm-library/src/main/cpp/io_realm_internal_OsRealmConfig.cpp
+++ b/realm/realm-library/src/main/cpp/io_realm_internal_OsRealmConfig.cpp
@@ -362,7 +362,7 @@ JNIEXPORT void JNICALL Java_io_realm_internal_OsRealmConfig_nativeSetSyncConfigS
                                                        "(Ljava/lang/String;Ljava/lang/String;I)Z", true);
 
             std::function<sync::Session::SSLVerifyCallback> ssl_verify_callback =
-                [](const std::string server_address, REALM_UNUSED realm::sync::Client::port_type server_port,
+                [](const std::string server_address, REALM_UNUSED realm::sync::Session::port_type server_port,
                    const char* pem_data, size_t pem_size, REALM_UNUSED int preverify_ok, int depth) {
 
                     Log::d("Callback to Java requesting certificate validation for host %1",
diff --git a/realm/realm-library/src/main/cpp/io_realm_internal_OsSchemaInfo.cpp b/realm/realm-library/src/main/cpp/io_realm_internal_OsSchemaInfo.cpp
index 0f428436a7..744a6ea7af 100644
--- a/realm/realm-library/src/main/cpp/io_realm_internal_OsSchemaInfo.cpp
+++ b/realm/realm-library/src/main/cpp/io_realm_internal_OsSchemaInfo.cpp
@@ -19,8 +19,6 @@
 #include <schema.hpp>
 #include <object_schema.hpp>
 #include <property.hpp>
-#include <util/format.hpp>
-
 #include "java_accessor.hpp"
 #include "java_exception_def.hpp"
 #include "util.hpp"
diff --git a/realm/realm-library/src/main/cpp/io_realm_internal_Table.cpp b/realm/realm-library/src/main/cpp/io_realm_internal_Table.cpp
index 1618c48ad9..346d614e57 100644
--- a/realm/realm-library/src/main/cpp/io_realm_internal_Table.cpp
+++ b/realm/realm-library/src/main/cpp/io_realm_internal_Table.cpp
@@ -21,7 +21,6 @@
 #include "io_realm_internal_Table.h"
 
 #include "shared_realm.hpp"
-#include "util/format.hpp"
 
 #include "java_accessor.hpp"
 #include "java_exception_def.hpp"
diff --git a/realm/realm-library/src/main/cpp/java_accessor.hpp b/realm/realm-library/src/main/cpp/java_accessor.hpp
index 333f77a3f4..3db10074c3 100644
--- a/realm/realm-library/src/main/cpp/java_accessor.hpp
+++ b/realm/realm-library/src/main/cpp/java_accessor.hpp
@@ -26,8 +26,7 @@
 #include <realm/table.hpp>
 
 #include <object_accessor.hpp>
-#include <util/any.hpp>
-#include <util/format.hpp>
+#include <realm/util/any.hpp>
 
 #include "java_class_global_def.hpp"
 #include "java_exception_def.hpp"
diff --git a/realm/realm-library/src/main/cpp/java_sort_descriptor.hpp b/realm/realm-library/src/main/cpp/java_sort_descriptor.hpp
index 81384f9a15..92893bdca0 100644
--- a/realm/realm-library/src/main/cpp/java_sort_descriptor.hpp
+++ b/realm/realm-library/src/main/cpp/java_sort_descriptor.hpp
@@ -19,8 +19,6 @@
 
 #include <jni.h>
 
-#include "descriptor_ordering.hpp"
-
 namespace realm {
 
 namespace jni_util {
diff --git a/realm/realm-library/src/main/cpp/jni_impl/android_logger.cpp b/realm/realm-library/src/main/cpp/jni_impl/android_logger.cpp
index 8e3972aea0..80bb4d78f5 100644
--- a/realm/realm-library/src/main/cpp/jni_impl/android_logger.cpp
+++ b/realm/realm-library/src/main/cpp/jni_impl/android_logger.cpp
@@ -16,8 +16,6 @@
 
 #include <cstring>
 
-#include "util/format.hpp"
-
 #include "android_logger.hpp"
 
 using namespace realm;
diff --git a/realm/realm-library/src/main/cpp/jni_util/java_exception_thrower.cpp b/realm/realm-library/src/main/cpp/jni_util/java_exception_thrower.cpp
index 6278fd7fb8..9ec171aad7 100644
--- a/realm/realm-library/src/main/cpp/jni_util/java_exception_thrower.cpp
+++ b/realm/realm-library/src/main/cpp/jni_util/java_exception_thrower.cpp
@@ -17,8 +17,6 @@
 #include "java_exception_thrower.hpp"
 #include "log.hpp"
 
-#include <util/format.hpp>
-
 using namespace realm::util;
 using namespace realm::jni_util;
 
diff --git a/realm/realm-library/src/main/cpp/jni_util/log.hpp b/realm/realm-library/src/main/cpp/jni_util/log.hpp
index 98cc58d1c9..db61e5fc7a 100644
--- a/realm/realm-library/src/main/cpp/jni_util/log.hpp
+++ b/realm/realm-library/src/main/cpp/jni_util/log.hpp
@@ -27,7 +27,6 @@
 #include "io_realm_log_LogLevel.h"
 
 #include "realm/util/logger.hpp"
-#include "util/format.hpp"
 
 #define TR_ENTER()                                                                                                   \
     if (realm::jni_util::Log::s_level <= realm::jni_util::Log::trace) {                                              \
@@ -114,32 +113,32 @@ class Log {
     template <typename... Args>
     inline static void t(const char* fmt, Args&&... args)
     {
-        shared().log(trace, REALM_JNI_TAG, nullptr, _impl::format(fmt, {_impl::Printable(args)...}).c_str());
+        shared().log(trace, REALM_JNI_TAG, nullptr, util::format(fmt, {util::Printable(args)...}).c_str());
     }
     template <typename... Args>
     inline static void d(const char* fmt, Args&&... args)
     {
-        shared().log(debug, REALM_JNI_TAG, nullptr, _impl::format(fmt, {_impl::Printable(args)...}).c_str());
+        shared().log(debug, REALM_JNI_TAG, nullptr, util::format(fmt, {util::Printable(args)...}).c_str());
     }
     template <typename... Args>
     inline static void i(const char* fmt, Args&&... args)
     {
-        shared().log(info, REALM_JNI_TAG, nullptr, _impl::format(fmt, {_impl::Printable(args)...}).c_str());
+        shared().log(info, REALM_JNI_TAG, nullptr, util::format(fmt, {util::Printable(args)...}).c_str());
     }
     template <typename... Args>
     inline static void w(const char* fmt, Args&&... args)
     {
-        shared().log(warn, REALM_JNI_TAG, nullptr, _impl::format(fmt, {_impl::Printable(args)...}).c_str());
+        shared().log(warn, REALM_JNI_TAG, nullptr, util::format(fmt, {util::Printable(args)...}).c_str());
     }
     template <typename... Args>
     inline static void e(const char* fmt, Args&&... args)
     {
-        shared().log(error, REALM_JNI_TAG, nullptr, _impl::format(fmt, {_impl::Printable(args)...}).c_str());
+        shared().log(error, REALM_JNI_TAG, nullptr, util::format(fmt, {util::Printable(args)...}).c_str());
     }
     template <typename... Args>
     inline static void f(const char* fmt, Args&&... args)
     {
-        shared().log(fatal, REALM_JNI_TAG, nullptr, _impl::format(fmt, {_impl::Printable(args)...}).c_str());
+        shared().log(fatal, REALM_JNI_TAG, nullptr, util::format(fmt, {util::Printable(args)...}).c_str());
     }
 
     static realm::util::RootLogger::Level convert_to_core_log_level(Level level);
diff --git a/realm/realm-library/src/main/cpp/object-store b/realm/realm-library/src/main/cpp/object-store
index 2b7db38bd1..8517ee7f43 160000
--- a/realm/realm-library/src/main/cpp/object-store
+++ b/realm/realm-library/src/main/cpp/object-store
@@ -1 +1 @@
-Subproject commit 2b7db38bd112c82c55a0fa4bbecd24f652d45ba1
+Subproject commit 8517ee7f4378fe0f54945b3e4973766ff65e455d
diff --git a/realm/realm-library/src/main/cpp/util.hpp b/realm/realm-library/src/main/cpp/util.hpp
index 21bb35c354..6161f2ad36 100644
--- a/realm/realm-library/src/main/cpp/util.hpp
+++ b/realm/realm-library/src/main/cpp/util.hpp
@@ -32,8 +32,6 @@
 #include <realm/table.hpp>
 #include <realm/util/safe_int_ops.hpp>
 
-#include <util/format.hpp>
-
 #include "io_realm_internal_Util.h"
 
 #include "java_exception_def.hpp"
diff --git a/realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/AuthTests.java b/realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/AuthTests.java
index bc3f4e6f39..30555e9628 100644
--- a/realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/AuthTests.java
+++ b/realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/AuthTests.java
@@ -534,6 +534,7 @@ public void loggedOut(SyncUser user) {
     // The pre-emptive token refresh subsystem should function, and properly refresh the access token.
     // WARNING: this test can fail if there's a difference between the server's and device's clock, causing the
     // refresh access token to be too far in time.
+    @Ignore("Test still times out https://github.com/realm/realm-java/issues/5681")
     @Test(timeout = 30000)
     public void preemptiveTokenRefresh() throws NoSuchFieldException, IllegalAccessException, InterruptedException {
         SyncUser user = UserFactory.createUniqueUser(Constants.AUTH_URL);
