diff --git a/CHANGELOG.md b/CHANGELOG.md
index 7528cf2b67..8d74041d3a 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -9,7 +9,7 @@
 * Transient fields are now allowed in model classes, but are implicitly treated as having the `@Ignore` annotation (#4279).
 * Added `Realm.refresh()` and `DynamicRealm.refresh()` (#3476).
 * Added `Realm.getInstanceAsync()` and `DynamicRealm.getInstanceAsync()` (#2299).
-* Added `DynamicRealmObject#linkingObjects(String,String) to support linking objects on `DynamicRealm` (#4492).
+* Added `DynamicRealmObject#linkingObjects(String,String)` to support linking objects on `DynamicRealm` (#4492).
 
 ### Bug Fixes
 
diff --git a/realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java b/realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java
index 6bd6945524..4caa6d94c1 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java
@@ -37,6 +37,7 @@
 import io.realm.entities.Dog;
 import io.realm.entities.NonLatinFieldNames;
 import io.realm.entities.Owner;
+import io.realm.internal.async.RealmThreadPoolExecutor;
 import io.realm.log.LogLevel;
 import io.realm.log.RealmLog;
 import io.realm.rule.RunInLooperThread;
@@ -411,10 +412,14 @@ public void onError(Throwable error) {
     // callbacks, the callback should be cleared.
     @Test
     @RunTestInLooperThread
-    public void executeTransactionAsync_callbacksShouldBeClearedBeforeCalling() {
+    public void executeTransactionAsync_callbacksShouldBeClearedBeforeCalling()
+            throws NoSuchFieldException, IllegalAccessException {
         final AtomicInteger callbackCounter = new AtomicInteger(0);
         final Realm foregroundRealm = looperThread.getRealm();
 
+        // Use single thread executor
+        TestHelper.replaceRealmThreadExecutor(RealmThreadPoolExecutor.newSingleThreadExecutor());
+
         // To reproduce the issue, the posted callback needs to arrived before the Object Store did_change called.
         // We just disable the auto refresh here then the did_change won't be called.
         foregroundRealm.setAutoRefresh(false);
@@ -440,15 +445,6 @@ public void onSuccess() {
             @Override
             public void execute(Realm realm) {
                 realm.createObject(AllTypes.class);
-                // Delay to post this to ensure the async transaction posted callback will arrive first.
-                looperThread.postRunnableDelayed(new Runnable() {
-                    @Override
-                    public void run() {
-                        // Manually call refresh, so the did_change will be triggered.
-                        foregroundRealm.sharedRealm.refresh();
-                        foregroundRealm.setAutoRefresh(true);
-                    }
-                }, 50);
             }
         }, new Realm.Transaction.OnSuccess() {
             @Override
@@ -458,6 +454,17 @@ public void onSuccess() {
                 looperThread.testComplete();
             }
         });
+
+        // Wait for all async tasks finish to ensure the async transaction posted callback will arrive first.
+        TestHelper.resetRealmThreadExecutor();
+        looperThread.postRunnable(new Runnable() {
+            @Override
+            public void run() {
+                // Manually call refresh, so the did_change will be triggered.
+                foregroundRealm.sharedRealm.refresh();
+                foregroundRealm.setAutoRefresh(true);
+            }
+        });
     }
 
     // ************************************
