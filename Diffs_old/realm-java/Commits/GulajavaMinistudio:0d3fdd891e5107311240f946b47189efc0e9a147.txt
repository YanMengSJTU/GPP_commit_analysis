diff --git a/CHANGELOG.md b/CHANGELOG.md
index f5ac70303e..36bb3c07ee 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -29,12 +29,12 @@
 ### Internal
 
 * Use `OsList` instead of `OsResults` to add notification token on for `RealmList<RealmModel>`.
-* Updated Gralde and plugins to support Android Studio `3.0.0` (#5472).
+* Updated Gradle and plugins to support Android Studio `3.0.0` (#5472).
 
 ### Credits
 
 * Thanks to @tbsandee for fixing a typo (#5548).
-* Thanks to @vivekkiran for updating Gralde and plugins to support Android Studio `3.0.0` (#5472).
+* Thanks to @vivekkiran for updating Gradle and plugins to support Android Studio `3.0.0` (#5472).
 
 
 ## 4.2.0 (2017-11-17)
diff --git a/examples/encryptionExample/build.gradle b/examples/encryptionExample/build.gradle
index 52da22b404..10707b22ae 100644
--- a/examples/encryptionExample/build.gradle
+++ b/examples/encryptionExample/build.gradle
@@ -6,7 +6,7 @@ android {
     buildToolsVersion rootProject.buildTools
 
     defaultConfig {
-        applicationId 'examples.realm.io.encryptionExample'
+        applicationId 'io.realm.examples.encryption'
         targetSdkVersion rootProject.sdkVersion
         minSdkVersion rootProject.minSdkVersion
         versionCode 1
diff --git a/examples/encryptionExample/src/main/AndroidManifest.xml b/examples/encryptionExample/src/main/AndroidManifest.xml
index 00f9f6c7be..93190053ee 100644
--- a/examples/encryptionExample/src/main/AndroidManifest.xml
+++ b/examples/encryptionExample/src/main/AndroidManifest.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
-<manifest package="io.realm.examples.encryptionexample"
+<manifest package="io.realm.examples.encryption"
           xmlns:android="http://schemas.android.com/apk/res/android">
 
     <application
diff --git a/examples/encryptionExample/src/main/java/io/realm/examples/encryptionexample/EncryptionExampleActivity.java b/examples/encryptionExample/src/main/java/io/realm/examples/encryption/EncryptionExampleActivity.java
similarity index 83%
rename from examples/encryptionExample/src/main/java/io/realm/examples/encryptionexample/EncryptionExampleActivity.java
rename to examples/encryptionExample/src/main/java/io/realm/examples/encryption/EncryptionExampleActivity.java
index d40a95ce1a..fd5ae8d804 100644
--- a/examples/encryptionExample/src/main/java/io/realm/examples/encryptionexample/EncryptionExampleActivity.java
+++ b/examples/encryptionExample/src/main/java/io/realm/examples/encryption/EncryptionExampleActivity.java
@@ -14,10 +14,11 @@
  * limitations under the License.
  */
 
-package io.realm.examples.encryptionexample;
+package io.realm.examples.encryption;
 
 import android.app.Activity;
 import android.os.Bundle;
+import android.util.Base64;
 import android.util.Log;
 
 import java.security.SecureRandom;
@@ -42,6 +43,13 @@ protected void onCreate(Bundle savedInstanceState) {
         // * http://nelenkov.blogspot.dk/2012/05/storing-application-secrets-in-androids.html
         byte[] key = new byte[64];
         new SecureRandom().nextBytes(key);
+
+        // An encrypted Realm file can be opened in Realm Studio by using a Hex encoded version
+        // of the key. Copy the key from Logcat, then download the Realm file from the device using
+        // the method described here: https://stackoverflow.com/a/28486297/1389357
+        // The path is normally `/data/data/io.realm.examples.encryption/files/default.realm`
+        Log.i("RealmEncryptionKey", Util.bytesToHex(key));
+
         RealmConfiguration realmConfiguration = new RealmConfiguration.Builder()
                 .encryptionKey(key)
                 .build();
diff --git a/examples/encryptionExample/src/main/java/io/realm/examples/encryptionexample/MyApplication.java b/examples/encryptionExample/src/main/java/io/realm/examples/encryption/MyApplication.java
similarity index 94%
rename from examples/encryptionExample/src/main/java/io/realm/examples/encryptionexample/MyApplication.java
rename to examples/encryptionExample/src/main/java/io/realm/examples/encryption/MyApplication.java
index 83fc8be016..cb3cad7472 100644
--- a/examples/encryptionExample/src/main/java/io/realm/examples/encryptionexample/MyApplication.java
+++ b/examples/encryptionExample/src/main/java/io/realm/examples/encryption/MyApplication.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package io.realm.examples.encryptionexample;
+package io.realm.examples.encryption;
 
 import android.app.Application;
 
diff --git a/examples/encryptionExample/src/main/java/io/realm/examples/encryptionexample/Person.java b/examples/encryptionExample/src/main/java/io/realm/examples/encryption/Person.java
similarity index 95%
rename from examples/encryptionExample/src/main/java/io/realm/examples/encryptionexample/Person.java
rename to examples/encryptionExample/src/main/java/io/realm/examples/encryption/Person.java
index a2a550e4ff..d81f3069c7 100644
--- a/examples/encryptionExample/src/main/java/io/realm/examples/encryptionexample/Person.java
+++ b/examples/encryptionExample/src/main/java/io/realm/examples/encryption/Person.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package io.realm.examples.encryptionexample;
+package io.realm.examples.encryption;
 
 import io.realm.RealmObject;
 
diff --git a/examples/encryptionExample/src/main/java/io/realm/examples/encryption/Util.java b/examples/encryptionExample/src/main/java/io/realm/examples/encryption/Util.java
new file mode 100644
index 0000000000..2e2bbc1543
--- /dev/null
+++ b/examples/encryptionExample/src/main/java/io/realm/examples/encryption/Util.java
@@ -0,0 +1,33 @@
+/*
+ * Copyright 2017 Realm Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package io.realm.examples.encryption;
+
+public class Util {
+
+    private final static char[] hexArray = "0123456789ABCDEF".toCharArray();
+
+    //Original source: https://stackoverflow.com/a/9855338/1389357
+    public static String bytesToHex(byte[] bytes) {
+        char[] hexChars = new char[bytes.length * 2];
+        for ( int j = 0; j < bytes.length; j++ ) {
+            int v = bytes[j] & 0xFF;
+            hexChars[j * 2] = hexArray[v >>> 4];
+            hexChars[j * 2 + 1] = hexArray[v & 0x0F];
+        }
+        return new String(hexChars);
+    }
+
+}
diff --git a/realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/ProcessCommitTests.java b/realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/ProcessCommitTests.java
index b477f33609..08ba70684e 100644
--- a/realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/ProcessCommitTests.java
+++ b/realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/ProcessCommitTests.java
@@ -19,11 +19,11 @@
 import android.os.Looper;
 import android.support.test.runner.AndroidJUnit4;
 
-import org.junit.Before;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
+import java.io.IOException;
 import java.util.UUID;
 import java.util.concurrent.atomic.AtomicInteger;
 
@@ -52,8 +52,9 @@
     @Rule
     public RunWithRemoteService remoteService = new RunWithRemoteService();
 
-    @Before
-    public void before() throws Exception {
+    @Override
+    public void setupTest() throws IOException {
+        super.setupTest();
         UserFactory.resetInstance();
     }
 
