diff --git a/dependencies.list b/dependencies.list
index c7acfe203e..3a595eb7d2 100644
--- a/dependencies.list
+++ b/dependencies.list
@@ -5,4 +5,4 @@ REALM_SYNC_SHA256=3a558b10ecab3e8dbf6cbceae7fe40af38ad8d8467ddd1fe036ce92c1e7810
 
 # Object Server Release used by Integration tests. Installed using NPM.
 # Use `npm view realm-object-server versions` to get a list of available versions.
-REALM_OBJECT_SERVER_DE_VERSION=2.0.0-alpha.44
+REALM_OBJECT_SERVER_DE_VERSION=2.0.0-alpha.46
diff --git a/realm/realm-library/src/syncIntegrationTest/java/io/realm/PermissionManagerTests.java b/realm/realm-library/src/syncIntegrationTest/java/io/realm/PermissionManagerTests.java
index 5d5b06f149..070f9fa348 100644
--- a/realm/realm-library/src/syncIntegrationTest/java/io/realm/PermissionManagerTests.java
+++ b/realm/realm-library/src/syncIntegrationTest/java/io/realm/PermissionManagerTests.java
@@ -649,7 +649,6 @@ public void onError(ObjectServerError error) {
 
     @Test
     @RunTestInLooperThread(emulateMainThread = true)
-    @Ignore("See https://github.com/realm/ros/issues/429")
     public void applyPermissions_wrongUrlFails() {
         String wrongUrl = createRemoteRealm(user, "test") + "-notexisting";
 
@@ -670,7 +669,8 @@ public void onSuccess() {
 
             @Override
             public void onError(ObjectServerError error) {
-                assertEquals(ErrorCode.ACCESS_DENIED, error.getErrorCode());
+                // FIXME: Should be 614, see https://github.com/realm/ros/issues/429
+                assertEquals(ErrorCode.INVALID_PARAMETERS, error.getErrorCode());
                 looperThread.testComplete();
             }
         });
diff --git a/realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/PartialSyncTests.java b/realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/PartialSyncTests.java
index ffb89ac860..4bc73892f1 100644
--- a/realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/PartialSyncTests.java
+++ b/realm/realm-library/src/syncIntegrationTest/java/io/realm/objectserver/PartialSyncTests.java
@@ -4,7 +4,6 @@
 import android.os.HandlerThread;
 import android.support.test.runner.AndroidJUnit4;
 
-import org.junit.Ignore;
 import org.junit.Rule;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -18,13 +17,13 @@
 import io.realm.SyncManager;
 import io.realm.SyncUser;
 import io.realm.TestHelper;
+import io.realm.TestSyncConfigurationFactory;
 import io.realm.exceptions.RealmException;
 import io.realm.objectserver.model.PartialSyncModule;
 import io.realm.objectserver.model.PartialSyncObjectA;
 import io.realm.objectserver.model.PartialSyncObjectB;
 import io.realm.objectserver.utils.Constants;
 import io.realm.objectserver.utils.UserFactory;
-import io.realm.TestSyncConfigurationFactory;
 
 import static org.hamcrest.number.OrderingComparison.greaterThan;
 import static org.junit.Assert.assertEquals;
@@ -39,23 +38,22 @@
     public TestSyncConfigurationFactory configFactory = new TestSyncConfigurationFactory();
 
     @Test
-    @Ignore("See https://github.com/realm/realm-java/issues/5375")
     public void partialSync() throws InterruptedException {
         SyncUser user = UserFactory.createUniqueUser(Constants.AUTH_URL);
-        SyncUser adminUser = UserFactory.createAdminUser(Constants.AUTH_URL);
 
-        final SyncConfiguration partialSyncConfig = configFactory
+        final SyncConfiguration syncConfig = configFactory
                 .createSyncConfigurationBuilder(user, Constants.SYNC_SERVER_URL)
+                .waitForInitialRemoteData()
                 .modules(new PartialSyncModule())
-                .partialRealm()
                 .build();
-        SyncConfiguration adminConfig = configFactory
-                .createSyncConfigurationBuilder(adminUser, partialSyncConfig.getServerUrl().toString())
+
+        final SyncConfiguration partialSyncConfig = configFactory
+                .createSyncConfigurationBuilder(user, Constants.SYNC_SERVER_URL)
                 .modules(new PartialSyncModule())
+                .partialRealm()
                 .build();
 
-        // Using Admin user, populate the Realm.
-        Realm realm = Realm.getInstance(adminConfig);
+        Realm realm = Realm.getInstance(syncConfig);
         realm.beginTransaction();
         PartialSyncObjectA objectA = realm.createObject(PartialSyncObjectA.class);
         objectA.setNumber(0);
@@ -93,8 +91,9 @@ public void partialSync() throws InterruptedException {
         }
         realm.commitTransaction();
 
-        SyncManager.getSession(adminConfig).uploadAllLocalChanges();
+        SyncManager.getSession(syncConfig).uploadAllLocalChanges();
         realm.close();
+        Realm.deleteRealm(syncConfig);
 
         final CountDownLatch latch = new CountDownLatch(2);
 
