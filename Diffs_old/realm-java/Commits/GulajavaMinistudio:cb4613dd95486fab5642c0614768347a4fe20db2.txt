diff --git a/CHANGELOG.md b/CHANGELOG.md
index b9db98ed37..76933384dd 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -23,10 +23,12 @@
 ### Internal
 
 * Use `OsList` instead of `OsResults` to add notification token on for `RealmList<RealmModel>`.
+* Updated Gralde and plugins to support Android Studio `3.0.0` (#5472).
 
 ### Credits
 
 * Thanks to @tbsandee for fixing a typo (#5548).
+* Thanks to @vivekkiran for updating Gralde and plugins to support Android Studio `3.0.0` (#5472).
 
 
 ## 4.2.0 (2017-11-17)
diff --git a/Dockerfile b/Dockerfile
index e2c50e9865..94700dcac9 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -52,9 +52,9 @@ RUN sdkmanager --update
 # Accept all licenses
 RUN yes y | sdkmanager --licenses
 RUN sdkmanager 'platform-tools'
-RUN sdkmanager 'build-tools;26.0.2'
+RUN sdkmanager 'build-tools;27.0.1'
 RUN sdkmanager 'extras;android;m2repository'
-RUN sdkmanager 'platforms;android-26'
+RUN sdkmanager 'platforms;android-27'
 RUN sdkmanager 'cmake;3.6.4111459'
 
 # Install the NDK
diff --git a/README.md b/README.md
index e6b22c7e0b..d7b70b59ba 100644
--- a/README.md
+++ b/README.md
@@ -1,5 +1,8 @@
 ![Realm](logo.png)
 
+[![bintray](https://api.bintray.com/packages/realm/maven/realm-gradle-plugin/images/download.svg) ](https://bintray.com/realm/maven/realm-gradle-plugin/_latestVersion)
+[![License](https://img.shields.io/badge/License-Apache-blue.svg)](https://github.com/realm/realm-java/blob/master/LICENSE)
+
 Realm is a mobile database that runs directly inside phones, tablets or wearables.
 This repository holds the source code for the Java version of Realm, which currently runs only on Android.
 
@@ -21,18 +24,20 @@ The API reference is located at [realm.io/docs/java/api](https://realm.io/docs/j
 
 ## Getting Help
 
-- **Need help with your code?**: Look for previous questions on the [#realm tag](https://stackoverflow.com/questions/tagged/realm?sort=newest) — or [ask a new question](http://stackoverflow.com/questions/ask?tags=realm). We activtely monitor & answer questions on SO!
+- **Need help with your code?**: Look for previous questions on the [#realm tag](https://stackoverflow.com/questions/tagged/realm?sort=newest) — or [ask a new question](http://stackoverflow.com/questions/ask?tags=realm). We actively monitor & answer questions on StackOverflow!
 - **Have a bug to report?** [Open an issue](https://github.com/realm/realm-java/issues/new). If possible, include the version of Realm, a full log, the Realm file, and a project that shows the issue.
 - **Have a feature request?** [Open an issue](https://github.com/realm/realm-java/issues/new). Tell us what the feature should do, and why you want the feature.
 - Sign up for our [**Community Newsletter**](https://go.pardot.com/l/210132/2017-04-26/3j74l) to get regular tips, learn about other use-cases and get alerted of blogposts and tutorials about Realm.
 
 ## Using Snapshots
 
-If you want to test recent bugfixes or features that have not been packaged in an official release yet, you can use a **-SNAPSHOT** release of the current development version of Realm via Gradle, available on [Jfrog OSS](http://oss.jfrog.org/oss-snapshot-local/io/realm/realm-gradle-plugin/)
+If you want to test recent bugfixes or features that have not been packaged in an official release yet, you can use a **-SNAPSHOT** release of the current development version of Realm via Gradle, available on [JFrog OSS](http://oss.jfrog.org/oss-snapshot-local/io/realm/realm-gradle-plugin/)
 
-```gradle
+```
 buildscript {
     repositories {
+        jcenter()
+        google()
         maven {
             url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'
         }
@@ -44,6 +49,8 @@ buildscript {
 
 allprojects {
     repositories {
+        jcenter()
+        google()
         maven {
             url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'
         }
@@ -59,10 +66,10 @@ In case you don't want to use the precompiled version, you can build Realm yours
 
 ### Prerequisites
 
- * Download the [**JDK 7**](http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html) or [**JDK 8**](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html) from Oracle and install it.
- * Download & install the Android SDK **Build-Tools 26.0.2**, **Android O (API 26)** (for example through Android Studio’s **Android SDK Manager**).
+ * Download the [**JDK 8**](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html) from Oracle and install it.
+ * Download & install the Android SDK **Build-Tools 27.0.1**, **Android Oreo (API 27)** (for example through Android Studio’s **Android SDK Manager**).
  * Install CMake from SDK manager in Android Studio ("SDK Tools" -> "CMake").
- * If you use Android Studio, Android Studio 3.0 or later is required.
+ * If you use Android Studio, Android Studio 3.0 or higher is required.
 
  * Realm currently requires version r10e of the NDK.  Download the one appropriate for your development platform, from the NDK [archive](https://developer.android.com/ndk/downloads/older_releases.html).
 You may unzip the file wherever you choose.  For macOS, a suggested location is `~/Library/Android`.  The download will unzip as the directory `android-ndk-r10e`.
@@ -154,8 +161,7 @@ Generating the Javadoc using the command above may generate warnings. The Javado
 
 ### Upgrading Gradle Wrappers
 
- All gradle projects in this repository have `wrapper` task to generate Gradle Wrappers. Those tasks refer `gradleVersion` propertiy defined in `/realm.properties` in order to determine Geadle Version of generating wrappers. After generating Gradle Wrappers, we need to modify `gradle/wrapper/gradle-wrapper.properties` to use `*-all.zip` distribution instead of `*-bin.zip` distribution.
-
+ All gradle projects in this repository have `wrapper` task to generate Gradle Wrappers. Those tasks refer to `gradleVersion` property defined in `/realm.properties` in order to determine Gradle Version of generating wrappers.
 We have a script `./tools/update_gradle_wrapper.sh` to automate these steps. When you update Gradle Wrappers, please obey the following steps.
 
  1. Edit `gradleVersion` property in defined in `/realm.properties` to new Gradle Wrapper version.
diff --git a/examples/build.gradle b/examples/build.gradle
index 621691d9f1..317a72b51c 100644
--- a/examples/build.gradle
+++ b/examples/build.gradle
@@ -1,5 +1,6 @@
-project.ext.sdkVersion = 26
-project.ext.buildTools = '26.0.2'
+project.ext.sdkVersion = 27
+project.ext.minSdkVersion = 15
+project.ext.buildTools = '27.0.1'
 
 // Don't cache SNAPSHOT (changing) dependencies.
 configurations.all {
@@ -32,7 +33,7 @@ allprojects {
             maven { url 'https://jitpack.io' }
         }
         dependencies {
-            classpath 'com.android.tools.build:gradle:3.0.0-rc2'
+            classpath 'com.android.tools.build:gradle:3.0.0'
             classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
             classpath "io.realm:realm-gradle-plugin:${currentVersion}"
         }
diff --git a/examples/encryptionExample/build.gradle b/examples/encryptionExample/build.gradle
index 1d7baebd33..52da22b404 100644
--- a/examples/encryptionExample/build.gradle
+++ b/examples/encryptionExample/build.gradle
@@ -8,7 +8,7 @@ android {
     defaultConfig {
         applicationId 'examples.realm.io.encryptionExample'
         targetSdkVersion rootProject.sdkVersion
-        minSdkVersion 14
+        minSdkVersion rootProject.minSdkVersion
         versionCode 1
         versionName '1.0'
     }
diff --git a/examples/gradle.properties b/examples/gradle.properties
index 69f84662c3..9c2c6c4094 100644
--- a/examples/gradle.properties
+++ b/examples/gradle.properties
@@ -1,5 +1,6 @@
 org.gradle.jvmargs=-Xmx2048M
 org.gradle.caching=true
+android.enableD8=true
 
 # disable AAPT2 to work around an issue of Robolectric in unitTestExample https://github.com/robolectric/robolectric/issues/3169
 android.enableAapt2=false
diff --git a/examples/gradle/wrapper/gradle-wrapper.jar b/examples/gradle/wrapper/gradle-wrapper.jar
index d457a1a990..0bdf3fe941 100644
Binary files a/examples/gradle/wrapper/gradle-wrapper.jar and b/examples/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/examples/gradle/wrapper/gradle-wrapper.properties b/examples/gradle/wrapper/gradle-wrapper.properties
index c583957d2b..702c4b68b8 100644
--- a/examples/gradle/wrapper/gradle-wrapper.properties
+++ b/examples/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.2.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.3.1-all.zip
diff --git a/examples/gradlew.bat b/examples/gradlew.bat
old mode 100644
new mode 100755
diff --git a/examples/gridViewExample/build.gradle b/examples/gridViewExample/build.gradle
index 10615bfbe1..f10dad85fa 100644
--- a/examples/gridViewExample/build.gradle
+++ b/examples/gridViewExample/build.gradle
@@ -8,7 +8,7 @@ android {
     defaultConfig {
         applicationId 'io.realm.examples.realmgridview'
         targetSdkVersion rootProject.sdkVersion
-        minSdkVersion 15
+        minSdkVersion rootProject.minSdkVersion
         versionCode 1
         versionName "1.0"
     }
@@ -38,5 +38,5 @@ android {
 }
 
 dependencies {
-    implementation 'com.google.code.gson:gson:2.5'
+    implementation 'com.google.code.gson:gson:2.8.2'
 }
diff --git a/examples/introExample/build.gradle b/examples/introExample/build.gradle
index fdf0d2dfdc..dc13980d3b 100644
--- a/examples/introExample/build.gradle
+++ b/examples/introExample/build.gradle
@@ -8,7 +8,7 @@ android {
     defaultConfig {
         applicationId 'io.realm.examples.intro'
         targetSdkVersion rootProject.sdkVersion
-        minSdkVersion 15
+        minSdkVersion rootProject.minSdkVersion
         versionCode 1
         versionName "1.0"
     }
diff --git a/examples/jsonExample/build.gradle b/examples/jsonExample/build.gradle
index e3bd188356..8f9242eef1 100644
--- a/examples/jsonExample/build.gradle
+++ b/examples/jsonExample/build.gradle
@@ -8,7 +8,7 @@ android {
     defaultConfig {
         applicationId 'io.realm.examples.json'
         targetSdkVersion rootProject.sdkVersion
-        minSdkVersion 15
+        minSdkVersion rootProject.minSdkVersion
         versionCode 1
         versionName "1.0"
         javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true
diff --git a/examples/kotlinExample/build.gradle b/examples/kotlinExample/build.gradle
index 91d3f3166a..88e03b0551 100644
--- a/examples/kotlinExample/build.gradle
+++ b/examples/kotlinExample/build.gradle
@@ -24,7 +24,7 @@ android {
         applicationId 'io.realm.examples.kotlin'
         //noinspection GroovyAssignabilityCheck
         targetSdkVersion rootProject.sdkVersion
-        minSdkVersion 15
+        minSdkVersion rootProject.minSdkVersion
         versionCode 1
         versionName "1.0"
     }
diff --git a/examples/migrationExample/build.gradle b/examples/migrationExample/build.gradle
index b7991c006c..317d18d44d 100644
--- a/examples/migrationExample/build.gradle
+++ b/examples/migrationExample/build.gradle
@@ -8,7 +8,7 @@ android {
     defaultConfig {
         applicationId "examples.realm.io.migration"
         targetSdkVersion rootProject.sdkVersion
-        minSdkVersion 15
+        minSdkVersion rootProject.minSdkVersion
         versionCode 1
         versionName "1.0"
     }
diff --git a/examples/moduleExample/app/build.gradle b/examples/moduleExample/app/build.gradle
index 424f257901..cfcc837f6a 100644
--- a/examples/moduleExample/app/build.gradle
+++ b/examples/moduleExample/app/build.gradle
@@ -8,7 +8,7 @@ android {
     defaultConfig {
         applicationId 'io.realm.examples.appmodules'
         targetSdkVersion rootProject.sdkVersion
-        minSdkVersion 15
+        minSdkVersion rootProject.minSdkVersion
         versionCode 1
         versionName "1.0"
     }
diff --git a/examples/moduleExample/library/build.gradle b/examples/moduleExample/library/build.gradle
index 3697638a79..78c14a606d 100644
--- a/examples/moduleExample/library/build.gradle
+++ b/examples/moduleExample/library/build.gradle
@@ -7,7 +7,7 @@ android {
 
     defaultConfig {
         targetSdkVersion rootProject.sdkVersion
-        minSdkVersion 15
+        minSdkVersion rootProject.minSdkVersion
         versionCode 1
         versionName "1.0"
     }
diff --git a/examples/multiprocessExample/build.gradle b/examples/multiprocessExample/build.gradle
index 1823f58ecf..f4e84dceaf 100644
--- a/examples/multiprocessExample/build.gradle
+++ b/examples/multiprocessExample/build.gradle
@@ -25,6 +25,6 @@ android {
 }
 
 dependencies {
-    implementation 'com.android.support:appcompat-v7:26.0.1'
+    implementation 'com.android.support:appcompat-v7:27.0.1'
 }
 
diff --git a/examples/newsreaderExample/build.gradle b/examples/newsreaderExample/build.gradle
index e5cfcf0acb..60271b0fbd 100644
--- a/examples/newsreaderExample/build.gradle
+++ b/examples/newsreaderExample/build.gradle
@@ -8,7 +8,7 @@ android {
     defaultConfig {
         applicationId "io.realm.examples.newsreader"
         targetSdkVersion rootProject.sdkVersion
-        minSdkVersion 15
+        minSdkVersion rootProject.minSdkVersion
         versionCode 1
         versionName "1.0"
     }
@@ -39,16 +39,16 @@ android {
 
 dependencies {
     //noinspection GradleDependency
-    implementation 'com.android.support:appcompat-v7:26.0.1'
+    implementation 'com.android.support:appcompat-v7:27.0.1'
     //noinspection GradleDependency
-    implementation 'com.android.support:design:26.0.1'
-    implementation 'com.jakewharton.timber:timber:4.1.0'
+    implementation 'com.android.support:design:27.0.1'
+    implementation 'com.jakewharton.timber:timber:4.5.1'
     implementation 'com.jakewharton:butterknife:8.5.1'
     implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
     implementation 'com.squareup.retrofit2:converter-jackson:2.3.0'
     implementation 'com.squareup.retrofit2:retrofit:2.3.0'
     implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
-    implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
+    implementation 'io.reactivex.rxjava2:rxjava:2.1.5'
     implementation 'me.zhanghai.android.materialprogressbar:library:1.1.4'
-    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
+    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1' //TODO:Can be refactored with Native Android Data Binding
 }
diff --git a/examples/newsreaderExample/gradle.properties b/examples/newsreaderExample/gradle.properties
deleted file mode 100644
index 31590309be..0000000000
--- a/examples/newsreaderExample/gradle.properties
+++ /dev/null
@@ -1 +0,0 @@
-android.enableD8=true
diff --git a/examples/objectServerExample/build.gradle b/examples/objectServerExample/build.gradle
index 722e362451..5044b5d4eb 100644
--- a/examples/objectServerExample/build.gradle
+++ b/examples/objectServerExample/build.gradle
@@ -28,7 +28,7 @@ android {
     defaultConfig {
         applicationId 'io.realm.examples.objectserver'
         targetSdkVersion rootProject.sdkVersion
-        minSdkVersion 16
+        minSdkVersion rootProject.minSdkVersion
         versionCode 1
         versionName "1.0"
     }
@@ -57,10 +57,9 @@ realm {
 }
 
 dependencies {
-    implementation 'com.android.support:support-v4:26.0.1'
-    implementation 'com.android.support:appcompat-v7:26.0.1'
-    implementation 'com.android.support:design:26.0.1'
+    implementation 'com.android.support:appcompat-v7:27.0.1'
+    implementation 'com.android.support:design:27.0.1'
     implementation 'me.zhanghai.android.materialprogressbar:library:1.3.0'
-    implementation 'com.jakewharton:butterknife:8.5.1'
-    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
+    implementation 'com.jakewharton:butterknife:8.8.1'//TODO:Can be refactored with Native Android Data Binding
+    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'//TODO:Can be refactored with Native Android Data Binding
 }
diff --git a/examples/rxJavaExample/build.gradle b/examples/rxJavaExample/build.gradle
index d6269c5c59..d08e9d7f73 100644
--- a/examples/rxJavaExample/build.gradle
+++ b/examples/rxJavaExample/build.gradle
@@ -11,7 +11,7 @@ android {
         applicationId 'io.realm.examples.rxjava'
         //noinspection GroovyAssignabilityCheck
         targetSdkVersion rootProject.sdkVersion
-        minSdkVersion 15
+        minSdkVersion rootProject.minSdkVersion
         versionCode 1
         versionName "1.0"
     }
@@ -37,7 +37,7 @@ android {
 dependencies {
     implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
     implementation 'io.reactivex.rxjava2:rxjava:2.1.0'
-    implementation 'com.android.support:appcompat-v7:26.0.1'
+    implementation 'com.android.support:appcompat-v7:27.0.1'
     implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
     implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
     implementation 'com.squareup.retrofit2:converter-jackson:2.3.0'
diff --git a/examples/secureTokenAndroidKeyStore/build.gradle b/examples/secureTokenAndroidKeyStore/build.gradle
index 9e90be2ad2..d9a629ca4f 100644
--- a/examples/secureTokenAndroidKeyStore/build.gradle
+++ b/examples/secureTokenAndroidKeyStore/build.gradle
@@ -7,8 +7,8 @@ android {
 
     defaultConfig {
         applicationId "io.realm.examples.securetokenandroidkeystore"
-        minSdkVersion 14
-        targetSdkVersion 25
+        minSdkVersion rootProject.minSdkVersion
+        targetSdkVersion rootProject.sdkVersion
         versionCode 1
         versionName "1.0"
 
@@ -30,10 +30,10 @@ android {
 
 dependencies {
     implementation fileTree(dir: 'libs', include: ['*.jar'])
-    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
+    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
         exclude group: 'com.android.support', module: 'support-annotations'
     })
-    implementation 'com.android.support:appcompat-v7:26.0.1'
+    implementation 'com.android.support:appcompat-v7:27.0.1'
     testImplementation 'junit:junit:4.12'
     implementation 'io.realm:secure-userstore:1.0.1'
 }
diff --git a/examples/threadExample/build.gradle b/examples/threadExample/build.gradle
index 91f88acc74..c0188a8bb5 100644
--- a/examples/threadExample/build.gradle
+++ b/examples/threadExample/build.gradle
@@ -8,7 +8,7 @@ android {
     defaultConfig {
         applicationId "io.realm.examples.threads"
         targetSdkVersion rootProject.sdkVersion
-        minSdkVersion 15
+        minSdkVersion rootProject.minSdkVersion
         versionCode 1
         versionName "1.0"
     }
diff --git a/examples/unitTestExample/build.gradle b/examples/unitTestExample/build.gradle
index ef7e152157..fb80e93400 100644
--- a/examples/unitTestExample/build.gradle
+++ b/examples/unitTestExample/build.gradle
@@ -8,7 +8,7 @@ android {
     defaultConfig {
         applicationId 'io.realm.examples.unittesting'
         targetSdkVersion rootProject.sdkVersion
-        minSdkVersion 15
+        minSdkVersion rootProject.minSdkVersion
         versionCode 1
         versionName "1.0"
 
@@ -34,9 +34,9 @@ android {
 
 
 dependencies {
-    implementation 'com.android.support:appcompat-v7:26.0.1'
+    implementation 'com.android.support:appcompat-v7:27.0.1'
 
-    testImplementation 'io.reactivex.rxjava2:rxjava:2.1.0'
+    testImplementation 'io.reactivex.rxjava2:rxjava:2.1.5'
 
     // Testing
     testImplementation 'junit:junit:4.12'
diff --git a/gradle-plugin/build.gradle b/gradle-plugin/build.gradle
index 3d5bcc70d2..6524932ee5 100644
--- a/gradle-plugin/build.gradle
+++ b/gradle-plugin/build.gradle
@@ -22,11 +22,12 @@ props.each { key, val ->
 
 repositories {
     mavenLocal()
+    google()
     jcenter()
 }
 
-sourceCompatibility = 1.6
-targetCompatibility = 1.6
+sourceCompatibility = 1.8
+targetCompatibility = 1.8
 
 group = 'io.realm'
 version = file("${projectDir}/../version.txt").text.trim();
@@ -46,8 +47,12 @@ dependencies {
     compile gradleApi()
     compile localGroovy()
     compile "io.realm:realm-transformer:${version}"
-    compile 'com.neenbedankt.gradle.plugins:android-apt:1.8'
-    provided 'com.android.tools.build:gradle:2.1.0'
+    /*Note: the latest Android Gradle plugin has now built in support for annotation processors and warns and/or blocks android-apt,
+     see this https://bitbucket.org/hvisser/android-apt/wiki/Migration page on how to migrate
+     and this https://www.littlerobots.nl/blog/Whats-next-for-android-apt/ for more info.
+   */
+    compile 'com.neenbedankt.gradle.plugins:android-apt:1.8' //TODO: https://www.littlerobots.nl/blog/Whats-next-for-android-apt/
+    provided 'com.android.tools.build:gradle:3.1.0-alpha03'
 
     testCompile gradleTestKit()
     testCompile 'junit:junit:4.12'
diff --git a/gradle-plugin/gradle.properties b/gradle-plugin/gradle.properties
index 160890028a..5f1ed7bbe0 100644
--- a/gradle-plugin/gradle.properties
+++ b/gradle-plugin/gradle.properties
@@ -1 +1 @@
-org.gradle.caching=true
+org.gradle.caching=true
\ No newline at end of file
diff --git a/gradle-plugin/gradle/wrapper/gradle-wrapper.jar b/gradle-plugin/gradle/wrapper/gradle-wrapper.jar
index d457a1a990..6b6ea3ab4f 100644
Binary files a/gradle-plugin/gradle/wrapper/gradle-wrapper.jar and b/gradle-plugin/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle-plugin/gradle/wrapper/gradle-wrapper.properties b/gradle-plugin/gradle/wrapper/gradle-wrapper.properties
index c583957d2b..702c4b68b8 100644
--- a/gradle-plugin/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle-plugin/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.2.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.3.1-all.zip
diff --git a/gradle-plugin/gradlew.bat b/gradle-plugin/gradlew.bat
old mode 100644
new mode 100755
diff --git a/gradle-plugin/src/test/groovy/io/realm/gradle/PluginTest.groovy b/gradle-plugin/src/test/groovy/io/realm/gradle/PluginTest.groovy
index c99d4f53b4..2f9080ebd8 100644
--- a/gradle-plugin/src/test/groovy/io/realm/gradle/PluginTest.groovy
+++ b/gradle-plugin/src/test/groovy/io/realm/gradle/PluginTest.groovy
@@ -53,7 +53,7 @@ class PluginTest {
                 jcenter()
             }
             dependencies {
-                classpath 'com.android.tools.build:gradle:2.2.0'
+                classpath 'com.android.tools.build:gradle:3.1.0-alpha03'
                 classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.0'
                 classpath "io.realm:realm-gradle-plugin:${currentVersion}"
             }
@@ -78,7 +78,7 @@ class PluginTest {
                 jcenter()
             }
             dependencies {
-                classpath 'com.android.tools.build:gradle:2.2.0'
+                classpath 'com.android.tools.build:gradle:3.1.0-alpha03'
                 classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.0'
                 classpath "io.realm:realm-gradle-plugin:${currentVersion}"
             }
diff --git a/gradle.properties b/gradle.properties
index a409f36833..09e1425217 100644
--- a/gradle.properties
+++ b/gradle.properties
@@ -1,2 +1,3 @@
 org.gradle.jvmargs=-XX:MaxPermSize=512m
 org.gradle.caching=true
+android.enableD8=true
\ No newline at end of file
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
index d457a1a990..6b6ea3ab4f 100644
Binary files a/gradle/wrapper/gradle-wrapper.jar and b/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
index c583957d2b..702c4b68b8 100644
--- a/gradle/wrapper/gradle-wrapper.properties
+++ b/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.2.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.3.1-all.zip
diff --git a/gradlew.bat b/gradlew.bat
old mode 100644
new mode 100755
diff --git a/library-benchmarks/build.gradle b/library-benchmarks/build.gradle
index 5701253237..b33a32eba1 100644
--- a/library-benchmarks/build.gradle
+++ b/library-benchmarks/build.gradle
@@ -5,7 +5,7 @@ buildscript {
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.0.0-rc2'
+        classpath 'com.android.tools.build:gradle:3.1.0-alpha03'
         classpath "io.realm:realm-gradle-plugin:${file("${rootDir}/../version.txt").text.trim()}"
     }
 }
@@ -27,12 +27,12 @@ apply plugin: 'com.android.library'
 apply plugin: 'realm-android'
 
 android {
-    compileSdkVersion 26
-    buildToolsVersion "26.0.2"
+    compileSdkVersion 27
+    buildToolsVersion "27.0.0"
 
     defaultConfig {
         minSdkVersion 15
-        targetSdkVersion 22 // Below 23 to avoid new permission system introduced in M
+        targetSdkVersion 27
         versionCode 1
         versionName "1.0"
         testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
diff --git a/library-benchmarks/gradle.properties b/library-benchmarks/gradle.properties
index 160890028a..2fdd4b5a9a 100644
--- a/library-benchmarks/gradle.properties
+++ b/library-benchmarks/gradle.properties
@@ -1 +1,2 @@
 org.gradle.caching=true
+android.enableD8=true
\ No newline at end of file
diff --git a/library-benchmarks/gradle/wrapper/gradle-wrapper.jar b/library-benchmarks/gradle/wrapper/gradle-wrapper.jar
index d457a1a990..0bdf3fe941 100644
Binary files a/library-benchmarks/gradle/wrapper/gradle-wrapper.jar and b/library-benchmarks/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/library-benchmarks/gradle/wrapper/gradle-wrapper.properties b/library-benchmarks/gradle/wrapper/gradle-wrapper.properties
index c583957d2b..702c4b68b8 100644
--- a/library-benchmarks/gradle/wrapper/gradle-wrapper.properties
+++ b/library-benchmarks/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.2.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.3.1-all.zip
diff --git a/library-benchmarks/gradlew.bat b/library-benchmarks/gradlew.bat
old mode 100644
new mode 100755
diff --git a/realm-annotations/build.gradle b/realm-annotations/build.gradle
index dcaa5dc90d..7e4ab2eb5c 100644
--- a/realm-annotations/build.gradle
+++ b/realm-annotations/build.gradle
@@ -22,8 +22,8 @@ apply plugin: 'maven-publish'
 apply plugin: 'com.jfrog.artifactory'
 apply plugin: 'com.jfrog.bintray'
 
-sourceCompatibility = '1.6'
-targetCompatibility = '1.6'
+sourceCompatibility = '1.8'
+targetCompatibility = '1.8'
 
 group = 'io.realm'
 version = file("${projectDir}/../version.txt").text.trim();
diff --git a/realm-annotations/gradle.properties b/realm-annotations/gradle.properties
index 160890028a..5f1ed7bbe0 100644
--- a/realm-annotations/gradle.properties
+++ b/realm-annotations/gradle.properties
@@ -1 +1 @@
-org.gradle.caching=true
+org.gradle.caching=true
\ No newline at end of file
diff --git a/realm-annotations/gradle/wrapper/gradle-wrapper.jar b/realm-annotations/gradle/wrapper/gradle-wrapper.jar
index d457a1a990..6b6ea3ab4f 100644
Binary files a/realm-annotations/gradle/wrapper/gradle-wrapper.jar and b/realm-annotations/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/realm-annotations/gradle/wrapper/gradle-wrapper.properties b/realm-annotations/gradle/wrapper/gradle-wrapper.properties
index c583957d2b..702c4b68b8 100644
--- a/realm-annotations/gradle/wrapper/gradle-wrapper.properties
+++ b/realm-annotations/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.2.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.3.1-all.zip
diff --git a/realm-annotations/gradlew.bat b/realm-annotations/gradlew.bat
old mode 100644
new mode 100755
diff --git a/realm-transformer/build.gradle b/realm-transformer/build.gradle
index a5f4d48de7..c2a125116c 100644
--- a/realm-transformer/build.gradle
+++ b/realm-transformer/build.gradle
@@ -1,5 +1,6 @@
 buildscript {
     repositories {
+        google()
         jcenter()
     }
     dependencies {
@@ -31,11 +32,12 @@ properties.load(new FileInputStream("${projectDir}/../dependencies.list"))
 
 def syncVersion = properties.getProperty('REALM_SYNC_VERSION')
 
-sourceCompatibility = '1.6'
-targetCompatibility = '1.6'
+sourceCompatibility = '1.8'
+targetCompatibility = '1.8'
 
 repositories {
     mavenLocal()
+    google()
     jcenter()
 }
 
@@ -58,7 +60,7 @@ dependencies {
     compile localGroovy()
     compile gradleApi()
     compile "io.realm:realm-annotations:${version}"
-    provided 'com.android.tools.build:gradle:2.1.0'
+    provided 'com.android.tools.build:gradle:3.1.0-alpha03'
     compile 'org.javassist:javassist:3.22.0-GA'
 
     testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
diff --git a/realm-transformer/gradle.properties b/realm-transformer/gradle.properties
index 160890028a..5f1ed7bbe0 100644
--- a/realm-transformer/gradle.properties
+++ b/realm-transformer/gradle.properties
@@ -1 +1 @@
-org.gradle.caching=true
+org.gradle.caching=true
\ No newline at end of file
diff --git a/realm-transformer/gradle/wrapper/gradle-wrapper.jar b/realm-transformer/gradle/wrapper/gradle-wrapper.jar
index d457a1a990..6b6ea3ab4f 100644
Binary files a/realm-transformer/gradle/wrapper/gradle-wrapper.jar and b/realm-transformer/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/realm-transformer/gradle/wrapper/gradle-wrapper.properties b/realm-transformer/gradle/wrapper/gradle-wrapper.properties
index c583957d2b..702c4b68b8 100644
--- a/realm-transformer/gradle/wrapper/gradle-wrapper.properties
+++ b/realm-transformer/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.2.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.3.1-all.zip
diff --git a/realm-transformer/gradlew.bat b/realm-transformer/gradlew.bat
old mode 100644
new mode 100755
diff --git a/realm.properties b/realm.properties
index b36f4827a1..fd53887478 100644
--- a/realm.properties
+++ b/realm.properties
@@ -1,2 +1,2 @@
-gradleVersion=4.2.1
+gradleVersion=4.3.1
 ndkVersion=r10e
diff --git a/realm/build.gradle b/realm/build.gradle
index 1be855767b..ce69d4e851 100644
--- a/realm/build.gradle
+++ b/realm/build.gradle
@@ -9,16 +9,16 @@ buildscript {
     }
 
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.0.0-rc2'
-        classpath 'de.undercouch:gradle-download-task:3.2.0'
-        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
+        classpath 'com.android.tools.build:gradle:3.1.0-alpha03'
+        classpath 'de.undercouch:gradle-download-task:3.3.0'
+        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
         classpath 'com.novoda:gradle-android-command-plugin:1.7.1'
         classpath 'com.github.skhatri:gradle-s3-plugin:1.0.4'
-        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1'
-        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.5.2'
+        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
+        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.5.4'
         classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
         classpath "io.realm:realm-transformer:${file('../version.txt').text.trim()}"
-        classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.11'
+        classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.13'
         classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
     }
 }
diff --git a/realm/gradle.properties b/realm/gradle.properties
index 0be17a49db..20cd0c88de 100644
--- a/realm/gradle.properties
+++ b/realm/gradle.properties
@@ -1,2 +1,2 @@
 org.gradle.jvmargs=-Xms512m -Xmx2048m
-org.gradle.caching=true
+org.gradle.caching=true
\ No newline at end of file
diff --git a/realm/gradle/wrapper/gradle-wrapper.jar b/realm/gradle/wrapper/gradle-wrapper.jar
index d457a1a990..0bdf3fe941 100644
Binary files a/realm/gradle/wrapper/gradle-wrapper.jar and b/realm/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/realm/gradle/wrapper/gradle-wrapper.properties b/realm/gradle/wrapper/gradle-wrapper.properties
index c583957d2b..702c4b68b8 100644
--- a/realm/gradle/wrapper/gradle-wrapper.properties
+++ b/realm/gradle/wrapper/gradle-wrapper.properties
@@ -2,4 +2,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.2.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-4.3.1-all.zip
diff --git a/realm/gradlew.bat b/realm/gradlew.bat
old mode 100644
new mode 100755
diff --git a/realm/realm-annotations-processor/build.gradle b/realm/realm-annotations-processor/build.gradle
index 43c75faafd..5c203099a7 100644
--- a/realm/realm-annotations-processor/build.gradle
+++ b/realm/realm-annotations-processor/build.gradle
@@ -4,18 +4,18 @@ apply plugin: 'maven-publish'
 apply plugin: 'com.jfrog.artifactory'
 apply plugin: 'com.jfrog.bintray'
 
-sourceCompatibility = '1.6'
-targetCompatibility = '1.6'
+sourceCompatibility = '1.8'
+targetCompatibility = '1.8'
 
 dependencies {
-    compile "com.squareup:javawriter:2.5.0"
+    compile "com.squareup:javawriter:2.5.1"
     compile "io.realm:realm-annotations:${version}"
 
     testCompile files('../realm-library/build/intermediates/bundles/baseRelease/classes.jar') // Java projects cannot depend on AAR files
     testCompile files("${System.properties['java.home']}/../lib/tools.jar") // This is needed otherwise compile-testing won't be able to find it
     testCompile group:'junit', name:'junit', version:'4.12'
     testCompile group:'com.google.testing.compile', name:'compile-testing', version:'0.6'
-    testCompile files(file("${System.env.ANDROID_HOME}/platforms/android-26/android.jar"))
+    testCompile files(file("${System.env.ANDROID_HOME}/platforms/android-27/android.jar"))
 }
 
 // for Ant filter
diff --git a/realm/realm-library/build.gradle b/realm/realm-library/build.gradle
index 34c1c257c8..016e5e4c19 100644
--- a/realm/realm-library/build.gradle
+++ b/realm/realm-library/build.gradle
@@ -40,12 +40,12 @@ ext.lcachePath = project.findProperty('lcachePath') ?: System.getenv('NDK_LCACHE
 ext.enableDebugCore = project.hasProperty('enableDebugCore') ? project.getProperty('enableDebugCore') : false //FIXME Use 'false' as default until https://github.com/realm/realm-java/issues/5354 is fixed
 
 android {
-    compileSdkVersion 26
-    buildToolsVersion '26.0.2'
+    compileSdkVersion 27
+    buildToolsVersion '27.0.1'
 
     defaultConfig {
         minSdkVersion 9
-        targetSdkVersion 25
+        targetSdkVersion 27
         versionName version
         project.archivesBaseName = "realm-android-library"
         testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
@@ -105,8 +105,8 @@ android {
     }
 
     compileOptions {
-        sourceCompatibility JavaVersion.VERSION_1_7
-        targetCompatibility JavaVersion.VERSION_1_7
+        sourceCompatibility JavaVersion.VERSION_1_8
+        targetCompatibility JavaVersion.VERSION_1_8
     }
 
     packagingOptions {
@@ -188,7 +188,7 @@ repositories {
 
 dependencies {
 
-    compileOnly 'io.reactivex.rxjava2:rxjava:2.1.4'
+    compileOnly 'io.reactivex.rxjava2:rxjava:2.1.5'
     compileOnly 'com.google.code.findbugs:findbugs-annotations:3.0.1'
 
     api "io.realm:realm-annotations:${version}"
@@ -200,7 +200,7 @@ dependencies {
 
     kaptAndroidTest project(':realm-annotations-processor')
     androidTestImplementation fileTree(dir: 'testLibs', include: ['*.jar'])
-    androidTestImplementation 'io.reactivex.rxjava2:rxjava:2.1.4'
+    androidTestImplementation 'io.reactivex.rxjava2:rxjava:2.1.5'
     androidTestImplementation 'com.android.support.test:runner:1.0.1'
     androidTestImplementation 'com.android.support.test:rules:1.0.1'
     androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
@@ -210,7 +210,7 @@ dependencies {
     androidTestImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
 
     // specify error prone version to prevent sudden failure
-    errorprone 'com.google.errorprone:error_prone_core:2.0.21'
+    errorprone 'com.google.errorprone:error_prone_core:2.1.2'
 }
 
 task sourcesJar(type: Jar) {
diff --git a/realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java b/realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java
index 3ac4e327db..0acf690f3c 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/DynamicRealmObjectTests.java
@@ -220,8 +220,8 @@ public void run() {
                         try {
                             callThreadConfinedMethod(obj, method);
                             fail("IllegalStateException must be thrown.");
-                        } catch (Throwable e) {
-                            if (e instanceof IllegalStateException && expectedMessage.equals(e.getMessage())) {
+                        } catch (IllegalStateException e) {
+                            if (expectedMessage.equals(e.getMessage())) {
                                 // expected exception
                                 continue;
                             }
@@ -1613,15 +1613,14 @@ public void getRealm_illegalThreadThrows() throws Throwable {
         final DynamicRealmObject object = dynamicRealm.where(AllTypes.CLASS_NAME).findFirst();
 
         final CountDownLatch threadFinished = new CountDownLatch(1);
-        final AtomicReference<Throwable> throwable = new AtomicReference<>();
         final Thread thread = new Thread(new Runnable() {
             @Override
             public void run() {
                 try {
                     object.getDynamicRealm();
                     fail();
-                } catch (Throwable t) {
-                    throwable.set(t);
+                } catch (IllegalStateException e) {
+                    assertEquals(BaseRealm.INCORRECT_THREAD_MESSAGE, e.getMessage());
                 } finally {
                     threadFinished.countDown();
                 }
@@ -1629,11 +1628,5 @@ public void run() {
         });
         thread.start();
         TestHelper.awaitOrFail(threadFinished);
-
-        final Throwable thrownInTheThread = throwable.get();
-        if (!(thrownInTheThread instanceof IllegalStateException)) {
-            throw thrownInTheThread;
-        }
-        assertEquals(BaseRealm.INCORRECT_THREAD_MESSAGE, thrownInTheThread.getMessage());
     }
 }
diff --git a/realm/realm-library/src/androidTest/java/io/realm/ManagedOrderedRealmCollectionTests.java b/realm/realm-library/src/androidTest/java/io/realm/ManagedOrderedRealmCollectionTests.java
index c50e59cc54..366d4395f9 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/ManagedOrderedRealmCollectionTests.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/ManagedOrderedRealmCollectionTests.java
@@ -779,10 +779,10 @@ public void mutableMethodsOutsideTransactions() {
                     case REMOVE_INDEX: collection.remove(0); break;
                 }
                 fail("Unknown method or it failed to throw: " + method);
-            } catch (Throwable t) {
-                if (!t.getClass().equals(expected)) {
-                    fail(method + " didn't throw the expected exception. Was: " + t + ", expected: " + expected);
-                }
+            } catch (IllegalStateException e) {
+                assertEquals(expected, e.getClass());
+            } catch (UnsupportedOperationException e) {
+                assertEquals(expected, e.getClass());
             }
         }
     }
diff --git a/realm/realm-library/src/androidTest/java/io/realm/ManagedRealmCollectionTests.java b/realm/realm-library/src/androidTest/java/io/realm/ManagedRealmCollectionTests.java
index 96fc619417..b27d7b3796 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/ManagedRealmCollectionTests.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/ManagedRealmCollectionTests.java
@@ -784,10 +784,10 @@ public void mutableMethodsOutsideTransactions() {
                     case RETAIN_ALL: collection.retainAll(Collections.singletonList(new AllJavaTypes())); break;
                 }
                 fail("Unknown method or it failed to throw: " + method);
-            } catch (Throwable t) {
-                if (!t.getClass().equals(expected)) {
-                    fail(method + " didn't throw the expected exception. Was: " + t + ", expected: " + expected);
-                }
+            } catch (IllegalStateException e) {
+                assertEquals(expected, e.getClass());
+            } catch (UnsupportedOperationException e) {
+                assertEquals(expected, e.getClass());
             }
         }
     }
diff --git a/realm/realm-library/src/androidTest/java/io/realm/OrderedRealmCollectionIteratorTests.java b/realm/realm-library/src/androidTest/java/io/realm/OrderedRealmCollectionIteratorTests.java
index d7e705a0fd..b173530c82 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/OrderedRealmCollectionIteratorTests.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/OrderedRealmCollectionIteratorTests.java
@@ -42,6 +42,7 @@
 import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertNotEquals;
+import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertTrue;
 import static org.junit.Assert.fail;
 
@@ -429,6 +430,7 @@ public void listIterator_remove_beforeNext() {
 
         try {
             it.remove();
+            fail();
         } catch (IllegalStateException e) {
             assertRealmList();
         } catch (UnsupportedOperationException e) {
@@ -612,22 +614,25 @@ public void listIterator_set() {
         assertEquals(42, obj.getFieldLong());
     }
 
+    @Test
     public void listIterator_add() {
-        if (skipTest(CollectionClass.REALMRESULTS)) {
+        if (skipTest(CollectionClass.REALMRESULTS, CollectionClass.REALMRESULTS_SNAPSHOT_RESULTS_BASE,
+                CollectionClass.REALMRESULTS_SNAPSHOT_LIST_BASE)) {
             return;
         }
 
         realm.beginTransaction();
         ListIterator<AllJavaTypes> it = collection.listIterator();
 
-        // Calling set() before next() should throw.
-        try {
-            it.add(new AllJavaTypes());
-            fail();
-        } catch (IllegalStateException ignored) {
-        }
+        // The element is inserted immediately before the element that would be returned by next(), if any, and after
+        // the element that would be returned by previous(), if any. (If the list contains no elements, the new element
+        // becomes the sole element on the list.)
+        it.add(new AllJavaTypes(4242));
+        AllJavaTypes obj = collection.first();
+        assertNotNull(obj);
+        assertEquals(4242, obj.getFieldLong());
 
-        AllJavaTypes obj = it.next();
+        obj = it.next();
         assertEquals(0, obj.getFieldLong());
         it.add(new AllJavaTypes(42));
         obj = it.previous();
diff --git a/realm/realm-library/src/androidTest/java/io/realm/RealmObjectTests.java b/realm/realm-library/src/androidTest/java/io/realm/RealmObjectTests.java
index 667336ce69..8d99101714 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/RealmObjectTests.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/RealmObjectTests.java
@@ -2080,23 +2080,20 @@ public void getRealm_illegalThreadThrows() throws Throwable {
         realm.commitTransaction();
 
         final CountDownLatch threadFinished = new CountDownLatch(1);
-        final AtomicReference<Throwable> throwable = new AtomicReference<>();
         final Thread thread = new Thread(new Runnable() {
             @Override
             public void run() {
                 try {
                     object.getRealm();
                     fail();
-                } catch (Throwable t) {
-                    throwable.set(t);
-                    threadFinished.countDown();
-                    return;
+                } catch (IllegalStateException e) {
+                    assertEquals(BaseRealm.INCORRECT_THREAD_MESSAGE, e.getMessage());
                 }
                 try {
                     RealmObject.getRealm(object);
                     fail();
-                } catch (Throwable t) {
-                    throwable.set(t);
+                } catch (IllegalStateException e) {
+                    assertEquals(BaseRealm.INCORRECT_THREAD_MESSAGE, e.getMessage());
                 } finally {
                     threadFinished.countDown();
                 }
@@ -2104,12 +2101,6 @@ public void run() {
         });
         thread.start();
         TestHelper.awaitOrFail(threadFinished);
-
-        final Throwable thrownInTheThread = throwable.get();
-        if (!(thrownInTheThread instanceof IllegalStateException)) {
-            throw thrownInTheThread;
-        }
-        assertEquals(BaseRealm.INCORRECT_THREAD_MESSAGE, thrownInTheThread.getMessage());
     }
 
     @Test
diff --git a/realm/realm-library/src/androidTest/java/io/realm/RealmQueryTests.java b/realm/realm-library/src/androidTest/java/io/realm/RealmQueryTests.java
index ece9fabd6c..c97668d62e 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/RealmQueryTests.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/RealmQueryTests.java
@@ -359,7 +359,6 @@ private static void callThreadConfinedMethod(RealmQuery<?> query, ThreadConfined
     public void callThreadConfinedMethodsFromWrongThread() throws Throwable {
         final RealmQuery<AllJavaTypes> query = realm.where(AllJavaTypes.class);
 
-        final AtomicReference<Throwable> throwableFromThread = new AtomicReference<Throwable>();
         final CountDownLatch testFinished = new CountDownLatch(1);
 
         final String expectedMessage;
@@ -382,13 +381,8 @@ public void run() {
                         try {
                             callThreadConfinedMethod(query, method);
                             fail("IllegalStateException must be thrown.");
-                        } catch (Throwable e) {
-                            if (e instanceof IllegalStateException && expectedMessage.equals(e.getMessage())) {
-                                // expected exception
-                                continue;
-                            }
-                            throwableFromThread.set(e);
-                            return;
+                        } catch (IllegalStateException e) {
+                            assertEquals(expectedMessage, e.getMessage());
                         }
                     }
                 } finally {
@@ -399,10 +393,6 @@ public void run() {
         thread.start();
 
         TestHelper.awaitOrFail(testFinished);
-        final Throwable throwable = throwableFromThread.get();
-        if (throwable != null) {
-            throw throwable;
-        }
     }
 
     @Test
diff --git a/realm/realm-library/src/androidTest/java/io/realm/RealmSchemaTests.java b/realm/realm-library/src/androidTest/java/io/realm/RealmSchemaTests.java
index 7c12ddba71..73db5a1f65 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/RealmSchemaTests.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/RealmSchemaTests.java
@@ -628,24 +628,28 @@ public void mutableMethodsCalled_notInTransaction() {
 
         try {
             realmSchema.create("Foo");
+            fail();
         } catch (IllegalStateException expected) {
             assertThat(expected.getMessage(), CoreMatchers.containsString("transaction"));
         }
 
         try {
             realmSchema.createWithPrimaryKeyField("Foo", "PK", String.class);
+            fail();
         } catch (IllegalStateException expected) {
             assertThat(expected.getMessage(), CoreMatchers.containsString("transaction"));
         }
 
         try {
             realmSchema.remove("Cat");
+            fail();
         } catch (IllegalStateException expected) {
             assertThat(expected.getMessage(), CoreMatchers.containsString("transaction"));
         }
 
         try {
             realmSchema.rename("Cat", "Foo1");
+            fail();
         } catch (IllegalStateException expected) {
             assertThat(expected.getMessage(), CoreMatchers.containsString("transaction"));
         }
diff --git a/realm/realm-library/src/androidTest/java/io/realm/RealmTests.java b/realm/realm-library/src/androidTest/java/io/realm/RealmTests.java
index 7d872718ba..509d05f3eb 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/RealmTests.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/RealmTests.java
@@ -4017,7 +4017,6 @@ public void run() {
     @Test
     public void waitForChange_onLooperThread() throws Throwable {
         final CountDownLatch bgRealmClosed = new CountDownLatch(1);
-        final ExceptionHolder bgError = new ExceptionHolder();
 
         Thread thread = new Thread(new Runnable() {
             @Override
@@ -4027,8 +4026,7 @@ public void run() {
                 try {
                     realm.waitForChange();
                     fail();
-                } catch (Throwable expected) {
-                    bgError.setException(expected);
+                } catch (IllegalStateException ignored) {
                 } finally {
                     realm.close();
                     bgRealmClosed.countDown();
@@ -4038,10 +4036,6 @@ public void run() {
         thread.start();
 
         TestHelper.awaitOrFail(bgRealmClosed);
-        if (bgError.getException() instanceof AssertionError) {
-            throw bgError.getException();
-        }
-        assertEquals(IllegalStateException.class, bgError.getException().getClass());
     }
 
     // Cannot wait inside of a transaction.
diff --git a/realm/realm-library/src/androidTest/java/io/realm/SortTest.java b/realm/realm-library/src/androidTest/java/io/realm/SortTest.java
index 287d17bf44..06e6792365 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/SortTest.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/SortTest.java
@@ -619,7 +619,7 @@ private int factorial(int n) {
     @Test
     public void sortCaseSensitive() {
         chars = "'- !\"#$%&()*,./:;?_+<=>123aAbBcCxXyYzZ";
-        createAndTest(new StringBuffer(chars).reverse().toString());
+        createAndTest(new StringBuilder(chars).reverse().toString());
 
         // try all permutations - keep the list short
         chars = "12aAbB";
diff --git a/realm/realm-library/src/androidTest/java/io/realm/rule/RunInLooperThread.java b/realm/realm-library/src/androidTest/java/io/realm/rule/RunInLooperThread.java
index ebc149f8c5..31d73961f2 100644
--- a/realm/realm-library/src/androidTest/java/io/realm/rule/RunInLooperThread.java
+++ b/realm/realm-library/src/androidTest/java/io/realm/rule/RunInLooperThread.java
@@ -80,7 +80,7 @@
     // events (Callbacks happening in the future), so we add a strong reference
     // to them for the duration of the test.
     // Access guarded by 'lock'
-    private LinkedList<Object> keepStrongReference;
+    private List<Object> keepStrongReference;
 
     // Custom Realm used by the test. Saving the reference here will guarantee
     // that the instance is closed when exiting the test.
@@ -266,9 +266,9 @@ protected void before() throws Throwable {
         super.before();
 
         RealmConfiguration config = createConfiguration(UUID.randomUUID().toString());
-        LinkedList<Object> refs = new LinkedList<>();
-        List<Realm> realms = new LinkedList<>();
-        LinkedList<Closeable> closeables = new LinkedList<>();
+        List<Object> refs = new ArrayList<>();
+        List<Realm> realms = new ArrayList<>();
+        List<Closeable> closeables = new ArrayList<>();
 
         synchronized (lock) {
             realmConfiguration = config;
diff --git a/realm/realm-library/src/main/java/io/realm/RealmCache.java b/realm/realm-library/src/main/java/io/realm/RealmCache.java
index 1399b3e22f..3dac06e938 100644
--- a/realm/realm-library/src/main/java/io/realm/RealmCache.java
+++ b/realm/realm-library/src/main/java/io/realm/RealmCache.java
@@ -20,11 +20,11 @@
 import java.io.IOException;
 import java.io.InputStream;
 import java.lang.ref.WeakReference;
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Collection;
 import java.util.EnumMap;
 import java.util.Iterator;
-import java.util.LinkedList;
 import java.util.List;
 import java.util.concurrent.ConcurrentLinkedQueue;
 import java.util.concurrent.CountDownLatch;
@@ -200,7 +200,7 @@ public void run() {
     // are not allowed and an exception will be thrown when trying to add it to the cache list.
     // A weak ref is used to hold the RealmCache instance. The weak ref entry will be cleared if and only if there
     // is no Realm instance holding a strong ref to it and there is no Realm instance associated it is BEING created.
-    private static final List<WeakReference<RealmCache>> cachesList = new LinkedList<WeakReference<RealmCache>>();
+    private static final List<WeakReference<RealmCache>> cachesList = new ArrayList<WeakReference<RealmCache>>();
 
     // See leak()
     // isLeaked flag is used to avoid adding strong ref multiple times without iterating the list.
diff --git a/realm/realm-library/src/objectServer/java/io/realm/PermissionManager.java b/realm/realm-library/src/objectServer/java/io/realm/PermissionManager.java
index 9d1acc3527..d41906a017 100644
--- a/realm/realm-library/src/objectServer/java/io/realm/PermissionManager.java
+++ b/realm/realm-library/src/objectServer/java/io/realm/PermissionManager.java
@@ -24,10 +24,8 @@
 import java.net.URL;
 import java.util.ArrayList;
 import java.util.Arrays;
-import java.util.Deque;
 import java.util.HashMap;
 import java.util.LinkedHashMap;
-import java.util.LinkedList;
 import java.util.List;
 import java.util.Map;
 
@@ -142,7 +140,7 @@ public boolean isGlobalRealm() {
     private Realm defaultPermissionRealm;
 
     // Task list used to queue tasks until the underlying Realms are done opening (or failed doing so).
-    private Deque<PermissionManagerTask> delayedTasks = new LinkedList<>();
+    private List<PermissionManagerTask> delayedTasks = new ArrayList<>();
 
     // List of tasks that are being processed. Used to keep strong references for listeners to work.
     // The task must remove itself from this list once it either completes
