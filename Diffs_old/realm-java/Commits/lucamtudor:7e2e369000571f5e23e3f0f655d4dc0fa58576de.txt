diff --git a/build-distribution.sh b/build-distribution.sh
index bc8c2aa27f..573061ad63 100755
--- a/build-distribution.sh
+++ b/build-distribution.sh
@@ -28,6 +28,9 @@ cp -R examples/migrationExample/src distribution/RealmMigrationExample/app
 echo "Copying files to the distribution/RealmConcurrencyExample folder"
 cp -R examples/concurrencyExample/src distribution/RealmConcurrencyExample/app
 
+echo "Copying files to the distribution/RealmAdapterExample folder"
+cp -R examples/adapterExample/src distribution/RealmAdapterExample/app
+
 echo "Creating the Eclipse distribution"
 mkdir -p distribution/eclipse
 cp realm/build/libs/realm-${version}.jar distribution/eclipse
diff --git a/changelog.txt b/changelog.txt
index d07e741485..63d795459c 100644
--- a/changelog.txt
+++ b/changelog.txt
@@ -1,7 +1,8 @@
-0.73.0 (??)
+0.73.0 (04 Nov 2014)
   * Fixed a bug not allowing queries with more than 1024 conditions
-  * Rewritten the notification system. The API did not change but it's not much more reliable
+  * Rewritten the notification system. The API did not change but it's now much more reliable
   * Added support for switching auto-refresh on and off (Realm.setAutoRefresh)
+  * Added RealmBaseAdapter and an example using it
   * Added deleteFromRealm() method to RealmObject
   * Json API
 
diff --git a/distribution/RealmAdapterExample/.gitignore b/distribution/RealmAdapterExample/.gitignore
new file mode 100644
index 0000000000..afbdab33e9
--- /dev/null
+++ b/distribution/RealmAdapterExample/.gitignore
@@ -0,0 +1,6 @@
+.gradle
+/local.properties
+/.idea/workspace.xml
+/.idea/libraries
+.DS_Store
+/build
diff --git a/distribution/RealmAdapterExample/app/.gitignore b/distribution/RealmAdapterExample/app/.gitignore
new file mode 100644
index 0000000000..796b96d1c4
--- /dev/null
+++ b/distribution/RealmAdapterExample/app/.gitignore
@@ -0,0 +1 @@
+/build
diff --git a/distribution/RealmAdapterExample/app/build.gradle b/distribution/RealmAdapterExample/app/build.gradle
new file mode 100644
index 0000000000..e75b49a3dd
--- /dev/null
+++ b/distribution/RealmAdapterExample/app/build.gradle
@@ -0,0 +1,24 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 20
+    buildToolsVersion "20.0.0"
+
+    defaultConfig {
+        applicationId "io.realm.examples.realmadapterexample"
+        minSdkVersion 14
+        targetSdkVersion 20
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            runProguard false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+dependencies {
+    compile 'io.realm:realm-android:0.71.0'
+}
\ No newline at end of file
diff --git a/distribution/RealmAdapterExample/app/proguard-rules.pro b/distribution/RealmAdapterExample/app/proguard-rules.pro
new file mode 100644
index 0000000000..bb65c6fe88
--- /dev/null
+++ b/distribution/RealmAdapterExample/app/proguard-rules.pro
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in /Applications/Android Studio.app/sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/distribution/RealmAdapterExample/build.gradle b/distribution/RealmAdapterExample/build.gradle
new file mode 100644
index 0000000000..9b8abe4fe1
--- /dev/null
+++ b/distribution/RealmAdapterExample/build.gradle
@@ -0,0 +1,19 @@
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
+
+buildscript {
+    repositories {
+        jcenter()
+    }
+    dependencies {
+        classpath 'com.android.tools.build:gradle:0.12.2'
+
+        // NOTE: Do not place your application dependencies here; they belong
+        // in the individual module build.gradle files
+    }
+}
+
+allprojects {
+    repositories {
+        jcenter()
+    }
+}
diff --git a/distribution/RealmAdapterExample/gradle.properties b/distribution/RealmAdapterExample/gradle.properties
new file mode 100644
index 0000000000..5d08ba75bb
--- /dev/null
+++ b/distribution/RealmAdapterExample/gradle.properties
@@ -0,0 +1,18 @@
+# Project-wide Gradle settings.
+
+# IDE (e.g. Android Studio) users:
+# Settings specified in this file will override any Gradle settings
+# configured through the IDE.
+
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+# Default value: -Xmx10248m -XX:MaxPermSize=256m
+# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
+
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. More details, visit
+# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
+# org.gradle.parallel=true
\ No newline at end of file
diff --git a/distribution/RealmAdapterExample/gradle/wrapper/gradle-wrapper.jar b/distribution/RealmAdapterExample/gradle/wrapper/gradle-wrapper.jar
new file mode 100644
index 0000000000..8c0fb64a86
Binary files /dev/null and b/distribution/RealmAdapterExample/gradle/wrapper/gradle-wrapper.jar differ
diff --git a/distribution/RealmAdapterExample/gradle/wrapper/gradle-wrapper.properties b/distribution/RealmAdapterExample/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
index 0000000000..1e61d1fd3a
--- /dev/null
+++ b/distribution/RealmAdapterExample/gradle/wrapper/gradle-wrapper.properties
@@ -0,0 +1,6 @@
+#Wed Apr 10 15:27:10 PDT 2013
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
+distributionUrl=http\://services.gradle.org/distributions/gradle-1.12-all.zip
diff --git a/distribution/RealmAdapterExample/gradlew b/distribution/RealmAdapterExample/gradlew
new file mode 100755
index 0000000000..91a7e269e1
--- /dev/null
+++ b/distribution/RealmAdapterExample/gradlew
@@ -0,0 +1,164 @@
+#!/usr/bin/env bash
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn ( ) {
+    echo "$*"
+}
+
+die ( ) {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+esac
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched.
+if $cygwin ; then
+    [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+fi
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >&-
+APP_HOME="`pwd -P`"
+cd "$SAVED" >&-
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=$((i+1))
+    done
+    case $i in
+        (0) set -- ;;
+        (1) set -- "$args0" ;;
+        (2) set -- "$args0" "$args1" ;;
+        (3) set -- "$args0" "$args1" "$args2" ;;
+        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
+}
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
diff --git a/distribution/RealmAdapterExample/gradlew.bat b/distribution/RealmAdapterExample/gradlew.bat
new file mode 100644
index 0000000000..aec99730b4
--- /dev/null
+++ b/distribution/RealmAdapterExample/gradlew.bat
@@ -0,0 +1,90 @@
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windowz variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
diff --git a/distribution/RealmAdapterExample/settings.gradle b/distribution/RealmAdapterExample/settings.gradle
new file mode 100644
index 0000000000..e7b4def49c
--- /dev/null
+++ b/distribution/RealmAdapterExample/settings.gradle
@@ -0,0 +1 @@
+include ':app'
diff --git a/examples/adapterExample/build.gradle b/examples/adapterExample/build.gradle
new file mode 100644
index 0000000000..809030ab41
--- /dev/null
+++ b/examples/adapterExample/build.gradle
@@ -0,0 +1,28 @@
+apply plugin: 'com.android.application'
+
+android {
+    compileSdkVersion 19
+    buildToolsVersion "20.0.0"
+
+    defaultConfig {
+        applicationId "io.realm.examples.realmadapters"
+        minSdkVersion 15
+        targetSdkVersion 19
+        versionCode 1
+        versionName "1.0"
+    }
+    buildTypes {
+        release {
+            runProguard false
+            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+}
+
+tasks.preBuild {
+    dependsOn ":realm:androidJar"
+}
+
+dependencies {
+    compile files("../../realm/build/libs/realm-${version}.jar")
+}
diff --git a/examples/adapterExample/proguard-rules.pro b/examples/adapterExample/proguard-rules.pro
new file mode 100644
index 0000000000..200fdffd58
--- /dev/null
+++ b/examples/adapterExample/proguard-rules.pro
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in /usr/local/Cellar/android-sdk/22.6.2/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
diff --git a/examples/adapterExample/src/main/AndroidManifest.xml b/examples/adapterExample/src/main/AndroidManifest.xml
new file mode 100644
index 0000000000..9d18300d12
--- /dev/null
+++ b/examples/adapterExample/src/main/AndroidManifest.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="io.realm.examples.realmadapters">
+
+    <application
+        android:allowBackup="true"
+        android:icon="@drawable/ic_launcher"
+        android:label="@string/app_name"
+        android:theme="@style/AppTheme">
+
+        <activity
+            android:name=".MyActivity"
+            android:configChanges="keyboardHidden|orientation|screenSize"
+            android:label="@string/app_name">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+
+    </application>
+
+</manifest>
diff --git a/examples/adapterExample/src/main/java/io/realm/examples/realmadapters/MyActivity.java b/examples/adapterExample/src/main/java/io/realm/examples/realmadapters/MyActivity.java
new file mode 100644
index 0000000000..234ce5d891
--- /dev/null
+++ b/examples/adapterExample/src/main/java/io/realm/examples/realmadapters/MyActivity.java
@@ -0,0 +1,75 @@
+/*
+ * Copyright 2014 Realm Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package io.realm.examples.realmadapters;
+
+import android.app.Activity;
+import android.os.Bundle;
+import android.view.Menu;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.AdapterView;
+import android.widget.ListView;
+
+import io.realm.Realm;
+import io.realm.RealmResults;
+import io.realm.examples.realmadapters.models.TimeStamp;
+
+
+public class MyActivity extends Activity {
+
+    private Realm realm;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_my);
+
+        Realm.deleteRealmFile(this);
+        realm = Realm.getInstance(this);
+        RealmResults<TimeStamp> timeStamps = realm.where(TimeStamp.class).findAll();
+        final MyAdapter adapter = new MyAdapter(this, R.id.listView, timeStamps, true);
+        ListView listView = (ListView) findViewById(R.id.listView);
+        listView.setAdapter(adapter);
+        listView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {
+            @Override
+            public boolean onItemLongClick(AdapterView<?> adapterView, View view, int i, long l) {
+                    realm.beginTransaction();
+                    adapter.getRealmResults().remove(i);
+                    realm.commitTransaction();
+                    return true;
+            }
+        });
+    }
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        getMenuInflater().inflate(R.menu.my, menu);
+        return true;
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        int id = item.getItemId();
+        if (id == R.id.action_add) {
+            realm.beginTransaction();
+            TimeStamp timeStamp = realm.createObject(TimeStamp.class);
+            timeStamp.setTimeStamp(Long.toString(System.currentTimeMillis()));
+            realm.commitTransaction();
+        }
+        return true;
+    }
+}
diff --git a/examples/adapterExample/src/main/java/io/realm/examples/realmadapters/MyAdapter.java b/examples/adapterExample/src/main/java/io/realm/examples/realmadapters/MyAdapter.java
new file mode 100644
index 0000000000..d0280da205
--- /dev/null
+++ b/examples/adapterExample/src/main/java/io/realm/examples/realmadapters/MyAdapter.java
@@ -0,0 +1,63 @@
+/*
+ * Copyright 2014 Realm Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package io.realm.examples.realmadapters;
+
+import android.content.Context;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ListAdapter;
+import android.widget.TextView;
+
+import io.realm.RealmBaseAdapter;
+import io.realm.RealmResults;
+import io.realm.examples.realmadapters.models.TimeStamp;
+
+public class MyAdapter extends RealmBaseAdapter<TimeStamp> implements ListAdapter {
+
+    private class MyViewHolder {
+        TextView tvTimeStamp;
+    }
+
+    public MyAdapter(Context context, int resId, RealmResults<TimeStamp> realmResults, boolean automaticUpdate) {
+        super(context, realmResults, automaticUpdate);
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        MyViewHolder mViewHolder;
+        if (convertView == null) {
+            convertView = inflater.inflate(android.R.layout.simple_list_item_1, null);
+            mViewHolder = new MyViewHolder();
+            convertView.setTag(mViewHolder);
+        } else {
+            mViewHolder = (MyViewHolder) convertView.getTag();
+        }
+
+        mViewHolder.tvTimeStamp = detail(convertView, android.R.id.text1, realmResults.get(position).getTimeStamp());
+        return convertView;
+    }
+
+    private TextView detail(View v, int resId, String text) {
+        TextView tv = (TextView) v.findViewById(resId);
+        tv.setText(text);
+        return tv;
+    }
+
+    public RealmResults<TimeStamp> getRealmResults() {
+        return realmResults;
+    }
+}
diff --git a/examples/adapterExample/src/main/java/io/realm/examples/realmadapters/models/TimeStamp.java b/examples/adapterExample/src/main/java/io/realm/examples/realmadapters/models/TimeStamp.java
new file mode 100644
index 0000000000..8945954fa2
--- /dev/null
+++ b/examples/adapterExample/src/main/java/io/realm/examples/realmadapters/models/TimeStamp.java
@@ -0,0 +1,30 @@
+/*
+ * Copyright 2014 Realm Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package io.realm.examples.realmadapters.models;
+
+import io.realm.RealmObject;
+
+public class TimeStamp extends RealmObject {
+    private String timeStamp;
+
+    public String getTimeStamp() {
+        return timeStamp;
+    }
+
+    public void setTimeStamp(String timeStamp) {
+        this.timeStamp = timeStamp;
+    }
+}
diff --git a/examples/adapterExample/src/main/res/drawable-hdpi/ic_launcher.png b/examples/adapterExample/src/main/res/drawable-hdpi/ic_launcher.png
new file mode 100644
index 0000000000..96a442e5b8
Binary files /dev/null and b/examples/adapterExample/src/main/res/drawable-hdpi/ic_launcher.png differ
diff --git a/examples/adapterExample/src/main/res/drawable-mdpi/ic_launcher.png b/examples/adapterExample/src/main/res/drawable-mdpi/ic_launcher.png
new file mode 100644
index 0000000000..359047dfa4
Binary files /dev/null and b/examples/adapterExample/src/main/res/drawable-mdpi/ic_launcher.png differ
diff --git a/examples/adapterExample/src/main/res/drawable-xhdpi/ic_launcher.png b/examples/adapterExample/src/main/res/drawable-xhdpi/ic_launcher.png
new file mode 100644
index 0000000000..71c6d760f0
Binary files /dev/null and b/examples/adapterExample/src/main/res/drawable-xhdpi/ic_launcher.png differ
diff --git a/examples/adapterExample/src/main/res/drawable-xxhdpi/ic_launcher.png b/examples/adapterExample/src/main/res/drawable-xxhdpi/ic_launcher.png
new file mode 100644
index 0000000000..4df1894644
Binary files /dev/null and b/examples/adapterExample/src/main/res/drawable-xxhdpi/ic_launcher.png differ
diff --git a/examples/adapterExample/src/main/res/layout/activity_my.xml b/examples/adapterExample/src/main/res/layout/activity_my.xml
new file mode 100644
index 0000000000..99c0048a9f
--- /dev/null
+++ b/examples/adapterExample/src/main/res/layout/activity_my.xml
@@ -0,0 +1,20 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    tools:context=".MyActivity">
+
+
+    <ListView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/listView"
+        android:layout_alignParentTop="true"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentStart="true"
+        tools:listitem="@android:layout/simple_list_item_1" />
+</RelativeLayout>
diff --git a/examples/adapterExample/src/main/res/menu/my.xml b/examples/adapterExample/src/main/res/menu/my.xml
new file mode 100644
index 0000000000..bd4fcccd3e
--- /dev/null
+++ b/examples/adapterExample/src/main/res/menu/my.xml
@@ -0,0 +1,8 @@
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    tools:context=".MyActivity" >
+    <item android:id="@+id/action_add"
+        android:icon="@android:drawable/ic_menu_add"
+        android:title="@string/add"
+        android:showAsAction="always"/>
+</menu>
diff --git a/examples/adapterExample/src/main/res/values-w820dp/dimens.xml b/examples/adapterExample/src/main/res/values-w820dp/dimens.xml
new file mode 100644
index 0000000000..63fc816444
--- /dev/null
+++ b/examples/adapterExample/src/main/res/values-w820dp/dimens.xml
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
diff --git a/examples/adapterExample/src/main/res/values/dimens.xml b/examples/adapterExample/src/main/res/values/dimens.xml
new file mode 100644
index 0000000000..47c8224673
--- /dev/null
+++ b/examples/adapterExample/src/main/res/values/dimens.xml
@@ -0,0 +1,5 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+</resources>
diff --git a/examples/adapterExample/src/main/res/values/strings.xml b/examples/adapterExample/src/main/res/values/strings.xml
new file mode 100644
index 0000000000..7814181fb1
--- /dev/null
+++ b/examples/adapterExample/src/main/res/values/strings.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <string name="app_name">Realm ListView</string>
+    <string name="action_settings">Settings</string>
+    <string name="add">Add</string>
+
+</resources>
\ No newline at end of file
diff --git a/examples/adapterExample/src/main/res/values/styles.xml b/examples/adapterExample/src/main/res/values/styles.xml
new file mode 100644
index 0000000000..ff6c9d2c0f
--- /dev/null
+++ b/examples/adapterExample/src/main/res/values/styles.xml
@@ -0,0 +1,8 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="android:Theme.Holo.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+    </style>
+
+</resources>
diff --git a/examples/concurrencyExample/src/main/AndroidManifest.xml b/examples/concurrencyExample/src/main/AndroidManifest.xml
index be2982ac29..427caed469 100644
--- a/examples/concurrencyExample/src/main/AndroidManifest.xml
+++ b/examples/concurrencyExample/src/main/AndroidManifest.xml
@@ -7,6 +7,7 @@
         android:icon="@drawable/ic_launcher"
         android:label="@string/app_name"
         android:theme="@style/AppTheme">
+
         <activity
             android:name=".RealmExampleActivity"
             android:configChanges="keyboardHidden|orientation|screenSize"
diff --git a/examples/concurrencyExample/src/main/java/io/realm/examples/concurrency/RealmExampleActivity.java b/examples/concurrencyExample/src/main/java/io/realm/examples/concurrency/RealmExampleActivity.java
index 06510a0c9a..4463fac639 100644
--- a/examples/concurrencyExample/src/main/java/io/realm/examples/concurrency/RealmExampleActivity.java
+++ b/examples/concurrencyExample/src/main/java/io/realm/examples/concurrency/RealmExampleActivity.java
@@ -48,7 +48,7 @@ protected void onCreate(Bundle savedInstanceState) {
         findViewById(R.id.quit_button).setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                stopTransactionTests();
+                stopTests();
             }
         });
 
@@ -62,21 +62,25 @@ public void onClick(View view) {
     @Override
     public void onResume() {
         super.onResume();
-
-        //Alternatively can use transaction tests here...
-        //startTransactionTests();
-
-        startSpawnTests();
+        startTests();
     }
 
     @Override
     public void onStop() {
         super.onStop();
+        stopTests();
+    }
 
+    private void startTests() {
+        startSpawnTests();
         //Alternatively can use transaction tests here...
-        //stopTransactionTests();
+        //startTransactionTests();
+    }
 
+    private void stopTests() {
         stopSpawnTests();
+        //Alternatively can use transaction tests here...
+        //stopTransactionTests();
     }
 
     // Using the screen form the user can inject into the Realm
diff --git a/examples/concurrencyExample/src/main/java/io/realm/examples/concurrency/services/TransactionService.java b/examples/concurrencyExample/src/main/java/io/realm/examples/concurrency/services/TransactionService.java
index 3b37242f84..1b2776772d 100644
--- a/examples/concurrencyExample/src/main/java/io/realm/examples/concurrency/services/TransactionService.java
+++ b/examples/concurrencyExample/src/main/java/io/realm/examples/concurrency/services/TransactionService.java
@@ -43,7 +43,7 @@
     private Realm realm = null;
 
     public TransactionService() {
-        super(SpawningService.class.getName());
+        super(TransactionService.class.getName());
     }
 
     @Override
diff --git a/examples/concurrencyExample/src/main/res/layout/activity_realm_resultsexample.xml b/examples/concurrencyExample/src/main/res/layout/activity_realm_resultsexample.xml
new file mode 100644
index 0000000000..9192dc0ac9
--- /dev/null
+++ b/examples/concurrencyExample/src/main/res/layout/activity_realm_resultsexample.xml
@@ -0,0 +1,110 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="15dp"
+    android:orientation="vertical">
+
+    <LinearLayout
+        android:id="@+id/header"
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+        <TextView
+            android:id="@+id/update_message"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_margin="25dp"
+            android:gravity="center"
+            android:text="In the background there is a loop creating records."
+            android:textSize="24sp" />
+        <Button
+            android:id="@+id/quit_button"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Stop Background Loop" />
+    </LinearLayout>
+    <LinearLayout
+        android:id="@+id/form"
+        android:layout_below="@id/header"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="#ff1144aa"
+        android:orientation="vertical"
+        android:padding="20dp">
+
+        <TextView android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_margin="7dp"
+            android:gravity="center"
+            android:text="You can also create records manually..."
+            android:textSize="22sp" />
+
+        <TextView android:id="@+id/message_timestamp"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:gravity="center_horizontal"
+            android:text="Create a Record:"
+            android:textColor="#ffafafaf"
+            android:textSize="22sp" />
+
+        <View android:layout_width="match_parent"
+            android:layout_height="1dp"
+            android:layout_margin="12dp"
+            android:background="#ffcfcfcf" />
+
+        <EditText android:id="@+id/name"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:hint="Enter Person's Name" />
+
+        <EditText android:id="@+id/age"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:hint="Enter Person's Age" />
+
+        <RadioGroup android:id="@+id/petType"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+
+            <RadioButton android:id="@+id/hasCat"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Cat" />
+
+            <RadioButton android:id="@+id/hasDog"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="Dog" />
+        </RadioGroup>
+
+        <EditText android:id="@+id/pets_name"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:hint="Enter Pets Name" />
+
+        <Button android:id="@+id/insert_record_button"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="Create Record" />
+
+    </LinearLayout>
+    <LinearLayout
+        android:id="@+id/footer"
+        android:orientation="vertical"
+        android:layout_below="@id/form"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+        <TextView
+            android:id="@+id/size_status"
+            android:textSize="24sp"
+            android:textColor="@android:color/black"
+            android:background="@android:color/darker_gray"
+            android:layout_width="match_parent"
+            android:layout_height="40dp" />
+        <ListView
+            android:id="@+id/items_list"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"/>
+    </LinearLayout>
+</RelativeLayout>
+
diff --git a/examples/concurrencyExample/src/main/res/layout/simplelistitem.xml b/examples/concurrencyExample/src/main/res/layout/simplelistitem.xml
new file mode 100644
index 0000000000..9a63c4ce67
--- /dev/null
+++ b/examples/concurrencyExample/src/main/res/layout/simplelistitem.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<TextView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/field1"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content" />
\ No newline at end of file
diff --git a/examples/introExample/src/main/java/io/realm/examples/intro/RealmIntroExampleActivity.java b/examples/introExample/src/main/java/io/realm/examples/intro/RealmIntroExampleActivity.java
index b0b87fe4de..105d818ced 100644
--- a/examples/introExample/src/main/java/io/realm/examples/intro/RealmIntroExampleActivity.java
+++ b/examples/introExample/src/main/java/io/realm/examples/intro/RealmIntroExampleActivity.java
@@ -107,7 +107,7 @@ private String complexReadWrite() {
 
         // Open the default realm. All threads must use it's own reference to the realm.
         // Those can not be transferred across threads.
-        Realm realm = Realm.getInstance(this);
+        Realm realm = Realm.getInstance(this, false);
 
         // Add ten persons in one write transaction
         realm.beginTransaction();
diff --git a/realm-annotations-processor/src/main/java/io/realm/processor/RealmVersionChecker.java b/realm-annotations-processor/src/main/java/io/realm/processor/RealmVersionChecker.java
index 6eb88f9d86..b0c2a5cfcb 100644
--- a/realm-annotations-processor/src/main/java/io/realm/processor/RealmVersionChecker.java
+++ b/realm-annotations-processor/src/main/java/io/realm/processor/RealmVersionChecker.java
@@ -29,7 +29,7 @@
     public static final String REALM_ANDROID_DOWNLOAD_URL = "http://static.realm.io/downloads/java/latest";
 
     private static final String VERSION_URL = "http://static.realm.io/update/java?";
-    private static final String REALM_VERSION = "0.72.0"; //TODO: The version value should be pulled from a build file
+    private static final String REALM_VERSION = "0.73.0"; //TODO: The version value should be pulled from a build file
     private static final int READ_TIMEOUT = 2000;
     private static final int CONNECT_TIMEOUT = 4000;
 
diff --git a/realm/build.gradle b/realm/build.gradle
index 974787ed81..35c3779d1f 100644
--- a/realm/build.gradle
+++ b/realm/build.gradle
@@ -26,6 +26,7 @@ android {
 
 }
 dependencies {
+    compile 'com.intellij:annotations:+@jar'
     androidTestApt files("../realm-annotations-processor/build/libs/realm-annotations-processor-${version}.jar")
 }
 
diff --git a/realm/src/main/java/io/realm/RealmBaseAdapter.java b/realm/src/main/java/io/realm/RealmBaseAdapter.java
new file mode 100644
index 0000000000..8fd6d1e583
--- /dev/null
+++ b/realm/src/main/java/io/realm/RealmBaseAdapter.java
@@ -0,0 +1,74 @@
+/*
+ * Copyright 2014 Realm Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package io.realm;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.widget.BaseAdapter;
+
+public abstract class RealmBaseAdapter<T extends RealmObject> extends BaseAdapter {
+
+    protected LayoutInflater inflater;
+    protected RealmResults<T> realmResults;
+    protected Context context;
+
+    public RealmBaseAdapter(Context context, RealmResults<T> realmResults, boolean automaticUpdate) {
+        if (context == null) {
+            throw new IllegalArgumentException("Context cannot be null");
+        }
+        if (realmResults == null) {
+            throw new IllegalArgumentException("RealmResults cannot be null");
+        }
+
+        this.context = context;
+        this.realmResults = realmResults;
+        this.inflater = LayoutInflater.from(context);
+        if (automaticUpdate) {
+            realmResults.getRealm().addChangeListener(new RealmChangeListener() {
+                @Override
+                public void onChange() {
+                    notifyDataSetChanged();
+                }
+            });
+        }
+    }
+
+    @Override
+    public int getCount() {
+        return realmResults.size();
+    }
+
+    @Override
+    public T getItem(int i) {
+        return realmResults.get(i);
+    }
+
+    @Override
+    public long getItemId(int i) {
+        return i; // TODO: find better solution once we have unique IDs
+    }
+
+    /**
+     * Update the RealmResults associated to the Adapter. Useful when the query has been changed.
+     * If the query does not change you might consider using the automaticUpdate feature
+     * @param realmResults the new RealmResults coming from the new query.
+     */
+    public void updateRealmResults(RealmResults<T> realmResults) {
+        this.realmResults = realmResults;
+        notifyDataSetChanged();
+    }
+}
diff --git a/settings.gradle b/settings.gradle
index d6a2d9d6c5..f1379ff406 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -1,4 +1,4 @@
-include ':realm', ':introExample', ':gridViewExample', ':concurrencyExample', ':encryptionExample', ':migrationExample', ':jsonImportExample'
+include 'realm', ':introExample', ':gridViewExample', ':concurrencyExample', ':encryptionExample', ':migrationExample', ':adapterExample', ':jsonImportExample'
 include ':performance'
 project(':performance').projectDir = new File('examples/performance')
 
@@ -9,3 +9,4 @@ project(':concurrencyExample').projectDir = new File('examples/concurrencyExampl
 project(':encryptionExample').projectDir = new File('examples/encryptionExample')
 project(':migrationExample').projectDir = new File('examples/migrationExample')
 project(':jsonImportExample').projectDir = new File('examples/jsonImportExample')
+project(':adapterExample').projectDir = new File('examples/adapterExample')
diff --git a/version.txt b/version.txt
index 67d5f802ff..598d667c91 100644
--- a/version.txt
+++ b/version.txt
@@ -1 +1 @@
-0.72.0
\ No newline at end of file
+0.73.0
\ No newline at end of file
