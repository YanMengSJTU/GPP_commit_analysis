diff --git a/otto/src/main/java/com/squareup/otto/Bus.java b/otto/src/main/java/com/squareup/otto/Bus.java
index 5b5745f..bbea313 100644
--- a/otto/src/main/java/com/squareup/otto/Bus.java
+++ b/otto/src/main/java/com/squareup/otto/Bus.java
@@ -19,7 +19,6 @@
 
 import java.lang.reflect.InvocationTargetException;
 import java.util.Collection;
-import java.util.HashMap;
 import java.util.HashSet;
 import java.util.LinkedList;
 import java.util.List;
@@ -422,8 +421,11 @@ EventProducer getProducerForEventType(Class<?> type) {
   Set<Class<?>> flattenHierarchy(Class<?> concreteClass) {
     Set<Class<?>> classes = flattenHierarchyCache.get(concreteClass);
     if (classes == null) {
-      classes = getClassesFor(concreteClass);
-      flattenHierarchyCache.put(concreteClass, classes);
+      Set<Class<?>> classesCreation = getClassesFor(concreteClass);
+      classes = flattenHierarchyCache.putIfAbsent(concreteClass, classesCreation);
+      if(classes == null) {
+          classes = classesCreation;
+      }   
     }
 
     return classes;
@@ -461,8 +463,8 @@ private static void throwRuntimeException(String msg, InvocationTargetException
     }
   }
 
-  private final Map<Class<?>, Set<Class<?>>> flattenHierarchyCache =
-      new HashMap<Class<?>, Set<Class<?>>>();
+  private final ConcurrentMap<Class<?>, Set<Class<?>>> flattenHierarchyCache =
+      new ConcurrentHashMap<Class<?>, Set<Class<?>>>();
 
   /** Simple struct representing an event and its handler. */
   static class EventWithHandler {
