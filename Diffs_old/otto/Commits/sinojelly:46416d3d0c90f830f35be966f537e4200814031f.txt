diff --git a/library/build.gradle b/library/build.gradle
new file mode 100644
index 0000000..0647ff2
--- /dev/null
+++ b/library/build.gradle
@@ -0,0 +1,27 @@
+apply plugin: 'java'
+apply plugin: 'maven'
+
+group = 'com.squareup'
+version = '1.3.4-SNAPSHOT'
+
+description = """Otto"""
+
+sourceCompatibility = 1.6
+targetCompatibility = 1.6
+
+configurations.all {
+}
+
+repositories {
+     mavenRepo url: "https://oss.sonatype.org/content/repositories/snapshots"
+     mavenRepo url: "http://repo.maven.apache.org/maven2"
+}
+dependencies {
+    testCompile group: 'junit', name: 'junit', version:'4.10'
+    testCompile group: 'org.easytesting', name: 'fest-assert-core', version:'2.0M7'
+    compile(group: 'com.google.android', name: 'android', version:'4.1.1.4') {
+       /* This dependency was originally in the Maven provided scope, but the project was not of type war.
+       This behavior is not yet supported by Gradle, so this dependency has been converted to a compile dependency.
+       Please review and delete this closure when resolved. */
+    }
+}
diff --git a/library/src/main/java/com/squareup/otto/AnnotatedHandlerFinder.java b/library/src/main/java/com/squareup/otto/AnnotatedHandlerFinder.java
index 861113b..375c5c4 100644
--- a/library/src/main/java/com/squareup/otto/AnnotatedHandlerFinder.java
+++ b/library/src/main/java/com/squareup/otto/AnnotatedHandlerFinder.java
@@ -49,7 +49,12 @@ private static void loadAnnotatedMethods(Class<?> listenerClass) {
     Map<Class<?>, Set<Method>> subscriberMethods = new HashMap<Class<?>, Set<Method>>();
     Map<Class<?>, Method> producerMethods = new HashMap<Class<?>, Method>();
 
-    for (Method method : listenerClass.getDeclaredMethods()) {
+    Class<?> superClass = listenerClass.getSuperclass(), targetClass = listenerClass;
+    if (superClass != null && listenerClass.getSimpleName().equals(superClass.getSimpleName() + "_")) {
+          targetClass = superClass;
+    }
+    for (Method method : targetClass.getDeclaredMethods()) {
+    //for (Method method : listenerClass.getDeclaredMethods()) {
       if (method.isAnnotationPresent(Subscribe.class)) {
         Class<?>[] parameterTypes = method.getParameterTypes();
         if (parameterTypes.length != 1) {
