diff --git a/library/src/test/java/com/squareup/otto/SimpleHandlerCreator.java b/library/src/test/java/com/squareup/otto/SimpleHandlerCreator.java
new file mode 100644
index 0000000..0611834
--- /dev/null
+++ b/library/src/test/java/com/squareup/otto/SimpleHandlerCreator.java
@@ -0,0 +1,13 @@
+package com.squareup.otto;
+
+import java.lang.reflect.Method;
+
+import com.squareup.otto.Subscribe.ExecuteOn;
+
+public class SimpleHandlerCreator extends EventHandlerCreator {
+  @Override
+  public EventHandler createHandler(ExecuteOn thread, Object target,
+      Method method) {
+    return new EventHandler(target, method);
+  }
+}
diff --git a/library/src/test/java/com/squareup/otto/UnregisteringHandlerTest.java b/library/src/test/java/com/squareup/otto/UnregisteringHandlerTest.java
index 50b9990..64c3193 100644
--- a/library/src/test/java/com/squareup/otto/UnregisteringHandlerTest.java
+++ b/library/src/test/java/com/squareup/otto/UnregisteringHandlerTest.java
@@ -16,14 +16,20 @@
 
 package com.squareup.otto;
 
-import org.junit.Before;
-import org.junit.Test;
-
-import java.util.*;
-
 import static junit.framework.Assert.assertEquals;
 import static junit.framework.Assert.fail;
 
+import java.util.Arrays;
+import java.util.Comparator;
+import java.util.HashMap;
+import java.util.Map;
+import java.util.Set;
+import java.util.SortedSet;
+import java.util.TreeSet;
+
+import org.junit.Before;
+import org.junit.Test;
+
 /** Test case for subscribers which unregister while handling an event. */
 public class UnregisteringHandlerTest {
 
@@ -104,7 +110,7 @@ public int compare(EventHandler eventHandler, EventHandler eventHandler1) {
 
     @Override
     public Map<Class<?>, Set<EventHandler>> findAllSubscribers(Object listener) {
-      Map<Class<?>, Set<EventHandler>> found = HandlerFinder.ANNOTATED.findAllSubscribers(listener);
+      Map<Class<?>, Set<EventHandler>> found = AnnotatedHandlerFinder.findAllSubscribers(listener,  new SimpleHandlerCreator());
       Map<Class<?>, Set<EventHandler>> sorted = new HashMap<Class<?>, Set<EventHandler>>();
       for (Map.Entry<Class<?>, Set<EventHandler>> entry : found.entrySet()) {
         SortedSet<EventHandler> handlers = new TreeSet<EventHandler>(handlerComparator);
