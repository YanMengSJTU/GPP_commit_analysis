diff --git a/checkstyle.xml b/checkstyle.xml
index b2095ce..869ec7c 100644
--- a/checkstyle.xml
+++ b/checkstyle.xml
@@ -90,7 +90,6 @@
         <!-- See http://checkstyle.sf.net/config_coding.html -->
         <!--module name="AvoidInlineConditionals"/-->
         <module name="CovariantEquals"/>
-        <module name="DoubleCheckedLocking"/>
         <module name="EmptyStatement"/>
         <module name="EqualsAvoidNull"/>
         <module name="EqualsHashCode"/>
diff --git a/library/src/main/java/com/squareup/otto/Bus.java b/library/src/main/java/com/squareup/otto/Bus.java
index 0f5d787..d2aa566 100644
--- a/library/src/main/java/com/squareup/otto/Bus.java
+++ b/library/src/main/java/com/squareup/otto/Bus.java
@@ -191,7 +191,9 @@ public void register(Object object) {
       EventProducer previousProducer = producersByType.putIfAbsent(type, producer);
       //checking if the previous producer existed
       if (previousProducer != null) {
-        throw new IllegalArgumentException("Producer method for type " + type + " already registered.");
+        throw new IllegalArgumentException("Producer method for type " + type
+          + " found on type " + producer.getTarget().getClass()
+          + ", but already registered by type " + previousProducer.getTarget().getClass() + ".");
       }
       Set<EventHandler> handlers = handlersByType.get(type);
       if (handlers != null && !handlers.isEmpty()) {
diff --git a/library/src/main/java/com/squareup/otto/EventProducer.java b/library/src/main/java/com/squareup/otto/EventProducer.java
index 63d40f6..18ce5ca 100644
--- a/library/src/main/java/com/squareup/otto/EventProducer.java
+++ b/library/src/main/java/com/squareup/otto/EventProducer.java
@@ -118,4 +118,9 @@ public Object produceEvent() throws InvocationTargetException {
     return method.equals(other.method) && target == other.target;
   }
 
+  /* useful for debugging and exceptions (package-private)*/
+  Object getTarget() {
+      return target;
+  }
+
 }
