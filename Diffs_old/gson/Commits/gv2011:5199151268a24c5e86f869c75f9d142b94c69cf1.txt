diff --git a/src/main/java/com/google/gson/JsonArray.java b/src/main/java/com/github/gv2011/jsoncore/JsonArray.java
similarity index 99%
rename from src/main/java/com/google/gson/JsonArray.java
rename to src/main/java/com/github/gv2011/jsoncore/JsonArray.java
index 19299d14e..ea6a9217e 100644
--- a/src/main/java/com/google/gson/JsonArray.java
+++ b/src/main/java/com/github/gv2011/jsoncore/JsonArray.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.google.gson;
+package com.github.gv2011.jsoncore;
 
 import java.math.BigDecimal;
 import java.math.BigInteger;
diff --git a/src/main/java/com/google/gson/JsonElement.java b/src/main/java/com/github/gv2011/jsoncore/JsonElement.java
similarity index 99%
rename from src/main/java/com/google/gson/JsonElement.java
rename to src/main/java/com/github/gv2011/jsoncore/JsonElement.java
index 8342318b1..5f07a556c 100644
--- a/src/main/java/com/google/gson/JsonElement.java
+++ b/src/main/java/com/github/gv2011/jsoncore/JsonElement.java
@@ -14,16 +14,15 @@
  * limitations under the License.
  */
 
-package com.google.gson;
-
-import com.github.gv2011.jsoncore.JsonWriter;
-import com.google.gson.internal.Streams;
+package com.github.gv2011.jsoncore;
 
 import java.io.IOException;
 import java.io.StringWriter;
 import java.math.BigDecimal;
 import java.math.BigInteger;
 
+import com.github.gv2011.jsoncore.imp.Streams;
+
 /**
  * A class representing an element of Json. It could either be a {@link JsonObject}, a
  * {@link JsonArray}, a {@link JsonPrimitive} or a {@link JsonNull}.
diff --git a/src/main/java/com/google/gson/JsonNull.java b/src/main/java/com/github/gv2011/jsoncore/JsonNull.java
similarity index 93%
rename from src/main/java/com/google/gson/JsonNull.java
rename to src/main/java/com/github/gv2011/jsoncore/JsonNull.java
index 56883369e..f7fcd01b4 100755
--- a/src/main/java/com/google/gson/JsonNull.java
+++ b/src/main/java/com/github/gv2011/jsoncore/JsonNull.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.google.gson;
+package com.github.gv2011.jsoncore;
 
 /**
  * A class representing a Json {@code null} value.
diff --git a/src/main/java/com/google/gson/JsonObject.java b/src/main/java/com/github/gv2011/jsoncore/JsonObject.java
similarity index 98%
rename from src/main/java/com/google/gson/JsonObject.java
rename to src/main/java/com/github/gv2011/jsoncore/JsonObject.java
index 78c7a177a..9ab6c3388 100644
--- a/src/main/java/com/google/gson/JsonObject.java
+++ b/src/main/java/com/github/gv2011/jsoncore/JsonObject.java
@@ -14,13 +14,13 @@
  * limitations under the License.
  */
 
-package com.google.gson;
-
-import com.google.gson.internal.LinkedTreeMap;
+package com.github.gv2011.jsoncore;
 
 import java.util.Map;
 import java.util.Set;
 
+import com.github.gv2011.jsoncore.imp.LinkedTreeMap;
+
 /**
  * A class representing an object type in Json. An object consists of name-value pairs where names
  * are strings, and values are any other type of {@link JsonElement}. This allows for a creating a
diff --git a/src/main/java/com/google/gson/JsonPrimitive.java b/src/main/java/com/github/gv2011/jsoncore/JsonPrimitive.java
similarity index 97%
rename from src/main/java/com/google/gson/JsonPrimitive.java
rename to src/main/java/com/github/gv2011/jsoncore/JsonPrimitive.java
index e2443d435..d46d5cab5 100644
--- a/src/main/java/com/google/gson/JsonPrimitive.java
+++ b/src/main/java/com/github/gv2011/jsoncore/JsonPrimitive.java
@@ -14,13 +14,13 @@
  * limitations under the License.
  */
 
-package com.google.gson;
+package com.github.gv2011.jsoncore;
 
 import java.math.BigDecimal;
 import java.math.BigInteger;
 
-import com.google.gson.internal.$Gson$Preconditions;
-import com.google.gson.internal.LazilyParsedNumber;
+import com.github.gv2011.jsoncore.imp.LazilyParsedNumber;
+import com.github.gv2011.jsoncore.imp.Preconditions;
 
 /**
  * A class representing a Json primitive value. A primitive value
@@ -97,7 +97,7 @@ void setValue(Object primitive) {
       char c = ((Character) primitive).charValue();
       this.value = String.valueOf(c);
     } else {
-      $Gson$Preconditions.checkArgument(primitive instanceof Number
+      Preconditions.checkArgument(primitive instanceof Number
               || isPrimitiveOrString(primitive));
       this.value = primitive;
     }
diff --git a/src/main/java/com/github/gv2011/jsoncore/JsonReader.java b/src/main/java/com/github/gv2011/jsoncore/JsonReader.java
index 57d81be1e..e4b6242e0 100644
--- a/src/main/java/com/github/gv2011/jsoncore/JsonReader.java
+++ b/src/main/java/com/github/gv2011/jsoncore/JsonReader.java
@@ -22,6 +22,9 @@
 import java.io.IOException;
 import java.io.Reader;
 
+import com.github.gv2011.jsoncore.imp.JsonReaderInternalAccess;
+import com.github.gv2011.jsoncore.imp.JsonTreeReader;
+
 /**
  * Reads a JSON (<a href="http://www.ietf.org/rfc/rfc7159.txt">RFC 7159</a>)
  * encoded value as a stream of tokens. This stream includes both literal
diff --git a/src/main/java/com/github/gv2011/jsoncore/JsonReaderInternalAccess.java b/src/main/java/com/github/gv2011/jsoncore/imp/JsonReaderInternalAccess.java
similarity index 91%
rename from src/main/java/com/github/gv2011/jsoncore/JsonReaderInternalAccess.java
rename to src/main/java/com/github/gv2011/jsoncore/imp/JsonReaderInternalAccess.java
index 9eecafc0f..a972d2dec 100644
--- a/src/main/java/com/github/gv2011/jsoncore/JsonReaderInternalAccess.java
+++ b/src/main/java/com/github/gv2011/jsoncore/imp/JsonReaderInternalAccess.java
@@ -14,10 +14,12 @@
  * limitations under the License.
  */
 
-package com.github.gv2011.jsoncore;
+package com.github.gv2011.jsoncore.imp;
 
 import java.io.IOException;
 
+import com.github.gv2011.jsoncore.JsonReader;
+
 /**
  * Internal-only APIs of JsonReader available only to other classes in Gson.
  */
diff --git a/src/main/java/com/github/gv2011/jsoncore/JsonTreeReader.java b/src/main/java/com/github/gv2011/jsoncore/imp/JsonTreeReader.java
similarity index 94%
rename from src/main/java/com/github/gv2011/jsoncore/JsonTreeReader.java
rename to src/main/java/com/github/gv2011/jsoncore/imp/JsonTreeReader.java
index eef7c9895..b4cb4a91e 100644
--- a/src/main/java/com/github/gv2011/jsoncore/JsonTreeReader.java
+++ b/src/main/java/com/github/gv2011/jsoncore/imp/JsonTreeReader.java
@@ -14,13 +14,7 @@
  * limitations under the License.
  */
 
-package com.github.gv2011.jsoncore;
-
-import com.google.gson.JsonArray;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonNull;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonPrimitive;
+package com.github.gv2011.jsoncore.imp;
 
 import java.io.IOException;
 import java.io.Reader;
@@ -29,6 +23,14 @@
 import java.util.List;
 import java.util.Map;
 
+import com.github.gv2011.jsoncore.JsonArray;
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonNull;
+import com.github.gv2011.jsoncore.JsonObject;
+import com.github.gv2011.jsoncore.JsonPrimitive;
+import com.github.gv2011.jsoncore.JsonReader;
+import com.github.gv2011.jsoncore.JsonToken;
+
 /**
  * This reader walks the elements of a JsonElement as if it was coming from a
  * character stream.
diff --git a/src/main/java/com/google/gson/internal/LazilyParsedNumber.java b/src/main/java/com/github/gv2011/jsoncore/imp/LazilyParsedNumber.java
similarity index 98%
rename from src/main/java/com/google/gson/internal/LazilyParsedNumber.java
rename to src/main/java/com/github/gv2011/jsoncore/imp/LazilyParsedNumber.java
index 3669af7b5..8d6caca2c 100644
--- a/src/main/java/com/google/gson/internal/LazilyParsedNumber.java
+++ b/src/main/java/com/github/gv2011/jsoncore/imp/LazilyParsedNumber.java
@@ -13,7 +13,7 @@
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
-package com.google.gson.internal;
+package com.github.gv2011.jsoncore.imp;
 
 import java.io.ObjectStreamException;
 import java.math.BigDecimal;
diff --git a/src/main/java/com/google/gson/internal/LinkedTreeMap.java b/src/main/java/com/github/gv2011/jsoncore/imp/LinkedTreeMap.java
similarity index 99%
rename from src/main/java/com/google/gson/internal/LinkedTreeMap.java
rename to src/main/java/com/github/gv2011/jsoncore/imp/LinkedTreeMap.java
index 80462742e..336a9278c 100644
--- a/src/main/java/com/google/gson/internal/LinkedTreeMap.java
+++ b/src/main/java/com/github/gv2011/jsoncore/imp/LinkedTreeMap.java
@@ -15,7 +15,7 @@
  * limitations under the License.
  */
 
-package com.google.gson.internal;
+package com.github.gv2011.jsoncore.imp;
 
 import java.io.ObjectStreamException;
 import java.io.Serializable;
diff --git a/src/main/java/com/google/gson/internal/$Gson$Preconditions.java b/src/main/java/com/github/gv2011/jsoncore/imp/Preconditions.java
similarity index 88%
rename from src/main/java/com/google/gson/internal/$Gson$Preconditions.java
rename to src/main/java/com/github/gv2011/jsoncore/imp/Preconditions.java
index f0e7d3fac..68fbc7444 100644
--- a/src/main/java/com/google/gson/internal/$Gson$Preconditions.java
+++ b/src/main/java/com/github/gv2011/jsoncore/imp/Preconditions.java
@@ -14,7 +14,7 @@
  * limitations under the License.
  */
 
-package com.google.gson.internal;
+package com.github.gv2011.jsoncore.imp;
 
 /**
  * A simple utility class used to check method Preconditions.
@@ -29,8 +29,8 @@
  * @author Inderjeet Singh
  * @author Joel Leitch
  */
-public final class $Gson$Preconditions {
-  private $Gson$Preconditions() {
+public final class Preconditions {
+  private Preconditions() {
     throw new UnsupportedOperationException();
   }
 
diff --git a/src/main/java/com/google/gson/internal/Streams.java b/src/main/java/com/github/gv2011/jsoncore/imp/Streams.java
similarity index 96%
rename from src/main/java/com/google/gson/internal/Streams.java
rename to src/main/java/com/github/gv2011/jsoncore/imp/Streams.java
index a644c2bf6..e6dda7225 100644
--- a/src/main/java/com/google/gson/internal/Streams.java
+++ b/src/main/java/com/github/gv2011/jsoncore/imp/Streams.java
@@ -14,14 +14,14 @@
  * limitations under the License.
  */
 
-package com.google.gson.internal;
+package com.github.gv2011.jsoncore.imp;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonNull;
 import com.github.gv2011.jsoncore.JsonReader;
 import com.github.gv2011.jsoncore.JsonWriter;
 import com.github.gv2011.jsoncore.MalformedJsonException;
-import com.google.gson.JsonElement;
 import com.google.gson.JsonIOException;
-import com.google.gson.JsonNull;
 import com.google.gson.JsonParseException;
 import com.google.gson.JsonSyntaxException;
 import com.google.gson.internal.bind.TypeAdapters;
diff --git a/src/main/java/com/google/gson/DefaultDateTypeAdapter.java b/src/main/java/com/google/gson/DefaultDateTypeAdapter.java
index 81700e638..9e361f3ad 100644
--- a/src/main/java/com/google/gson/DefaultDateTypeAdapter.java
+++ b/src/main/java/com/google/gson/DefaultDateTypeAdapter.java
@@ -26,6 +26,8 @@
 import java.util.Locale;
 import java.util.TimeZone;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.google.gson.internal.bind.util.ISO8601Utils;
 
 /**
diff --git a/src/main/java/com/google/gson/FieldAttributes.java b/src/main/java/com/google/gson/FieldAttributes.java
index bcabff14a..6cd6d129d 100644
--- a/src/main/java/com/google/gson/FieldAttributes.java
+++ b/src/main/java/com/google/gson/FieldAttributes.java
@@ -16,13 +16,14 @@
 
 package com.google.gson;
 
-import com.google.gson.internal.$Gson$Preconditions;
 import java.lang.annotation.Annotation;
 import java.lang.reflect.Field;
 import java.lang.reflect.Type;
 import java.util.Arrays;
 import java.util.Collection;
 
+import com.github.gv2011.jsoncore.imp.Preconditions;
+
 /**
  * A data object that stores attributes of a field.
  *
@@ -42,7 +43,7 @@
    * @param f the field to pull attributes from
    */
   public FieldAttributes(Field f) {
-    $Gson$Preconditions.checkNotNull(f);
+    Preconditions.checkNotNull(f);
     this.field = f;
   }
 
diff --git a/src/main/java/com/google/gson/Gson.java b/src/main/java/com/google/gson/Gson.java
index 3c3075bc9..dedde21ab 100644
--- a/src/main/java/com/google/gson/Gson.java
+++ b/src/main/java/com/google/gson/Gson.java
@@ -34,15 +34,17 @@
 import java.util.concurrent.atomic.AtomicLong;
 import java.util.concurrent.atomic.AtomicLongArray;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonNull;
 import com.github.gv2011.jsoncore.JsonReader;
 import com.github.gv2011.jsoncore.JsonToken;
-import com.github.gv2011.jsoncore.JsonTreeReader;
 import com.github.gv2011.jsoncore.JsonWriter;
 import com.github.gv2011.jsoncore.MalformedJsonException;
+import com.github.gv2011.jsoncore.imp.JsonTreeReader;
+import com.github.gv2011.jsoncore.imp.Streams;
 import com.google.gson.internal.ConstructorConstructor;
 import com.google.gson.internal.Excluder;
 import com.google.gson.internal.Primitives;
-import com.google.gson.internal.Streams;
 import com.google.gson.internal.bind.ArrayTypeAdapter;
 import com.google.gson.internal.bind.CollectionTypeAdapterFactory;
 import com.google.gson.internal.bind.DateTypeAdapter;
diff --git a/src/main/java/com/google/gson/GsonBuilder.java b/src/main/java/com/google/gson/GsonBuilder.java
index 7d7f2d9ae..f8e0d6b7a 100644
--- a/src/main/java/com/google/gson/GsonBuilder.java
+++ b/src/main/java/com/google/gson/GsonBuilder.java
@@ -26,8 +26,9 @@
 import java.util.List;
 import java.util.Map;
 
+import com.github.gv2011.jsoncore.JsonObject;
 import com.github.gv2011.jsoncore.JsonReader;
-import com.google.gson.internal.$Gson$Preconditions;
+import com.github.gv2011.jsoncore.imp.Preconditions;
 import com.google.gson.internal.Excluder;
 import com.google.gson.internal.bind.TreeTypeAdapter;
 import com.google.gson.internal.bind.TypeAdapters;
@@ -469,7 +470,7 @@ public GsonBuilder setDateFormat(int dateStyle, int timeStyle) {
    */
   @SuppressWarnings({"unchecked", "rawtypes"})
   public GsonBuilder registerTypeAdapter(Type type, Object typeAdapter) {
-    $Gson$Preconditions.checkArgument(typeAdapter instanceof JsonSerializer<?>
+    Preconditions.checkArgument(typeAdapter instanceof JsonSerializer<?>
         || typeAdapter instanceof JsonDeserializer<?>
         || typeAdapter instanceof InstanceCreator<?>
         || typeAdapter instanceof TypeAdapter<?>);
@@ -515,7 +516,7 @@ public GsonBuilder registerTypeAdapterFactory(TypeAdapterFactory factory) {
    */
   @SuppressWarnings({"unchecked", "rawtypes"})
   public GsonBuilder registerTypeHierarchyAdapter(Class<?> baseType, Object typeAdapter) {
-    $Gson$Preconditions.checkArgument(typeAdapter instanceof JsonSerializer<?>
+    Preconditions.checkArgument(typeAdapter instanceof JsonSerializer<?>
         || typeAdapter instanceof JsonDeserializer<?>
         || typeAdapter instanceof TypeAdapter<?>);
     if (typeAdapter instanceof JsonDeserializer || typeAdapter instanceof JsonSerializer) {
diff --git a/src/main/java/com/google/gson/JsonDeserializationContext.java b/src/main/java/com/google/gson/JsonDeserializationContext.java
index 00c750543..e73f06cb6 100644
--- a/src/main/java/com/google/gson/JsonDeserializationContext.java
+++ b/src/main/java/com/google/gson/JsonDeserializationContext.java
@@ -18,6 +18,8 @@
 
 import java.lang.reflect.Type;
 
+import com.github.gv2011.jsoncore.JsonElement;
+
 /**
  * Context for deserialization that is passed to a custom deserializer during invocation of its
  * {@link JsonDeserializer#deserialize(JsonElement, Type, JsonDeserializationContext)}
diff --git a/src/main/java/com/google/gson/JsonDeserializer.java b/src/main/java/com/google/gson/JsonDeserializer.java
index 0589eb284..8d13325f7 100644
--- a/src/main/java/com/google/gson/JsonDeserializer.java
+++ b/src/main/java/com/google/gson/JsonDeserializer.java
@@ -18,6 +18,8 @@
 
 import java.lang.reflect.Type;
 
+import com.github.gv2011.jsoncore.JsonElement;
+
 /**
  * <p>Interface representing a custom deserializer for Json. You should write a custom
  * deserializer, if you are not happy with the default deserialization done by Gson. You will
diff --git a/src/main/java/com/google/gson/JsonParser.java b/src/main/java/com/google/gson/JsonParser.java
index 3970bebf9..9cb4f8d3d 100755
--- a/src/main/java/com/google/gson/JsonParser.java
+++ b/src/main/java/com/google/gson/JsonParser.java
@@ -19,10 +19,11 @@
 import java.io.Reader;
 import java.io.StringReader;
 
+import com.github.gv2011.jsoncore.JsonElement;
 import com.github.gv2011.jsoncore.JsonReader;
 import com.github.gv2011.jsoncore.JsonToken;
 import com.github.gv2011.jsoncore.MalformedJsonException;
-import com.google.gson.internal.Streams;
+import com.github.gv2011.jsoncore.imp.Streams;
 
 /**
  * A parser to parse Json into a parse tree of {@link JsonElement}s
diff --git a/src/main/java/com/google/gson/JsonSerializationContext.java b/src/main/java/com/google/gson/JsonSerializationContext.java
index ca3ec4f90..0a453c168 100644
--- a/src/main/java/com/google/gson/JsonSerializationContext.java
+++ b/src/main/java/com/google/gson/JsonSerializationContext.java
@@ -18,6 +18,8 @@
 
 import java.lang.reflect.Type;
 
+import com.github.gv2011.jsoncore.JsonElement;
+
 /**
  * Context for serialization that is passed to a custom serializer during invocation of its
  * {@link JsonSerializer#serialize(Object, Type, JsonSerializationContext)} method.
diff --git a/src/main/java/com/google/gson/JsonSerializer.java b/src/main/java/com/google/gson/JsonSerializer.java
index a60500336..83562358a 100644
--- a/src/main/java/com/google/gson/JsonSerializer.java
+++ b/src/main/java/com/google/gson/JsonSerializer.java
@@ -18,6 +18,8 @@
 
 import java.lang.reflect.Type;
 
+import com.github.gv2011.jsoncore.JsonElement;
+
 /**
  * Interface representing a custom serializer for Json. You should write a custom serializer, if
  * you are not happy with the default serialization done by Gson. You will also need to register
diff --git a/src/main/java/com/google/gson/JsonStreamParser.java b/src/main/java/com/google/gson/JsonStreamParser.java
index 4e0134019..b46a43728 100644
--- a/src/main/java/com/google/gson/JsonStreamParser.java
+++ b/src/main/java/com/google/gson/JsonStreamParser.java
@@ -22,10 +22,11 @@
 import java.util.Iterator;
 import java.util.NoSuchElementException;
 
+import com.github.gv2011.jsoncore.JsonElement;
 import com.github.gv2011.jsoncore.JsonReader;
 import com.github.gv2011.jsoncore.JsonToken;
 import com.github.gv2011.jsoncore.MalformedJsonException;
-import com.google.gson.internal.Streams;
+import com.github.gv2011.jsoncore.imp.Streams;
 
 /**
  * A streaming parser that allows reading of multiple {@link JsonElement}s from the specified reader
diff --git a/src/main/java/com/google/gson/LongSerializationPolicy.java b/src/main/java/com/google/gson/LongSerializationPolicy.java
index 7b732bab7..f6aaf42f3 100644
--- a/src/main/java/com/google/gson/LongSerializationPolicy.java
+++ b/src/main/java/com/google/gson/LongSerializationPolicy.java
@@ -16,6 +16,9 @@
 
 package com.google.gson;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonPrimitive;
+
 /**
  * Defines the expected format for a {@code long} or {@code Long} type when its serialized.
  *
diff --git a/src/main/java/com/google/gson/TypeAdapter.java b/src/main/java/com/google/gson/TypeAdapter.java
index 3920facc3..74fc38535 100644
--- a/src/main/java/com/google/gson/TypeAdapter.java
+++ b/src/main/java/com/google/gson/TypeAdapter.java
@@ -17,10 +17,12 @@
 package com.google.gson;
 
 import com.google.gson.internal.bind.JsonTreeWriter;
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonNull;
 import com.github.gv2011.jsoncore.JsonReader;
 import com.github.gv2011.jsoncore.JsonToken;
-import com.github.gv2011.jsoncore.JsonTreeReader;
 import com.github.gv2011.jsoncore.JsonWriter;
+import com.github.gv2011.jsoncore.imp.JsonTreeReader;
 
 import java.io.IOException;
 import java.io.Reader;
diff --git a/src/main/java/com/google/gson/internal/$Gson$Types.java b/src/main/java/com/google/gson/internal/$Gson$Types.java
index 017e27cee..7e7dce047 100644
--- a/src/main/java/com/google/gson/internal/$Gson$Types.java
+++ b/src/main/java/com/google/gson/internal/$Gson$Types.java
@@ -16,6 +16,9 @@
 
 package com.google.gson.internal;
 
+import static com.github.gv2011.jsoncore.imp.Preconditions.checkArgument;
+import static com.github.gv2011.jsoncore.imp.Preconditions.checkNotNull;
+
 import java.io.Serializable;
 import java.lang.reflect.Array;
 import java.lang.reflect.GenericArrayType;
@@ -31,9 +34,6 @@
 import java.util.NoSuchElementException;
 import java.util.Properties;
 
-import static com.google.gson.internal.$Gson$Preconditions.checkArgument;
-import static com.google.gson.internal.$Gson$Preconditions.checkNotNull;
-
 /**
  * Static methods for working with types.
  *
diff --git a/src/main/java/com/google/gson/internal/ConstructorConstructor.java b/src/main/java/com/google/gson/internal/ConstructorConstructor.java
index ffe3cb48e..7ffcf2855 100644
--- a/src/main/java/com/google/gson/internal/ConstructorConstructor.java
+++ b/src/main/java/com/google/gson/internal/ConstructorConstructor.java
@@ -38,6 +38,7 @@
 import java.util.concurrent.ConcurrentNavigableMap;
 import java.util.concurrent.ConcurrentSkipListMap;
 
+import com.github.gv2011.jsoncore.imp.LinkedTreeMap;
 import com.google.gson.InstanceCreator;
 import com.google.gson.JsonIOException;
 import com.google.gson.reflect.TypeToken;
diff --git a/src/main/java/com/google/gson/internal/Primitives.java b/src/main/java/com/google/gson/internal/Primitives.java
index a98f6242a..872f50225 100644
--- a/src/main/java/com/google/gson/internal/Primitives.java
+++ b/src/main/java/com/google/gson/internal/Primitives.java
@@ -22,6 +22,8 @@
 import java.util.HashMap;
 import java.util.Map;
 
+import com.github.gv2011.jsoncore.imp.Preconditions;
+
 /**
  * Contains static utility methods pertaining to primitive types and their
  * corresponding wrapper types.
@@ -80,7 +82,7 @@ public static boolean isPrimitive(Type type) {
    */
   public static boolean isWrapperType(Type type) {
     return WRAPPER_TO_PRIMITIVE_TYPE.containsKey(
-        $Gson$Preconditions.checkNotNull(type));
+        Preconditions.checkNotNull(type));
   }
 
   /**
@@ -96,7 +98,7 @@ public static boolean isWrapperType(Type type) {
     // cast is safe: long.class and Long.class are both of type Class<Long>
     @SuppressWarnings("unchecked")
     Class<T> wrapped = (Class<T>) PRIMITIVE_TO_WRAPPER_TYPE.get(
-        $Gson$Preconditions.checkNotNull(type));
+        Preconditions.checkNotNull(type));
     return (wrapped == null) ? type : wrapped;
   }
 
@@ -113,7 +115,7 @@ public static boolean isWrapperType(Type type) {
     // cast is safe: long.class and Long.class are both of type Class<Long>
     @SuppressWarnings("unchecked")
     Class<T> unwrapped = (Class<T>) WRAPPER_TO_PRIMITIVE_TYPE.get(
-        $Gson$Preconditions.checkNotNull(type));
+        Preconditions.checkNotNull(type));
     return (unwrapped == null) ? type : unwrapped;
   }
 }
diff --git a/src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java b/src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java
index c7dd2fac0..9f2578cd1 100644
--- a/src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java
+++ b/src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java
@@ -16,12 +16,12 @@
 
 package com.google.gson.internal.bind;
 
+import com.github.gv2011.jsoncore.JsonArray;
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonNull;
+import com.github.gv2011.jsoncore.JsonObject;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.github.gv2011.jsoncore.JsonWriter;
-import com.google.gson.JsonArray;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonNull;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonPrimitive;
 
 import java.io.IOException;
 import java.io.Writer;
diff --git a/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java b/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java
index a38e1dca8..3bf7e5363 100644
--- a/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java
+++ b/src/main/java/com/google/gson/internal/bind/MapTypeAdapterFactory.java
@@ -16,20 +16,20 @@
 
 package com.google.gson.internal.bind;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.github.gv2011.jsoncore.JsonReader;
-import com.github.gv2011.jsoncore.JsonReaderInternalAccess;
 import com.github.gv2011.jsoncore.JsonToken;
 import com.github.gv2011.jsoncore.JsonWriter;
+import com.github.gv2011.jsoncore.imp.JsonReaderInternalAccess;
+import com.github.gv2011.jsoncore.imp.Streams;
 import com.google.gson.Gson;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSyntaxException;
 import com.google.gson.TypeAdapter;
 import com.google.gson.TypeAdapterFactory;
 import com.google.gson.internal.$Gson$Types;
 import com.google.gson.internal.ConstructorConstructor;
 import com.google.gson.internal.ObjectConstructor;
-import com.google.gson.internal.Streams;
 import com.google.gson.reflect.TypeToken;
 
 import java.io.IOException;
diff --git a/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java b/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java
index d86b59e78..af5a85e5f 100644
--- a/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java
+++ b/src/main/java/com/google/gson/internal/bind/ObjectTypeAdapter.java
@@ -19,10 +19,10 @@
 import com.github.gv2011.jsoncore.JsonReader;
 import com.github.gv2011.jsoncore.JsonToken;
 import com.github.gv2011.jsoncore.JsonWriter;
+import com.github.gv2011.jsoncore.imp.LinkedTreeMap;
 import com.google.gson.Gson;
 import com.google.gson.TypeAdapter;
 import com.google.gson.TypeAdapterFactory;
-import com.google.gson.internal.LinkedTreeMap;
 import com.google.gson.reflect.TypeToken;
 
 import java.io.IOException;
diff --git a/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java b/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java
index 109714476..b6d18c32a 100644
--- a/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java
+++ b/src/main/java/com/google/gson/internal/bind/TreeTypeAdapter.java
@@ -16,19 +16,19 @@
 
 package com.google.gson.internal.bind;
 
+import com.github.gv2011.jsoncore.JsonElement;
 import com.github.gv2011.jsoncore.JsonReader;
 import com.github.gv2011.jsoncore.JsonWriter;
+import com.github.gv2011.jsoncore.imp.Preconditions;
+import com.github.gv2011.jsoncore.imp.Streams;
 import com.google.gson.Gson;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
-import com.google.gson.JsonElement;
 import com.google.gson.JsonParseException;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
 import com.google.gson.TypeAdapter;
 import com.google.gson.TypeAdapterFactory;
-import com.google.gson.internal.$Gson$Preconditions;
-import com.google.gson.internal.Streams;
 import com.google.gson.reflect.TypeToken;
 
 import java.io.IOException;
@@ -132,7 +132,7 @@ public static TypeAdapterFactory newTypeHierarchyFactory(
       deserializer = typeAdapter instanceof JsonDeserializer
           ? (JsonDeserializer<?>) typeAdapter
           : null;
-      $Gson$Preconditions.checkArgument(serializer != null || deserializer != null);
+      Preconditions.checkArgument(serializer != null || deserializer != null);
       this.exactType = exactType;
       this.matchRawType = matchRawType;
       this.hierarchyType = hierarchyType;
diff --git a/src/main/java/com/google/gson/internal/bind/TypeAdapters.java b/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
index 0152af26c..215d67283 100644
--- a/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
+++ b/src/main/java/com/google/gson/internal/bind/TypeAdapters.java
@@ -40,21 +40,21 @@
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.concurrent.atomic.AtomicIntegerArray;
 
+import com.github.gv2011.jsoncore.JsonArray;
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonNull;
+import com.github.gv2011.jsoncore.JsonObject;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.github.gv2011.jsoncore.JsonReader;
 import com.github.gv2011.jsoncore.JsonToken;
 import com.github.gv2011.jsoncore.JsonWriter;
+import com.github.gv2011.jsoncore.imp.LazilyParsedNumber;
 import com.google.gson.Gson;
-import com.google.gson.JsonArray;
-import com.google.gson.JsonElement;
 import com.google.gson.JsonIOException;
-import com.google.gson.JsonNull;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSyntaxException;
 import com.google.gson.TypeAdapter;
 import com.google.gson.TypeAdapterFactory;
 import com.google.gson.annotations.SerializedName;
-import com.google.gson.internal.LazilyParsedNumber;
 import com.google.gson.reflect.TypeToken;
 
 /**
diff --git a/src/main/java/com/google/gson/reflect/TypeToken.java b/src/main/java/com/google/gson/reflect/TypeToken.java
index e16e8e6dc..a6fe98f2d 100644
--- a/src/main/java/com/google/gson/reflect/TypeToken.java
+++ b/src/main/java/com/google/gson/reflect/TypeToken.java
@@ -16,8 +16,9 @@
 
 package com.google.gson.reflect;
 
+import com.github.gv2011.jsoncore.imp.Preconditions;
 import com.google.gson.internal.$Gson$Types;
-import com.google.gson.internal.$Gson$Preconditions;
+
 import java.lang.reflect.GenericArrayType;
 import java.lang.reflect.ParameterizedType;
 import java.lang.reflect.Type;
@@ -69,7 +70,7 @@ protected TypeToken() {
    */
   @SuppressWarnings("unchecked")
   TypeToken(Type type) {
-    this.type = $Gson$Types.canonicalize($Gson$Preconditions.checkNotNull(type));
+    this.type = $Gson$Types.canonicalize(Preconditions.checkNotNull(type));
     this.rawType = (Class<? super T>) $Gson$Types.getRawType(this.type);
     this.hashCode = this.type.hashCode();
   }
diff --git a/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java b/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java
index 5ce65d748..5f3d83701 100644
--- a/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java
+++ b/src/test/java/com/google/gson/DefaultDateTypeAdapterTest.java
@@ -21,6 +21,9 @@
 import java.util.Date;
 import java.util.Locale;
 import java.util.TimeZone;
+
+import com.github.gv2011.jsoncore.JsonPrimitive;
+
 import junit.framework.TestCase;
 
 /**
diff --git a/src/test/java/com/google/gson/DefaultMapJsonSerializerTest.java b/src/test/java/com/google/gson/DefaultMapJsonSerializerTest.java
index 5c0619535..6392f1135 100644
--- a/src/test/java/com/google/gson/DefaultMapJsonSerializerTest.java
+++ b/src/test/java/com/google/gson/DefaultMapJsonSerializerTest.java
@@ -16,6 +16,8 @@
 
 package com.google.gson;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonObject;
 import com.google.gson.reflect.TypeToken;
 import java.lang.reflect.Type;
 import java.util.HashMap;
diff --git a/src/test/java/com/google/gson/GsonTypeAdapterTest.java b/src/test/java/com/google/gson/GsonTypeAdapterTest.java
index decb93d83..228cfca94 100644
--- a/src/test/java/com/google/gson/GsonTypeAdapterTest.java
+++ b/src/test/java/com/google/gson/GsonTypeAdapterTest.java
@@ -20,6 +20,10 @@
 import java.math.BigInteger;
 import java.util.concurrent.atomic.AtomicInteger;
 import java.util.concurrent.atomic.AtomicLong;
+
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonPrimitive;
+
 import junit.framework.TestCase;
 
 /**
diff --git a/src/test/java/com/google/gson/JsonArrayTest.java b/src/test/java/com/google/gson/JsonArrayTest.java
index b77d6f1b4..cbe0ccd2e 100644
--- a/src/test/java/com/google/gson/JsonArrayTest.java
+++ b/src/test/java/com/google/gson/JsonArrayTest.java
@@ -18,6 +18,10 @@
 
 import junit.framework.TestCase;
 
+import com.github.gv2011.jsoncore.JsonArray;
+import com.github.gv2011.jsoncore.JsonNull;
+import com.github.gv2011.jsoncore.JsonObject;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.google.gson.common.MoreAsserts;
 
 /**
diff --git a/src/test/java/com/google/gson/JsonNullTest.java b/src/test/java/com/google/gson/JsonNullTest.java
index 6157e3876..1c5b026be 100644
--- a/src/test/java/com/google/gson/JsonNullTest.java
+++ b/src/test/java/com/google/gson/JsonNullTest.java
@@ -16,6 +16,7 @@
 
 package com.google.gson;
 
+import com.github.gv2011.jsoncore.JsonNull;
 import com.google.gson.common.MoreAsserts;
 import junit.framework.TestCase;
 
diff --git a/src/test/java/com/google/gson/JsonObjectTest.java b/src/test/java/com/google/gson/JsonObjectTest.java
index 9423a24d2..06c0d04eb 100644
--- a/src/test/java/com/google/gson/JsonObjectTest.java
+++ b/src/test/java/com/google/gson/JsonObjectTest.java
@@ -16,6 +16,11 @@
 
 package com.google.gson;
 
+import com.github.gv2011.jsoncore.JsonArray;
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonNull;
+import com.github.gv2011.jsoncore.JsonObject;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.google.gson.common.MoreAsserts;
 
 import junit.framework.TestCase;
diff --git a/src/test/java/com/google/gson/JsonParserTest.java b/src/test/java/com/google/gson/JsonParserTest.java
index 9ef2b8bf1..54b655109 100644
--- a/src/test/java/com/google/gson/JsonParserTest.java
+++ b/src/test/java/com/google/gson/JsonParserTest.java
@@ -22,9 +22,11 @@
 
 import junit.framework.TestCase;
 
+import com.github.gv2011.jsoncore.JsonArray;
+import com.github.gv2011.jsoncore.JsonElement;
 import com.github.gv2011.jsoncore.JsonReader;
+import com.github.gv2011.jsoncore.imp.Streams;
 import com.google.gson.common.TestTypes.BagOfPrimitives;
-import com.google.gson.internal.Streams;
 
 /**
  * Unit test for {@link JsonParser}
diff --git a/src/test/java/com/google/gson/JsonPrimitiveTest.java b/src/test/java/com/google/gson/JsonPrimitiveTest.java
index fa3611c93..8c8ae05b7 100644
--- a/src/test/java/com/google/gson/JsonPrimitiveTest.java
+++ b/src/test/java/com/google/gson/JsonPrimitiveTest.java
@@ -16,6 +16,7 @@
 
 package com.google.gson;
 
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.google.gson.common.MoreAsserts;
 
 import junit.framework.TestCase;
diff --git a/src/test/java/com/google/gson/LongSerializationPolicyTest.java b/src/test/java/com/google/gson/LongSerializationPolicyTest.java
index d0a063208..d3dd236a0 100644
--- a/src/test/java/com/google/gson/LongSerializationPolicyTest.java
+++ b/src/test/java/com/google/gson/LongSerializationPolicyTest.java
@@ -16,6 +16,9 @@
 
 package com.google.gson;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonPrimitive;
+
 import junit.framework.TestCase;
 
 /**
diff --git a/src/test/java/com/google/gson/MixedStreamTest.java b/src/test/java/com/google/gson/MixedStreamTest.java
index 2deb15452..a85ed52c8 100644
--- a/src/test/java/com/google/gson/MixedStreamTest.java
+++ b/src/test/java/com/google/gson/MixedStreamTest.java
@@ -16,6 +16,7 @@
 
 package com.google.gson;
 
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.github.gv2011.jsoncore.JsonReader;
 import com.github.gv2011.jsoncore.JsonWriter;
 import com.google.gson.reflect.TypeToken;
diff --git a/src/test/java/com/google/gson/ParameterizedTypeFixtures.java b/src/test/java/com/google/gson/ParameterizedTypeFixtures.java
index 0959ee429..1cb579262 100644
--- a/src/test/java/com/google/gson/ParameterizedTypeFixtures.java
+++ b/src/test/java/com/google/gson/ParameterizedTypeFixtures.java
@@ -16,6 +16,8 @@
 
 package com.google.gson;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonObject;
 import com.google.gson.internal.$Gson$Types;
 
 import com.google.gson.internal.Primitives;
diff --git a/src/test/java/com/google/gson/common/TestTypes.java b/src/test/java/com/google/gson/common/TestTypes.java
index 11d3d0abe..8dc3b3e7a 100644
--- a/src/test/java/com/google/gson/common/TestTypes.java
+++ b/src/test/java/com/google/gson/common/TestTypes.java
@@ -19,12 +19,12 @@
 import java.lang.reflect.Type;
 import java.util.Collection;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonObject;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
 import com.google.gson.JsonParseException;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
 import com.google.gson.annotations.SerializedName;
diff --git a/src/test/java/com/google/gson/functional/CircularReferenceTest.java b/src/test/java/com/google/gson/functional/CircularReferenceTest.java
index d352e2418..a95588bef 100644
--- a/src/test/java/com/google/gson/functional/CircularReferenceTest.java
+++ b/src/test/java/com/google/gson/functional/CircularReferenceTest.java
@@ -21,10 +21,10 @@
 
 import junit.framework.TestCase;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonObject;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
 import com.google.gson.common.TestTypes.ClassOverridingEquals;
diff --git a/src/test/java/com/google/gson/functional/CollectionTest.java b/src/test/java/com/google/gson/functional/CollectionTest.java
index 9a8f707b4..cf2fcf786 100644
--- a/src/test/java/com/google/gson/functional/CollectionTest.java
+++ b/src/test/java/com/google/gson/functional/CollectionTest.java
@@ -31,10 +31,10 @@
 import java.util.Stack;
 import java.util.Vector;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
 import com.google.gson.common.MoreAsserts;
diff --git a/src/test/java/com/google/gson/functional/CustomDeserializerTest.java b/src/test/java/com/google/gson/functional/CustomDeserializerTest.java
index c53db7f23..49c722ad7 100644
--- a/src/test/java/com/google/gson/functional/CustomDeserializerTest.java
+++ b/src/test/java/com/google/gson/functional/CustomDeserializerTest.java
@@ -16,12 +16,12 @@
 
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonObject;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
 import com.google.gson.JsonParseException;
 import com.google.gson.common.TestTypes.Base;
 import com.google.gson.common.TestTypes.ClassWithBaseField;
diff --git a/src/test/java/com/google/gson/functional/CustomSerializerTest.java b/src/test/java/com/google/gson/functional/CustomSerializerTest.java
index c8095463a..0b45a177e 100644
--- a/src/test/java/com/google/gson/functional/CustomSerializerTest.java
+++ b/src/test/java/com/google/gson/functional/CustomSerializerTest.java
@@ -16,11 +16,11 @@
 
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonArray;
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonObject;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import com.google.gson.JsonArray;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
 import com.google.gson.common.TestTypes.Base;
diff --git a/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java b/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java
index b452849dd..66908e398 100644
--- a/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java
+++ b/src/test/java/com/google/gson/functional/CustomTypeAdaptersTest.java
@@ -15,15 +15,15 @@
  */
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonObject;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.InstanceCreator;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
 import com.google.gson.JsonParseException;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
 import com.google.gson.common.TestTypes.BagOfPrimitives;
diff --git a/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java b/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
index e0dc844c0..85e5b677c 100644
--- a/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
+++ b/src/test/java/com/google/gson/functional/DefaultTypeAdaptersTest.java
@@ -15,18 +15,18 @@
  */
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonArray;
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonNull;
+import com.github.gv2011.jsoncore.JsonObject;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.github.gv2011.jsoncore.JsonReader;
 import com.github.gv2011.jsoncore.JsonWriter;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import com.google.gson.JsonArray;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonNull;
-import com.google.gson.JsonObject;
 import com.google.gson.JsonParseException;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSyntaxException;
 import com.google.gson.TypeAdapter;
 import com.google.gson.reflect.TypeToken;
diff --git a/src/test/java/com/google/gson/functional/EnumTest.java b/src/test/java/com/google/gson/functional/EnumTest.java
index 4a9f05b59..f167fdc5d 100644
--- a/src/test/java/com/google/gson/functional/EnumTest.java
+++ b/src/test/java/com/google/gson/functional/EnumTest.java
@@ -16,13 +16,13 @@
 
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
-import com.google.gson.JsonElement;
 import com.google.gson.JsonParseException;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
 import com.google.gson.annotations.SerializedName;
diff --git a/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java b/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java
index 2eca8bb4f..6135935d7 100644
--- a/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java
+++ b/src/test/java/com/google/gson/functional/ExclusionStrategyFunctionalTest.java
@@ -16,12 +16,13 @@
 
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonObject;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.google.gson.ExclusionStrategy;
 import com.google.gson.FieldAttributes;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonPrimitive;
+
 import java.lang.annotation.ElementType;
 import java.lang.annotation.Retention;
 import java.lang.annotation.RetentionPolicy;
diff --git a/src/test/java/com/google/gson/functional/InheritanceTest.java b/src/test/java/com/google/gson/functional/InheritanceTest.java
index b93ba0b59..bea6e0f1b 100644
--- a/src/test/java/com/google/gson/functional/InheritanceTest.java
+++ b/src/test/java/com/google/gson/functional/InheritanceTest.java
@@ -15,10 +15,10 @@
  */
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonArray;
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonObject;
 import com.google.gson.Gson;
-import com.google.gson.JsonArray;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
 import com.google.gson.common.TestTypes.BagOfPrimitives;
 import com.google.gson.common.TestTypes.Base;
 import com.google.gson.common.TestTypes.ClassWithBaseArrayField;
diff --git a/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java b/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java
index 91f4e8350..a1420c0ea 100644
--- a/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java
+++ b/src/test/java/com/google/gson/functional/JsonAdapterAnnotationOnClassesTest.java
@@ -16,15 +16,15 @@
 
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.github.gv2011.jsoncore.JsonReader;
 import com.github.gv2011.jsoncore.JsonWriter;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
-import com.google.gson.JsonElement;
 import com.google.gson.JsonParseException;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
 import com.google.gson.TypeAdapter;
diff --git a/src/test/java/com/google/gson/functional/JsonArrayTest.java b/src/test/java/com/google/gson/functional/JsonArrayTest.java
index 22a479b85..b837f324f 100644
--- a/src/test/java/com/google/gson/functional/JsonArrayTest.java
+++ b/src/test/java/com/google/gson/functional/JsonArrayTest.java
@@ -16,11 +16,12 @@
 
 package com.google.gson.functional;
 
-import com.google.gson.JsonArray;
 import junit.framework.TestCase;
 
 import java.math.BigInteger;
 
+import com.github.gv2011.jsoncore.JsonArray;
+
 /**
  * Functional tests for adding primitives to a JsonArray.
  *
diff --git a/src/test/java/com/google/gson/functional/JsonParserTest.java b/src/test/java/com/google/gson/functional/JsonParserTest.java
index 44f4477cb..01a0ce86e 100644
--- a/src/test/java/com/google/gson/functional/JsonParserTest.java
+++ b/src/test/java/com/google/gson/functional/JsonParserTest.java
@@ -16,12 +16,12 @@
 
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonArray;
+import com.github.gv2011.jsoncore.JsonObject;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.google.gson.Gson;
-import com.google.gson.JsonArray;
-import com.google.gson.JsonObject;
 import com.google.gson.JsonParseException;
 import com.google.gson.JsonParser;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSyntaxException;
 import com.google.gson.common.TestTypes.BagOfPrimitives;
 import com.google.gson.common.TestTypes.Nested;
diff --git a/src/test/java/com/google/gson/functional/JsonTreeTest.java b/src/test/java/com/google/gson/functional/JsonTreeTest.java
index a64794030..46afcf222 100644
--- a/src/test/java/com/google/gson/functional/JsonTreeTest.java
+++ b/src/test/java/com/google/gson/functional/JsonTreeTest.java
@@ -1,9 +1,9 @@
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonObject;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.google.gson.Gson;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.common.TestTypes.BagOfPrimitives;
 import java.util.Map;
 import java.util.Map.Entry;
diff --git a/src/test/java/com/google/gson/functional/MapTest.java b/src/test/java/com/google/gson/functional/MapTest.java
index 154ecf558..f851ad561 100755
--- a/src/test/java/com/google/gson/functional/MapTest.java
+++ b/src/test/java/com/google/gson/functional/MapTest.java
@@ -28,14 +28,14 @@
 import java.util.concurrent.ConcurrentNavigableMap;
 import java.util.concurrent.ConcurrentSkipListMap;
 
+import com.github.gv2011.jsoncore.JsonArray;
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.InstanceCreator;
-import com.google.gson.JsonArray;
-import com.google.gson.JsonElement;
 import com.google.gson.JsonParseException;
 import com.google.gson.JsonParser;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
 import com.google.gson.JsonSyntaxException;
diff --git a/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java b/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java
index 7ecbffc84..1cfdff0df 100644
--- a/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java
+++ b/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java
@@ -16,8 +16,8 @@
 
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonObject;
 import com.google.gson.Gson;
-import com.google.gson.JsonObject;
 
 import junit.framework.TestCase;
 
diff --git a/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java b/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java
index 7939a8c85..11c7f057d 100755
--- a/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java
+++ b/src/test/java/com/google/gson/functional/NullObjectAndFieldTest.java
@@ -16,11 +16,11 @@
 
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonNull;
+import com.github.gv2011.jsoncore.JsonObject;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonNull;
-import com.google.gson.JsonObject;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
 import com.google.gson.JsonSerializationContext;
diff --git a/src/test/java/com/google/gson/functional/ObjectTest.java b/src/test/java/com/google/gson/functional/ObjectTest.java
index de1219a6a..ea342681a 100644
--- a/src/test/java/com/google/gson/functional/ObjectTest.java
+++ b/src/test/java/com/google/gson/functional/ObjectTest.java
@@ -16,11 +16,11 @@
 
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonObject;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.InstanceCreator;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
 import com.google.gson.JsonParseException;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
diff --git a/src/test/java/com/google/gson/functional/PrimitiveTest.java b/src/test/java/com/google/gson/functional/PrimitiveTest.java
index bb28ed1ec..2d0478322 100644
--- a/src/test/java/com/google/gson/functional/PrimitiveTest.java
+++ b/src/test/java/com/google/gson/functional/PrimitiveTest.java
@@ -16,9 +16,9 @@
 
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSyntaxException;
 import com.google.gson.LongSerializationPolicy;
 import com.google.gson.reflect.TypeToken;
diff --git a/src/test/java/com/google/gson/functional/PrintFormattingTest.java b/src/test/java/com/google/gson/functional/PrintFormattingTest.java
index 7dcbc23c3..d3feb5e4b 100644
--- a/src/test/java/com/google/gson/functional/PrintFormattingTest.java
+++ b/src/test/java/com/google/gson/functional/PrintFormattingTest.java
@@ -16,9 +16,9 @@
 
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonObject;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import com.google.gson.JsonObject;
 import com.google.gson.common.TestTypes.BagOfPrimitives;
 import com.google.gson.common.TestTypes.ClassWithTransientFields;
 import com.google.gson.common.TestTypes.Nested;
diff --git a/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java b/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java
index 4ace8a747..cec3e8fc4 100644
--- a/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java
+++ b/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java
@@ -21,17 +21,17 @@
 
 import junit.framework.TestCase;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonObject;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.github.gv2011.jsoncore.JsonReader;
 import com.github.gv2011.jsoncore.JsonWriter;
+import com.github.gv2011.jsoncore.imp.Streams;
 import com.google.gson.Gson;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
 import com.google.gson.JsonParseException;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.TypeAdapter;
 import com.google.gson.TypeAdapterFactory;
 import com.google.gson.annotations.JsonAdapter;
-import com.google.gson.internal.Streams;
 import com.google.gson.reflect.TypeToken;
 
 /**
diff --git a/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java b/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java
index 76d91432e..9041bc4e8 100644
--- a/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java
+++ b/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java
@@ -16,13 +16,13 @@
 
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonArray;
+import com.github.gv2011.jsoncore.JsonObject;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.github.gv2011.jsoncore.JsonReader;
 import com.github.gv2011.jsoncore.JsonWriter;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import com.google.gson.JsonArray;
-import com.google.gson.JsonObject;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSyntaxException;
 import com.google.gson.TypeAdapter;
 import com.google.gson.reflect.TypeToken;
diff --git a/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java b/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
index ad737ec51..f999c6c01 100644
--- a/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
+++ b/src/test/java/com/google/gson/functional/TreeTypeAdaptersTest.java
@@ -24,13 +24,13 @@
 
 import junit.framework.TestCase;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
-import com.google.gson.JsonElement;
 import com.google.gson.JsonParseException;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
 import com.google.gson.reflect.TypeToken;
diff --git a/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java b/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java
index c10645a48..ff188e65e 100644
--- a/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java
+++ b/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java
@@ -16,14 +16,14 @@
 
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.github.gv2011.jsoncore.JsonReader;
 import com.github.gv2011.jsoncore.JsonWriter;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
 import com.google.gson.TypeAdapter;
diff --git a/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java b/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java
index 25b9c3436..b24bc1491 100644
--- a/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java
+++ b/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java
@@ -16,14 +16,14 @@
 
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonElement;
+import com.github.gv2011.jsoncore.JsonObject;
+import com.github.gv2011.jsoncore.JsonPrimitive;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
-import com.google.gson.JsonElement;
-import com.google.gson.JsonObject;
 import com.google.gson.JsonParseException;
-import com.google.gson.JsonPrimitive;
 import com.google.gson.JsonSerializationContext;
 import com.google.gson.JsonSerializer;
 import java.lang.reflect.Type;
diff --git a/src/test/java/com/google/gson/functional/UncategorizedTest.java b/src/test/java/com/google/gson/functional/UncategorizedTest.java
index 0ac038035..ea7471c72 100644
--- a/src/test/java/com/google/gson/functional/UncategorizedTest.java
+++ b/src/test/java/com/google/gson/functional/UncategorizedTest.java
@@ -15,11 +15,11 @@
  */
 package com.google.gson.functional;
 
+import com.github.gv2011.jsoncore.JsonElement;
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonDeserializer;
-import com.google.gson.JsonElement;
 import com.google.gson.JsonParseException;
 import com.google.gson.common.TestTypes.BagOfPrimitives;
 import com.google.gson.common.TestTypes.ClassOverridingEquals;
diff --git a/src/test/java/com/google/gson/internal/LazilyParsedNumberTest.java b/src/test/java/com/google/gson/internal/LazilyParsedNumberTest.java
index f108fa0de..9775e2985 100644
--- a/src/test/java/com/google/gson/internal/LazilyParsedNumberTest.java
+++ b/src/test/java/com/google/gson/internal/LazilyParsedNumberTest.java
@@ -15,6 +15,8 @@
  */
 package com.google.gson.internal;
 
+import com.github.gv2011.jsoncore.imp.LazilyParsedNumber;
+
 import junit.framework.TestCase;
 
 public class LazilyParsedNumberTest extends TestCase {
diff --git a/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java b/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
index 580d25a57..722150861 100644
--- a/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
+++ b/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
@@ -24,6 +24,7 @@
 
 import junit.framework.TestCase;
 
+import com.github.gv2011.jsoncore.imp.LinkedTreeMap;
 import com.google.gson.common.MoreAsserts;
 
 public final class LinkedTreeMapTest extends TestCase {
diff --git a/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java b/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java
index d909ac6e6..5022f5e31 100644
--- a/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java
+++ b/src/test/java/com/google/gson/internal/bind/JsonElementReaderTest.java
@@ -16,9 +16,9 @@
 
 package com.google.gson.internal.bind;
 
+import com.github.gv2011.jsoncore.JsonElement;
 import com.github.gv2011.jsoncore.JsonToken;
-import com.github.gv2011.jsoncore.JsonTreeReader;
-import com.google.gson.JsonElement;
+import com.github.gv2011.jsoncore.imp.JsonTreeReader;
 import com.google.gson.JsonParser;
 
 import java.io.IOException;
diff --git a/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java b/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java
index e07014d3f..fa534b05c 100644
--- a/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java
+++ b/src/test/java/com/google/gson/internal/bind/JsonTreeWriterTest.java
@@ -16,8 +16,10 @@
 
 package com.google.gson.internal.bind;
 
-import com.google.gson.JsonNull;
 import java.io.IOException;
+
+import com.github.gv2011.jsoncore.JsonNull;
+
 import junit.framework.TestCase;
 
 @SuppressWarnings("resource")
