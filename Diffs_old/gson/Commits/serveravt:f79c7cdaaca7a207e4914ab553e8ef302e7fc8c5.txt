diff --git a/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java b/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java
index b0f5802a4..8c3c94f86 100644
--- a/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java
+++ b/extras/src/main/java/com/google/gson/typeadapters/RuntimeTypeAdapterFactory.java
@@ -247,12 +247,12 @@ private RuntimeTypeAdapterFactory(Class<?> baseType, String typeFieldName) {
               + "; did you forget to register a subtype?");
         }
         JsonObject jsonObject = delegate.toJsonTree(value).getAsJsonObject();
-        if (jsonObject.has(typeFieldName)) {
-          throw new JsonParseException("cannot serialize " + srcType.getName()
-              + " because it already defines a field named " + typeFieldName);
-        }
+//        if (jsonObject.has(typeFieldName)) {
+//          throw new JsonParseException("cannot serialize " + srcType.getName()
+//              + " because it already defines a field named " + typeFieldName);
+//        }
         JsonObject clone = new JsonObject();
-        clone.add(typeFieldName, new JsonPrimitive(label));
+//        clone.add(typeFieldName, new JsonPrimitive(label));
         for (Map.Entry<String, JsonElement> e : jsonObject.entrySet()) {
           clone.add(e.getKey(), e.getValue());
         }
