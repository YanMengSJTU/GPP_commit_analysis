diff --git a/gson/src/main/java/com/google/gson/internal/Excluder.java b/gson/src/main/java/com/google/gson/internal/Excluder.java
index 1c71e3e70..ed067432d 100644
--- a/gson/src/main/java/com/google/gson/internal/Excluder.java
+++ b/gson/src/main/java/com/google/gson/internal/Excluder.java
@@ -171,10 +171,6 @@ public boolean excludeField(Field field, boolean serialize) {
       return true;
     }
 
-    if (isAnonymousOrLocal(field.getType())) {
-      return true;
-    }
-
     List<ExclusionStrategy> list = serialize ? serializationStrategies : deserializationStrategies;
     if (!list.isEmpty()) {
       FieldAttributes fieldAttributes = new FieldAttributes(field);
@@ -198,10 +194,6 @@ public boolean excludeClass(Class<?> clazz, boolean serialize) {
       return true;
     }
 
-    if (isAnonymousOrLocal(clazz)) {
-      return true;
-    }
-
     List<ExclusionStrategy> list = serialize ? serializationStrategies : deserializationStrategies;
     for (ExclusionStrategy exclusionStrategy : list) {
       if (exclusionStrategy.shouldSkipClass(clazz)) {
@@ -212,11 +204,6 @@ public boolean excludeClass(Class<?> clazz, boolean serialize) {
     return false;
   }
 
-  private boolean isAnonymousOrLocal(Class<?> clazz) {
-    return !Enum.class.isAssignableFrom(clazz)
-        && (clazz.isAnonymousClass() || clazz.isLocalClass());
-  }
-
   private boolean isInnerClass(Class<?> clazz) {
     return clazz.isMemberClass() && !isStatic(clazz);
   }
diff --git a/gson/src/test/java/com/google/gson/functional/ObjectTest.java b/gson/src/test/java/com/google/gson/functional/ObjectTest.java
index de1219a6a..9f09fe981 100644
--- a/gson/src/test/java/com/google/gson/functional/ObjectTest.java
+++ b/gson/src/test/java/com/google/gson/functional/ObjectTest.java
@@ -282,7 +282,7 @@ public void testPrivateNoArgConstructorDeserialization() throws Exception {
   }
 
   public void testAnonymousLocalClassesSerialization() throws Exception {
-    assertEquals("null", gson.toJson(new ClassWithNoFields() {
+    assertEquals("{}", gson.toJson(new ClassWithNoFields() {
       // empty anonymous class
     }));
   }
@@ -297,7 +297,7 @@ public JsonElement serialize(
               }
             }).create();
 
-    assertEquals("null", gson.toJson(new ClassWithNoFields() {
+    assertEquals("{}", gson.toJson(new ClassWithNoFields() {
       // empty anonymous class
     }));
   }
