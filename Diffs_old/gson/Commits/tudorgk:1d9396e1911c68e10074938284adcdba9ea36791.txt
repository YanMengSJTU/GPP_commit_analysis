diff --git a/src/main/java/com/economic/persistgson/internal/bind/ReflectiveTypeAdapterFactory.java b/src/main/java/com/economic/persistgson/internal/bind/ReflectiveTypeAdapterFactory.java
index 61bcb1727..d63087425 100644
--- a/src/main/java/com/economic/persistgson/internal/bind/ReflectiveTypeAdapterFactory.java
+++ b/src/main/java/com/economic/persistgson/internal/bind/ReflectiveTypeAdapterFactory.java
@@ -123,9 +123,9 @@ static boolean excludeField(Field f, boolean serialize, Excluder excluder) {
       public void write(JsonWriter writer, Object value)
           throws IOException, IllegalAccessException {
         if (value instanceof PersistObject) {
-          if (this.name.equals("persistMap")) {
-              Map<String, Object> persistMap = ((PersistObject) value).getPersistMap();
-              Set<String> keySet = ((PersistObject) value).getPersistMap().keySet();
+          if (this.name.equals(PersistObject.Companion.get_persistMapReflectiveFieldKey())) {
+              Map<String, Object> persistMap = ((PersistObject) value).get_persistMap();
+              Set<String> keySet = ((PersistObject) value).get_persistMap().keySet();
               for (String key : keySet) {
                   writer.name(key);
                   Object mapValue = persistMap.get(key);
diff --git a/src/main/java/com/economic/persistgson/persist/PersistObject.kt b/src/main/java/com/economic/persistgson/persist/PersistObject.kt
index 3e4842e5f..6c76e2488 100644
--- a/src/main/java/com/economic/persistgson/persist/PersistObject.kt
+++ b/src/main/java/com/economic/persistgson/persist/PersistObject.kt
@@ -13,9 +13,17 @@ package com.economic.persistgson.persist
  *
  * */
 interface PersistObject {
+    companion object {
+        /**
+         * The [_persistMapReflectiveFieldKey] is a key value that must correspond to the [PersistObject]
+         * field value.
+         * */
+        val _persistMapReflectiveFieldKey = "_persistMap"
+    }
+
     /**
-     * The [persistMap] is a mutable map that will contain any unknown properties that could not be
+     * The [_persistMap] is a mutable map that will contain any unknown properties that could not be
      * mapped to the Model object
      * */
-    val persistMap: MutableMap<String, Any>
+    val _persistMap: MutableMap<String, Any>
 }
diff --git a/src/main/java/com/economic/persistgson/persist/PersistReflectiveTypeAdapterFactory.kt b/src/main/java/com/economic/persistgson/persist/PersistReflectiveTypeAdapterFactory.kt
index fd4b5f938..e54adc8c7 100644
--- a/src/main/java/com/economic/persistgson/persist/PersistReflectiveTypeAdapterFactory.kt
+++ b/src/main/java/com/economic/persistgson/persist/PersistReflectiveTypeAdapterFactory.kt
@@ -11,10 +11,7 @@ import com.economic.persistgson.stream.JsonReader
 import com.economic.persistgson.stream.JsonToken
 import com.economic.persistgson.stream.JsonWriter
 
-import org.json.JSONObject
-
 import java.io.IOException
-import java.util.HashMap
 
 /**
  * Created by Tudor Dragan on 03/05/2017.
@@ -58,7 +55,7 @@ class PersistReflectiveTypeAdapterFactory(constructorConstructor: ConstructorCon
                             try {
                                 val processedJson = defaultReadAdapter.read(`in`)
                                 if (processedJson != null) {
-                                    instance.persistMap.put(name, processedJson)
+                                    instance._persistMap.put(name, processedJson)
                                 } else {
                                     `in`.skipValue()
                                 }
diff --git a/src/test/java/com/economic/persistgson/persist/PersistModelTest.kt b/src/test/java/com/economic/persistgson/persist/PersistModelTest.kt
index 95b3fac9e..eb81dcae7 100644
--- a/src/test/java/com/economic/persistgson/persist/PersistModelTest.kt
+++ b/src/test/java/com/economic/persistgson/persist/PersistModelTest.kt
@@ -15,14 +15,14 @@ class PersistModelTest : TestCase() {
 
     data class Customer(var customerNumber: Int? = null,
                         var customerContact: List<CustomerContact>? = null,
-                        override val persistMap: MutableMap<String, Any> = mutableMapOf()) : PersistObject
+                        override val _persistMap: MutableMap<String, Any> = mutableMapOf()) : PersistObject
 
     data class CustomerContact(var contactName: String? = "Generic Name",
                                var details: List<ContactDetails>? = null,
-                               override val persistMap: MutableMap<String, Any> = mutableMapOf()) : PersistObject
+                               override val _persistMap: MutableMap<String, Any> = mutableMapOf()) : PersistObject
 
     data class ContactDetails(@SerializedName("contactDetails") var contactInfo: String? = null,
-                              override val persistMap: MutableMap<String, Any> = mutableMapOf()) : PersistObject
+                              override val _persistMap: MutableMap<String, Any> = mutableMapOf()) : PersistObject
 
     val defaultCustomerJson = "{ \"customerNumber\": 1, \"unknownProperty\": 12, \"balance\": 123, \"demo\": true, \"customerContact\": [ { \"id\": 12345, \"contactName\": \"John Doe\", \"phones\": { \"home\": \"800-123-4567\", \"mobile\": \"877-123-1234\" }, \"creationDate\": \"1980-01-02\", \"email\": [ \"jd@example.com\", \"jd@example.org\" ], \"details\": [ { \"contactDetails\": \"Some contact details\" }, { \"contactDetails\": \"Some contact details\" }, { \"hello\": \"there!\", \"contactDetails\": \"Some contact details\" } ], \"emergencyContacts\": [ { \"name\": \"Jane Doe\", \"phone\": \"888-555-1212\", \"relationship\": \"spouse\" }, { \"name\": \"Justin Doe\", \"phone\": \"877-123-1212\", \"relationship\": \"parent\" } ] }, { \"id\": 12345, \"contactName\": \"John Doe\", \"phones\": { \"home\": \"800-123-4567\", \"mobile\": \"877-123-1234\" }, \"creationDate\": \"1980-01-02\", \"email\": [ \"jd@example.com\", \"jd@example.org\" ], \"details\": [ { \"contactDetails\": \"Some contact details\" }, { \"contactDetails\": \"Some contact details\" }, { \"hello\": \"there!\", \"contactDetails\": \"Some contact details\" } ], \"emergencyContacts\": [ { \"name\": \"Jane Doe\", \"phone\": \"888-555-1212\", \"relationship\": \"spouse\" }, { \"name\": \"Justin Doe\", \"phone\": \"877-123-1212\", \"relationship\": \"parent\" } ] } ], \"layout\": [ { \"layoutNumber\": 21, \"someOtherProperty\": [ { \"name\": \"Michael\" }, { \"name\": \"Michael\" } ] }, { \"layoutNumber\": 21, \"someOtherProperty\": [ { \"name\": \"Michael\" }, { \"name\": \"Michael\" } ] } ] }"
     val gson = Gson()
@@ -31,9 +31,9 @@ class PersistModelTest : TestCase() {
         val customer = gson.create<Customer>(defaultCustomerJson)
 
         Assert.assertNotNull(customer?.customerContact)
-        Assert.assertTrue(customer?.persistMap?.values?.size != 0)
+        Assert.assertTrue(customer?._persistMap?.values?.size != 0)
         Assert.assertEquals(1, customer?.customerNumber)
-        Assert.assertEquals(12.0, customer!!.persistMap["unknownProperty"])
+        Assert.assertEquals(12.0, customer!!._persistMap["unknownProperty"])
     }
 
     fun testWriteModelToJson() {
@@ -41,7 +41,7 @@ class PersistModelTest : TestCase() {
 
         customer.customerNumber = 27
         customer.customerContact = listOf(CustomerContact())
-        customer.persistMap["unknownProperty"] = "hello"
+        customer._persistMap["unknownProperty"] = "hello"
 
         val expectedJson = "{\"customerNumber\":27,\"customerContact\":[{\"contactName\":\"Generic Name\"}],\"unknownProperty\":\"hello\"}"
         val json = gson.toJson(customer)
@@ -70,9 +70,9 @@ class PersistModelTest : TestCase() {
     fun testNestedUnknownPropertyShouldBePresent() {
         val customer = gson.create<Customer>(defaultCustomerJson)
 
-        Assert.assertEquals("there!", customer!!.customerContact!![0].details!![2].persistMap["hello"])
-        Assert.assertEquals("800-123-4567", (customer.customerContact!![0].persistMap["phones"] as Map<*, *>)["home"])
-        Assert.assertEquals("jd@example.com", (customer.customerContact!![0].persistMap["email"] as List<*>)[0])
+        Assert.assertEquals("there!", customer!!.customerContact!![0].details!![2]._persistMap["hello"])
+        Assert.assertEquals("800-123-4567", (customer.customerContact!![0]._persistMap["phones"] as Map<*, *>)["home"])
+        Assert.assertEquals("jd@example.com", (customer.customerContact!![0]._persistMap["email"] as List<*>)[0])
     }
 
     fun testAllPropertiesWithToManyReferenceSetFieldToNil() {
@@ -104,7 +104,7 @@ class PersistModelTest : TestCase() {
 
         Assert.assertNotNull(contactDetails)
         Assert.assertNull(contactDetails?.contactInfo)
-        Assert.assertEquals("Some contact details", contactDetails?.persistMap!!["contactInfo"])
+        Assert.assertEquals("Some contact details", contactDetails?._persistMap!!["contactInfo"])
     }
 }
 
