diff --git a/gson/src/main/java/com/google/gson/JsonArray.java b/gson/src/main/java/com/google/gson/JsonArray.java
index f2b3b31f5..fc4429ef2 100644
--- a/gson/src/main/java/com/google/gson/JsonArray.java
+++ b/gson/src/main/java/com/google/gson/JsonArray.java
@@ -172,6 +172,10 @@ public int size() {
     return elements.size();
   }
 
+  public boolean isEmpty(){
+    return elements.isEmpty();
+  }
+
   /**
    * Returns an iterator to navigate the elements of the array. Since the array is an ordered list,
    * the iterator navigates the elements in the order they were inserted.
@@ -374,7 +378,24 @@ public boolean getAsBoolean() {
 
   @Override
   public boolean equals(Object o) {
-    return (o == this) || (o instanceof JsonArray && ((JsonArray) o).elements.equals(elements));
+    if(o == this) return true;
+    if(o == null) return false;
+    if(o instanceof JsonArray){
+      JsonArray oArray = (JsonArray) o;
+      if(oArray.size() != this.size()) return false;
+      if(this.elements.equals(oArray.elements)) return true; //Simple List<> comparison, regardless the order
+      JsonArray oTemp = oArray.deepCopy(), thisTemp = this.deepCopy();
+      for (JsonElement compareElement : oArray) {
+        for (JsonElement thisElement : this) {
+          if(thisElement.equals(compareElement)){
+            oTemp.remove(compareElement);
+            thisTemp.remove(thisElement);
+          }
+        }
+      }
+      return oTemp.isEmpty() && thisTemp.isEmpty();
+    }
+    return false;
   }
 
   @Override
diff --git a/gson/src/main/java/com/google/gson/JsonObject.java b/gson/src/main/java/com/google/gson/JsonObject.java
index fa77d50f4..93889c93f 100644
--- a/gson/src/main/java/com/google/gson/JsonObject.java
+++ b/gson/src/main/java/com/google/gson/JsonObject.java
@@ -231,13 +231,13 @@ public boolean equals(Object o) {
     if(o == this) return true;
     if(o == null) return false;
     if(o instanceof JsonObject){
-      JsonObject jsonObject = (JsonObject) o;
-      if(jsonObject.size() != this.size()) return false;
+      JsonObject oObject = (JsonObject) o;
+      if(oObject.size() != this.size()) return false;
       if(!members.isEmpty()){
         for(Map.Entry<String,JsonElement> entry : members.entrySet()){
           String key = entry.getKey();
           JsonElement value = entry.getValue();
-          if(value == null || value.equals(jsonObject.get(key)))
+          if(value == null || !value.equals(oObject.get(key)))
             return false;
         }
       }
