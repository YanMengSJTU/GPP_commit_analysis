diff --git a/gson/j2objc/build.sh b/gson/j2objc/build.sh
index 42e2618ec..da6a3a05c 100755
--- a/gson/j2objc/build.sh
+++ b/gson/j2objc/build.sh
@@ -47,7 +47,7 @@ $J2OBJCC -Wno-deprecated -ObjC -o gsonobjc -ljre_emul -ljunit $BUILD_DIR_OBJC/*.
 
 #run tests, optionally
 echo "Running JUNIT tests as ObjC code ..."
-echo "./gsonobjc OrgJunitRunnerJUnitCore ComGoogleGsonCommentsTest"
+echo "./gsonobjc OrgJunitRunnerJUnitCore <TEST_NAMES>"
 OBJC_TEST_NAMES="$(find $BUILD_DIR_OBJC/*Test.h -exec grep -hw -m1 "$@interface" {} \; | sed 's/@interface//' | sed 's/ ().*//' | sed 's/ :.*//')"
 #echo $OBJC_TEST_NAMES
 for i in $OBJC_TEST_NAMES; do echo RUNNING: $i; ./gsonobjc org.junit.runner.JUnitCore $i; done > $BUILD_DIR/test_output.txt
diff --git a/gson/j2objc/readme.md b/gson/j2objc/readme.md
index ff5189b9d..792b6d484 100644
--- a/gson/j2objc/readme.md
+++ b/gson/j2objc/readme.md
@@ -85,6 +85,10 @@ Detailed Process: GSON java to objc with tests
 9. RUN the tests   
 ```for i in `cat test_names.txt`; do echo RUNNING: $i; ./gsonobjc org.junit.runner.JUnitCore $i; done```
 
+Build Script   
+------------   
+The [build.sh] script included here consolidates all of the above steps.   
+If you have javac and j2objc, you can define the paths at the top of that script and it should complete the process and run the tests.   
 
 
 Other Notes
