diff --git a/gson/j2objc/readme.md b/gson/j2objc/readme.md
index 97f4d80df..76f816eaf 100644
--- a/gson/j2objc/readme.md
+++ b/gson/j2objc/readme.md
@@ -1,10 +1,28 @@
 
-PROCESS NOTES
-=============
+GSON as a J2OBJC EXAMPLE
+========================
 
 Overview
 ----------
-start with json, no deps beyond simple java (cheating a little) 
+
+Premises: 
+* This project is an attempt to understand how to share code across iOS and Android using j2objc 
+* j2objc is one way to share code across iOS and Android, it is interesting because: 
+   * It focuses on native code (webviews and frameworks that use them are nonstarters for performance and tweaks reasons)
+   * It focuses on non UI code (the logic that should be shared and is not idiomatic and not lowest comment demonimator)
+   * It provides well written source that can be used to debug
+   * It is written with a testing focus in mind, tests can be run across platform (so you know semantics, not just syntax, are correct) 
+   * It is written with performance and memory footprint in mind
+   * It is open source and maintained by very smart and capable people (tom et al at google) 
+   * Out of the box it includes a JRE emulation library for core classes, and a useful and sensible set of 3rd party libs
+
+j2objc is intended to transpile (source -> source) java code to objective-C.   
+
+It's the DRY principle turned up to 11. Don't repeat yourself on other platforms either, if you can avoid it.   
+There are several ways to share native code on iOS and Android, these include C, j2objc, and maybe someday Kotlin and Swift.  j2objc is very well written and very performant and shares the code that you want to share, hence it is interesting and helpful.   
+
+For this project we have purposely chosen an existing Java library with a lot of source code and a lot of tests: gson. 
+This allows us to have a robust example that does not have any transitive dependencies not already supported by j2objc. 
 
 goal
 compile java (just to make sure it works, extra step to get in habit) 
