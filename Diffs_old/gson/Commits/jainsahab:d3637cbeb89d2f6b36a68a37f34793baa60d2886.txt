diff --git a/gson/src/main/java/com/google/gson/Gson.java b/gson/src/main/java/com/google/gson/Gson.java
index b66220201..e8b995260 100644
--- a/gson/src/main/java/com/google/gson/Gson.java
+++ b/gson/src/main/java/com/google/gson/Gson.java
@@ -274,10 +274,6 @@ public boolean htmlSafe() {
     return htmlSafe;
   }
 
-  public MissingFieldHandlingStrategy missingFieldHandler() {
-    return missingFieldHandlingStrategy;
-  }
-
   private TypeAdapter<Number> doubleAdapter(boolean serializeSpecialFloatingPointValues) {
     if (serializeSpecialFloatingPointValues) {
       return TypeAdapters.DOUBLE;
diff --git a/gson/src/main/java/com/google/gson/GsonBuilder.java b/gson/src/main/java/com/google/gson/GsonBuilder.java
index 54a45968c..7631bc983 100644
--- a/gson/src/main/java/com/google/gson/GsonBuilder.java
+++ b/gson/src/main/java/com/google/gson/GsonBuilder.java
@@ -353,7 +353,13 @@ public GsonBuilder addDeserializationExclusionStrategy(ExclusionStrategy strateg
   }
 
   /**
-   * adding MissingFieldHandlingStrategy
+   * Configures Gson to apply the passed in {@link MissingFieldHandlingStrategy} during deserialization.
+   *
+   * To maintain the backward compatibility, Gson still sets the missing fields as null if
+   * this strategy is not passed to the {@link GsonBuilder} while creating the {@link Gson} object.
+   *
+   * @param strategy a strategy to determine missing field's default values during deserialization.
+   * @return a reference to this {@code GsonBuilder} object to fulfill the "Builder" pattern
    */
   public GsonBuilder addMissingFieldHandlingStrategy(MissingFieldHandlingStrategy strategy) {
     this.missingFieldHandlingStrategy = strategy;
diff --git a/gson/src/main/java/com/google/gson/MissingFieldHandlingStrategy.java b/gson/src/main/java/com/google/gson/MissingFieldHandlingStrategy.java
index 12825c03f..3154ec1b6 100644
--- a/gson/src/main/java/com/google/gson/MissingFieldHandlingStrategy.java
+++ b/gson/src/main/java/com/google/gson/MissingFieldHandlingStrategy.java
@@ -1,8 +1,31 @@
+/*
+ * Copyright (C) 2017 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
 package com.google.gson;
 
 import com.google.gson.reflect.TypeToken;
 
 /**
+ * A strategy that is used to determine the value to assign to the field whose node was
+ * missing in Json.
+ * This strategy is implemented by the user and should be passed to {@link GsonBuilder#addMissingFieldHandlingStrategy(MissingFieldHandlingStrategy)} method
+ * so that Gson can use it.
+ * The {@link #handle(TypeToken, String)} is used by the Gson to determine the default value
+ * for a field based on the {@link TypeToken} and fieldName passed.
+ *
  * @author Prateek Jain
  */
 public interface MissingFieldHandlingStrategy {
diff --git a/gson/src/test/java/com/google/gson/functional/MissingFieldHandlingStrategyTest.java b/gson/src/test/java/com/google/gson/functional/MissingFieldHandlingStrategyTest.java
index bb57a9002..6b62c047a 100644
--- a/gson/src/test/java/com/google/gson/functional/MissingFieldHandlingStrategyTest.java
+++ b/gson/src/test/java/com/google/gson/functional/MissingFieldHandlingStrategyTest.java
@@ -1,3 +1,19 @@
+/*
+ * Copyright (C) 2017 Google Inc.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ * http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
 package com.google.gson.functional;
 
 import com.google.gson.Gson;
@@ -13,6 +29,8 @@
 import static org.junit.Assert.assertThat;
 
 /**
+ * Unit tests for {@link MissingFieldHandlingStrategy}
+ *
  * @author Prateek Jain
  */
 public class MissingFieldHandlingStrategyTest {
