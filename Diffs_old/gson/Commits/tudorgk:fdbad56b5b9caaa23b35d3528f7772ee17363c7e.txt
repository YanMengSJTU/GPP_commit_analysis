diff --git a/gson/src/main/java/com/economic/persistgson/internal/bind/ReflectiveTypeAdapterFactory.java b/gson/src/main/java/com/economic/persistgson/internal/bind/ReflectiveTypeAdapterFactory.java
index 1a874668b..c4bc08ba5 100644
--- a/gson/src/main/java/com/economic/persistgson/internal/bind/ReflectiveTypeAdapterFactory.java
+++ b/gson/src/main/java/com/economic/persistgson/internal/bind/ReflectiveTypeAdapterFactory.java
@@ -20,6 +20,7 @@
 import com.economic.persistgson.Gson;
 import com.economic.persistgson.TypeAdapter;
 import com.economic.persistgson.internal.ConstructorConstructor;
+import com.economic.persistgson.persist.PersistObject;
 import com.economic.persistgson.stream.JsonReader;
 import com.economic.persistgson.stream.JsonToken;
 import com.economic.persistgson.JsonSyntaxException;
@@ -120,6 +121,14 @@ static boolean excludeField(Field f, boolean serialize, Excluder excluder) {
       @Override
       public void write(JsonWriter writer, Object value)
           throws IOException, IllegalAccessException {
+        if (value instanceof PersistObject) {
+          if (this.name.equals("persistMap")) {
+            for (persistMapKey : value.persistMap.keys) {
+
+            }
+          }
+        }
+
         Object fieldValue = field.get(value);
         TypeAdapter t = jsonAdapterPresent ? typeAdapter
             : new TypeAdapterRuntimeTypeWrapper(context, typeAdapter, fieldType.getType());
diff --git a/gson/src/main/java/com/economic/persistgson/persist/PersistReflectiveTypeAdapterFactory.kt b/gson/src/main/java/com/economic/persistgson/persist/PersistReflectiveTypeAdapterFactory.kt
index 8769320ce..0980bc66a 100644
--- a/gson/src/main/java/com/economic/persistgson/persist/PersistReflectiveTypeAdapterFactory.kt
+++ b/gson/src/main/java/com/economic/persistgson/persist/PersistReflectiveTypeAdapterFactory.kt
@@ -31,10 +31,10 @@ class PersistReflectiveTypeAdapterFactory(constructorConstructor: ConstructorCon
         }
 
         val constructor = constructorConstructor.get(type)
-        return Adapter(constructor, getBoundFields(gson, type, raw))
+        return Adapter(gson, constructor, getBoundFields(gson, type, raw))
     }
 
-    class Adapter<T> internal constructor(private val constructor: ObjectConstructor<T>, private val boundFields: Map<String, ReflectiveTypeAdapterFactory.BoundField>) : TypeAdapter<T>() {
+    class Adapter<T> internal constructor(private val context: Gson, private val constructor: ObjectConstructor<T>, private val boundFields: Map<String, ReflectiveTypeAdapterFactory.BoundField>) : TypeAdapter<T>() {
 
         @Throws(IOException::class)
         override fun read(`in`: JsonReader): T? {
@@ -82,10 +82,7 @@ class PersistReflectiveTypeAdapterFactory(constructorConstructor: ConstructorCon
             out.beginObject()
             try {
                 for (boundField in boundFields.values) {
-                    if (boundField.writeField(value)) {
-                        out.name(boundField.name)
-                        boundField.write(out, value)
-                    }
+                    writeValueToBoundField(boundField, value, out)
                 }
             } catch (e: IllegalAccessException) {
                 throw AssertionError(e)
@@ -93,5 +90,12 @@ class PersistReflectiveTypeAdapterFactory(constructorConstructor: ConstructorCon
 
             out.endObject()
         }
+
+        private fun writeValueToBoundField(boundField: BoundField, value: T?, out: JsonWriter) {
+            if (boundField.writeField(value)) {
+                out.name(boundField.name)
+                boundField.write(out, value)
+            }
+        }
     }
 }
diff --git a/gson/src/test/java/com/economic/persistgson/persist/PersistJsonElementReaderTest.kt b/gson/src/test/java/com/economic/persistgson/persist/PersistJsonElementReaderTest.kt
index 56e07f7a9..b2607d215 100644
--- a/gson/src/test/java/com/economic/persistgson/persist/PersistJsonElementReaderTest.kt
+++ b/gson/src/test/java/com/economic/persistgson/persist/PersistJsonElementReaderTest.kt
@@ -2,6 +2,7 @@ package com.economic.persistgson.persist
 
 import com.economic.ecmfoundation.extensions.create
 import com.economic.persistgson.Gson
+import junit.framework.Assert
 import junit.framework.TestCase
 
 /**
@@ -12,24 +13,35 @@ import junit.framework.TestCase
 class PersistJsonElementReaderTest : TestCase() {
 
     data class Customer(var customerNumber: Int? = null,
-                        var customerContact: CustomerContact? = null) : PersistObject {
-        override val persistMap: MutableMap<String, Any> = mutableMapOf()
+                        var customerContact: List<CustomerContact>? = null,
+                        override val persistMap: MutableMap<String, Any> = mutableMapOf()) : PersistObject {
     }
 
-    data class CustomerContact(var contactName: String? = null) : PersistObject {
-        override val persistMap: MutableMap<String, Any> = mutableMapOf()
-    }
+    data class CustomerContact(var contactName: String? = null,
+                               var details: List<ContactDetails>? = null,
+                               override val persistMap: MutableMap<String, Any> = mutableMapOf()) : PersistObject
 
-    data class ContactDetails(var contactDetails: String? = null) : PersistObject{
-        override val persistMap: MutableMap<String, Any> = mutableMapOf()
-    }
+    data class ContactDetails(var contactDetails: String? = null,
+                              override val persistMap: MutableMap<String, Any> = mutableMapOf()) : PersistObject
 
+    fun testReadComplexJson() {
+        val jsonString = "{ \"customerNumber\": 1, \"unknownProperty\": 12, \"balance\": 123, \"demo\": true, \"customerContact\": [ { \"id\": 12345, \"contactName\": \"John Doe\", \"phones\": { \"home\": \"800-123-4567\", \"mobile\": \"877-123-1234\" }, \"creationDate\": \"1980-01-02\", \"email\": [ \"jd@example.com\", \"jd@example.org\" ], \"details\": [ { \"contactDetails\": \"sadasdsadadasdasd\" }, { \"contactDetails\": \"sadasdsadadasdasd\" }, { \"hello\": \"there!\", \"contactDetails\": \"sadasdsadadasdasd\" } ], \"emergencyContacts\": [ { \"name\": \"Jane Doe\", \"phone\": \"888-555-1212\", \"relationship\": \"spouse\" }, { \"name\": \"Justin Doe\", \"phone\": \"877-123-1212\", \"relationship\": \"parent\" } ] }, { \"id\": 12345, \"contactName\": \"John Doe\", \"phones\": { \"home\": \"800-123-4567\", \"mobile\": \"877-123-1234\" }, \"creationDate\": \"1980-01-02\", \"email\": [ \"jd@example.com\", \"jd@example.org\" ], \"details\": [ { \"contactDetails\": \"sadasdsadadasdasd\" }, { \"contactDetails\": \"sadasdsadadasdasd\" }, { \"hello\": \"there!\", \"contactDetails\": \"sadasdsadadasdasd\" } ], \"emergencyContacts\": [ { \"name\": \"Jane Doe\", \"phone\": \"888-555-1212\", \"relationship\": \"spouse\" }, { \"name\": \"Justin Doe\", \"phone\": \"877-123-1212\", \"relationship\": \"parent\" } ] } ], \"layout\": [ { \"layoutNumber\": 21, \"someOtherProperty\": [ { \"name\": \"safa\" }, { \"name\": \"safa\" } ] }, { \"layoutNumber\": 21, \"someOtherProperty\": [ { \"name\": \"safa\" }, { \"name\": \"safa\" } ] } ] }"
 
-    fun testComplexJson() {
-        val jsonString = "{ \"customerNumber\": 1, \"unknownProperty\": 12, \"balance\": 123, \"demo\": true, \"customerContact\": { \"id\": 12345, \"contactName\": \"John Doe\", \"phones\": { \"home\": \"800-123-4567\", \"mobile\": \"877-123-1234\" }, \"creationDate\": \"1980-01-02\", \"email\": [ \"jd@example.com\", \"jd@example.org\" ], \"details\": [{ \"contactDetails\": \"sadasdsadadasdasd\" }, { \"contactDetails\": \"sadasdsadadasdasd\" }, { \"hello\": \"there!\", \"contactDetails\": \"sadasdsadadasdasd\" } ], \"emergencyContacts\": [{ \"name\": \"Jane Doe\", \"phone\": \"888-555-1212\", \"relationship\": \"spouse\" }, { \"name\": \"Justin Doe\", \"phone\": \"877-123-1212\", \"relationship\": \"parent\" } ] }, \"layout\": [{ \"layoutNumber\": 21, \"someOtherProperty\": [{ \"name\": \"safa\" }, { \"name\": \"safa\" } ] }, { \"layoutNumber\": 21, \"someOtherProperty\": [{ \"name\": \"safa\" }, { \"name\": \"safa\" } ] } ] }"
+        val customer = Gson().create<Customer>(jsonString)
+
+    }
+
+    fun testWriteComplexJson() {
+        val jsonString = "{ \"customerNumber\": 1, \"unknownProperty\": 12, \"balance\": 123, \"demo\": true, \"customerContact\": [ { \"id\": 12345, \"contactName\": \"John Doe\", \"phones\": { \"home\": \"800-123-4567\", \"mobile\": \"877-123-1234\" }, \"creationDate\": \"1980-01-02\", \"email\": [ \"jd@example.com\", \"jd@example.org\" ], \"details\": [ { \"contactDetails\": \"sadasdsadadasdasd\" }, { \"contactDetails\": \"sadasdsadadasdasd\" }, { \"hello\": \"there!\", \"contactDetails\": \"sadasdsadadasdasd\" } ], \"emergencyContacts\": [ { \"name\": \"Jane Doe\", \"phone\": \"888-555-1212\", \"relationship\": \"spouse\" }, { \"name\": \"Justin Doe\", \"phone\": \"877-123-1212\", \"relationship\": \"parent\" } ] }, { \"id\": 12345, \"contactName\": \"John Doe\", \"phones\": { \"home\": \"800-123-4567\", \"mobile\": \"877-123-1234\" }, \"creationDate\": \"1980-01-02\", \"email\": [ \"jd@example.com\", \"jd@example.org\" ], \"details\": [ { \"contactDetails\": \"sadasdsadadasdasd\" }, { \"contactDetails\": \"sadasdsadadasdasd\" }, { \"hello\": \"there!\", \"contactDetails\": \"sadasdsadadasdasd\" } ], \"emergencyContacts\": [ { \"name\": \"Jane Doe\", \"phone\": \"888-555-1212\", \"relationship\": \"spouse\" }, { \"name\": \"Justin Doe\", \"phone\": \"877-123-1212\", \"relationship\": \"parent\" } ] } ], \"layout\": [ { \"layoutNumber\": 21, \"someOtherProperty\": [ { \"name\": \"safa\" }, { \"name\": \"safa\" } ] }, { \"layoutNumber\": 21, \"someOtherProperty\": [ { \"name\": \"safa\" }, { \"name\": \"safa\" } ] } ] }"
 
         val customer = Gson().create<Customer>(jsonString)
-        customer
+
+        val json = Gson().toJson(customer)
+        json
+
+        val customer2 = Gson().create<Customer>(json)
+
+        Assert.assertEquals(customer, customer2)
     }
 }
 
