diff --git a/gson/src/main/java/com/economic/persistgson/internal/bind/ReflectiveTypeAdapterFactory.java b/gson/src/main/java/com/economic/persistgson/internal/bind/ReflectiveTypeAdapterFactory.java
index e48d952b5..61bcb1727 100644
--- a/gson/src/main/java/com/economic/persistgson/internal/bind/ReflectiveTypeAdapterFactory.java
+++ b/gson/src/main/java/com/economic/persistgson/internal/bind/ReflectiveTypeAdapterFactory.java
@@ -133,22 +133,22 @@ public void write(JsonWriter writer, Object value)
                   t.write(writer, mapValue);
               }
           } else {
-              writer.name(this.name);
-              Object fieldValue = field.get(value);
-              TypeAdapter t = jsonAdapterPresent ? typeAdapter
-                      : new TypeAdapterRuntimeTypeWrapper(context, typeAdapter, fieldType.getType());
-              t.write(writer, fieldValue);
+              writeBoundField(writer, value);
           }
         } else {
+            writeBoundField(writer, value);
+        }
+      }
+
+        private void writeBoundField(JsonWriter writer, Object value) throws IOException, IllegalAccessException {
             writer.name(this.name);
             Object fieldValue = field.get(value);
             TypeAdapter t = jsonAdapterPresent ? typeAdapter
                     : new TypeAdapterRuntimeTypeWrapper(context, typeAdapter, fieldType.getType());
             t.write(writer, fieldValue);
         }
-      }
 
-      @Override
+        @Override
       public void read(JsonReader reader, Object value)
           throws IOException, IllegalAccessException {
         Object fieldValue = typeAdapter.read(reader);
diff --git a/gson/src/main/java/com/economic/persistgson/persist/PersistReflectiveTypeAdapterFactory.kt b/gson/src/main/java/com/economic/persistgson/persist/PersistReflectiveTypeAdapterFactory.kt
index 028689341..fd4b5f938 100644
--- a/gson/src/main/java/com/economic/persistgson/persist/PersistReflectiveTypeAdapterFactory.kt
+++ b/gson/src/main/java/com/economic/persistgson/persist/PersistReflectiveTypeAdapterFactory.kt
@@ -34,7 +34,9 @@ class PersistReflectiveTypeAdapterFactory(constructorConstructor: ConstructorCon
         return Adapter(gson, constructor, getBoundFields(gson, type, raw))
     }
 
-    class Adapter<T> internal constructor(private val context: Gson, private val constructor: ObjectConstructor<T>, private val boundFields: Map<String, ReflectiveTypeAdapterFactory.BoundField>) : TypeAdapter<T>() {
+    class Adapter<T> internal constructor(context: Gson, private val constructor: ObjectConstructor<T>, private val boundFields: Map<String, ReflectiveTypeAdapterFactory.BoundField>) : TypeAdapter<T>() {
+
+        val defaultReadAdapter: TypeAdapter<Any> = context.getAdapter(TypeToken.get(Any::class.java).rawType)
 
         @Throws(IOException::class)
         override fun read(`in`: JsonReader): T? {
@@ -53,8 +55,16 @@ class PersistReflectiveTypeAdapterFactory(constructorConstructor: ConstructorCon
                     if (field == null || !field.deserialized) {
                         // if instance is of type PersisObject
                         if (instance is PersistObject) {
-                            val parsedJson = JsonParser().parse(`in`)
-                            instance.persistMap.put(name,parsedJson)
+                            try {
+                                val processedJson = defaultReadAdapter.read(`in`)
+                                if (processedJson != null) {
+                                    instance.persistMap.put(name, processedJson)
+                                } else {
+                                    `in`.skipValue()
+                                }
+                            } catch (exception: Exception) {
+                                throw exception
+                            }
                         } else {
                             `in`.skipValue()
                         }
diff --git a/gson/src/test/java/com/economic/persistgson/persist/PersistJsonElementReaderTest.kt b/gson/src/test/java/com/economic/persistgson/persist/PersistJsonElementReaderTest.kt
index b2607d215..5725ece12 100644
--- a/gson/src/test/java/com/economic/persistgson/persist/PersistJsonElementReaderTest.kt
+++ b/gson/src/test/java/com/economic/persistgson/persist/PersistJsonElementReaderTest.kt
@@ -14,8 +14,7 @@ class PersistJsonElementReaderTest : TestCase() {
 
     data class Customer(var customerNumber: Int? = null,
                         var customerContact: List<CustomerContact>? = null,
-                        override val persistMap: MutableMap<String, Any> = mutableMapOf()) : PersistObject {
-    }
+                        override val persistMap: MutableMap<String, Any> = mutableMapOf()) : PersistObject
 
     data class CustomerContact(var contactName: String? = null,
                                var details: List<ContactDetails>? = null,
@@ -29,6 +28,7 @@ class PersistJsonElementReaderTest : TestCase() {
 
         val customer = Gson().create<Customer>(jsonString)
 
+
     }
 
     fun testWriteComplexJson() {
